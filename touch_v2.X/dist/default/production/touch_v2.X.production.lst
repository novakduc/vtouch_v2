

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec  6 17:16:31 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=4,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=4,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=4,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=4,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=4,class=CODE,delta=1
   166                           	psect	text143,global,reloc=4,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=4,class=CODE,delta=1
   171                           	psect	text148,global,reloc=4,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=4,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=4,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=4,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=4,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=4,class=CODE,delta=1
   183                           	psect	text160,global,reloc=4,class=CODE,delta=1
   184                           	psect	text161,global,reloc=4,class=CODE,delta=1
   185                           	psect	text162,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text163,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_cvoltage	offset=-4 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_h	offset=-1 (param)
   241 ;;_i	offset=-1 (param)
   242 ;;_cmd	offset=-1 (param)
   243 ;;_i	offset	0
   244 ;;_chan	offset=-1 (param)
   245 ;;_to_what	offset=-2 (param)
   246 ;;_u	offset	0
   247 ;;_s	offset=-2 (param)
   248 ;;_index	offset=-1 (param)
   249 ;;_arg	offset	0
   250 ;;_exp	offset	4
   251 ;;_sign	offset=-1 (param)
   252 ;;_val	offset=-5 (param)
   253 ;;_h	offset=-1 (param)
   254 ;;_flipper	offset=-1 (param)
   255 ;;_f	offset	0
   256 ;;_ap	offset	6
   257 ;;_s	offset=-3 (param)
   258 ;;_fmt	offset=-5 (param)
   259 ;;_line	offset=-1 (param)
   260 ;;_vterm	offset=-2 (param)
   261 ;;_numMilliseconds	offset=-2 (param)
   262 ;;_vterm	offset=-1 (param)
   263 ;;_r	offset=-1 (param)
   264 ;;_c	offset=-2 (param)
   265 ;;_strPtr	offset=-4 (param)
   266 ;;_strPtr	offset=-1 (param)
   267 ;;_delay	offset=-4 (param)
   268 ;;_strPtr	offset=-2 (param)
   269 ;;__this	offset=-2 (param)
   270 ;;_clearBuffer	offset=-3 (param)
   271 ;;_s	offset	0
   272 ;;_k	offset	2
   273 ;;_dest	offset=-2 (param)
   274 ;;_c	offset=-4 (param)
   275 ;;_n	offset=-6 (param)
   276 ;;_ap	offset	0
   277 ;;_fmt	offset=-3 (param)
   278 ;;_cfmt	offset	0
   279 ;;_fp	offset=-2 (param)
   280 ;;_fmt	offset=-4 (param)
   281 ;;_ap	offset=-6 (param)
   282 ;;_vfpfcnvrt$5118	offset	0
   283 ;;_vfpfcnvrt$5124	offset	2
   284 ;;_vfpfcnvrt$5117	offset	4
   285 ;;_llu	offset	6
   286 ;;_ll	offset	14
   287 ;;_f	offset	22
   288 ;;_ct	offset	26
   289 ;;_cp	offset	29
   290 ;;_c	offset	31
   291 ;;_fp	offset=-2 (param)
   292 ;;_fmt	offset=-4 (param)
   293 ;;_ap	offset=-6 (param)
   294 ;;_xtoa$5103	offset	0
   295 ;;_xtoa$5102	offset	2
   296 ;;_n	offset	4
   297 ;;_c	offset	12
   298 ;;_i	offset	14
   299 ;;_w	offset	16
   300 ;;_p	offset	18
   301 ;;_fp	offset=-2 (param)
   302 ;;_d	offset=-10 (param)
   303 ;;_x	offset=-11 (param)
   304 ;;_toupper$5878	offset	0
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_c	offset=-2 (param)
   308 ;;_r	offset	0
   309 ;;_l	offset	2
   310 ;;__l	offset=-2 (param)
   311 ;;__r	offset=-4 (param)
   312 ;;_n	offset=-6 (param)
   313 ;;_nuls	offset	0
   314 ;;_l	offset	7
   315 ;;_p	offset	9
   316 ;;_cp	offset	11
   317 ;;_w	offset	13
   318 ;;_i	offset	15
   319 ;;_fp	offset=-2 (param)
   320 ;;_s	offset=-4 (param)
   321 ;;_efgtoa$5082	offset	0
   322 ;;_efgtoa$5081	offset	2
   323 ;;_efgtoa$5080	offset	4
   324 ;;_efgtoa$5076	offset	6
   325 ;;_efgtoa$5072	offset	8
   326 ;;_efgtoa$5071	offset	10
   327 ;;_u	offset	12
   328 ;;_g	offset	16
   329 ;;_l	offset	20
   330 ;;_h	offset	24
   331 ;;_ou	offset	28
   332 ;;_n	offset	32
   333 ;;_e	offset	34
   334 ;;_i	offset	36
   335 ;;_w	offset	38
   336 ;;_p	offset	40
   337 ;;_sign	offset	42
   338 ;;_d	offset	44
   339 ;;_ne	offset	46
   340 ;;_m	offset	48
   341 ;;_pp	offset	50
   342 ;;_t	offset	52
   343 ;;_mode	offset	54
   344 ;;_nmode	offset	55
   345 ;;_fp	offset=-2 (param)
   346 ;;_f	offset=-6 (param)
   347 ;;_c	offset=-7 (param)
   348 ;;_tolower$5863	offset	0
   349 ;;_c	offset=-2 (param)
   350 ;;_c	offset=-2 (param)
   351 ;;_d	offset	0
   352 ;;_s	offset	2
   353 ;;_dest	offset=-2 (param)
   354 ;;_src	offset=-4 (param)
   355 ;;_u	offset	0
   356 ;;_m	offset	4
   357 ;;_e	offset	8
   358 ;;_x	offset=-4 (param)
   359 ;;_u	offset	0
   360 ;;_e	offset	4
   361 ;;_x	offset=-4 (param)
   362 ;;_exp1	offset	0
   363 ;;_sign1	offset	1
   364 ;;_f1	offset=-4 (param)
   365 ;;_f1	offset=-4 (param)
   366 ;;_ff1	offset=-4 (param)
   367 ;;_ff2	offset=-8 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_grs	offset	0
   371 ;;_rem	offset	4
   372 ;;_new_exp	offset	8
   373 ;;_aexp	offset	10
   374 ;;_bexp	offset	11
   375 ;;_sign	offset	12
   376 ;;_b	offset=-4 (param)
   377 ;;_a	offset=-8 (param)
   378 ;;_sign	offset	0
   379 ;;_counter	offset	1
   380 ;;_dividend	offset=-2 (param)
   381 ;;_divisor	offset=-4 (param)
   382 ;;_quotient	offset	0
   383 ;;_sign	offset	2
   384 ;;_counter	offset	3
   385 ;;_dividend	offset=-2 (param)
   386 ;;_divisor	offset=-4 (param)
   387 ;;_dtoa$5048	offset	0
   388 ;;_n	offset	2
   389 ;;_i	offset	10
   390 ;;_s	offset	12
   391 ;;_w	offset	14
   392 ;;_p	offset	16
   393 ;;_fp	offset=-2 (param)
   394 ;;_d	offset=-10 (param)
   395 ;;_a	offset=-2 (param)
   396 ;;_sign	offset	0
   397 ;;_counter	offset	1
   398 ;;_dividend	offset=-8 (param)
   399 ;;_divisor	offset=-16 (param)
   400 ;;_quotient	offset	0
   401 ;;_sign	offset	8
   402 ;;_counter	offset	9
   403 ;;_dividend	offset=-8 (param)
   404 ;;_divisor	offset=-16 (param)
   405 ;;_w	offset	0
   406 ;;_fp	offset=-2 (param)
   407 ;;_c	offset=-3 (param)
   408 ;;_w	offset	0
   409 ;;_i	offset	2
   410 ;;_fp	offset=-2 (param)
   411 ;;_buf	offset=-4 (param)
   412 ;;_p	offset=-6 (param)
   413 ;;_a	offset	0
   414 ;;_s	offset=-2 (param)
   415 ;;_i	offset	0
   416 ;;_c	offset	2
   417 ;;_s	offset=-2 (param)
   418 ;;_fp	offset=-4 (param)
   419 ;;_c	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-1 (param)
   422 ;;__this	offset=-2 (param)
   423 ;;_c	offset=-3 (param)
   424 ;;_atoi$5601	offset	0
   425 ;;_atoi$5599	offset	2
   426 ;;_atoi$5600	offset	4
   427 ;;_n	offset	5
   428 ;;_neg	offset	7
   429 ;;_s	offset=-2 (param)
   430 ;;_isspace$5639	offset	0
   431 ;;_c	offset=-2 (param)
   432 ;;_c	offset=-2 (param)
   433 ;;_vterm	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_new_response_info	offset=-1 (param)
   436 ;;_level	offset=-2 (param)
   437 ;;_dutyValue	offset=-2 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_timer	offset=-1 (param)
   440 ;;_count	offset=-3 (param)
   441 ;;_h	offset=-1 (param)
   442 ;;_lp_speed	offset	0
   443 ;;_new	offset=-4 (param)
   444 ;;_bn	offset=-5 (param)
   445 ;;_slow	offset=-6 (param)
   446 ;;_b	offset=-4 (param)
   447 ;;_a	offset=-8 (param)
   448 ;;_grs	offset	0
   449 ;;_bexp	offset	1
   450 ;;_aexp	offset	2
   451 ;;_signs	offset	3
   452 ;;_b	offset=-4 (param)
   453 ;;_a	offset=-8 (param)
   454 ;;_prod	offset	0
   455 ;;_grs	offset	4
   456 ;;_temp	offset	8
   457 ;;_bexp	offset	10
   458 ;;_aexp	offset	11
   459 ;;_sign	offset	12
   460 ;;_b	offset=-4 (param)
   461 ;;_a	offset=-8 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_InterruptHandler	offset=-3 (param)
   469 ;;_state	offset	0
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_InterruptHandler	offset=-3 (param)
   474 ;;_i	offset	0
   475 ;;_sw_value	offset	1
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_timerVal	offset=-2 (param)
   478 ;;_temp	offset	0
   479 ;;_arg	offset	0
   480 ;;_exp	offset	4
   481 ;;_sign	offset=-1 (param)
   482 ;;_val	offset=-5 (param)
   483 ;;_exp1	offset	0
   484 ;;_sign1	offset	1
   485 ;;_f1	offset=-4 (param)
   486 ;;_f1	offset=-4 (param)
   487 ;;_prod	offset	0
   488 ;;_grs	offset	4
   489 ;;_temp	offset	8
   490 ;;_bexp	offset	10
   491 ;;_aexp	offset	11
   492 ;;_sign	offset	12
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_ff1	offset=-4 (param)
   496 ;;_ff2	offset=-8 (param)
   497 ;;_grs	offset	0
   498 ;;_rem	offset	4
   499 ;;_new_exp	offset	8
   500 ;;_aexp	offset	10
   501 ;;_bexp	offset	11
   502 ;;_sign	offset	12
   503 ;;_b	offset=-4 (param)
   504 ;;_a	offset=-8 (param)
   505 ;;_grs	offset	0
   506 ;;_bexp	offset	1
   507 ;;_aexp	offset	2
   508 ;;_signs	offset	3
   509 ;;_b	offset=-4 (param)
   510 ;;_a	offset=-8 (param)
   511 ;;_cvoltage	offset=-4 (param)
   512 ;;_channel	offset=-1 (param)
   513 ;;_i	offset	0
   514                           
   515                           	psect	idataBANK0
   516  019086                     __pidataBANK0:
   517                           	opt callstack 0
   518                           
   519                           ;initializer for _R
   520  019086  0000               	dw	0
   521  019088  0000               	dw	0
   522  01908A  0000               	dw	0
   523  01908C  0000               	dw	0
   524  01908E  0000               	dw	0
   525  019090  0000               	dw	0
   526  019092  0000               	dw	0
   527  019094  0000               	dw	0
   528  019096  0000               	dw	0
   529  019098  0000               	dw	0
   530  01909A  0000               	dw	0
   531  01909C  0000               	dw	0
   532  01909E  0000               	dw	0
   533  0190A0  0000               	dw	0
   534  0190A2  0000               	dw	0
   535  0190A4  0000               	dw	0
   536  0190A6  0F67               	dw	3943
   537  0190A8  0F8F               	dw	3983
   538  0190AA  00                 	db	0
   539  0190AB  0000               	dw	0
   540  0190AD  00                 	db	0
   541                           
   542                           ;initializer for stoa@F1166
   543  0190AE  28                 	db	40
   544  0190AF  6E                 	db	110
   545  0190B0  75                 	db	117
   546  0190B1  6C                 	db	108
   547  0190B2  6C                 	db	108
   548  0190B3  29                 	db	41
   549  0190B4  00                 	db	0
   550                           
   551                           ;initializer for _H
   552  0190B5  00                 	db	0
   553  0190B6  00                 	db	0
   554  0190B7  01                 	db	1
   555  0190B8  00                 	db	0
   556  0190B9  01                 	db	1
   557  0190BA  00                 	db	0
   558  0190BB  00                 	db	0
   559                           
   560                           	psect	idataBANK1
   561  017CA4                     __pidataBANK1:
   562                           	opt callstack 0
   563                           
   564                           ;initializer for _C
   565  017CA4  0000               	dw	0
   566  017CA6  0000               	dw	0
   567  017CA8  0000               	dw	0
   568  017CAA  0000               	dw	0
   569  017CAC  0000               	dw	0
   570  017CAE  0000               	dw	0
   571  017CB0  0000               	dw	0
   572  017CB2  0000               	dw	0
   573  017CB4  0000               	dw	0
   574  017CB6  0000               	dw	0
   575  017CB8  0000               	dw	0
   576  017CBA  0000               	dw	0
   577  017CBC  0000               	dw	0
   578  017CBE  0000               	dw	0
   579  017CC0  0000               	dw	0
   580  017CC2  0000               	dw	0
   581  017CC4  0000               	dw	0
   582  017CC6  0000               	dw	0
   583  017CC8  0000               	dw	0
   584  017CCA  0000               	dw	0
   585  017CCC  0000               	dw	0
   586  017CCE  0000               	dw	0
   587  017CD0  0000               	dw	0
   588  017CD2  0000               	dw	0
   589  017CD4  0000               	dw	0
   590  017CD6  0000               	dw	0
   591  017CD8  0000               	dw	0
   592  017CDA  0000               	dw	0
   593  017CDC  0000               	dw	0
   594  017CDE  0000               	dw	0
   595  017CE0  0000               	dw	0
   596  017CE2  0000               	dw	0
   597  017CE4  0000               	dw	0
   598  017CE6  0000               	dw	0
   599  017CE8  0000               	dw	0
   600  017CEA  0000               	dw	0
   601  017CEC  0000               	dw	0
   602  017CEE  0000               	dw	0
   603  017CF0  0000               	dw	0
   604  017CF2  0000               	dw	0
   605  017CF4  0000               	dw	0
   606  017CF6  0000               	dw	0
   607  017CF8  0000               	dw	0
   608  017CFA  0000               	dw	0
   609  017CFC  0000               	dw	0
   610  017CFE  0000               	dw	0
   611  017D00  0000               	dw	0
   612  017D02  0000               	dw	0
   613  017D04  0000               	dw	0
   614  017D06  0000               	dw	0
   615  017D08  0000               	dw	0
   616  017D0A  0000               	dw	0
   617  017D0C  0000               	dw	0
   618  017D0E  0000               	dw	0
   619  017D10  0000               	dw	0
   620  017D12  0000               	dw	0
   621  017D14  0000               	dw	0
   622  017D16  0000               	dw	0
   623  017D18  0000               	dw	0
   624  017D1A  0000               	dw	0
   625  017D1C  0000               	dw	0
   626  017D1E  0000               	dw	0
   627  017D20  0000               	dw	0
   628  017D22  42FA               	dw	17146
   629  017D24  00                 	db	0
   630  017D25  00                 	db	0
   631  017D26  00                 	db	0
   632  017D27  00                 	db	0
   633  017D28  00                 	db	0
   634  017D29  00                 	db	0
   635  017D2A  00                 	db	0
   636  017D2B  00                 	db	0
   637  017D2C  00                 	db	0
   638  017D2D  00                 	db	0
   639  017D2E  00                 	db	0
   640  017D2F  00                 	db	0
   641  017D30  00                 	db	0
   642  017D31  00                 	db	0
   643  017D32  00                 	db	0
   644  017D33  00                 	db	0
   645  017D34  00                 	db	0
   646  017D35  00                 	db	0
   647  017D36  00                 	db	0
   648  017D37  00                 	db	0
   649  017D38  00                 	db	0
   650  017D39  00                 	db	0
   651  017D3A  00                 	db	0
   652  017D3B  00                 	db	0
   653  017D3C  00                 	db	0
   654  017D3D  00                 	db	0
   655  017D3E  00                 	db	0
   656  017D3F  00                 	db	0
   657  017D40  00                 	db	0
   658  017D41  00                 	db	0
   659  017D42  00                 	db	0
   660  017D43  00                 	db	0
   661  017D44  00                 	db	0
   662  017D45  00                 	db	0
   663  017D46  00                 	db	0
   664  017D47  00                 	db	0
   665  017D48  00                 	db	0
   666  017D49  00                 	db	0
   667  017D4A  00                 	db	0
   668  017D4B  00                 	db	0
   669  017D4C  00                 	db	0
   670  017D4D  00                 	db	0
   671  017D4E  00                 	db	0
   672  017D4F  00                 	db	0
   673  017D50  00                 	db	0
   674  017D51  00                 	db	0
   675  017D52  00                 	db	0
   676  017D53  00                 	db	0
   677  017D54  00                 	db	0
   678  017D55  00                 	db	0
   679  017D56  00                 	db	0
   680  017D57  00                 	db	0
   681  017D58  00                 	db	0
   682  017D59  00                 	db	0
   683  017D5A  00                 	db	0
   684  017D5B  00                 	db	0
   685  017D5C  00                 	db	0
   686  017D5D  00                 	db	0
   687  017D5E  00                 	db	0
   688  017D5F  00                 	db	0
   689  017D60  00                 	db	0
   690  017D61  00                 	db	0
   691  017D62  00                 	db	0
   692  017D63  00                 	db	0
   693  017D64  00                 	db	0
   694  017D65  00                 	db	0
   695  017D66  00                 	db	0
   696  017D67  00                 	db	0
   697  017D68  00                 	db	0
   698  017D69  00                 	db	0
   699  017D6A  00                 	db	0
   700  017D6B  00                 	db	0
   701  017D6C  00                 	db	0
   702  017D6D  00                 	db	0
   703  017D6E  00                 	db	0
   704  017D6F  00                 	db	0
   705  017D70  00                 	db	0
   706  017D71  00                 	db	0
   707  017D72  00                 	db	0
   708  017D73  00                 	db	0
   709  017D74  00                 	db	0
   710  017D75  00                 	db	0
   711  017D76  00                 	db	0
   712                           
   713                           	psect	idataBANK2
   714  017D77                     __pidataBANK2:
   715                           	opt callstack 0
   716                           
   717                           ;initializer for _V
   718  017D77  00                 	db	0
   719  017D78  00                 	db	0
   720  017D79  00                 	db	0
   721  017D7A  00                 	db	0
   722  017D7B  00                 	db	0
   723  017D7C  00                 	db	0
   724  017D7D  00                 	db	0
   725  017D7E  00                 	db	0
   726  017D7F  00                 	db	0
   727  017D80  00                 	db	0
   728  017D81  00                 	db	0
   729  017D82  00                 	db	0
   730  017D83  00                 	db	0
   731  017D84  00                 	db	0
   732  017D85  00                 	db	0
   733  017D86  00                 	db	0
   734  017D87  00                 	db	0
   735  017D88  00                 	db	0
   736  017D89  00                 	db	0
   737  017D8A  00                 	db	0
   738  017D8B  00                 	db	0
   739  017D8C  00                 	db	0
   740  017D8D  00                 	db	0
   741  017D8E  00                 	db	0
   742  017D8F  00                 	db	0
   743  017D90  00                 	db	0
   744  017D91  00                 	db	0
   745  017D92  00                 	db	0
   746  017D93  00                 	db	0
   747  017D94  00                 	db	0
   748  017D95  00                 	db	0
   749  017D96  00                 	db	0
   750  017D97  00                 	db	0
   751  017D98  00                 	db	0
   752  017D99  00                 	db	0
   753  017D9A  00                 	db	0
   754  017D9B  00                 	db	0
   755  017D9C  00                 	db	0
   756  017D9D  00                 	db	0
   757  017D9E  00                 	db	0
   758  017D9F  00                 	db	0
   759  017DA0  00                 	db	0
   760  017DA1  00                 	db	0
   761  017DA2  00                 	db	0
   762  017DA3  00                 	db	0
   763  017DA4  00                 	db	0
   764  017DA5  00                 	db	0
   765  017DA6  00                 	db	0
   766  017DA7  00                 	db	0
   767  017DA8  00                 	db	0
   768  017DA9  00                 	db	0
   769  017DAA  00                 	db	0
   770  017DAB  00                 	db	0
   771  017DAC  00                 	db	0
   772  017DAD  00                 	db	0
   773  017DAE  00                 	db	0
   774  017DAF  00                 	db	0
   775  017DB0  00                 	db	0
   776  017DB1  00                 	db	0
   777  017DB2  00                 	db	0
   778  017DB3  00                 	db	0
   779  017DB4  00                 	db	0
   780  017DB5  00                 	db	0
   781  017DB6  00                 	db	0
   782  017DB7  00                 	db	0
   783  017DB8  00                 	db	0
   784  017DB9  00                 	db	0
   785  017DBA  00                 	db	0
   786  017DBB  00                 	db	0
   787  017DBC  00                 	db	0
   788  017DBD  00                 	db	0
   789  017DBE  00                 	db	0
   790  017DBF  00                 	db	0
   791  017DC0  00                 	db	0
   792  017DC1  00                 	db	0
   793  017DC2  00                 	db	0
   794  017DC3  00                 	db	0
   795  017DC4  00                 	db	0
   796  017DC5  00                 	db	0
   797  017DC6  00                 	db	0
   798  017DC7  00                 	db	0
   799  017DC8  00                 	db	0
   800  017DC9  00                 	db	0
   801  017DCA  00                 	db	0
   802  017DCB  00                 	db	0
   803  017DCC  00                 	db	0
   804  017DCD  00                 	db	0
   805  017DCE  00                 	db	0
   806  017DCF  00                 	db	0
   807  017DD0  00                 	db	0
   808  017DD1  00                 	db	0
   809  017DD2  00                 	db	0
   810  017DD3  00                 	db	0
   811  017DD4  00                 	db	0
   812  017DD5  00                 	db	0
   813  017DD6  00                 	db	0
   814  017DD7  00                 	db	0
   815  017DD8  00                 	db	0
   816  017DD9  00                 	db	0
   817  017DDA  00                 	db	0
   818  017DDB  00                 	db	0
   819  017DDC  00                 	db	0
   820  017DDD  00                 	db	0
   821  017DDE  00                 	db	0
   822  017DDF  00                 	db	0
   823  017DE0  00                 	db	0
   824  017DE1  00                 	db	0
   825  017DE2  00                 	db	0
   826  017DE3  00                 	db	0
   827  017DE4  00                 	db	0
   828  017DE5  00                 	db	0
   829  017DE6  00                 	db	0
   830  017DE7  00                 	db	0
   831  017DE8  00                 	db	0
   832  017DE9  00                 	db	0
   833  017DEA  00                 	db	0
   834  017DEB  00                 	db	0
   835  017DEC  00                 	db	0
   836  017DED  00                 	db	0
   837  017DEE  00                 	db	0
   838  017DEF  00                 	db	0
   839  017DF0  00                 	db	0
   840  017DF1  00                 	db	0
   841  017DF2  00                 	db	0
   842  017DF3  00                 	db	0
   843  017DF4  00                 	db	0
   844  017DF5  00                 	db	0
   845  017DF6  00                 	db	0
   846  017DF7  00                 	db	0
   847  017DF8  0000               	dw	0
   848  017DFA  0000               	dw	0
   849  017DFC  0000               	dw	0
   850  017DFE  0000               	dw	0
   851  017E00  00                 	db	0
   852  017E01  00                 	db	0
   853  017E02  00                 	db	0
   854  017E03  00                 	db	0
   855  017E04  00                 	db	0
   856  017E05  00                 	db	0
   857  017E06  0000               	dw	0
   858  017E08  0000               	dw	0
   859  017E0A  0000               	dw	0
   860  017E0C  0000               	dw	0
   861  017E0E  0000               	dw	0
   862  017E10  0000               	dw	0
   863  017E12  00                 	db	0
   864  017E13  00                 	db	0
   865  017E14  00                 	db	0
   866  017E15  00                 	db	0
   867  017E16  00                 	db	0
   868  017E17  00                 	db	0
   869  017E18  00                 	db	0
   870  017E19  00                 	db	0
   871  017E1A  00                 	db	0
   872  017E1B  00                 	db	0
   873  017E1C  0000               	dw	0
   874  017E1E  0000               	dw	0
   875  017E20  2D                 	db	45
   876  017E21  00                 	db	0
   877  017E22  00                 	db	0
   878  017E23  0000               	dw	0
   879  017E25  0000               	dw	0
   880  017E27  0000               	dw	0
   881  017E29  0000               	dw	0
   882  017E2B  0000               	dw	0
   883  017E2D  0000               	dw	0
   884  017E2F  0000               	dw	0
   885  017E31  0000               	dw	0
   886                           
   887                           ;initializer for _port_data
   888  017E33  FF                 	db	255
   889  017E34  00                 	db	0
   890  017E35  FF                 	db	255
   891  017E36  00                 	db	0
   892  017E37  FF                 	db	255
   893  017E38  00                 	db	0
   894  017E39  FF                 	db	255
   895  017E3A  00                 	db	0
   896  017E3B  FF                 	db	255
   897  017E3C  00                 	db	0
   898  017E3D  FF                 	db	255
   899  017E3E  00                 	db	0
   900  017E3F  FF                 	db	255
   901  017E40  00                 	db	0
   902  017E41  FF                 	db	255
   903  017E42  00                 	db	0
   904                           
   905                           	psect	mediumconst
   906  00FCCC                     __pmediumconst:
   907                           	opt callstack 0
   908  00FCCC  00                 	db	0
   909  00FCCD                     _BVSOC_TABLE:
   910                           	opt callstack 0
   911  00FCCD  59D8               	dw	23000
   912  00FCCF  0000               	dw	0
   913  00FCD1  0005               	dw	5
   914  00FCD3  0000               	dw	0
   915  00FCD5  5B68               	dw	23400
   916  00FCD7  0000               	dw	0
   917  00FCD9  000A               	dw	10
   918  00FCDB  0000               	dw	0
   919  00FCDD  5C30               	dw	23600
   920  00FCDF  0000               	dw	0
   921  00FCE1  0014               	dw	20
   922  00FCE3  0000               	dw	0
   923  00FCE5  5E38               	dw	24120
   924  00FCE7  0000               	dw	0
   925  00FCE9  0019               	dw	25
   926  00FCEB  0000               	dw	0
   927  00FCED  5E88               	dw	24200
   928  00FCEF  0000               	dw	0
   929  00FCF1  001E               	dw	30
   930  00FCF3  0000               	dw	0
   931  00FCF5  5F78               	dw	24440
   932  00FCF7  0000               	dw	0
   933  00FCF9  0028               	dw	40
   934  00FCFB  0000               	dw	0
   935  00FCFD  5FDC               	dw	24540
   936  00FCFF  0000               	dw	0
   937  00FD01  002D               	dw	45
   938  00FD03  0000               	dw	0
   939  00FD05  6018               	dw	24600
   940  00FD07  0000               	dw	0
   941  00FD09  0032               	dw	50
   942  00FD0B  0000               	dw	0
   943  00FD0D  6046               	dw	24646
   944  00FD0F  0000               	dw	0
   945  00FD11  0035               	dw	53
   946  00FD13  0000               	dw	0
   947  00FD15  607C               	dw	24700
   948  00FD17  0000               	dw	0
   949  00FD19  0037               	dw	55
   950  00FD1B  0000               	dw	0
   951  00FD1D  60AE               	dw	24750
   952  00FD1F  0000               	dw	0
   953  00FD21  0039               	dw	57
   954  00FD23  0000               	dw	0
   955  00FD25  60E0               	dw	24800
   956  00FD27  0000               	dw	0
   957  00FD29  003C               	dw	60
   958  00FD2B  0000               	dw	0
   959  00FD2D  6112               	dw	24850
   960  00FD2F  0000               	dw	0
   961  00FD31  003F               	dw	63
   962  00FD33  0000               	dw	0
   963  00FD35  6176               	dw	24950
   964  00FD37  0000               	dw	0
   965  00FD39  0043               	dw	67
   966  00FD3B  0000               	dw	0
   967  00FD3D  61A8               	dw	25000
   968  00FD3F  0000               	dw	0
   969  00FD41  0046               	dw	70
   970  00FD43  0000               	dw	0
   971  00FD45  61BC               	dw	25020
   972  00FD47  0000               	dw	0
   973  00FD49  0048               	dw	72
   974  00FD4B  0000               	dw	0
   975  00FD4D  61D0               	dw	25040
   976  00FD4F  0000               	dw	0
   977  00FD51  004B               	dw	75
   978  00FD53  0000               	dw	0
   979  00FD55  61DA               	dw	25050
   980  00FD57  0000               	dw	0
   981  00FD59  0050               	dw	80
   982  00FD5B  0000               	dw	0
   983  00FD5D  61E4               	dw	25060
   984  00FD5F  0000               	dw	0
   985  00FD61  0055               	dw	85
   986  00FD63  0000               	dw	0
   987  00FD65  61F8               	dw	25080
   988  00FD67  0000               	dw	0
   989  00FD69  005A               	dw	90
   990  00FD6B  0000               	dw	0
   991  00FD6D  6208               	dw	25096
   992  00FD6F  0000               	dw	0
   993  00FD71  005C               	dw	92
   994  00FD73  0000               	dw	0
   995  00FD75  6222               	dw	25122
   996  00FD77  0000               	dw	0
   997  00FD79  005D               	dw	93
   998  00FD7B  0000               	dw	0
   999  00FD7D  6234               	dw	25140
  1000  00FD7F  0000               	dw	0
  1001  00FD81  005F               	dw	95
  1002  00FD83  0000               	dw	0
  1003  00FD85  6248               	dw	25160
  1004  00FD87  0000               	dw	0
  1005  00FD89  0061               	dw	97
  1006  00FD8B  0000               	dw	0
  1007  00FD8D  625C               	dw	25180
  1008  00FD8F  0000               	dw	0
  1009  00FD91  0064               	dw	100
  1010  00FD93  0000               	dw	0
  1011  00FD95  6658               	dw	26200
  1012  00FD97  0000               	dw	0
  1013  00FD99  005A               	dw	90
  1014  00FD9B  0000               	dw	0
  1015  00FD9D                     __end_of_BVSOC_TABLE:
  1016                           	opt callstack 0
  1017  00FD9D                     _T:
  1018                           	opt callstack 0
  1019  00FD9D  63                 	db	99
  1020  00FD9E  6F                 	db	111
  1021  00FD9F  6D                 	db	109
  1022  00FDA0  6D                 	db	109
  1023  00FDA1  61                 	db	97
  1024  00FDA2  6E                 	db	110
  1025  00FDA3  64                 	db	100
  1026  00FDA4  73                 	db	115
  1027  00FDA5  20                 	db	32
  1028  00FDA6  31                 	db	49
  1029  00FDA7  00                 	db	0
  1030  00FDA8  00                 	db	0
  1031  00FDA9  00                 	db	0
  1032  00FDAA  00                 	db	0
  1033  00FDAB  00                 	db	0
  1034  00FDAC  00                 	db	0
  1035  00FDAD  00                 	db	0
  1036  00FDAE  00                 	db	0
  1037  00FDAF  64                 	db	100
  1038  00FDB0  69                 	db	105
  1039  00FDB1  73                 	db	115
  1040  00FDB2  70                 	db	112
  1041  00FDB3  6C                 	db	108
  1042  00FDB4  61                 	db	97
  1043  00FDB5  79                 	db	121
  1044  00FDB6  73                 	db	115
  1045  00FDB7  20                 	db	32
  1046  00FDB8  31                 	db	49
  1047  00FDB9  00                 	db	0
  1048  00FDBA  00                 	db	0
  1049  00FDBB  00                 	db	0
  1050  00FDBC  00                 	db	0
  1051  00FDBD  00                 	db	0
  1052  00FDBE  00                 	db	0
  1053  00FDBF  00                 	db	0
  1054  00FDC0  00                 	db	0
  1055  00FDC1  63                 	db	99
  1056  00FDC2  6F                 	db	111
  1057  00FDC3  6D                 	db	109
  1058  00FDC4  6D                 	db	109
  1059  00FDC5  61                 	db	97
  1060  00FDC6  6E                 	db	110
  1061  00FDC7  64                 	db	100
  1062  00FDC8  73                 	db	115
  1063  00FDC9  20                 	db	32
  1064  00FDCA  32                 	db	50
  1065  00FDCB  00                 	db	0
  1066  00FDCC  00                 	db	0
  1067  00FDCD  00                 	db	0
  1068  00FDCE  00                 	db	0
  1069  00FDCF  00                 	db	0
  1070  00FDD0  00                 	db	0
  1071  00FDD1  00                 	db	0
  1072  00FDD2  00                 	db	0
  1073  00FDD3  64                 	db	100
  1074  00FDD4  69                 	db	105
  1075  00FDD5  73                 	db	115
  1076  00FDD6  70                 	db	112
  1077  00FDD7  6C                 	db	108
  1078  00FDD8  61                 	db	97
  1079  00FDD9  79                 	db	121
  1080  00FDDA  73                 	db	115
  1081  00FDDB  20                 	db	32
  1082  00FDDC  32                 	db	50
  1083  00FDDD  00                 	db	0
  1084  00FDDE  00                 	db	0
  1085  00FDDF  00                 	db	0
  1086  00FDE0  00                 	db	0
  1087  00FDE1  00                 	db	0
  1088  00FDE2  00                 	db	0
  1089  00FDE3  00                 	db	0
  1090  00FDE4  00                 	db	0
  1091  00FDE5  63                 	db	99
  1092  00FDE6  6F                 	db	111
  1093  00FDE7  6D                 	db	109
  1094  00FDE8  6D                 	db	109
  1095  00FDE9  61                 	db	97
  1096  00FDEA  6E                 	db	110
  1097  00FDEB  64                 	db	100
  1098  00FDEC  73                 	db	115
  1099  00FDED  20                 	db	32
  1100  00FDEE  33                 	db	51
  1101  00FDEF  00                 	db	0
  1102  00FDF0  00                 	db	0
  1103  00FDF1  00                 	db	0
  1104  00FDF2  00                 	db	0
  1105  00FDF3  00                 	db	0
  1106  00FDF4  00                 	db	0
  1107  00FDF5  00                 	db	0
  1108  00FDF6  00                 	db	0
  1109  00FDF7  64                 	db	100
  1110  00FDF8  69                 	db	105
  1111  00FDF9  73                 	db	115
  1112  00FDFA  70                 	db	112
  1113  00FDFB  6C                 	db	108
  1114  00FDFC  61                 	db	97
  1115  00FDFD  79                 	db	121
  1116  00FDFE  73                 	db	115
  1117  00FDFF  20                 	db	32
  1118  00FE00  33                 	db	51
  1119  00FE01  00                 	db	0
  1120  00FE02  00                 	db	0
  1121  00FE03  00                 	db	0
  1122  00FE04  00                 	db	0
  1123  00FE05  00                 	db	0
  1124  00FE06  00                 	db	0
  1125  00FE07  00                 	db	0
  1126  00FE08  00                 	db	0
  1127  00FE09  63                 	db	99
  1128  00FE0A  6F                 	db	111
  1129  00FE0B  6D                 	db	109
  1130  00FE0C  6D                 	db	109
  1131  00FE0D  61                 	db	97
  1132  00FE0E  6E                 	db	110
  1133  00FE0F  64                 	db	100
  1134  00FE10  73                 	db	115
  1135  00FE11  20                 	db	32
  1136  00FE12  34                 	db	52
  1137  00FE13  00                 	db	0
  1138  00FE14  00                 	db	0
  1139  00FE15  00                 	db	0
  1140  00FE16  00                 	db	0
  1141  00FE17  00                 	db	0
  1142  00FE18  00                 	db	0
  1143  00FE19  00                 	db	0
  1144  00FE1A  00                 	db	0
  1145  00FE1B  64                 	db	100
  1146  00FE1C  69                 	db	105
  1147  00FE1D  73                 	db	115
  1148  00FE1E  70                 	db	112
  1149  00FE1F  6C                 	db	108
  1150  00FE20  61                 	db	97
  1151  00FE21  79                 	db	121
  1152  00FE22  73                 	db	115
  1153  00FE23  20                 	db	32
  1154  00FE24  34                 	db	52
  1155  00FE25  00                 	db	0
  1156  00FE26  00                 	db	0
  1157  00FE27  00                 	db	0
  1158  00FE28  00                 	db	0
  1159  00FE29  00                 	db	0
  1160  00FE2A  00                 	db	0
  1161  00FE2B  00                 	db	0
  1162  00FE2C  00                 	db	0
  1163  00FE2D                     __end_of_T:
  1164                           	opt callstack 0
  1165  00FE2D  0000               	dw	0
  1166  00FE2F  3F80               	dw	16256
  1167  00FE31  0000               	dw	0
  1168  00FE33  3FC0               	dw	16320
  1169  00FE35                     __end_of_bp:
  1170                           	opt callstack 0
  1171  00FE35  AA00               	dw	43520
  1172  00FE37  3FB8               	dw	16312
  1173  00FE39                     __end_of_ivln2_h:
  1174                           	opt callstack 0
  1175  00FE39  23C6               	dw	9158
  1176  00FE3B  B8F6               	dw	47350
  1177  00FE3D                     __end_of_cp_l:
  1178                           	opt callstack 0
  1179  00FE3D  4000               	dw	16384
  1180  00FE3F  3F76               	dw	16246
  1181  00FE41                     __end_of_cp_h:
  1182                           	opt callstack 0
  1183  0000                     _IVTADL	set	14493
  1184  0000                     _IVTADH	set	14494
  1185  0000                     _IVTADU	set	14495
  1186  0000                     _PIR6bits	set	14758
  1187  0000                     _PIR4bits	set	14756
  1188  0000                     _PIE8bits	set	14744
  1189  0000                     _PIR8bits	set	14760
  1190  0000                     _SCANPR	set	14839
  1191  0000                     _DMA2PR	set	14836
  1192  0000                     _DMA1PR	set	14835
  1193  0000                     _MAINPR	set	14834
  1194  0000                     _ISRPR	set	14833
  1195  0000                     _PIE2bits	set	14738
  1196  0000                     _PIR2bits	set	14754
  1197  0000                     _PIE9bits	set	14745
  1198  0000                     _PIR9bits	set	14761
  1199  0000                     _PIE6bits	set	14742
  1200  0000                     _PIE3bits	set	14739
  1201  0000                     _PMD7	set	14791
  1202  0000                     _PMD6	set	14790
  1203  0000                     _PMD5	set	14789
  1204  0000                     _PMD4	set	14788
  1205  0000                     _PMD3	set	14787
  1206  0000                     _PMD2	set	14786
  1207  0000                     _PMD1	set	14785
  1208  0000                     _PMD0	set	14784
  1209  0000                     _OSCTUNE	set	14814
  1210  0000                     _OSCFRQ	set	14815
  1211  0000                     _OSCEN	set	14813
  1212  0000                     _OSCCON3	set	14811
  1213  0000                     _OSCCON1	set	14809
  1214  0000                     _IPR8bits	set	14728
  1215  0000                     _IPR9bits	set	14729
  1216  0000                     _IPR5bits	set	14725
  1217  0000                     _IPR1bits	set	14721
  1218  0000                     _IPR3bits	set	14723
  1219  0000                     _IPR6bits	set	14726
  1220  0000                     _IPR2bits	set	14722
  1221  0000                     _PIE5bits	set	14741
  1222  0000                     _PIE1bits	set	14737
  1223  0000                     _PIR5bits	set	14757
  1224  0000                     _PIR1bits	set	14753
  1225  0000                     _PLLR	set	118496
  1226  0000                     _SPI1SDIPPS	set	15071
  1227  0000                     _U1RXPPS	set	15077
  1228  0000                     _RC6PPS	set	14870
  1229  0000                     _RC5PPS	set	14869
  1230  0000                     _INT1PPS	set	15041
  1231  0000                     _RD1PPS	set	14873
  1232  0000                     _INT0PPS	set	15040
  1233  0000                     _RC3PPS	set	14867
  1234  0000                     _RB6PPS	set	14862
  1235  0000                     _SPI1SCKPPS	set	15070
  1236  0000                     _U2RXPPS	set	15080
  1237  0000                     _SLRCONF	set	14995
  1238  0000                     _SLRCONE	set	14979
  1239  0000                     _SLRCOND	set	14963
  1240  0000                     _SLRCONC	set	14947
  1241  0000                     _SLRCONB	set	14931
  1242  0000                     _SLRCONA	set	14915
  1243  0000                     _ODCOND	set	14962
  1244  0000                     _ODCONC	set	14946
  1245  0000                     _ODCONB	set	14930
  1246  0000                     _ODCONA	set	14914
  1247  0000                     _ODCONF	set	14994
  1248  0000                     _ODCONE	set	14978
  1249  0000                     _WPUC	set	14945
  1250  0000                     _WPUA	set	14913
  1251  0000                     _WPUB	set	14929
  1252  0000                     _WPUE	set	14977
  1253  0000                     _WPUF	set	14993
  1254  0000                     _WPUD	set	14961
  1255  0000                     _ANSELA	set	14912
  1256  0000                     _ANSELF	set	14992
  1257  0000                     _ANSELE	set	14976
  1258  0000                     _ANSELB	set	14928
  1259  0000                     _ANSELC	set	14944
  1260  0000                     _ANSELD	set	14960
  1261  0000                     _DMA2SSA	set	15321
  1262  0000                     _DMA1SSA	set	15353
  1263  0000                     _DMA2DSZ	set	15310
  1264  0000                     _DMA2SSZ	set	15319
  1265  0000                     _DMA2DSA	set	15312
  1266  0000                     _DMA1DSZ	set	15342
  1267  0000                     _DMA1SSZ	set	15351
  1268  0000                     _DMA1DSA	set	15344
  1269  0000                     _DMA1CON0bits	set	15356
  1270  0000                     _DMA1CON1bits	set	15357
  1271  0000                     _DMA2CON0	set	15324
  1272  0000                     _DMA2AIRQ	set	15326
  1273  0000                     _DMA2SIRQ	set	15327
  1274  0000                     _DMA2CON1	set	15325
  1275  0000                     _DMA1CON0	set	15356
  1276  0000                     _DMA1AIRQ	set	15358
  1277  0000                     _DMA1SIRQ	set	15359
  1278  0000                     _DMA1CON1	set	15357
  1279  0000                     _CLKRCON	set	15589
  1280  0000                     _CLKRCLK	set	15590
  1281  0000                     _SPI1INTFbits	set	15642
  1282  0000                     _SPI1RXB	set	15632
  1283  0000                     _SPI1TXB	set	15633
  1284  0000                     _SPI1TCNTL	set	15634
  1285  0000                     _SPI1CON0	set	15636
  1286  0000                     _SPI1CLK	set	15644
  1287  0000                     _SPI1BAUD	set	15641
  1288  0000                     _SPI1CON2	set	15638
  1289  0000                     _SPI1CON1	set	15637
  1290  0000                     _U2RXB	set	15824
  1291  0000                     _U2TXB	set	15826
  1292  0000                     _U2ERRIE	set	15842
  1293  0000                     _U2ERRIR	set	15841
  1294  0000                     _U2UIR	set	15840
  1295  0000                     _U2FIFO	set	15839
  1296  0000                     _U2BRGH	set	15838
  1297  0000                     _U2BRGL	set	15837
  1298  0000                     _U2CON2	set	15836
  1299  0000                     _U2CON1	set	15835
  1300  0000                     _U2CON0	set	15834
  1301  0000                     _U2P3L	set	15832
  1302  0000                     _U2P2L	set	15830
  1303  0000                     _U2P1L	set	15828
  1304  0000                     _U1RXB	set	15848
  1305  0000                     _U1TXB	set	15850
  1306  0000                     _U1ERRIE	set	15866
  1307  0000                     _U1ERRIR	set	15865
  1308  0000                     _U1UIR	set	15864
  1309  0000                     _U1FIFO	set	15863
  1310  0000                     _U1BRGH	set	15862
  1311  0000                     _U1BRGL	set	15861
  1312  0000                     _U1CON2	set	15860
  1313  0000                     _U1CON1	set	15859
  1314  0000                     _U1CON0	set	15858
  1315  0000                     _U1P3H	set	15857
  1316  0000                     _U1P3L	set	15856
  1317  0000                     _U1P2H	set	15855
  1318  0000                     _U1P2L	set	15854
  1319  0000                     _U1P1H	set	15853
  1320  0000                     _U1P1L	set	15852
  1321  0000                     _FVRCON	set	16065
  1322  0000                     _ADFLTRL	set	16102
  1323  0000                     _ADFLTRH	set	16103
  1324  0000                     _ADCON0bits	set	16120
  1325  0000                     _ADCON0	set	16120
  1326  0000                     _ADCLK	set	16127
  1327  0000                     _ADACT	set	16126
  1328  0000                     _ADREF	set	16125
  1329  0000                     _ADSTAT	set	16124
  1330  0000                     _ADCON3	set	16123
  1331  0000                     _ADCON2	set	16122
  1332  0000                     _ADCON1	set	16121
  1333  0000                     _ADPREH	set	16119
  1334  0000                     _ADPREL	set	16118
  1335  0000                     _ADCAP	set	16117
  1336  0000                     _ADACQH	set	16116
  1337  0000                     _ADACQL	set	16115
  1338  0000                     _ADPCH	set	16113
  1339  0000                     _ADRPT	set	16108
  1340  0000                     _ADACCU	set	16106
  1341  0000                     _ADSTPTH	set	16101
  1342  0000                     _ADSTPTL	set	16100
  1343  0000                     _ADUTHH	set	16097
  1344  0000                     _ADUTHL	set	16096
  1345  0000                     _ADLTHH	set	16095
  1346  0000                     _ADLTHL	set	16094
  1347  0000                     _CCPTMRS1bits	set	16223
  1348  0000                     _PORTFbits	set	16335
  1349  0000                     _LATCbits	set	16316
  1350  0000                     _LATDbits	set	16317
  1351  0000                     _PORTBbits	set	16331
  1352  0000                     _T3CONbits	set	16294
  1353  0000                     _T3CON	set	16294
  1354  0000                     _TMR3L	set	16292
  1355  0000                     _TMR3H	set	16293
  1356  0000                     _T3CLK	set	16297
  1357  0000                     _T3GATE	set	16296
  1358  0000                     _T3GCON	set	16295
  1359  0000                     _T2CON	set	16300
  1360  0000                     _T2TMR	set	16298
  1361  0000                     _T2PR	set	16299
  1362  0000                     _T2RST	set	16303
  1363  0000                     _T2HLT	set	16301
  1364  0000                     _T2CLKCON	set	16302
  1365  0000                     _PWM8DCL	set	16224
  1366  0000                     _PWM8DCH	set	16225
  1367  0000                     _PWM8CON	set	16226
  1368  0000                     _LATEbits	set	16318
  1369  0000                     _T5CONbits	set	16282
  1370  0000                     _T5CON	set	16282
  1371  0000                     _TMR5L	set	16280
  1372  0000                     _TMR5H	set	16281
  1373  0000                     _T5CLK	set	16285
  1374  0000                     _T5GATE	set	16284
  1375  0000                     _T5GCON	set	16283
  1376  0000                     _T6CON	set	16276
  1377  0000                     _T6TMR	set	16274
  1378  0000                     _T6PR	set	16275
  1379  0000                     _T6RST	set	16279
  1380  0000                     _T6HLT	set	16277
  1381  0000                     _T6CLKCON	set	16278
  1382  0000                     _TRISD	set	16325
  1383  0000                     _TRISC	set	16324
  1384  0000                     _TRISB	set	16323
  1385  0000                     _TRISA	set	16322
  1386  0000                     _TRISF	set	16327
  1387  0000                     _TRISE	set	16326
  1388  0000                     _LATC	set	16316
  1389  0000                     _LATB	set	16315
  1390  0000                     _LATF	set	16319
  1391  0000                     _LATA	set	16314
  1392  0000                     _LATD	set	16317
  1393  0000                     _LATE	set	16318
  1394  0000                     _IVTLOCKbits	set	16340
  1395  0000                     _IVTLOCK	set	16340
  1396  0000                     _INTCON0bits	set	16338
  1397  0000                     _GIE	set	130711
  1398  00FE41                     
  1399                           ; BSR set to: 57
  1400  00FE41  20                 	db	32
  1401  00FE42  4D                 	db	77	;'M'
  1402  00FE43  65                 	db	101	;'e'
  1403  00FE44  73                 	db	115	;'s'
  1404  00FE45  67                 	db	103	;'g'
  1405  00FE46  20                 	db	32
  1406  00FE47  25                 	db	37
  1407  00FE48  64                 	db	100	;'d'
  1408  00FE49  20                 	db	32
  1409  00FE4A  53                 	db	83	;'S'
  1410  00FE4B  74                 	db	116	;'t'
  1411  00FE4C  61                 	db	97	;'a'
  1412  00FE4D  63                 	db	99	;'c'
  1413  00FE4E  6B                 	db	107	;'k'
  1414  00FE4F  20                 	db	32
  1415  00FE50  25                 	db	37
  1416  00FE51  64                 	db	100	;'d'
  1417  00FE52  20                 	db	32
  1418  00FE53  20                 	db	32
  1419  00FE54  20                 	db	32
  1420  00FE55  20                 	db	32
  1421  00FE56  20                 	db	32
  1422  00FE57  20                 	db	32
  1423  00FE58  00                 	db	0
  1424  00FE59                     STR_19:
  1425                           
  1426                           ; BSR set to: 57
  1427  00FE59  42                 	db	66	;'B'
  1428  00FE5A  41                 	db	65	;'A'
  1429  00FE5B  48                 	db	72	;'H'
  1430  00FE5C  20                 	db	32
  1431  00FE5D  25                 	db	37
  1432  00FE5E  33                 	db	51	;'3'
  1433  00FE5F  2E                 	db	46
  1434  00FE60  32                 	db	50	;'2'
  1435  00FE61  66                 	db	102	;'f'
  1436  00FE62  20                 	db	32
  1437  00FE63  50                 	db	80	;'P'
  1438  00FE64  25                 	db	37
  1439  00FE65  33                 	db	51	;'3'
  1440  00FE66  2E                 	db	46
  1441  00FE67  32                 	db	50	;'2'
  1442  00FE68  66                 	db	102	;'f'
  1443  00FE69  20                 	db	32
  1444  00FE6A  20                 	db	32
  1445  00FE6B  20                 	db	32
  1446  00FE6C  00                 	db	0
  1447  00FE6D                     STR_39:
  1448                           
  1449                           ; BSR set to: 57
  1450  00FE6D  20                 	db	32
  1451  00FE6E  20                 	db	32
  1452  00FE6F  20                 	db	32
  1453  00FE70  20                 	db	32
  1454  00FE71  20                 	db	32
  1455  00FE72  20                 	db	32
  1456  00FE73  20                 	db	32
  1457  00FE74  20                 	db	32
  1458  00FE75  20                 	db	32
  1459  00FE76  20                 	db	32
  1460  00FE77  20                 	db	32
  1461  00FE78  20                 	db	32
  1462  00FE79  20                 	db	32
  1463  00FE7A  20                 	db	32
  1464  00FE7B  20                 	db	32
  1465  00FE7C  20                 	db	32
  1466  00FE7D  20                 	db	32
  1467  00FE7E  20                 	db	32
  1468  00FE7F  00                 	db	0
  1469  00FE80                     STR_29:
  1470                           
  1471                           ; BSR set to: 57
  1472  00FE80  48                 	db	72	;'H'
  1473  00FE81  45                 	db	69	;'E'
  1474  00FE82  4C                 	db	76	;'L'
  1475  00FE83  50                 	db	80	;'P'
  1476  00FE84  20                 	db	32
  1477  00FE85  25                 	db	37
  1478  00FE86  73                 	db	115	;'s'
  1479  00FE87  20                 	db	32
  1480  00FE88  20                 	db	32
  1481  00FE89  20                 	db	32
  1482  00FE8A  20                 	db	32
  1483  00FE8B  20                 	db	32
  1484  00FE8C  20                 	db	32
  1485  00FE8D  20                 	db	32
  1486  00FE8E  20                 	db	32
  1487  00FE8F  20                 	db	32
  1488  00FE90  20                 	db	32
  1489  00FE91  20                 	db	32
  1490  00FE92  00                 	db	0
  1491  00FE93                     
  1492                           ; BSR set to: 57
  1493  00FE93  44                 	db	68	;'D'
  1494  00FE94  49                 	db	73	;'I'
  1495  00FE95  53                 	db	83	;'S'
  1496  00FE96  50                 	db	80	;'P'
  1497  00FE97  4C                 	db	76	;'L'
  1498  00FE98  41                 	db	65	;'A'
  1499  00FE99  59                 	db	89	;'Y'
  1500  00FE9A  20                 	db	32
  1501  00FE9B  25                 	db	37
  1502  00FE9C  73                 	db	115	;'s'
  1503  00FE9D  20                 	db	32
  1504  00FE9E  20                 	db	32
  1505  00FE9F  20                 	db	32
  1506  00FEA0  20                 	db	32
  1507  00FEA1  20                 	db	32
  1508  00FEA2  20                 	db	32
  1509  00FEA3  20                 	db	32
  1510  00FEA4  20                 	db	32
  1511  00FEA5  00                 	db	0
  1512  00FEA6                     STR_20:
  1513                           
  1514                           ; BSR set to: 57
  1515  00FEA6  53                 	db	83	;'S'
  1516  00FEA7  4F                 	db	79	;'O'
  1517  00FEA8  43                 	db	67	;'C'
  1518  00FEA9  20                 	db	32
  1519  00FEAA  25                 	db	37
  1520  00FEAB  64                 	db	100	;'d'
  1521  00FEAC  20                 	db	32
  1522  00FEAD  52                 	db	82	;'R'
  1523  00FEAE  55                 	db	85	;'U'
  1524  00FEAF  4E                 	db	78	;'N'
  1525  00FEB0  20                 	db	32
  1526  00FEB1  25                 	db	37
  1527  00FEB2  64                 	db	100	;'d'
  1528  00FEB3  20                 	db	32
  1529  00FEB4  20                 	db	32
  1530  00FEB5  20                 	db	32
  1531  00FEB6  20                 	db	32
  1532  00FEB7  20                 	db	32
  1533  00FEB8  00                 	db	0
  1534  00FEB9                     STR_12:
  1535                           
  1536                           ; BSR set to: 57
  1537  00FEB9  50                 	db	80	;'P'
  1538  00FEBA  56                 	db	86	;'V'
  1539  00FEBB  20                 	db	32
  1540  00FEBC  20                 	db	32
  1541  00FEBD  20                 	db	32
  1542  00FEBE  50                 	db	80	;'P'
  1543  00FEBF  57                 	db	87	;'W'
  1544  00FEC0  52                 	db	82	;'R'
  1545  00FEC1  20                 	db	32
  1546  00FEC2  25                 	db	37
  1547  00FEC3  33                 	db	51	;'3'
  1548  00FEC4  2E                 	db	46
  1549  00FEC5  32                 	db	50	;'2'
  1550  00FEC6  66                 	db	102	;'f'
  1551  00FEC7  20                 	db	32
  1552  00FEC8  20                 	db	32
  1553  00FEC9  20                 	db	32
  1554  00FECA  20                 	db	32
  1555  00FECB  00                 	db	0
  1556  00FECC                     STR_14:
  1557                           
  1558                           ; BSR set to: 57
  1559  00FECC  49                 	db	73	;'I'
  1560  00FECD  4E                 	db	78	;'N'
  1561  00FECE  56                 	db	86	;'V'
  1562  00FECF  20                 	db	32
  1563  00FED0  20                 	db	32
  1564  00FED1  50                 	db	80	;'P'
  1565  00FED2  57                 	db	87	;'W'
  1566  00FED3  52                 	db	82	;'R'
  1567  00FED4  20                 	db	32
  1568  00FED5  25                 	db	37
  1569  00FED6  33                 	db	51	;'3'
  1570  00FED7  2E                 	db	46
  1571  00FED8  32                 	db	50	;'2'
  1572  00FED9  66                 	db	102	;'f'
  1573  00FEDA  20                 	db	32
  1574  00FEDB  20                 	db	32
  1575  00FEDC  20                 	db	32
  1576  00FEDD  20                 	db	32
  1577  00FEDE  00                 	db	0
  1578  00FEDF                     STR_13:
  1579                           
  1580                           ; BSR set to: 57
  1581  00FEDF  4C                 	db	76	;'L'
  1582  00FEE0  4F                 	db	79	;'O'
  1583  00FEE1  41                 	db	65	;'A'
  1584  00FEE2  44                 	db	68	;'D'
  1585  00FEE3  20                 	db	32
  1586  00FEE4  50                 	db	80	;'P'
  1587  00FEE5  57                 	db	87	;'W'
  1588  00FEE6  52                 	db	82	;'R'
  1589  00FEE7  20                 	db	32
  1590  00FEE8  25                 	db	37
  1591  00FEE9  33                 	db	51	;'3'
  1592  00FEEA  2E                 	db	46
  1593  00FEEB  32                 	db	50	;'2'
  1594  00FEEC  66                 	db	102	;'f'
  1595  00FEED  20                 	db	32
  1596  00FEEE  20                 	db	32
  1597  00FEEF  20                 	db	32
  1598  00FEF0  20                 	db	32
  1599  00FEF1  00                 	db	0
  1600  00FEF2                     STR_18:
  1601                           
  1602                           ; BSR set to: 57
  1603  00FEF2  42                 	db	66	;'B'
  1604  00FEF3  41                 	db	65	;'A'
  1605  00FEF4  54                 	db	84	;'T'
  1606  00FEF5  54                 	db	84	;'T'
  1607  00FEF6  20                 	db	32
  1608  00FEF7  50                 	db	80	;'P'
  1609  00FEF8  57                 	db	87	;'W'
  1610  00FEF9  52                 	db	82	;'R'
  1611  00FEFA  20                 	db	32
  1612  00FEFB  25                 	db	37
  1613  00FEFC  33                 	db	51	;'3'
  1614  00FEFD  2E                 	db	46
  1615  00FEFE  32                 	db	50	;'2'
  1616  00FEFF  66                 	db	102	;'f'
  1617  00FF00  20                 	db	32
  1618  00FF01  20                 	db	32
  1619  00FF02  20                 	db	32
  1620  00FF03  20                 	db	32
  1621  00FF04  00                 	db	0
  1622  00FF05                     STR_16:
  1623                           
  1624                           ; BSR set to: 57
  1625  00FF05  42                 	db	66	;'B'
  1626  00FF06  56                 	db	86	;'V'
  1627  00FF07  20                 	db	32
  1628  00FF08  25                 	db	37
  1629  00FF09  32                 	db	50	;'2'
  1630  00FF0A  2E                 	db	46
  1631  00FF0B  32                 	db	50	;'2'
  1632  00FF0C  66                 	db	102	;'f'
  1633  00FF0D  20                 	db	32
  1634  00FF0E  42                 	db	66	;'B'
  1635  00FF0F  41                 	db	65	;'A'
  1636  00FF10  20                 	db	32
  1637  00FF11  25                 	db	37
  1638  00FF12  32                 	db	50	;'2'
  1639  00FF13  2E                 	db	46
  1640  00FF14  32                 	db	50	;'2'
  1641  00FF15  66                 	db	102	;'f'
  1642  00FF16  20                 	db	32
  1643  00FF17  00                 	db	0
  1644  00FF18                     STR_17:
  1645                           
  1646                           ; BSR set to: 57
  1647  00FF18  43                 	db	67	;'C'
  1648  00FF19  56                 	db	86	;'V'
  1649  00FF1A  20                 	db	32
  1650  00FF1B  25                 	db	37
  1651  00FF1C  32                 	db	50	;'2'
  1652  00FF1D  2E                 	db	46
  1653  00FF1E  32                 	db	50	;'2'
  1654  00FF1F  66                 	db	102	;'f'
  1655  00FF20  20                 	db	32
  1656  00FF21  4C                 	db	76	;'L'
  1657  00FF22  41                 	db	65	;'A'
  1658  00FF23  20                 	db	32
  1659  00FF24  25                 	db	37
  1660  00FF25  32                 	db	50	;'2'
  1661  00FF26  2E                 	db	46
  1662  00FF27  32                 	db	50	;'2'
  1663  00FF28  66                 	db	102	;'f'
  1664  00FF29  20                 	db	32
  1665  00FF2A  00                 	db	0
  1666  00FF2B                     STR_15:
  1667                           
  1668                           ; BSR set to: 57
  1669  00FF2B  50                 	db	80	;'P'
  1670  00FF2C  56                 	db	86	;'V'
  1671  00FF2D  20                 	db	32
  1672  00FF2E  25                 	db	37
  1673  00FF2F  32                 	db	50	;'2'
  1674  00FF30  2E                 	db	46
  1675  00FF31  32                 	db	50	;'2'
  1676  00FF32  66                 	db	102	;'f'
  1677  00FF33  20                 	db	32
  1678  00FF34  50                 	db	80	;'P'
  1679  00FF35  41                 	db	65	;'A'
  1680  00FF36  20                 	db	32
  1681  00FF37  25                 	db	37
  1682  00FF38  32                 	db	50	;'2'
  1683  00FF39  2E                 	db	46
  1684  00FF3A  32                 	db	50	;'2'
  1685  00FF3B  66                 	db	102	;'f'
  1686  00FF3C  20                 	db	32
  1687  00FF3D  00                 	db	0
  1688  00FF3E                     STR_8:
  1689                           
  1690                           ; BSR set to: 57
  1691  00FF3E  20                 	db	32
  1692  00FF3F  56                 	db	86	;'V'
  1693  00FF40  54                 	db	84	;'T'
  1694  00FF41  45                 	db	69	;'E'
  1695  00FF42  52                 	db	82	;'R'
  1696  00FF43  4D                 	db	77	;'M'
  1697  00FF44  20                 	db	32
  1698  00FF45  23                 	db	35
  1699  00FF46  32                 	db	50	;'2'
  1700  00FF47  20                 	db	32
  1701  00FF48  20                 	db	32
  1702  00FF49  20                 	db	32
  1703  00FF4A  20                 	db	32
  1704  00FF4B  20                 	db	32
  1705  00FF4C  20                 	db	32
  1706  00FF4D  20                 	db	32
  1707  00FF4E  00                 	db	0
  1708  00FF4F                     STR_4:
  1709                           
  1710                           ; BSR set to: 57
  1711  00FF4F  20                 	db	32
  1712  00FF50  4E                 	db	78	;'N'
  1713  00FF51  53                 	db	83	;'S'
  1714  00FF52  41                 	db	65	;'A'
  1715  00FF53  53                 	db	83	;'S'
  1716  00FF54  50                 	db	80	;'P'
  1717  00FF55  4F                 	db	79	;'O'
  1718  00FF56  4F                 	db	79	;'O'
  1719  00FF57  4B                 	db	75	;'K'
  1720  00FF58  20                 	db	32
  1721  00FF59  20                 	db	32
  1722  00FF5A  20                 	db	32
  1723  00FF5B  20                 	db	32
  1724  00FF5C  20                 	db	32
  1725  00FF5D  20                 	db	32
  1726  00FF5E  20                 	db	32
  1727  00FF5F  00                 	db	0
  1728  00FF60                     STR_1:
  1729                           
  1730                           ; BSR set to: 57
  1731  00FF60  20                 	db	32
  1732  00FF61  4D                 	db	77	;'M'
  1733  00FF62  42                 	db	66	;'B'
  1734  00FF63  4D                 	db	77	;'M'
  1735  00FF64  43                 	db	67	;'C'
  1736  00FF65  20                 	db	32
  1737  00FF66  53                 	db	83	;'S'
  1738  00FF67  4F                 	db	79	;'O'
  1739  00FF68  4C                 	db	76	;'L'
  1740  00FF69  41                 	db	65	;'A'
  1741  00FF6A  52                 	db	82	;'R'
  1742  00FF6B  4D                 	db	77	;'M'
  1743  00FF6C  4F                 	db	79	;'O'
  1744  00FF6D  4E                 	db	78	;'N'
  1745  00FF6E  20                 	db	32
  1746  00FF6F  20                 	db	32
  1747  00FF70  00                 	db	0
  1748  00FF71                     STR_5:
  1749                           
  1750                           ; BSR set to: 57
  1751  00FF71  20                 	db	32
  1752  00FF72  53                 	db	83	;'S'
  1753  00FF73  45                 	db	69	;'E'
  1754  00FF74  51                 	db	81	;'Q'
  1755  00FF75  55                 	db	85	;'U'
  1756  00FF76  45                 	db	69	;'E'
  1757  00FF77  4E                 	db	78	;'N'
  1758  00FF78  43                 	db	67	;'C'
  1759  00FF79  45                 	db	69	;'E'
  1760  00FF7A  20                 	db	32
  1761  00FF7B  54                 	db	84	;'T'
  1762  00FF7C  45                 	db	69	;'E'
  1763  00FF7D  53                 	db	83	;'S'
  1764  00FF7E  54                 	db	84	;'T'
  1765  00FF7F  20                 	db	32
  1766  00FF80  20                 	db	32
  1767  00FF81  00                 	db	0
  1768  00FF82                     STR_11:
  1769                           
  1770                           ; BSR set to: 57
  1771  00FF82  25                 	db	37
  1772  00FF83  64                 	db	100	;'d'
  1773  00FF84  20                 	db	32
  1774  00FF85  25                 	db	37
  1775  00FF86  32                 	db	50	;'2'
  1776  00FF87  2E                 	db	46
  1777  00FF88  34                 	db	52	;'4'
  1778  00FF89  66                 	db	102	;'f'
  1779  00FF8A  2C                 	db	44
  1780  00FF8B  20                 	db	32
  1781  00FF8C  25                 	db	37
  1782  00FF8D  64                 	db	100	;'d'
  1783  00FF8E  20                 	db	32
  1784  00FF8F  20                 	db	32
  1785  00FF90  20                 	db	32
  1786  00FF91  23                 	db	35
  1787  00FF92  00                 	db	0
  1788  00FF93                     STR_9:
  1789                           
  1790                           ; BSR set to: 57
  1791  00FF93  25                 	db	37
  1792  00FF94  64                 	db	100	;'d'
  1793  00FF95  20                 	db	32
  1794  00FF96  25                 	db	37
  1795  00FF97  32                 	db	50	;'2'
  1796  00FF98  2E                 	db	46
  1797  00FF99  34                 	db	52	;'4'
  1798  00FF9A  66                 	db	102	;'f'
  1799  00FF9B  20                 	db	32
  1800  00FF9C  20                 	db	32
  1801  00FF9D  20                 	db	32
  1802  00FF9E  25                 	db	37
  1803  00FF9F  64                 	db	100	;'d'
  1804  00FFA0  20                 	db	32
  1805  00FFA1  20                 	db	32
  1806  00FFA2  00                 	db	0
  1807  00FFA3                     STR_33:
  1808                           
  1809                           ; BSR set to: 57
  1810  00FFA3  76                 	db	118	;'v'
  1811  00FFA4  74                 	db	116	;'t'
  1812  00FFA5  65                 	db	101	;'e'
  1813  00FFA6  72                 	db	114	;'r'
  1814  00FFA7  6D                 	db	109	;'m'
  1815  00FFA8  20                 	db	32
  1816  00FFA9  25                 	db	37
  1817  00FFAA  78                 	db	120	;'x'
  1818  00FFAB  3A                 	db	58	;':'
  1819  00FFAC  25                 	db	37
  1820  00FFAD  78                 	db	120	;'x'
  1821  00FFAE  20                 	db	32
  1822  00FFAF  20                 	db	32
  1823  00FFB0  20                 	db	32
  1824  00FFB1  00                 	db	0
  1825  00FFB2                     STR_2:
  1826                           
  1827                           ; BSR set to: 57
  1828  00FFB2  20                 	db	32
  1829  00FFB3  56                 	db	86	;'V'
  1830  00FFB4  65                 	db	101	;'e'
  1831  00FFB5  72                 	db	114	;'r'
  1832  00FFB6  73                 	db	115	;'s'
  1833  00FFB7  69                 	db	105	;'i'
  1834  00FFB8  6F                 	db	111	;'o'
  1835  00FFB9  6E                 	db	110	;'n'
  1836  00FFBA  20                 	db	32
  1837  00FFBB  25                 	db	37
  1838  00FFBC  73                 	db	115	;'s'
  1839  00FFBD  20                 	db	32
  1840  00FFBE  20                 	db	32
  1841  00FFBF  20                 	db	32
  1842  00FFC0  00                 	db	0
  1843  00FFC1                     STR_27:
  1844                           
  1845                           ; BSR set to: 57
  1846  00FFC1  44                 	db	68	;'D'
  1847  00FFC2  65                 	db	101	;'e'
  1848  00FFC3  63                 	db	99	;'c'
  1849  00FFC4  20                 	db	32
  1850  00FFC5  20                 	db	32
  1851  00FFC6  36                 	db	54	;'6'
  1852  00FFC7  20                 	db	32
  1853  00FFC8  32                 	db	50	;'2'
  1854  00FFC9  30                 	db	48	;'0'
  1855  00FFCA  31                 	db	49	;'1'
  1856  00FFCB  39                 	db	57	;'9'
  1857  00FFCC  00                 	db	0
  1858  00FFCD                     STR_31:
  1859                           
  1860                           ; BSR set to: 57
  1861  00FFCD  25                 	db	37
  1862  00FFCE  73                 	db	115	;'s'
  1863  00FFCF  20                 	db	32
  1864  00FFD0  20                 	db	32
  1865  00FFD1  20                 	db	32
  1866  00FFD2  20                 	db	32
  1867  00FFD3  20                 	db	32
  1868  00FFD4  20                 	db	32
  1869  00FFD5  20                 	db	32
  1870  00FFD6  00                 	db	0
  1871  00FFD7                     STR_28:
  1872                           
  1873                           ; BSR set to: 57
  1874  00FFD7  30                 	db	48	;'0'
  1875  00FFD8  39                 	db	57	;'9'
  1876  00FFD9  3A                 	db	58	;':'
  1877  00FFDA  31                 	db	49	;'1'
  1878  00FFDB  31                 	db	49	;'1'
  1879  00FFDC  3A                 	db	58	;':'
  1880  00FFDD  35                 	db	53	;'5'
  1881  00FFDE  36                 	db	54	;'6'
  1882  00FFDF  00                 	db	0
  1883  00FFE0                     STR_3:
  1884                           
  1885                           ; BSR set to: 57
  1886  00FFE0  30                 	db	48	;'0'
  1887  00FFE1  2E                 	db	46
  1888  00FFE2  39                 	db	57	;'9'
  1889  00FFE3  39                 	db	57	;'9'
  1890  00FFE4  39                 	db	57	;'9'
  1891  00FFE5  00                 	db	0
  1892  00FFE6                     STR_46:
  1893                           
  1894                           ; BSR set to: 57
  1895  00FFE6  49                 	db	73	;'I'
  1896  00FFE7  4E                 	db	78	;'N'
  1897  00FFE8  46                 	db	70	;'F'
  1898  00FFE9  00                 	db	0
  1899  00FFEA                     STR_50:
  1900                           
  1901                           ; BSR set to: 57
  1902  00FFEA  4E                 	db	78	;'N'
  1903  00FFEB  41                 	db	65	;'A'
  1904  00FFEC  4E                 	db	78	;'N'
  1905  00FFED  00                 	db	0
  1906  00FFEE                     STR_47:
  1907                           
  1908                           ; BSR set to: 57
  1909  00FFEE  69                 	db	105	;'i'
  1910  00FFEF  6E                 	db	110	;'n'
  1911  00FFF0  66                 	db	102	;'f'
  1912  00FFF1  00                 	db	0
  1913  00FFF2                     STR_51:
  1914                           
  1915                           ; BSR set to: 57
  1916  00FFF2  6E                 	db	110	;'n'
  1917  00FFF3  61                 	db	97	;'a'
  1918  00FFF4  6E                 	db	110	;'n'
  1919  00FFF5  00                 	db	0
  1920  00FFF6                     STR_54:
  1921                           
  1922                           ; BSR set to: 57
  1923  00FFF6  6C                 	db	108	;'l'
  1924  00FFF7  66                 	db	102	;'f'
  1925  00FFF8  00                 	db	0
  1926  00FFF9                     STR_25:
  1927                           
  1928                           ; BSR set to: 57
  1929  00FFF9  25                 	db	37
  1930  00FFFA  63                 	db	99	;'c'
  1931  00FFFB  00                 	db	0
  1932  00FFFC                     STR_24:
  1933                           
  1934                           ; BSR set to: 57
  1935  00FFFC  25                 	db	37
  1936  00FFFD  73                 	db	115	;'s'
  1937  00FFFE  00                 	db	0
  1938  0000                     
  1939                           ; #config settings
  1940  00FFFF  00                 	db	0	; dummy byte at the end
  1941  0000                     
  1942                           	psect	cinit
  1943  0179F6                     __pcinit:
  1944                           	opt callstack 0
  1945  0179F6                     start_initialization:
  1946                           	opt callstack 0
  1947  0179F6                     __initialization:
  1948                           	opt callstack 0
  1949                           
  1950                           ; Initialize objects allocated to BANK2 (204 bytes)
  1951                           ; load TBLPTR registers with __pidataBANK2
  1952  0179F6  0E77               	movlw	low __pidataBANK2
  1953  0179F8  6EF6               	movwf	tblptrl,c
  1954  0179FA  0E7D               	movlw	high __pidataBANK2
  1955  0179FC  6EF7               	movwf	tblptrh,c
  1956  0179FE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1957  017A00  6EF8               	movwf	tblptru,c
  1958  017A02  EE00  F200         	lfsr	0,__pdataBANK2
  1959  017A06  EE20 F0CC          	lfsr	2,204
  1960  017A0A                     copy_data0:
  1961  017A0A  0009               	tblrd		*+
  1962  017A0C  006F FFD7 FFEE     	movff	tablat,postinc0
  1963  017A12  50DD               	movf	postdec2,w,c
  1964  017A14  50D9               	movf	fsr2l,w,c
  1965  017A16  E1F9               	bnz	copy_data0
  1966                           
  1967                           ; Initialize objects allocated to BANK1 (211 bytes)
  1968                           ; load TBLPTR registers with __pidataBANK1
  1969  017A18  0EA4               	movlw	low __pidataBANK1
  1970  017A1A  6EF6               	movwf	tblptrl,c
  1971  017A1C  0E7C               	movlw	high __pidataBANK1
  1972  017A1E  6EF7               	movwf	tblptrh,c
  1973  017A20  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1974  017A22  6EF8               	movwf	tblptru,c
  1975  017A24  EE00  F100         	lfsr	0,__pdataBANK1
  1976  017A28  EE20 F0D3          	lfsr	2,211
  1977  017A2C                     copy_data1:
  1978  017A2C  0009               	tblrd		*+
  1979  017A2E  006F FFD7 FFEE     	movff	tablat,postinc0
  1980  017A34  50DD               	movf	postdec2,w,c
  1981  017A36  50D9               	movf	fsr2l,w,c
  1982  017A38  E1F9               	bnz	copy_data1
  1983                           
  1984                           ; Initialize objects allocated to BANK0 (54 bytes)
  1985                           ; load TBLPTR registers with __pidataBANK0
  1986  017A3A  0E86               	movlw	low __pidataBANK0
  1987  017A3C  6EF6               	movwf	tblptrl,c
  1988  017A3E  0E90               	movlw	high __pidataBANK0
  1989  017A40  6EF7               	movwf	tblptrh,c
  1990  017A42  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1991  017A44  6EF8               	movwf	tblptru,c
  1992  017A46  EE00  F0C9         	lfsr	0,__pdataBANK0
  1993  017A4A  EE20 F036          	lfsr	2,54
  1994  017A4E                     copy_data2:
  1995  017A4E  0009               	tblrd		*+
  1996  017A50  006F FFD7 FFEE     	movff	tablat,postinc0
  1997  017A56  50DD               	movf	postdec2,w,c
  1998  017A58  50D9               	movf	fsr2l,w,c
  1999  017A5A  E1F9               	bnz	copy_data2
  2000                           
  2001                           ; Clear objects allocated to BIGRAM (290 bytes)
  2002  017A5C  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  2003  017A60  EE20 F122          	lfsr	2,290
  2004  017A64                     clear_0:
  2005  017A64  6AEE               	clrf	postinc0,c
  2006  017A66  50DD               	movf	postdec2,w,c
  2007  017A68  50D9               	movf	fsr2l,w,c
  2008  017A6A  E1FC               	bnz	clear_0
  2009  017A6C  50DA               	movf	fsr2h,w,c
  2010  017A6E  E1FA               	bnz	clear_0
  2011                           
  2012                           ; Clear objects allocated to BANK6 (255 bytes)
  2013  017A70  EE01  F200         	lfsr	0,__pbssBANK6
  2014  017A74  EE20 F0FF          	lfsr	2,255
  2015  017A78                     clear_1:
  2016  017A78  6AEE               	clrf	postinc0,c
  2017  017A7A  50DD               	movf	postdec2,w,c
  2018  017A7C  50D9               	movf	fsr2l,w,c
  2019  017A7E  E1FC               	bnz	clear_1
  2020  017A80  50DA               	movf	fsr2h,w,c
  2021  017A82  E1FA               	bnz	clear_1
  2022                           
  2023                           ; Clear objects allocated to BANK5 (255 bytes)
  2024  017A84  EE01  F100         	lfsr	0,__pbssBANK5
  2025  017A88  EE20 F0FF          	lfsr	2,255
  2026  017A8C                     clear_2:
  2027  017A8C  6AEE               	clrf	postinc0,c
  2028  017A8E  50DD               	movf	postdec2,w,c
  2029  017A90  50D9               	movf	fsr2l,w,c
  2030  017A92  E1FC               	bnz	clear_2
  2031  017A94  50DA               	movf	fsr2h,w,c
  2032  017A96  E1FA               	bnz	clear_2
  2033                           
  2034                           ; Clear objects allocated to BANK4 (198 bytes)
  2035  017A98  EE01  F000         	lfsr	0,__pbssBANK4
  2036  017A9C  0EC6               	movlw	198
  2037  017A9E                     clear_3:
  2038  017A9E  6AEE               	clrf	postinc0,c
  2039  017AA0  06E8               	decf	wreg,f,c
  2040  017AA2  E1FD               	bnz	clear_3
  2041                           
  2042                           ; Clear objects allocated to BANK3 (228 bytes)
  2043  017AA4  EE00  F300         	lfsr	0,__pbssBANK3
  2044  017AA8  0EE4               	movlw	228
  2045  017AAA                     clear_4:
  2046  017AAA  6AEE               	clrf	postinc0,c
  2047  017AAC  06E8               	decf	wreg,f,c
  2048  017AAE  E1FD               	bnz	clear_4
  2049                           
  2050                           ; Clear objects allocated to BANK1 (32 bytes)
  2051  017AB0  EE00  F1D3         	lfsr	0,__pbssBANK1
  2052  017AB4  0E20               	movlw	32
  2053  017AB6                     clear_5:
  2054  017AB6  6AEE               	clrf	postinc0,c
  2055  017AB8  06E8               	decf	wreg,f,c
  2056  017ABA  E1FD               	bnz	clear_5
  2057                           
  2058                           ; Clear objects allocated to BANK0 (105 bytes)
  2059  017ABC  EE00  F060         	lfsr	0,__pbssBANK0
  2060  017AC0  0E69               	movlw	105
  2061  017AC2                     clear_6:
  2062  017AC2  6AEE               	clrf	postinc0,c
  2063  017AC4  06E8               	decf	wreg,f,c
  2064  017AC6  E1FD               	bnz	clear_6
  2065                           
  2066                           ; Clear objects allocated to COMRAM (31 bytes)
  2067  017AC8  EE00  F021         	lfsr	0,__pbssCOMRAM
  2068  017ACC  0E1F               	movlw	31
  2069  017ACE                     clear_7:
  2070  017ACE  6AEE               	clrf	postinc0,c
  2071  017AD0  06E8               	decf	wreg,f,c
  2072  017AD2  E1FD               	bnz	clear_7
  2073                           
  2074                           ;
  2075                           ; Setup IVTBASE
  2076                           ;
  2077  017AD4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2078  017AD6  6ED5               	movwf	213,c
  2079  017AD8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2080  017ADA  6ED6               	movwf	214,c
  2081  017ADC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2082  017ADE  6ED7               	movwf	215,c
  2083  017AE0                     end_of_initialization:
  2084                           	opt callstack 0
  2085  017AE0                     __end_of__initialization:
  2086                           	opt callstack 0
  2087  017AE0  0100               	movlb	0
  2088  017AE2  EFC1  F08E         	goto	_main	;jump to C main() function
  2089                           
  2090                           	psect	bssCOMRAM
  2091  000021                     __pbssCOMRAM:
  2092                           	opt callstack 0
  2093  000021                     _INT0_InterruptHandler:
  2094                           	opt callstack 0
  2095  000021                     	ds	3
  2096  000024                     _width:
  2097                           	opt callstack 0
  2098  000024                     	ds	2
  2099  000026                     _prec:
  2100                           	opt callstack 0
  2101  000026                     	ds	2
  2102  000028                     _flags:
  2103                           	opt callstack 0
  2104  000028                     	ds	2
  2105  00002A                     TMR3_ISR@CountCallBack:
  2106                           	opt callstack 0
  2107  00002A                     	ds	2
  2108  00002C                     _timer3ReloadVal:
  2109                           	opt callstack 0
  2110  00002C                     	ds	2
  2111  00002E                     TMR5_ISR@CountCallBack:
  2112                           	opt callstack 0
  2113  00002E                     	ds	2
  2114  000030                     _timer5ReloadVal:
  2115                           	opt callstack 0
  2116  000030                     	ds	2
  2117  000032                     Volts_to_SOC@slot:
  2118                           	opt callstack 0
  2119  000032                     	ds	1
  2120  000033                     _mode_sw:
  2121                           	opt callstack 0
  2122  000033                     	ds	1
  2123  000034                     _uart2RxCount:
  2124                           	opt callstack 0
  2125  000034                     	ds	1
  2126  000035                     _uart2RxTail:
  2127                           	opt callstack 0
  2128  000035                     	ds	1
  2129  000036                     _uart2RxHead:
  2130                           	opt callstack 0
  2131  000036                     	ds	1
  2132  000037                     _uart2TxBufferRemaining:
  2133                           	opt callstack 0
  2134  000037                     	ds	1
  2135  000038                     _uart2TxTail:
  2136                           	opt callstack 0
  2137  000038                     	ds	1
  2138  000039                     _uart2TxHead:
  2139                           	opt callstack 0
  2140  000039                     	ds	1
  2141  00003A                     _uart1RxCount:
  2142                           	opt callstack 0
  2143  00003A                     	ds	1
  2144  00003B                     _uart1RxTail:
  2145                           	opt callstack 0
  2146  00003B                     	ds	1
  2147  00003C                     _uart1RxHead:
  2148                           	opt callstack 0
  2149  00003C                     	ds	1
  2150  00003D                     _uart1TxBufferRemaining:
  2151                           	opt callstack 0
  2152  00003D                     	ds	1
  2153  00003E                     _uart1TxTail:
  2154                           	opt callstack 0
  2155  00003E                     	ds	1
  2156  00003F                     _uart1TxHead:
  2157                           	opt callstack 0
  2158  00003F                     	ds	1
  2159                           
  2160                           	psect	bssBANK0
  2161  000060                     __pbssBANK0:
  2162                           	opt callstack 0
  2163  000060                     _S:
  2164                           	opt callstack 0
  2165  000060                     	ds	41
  2166  000089                     _spi_link:
  2167                           	opt callstack 0
  2168  000089                     	ds	12
  2169  000095                     floorf@F524:
  2170                           	opt callstack 0
  2171  000095                     	ds	4
  2172  000099                     ___fpclassifyf@F463:
  2173                           	opt callstack 0
  2174  000099                     	ds	4
  2175  00009D                     _utctime:
  2176                           	opt callstack 0
  2177  00009D                     	ds	4
  2178  0000A1                     wdtdelay@dcount:
  2179                           	opt callstack 0
  2180  0000A1                     	ds	4
  2181  0000A5                     _P:
  2182                           	opt callstack 0
  2183  0000A5                     	ds	4
  2184  0000A9                     _TMR3_InterruptHandler:
  2185                           	opt callstack 0
  2186  0000A9                     	ds	3
  2187  0000AC                     _TMR5_InterruptHandler:
  2188                           	opt callstack 0
  2189  0000AC                     	ds	3
  2190  0000AF                     _TMR6_InterruptHandler:
  2191                           	opt callstack 0
  2192  0000AF                     	ds	3
  2193  0000B2                     _ADCC_ADTI_InterruptHandler:
  2194                           	opt callstack 0
  2195  0000B2                     	ds	3
  2196  0000B5                     _ADCC_ADI_InterruptHandler:
  2197                           	opt callstack 0
  2198  0000B5                     	ds	3
  2199  0000B8                     _UART1_TxInterruptHandler:
  2200                           	opt callstack 0
  2201  0000B8                     	ds	3
  2202  0000BB                     _UART1_RxInterruptHandler:
  2203                           	opt callstack 0
  2204  0000BB                     	ds	3
  2205  0000BE                     _UART2_TxInterruptHandler:
  2206                           	opt callstack 0
  2207  0000BE                     	ds	3
  2208  0000C1                     _UART2_RxInterruptHandler:
  2209                           	opt callstack 0
  2210  0000C1                     	ds	3
  2211  0000C4                     _INT1_InterruptHandler:
  2212                           	opt callstack 0
  2213  0000C4                     	ds	3
  2214  0000C7                     _nout:
  2215                           	opt callstack 0
  2216  0000C7                     	ds	2
  2217                           
  2218                           	psect	dataBANK0
  2219  0000C9                     __pdataBANK0:
  2220                           	opt callstack 0
  2221  0000C9                     _R:
  2222                           	opt callstack 0
  2223  0000C9                     	ds	40
  2224  0000F1                     stoa@F1166:
  2225                           	opt callstack 0
  2226  0000F1                     	ds	7
  2227  0000F8                     _H:
  2228                           	opt callstack 0
  2229  0000F8                     	ds	7
  2230                           
  2231                           	psect	bssBANK1
  2232  0001D3                     __pbssBANK1:
  2233                           	opt callstack 0
  2234  0001D3                     _tickCount:
  2235                           	opt callstack 0
  2236  0001D3                     	ds	24
  2237  0001EB                     _seed:
  2238                           	opt callstack 0
  2239  0001EB                     	ds	8
  2240                           
  2241                           	psect	dataBANK1
  2242  000100                     __pdataBANK1:
  2243                           	opt callstack 0
  2244  000100                     _C:
  2245                           	opt callstack 0
  2246  000100                     	ds	211
  2247                           
  2248                           	psect	dataBANK2
  2249  000200                     __pdataBANK2:
  2250                           	opt callstack 0
  2251  000200                     _V:
  2252                           	opt callstack 0
  2253  000200                     	ds	188
  2254  0002BC                     _port_data:
  2255                           	opt callstack 0
  2256  0002BC                     	ds	16
  2257                           
  2258                           	psect	bssBANK3
  2259  000300                     __pbssBANK3:
  2260                           	opt callstack 0
  2261  000300                     lp_filter@smooth:
  2262                           	opt callstack 0
  2263  000300                     	ds	84
  2264  000354                     _uart1TxBuffer:
  2265                           	opt callstack 0
  2266  000354                     	ds	64
  2267  000394                     _dbuf:
  2268                           	opt callstack 0
  2269  000394                     	ds	80
  2270                           
  2271                           	psect	bssBANK4
  2272  000400                     __pbssBANK4:
  2273                           	opt callstack 0
  2274  000400                     _uart2TxBuffer:
  2275                           	opt callstack 0
  2276  000400                     	ds	64
  2277  000440                     _ring_buf2:
  2278                           	opt callstack 0
  2279  000440                     	ds	67
  2280  000483                     _ring_buf1:
  2281                           	opt callstack 0
  2282  000483                     	ds	67
  2283                           
  2284                           	psect	bssBANK5
  2285  000500                     __pbssBANK5:
  2286                           	opt callstack 0
  2287  000500                     _uart1RxBuffer:
  2288                           	opt callstack 0
  2289  000500                     	ds	255
  2290                           
  2291                           	psect	bssBANK6
  2292  000600                     __pbssBANK6:
  2293                           	opt callstack 0
  2294  000600                     _uart2RxBuffer:
  2295                           	opt callstack 0
  2296  000600                     	ds	255
  2297                           
  2298                           	psect	bssBIGRAM
  2299  0006FF                     __pbssBIGRAM:
  2300                           	opt callstack 0
  2301  0006FF                     _D:
  2302                           	opt callstack 0
  2303  0006FF                     	ds	290
  2304                           
  2305                           	psect	cstackBANK2
  2306  0002CC                     __pcstackBANK2:
  2307                           	opt callstack 0
  2308  0002CC                     ??_TMR3_ISR:
  2309                           
  2310                           ; 1 bytes @ 0x0
  2311  0002CC                     	ds	17
  2312                           
  2313                           	psect	cstackCOMRAM
  2314  000040                     __pcstackCOMRAM:
  2315                           	opt callstack 0
  2316  000040                     ??_ADCC_ThresholdISR:
  2317  000040                     
  2318                           ; 1 bytes @ 0x0
  2319  000040                     	ds	5
  2320  000045                     ??_TMR6_ISR:
  2321                           
  2322                           ; 1 bytes @ 0x5
  2323  000045                     	ds	1
  2324  000046                     ??_INT1_ISR:
  2325  000046                     
  2326                           ; 1 bytes @ 0x6
  2327  000046                     	ds	4
  2328  00004A                     ??_TMR5_ISR:
  2329                           
  2330                           ; 1 bytes @ 0xA
  2331  00004A                     	ds	4
  2332                           
  2333 ;;
  2334 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2335 ;;
  2336 ;; *************** function _main *****************
  2337 ;; Defined at:
  2338 ;;		line 171 in file "main.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  k               1  [STACK] unsigned char 
  2343 ;;  j               1  [STACK] unsigned char 
  2344 ;;  i               1  [STACK] unsigned char 
  2345 ;;  inp_index       1  [STACK] unsigned char 
  2346 ;;  mode            1  [STACK] enum E17022
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1  [STACK] void 
  2349 ;; Registers used:
  2350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels required when called:   20
  2362 ;; This function calls:
  2363 ;;		_SYSTEM_Initialize
  2364 ;;		_StartTimer
  2365 ;;		_TimerDone
  2366 ;;		_WaitMs
  2367 ;;		_calc_model_data
  2368 ;;		_check_adc_scan
  2369 ;;		_check_enter_button
  2370 ;;		_check_help
  2371 ;;		_clear_adc_scan
  2372 ;;		_clear_hid_pflags
  2373 ;;		_convert_adc_data
  2374 ;;		_eaDogM_WriteCommand
  2375 ;;		_get_raw_result
  2376 ;;		_get_switch
  2377 ;;		_get_vterm_ptr
  2378 ;;		_hid_display
  2379 ;;		_init_bsoc
  2380 ;;		_init_display
  2381 ;;		_lp_filter
  2382 ;;		_mode_lamp_dim
  2383 ;;		_set_display_info
  2384 ;;		_set_vterm
  2385 ;;		_sprintf
  2386 ;;		_srand
  2387 ;;		_start_adc_scan
  2388 ;;		_start_switch_handler
  2389 ;;		_static_soc
  2390 ;;		_update_lcd
  2391 ;; This function is called by:
  2392 ;;		Startup code after reset
  2393 ;; This function uses a reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text0
  2397  011D82                     __ptext0:
  2398                           	opt callstack 0
  2399  011D82                     _main:
  2400                           	opt callstack 0
  2401                           
  2402                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2403  011D82  0E05               	movlw	5
  2404  011D84  26E1               	addwf	fsr1l,f,c
  2405  011D86  0E00               	movlw	0
  2406  011D88  22E2               	addwfc	fsr1h,f,c
  2407                           
  2408                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2409                           ;stkvar	_inp_index @ sp[(-5)+3]
  2410                           
  2411                           ;incstack = 0
  2412  011D8A  0EFE               	movlw	-2
  2413  011D8C  6AE3               	clrf	plusw1,c
  2414                           
  2415                           ;stkvar	_i @ sp[(-5)+2]
  2416  011D8E  0EFD               	movlw	-3
  2417  011D90  6AE3               	clrf	plusw1,c
  2418                           
  2419                           ;stkvar	_j @ sp[(-5)+1]
  2420  011D92  0EFC               	movlw	-4
  2421  011D94  6AE3               	clrf	plusw1,c
  2422  011D96  2AE3               	incf	plusw1,f,c
  2423                           
  2424                           ;stkvar	_k @ sp[(-5)+0]
  2425  011D98  0EFB               	movlw	-5
  2426  011D9A  6AE3               	clrf	plusw1,c
  2427  011D9C  82E3               	bsf	plusw1,1,c
  2428                           
  2429                           ;main.c: 177:  SYSTEM_Initialize();
  2430  011D9E  EC70  F0C6         	call	_SYSTEM_Initialize	;wreg free
  2431                           
  2432                           ; BSR set to: 60
  2433                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2434  011DA2  8ED2               	bsf	210,7,c	;volatile
  2435                           
  2436                           ; BSR set to: 60
  2437                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2438  011DA4  8CD2               	bsf	210,6,c	;volatile
  2439                           
  2440                           ; BSR set to: 60
  2441                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2442  011DA6  0102               	movlb	2	; () banked
  2443  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2444                           
  2445                           ; BSR set to: 2
  2446                           ;main.c: 190:  WaitMs(300);
  2447  011DAA  0E2C               	movlw	44
  2448  011DAC  6EE6               	movwf	postinc1,c
  2449  011DAE  0E01               	movlw	1
  2450  011DB0  6EE6               	movwf	postinc1,c
  2451  011DB2  EC5E  F0C8         	call	_WaitMs	;wreg free
  2452                           
  2453                           ;main.c: 191:  if (PORTBbits.RB0) {
  2454  011DB6  A0CB               	btfss	203,0,c	;volatile
  2455  011DB8  D004               	goto	l11392
  2456                           
  2457                           ;main.c: 192:   mode = UI_STATE_HOST;
  2458                           ;stkvar	_mode @ sp[(-5)+4]
  2459  011DBA  0EFF               	movlw	-1
  2460  011DBC  6AE3               	clrf	plusw1,c
  2461  011DBE  2AE3               	incf	plusw1,f,c
  2462                           
  2463                           ;main.c: 193:  } else {
  2464  011DC0  D004               	goto	l11394
  2465  011DC2                     l11392:
  2466                           
  2467                           ;main.c: 194:   mode = UI_STATE_LOG;
  2468                           ;stkvar	_mode @ sp[(-5)+4]
  2469  011DC2  0EFF               	movlw	-1
  2470  011DC4  6AE3               	clrf	plusw1,c
  2471  011DC6  80E3               	bsf	plusw1,0,c
  2472  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2473  011DCA                     l11394:
  2474                           
  2475                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2476                           ;stkvar	_mode @ sp[(-5)+4]
  2477  011DCA  0EFF               	movlw	-1
  2478  011DCC  04E3               	decf	plusw1,w,c
  2479  011DCE  A4D8               	btfss	status,2,c
  2480  011DD0  D007               	goto	l1338
  2481                           
  2482                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2483  011DD2  80BD               	bsf	189,0,c	;volatile
  2484                           
  2485                           ;main.c: 199:   V.mode_pwm = 70;
  2486  011DD4  0E00               	movlw	0
  2487  011DD6  0102               	movlb	2	; () banked
  2488  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2489  011DDA  0E46               	movlw	70
  2490  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2491                           
  2492                           ;main.c: 200:  } else {
  2493  011DDE  D004               	goto	l11398
  2494  011DE0                     l1338:
  2495  011DE0  90BD               	bcf	189,0,c	;volatile
  2496                           
  2497                           ;main.c: 202:   V.mode_pwm = 0;
  2498  011DE2  0102               	movlb	2	; () banked
  2499  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2500  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2501  011DE8                     l11398:
  2502                           
  2503                           ; BSR set to: 2
  2504                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2505  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2506  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2507  011DF4  EC45  F0CC         	call	_mode_lamp_dim	;wreg free
  2508  011DF8  D0DA               	goto	l11448
  2509  011DFA                     l11400:
  2510                           
  2511                           ; BSR set to: 2
  2512                           ;main.c: 215:    init_display();
  2513  011DFA  EC73  F0BD         	call	_init_display	;wreg free
  2514                           
  2515                           ; BSR set to: 61
  2516                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2517  011DFE  0E0C               	movlw	12
  2518  011E00  6EE6               	movwf	postinc1,c
  2519  011E02  EC99  F0CC         	call	_eaDogM_WriteCommand	;wreg free
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;main.c: 218:    V.ui_state = mode;
  2523                           ;stkvar	_mode @ sp[(-5)+4]
  2524  011E06  0EFF               	movlw	-1
  2525  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;main.c: 219:    srand(1957);
  2529  011E0E  0EA5               	movlw	165
  2530  011E10  6EE6               	movwf	postinc1,c
  2531  011E12  0E07               	movlw	7
  2532  011E14  6EE6               	movwf	postinc1,c
  2533  011E16  EC94  F0C8         	call	_srand	;wreg free
  2534                           
  2535                           ; BSR set to: 1
  2536                           ;main.c: 220:    set_vterm(0);
  2537  011E1A  0E00               	movlw	0
  2538  011E1C  6EE6               	movwf	postinc1,c
  2539  011E1E  ECE0  F0CB         	call	_set_vterm	;wreg free
  2540                           
  2541                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2542  011E22  0E60               	movlw	low STR_1
  2543  011E24  6EE6               	movwf	postinc1,c
  2544  011E26  0EFF               	movlw	high STR_1
  2545  011E28  6EE6               	movwf	postinc1,c
  2546  011E2A  0E00               	movlw	0
  2547  011E2C  6EE6               	movwf	postinc1,c
  2548  011E2E  0E00               	movlw	0
  2549  011E30  6EE6               	movwf	postinc1,c
  2550  011E32  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2551  011E36  0060  F007  FFE6   	movff	btemp,postinc1
  2552  011E3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2553  011E42  0E04               	movlw	4
  2554  011E44  6EE6               	movwf	postinc1,c
  2555  011E46  EC75  F0BB         	call	_sprintf	;wreg free
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.999");
  2559  011E4A  0EE0               	movlw	low STR_3
  2560  011E4C  6EE6               	movwf	postinc1,c
  2561  011E4E  0EFF               	movlw	high STR_3
  2562  011E50  6EE6               	movwf	postinc1,c
  2563  011E52  0EB2               	movlw	low STR_2
  2564  011E54  6EE6               	movwf	postinc1,c
  2565  011E56  0EFF               	movlw	high STR_2
  2566  011E58  6EE6               	movwf	postinc1,c
  2567  011E5A  0E00               	movlw	0
  2568  011E5C  6EE6               	movwf	postinc1,c
  2569  011E5E  0E01               	movlw	1
  2570  011E60  6EE6               	movwf	postinc1,c
  2571  011E62  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2572  011E66  0060  F007  FFE6   	movff	btemp,postinc1
  2573  011E6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2574  011E72  0E06               	movlw	6
  2575  011E74  6EE6               	movwf	postinc1,c
  2576  011E76  EC75  F0BB         	call	_sprintf	;wreg free
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2580  011E7A  0E4F               	movlw	low STR_4
  2581  011E7C  6EE6               	movwf	postinc1,c
  2582  011E7E  0EFF               	movlw	high STR_4
  2583  011E80  6EE6               	movwf	postinc1,c
  2584  011E82  0E00               	movlw	0
  2585  011E84  6EE6               	movwf	postinc1,c
  2586  011E86  0E02               	movlw	2
  2587  011E88  6EE6               	movwf	postinc1,c
  2588  011E8A  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2589  011E8E  0060  F007  FFE6   	movff	btemp,postinc1
  2590  011E94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2591  011E9A  0E04               	movlw	4
  2592  011E9C  6EE6               	movwf	postinc1,c
  2593  011E9E  EC75  F0BB         	call	_sprintf	;wreg free
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2597  011EA2  0E71               	movlw	low STR_5
  2598  011EA4  6EE6               	movwf	postinc1,c
  2599  011EA6  0EFF               	movlw	high STR_5
  2600  011EA8  6EE6               	movwf	postinc1,c
  2601  011EAA  0E02               	movlw	2
  2602  011EAC  6EE6               	movwf	postinc1,c
  2603  011EAE  0E00               	movlw	0
  2604  011EB0  6EE6               	movwf	postinc1,c
  2605  011EB2  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2606  011EB6  0060  F007  FFE6   	movff	btemp,postinc1
  2607  011EBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2608  011EC2  0E04               	movlw	4
  2609  011EC4  6EE6               	movwf	postinc1,c
  2610  011EC6  EC75  F0BB         	call	_sprintf	;wreg free
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.999");
  2614  011ECA  0EE0               	movlw	low STR_3
  2615  011ECC  6EE6               	movwf	postinc1,c
  2616  011ECE  0EFF               	movlw	high STR_3
  2617  011ED0  6EE6               	movwf	postinc1,c
  2618  011ED2  0EB2               	movlw	low STR_2
  2619  011ED4  6EE6               	movwf	postinc1,c
  2620  011ED6  0EFF               	movlw	high STR_2
  2621  011ED8  6EE6               	movwf	postinc1,c
  2622  011EDA  0E02               	movlw	2
  2623  011EDC  6EE6               	movwf	postinc1,c
  2624  011EDE  0E01               	movlw	1
  2625  011EE0  6EE6               	movwf	postinc1,c
  2626  011EE2  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2627  011EE6  0060  F007  FFE6   	movff	btemp,postinc1
  2628  011EEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2629  011EF2  0E06               	movlw	6
  2630  011EF4  6EE6               	movwf	postinc1,c
  2631  011EF6  EC75  F0BB         	call	_sprintf	;wreg free
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2635  011EFA  0E3E               	movlw	low STR_8
  2636  011EFC  6EE6               	movwf	postinc1,c
  2637  011EFE  0EFF               	movlw	high STR_8
  2638  011F00  6EE6               	movwf	postinc1,c
  2639  011F02  0E02               	movlw	2
  2640  011F04  6EE6               	movwf	postinc1,c
  2641  011F06  0E02               	movlw	2
  2642  011F08  6EE6               	movwf	postinc1,c
  2643  011F0A  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2644  011F0E  0060  F007  FFE6   	movff	btemp,postinc1
  2645  011F14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2646  011F1A  0E04               	movlw	4
  2647  011F1C  6EE6               	movwf	postinc1,c
  2648  011F1E  EC75  F0BB         	call	_sprintf	;wreg free
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;main.c: 227:    update_lcd(0);
  2652  011F22  0E00               	movlw	0
  2653  011F24  6EE6               	movwf	postinc1,c
  2654  011F26  ECED  F0BA         	call	_update_lcd	;wreg free
  2655                           
  2656                           ;main.c: 228:    WaitMs(3000);
  2657  011F2A  0EB8               	movlw	184
  2658  011F2C  6EE6               	movwf	postinc1,c
  2659  011F2E  0E0B               	movlw	11
  2660  011F30  6EE6               	movwf	postinc1,c
  2661  011F32  EC5E  F0C8         	call	_WaitMs	;wreg free
  2662                           
  2663                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2664  011F36  0EFA               	movlw	250
  2665  011F38  6EE6               	movwf	postinc1,c
  2666  011F3A  0E00               	movlw	0
  2667  011F3C  6EE6               	movwf	postinc1,c
  2668  011F3E  0E0A               	movlw	10
  2669  011F40  6EE6               	movwf	postinc1,c
  2670  011F42  EC88  F0C7         	call	_StartTimer	;wreg free
  2671                           
  2672                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2673  011F46  0EC8               	movlw	200
  2674  011F48  6EE6               	movwf	postinc1,c
  2675  011F4A  0E00               	movlw	0
  2676  011F4C  6EE6               	movwf	postinc1,c
  2677  011F4E  0E01               	movlw	1
  2678  011F50  6EE6               	movwf	postinc1,c
  2679  011F52  EC88  F0C7         	call	_StartTimer	;wreg free
  2680                           
  2681                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2682  011F56  0EB8               	movlw	184
  2683  011F58  6EE6               	movwf	postinc1,c
  2684  011F5A  0E0B               	movlw	11
  2685  011F5C  6EE6               	movwf	postinc1,c
  2686  011F5E  0E07               	movlw	7
  2687  011F60  6EE6               	movwf	postinc1,c
  2688  011F62  EC88  F0C7         	call	_StartTimer	;wreg free
  2689                           
  2690                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2691  011F66  0EDC               	movlw	220
  2692  011F68  6EE6               	movwf	postinc1,c
  2693  011F6A  0E05               	movlw	5
  2694  011F6C  6EE6               	movwf	postinc1,c
  2695  011F6E  0E0B               	movlw	11
  2696  011F70  6EE6               	movwf	postinc1,c
  2697  011F72  EC88  F0C7         	call	_StartTimer	;wreg free
  2698                           
  2699                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2700  011F76  0EB8               	movlw	184
  2701  011F78  6EE6               	movwf	postinc1,c
  2702  011F7A  0E0B               	movlw	11
  2703  011F7C  6EE6               	movwf	postinc1,c
  2704  011F7E  0E09               	movlw	9
  2705  011F80  6EE6               	movwf	postinc1,c
  2706  011F82  EC88  F0C7         	call	_StartTimer	;wreg free
  2707                           
  2708                           ;main.c: 235:    start_adc_scan();
  2709  011F86  EC7B  F0C4         	call	_start_adc_scan	;wreg free
  2710                           
  2711                           ;main.c: 236:    start_switch_handler();
  2712  011F8A  ECB2  F0CB         	call	_start_switch_handler	;wreg free
  2713                           
  2714                           ; BSR set to: 57
  2715                           ;main.c: 237:    WaitMs(1000);
  2716  011F8E  0EE8               	movlw	232
  2717  011F90  6EE6               	movwf	postinc1,c
  2718  011F92  0E03               	movlw	3
  2719  011F94  6EE6               	movwf	postinc1,c
  2720  011F96  EC5E  F0C8         	call	_WaitMs	;wreg free
  2721                           
  2722                           ;main.c: 238:    static_soc();
  2723  011F9A  EC24  F0CB         	call	_static_soc	;wreg free
  2724                           
  2725                           ; BSR set to: 1
  2726                           ;main.c: 239:    init_bsoc();
  2727  011F9E  EC0A  F0B6         	call	_init_bsoc	;wreg free
  2728                           
  2729                           ;main.c: 241:    break;
  2730  011FA2  D01C               	goto	l11450
  2731  011FA4                     l1346:
  2732                           
  2733                           ; BSR set to: 2
  2734                           ;main.c: 247:    P.SYSTEM_STABLE = 1;
  2735  011FA4  0100               	movlb	0	; () banked
  2736  011FA6  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2737                           
  2738                           ;main.c: 248:    break;
  2739  011FA8  D019               	goto	l11450
  2740  011FAA                     l1348:
  2741                           
  2742                           ; BSR set to: 2
  2743                           ;main.c: 251:    V.ui_state = UI_STATE_INIT;
  2744  011FAA  6B00               	clrf	_V& (0+255),b	;volatile
  2745                           
  2746                           ;main.c: 252:    break;
  2747  011FAC  D017               	goto	l11450
  2748  011FAE                     l11448:
  2749  011FAE  0102               	movlb	2	; () banked
  2750  011FB0  5100               	movf	_V& (0+255),w,b	;volatile
  2751  011FB2  6E0B               	movwf	(btemp+10)^0,c
  2752  011FB4  6A0C               	clrf	(btemp+11)^0,c
  2753                           
  2754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2755                           ; Switch size 1, requested type "simple"
  2756                           ; Number of cases is 1, Range of values is 0 to 0
  2757                           ; switch strategies available:
  2758                           ; Name         Instructions Cycles
  2759                           ; simple_byte            4     3 (average)
  2760                           ;	Chosen strategy is simple_byte
  2761  011FB6  500C               	movf	(btemp+11)^0,w,c
  2762  011FB8  0A00               	xorlw	0	; case 0
  2763  011FBA  A4D8               	btfss	status,2,c
  2764  011FBC  D7F6               	goto	l1348
  2765                           
  2766                           ; BSR set to: 2
  2767                           ; Switch size 1, requested type "simple"
  2768                           ; Number of cases is 5, Range of values is 0 to 5
  2769                           ; switch strategies available:
  2770                           ; Name         Instructions Cycles
  2771                           ; simple_byte           16     9 (average)
  2772                           ;	Chosen strategy is simple_byte
  2773  011FBE  500B               	movf	(btemp+10)^0,w,c
  2774  011FC0  0A00               	xorlw	0	; case 0
  2775  011FC2  B4D8               	btfsc	status,2,c
  2776  011FC4  D71A               	goto	l11400
  2777  011FC6  0A01               	xorlw	1	; case 1
  2778  011FC8  B4D8               	btfsc	status,2,c
  2779  011FCA  D008               	goto	l11450
  2780  011FCC  0A02               	xorlw	2	; case 3
  2781  011FCE  B4D8               	btfsc	status,2,c
  2782  011FD0  D005               	goto	l11450
  2783  011FD2  0A07               	xorlw	7	; case 4
  2784  011FD4  B4D8               	btfsc	status,2,c
  2785  011FD6  D7E6               	goto	l1346
  2786  011FD8  0A01               	xorlw	1	; case 5
  2787  011FDA  D7E7               	goto	l1348
  2788  011FDC                     l11450:
  2789                           
  2790                           ;main.c: 255:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2791  011FDC  0E01               	movlw	1
  2792  011FDE  6EE6               	movwf	postinc1,c
  2793  011FE0  ECCF  F0C9         	call	_TimerDone	;wreg free
  2794  011FE4  5001               	movf	btemp^0,w,c
  2795  011FE6  B4D8               	btfsc	status,2,c
  2796  011FE8  D013               	goto	l11462
  2797  011FEA  ECD9  F0CC         	call	_check_adc_scan	;wreg free
  2798  011FEE  5001               	movf	btemp^0,w,c
  2799  011FF0  B4D8               	btfsc	status,2,c
  2800  011FF2  D00E               	goto	l11462
  2801                           
  2802                           ;main.c: 259:    convert_adc_data();
  2803  011FF4  EC84  F0BF         	call	_convert_adc_data	;wreg free
  2804                           
  2805                           ;main.c: 263:    clear_adc_scan();
  2806  011FF8  ECE1  F0CC         	call	_clear_adc_scan	;wreg free
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;main.c: 264:    start_adc_scan();
  2810  011FFC  EC7B  F0C4         	call	_start_adc_scan	;wreg free
  2811                           
  2812                           ;main.c: 265:    StartTimer(TMR_ADC, 200);
  2813  012000  0EC8               	movlw	200
  2814  012002  6EE6               	movwf	postinc1,c
  2815  012004  0E00               	movlw	0
  2816  012006  6EE6               	movwf	postinc1,c
  2817  012008  0E01               	movlw	1
  2818  01200A  6EE6               	movwf	postinc1,c
  2819  01200C  EC88  F0C7         	call	_StartTimer	;wreg free
  2820  012010                     l11462:
  2821                           
  2822                           ;main.c: 272:   if (TimerDone(TMR_DISPLAY)) {
  2823                           
  2824                           ;main.c: 268:   if (V.ticks) {
  2825  012010  0E0A               	movlw	10
  2826  012012  6EE6               	movwf	postinc1,c
  2827  012014  ECCF  F0C9         	call	_TimerDone	;wreg free
  2828  012018  5001               	movf	btemp^0,w,c
  2829  01201A  B4D8               	btfsc	status,2,c
  2830  01201C  D27F               	goto	l11504
  2831                           
  2832                           ;main.c: 273:    if (TimerDone(TMR_HELPDIS)) {
  2833  01201E  0E09               	movlw	9
  2834  012020  6EE6               	movwf	postinc1,c
  2835  012022  ECCF  F0C9         	call	_TimerDone	;wreg free
  2836  012026  5001               	movf	btemp^0,w,c
  2837  012028  B4D8               	btfsc	status,2,c
  2838  01202A  D004               	goto	l11470
  2839                           
  2840                           ;main.c: 274:     set_display_info(DIS_STR);
  2841  01202C  0E00               	movlw	0
  2842  01202E  6EE6               	movwf	postinc1,c
  2843  012030  ECEF  F0CB         	call	_set_display_info	;wreg free
  2844  012034                     l11470:
  2845                           
  2846                           ;main.c: 276:    calc_model_data();
  2847  012034  EC51  F0AA         	call	_calc_model_data	;wreg free
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;main.c: 283:     hid_display(&H);
  2851                           
  2852                           ;main.c: 278:    if (0) {
  2853  012038  0EF8               	movlw	_H& (0+255)
  2854  01203A  6EE6               	movwf	postinc1,c
  2855  01203C  ECFA  F0BB         	call	_hid_display	;wreg free
  2856                           
  2857                           ;main.c: 284:     switch (H.hid_display) {
  2858  012040  D248               	goto	l11496
  2859  012042                     l1356:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;main.c: 286:      V.calib = 0;
  2863  012042  0102               	movlb	2	; () banked
  2864  012044  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2865                           
  2866                           ; BSR set to: 2
  2867                           ;main.c: 287:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2868  012046  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2869  01204C  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2870  012052  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2871  012058  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2872  01205E  0EB9               	movlw	low STR_12
  2873  012060  6EE6               	movwf	postinc1,c
  2874  012062  0EFE               	movlw	high STR_12
  2875  012064  6EE6               	movwf	postinc1,c
  2876  012066  0E00               	movlw	0
  2877  012068  6EE6               	movwf	postinc1,c
  2878  01206A  0E00               	movlw	0
  2879  01206C  6EE6               	movwf	postinc1,c
  2880  01206E  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2881  012072  0060  F007  FFE6   	movff	btemp,postinc1
  2882  012078  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2883  01207E  0E08               	movlw	8
  2884  012080  6EE6               	movwf	postinc1,c
  2885  012082  EC75  F0BB         	call	_sprintf	;wreg free
  2886                           
  2887                           ;main.c: 288:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2888  012086  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2889  01208C  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2890  012092  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2891  012098  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2892  01209E  0EDF               	movlw	low STR_13
  2893  0120A0  6EE6               	movwf	postinc1,c
  2894  0120A2  0EFE               	movlw	high STR_13
  2895  0120A4  6EE6               	movwf	postinc1,c
  2896  0120A6  0E00               	movlw	0
  2897  0120A8  6EE6               	movwf	postinc1,c
  2898  0120AA  0E01               	movlw	1
  2899  0120AC  6EE6               	movwf	postinc1,c
  2900  0120AE  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2901  0120B2  0060  F007  FFE6   	movff	btemp,postinc1
  2902  0120B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2903  0120BE  0E08               	movlw	8
  2904  0120C0  6EE6               	movwf	postinc1,c
  2905  0120C2  EC75  F0BB         	call	_sprintf	;wreg free
  2906                           
  2907                           ;main.c: 289:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2908  0120C6  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2909  0120CC  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2910  0120D2  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2911  0120D8  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2912  0120DE  0ECC               	movlw	low STR_14
  2913  0120E0  6EE6               	movwf	postinc1,c
  2914  0120E2  0EFE               	movlw	high STR_14
  2915  0120E4  6EE6               	movwf	postinc1,c
  2916  0120E6  0E00               	movlw	0
  2917  0120E8  6EE6               	movwf	postinc1,c
  2918  0120EA  0E02               	movlw	2
  2919  0120EC  6EE6               	movwf	postinc1,c
  2920  0120EE  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2921  0120F2  0060  F007  FFE6   	movff	btemp,postinc1
  2922  0120F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2923  0120FE  0E08               	movlw	8
  2924  012100  6EE6               	movwf	postinc1,c
  2925  012102  EC75  F0BB         	call	_sprintf	;wreg free
  2926                           
  2927                           ;main.c: 290:      break;
  2928  012106  D1FA               	goto	l11498
  2929  012108                     l1358:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;main.c: 292:      V.calib = 0;
  2933  012108  0102               	movlb	2	; () banked
  2934  01210A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2935                           
  2936                           ; BSR set to: 2
  2937                           ;main.c: 293:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2938  01210C  0060  F413  FFE6   	movff	_C+4,postinc1
  2939  012112  0060  F417  FFE6   	movff	_C+5,postinc1
  2940  012118  0060  F41B  FFE6   	movff	_C+6,postinc1
  2941  01211E  0060  F41F  FFE6   	movff	_C+7,postinc1
  2942  012124  0060  F453  FFE6   	movff	_C+20,postinc1
  2943  01212A  0060  F457  FFE6   	movff	_C+21,postinc1
  2944  012130  0060  F45B  FFE6   	movff	_C+22,postinc1
  2945  012136  0060  F45F  FFE6   	movff	_C+23,postinc1
  2946  01213C  0E2B               	movlw	low STR_15
  2947  01213E  6EE6               	movwf	postinc1,c
  2948  012140  0EFF               	movlw	high STR_15
  2949  012142  6EE6               	movwf	postinc1,c
  2950  012144  0E00               	movlw	0
  2951  012146  6EE6               	movwf	postinc1,c
  2952  012148  0E00               	movlw	0
  2953  01214A  6EE6               	movwf	postinc1,c
  2954  01214C  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2955  012150  0060  F007  FFE6   	movff	btemp,postinc1
  2956  012156  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2957  01215C  0E0C               	movlw	12
  2958  01215E  6EE6               	movwf	postinc1,c
  2959  012160  EC75  F0BB         	call	_sprintf	;wreg free
  2960                           
  2961                           ;main.c: 294:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2962  012164  0060  F403  FFE6   	movff	_C,postinc1
  2963  01216A  0060  F407  FFE6   	movff	_C+1,postinc1
  2964  012170  0060  F40B  FFE6   	movff	_C+2,postinc1
  2965  012176  0060  F40F  FFE6   	movff	_C+3,postinc1
  2966  01217C  0060  F443  FFE6   	movff	_C+16,postinc1
  2967  012182  0060  F447  FFE6   	movff	_C+17,postinc1
  2968  012188  0060  F44B  FFE6   	movff	_C+18,postinc1
  2969  01218E  0060  F44F  FFE6   	movff	_C+19,postinc1
  2970  012194  0E05               	movlw	low STR_16
  2971  012196  6EE6               	movwf	postinc1,c
  2972  012198  0EFF               	movlw	high STR_16
  2973  01219A  6EE6               	movwf	postinc1,c
  2974  01219C  0E00               	movlw	0
  2975  01219E  6EE6               	movwf	postinc1,c
  2976  0121A0  0E01               	movlw	1
  2977  0121A2  6EE6               	movwf	postinc1,c
  2978  0121A4  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  2979  0121A8  0060  F007  FFE6   	movff	btemp,postinc1
  2980  0121AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2981  0121B4  0E0C               	movlw	12
  2982  0121B6  6EE6               	movwf	postinc1,c
  2983  0121B8  EC75  F0BB         	call	_sprintf	;wreg free
  2984                           
  2985                           ;main.c: 295:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2986  0121BC  0060  F503  FFE6   	movff	_C+64,postinc1
  2987  0121C2  0060  F507  FFE6   	movff	_C+65,postinc1
  2988  0121C8  0060  F50B  FFE6   	movff	_C+66,postinc1
  2989  0121CE  0060  F50F  FFE6   	movff	_C+67,postinc1
  2990  0121D4  0060  F423  FFE6   	movff	_C+8,postinc1
  2991  0121DA  0060  F427  FFE6   	movff	_C+9,postinc1
  2992  0121E0  0060  F42B  FFE6   	movff	_C+10,postinc1
  2993  0121E6  0060  F42F  FFE6   	movff	_C+11,postinc1
  2994  0121EC  0E18               	movlw	low STR_17
  2995  0121EE  6EE6               	movwf	postinc1,c
  2996  0121F0  0EFF               	movlw	high STR_17
  2997  0121F2  6EE6               	movwf	postinc1,c
  2998  0121F4  0E00               	movlw	0
  2999  0121F6  6EE6               	movwf	postinc1,c
  3000  0121F8  0E02               	movlw	2
  3001  0121FA  6EE6               	movwf	postinc1,c
  3002  0121FC  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  3003  012200  0060  F007  FFE6   	movff	btemp,postinc1
  3004  012206  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3005  01220C  0E0C               	movlw	12
  3006  01220E  6EE6               	movwf	postinc1,c
  3007  012210  EC75  F0BB         	call	_sprintf	;wreg free
  3008                           
  3009                           ;main.c: 296:      break;
  3010  012214  D173               	goto	l11498
  3011  012216                     l1359:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;main.c: 298:      V.calib = 0;
  3015  012216  0102               	movlb	2	; () banked
  3016  012218  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3017                           
  3018                           ; BSR set to: 2
  3019                           ;main.c: 299:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3020  01221A  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3021  012220  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3022  012226  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3023  01222C  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3024  012232  0EF2               	movlw	low STR_18
  3025  012234  6EE6               	movwf	postinc1,c
  3026  012236  0EFE               	movlw	high STR_18
  3027  012238  6EE6               	movwf	postinc1,c
  3028  01223A  0E00               	movlw	0
  3029  01223C  6EE6               	movwf	postinc1,c
  3030  01223E  0E00               	movlw	0
  3031  012240  6EE6               	movwf	postinc1,c
  3032  012242  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  3033  012246  0060  F007  FFE6   	movff	btemp,postinc1
  3034  01224C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3035  012252  0E08               	movlw	8
  3036  012254  6EE6               	movwf	postinc1,c
  3037  012256  EC75  F0BB         	call	_sprintf	;wreg free
  3038                           
  3039                           ;main.c: 300:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  3040  01225A  0060  F613  FFE6   	movff	_C+132,postinc1
  3041  012260  0060  F617  FFE6   	movff	_C+133,postinc1
  3042  012266  0060  F61B  FFE6   	movff	_C+134,postinc1
  3043  01226C  0060  F61F  FFE6   	movff	_C+135,postinc1
  3044  012272  0060  F603  FFE6   	movff	_C+128,postinc1
  3045  012278  0060  F607  FFE6   	movff	_C+129,postinc1
  3046  01227E  0060  F60B  FFE6   	movff	_C+130,postinc1
  3047  012284  0060  F60F  FFE6   	movff	_C+131,postinc1
  3048  01228A  0E59               	movlw	low STR_19
  3049  01228C  6EE6               	movwf	postinc1,c
  3050  01228E  0EFE               	movlw	high STR_19
  3051  012290  6EE6               	movwf	postinc1,c
  3052  012292  0E00               	movlw	0
  3053  012294  6EE6               	movwf	postinc1,c
  3054  012296  0E01               	movlw	1
  3055  012298  6EE6               	movwf	postinc1,c
  3056  01229A  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  3057  01229E  0060  F007  FFE6   	movff	btemp,postinc1
  3058  0122A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3059  0122AA  0E0C               	movlw	12
  3060  0122AC  6EE6               	movwf	postinc1,c
  3061  0122AE  EC75  F0BB         	call	_sprintf	;wreg free
  3062                           
  3063                           ;main.c: 301:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  3064  0122B2  0060  F673  FFE6   	movff	_C+156,postinc1
  3065  0122B8  0060  F677  FFE6   	movff	_C+157,postinc1
  3066  0122BE  0060  F67B  FFE6   	movff	_C+158,postinc1
  3067  0122C4  0060  F67F  FFE6   	movff	_C+159,postinc1
  3068  0122CA  0EA6               	movlw	low STR_20
  3069  0122CC  6EE6               	movwf	postinc1,c
  3070  0122CE  0EFE               	movlw	high STR_20
  3071  0122D0  6EE6               	movwf	postinc1,c
  3072  0122D2  0E00               	movlw	0
  3073  0122D4  6EE6               	movwf	postinc1,c
  3074  0122D6  0E02               	movlw	2
  3075  0122D8  6EE6               	movwf	postinc1,c
  3076  0122DA  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  3077  0122DE  0060  F007  FFE6   	movff	btemp,postinc1
  3078  0122E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3079  0122EA  0E08               	movlw	8
  3080  0122EC  6EE6               	movwf	postinc1,c
  3081  0122EE  EC75  F0BB         	call	_sprintf	;wreg free
  3082                           
  3083                           ;main.c: 302:      break;
  3084  0122F2  D104               	goto	l11498
  3085  0122F4                     l11482:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;main.c: 304:      if (!V.calib) {
  3089  0122F4  0102               	movlb	2	; () banked
  3090  0122F6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  3091  0122F8  A4D8               	btfss	status,2,c
  3092  0122FA  D02D               	goto	l11486
  3093                           
  3094                           ; BSR set to: 2
  3095                           ;main.c: 305:       lp_filter(0.0, i, -1);
  3096  0122FC  0EFF               	movlw	255
  3097  0122FE  6EE6               	movwf	postinc1,c
  3098                           
  3099                           ;stkvar	_i @ sp[(-6)+2]
  3100  012300  0EFC               	movlw	-4
  3101  012302  50E3               	movf	plusw1,w,c
  3102  012304  6EE6               	movwf	postinc1,c
  3103  012306  0E00               	movlw	0
  3104  012308  6EE6               	movwf	postinc1,c
  3105  01230A  0E00               	movlw	0
  3106  01230C  6EE6               	movwf	postinc1,c
  3107  01230E  0E00               	movlw	0
  3108  012310  6EE6               	movwf	postinc1,c
  3109  012312  0E00               	movlw	0
  3110  012314  6EE6               	movwf	postinc1,c
  3111  012316  ECA6  F0B3         	call	_lp_filter	;wreg free
  3112                           
  3113                           ;main.c: 306:       lp_filter(0.0, j, -1);
  3114  01231A  0EFF               	movlw	255
  3115  01231C  6EE6               	movwf	postinc1,c
  3116                           
  3117                           ;stkvar	_j @ sp[(-6)+1]
  3118  01231E  0EFB               	movlw	-5
  3119  012320  50E3               	movf	plusw1,w,c
  3120  012322  6EE6               	movwf	postinc1,c
  3121  012324  0E00               	movlw	0
  3122  012326  6EE6               	movwf	postinc1,c
  3123  012328  0E00               	movlw	0
  3124  01232A  6EE6               	movwf	postinc1,c
  3125  01232C  0E00               	movlw	0
  3126  01232E  6EE6               	movwf	postinc1,c
  3127  012330  0E00               	movlw	0
  3128  012332  6EE6               	movwf	postinc1,c
  3129  012334  ECA6  F0B3         	call	_lp_filter	;wreg free
  3130                           
  3131                           ;main.c: 307:       lp_filter(0.0, k, -1);
  3132  012338  0EFF               	movlw	255
  3133  01233A  6EE6               	movwf	postinc1,c
  3134                           
  3135                           ;stkvar	_k @ sp[(-6)+0]
  3136  01233C  0EFA               	movlw	-6
  3137  01233E  50E3               	movf	plusw1,w,c
  3138  012340  6EE6               	movwf	postinc1,c
  3139  012342  0E00               	movlw	0
  3140  012344  6EE6               	movwf	postinc1,c
  3141  012346  0E00               	movlw	0
  3142  012348  6EE6               	movwf	postinc1,c
  3143  01234A  0E00               	movlw	0
  3144  01234C  6EE6               	movwf	postinc1,c
  3145  01234E  0E00               	movlw	0
  3146  012350  6EE6               	movwf	postinc1,c
  3147  012352  ECA6  F0B3         	call	_lp_filter	;wreg free
  3148  012356                     l11486:
  3149                           
  3150                           ;main.c: 309:      V.calib = 1;
  3151  012356  0E01               	movlw	1
  3152  012358  0102               	movlb	2	; () banked
  3153  01235A  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  3154                           
  3155                           ; BSR set to: 2
  3156                           ;main.c: 310:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  3157  01235C  0E02               	movlw	2
  3158  01235E  6EE6               	movwf	postinc1,c
  3159  012360  ECBB  F0C9         	call	_get_switch	;wreg free
  3160  012364  5001               	movf	btemp^0,w,c
  3161  012366  6EE6               	movwf	postinc1,c
  3162  012368  0E00               	movlw	0
  3163  01236A  6EE6               	movwf	postinc1,c
  3164                           
  3165                           ;stkvar	_i @ sp[(-7)+2]
  3166  01236C  0EFB               	movlw	-5
  3167  01236E  50E3               	movf	plusw1,w,c
  3168  012370  0D04               	mullw	4
  3169  012372  0E00               	movlw	low _C
  3170  012374  24F3               	addwf	243,w,c
  3171  012376  6ED9               	movwf	fsr2l,c
  3172  012378  0E01               	movlw	high _C
  3173  01237A  20F4               	addwfc	prodh,w,c
  3174  01237C  6EDA               	movwf	fsr2h,c
  3175  01237E  006F FF7B FFE6     	movff	postinc2,postinc1
  3176  012384  006F FF7B FFE6     	movff	postinc2,postinc1
  3177  01238A  006F FF7B FFE6     	movff	postinc2,postinc1
  3178  012390  006F FF7B FFE6     	movff	postinc2,postinc1
  3179                           
  3180                           ;stkvar	_i @ sp[(-11)+2]
  3181  012396  0EF7               	movlw	-9
  3182  012398  50E3               	movf	plusw1,w,c
  3183  01239A  6EE6               	movwf	postinc1,c
  3184  01239C  ECD1  F0CB         	call	_get_raw_result	;wreg free
  3185  0123A0  0060  F007  FFE6   	movff	btemp,postinc1
  3186  0123A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3187  0123AC  0E93               	movlw	low STR_9
  3188  0123AE  6EE6               	movwf	postinc1,c
  3189  0123B0  0EFF               	movlw	high STR_9
  3190  0123B2  6EE6               	movwf	postinc1,c
  3191  0123B4  0E00               	movlw	0
  3192  0123B6  6EE6               	movwf	postinc1,c
  3193  0123B8  0E00               	movlw	0
  3194  0123BA  6EE6               	movwf	postinc1,c
  3195  0123BC  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  3196  0123C0  0060  F007  FFE6   	movff	btemp,postinc1
  3197  0123C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3198  0123CC  0E0C               	movlw	12
  3199  0123CE  6EE6               	movwf	postinc1,c
  3200  0123D0  EC75  F0BB         	call	_sprintf	;wreg free
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;main.c: 311:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3204  0123D4  0E03               	movlw	3
  3205  0123D6  6EE6               	movwf	postinc1,c
  3206  0123D8  ECBB  F0C9         	call	_get_switch	;wreg free
  3207  0123DC  5001               	movf	btemp^0,w,c
  3208  0123DE  6EE6               	movwf	postinc1,c
  3209  0123E0  0E00               	movlw	0
  3210  0123E2  6EE6               	movwf	postinc1,c
  3211                           
  3212                           ;stkvar	_j @ sp[(-7)+1]
  3213  0123E4  0EFA               	movlw	-6
  3214  0123E6  50E3               	movf	plusw1,w,c
  3215  0123E8  0D04               	mullw	4
  3216  0123EA  0E00               	movlw	low _C
  3217  0123EC  24F3               	addwf	243,w,c
  3218  0123EE  6ED9               	movwf	fsr2l,c
  3219  0123F0  0E01               	movlw	high _C
  3220  0123F2  20F4               	addwfc	prodh,w,c
  3221  0123F4  6EDA               	movwf	fsr2h,c
  3222  0123F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3223  0123FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3224  012402  006F FF7B FFE6     	movff	postinc2,postinc1
  3225  012408  006F FF7B FFE6     	movff	postinc2,postinc1
  3226                           
  3227                           ;stkvar	_j @ sp[(-11)+1]
  3228  01240E  0EF6               	movlw	-10
  3229  012410  50E3               	movf	plusw1,w,c
  3230  012412  6EE6               	movwf	postinc1,c
  3231  012414  ECD1  F0CB         	call	_get_raw_result	;wreg free
  3232  012418  0060  F007  FFE6   	movff	btemp,postinc1
  3233  01241E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3234  012424  0E93               	movlw	low STR_9
  3235  012426  6EE6               	movwf	postinc1,c
  3236  012428  0EFF               	movlw	high STR_9
  3237  01242A  6EE6               	movwf	postinc1,c
  3238  01242C  0E00               	movlw	0
  3239  01242E  6EE6               	movwf	postinc1,c
  3240  012430  0E01               	movlw	1
  3241  012432  6EE6               	movwf	postinc1,c
  3242  012434  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  3243  012438  0060  F007  FFE6   	movff	btemp,postinc1
  3244  01243E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3245  012444  0E0C               	movlw	12
  3246  012446  6EE6               	movwf	postinc1,c
  3247  012448  EC75  F0BB         	call	_sprintf	;wreg free
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;main.c: 312:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3251                           ;stkvar	_inp_index @ sp[(-5)+3]
  3252  01244C  0EFE               	movlw	-2
  3253  01244E  50E3               	movf	plusw1,w,c
  3254  012450  6E0B               	movwf	(btemp+10)^0,c
  3255  012452  6A0C               	clrf	(btemp+11)^0,c
  3256  012454  0E01               	movlw	1
  3257  012456  260B               	addwf	(btemp+10)^0,f,c
  3258  012458  0E00               	movlw	0
  3259  01245A  220C               	addwfc	(btemp+11)^0,f,c
  3260  01245C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  3261  012462  0060  F033  FFE6   	movff	btemp+11,postinc1
  3262                           
  3263                           ;stkvar	_k @ sp[(-7)+0]
  3264  012468  0EF9               	movlw	-7
  3265  01246A  50E3               	movf	plusw1,w,c
  3266  01246C  0D04               	mullw	4
  3267  01246E  0E00               	movlw	low _C
  3268  012470  24F3               	addwf	243,w,c
  3269  012472  6ED9               	movwf	fsr2l,c
  3270  012474  0E01               	movlw	high _C
  3271  012476  20F4               	addwfc	prodh,w,c
  3272  012478  6EDA               	movwf	fsr2h,c
  3273  01247A  006F FF7B FFE6     	movff	postinc2,postinc1
  3274  012480  006F FF7B FFE6     	movff	postinc2,postinc1
  3275  012486  006F FF7B FFE6     	movff	postinc2,postinc1
  3276  01248C  006F FF7B FFE6     	movff	postinc2,postinc1
  3277                           
  3278                           ;stkvar	_k @ sp[(-11)+0]
  3279  012492  0EF5               	movlw	-11
  3280  012494  50E3               	movf	plusw1,w,c
  3281  012496  6EE6               	movwf	postinc1,c
  3282  012498  ECD1  F0CB         	call	_get_raw_result	;wreg free
  3283  01249C  0060  F007  FFE6   	movff	btemp,postinc1
  3284  0124A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3285  0124A8  0E82               	movlw	low STR_11
  3286  0124AA  6EE6               	movwf	postinc1,c
  3287  0124AC  0EFF               	movlw	high STR_11
  3288  0124AE  6EE6               	movwf	postinc1,c
  3289  0124B0  0E00               	movlw	0
  3290  0124B2  6EE6               	movwf	postinc1,c
  3291  0124B4  0E02               	movlw	2
  3292  0124B6  6EE6               	movwf	postinc1,c
  3293  0124B8  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  3294  0124BC  0060  F007  FFE6   	movff	btemp,postinc1
  3295  0124C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3296  0124C8  0E0C               	movlw	12
  3297  0124CA  6EE6               	movwf	postinc1,c
  3298  0124CC  EC75  F0BB         	call	_sprintf	;wreg free
  3299                           
  3300                           ;main.c: 313:      break;
  3301  0124D0  D015               	goto	l11498
  3302  0124D2                     l11496:
  3303  0124D2  0100               	movlb	0	; () banked
  3304  0124D4  51F8               	movf	_H& (0+255),w,b
  3305  0124D6  6E0B               	movwf	(btemp+10)^0,c
  3306  0124D8  6A0C               	clrf	(btemp+11)^0,c
  3307                           
  3308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3309                           ; Switch size 1, requested type "simple"
  3310                           ; Number of cases is 1, Range of values is 0 to 0
  3311                           ; switch strategies available:
  3312                           ; Name         Instructions Cycles
  3313                           ; simple_byte            4     3 (average)
  3314                           ;	Chosen strategy is simple_byte
  3315  0124DA  500C               	movf	(btemp+11)^0,w,c
  3316  0124DC  0A00               	xorlw	0	; case 0
  3317  0124DE  A4D8               	btfss	status,2,c
  3318  0124E0  D00D               	goto	l11498
  3319                           
  3320                           ; BSR set to: 0
  3321                           ; Switch size 1, requested type "simple"
  3322                           ; Number of cases is 4, Range of values is 0 to 3
  3323                           ; switch strategies available:
  3324                           ; Name         Instructions Cycles
  3325                           ; simple_byte           13     7 (average)
  3326                           ;	Chosen strategy is simple_byte
  3327  0124E2  500B               	movf	(btemp+10)^0,w,c
  3328  0124E4  0A00               	xorlw	0	; case 0
  3329  0124E6  B4D8               	btfsc	status,2,c
  3330  0124E8  D60F               	goto	l1358
  3331  0124EA  0A01               	xorlw	1	; case 1
  3332  0124EC  B4D8               	btfsc	status,2,c
  3333  0124EE  D5A9               	goto	l1356
  3334  0124F0  0A03               	xorlw	3	; case 2
  3335  0124F2  B4D8               	btfsc	status,2,c
  3336  0124F4  D690               	goto	l1359
  3337  0124F6  0A01               	xorlw	1	; case 3
  3338  0124F8  B4D8               	btfsc	status,2,c
  3339  0124FA  D6FC               	goto	l11482
  3340  0124FC                     l11498:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;main.c: 317:     clear_hid_pflags(&H);
  3344  0124FC  0EF8               	movlw	_H& (0+255)
  3345  0124FE  6EE6               	movwf	postinc1,c
  3346  012500  EC36  F0CB         	call	_clear_hid_pflags	;wreg free
  3347                           
  3348                           ;main.c: 319:    StartTimer(TMR_DISPLAY, 250);
  3349  012504  0EFA               	movlw	250
  3350  012506  6EE6               	movwf	postinc1,c
  3351  012508  0E00               	movlw	0
  3352  01250A  6EE6               	movwf	postinc1,c
  3353  01250C  0E0A               	movlw	10
  3354  01250E  6EE6               	movwf	postinc1,c
  3355  012510  EC88  F0C7         	call	_StartTimer	;wreg free
  3356                           
  3357                           ;main.c: 320:    update_lcd(0);
  3358  012514  0E00               	movlw	0
  3359  012516  6EE6               	movwf	postinc1,c
  3360  012518  ECED  F0BA         	call	_update_lcd	;wreg free
  3361  01251C                     l11504:
  3362                           
  3363                           ;main.c: 326:   check_help(V.flipper);
  3364  01251C  0102               	movlb	2	; () banked
  3365  01251E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3366  012520  6EE6               	movwf	postinc1,c
  3367  012522  ECB7  F0B0         	call	_check_help	;wreg free
  3368                           
  3369                           ;main.c: 328:   if (check_enter_button(&H)) {
  3370  012526  0EF8               	movlw	_H& (0+255)
  3371  012528  6EE6               	movwf	postinc1,c
  3372  01252A  ECA8  F0C7         	call	_check_enter_button	;wreg free
  3373  01252E  5001               	movf	btemp^0,w,c
  3374  012530  B4D8               	btfsc	status,2,c
  3375  012532  D062               	goto	l1363
  3376                           
  3377                           ;main.c: 329:    V.calib = 0;
  3378  012534  0102               	movlb	2	; () banked
  3379  012536  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3380                           
  3381                           ; BSR set to: 2
  3382                           ;main.c: 330:    inp_index += 3;
  3383                           ;stkvar	_inp_index @ sp[(-5)+3]
  3384  012538  0EFE               	movlw	-2
  3385  01253A  006F FF8C  F001    	movff	plusw1,btemp
  3386  012540  0E03               	movlw	3
  3387  012542  2601               	addwf	btemp^0,f,c
  3388  012544  0EFE               	movlw	-2
  3389  012546  0060  F007  FFE3   	movff	btemp,plusw1
  3390                           
  3391                           ;main.c: 331:    if (inp_index > 9)
  3392                           ;stkvar	_inp_index @ sp[(-5)+3]
  3393  01254C  0EFE               	movlw	-2
  3394  01254E  006F FF8C  F001    	movff	plusw1,btemp
  3395  012554  0E09               	movlw	9
  3396  012556  6401               	cpfsgt	btemp^0,c
  3397  012558  D03A               	goto	l11532
  3398                           
  3399                           ; BSR set to: 2
  3400                           ;main.c: 332:     inp_index = 0;
  3401                           ;stkvar	_inp_index @ sp[(-5)+3]
  3402  01255A  0EFE               	movlw	-2
  3403  01255C  6AE3               	clrf	plusw1,c
  3404  01255E  D037               	goto	l11532
  3405  012560                     l11514:
  3406                           
  3407                           ; BSR set to: 2
  3408                           ;main.c: 335:     i = C_BATT;
  3409                           ;stkvar	_i @ sp[(-5)+2]
  3410  012560  0EFD               	movlw	-3
  3411  012562  6AE3               	clrf	plusw1,c
  3412                           
  3413                           ; BSR set to: 2
  3414                           ;main.c: 336:     j = C_PV;
  3415                           ;stkvar	_j @ sp[(-5)+1]
  3416  012564  0EFC               	movlw	-4
  3417  012566  6AE3               	clrf	plusw1,c
  3418  012568  2AE3               	incf	plusw1,f,c
  3419                           
  3420                           ; BSR set to: 2
  3421                           ;main.c: 337:     k = V_CC;
  3422                           ;stkvar	_k @ sp[(-5)+0]
  3423  01256A  0EFB               	movlw	-5
  3424  01256C  6AE3               	clrf	plusw1,c
  3425  01256E  82E3               	bsf	plusw1,1,c
  3426                           
  3427                           ;main.c: 338:     break;
  3428  012570  D043               	goto	l1363
  3429  012572                     l11520:
  3430                           
  3431                           ; BSR set to: 2
  3432                           ;main.c: 340:     i = V_BAT;
  3433                           ;stkvar	_i @ sp[(-5)+2]
  3434  012572  0EFD               	movlw	-3
  3435  012574  6AE3               	clrf	plusw1,c
  3436  012576  84E3               	bsf	plusw1,2,c
  3437                           
  3438                           ;main.c: 341:     j = V_PV;
  3439                           ;stkvar	_j @ sp[(-5)+1]
  3440  012578  0EFC               	movlw	-4
  3441  01257A  6AE3               	clrf	plusw1,c
  3442  01257C  80E3               	bsf	plusw1,0,c
  3443  01257E  84E3               	bsf	plusw1,2,c	;indir
  3444                           
  3445                           ;main.c: 342:     k = V_CBUS;
  3446                           ;stkvar	_k @ sp[(-5)+0]
  3447  012580  0EFB               	movlw	-5
  3448  012582  6AE3               	clrf	plusw1,c
  3449  012584  82E3               	bsf	plusw1,1,c
  3450  012586  84E3               	bsf	plusw1,2,c	;indir
  3451                           
  3452                           ;main.c: 343:     break;
  3453  012588  D037               	goto	l1363
  3454  01258A                     l11522:
  3455                           
  3456                           ; BSR set to: 2
  3457                           ;main.c: 345:     i = V_BBAT;
  3458                           ;stkvar	_i @ sp[(-5)+2]
  3459  01258A  0EFD               	movlw	-3
  3460  01258C  6AE3               	clrf	plusw1,c
  3461  01258E  82E3               	bsf	plusw1,1,c
  3462  012590  86E3               	bsf	plusw1,3,c	;indir
  3463                           
  3464                           ; BSR set to: 2
  3465                           ;main.c: 346:     j = V_TEMP;
  3466  012592  0E0B               	movlw	11
  3467  012594  6E0C               	movwf	(btemp+11)^0,c
  3468                           
  3469                           ;stkvar	_j @ sp[(-5)+1]
  3470  012596  0EFC               	movlw	-4
  3471  012598  0060  F033  FFE3   	movff	btemp+11,plusw1
  3472                           
  3473                           ; BSR set to: 2
  3474                           ;main.c: 347:     k = V_INVERTER;
  3475                           ;stkvar	_k @ sp[(-5)+0]
  3476  01259E  0EFB               	movlw	-5
  3477  0125A0  6AE3               	clrf	plusw1,c
  3478  0125A2  84E3               	bsf	plusw1,2,c
  3479  0125A4  86E3               	bsf	plusw1,3,c	;indir
  3480                           
  3481                           ;main.c: 348:     break;
  3482  0125A6  D028               	goto	l1363
  3483  0125A8                     l11528:
  3484                           
  3485                           ; BSR set to: 2
  3486                           ;main.c: 350:     i = channel_ANB5;
  3487  0125A8  0E0D               	movlw	13
  3488  0125AA  6E0C               	movwf	(btemp+11)^0,c
  3489                           
  3490                           ;stkvar	_i @ sp[(-5)+2]
  3491  0125AC  0EFD               	movlw	-3
  3492  0125AE  0060  F033  FFE3   	movff	btemp+11,plusw1
  3493                           
  3494                           ;main.c: 351:     j = channel_ANB5;
  3495  0125B4  0E0D               	movlw	13
  3496  0125B6  6E0C               	movwf	(btemp+11)^0,c
  3497                           
  3498                           ;stkvar	_j @ sp[(-5)+1]
  3499  0125B8  0EFC               	movlw	-4
  3500  0125BA  0060  F033  FFE3   	movff	btemp+11,plusw1
  3501                           
  3502                           ;main.c: 352:     k = channel_ANB5;
  3503  0125C0  0E0D               	movlw	13
  3504  0125C2  6E0C               	movwf	(btemp+11)^0,c
  3505                           
  3506                           ;stkvar	_k @ sp[(-5)+0]
  3507  0125C4  0EFB               	movlw	-5
  3508  0125C6  0060  F033  FFE3   	movff	btemp+11,plusw1
  3509                           
  3510                           ;main.c: 353:     break;
  3511  0125CC  D015               	goto	l1363
  3512  0125CE                     l11532:
  3513                           
  3514                           ; BSR set to: 2
  3515                           ;stkvar	_inp_index @ sp[(-5)+3]
  3516  0125CE  0EFE               	movlw	-2
  3517  0125D0  50E3               	movf	plusw1,w,c
  3518  0125D2  6E0B               	movwf	(btemp+10)^0,c
  3519  0125D4  6A0C               	clrf	(btemp+11)^0,c
  3520                           
  3521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3522                           ; Switch size 1, requested type "simple"
  3523                           ; Number of cases is 1, Range of values is 0 to 0
  3524                           ; switch strategies available:
  3525                           ; Name         Instructions Cycles
  3526                           ; simple_byte            4     3 (average)
  3527                           ;	Chosen strategy is simple_byte
  3528  0125D6  500C               	movf	(btemp+11)^0,w,c
  3529  0125D8  0A00               	xorlw	0	; case 0
  3530  0125DA  A4D8               	btfss	status,2,c
  3531  0125DC  D00D               	goto	l1363
  3532                           
  3533                           ; BSR set to: 2
  3534                           ; Switch size 1, requested type "simple"
  3535                           ; Number of cases is 4, Range of values is 0 to 9
  3536                           ; switch strategies available:
  3537                           ; Name         Instructions Cycles
  3538                           ; simple_byte           13     7 (average)
  3539                           ;	Chosen strategy is simple_byte
  3540  0125DE  500B               	movf	(btemp+10)^0,w,c
  3541  0125E0  0A00               	xorlw	0	; case 0
  3542  0125E2  B4D8               	btfsc	status,2,c
  3543  0125E4  D7BD               	goto	l11514
  3544  0125E6  0A03               	xorlw	3	; case 3
  3545  0125E8  B4D8               	btfsc	status,2,c
  3546  0125EA  D7C3               	goto	l11520
  3547  0125EC  0A05               	xorlw	5	; case 6
  3548  0125EE  B4D8               	btfsc	status,2,c
  3549  0125F0  D7CC               	goto	l11522
  3550  0125F2  0A0F               	xorlw	15	; case 9
  3551  0125F4  B4D8               	btfsc	status,2,c
  3552  0125F6  D7D8               	goto	l11528
  3553  0125F8                     l1363:
  3554                           
  3555                           ;main.c: 362:   if (V.set_sequ) {
  3556  0125F8  0102               	movlb	2	; () banked
  3557  0125FA  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3558  0125FC  D4D8               	goto	l11448
  3559                           
  3560                           ; BSR set to: 2
  3561                           ;main.c: 363:    if (TimerDone(TMR_INFO)) {
  3562  0125FE  0E07               	movlw	7
  3563  012600  6EE6               	movwf	postinc1,c
  3564  012602  ECCF  F0C9         	call	_TimerDone	;wreg free
  3565  012606  5001               	movf	btemp^0,w,c
  3566  012608  B4D8               	btfsc	status,2,c
  3567  01260A  D00B               	goto	l11542
  3568                           
  3569                           ;main.c: 364:     V.set_sequ = 0;
  3570  01260C  0102               	movlb	2	; () banked
  3571  01260E  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3572                           
  3573                           ; BSR set to: 2
  3574                           ;main.c: 365:     set_vterm(0);
  3575  012610  0E00               	movlw	0
  3576  012612  6EE6               	movwf	postinc1,c
  3577  012614  ECE0  F0CB         	call	_set_vterm	;wreg free
  3578                           
  3579                           ;main.c: 366:     update_lcd(0);
  3580  012618  0E00               	movlw	0
  3581  01261A  6EE6               	movwf	postinc1,c
  3582  01261C  ECED  F0BA         	call	_update_lcd	;wreg free
  3583                           
  3584                           ;main.c: 367:    } else {
  3585  012620  D4C6               	goto	l11448
  3586  012622                     l11542:
  3587                           
  3588                           ;main.c: 368:     set_vterm(2);
  3589  012622  0E02               	movlw	2
  3590  012624  6EE6               	movwf	postinc1,c
  3591  012626  ECE0  F0CB         	call	_set_vterm	;wreg free
  3592                           
  3593                           ;main.c: 369:     update_lcd(2);
  3594  01262A  0E02               	movlw	2
  3595  01262C  6EE6               	movwf	postinc1,c
  3596  01262E  ECED  F0BA         	call	_update_lcd	;wreg free
  3597  012632  D4BD               	goto	l11448
  3598  012634                     __end_of_main:
  3599                           	opt callstack 0
  3600                           
  3601 ;; *************** function _static_soc *****************
  3602 ;; Defined at:
  3603 ;;		line 84 in file "mbmc.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1  [STACK] void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/39
  3614 ;;		On exit  : 3F/1
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3621 ;;Total ram usage:        0 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    7
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text1
  3632  019648                     __ptext1:
  3633                           	opt callstack 0
  3634  019648                     _static_soc:
  3635                           	opt callstack 23
  3636                           
  3637                           ;mbmc.c: 86:  C.runtime = 120;
  3638                           
  3639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3640                           ;incstack = 0
  3641  019648  0E00               	movlw	0
  3642  01964A  0101               	movlb	1	; () banked
  3643  01964C  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  3644  01964E  0E78               	movlw	120
  3645  019650  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  3646                           
  3647                           ;mbmc.c: 87:  C.soc = 100;
  3648  019652  0E00               	movlw	0
  3649  019654  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  3650  019656  0E64               	movlw	100
  3651  019658  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;mbmc.c: 88:  C.dynamic_ah = C.bank_ah;
  3655  01965A  C17C  F180         	movff	_C+124,_C+128	;volatile
  3656  01965E  C17D  F181         	movff	_C+125,_C+129	;volatile
  3657  019662  C17E  F182         	movff	_C+126,_C+130	;volatile
  3658  019666  C17F  F183         	movff	_C+127,_C+131	;volatile
  3659                           
  3660                           ; BSR set to: 1
  3661                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3662  01966A  0012               	return		;funcret
  3663  01966C                     __end_of_static_soc:
  3664                           	opt callstack 0
  3665                           
  3666 ;; *************** function _start_switch_handler *****************
  3667 ;; Defined at:
  3668 ;;		line 119 in file "dio.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1  [STACK] void 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3677 ;; Tracked objects:
  3678 ;;		On entry : 1/0
  3679 ;;		On exit  : 3F/39
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    8
  3689 ;; This function calls:
  3690 ;;		_INT1_SetInterruptHandler
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text2
  3697  019764                     __ptext2:
  3698                           	opt callstack 0
  3699  019764                     _start_switch_handler:
  3700                           	opt callstack 22
  3701                           
  3702                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3703                           
  3704                           ; BSR set to: 1
  3705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3706                           ;incstack = 0
  3707  019764  0139               	movlb	57	; () banked
  3708  019766  9195               	bcf	149,0,b	;volatile
  3709                           
  3710                           ; BSR set to: 57
  3711                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3712  019768  0E62               	movlw	low _switch_handler
  3713  01976A  6EE6               	movwf	postinc1,c
  3714  01976C  0E71               	movlw	high _switch_handler
  3715  01976E  6EE6               	movwf	postinc1,c
  3716  019770  0E01               	movlw	low (_switch_handler shr (0+16))
  3717  019772  6EE6               	movwf	postinc1,c
  3718  019774  EC6F  F0CA         	call	_INT1_SetInterruptHandler	;wreg free
  3719                           
  3720                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3721  019778  0E02               	movlw	2
  3722  01977A  0100               	movlb	0	; () banked
  3723  01977C  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3727  01977E  0139               	movlb	57	; () banked
  3728  019780  8195               	bsf	149,0,b	;volatile
  3729                           
  3730                           ; BSR set to: 57
  3731                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3732  019782  0012               	return		;funcret
  3733  019784                     __end_of_start_switch_handler:
  3734                           	opt callstack 0
  3735                           
  3736 ;; *************** function _start_adc_scan *****************
  3737 ;; Defined at:
  3738 ;;		line 33 in file "daq.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1  [STACK] _Bool 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 1/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3756 ;;Total ram usage:        0 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    8
  3759 ;; This function calls:
  3760 ;;		_ADCC_DischargeSampleCapacitor
  3761 ;;		_ADCC_SetADIInterruptHandler
  3762 ;;		_ADCC_SetADTIInterruptHandler
  3763 ;;		_ADCC_StartConversion
  3764 ;; This function is called by:
  3765 ;;		_main
  3766 ;; This function uses a reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text3
  3770  0188F6                     __ptext3:
  3771                           	opt callstack 0
  3772  0188F6                     _start_adc_scan:
  3773                           	opt callstack 22
  3774                           
  3775                           ;daq.c: 35:  if (R.done)
  3776                           
  3777                           ; BSR set to: 57
  3778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3779                           ;incstack = 0
  3780  0188F6  0100               	movlb	0	; () banked
  3781  0188F8  51F0               	movf	(_R+39)& (0+255),w,b	;volatile
  3782  0188FA  A4D8               	btfss	status,2,c
  3783  0188FC  0012               	return	
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;daq.c: 38:  R.scan_index = 0;
  3787  0188FE  6BED               	clrf	(_R+36)& (0+255),b	;volatile
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3791  018900  013A               	movlb	58	; () banked
  3792  018902  5140               	movf	64,w,b	;volatile
  3793  018904  006E F940  F001    	movff	14928,btemp	;volatile
  3794  01890A  6A02               	clrf	(btemp+1)^0,c
  3795  01890C  0060  F004  F002   	movff	btemp,btemp+1
  3796  018912  6A01               	clrf	btemp^0,c
  3797  018914  2601               	addwf	btemp^0,f,c
  3798  018916  0E00               	movlw	0
  3799  018918  2202               	addwfc	(btemp+1)^0,f,c
  3800  01891A  0E77               	movlw	119
  3801  01891C  1401               	andwf	btemp^0,w,c
  3802  01891E  0100               	movlb	0	; () banked
  3803  018920  6FEE               	movwf	(_R+37)& (0+255),b	;volatile
  3804  018922  0E3C               	movlw	60
  3805  018924  1402               	andwf	(btemp+1)^0,w,c
  3806  018926  6FEF               	movwf	(_R+38)& (0+255),b	;volatile
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3810  018928  0EEA               	movlw	low _adc_int_handler
  3811  01892A  6EE6               	movwf	postinc1,c
  3812  01892C  0E99               	movlw	high _adc_int_handler
  3813  01892E  6EE6               	movwf	postinc1,c
  3814  018930  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3815  018932  6EE6               	movwf	postinc1,c
  3816  018934  ECAB  F0CA         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3817                           
  3818                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3819  018938  0ED0               	movlw	low _adc_int_t_handler
  3820  01893A  6EE6               	movwf	postinc1,c
  3821  01893C  0E86               	movlw	high _adc_int_t_handler
  3822  01893E  6EE6               	movwf	postinc1,c
  3823  018940  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3824  018942  6EE6               	movwf	postinc1,c
  3825  018944  EC97  F0CA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3826                           
  3827                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3828  018948  ECCD  F0CC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3829                           
  3830                           ; BSR set to: 62
  3831                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3832  01894C  0100               	movlb	0	; () banked
  3833  01894E  51ED               	movf	(_R+36)& (0+255),w,b	;volatile
  3834  018950  0B0F               	andlw	15
  3835  018952  6EE6               	movwf	postinc1,c
  3836  018954  EC88  F0CC         	call	_ADCC_StartConversion	;wreg free
  3837                           
  3838                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3839  018958  0012               	return		;funcret
  3840  01895A                     __end_of_start_adc_scan:
  3841                           	opt callstack 0
  3842                           
  3843 ;; *************** function _ADCC_StartConversion *****************
  3844 ;; Defined at:
  3845 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  channel         1  [STACK] enum E16136
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1  [STACK] void 
  3852 ;; Registers used:
  3853 ;;		fsr1l, fsr1h
  3854 ;; Tracked objects:
  3855 ;;		On entry : 3F/0
  3856 ;;		On exit  : 3F/3E
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    7
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_start_adc_scan
  3870 ;;		_adc_int_t_handler
  3871 ;; This function uses a reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text4
  3875  019910                     __ptext4:
  3876                           	opt callstack 0
  3877  019910                     _ADCC_StartConversion:
  3878                           	opt callstack 4
  3879                           
  3880                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3881                           ;stkvar	_channel @ sp[(0)+-1]
  3882                           
  3883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3884                           ;incstack = 0
  3885  019910  0EFF               	movlw	-1
  3886  019912  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3887                           
  3888                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3889  019918  013E               	movlb	62	; () banked
  3890  01991A  8FF8               	bsf	248,7,b	;volatile
  3891                           
  3892                           ; BSR set to: 62
  3893                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3894  01991C  81F8               	bsf	248,0,b	;volatile
  3895                           
  3896                           ; BSR set to: 62
  3897                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3898  01991E  52E5               	movf	postdec1,f,c
  3899  019920  0012               	return		;funcret
  3900  019922                     __end_of_ADCC_StartConversion:
  3901                           	opt callstack 0
  3902                           
  3903 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3904 ;; Defined at:
  3905 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1  [STACK] void 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 3F/3E
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    7
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_start_adc_scan
  3930 ;;		_adc_int_t_handler
  3931 ;; This function uses a reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text5
  3935  01999A                     __ptext5:
  3936                           	opt callstack 0
  3937  01999A                     _ADCC_DischargeSampleCapacitor:
  3938                           	opt callstack 4
  3939                           
  3940                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3941                           
  3942                           ; BSR set to: 62
  3943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3944                           ;incstack = 0
  3945  01999A  0E3B               	movlw	59
  3946  01999C  013E               	movlb	62	; () banked
  3947  01999E  6FF1               	movwf	241,b	;volatile
  3948                           
  3949                           ; BSR set to: 62
  3950                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3951  0199A0  0012               	return		;funcret
  3952  0199A2                     __end_of_ADCC_DischargeSampleCapacitor:
  3953                           	opt callstack 0
  3954                           
  3955 ;; *************** function _srand *****************
  3956 ;; Defined at:
  3957 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  s               2  [STACK] unsigned int 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1  [STACK] void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3966 ;; Tracked objects:
  3967 ;;		On entry : 3F/0
  3968 ;;		On exit  : 3F/1
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    7
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_main
  3982 ;; This function uses a reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text6
  3986  019128                     __ptext6:
  3987                           	opt callstack 0
  3988  019128                     _srand:
  3989                           	opt callstack 23
  3990                           
  3991                           ;stkvar	_s @ sp[(0)+-2]
  3992                           
  3993                           ; BSR set to: 62
  3994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3995                           ;incstack = 0
  3996  019128  0EFE               	movlw	-2
  3997  01912A  50E3               	movf	plusw1,w,c
  3998  01912C  0FFF               	addlw	255
  3999  01912E  6E0B               	movwf	(btemp+10)^0,c
  4000  019130  0EFF               	movlw	-1
  4001  019132  006F FF8C  F00C    	movff	plusw1,btemp+11
  4002  019138  0EFF               	movlw	255
  4003  01913A  220C               	addwfc	(btemp+11)^0,f,c
  4004  01913C  0060  F02C  F1EB   	movff	btemp+10,_seed
  4005  019142  0060  F030  F1EC   	movff	btemp+11,_seed+1
  4006  019148  0101               	movlb	1	; () banked
  4007  01914A  6BED               	clrf	(_seed+2)& (0+255),b
  4008  01914C  6BEE               	clrf	(_seed+3)& (0+255),b
  4009  01914E  6BEF               	clrf	(_seed+4)& (0+255),b
  4010  019150  6BF0               	clrf	(_seed+5)& (0+255),b
  4011  019152  6BF1               	clrf	(_seed+6)& (0+255),b
  4012  019154  6BF2               	clrf	(_seed+7)& (0+255),b
  4013                           
  4014                           ; BSR set to: 1
  4015                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4016  019156  52E5               	movf	postdec1,f,c
  4017  019158  52E5               	movf	postdec1,f,c
  4018  01915A  0012               	return		;funcret
  4019  01915C                     __end_of_srand:
  4020                           	opt callstack 0
  4021                           
  4022 ;; *************** function _init_display *****************
  4023 ;; Defined at:
  4024 ;;		line 37 in file "eadog.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1  [STACK] void 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/2
  4035 ;;		On exit  : 3F/3D
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    9
  4045 ;; This function calls:
  4046 ;;		_ringBufS_init
  4047 ;;		_send_lcd_cmd
  4048 ;;		_send_lcd_cmd_long
  4049 ;;		_wdtdelay
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text7
  4056  017AE6                     __ptext7:
  4057                           	opt callstack 0
  4058  017AE6                     _init_display:
  4059                           	opt callstack 21
  4060                           
  4061                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  4062                           
  4063                           ; BSR set to: 1
  4064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4065                           ;incstack = 0
  4066  017AE6  0E83               	movlw	low _ring_buf1
  4067  017AE8  0100               	movlb	0	; () banked
  4068  017AEA  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4069  017AEC  0E04               	movlw	high _ring_buf1
  4070  017AEE  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4071                           
  4072                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  4073  017AF0  0E40               	movlw	low _ring_buf2
  4074  017AF2  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4075  017AF4  0E04               	movlw	high _ring_buf2
  4076  017AF6  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  4080  017AF8  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  4081  017AFE  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  4082  017B04  ECA7  F0C9         	call	_ringBufS_init	;wreg free
  4083                           
  4084                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  4085  017B08  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  4086  017B0E  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  4087  017B14  ECA7  F0C9         	call	_ringBufS_init	;wreg free
  4088                           
  4089                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  4090  017B18  84BE               	bsf	190,2,c	;volatile
  4091  017B1A  84BC               	bsf	188,2,c	;volatile
  4092                           
  4093                           ;eadog.c: 58:  wdtdelay(350000);
  4094  017B1C  0E30               	movlw	48
  4095  017B1E  6EE6               	movwf	postinc1,c
  4096  017B20  0E57               	movlw	87
  4097  017B22  6EE6               	movwf	postinc1,c
  4098  017B24  0E05               	movlw	5
  4099  017B26  6EE6               	movwf	postinc1,c
  4100  017B28  0E00               	movlw	0
  4101  017B2A  6EE6               	movwf	postinc1,c
  4102  017B2C  EC70  F0C5         	call	_wdtdelay	;wreg free
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  4106  017B30  0E39               	movlw	57
  4107  017B32  6EE6               	movwf	postinc1,c
  4108  017B34  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  4112  017B38  0E1D               	movlw	29
  4113  017B3A  6EE6               	movwf	postinc1,c
  4114  017B3C  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  4118  017B40  0E50               	movlw	80
  4119  017B42  6EE6               	movwf	postinc1,c
  4120  017B44  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  4124  017B48  0E6C               	movlw	108
  4125  017B4A  6EE6               	movwf	postinc1,c
  4126  017B4C  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  4130  017B50  0E76               	movlw	118
  4131  017B52  6EE6               	movwf	postinc1,c
  4132  017B54  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  4136  017B58  0E38               	movlw	56
  4137  017B5A  6EE6               	movwf	postinc1,c
  4138  017B5C  EC7F  F0C9         	call	_send_lcd_cmd_long	;wreg free
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  4142  017B60  0E0F               	movlw	15
  4143  017B62  6EE6               	movwf	postinc1,c
  4144  017B64  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  4148  017B68  0E01               	movlw	1
  4149  017B6A  6EE6               	movwf	postinc1,c
  4150  017B6C  EC7F  F0C9         	call	_send_lcd_cmd_long	;wreg free
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  4154  017B70  0E02               	movlw	2
  4155  017B72  6EE6               	movwf	postinc1,c
  4156  017B74  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  4160  017B78  0E06               	movlw	6
  4161  017B7A  6EE6               	movwf	postinc1,c
  4162  017B7C  EC93  F0C9         	call	_send_lcd_cmd	;wreg free
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;eadog.c: 69:  wdtdelay(30);
  4166  017B80  0E1E               	movlw	30
  4167  017B82  6EE6               	movwf	postinc1,c
  4168  017B84  0E00               	movlw	0
  4169  017B86  6EE6               	movwf	postinc1,c
  4170  017B88  0E00               	movlw	0
  4171  017B8A  6EE6               	movwf	postinc1,c
  4172  017B8C  0E00               	movlw	0
  4173  017B8E  6EE6               	movwf	postinc1,c
  4174  017B90  EC70  F0C5         	call	_wdtdelay	;wreg free
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  4178  017B94  0E02               	movlw	2
  4179  017B96  013D               	movlb	61	; () banked
  4180  017B98  6F16               	movwf	22,b	;volatile
  4181                           
  4182                           ; BSR set to: 61
  4183                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  4184  017B9A  0E40               	movlw	64
  4185  017B9C  6F15               	movwf	21,b	;volatile
  4186                           
  4187                           ; BSR set to: 61
  4188                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  4189  017B9E  0E83               	movlw	131
  4190  017BA0  6F14               	movwf	20,b	;volatile
  4191                           
  4192                           ; BSR set to: 61
  4193                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4194  017BA2  931A               	bcf	26,1,b	;volatile
  4195                           
  4196                           ; BSR set to: 61
  4197                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4198  017BA4  0E3F               	movlw	-193
  4199  017BA6  013B               	movlb	59	; () banked
  4200  017BA8  17FD               	andwf	253,f,b	;volatile
  4201                           
  4202                           ; BSR set to: 59
  4203                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4204  017BAA  9BFD               	bcf	253,5,b	;volatile
  4205                           
  4206                           ; BSR set to: 59
  4207                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4208  017BAC  51FD               	movf	253,w,b	;volatile
  4209  017BAE  0BF9               	andlw	-7
  4210  017BB0  0902               	iorlw	2
  4211  017BB2  6FFD               	movwf	253,b	;volatile
  4212                           
  4213                           ; BSR set to: 59
  4214                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4215  017BB4  0EE7               	movlw	-25
  4216  017BB6  17FD               	andwf	253,f,b	;volatile
  4217                           
  4218                           ; BSR set to: 59
  4219                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4220  017BB8  81FD               	bsf	253,0,b	;volatile
  4221                           
  4222                           ; BSR set to: 59
  4223                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4224  017BBA  0E83               	movlw	low _ring_buf1
  4225  017BBC  6FF9               	movwf	249,b	;volatile
  4226  017BBE  0E04               	movlw	high _ring_buf1
  4227  017BC0  6FFA               	movwf	250,b	;volatile
  4228  017BC2  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4229  017BC4  6FFB               	movwf	251,b	;volatile
  4230                           
  4231                           ; BSR set to: 59
  4232                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4233  017BC6  9BFC               	bcf	252,5,b	;volatile
  4234                           
  4235                           ; BSR set to: 59
  4236                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4237  017BC8  013D               	movlb	61	; () banked
  4238  017BCA  831A               	bsf	26,1,b	;volatile
  4239                           
  4240                           ; BSR set to: 61
  4241                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4242  017BCC  94BE               	bcf	190,2,c	;volatile
  4243                           
  4244                           ; BSR set to: 61
  4245                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4246  017BCE  0012               	return		;funcret
  4247  017BD0                     __end_of_init_display:
  4248                           	opt callstack 0
  4249                           
  4250 ;; *************** function _send_lcd_cmd_long *****************
  4251 ;; Defined at:
  4252 ;;		line 127 in file "eadog.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  cmd             1  [STACK] const unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1  [STACK] void 
  4259 ;; Registers used:
  4260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4261 ;; Tracked objects:
  4262 ;;		On entry : 3F/0
  4263 ;;		On exit  : 3F/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    8
  4273 ;; This function calls:
  4274 ;;		_SPI1_Exchange8bit
  4275 ;;		_wdtdelay
  4276 ;; This function is called by:
  4277 ;;		_init_display
  4278 ;; This function uses a reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text8
  4282  0192FE                     __ptext8:
  4283                           	opt callstack 0
  4284  0192FE                     _send_lcd_cmd_long:
  4285                           	opt callstack 21
  4286                           
  4287                           ; BSR set to: 61
  4288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4289                           ;incstack = 0
  4290                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4291  0192FE  92BC               	bcf	188,1,c	;volatile
  4292                           
  4293                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4294  019300  94BC               	bcf	188,2,c	;volatile
  4295                           
  4296                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4297                           ;stkvar	_cmd @ sp[(0)+-1]
  4298  019302  0EFF               	movlw	-1
  4299  019304  50E3               	movf	plusw1,w,c
  4300  019306  6EE6               	movwf	postinc1,c
  4301  019308  ECC2  F0CB         	call	_SPI1_Exchange8bit	;wreg free
  4302                           
  4303                           ; BSR set to: 57
  4304                           ;eadog.c: 132:  wdtdelay(800);
  4305  01930C  0E20               	movlw	32
  4306  01930E  6EE6               	movwf	postinc1,c
  4307  019310  0E03               	movlw	3
  4308  019312  6EE6               	movwf	postinc1,c
  4309  019314  0E00               	movlw	0
  4310  019316  6EE6               	movwf	postinc1,c
  4311  019318  0E00               	movlw	0
  4312  01931A  6EE6               	movwf	postinc1,c
  4313  01931C  EC70  F0C5         	call	_wdtdelay	;wreg free
  4314                           
  4315                           ; BSR set to: 0
  4316  019320  82BC               	bsf	188,1,c	;volatile
  4317                           
  4318                           ; BSR set to: 0
  4319                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4320  019322  52E5               	movf	postdec1,f,c
  4321  019324  0012               	return		;funcret
  4322  019326                     __end_of_send_lcd_cmd_long:
  4323                           	opt callstack 0
  4324                           
  4325 ;; *************** function _send_lcd_cmd *****************
  4326 ;; Defined at:
  4327 ;;		line 115 in file "eadog.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  cmd             1  [STACK] const unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1  [STACK] void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4336 ;; Tracked objects:
  4337 ;;		On entry : 3F/0
  4338 ;;		On exit  : 3F/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4345 ;;Total ram usage:        0 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    8
  4348 ;; This function calls:
  4349 ;;		_SPI1_Exchange8bit
  4350 ;;		_wdtdelay
  4351 ;; This function is called by:
  4352 ;;		_init_display
  4353 ;; This function uses a reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text9
  4357  019326                     __ptext9:
  4358                           	opt callstack 0
  4359  019326                     _send_lcd_cmd:
  4360                           	opt callstack 21
  4361                           
  4362                           ; BSR set to: 0
  4363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4364                           ;incstack = 0
  4365                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4366  019326  92BC               	bcf	188,1,c	;volatile
  4367                           
  4368                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4369  019328  94BC               	bcf	188,2,c	;volatile
  4370                           
  4371                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4372                           ;stkvar	_cmd @ sp[(0)+-1]
  4373  01932A  0EFF               	movlw	-1
  4374  01932C  50E3               	movf	plusw1,w,c
  4375  01932E  6EE6               	movwf	postinc1,c
  4376  019330  ECC2  F0CB         	call	_SPI1_Exchange8bit	;wreg free
  4377                           
  4378                           ; BSR set to: 57
  4379                           ;eadog.c: 120:  wdtdelay(30);
  4380  019334  0E1E               	movlw	30
  4381  019336  6EE6               	movwf	postinc1,c
  4382  019338  0E00               	movlw	0
  4383  01933A  6EE6               	movwf	postinc1,c
  4384  01933C  0E00               	movlw	0
  4385  01933E  6EE6               	movwf	postinc1,c
  4386  019340  0E00               	movlw	0
  4387  019342  6EE6               	movwf	postinc1,c
  4388  019344  EC70  F0C5         	call	_wdtdelay	;wreg free
  4389                           
  4390                           ; BSR set to: 0
  4391  019348  82BC               	bsf	188,1,c	;volatile
  4392                           
  4393                           ; BSR set to: 0
  4394                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4395  01934A  52E5               	movf	postdec1,f,c
  4396  01934C  0012               	return		;funcret
  4397  01934E                     __end_of_send_lcd_cmd:
  4398                           	opt callstack 0
  4399                           
  4400 ;; *************** function _SPI1_Exchange8bit *****************
  4401 ;; Defined at:
  4402 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  data            1  [STACK] unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1  [STACK] unsigned char 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 3F/39
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    7
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_send_lcd_cmd
  4427 ;;		_send_lcd_cmd_long
  4428 ;; This function uses a reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text10
  4432  019784                     __ptext10:
  4433                           	opt callstack 0
  4434  019784                     _SPI1_Exchange8bit:
  4435                           	opt callstack 21
  4436                           
  4437                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4438                           
  4439                           ; BSR set to: 0
  4440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4441                           ;incstack = 0
  4442  019784  0E01               	movlw	1
  4443  019786  013D               	movlb	61	; () banked
  4444  019788  6F12               	movwf	18,b	;volatile
  4445                           
  4446                           ; BSR set to: 61
  4447                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4448                           ;stkvar	_data @ sp[(0)+-1]
  4449  01978A  0EFF               	movlw	-1
  4450  01978C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4451  019792                     l837:
  4452                           
  4453                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4454  019792  0139               	movlb	57	; () banked
  4455  019794  A9A2               	btfss	162,4,b	;volatile
  4456  019796  D7FD               	goto	l837
  4457                           
  4458                           ; BSR set to: 57
  4459                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4460  019798  006F F440  F001    	movff	15632,btemp	;volatile
  4461                           
  4462                           ; BSR set to: 57
  4463                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4464  01979E  52E5               	movf	postdec1,f,c
  4465  0197A0  0012               	return		;funcret
  4466  0197A2                     __end_of_SPI1_Exchange8bit:
  4467                           	opt callstack 0
  4468                           
  4469 ;; *************** function _ringBufS_init *****************
  4470 ;; Defined at:
  4471 ;;		line 22 in file "ringbufs.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  _this           2  [STACK] PTR volatile struct ring
  4474 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1  [STACK] void 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    8
  4493 ;; This function calls:
  4494 ;;		_memset
  4495 ;; This function is called by:
  4496 ;;		_init_display
  4497 ;; This function uses a reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text11
  4501  01934E                     __ptext11:
  4502                           	opt callstack 0
  4503  01934E                     _ringBufS_init:
  4504                           	opt callstack 21
  4505                           
  4506                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4507                           
  4508                           ; BSR set to: 57
  4509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4510                           ;incstack = 0
  4511  01934E  0E43               	movlw	67
  4512  019350  6EE6               	movwf	postinc1,c
  4513  019352  0E00               	movlw	0
  4514  019354  6EE6               	movwf	postinc1,c
  4515  019356  0E00               	movlw	0
  4516  019358  6EE6               	movwf	postinc1,c
  4517  01935A  0E00               	movlw	0
  4518  01935C  6EE6               	movwf	postinc1,c
  4519                           
  4520                           ;stkvar	__this @ sp[(-4)+-2]
  4521  01935E  0EFA               	movlw	-6
  4522  019360  006F FF8F FFE6     	movff	plusw1,postinc1
  4523  019366  006F FF8F FFE6     	movff	plusw1,postinc1
  4524  01936C  ECDB  F0A8         	call	_memset	;wreg free
  4525                           
  4526                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4527  019370  52E5               	movf	postdec1,f,c
  4528  019372  52E5               	movf	postdec1,f,c
  4529  019374  0012               	return		;funcret
  4530  019376                     __end_of_ringBufS_init:
  4531                           	opt callstack 0
  4532                           
  4533 ;; *************** function _init_bsoc *****************
  4534 ;; Defined at:
  4535 ;;		line 76 in file "bsoc.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1  [STACK] void 
  4542 ;; Registers used:
  4543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  4544 ;; Tracked objects:
  4545 ;;		On entry : 3F/1
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:   10
  4556 ;; This function calls:
  4557 ;;		_TMR3_SetInterruptHandler
  4558 ;;		_Volts_to_SOC
  4559 ;;		___fldiv
  4560 ;;		___flmul
  4561 ;;		___fltol
  4562 ;;		___xxtofl
  4563 ;;		_conv_raw_result
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;; This function uses a reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text12
  4570  016C14                     __ptext12:
  4571                           	opt callstack 0
  4572  016C14                     _init_bsoc:
  4573                           	opt callstack 20
  4574                           
  4575                           ;bsoc.c: 81:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  4576                           
  4577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4578                           ;incstack = 0
  4579  016C14  0E00               	movlw	0
  4580  016C16  6EE6               	movwf	postinc1,c
  4581  016C18  0E00               	movlw	0
  4582  016C1A  6EE6               	movwf	postinc1,c
  4583  016C1C  0E7A               	movlw	122
  4584  016C1E  6EE6               	movwf	postinc1,c
  4585  016C20  0E44               	movlw	68
  4586  016C22  6EE6               	movwf	postinc1,c
  4587  016C24  0E00               	movlw	0
  4588  016C26  6EE6               	movwf	postinc1,c
  4589  016C28  0E04               	movlw	4
  4590  016C2A  6EE6               	movwf	postinc1,c
  4591  016C2C  ECB2  F0A0         	call	_conv_raw_result	;wreg free
  4592  016C30  0060  F007  FFE6   	movff	btemp,postinc1
  4593  016C36  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4594  016C3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4595  016C42  0060  F013  FFE6   	movff	btemp+3,postinc1
  4596  016C48  EC51  F0B5         	call	___fltol	;wreg free
  4597  016C4C  0060  F007  FFE6   	movff	btemp,postinc1
  4598  016C52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4599  016C58  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4600  016C5E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4601  016C64  0E00               	movlw	0
  4602  016C66  6EE6               	movwf	postinc1,c
  4603  016C68  ECC0  F0B1         	call	___xxtofl	;wreg free
  4604  016C6C  0060  F007  FFE6   	movff	btemp,postinc1
  4605  016C72  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4606  016C78  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4607  016C7E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4608  016C84  EC1A  F093         	call	___flmul	;wreg free
  4609  016C88  0060  F007  FFE6   	movff	btemp,postinc1
  4610  016C8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4611  016C94  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4612  016C9A  0060  F013  FFE6   	movff	btemp+3,postinc1
  4613  016CA0  EC51  F0B5         	call	___fltol	;wreg free
  4614  016CA4  0060  F007  FFE6   	movff	btemp,postinc1
  4615  016CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4616  016CB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4617  016CB6  0060  F013  FFE6   	movff	btemp+3,postinc1
  4618  016CBC  EC7B  F0C1         	call	_Volts_to_SOC	;wreg free
  4619  016CC0  0060  F004  F19E   	movff	btemp,_C+158	;volatile
  4620  016CC6  0060  F008  F19F   	movff	btemp+1,_C+159	;volatile
  4621                           
  4622                           ;bsoc.c: 82:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  4623  016CCC  0060  F5F3  FFE6   	movff	_C+124,postinc1
  4624  016CD2  0060  F5F7  FFE6   	movff	_C+125,postinc1
  4625  016CD8  0060  F5FB  FFE6   	movff	_C+126,postinc1
  4626  016CDE  0060  F5FF  FFE6   	movff	_C+127,postinc1
  4627  016CE4  0E00               	movlw	0
  4628  016CE6  6EE6               	movwf	postinc1,c
  4629  016CE8  0E00               	movlw	0
  4630  016CEA  6EE6               	movwf	postinc1,c
  4631  016CEC  0EC8               	movlw	200
  4632  016CEE  6EE6               	movwf	postinc1,c
  4633  016CF0  0E42               	movlw	66
  4634  016CF2  6EE6               	movwf	postinc1,c
  4635  016CF4  0101               	movlb	1	; () banked
  4636  016CF6  519E               	movf	(_C+158)& (0+255),w,b	;volatile
  4637  016CF8  6E09               	movwf	(btemp+8)^0,c
  4638  016CFA  519F               	movf	(_C+159)& (0+255),w,b	;volatile
  4639  016CFC  6E0A               	movwf	(btemp+9)^0,c
  4640  016CFE  6A0B               	clrf	(btemp+10)^0,c
  4641  016D00  6A0C               	clrf	(btemp+11)^0,c
  4642  016D02  0060  F027  FFE6   	movff	btemp+8,postinc1
  4643  016D08  0060  F02B  FFE6   	movff	btemp+9,postinc1
  4644  016D0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4645  016D14  0060  F033  FFE6   	movff	btemp+11,postinc1
  4646  016D1A  0E00               	movlw	0
  4647  016D1C  6EE6               	movwf	postinc1,c
  4648  016D1E  ECC0  F0B1         	call	___xxtofl	;wreg free
  4649  016D22  0060  F007  FFE6   	movff	btemp,postinc1
  4650  016D28  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4651  016D2E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4652  016D34  0060  F013  FFE6   	movff	btemp+3,postinc1
  4653  016D3A  ECF5  F09D         	call	___fldiv	;wreg free
  4654  016D3E  0060  F007  FFE6   	movff	btemp,postinc1
  4655  016D44  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4656  016D4A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4657  016D50  0060  F013  FFE6   	movff	btemp+3,postinc1
  4658  016D56  EC1A  F093         	call	___flmul	;wreg free
  4659  016D5A  0060  F004  F180   	movff	btemp,_C+128	;volatile
  4660  016D60  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
  4661  016D66  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
  4662  016D6C  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
  4663                           
  4664                           ;bsoc.c: 83:  TMR3_SetInterruptHandler(calc_bsoc);
  4665  016D72  0E1A               	movlw	low _calc_bsoc
  4666  016D74  6EE6               	movwf	postinc1,c
  4667  016D76  0E36               	movlw	high _calc_bsoc
  4668  016D78  6EE6               	movwf	postinc1,c
  4669  016D7A  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4670  016D7C  6EE6               	movwf	postinc1,c
  4671  016D7E  EC5B  F0CA         	call	_TMR3_SetInterruptHandler	;wreg free
  4672                           
  4673                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4674  016D82  0012               	return		;funcret
  4675  016D84                     __end_of_init_bsoc:
  4676                           	opt callstack 0
  4677                           
  4678 ;; *************** function _Volts_to_SOC *****************
  4679 ;; Defined at:
  4680 ;;		line 140 in file "bsoc.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  cvoltage        4  [STACK] unsigned long 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  2  [STACK] unsigned short 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/1
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4698 ;;Total ram usage:        0 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    7
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_calc_bsoc
  4705 ;;		_init_bsoc
  4706 ;; This function uses a reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text13
  4710  0182F6                     __ptext13:
  4711                           	opt callstack 0
  4712  0182F6                     _Volts_to_SOC:
  4713                           	opt callstack 7
  4714                           
  4715                           ;bsoc.c: 140: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 141: {;bsoc.c: 142:  stat
      +                          ic uint8_t slot;;bsoc.c: 144:  C.soc = 0;
  4716                           
  4717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4718                           ;incstack = 0
  4719  0182F6  0101               	movlb	1	; () banked
  4720  0182F8  6B9E               	clrf	(_C+158)& (0+255),b	;volatile
  4721  0182FA  6B9F               	clrf	(_C+159)& (0+255),b	;volatile
  4722                           
  4723                           ;bsoc.c: 145:  for (slot = 0; slot < 26; slot++) {
  4724  0182FC  6A32               	clrf	Volts_to_SOC@slot^0,c
  4725  0182FE                     l8198:
  4726  0182FE  0E19               	movlw	25
  4727  018300  6432               	cpfsgt	Volts_to_SOC@slot^0,c
  4728  018302  D001               	goto	l8202
  4729  018304  D036               	goto	l8210
  4730  018306                     l8202:
  4731                           
  4732                           ;bsoc.c: 146:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  4733                           ;stkvar	_cvoltage @ sp[(0)+-4]
  4734  018306  5032               	movf	Volts_to_SOC@slot^0,w,c
  4735  018308  0D08               	mullw	8
  4736  01830A  0ECD               	movlw	low _BVSOC_TABLE
  4737  01830C  24F3               	addwf	243,w,c
  4738  01830E  6EF6               	movwf	tblptrl,c
  4739  018310  0EFC               	movlw	high _BVSOC_TABLE
  4740  018312  20F4               	addwfc	244,w,c
  4741  018314  6EF7               	movwf	tblptrh,c
  4742  018316                     	if	1	;There are 3 active tblptr bytes
  4743  018316  6AF8               	clrf	tblptru,c
  4744  018318  0E00               	movlw	low (__mediumconst shr (0+16))
  4745  01831A  22F8               	addwfc	tblptru,f,c
  4746  01831C                     	endif
  4747  01831C  0EFC               	movlw	-4
  4748  01831E  50E3               	movf	plusw1,w,c
  4749  018320  0009               	tblrd		*+
  4750  018322  5CF5               	subwf	tablat,w,c
  4751  018324  0EFD               	movlw	-3
  4752  018326  50E3               	movf	plusw1,w,c
  4753  018328  0009               	tblrd		*+
  4754  01832A  58F5               	subwfb	tablat,w,c
  4755  01832C  0EFE               	movlw	-2
  4756  01832E  50E3               	movf	plusw1,w,c
  4757  018330  0009               	tblrd		*+
  4758  018332  58F5               	subwfb	tablat,w,c
  4759  018334  0EFF               	movlw	-1
  4760  018336  50E3               	movf	plusw1,w,c
  4761  018338  0009               	tblrd		*+
  4762  01833A  58F5               	subwfb	tablat,w,c
  4763  01833C  B0D8               	btfsc	status,0,c
  4764  01833E  D017               	goto	l8206
  4765                           
  4766                           ;bsoc.c: 147:    C.soc = BVSOC_TABLE[slot][1];
  4767  018340  5032               	movf	Volts_to_SOC@slot^0,w,c
  4768  018342  0D08               	mullw	8
  4769  018344  0E04               	movlw	4
  4770  018346  26F3               	addwf	243,f,c
  4771  018348  0E00               	movlw	0
  4772  01834A  22F4               	addwfc	244,f,c
  4773  01834C  0ECD               	movlw	low _BVSOC_TABLE
  4774  01834E  24F3               	addwf	243,w,c
  4775  018350  6EF6               	movwf	tblptrl,c
  4776  018352  0EFC               	movlw	high _BVSOC_TABLE
  4777  018354  20F4               	addwfc	244,w,c
  4778  018356  6EF7               	movwf	tblptrh,c
  4779  018358                     	if	1	;There are 3 active tblptr bytes
  4780  018358  6AF8               	clrf	tblptru,c
  4781  01835A  0E00               	movlw	low (__mediumconst shr (0+16))
  4782  01835C  22F8               	addwfc	tblptru,f,c
  4783  01835E                     	endif
  4784  01835E  0009               	tblrd		*+
  4785  018360  006F FFD4  F19E    	movff	tablat,_C+158	;volatile
  4786  018366  000A               	tblrd		*-
  4787  018368  006F FFD4  F19F    	movff	tablat,_C+159	;volatile
  4788  01836E                     l8206:
  4789                           
  4790                           ;bsoc.c: 149:  }
  4791  01836E  2A32               	incf	Volts_to_SOC@slot^0,f,c
  4792  018370  D7C6               	goto	l8198
  4793  018372                     l8210:
  4794                           
  4795                           ;bsoc.c: 151:  return C.soc;
  4796  018372  EE20  F19E         	lfsr	2,_C+158	;volatile
  4797  018376  006F FF78  F001    	movff	postinc2,btemp
  4798  01837C  006F FF74  F002    	movff	postdec2,btemp+1
  4799                           
  4800                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  4801  018382  52E5               	movf	postdec1,f,c
  4802  018384  52E5               	movf	postdec1,f,c
  4803  018386  52E5               	movf	postdec1,f,c
  4804  018388  52E5               	movf	postdec1,f,c
  4805  01838A  0012               	return		;funcret
  4806  01838C                     __end_of_Volts_to_SOC:
  4807                           	opt callstack 0
  4808                           
  4809 ;; *************** function _hid_display *****************
  4810 ;; Defined at:
  4811 ;;		line 17 in file "hid.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  h               1  [STACK] PTR struct H_data
  4814 ;;		 -> H(7), 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1  [STACK] PTR struct H_data
  4819 ;; Registers used:
  4820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4821 ;; Tracked objects:
  4822 ;;		On entry : 3F/1
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    9
  4833 ;; This function calls:
  4834 ;;		_hid_input
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;; This function uses a reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text14
  4841  0177F4                     __ptext14:
  4842                           	opt callstack 0
  4843  0177F4                     _hid_display:
  4844                           	opt callstack 21
  4845                           
  4846                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4847                           ;stkvar	_h @ sp[(0)+-1]
  4848                           
  4849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4850                           ;incstack = 0
  4851  0177F4  0EFF               	movlw	-1
  4852  0177F6  50E3               	movf	plusw1,w,c
  4853  0177F8  6EE6               	movwf	postinc1,c
  4854  0177FA  EC58  F0C2         	call	_hid_input	;wreg free
  4855                           
  4856                           ;hid.c: 21:  switch (h->h_state) {
  4857  0177FE  D066               	goto	l9830
  4858  017800                     l9808:
  4859                           
  4860                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4861                           ;stkvar	_h @ sp[(0)+-1]
  4862  017800  0EFF               	movlw	-1
  4863  017802  50E3               	movf	plusw1,w,c
  4864  017804  6ED9               	movwf	fsr2l,c
  4865  017806  6ADA               	clrf	fsr2h,c
  4866  017808  0E01               	movlw	1
  4867  01780A  26D9               	addwf	fsr2l,f,c
  4868  01780C  0E01               	movlw	1
  4869  01780E  6EDF               	movwf	indf2,c
  4870                           
  4871                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4872                           ;stkvar	_h @ sp[(0)+-1]
  4873  017810  0EFF               	movlw	-1
  4874  017812  50E3               	movf	plusw1,w,c
  4875  017814  6ED9               	movwf	fsr2l,c
  4876  017816  6ADA               	clrf	fsr2h,c
  4877  017818  0E00               	movlw	0
  4878  01781A  6EDF               	movwf	indf2,c
  4879                           
  4880                           ;hid.c: 25:   h->wait_enter = 1;
  4881                           ;stkvar	_h @ sp[(0)+-1]
  4882  01781C  0EFF               	movlw	-1
  4883  01781E  50E3               	movf	plusw1,w,c
  4884  017820  6ED9               	movwf	fsr2l,c
  4885  017822  6ADA               	clrf	fsr2h,c
  4886  017824  0E04               	movlw	4
  4887  017826  26D9               	addwf	fsr2l,f,c
  4888  017828  0E01               	movlw	1
  4889  01782A  6EDF               	movwf	indf2,c
  4890                           
  4891                           ;hid.c: 26:   h->wait_select = 1;
  4892                           ;stkvar	_h @ sp[(0)+-1]
  4893  01782C  0EFF               	movlw	-1
  4894  01782E  50E3               	movf	plusw1,w,c
  4895  017830  6ED9               	movwf	fsr2l,c
  4896  017832  6ADA               	clrf	fsr2h,c
  4897  017834  0E02               	movlw	2
  4898  017836  26D9               	addwf	fsr2l,f,c
  4899  017838  0E01               	movlw	1
  4900  01783A  6EDF               	movwf	indf2,c
  4901                           
  4902                           ;hid.c: 27:   h->select_p = SW_OFF;
  4903                           ;stkvar	_h @ sp[(0)+-1]
  4904  01783C  0EFF               	movlw	-1
  4905  01783E  50E3               	movf	plusw1,w,c
  4906  017840  6ED9               	movwf	fsr2l,c
  4907  017842  6ADA               	clrf	fsr2h,c
  4908  017844  0E03               	movlw	3
  4909  017846  26D9               	addwf	fsr2l,f,c
  4910  017848  0E00               	movlw	0
  4911  01784A  6EDF               	movwf	indf2,c
  4912                           
  4913                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4914                           ;stkvar	_h @ sp[(0)+-1]
  4915  01784C  0EFF               	movlw	-1
  4916  01784E  50E3               	movf	plusw1,w,c
  4917  017850  6ED9               	movwf	fsr2l,c
  4918  017852  6ADA               	clrf	fsr2h,c
  4919  017854  0E05               	movlw	5
  4920  017856  26D9               	addwf	fsr2l,f,c
  4921  017858  0E00               	movlw	0
  4922  01785A  D036               	goto	L1
  4923  01785C                     l9820:
  4924                           
  4925                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4926                           ;stkvar	_h @ sp[(0)+-1]
  4927  01785C  0EFF               	movlw	-1
  4928  01785E  50E3               	movf	plusw1,w,c
  4929  017860  6ED9               	movwf	fsr2l,c
  4930  017862  6ADA               	clrf	fsr2h,c
  4931  017864  0E02               	movlw	2
  4932  017866  26D9               	addwf	fsr2l,f,c
  4933  017868  50DF               	movf	indf2,w,c
  4934  01786A  A4D8               	btfss	status,2,c
  4935  01786C  D042               	goto	l1894
  4936                           
  4937                           ;stkvar	_h @ sp[(0)+-1]
  4938  01786E  0EFF               	movlw	-1
  4939  017870  50E3               	movf	plusw1,w,c
  4940  017872  6ED9               	movwf	fsr2l,c
  4941  017874  6ADA               	clrf	fsr2h,c
  4942  017876  0E03               	movlw	3
  4943  017878  26D9               	addwf	fsr2l,f,c
  4944  01787A  50DF               	movf	indf2,w,c
  4945  01787C  A4D8               	btfss	status,2,c
  4946  01787E  D039               	goto	l1894
  4947                           
  4948                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4949                           ;stkvar	_h @ sp[(0)+-1]
  4950  017880  0EFF               	movlw	-1
  4951  017882  50E3               	movf	plusw1,w,c
  4952  017884  6ED9               	movwf	fsr2l,c
  4953  017886  6ADA               	clrf	fsr2h,c
  4954  017888  0E06               	movlw	6
  4955  01788A  26D9               	addwf	fsr2l,f,c
  4956                           
  4957                           ;stkvar	_h @ sp[(0)+-1]
  4958  01788C  0EFF               	movlw	-1
  4959  01788E  50E3               	movf	plusw1,w,c
  4960  017890  6EE9               	movwf	fsr0l,c
  4961  017892  6AEA               	clrf	fsr0h,c
  4962  017894  0E06               	movlw	6
  4963  017896  26E9               	addwf	fsr0l,f,c
  4964  017898  2AEF               	incf	indf0,f,c
  4965  01789A  50EF               	movf	indf0,w,c
  4966  01789C  0B03               	andlw	3
  4967  01789E  6EDF               	movwf	indf2,c
  4968                           
  4969                           ;hid.c: 34:    h->hid_display = h->sequence;
  4970                           ;stkvar	_h @ sp[(0)+-1]
  4971  0178A0  0EFF               	movlw	-1
  4972  0178A2  50E3               	movf	plusw1,w,c
  4973  0178A4  6ED9               	movwf	fsr2l,c
  4974  0178A6  6ADA               	clrf	fsr2h,c
  4975  0178A8  0E06               	movlw	6
  4976  0178AA  26D9               	addwf	fsr2l,f,c
  4977                           
  4978                           ;stkvar	_h @ sp[(0)+-1]
  4979  0178AC  0EFF               	movlw	-1
  4980  0178AE  50E3               	movf	plusw1,w,c
  4981  0178B0  6EE9               	movwf	fsr0l,c
  4982  0178B2  6AEA               	clrf	fsr0h,c
  4983  0178B4  006F FF7F FFEF     	movff	indf2,indf0
  4984                           
  4985                           ;hid.c: 35:    h->wait_select = 1;
  4986                           ;stkvar	_h @ sp[(0)+-1]
  4987  0178BA  0EFF               	movlw	-1
  4988  0178BC  50E3               	movf	plusw1,w,c
  4989  0178BE  6ED9               	movwf	fsr2l,c
  4990  0178C0  6ADA               	clrf	fsr2h,c
  4991  0178C2  0E02               	movlw	2
  4992  0178C4  26D9               	addwf	fsr2l,f,c
  4993  0178C6  0E01               	movlw	1
  4994  0178C8                     L1:
  4995  0178C8  6EDF               	movwf	indf2,c
  4996  0178CA  D013               	goto	l1894
  4997  0178CC                     l9830:
  4998                           
  4999                           ;stkvar	_h @ sp[(0)+-1]
  5000  0178CC  0EFF               	movlw	-1
  5001  0178CE  50E3               	movf	plusw1,w,c
  5002  0178D0  6ED9               	movwf	fsr2l,c
  5003  0178D2  6ADA               	clrf	fsr2h,c
  5004  0178D4  0E01               	movlw	1
  5005  0178D6  26D9               	addwf	fsr2l,f,c
  5006  0178D8  50DF               	movf	indf2,w,c
  5007  0178DA  6E0B               	movwf	(btemp+10)^0,c
  5008  0178DC  6A0C               	clrf	(btemp+11)^0,c
  5009                           
  5010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5011                           ; Switch size 1, requested type "simple"
  5012                           ; Number of cases is 1, Range of values is 0 to 0
  5013                           ; switch strategies available:
  5014                           ; Name         Instructions Cycles
  5015                           ; simple_byte            4     3 (average)
  5016                           ;	Chosen strategy is simple_byte
  5017  0178DE  500C               	movf	(btemp+11)^0,w,c
  5018  0178E0  0A00               	xorlw	0	; case 0
  5019  0178E2  A4D8               	btfss	status,2,c
  5020  0178E4  D7BB               	goto	l9820
  5021                           
  5022                           ; Switch size 1, requested type "simple"
  5023                           ; Number of cases is 2, Range of values is 0 to 1
  5024                           ; switch strategies available:
  5025                           ; Name         Instructions Cycles
  5026                           ; simple_byte            7     4 (average)
  5027                           ;	Chosen strategy is simple_byte
  5028  0178E6  500B               	movf	(btemp+10)^0,w,c
  5029  0178E8  0A00               	xorlw	0	; case 0
  5030  0178EA  B4D8               	btfsc	status,2,c
  5031  0178EC  D789               	goto	l9808
  5032  0178EE  0A01               	xorlw	1	; case 1
  5033  0178F0  D7B5               	goto	l9820
  5034  0178F2                     l1894:
  5035                           
  5036                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5037  0178F2  52E5               	movf	postdec1,f,c
  5038  0178F4  0012               	return		;funcret
  5039  0178F6                     __end_of_hid_display:
  5040                           	opt callstack 0
  5041                           
  5042 ;; *************** function _hid_input *****************
  5043 ;; Defined at:
  5044 ;;		line 3 in file "hid.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  h               1  [STACK] PTR struct H_data
  5047 ;;		 -> H(7), 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1  [STACK] PTR struct H_data
  5052 ;; Registers used:
  5053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/1
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5063 ;;Total ram usage:        0 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    8
  5066 ;; This function calls:
  5067 ;;		_get_switch
  5068 ;; This function is called by:
  5069 ;;		_hid_display
  5070 ;; This function uses a reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text15
  5074  0184B0                     __ptext15:
  5075                           	opt callstack 0
  5076  0184B0                     _hid_input:
  5077                           	opt callstack 21
  5078                           
  5079                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  5080                           
  5081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5082                           ;incstack = 0
  5083  0184B0  0E02               	movlw	2
  5084  0184B2  6EE6               	movwf	postinc1,c
  5085  0184B4  ECBB  F0C9         	call	_get_switch	;wreg free
  5086  0184B8  5001               	movf	btemp^0,w,c
  5087  0184BA  B4D8               	btfsc	status,2,c
  5088  0184BC  D01C               	goto	l9510
  5089                           
  5090                           ;hid.c: 6:   h->wait_select = 0;
  5091                           ;stkvar	_h @ sp[(0)+-1]
  5092  0184BE  0EFF               	movlw	-1
  5093  0184C0  50E3               	movf	plusw1,w,c
  5094  0184C2  6ED9               	movwf	fsr2l,c
  5095  0184C4  6ADA               	clrf	fsr2h,c
  5096  0184C6  0E02               	movlw	2
  5097  0184C8  26D9               	addwf	fsr2l,f,c
  5098  0184CA  0E00               	movlw	0
  5099  0184CC  6EDF               	movwf	indf2,c
  5100                           
  5101                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  5102  0184CE  0E02               	movlw	2
  5103  0184D0  6EE6               	movwf	postinc1,c
  5104  0184D2  ECBB  F0C9         	call	_get_switch	;wreg free
  5105  0184D6  5001               	movf	btemp^0,w,c
  5106  0184D8  B4D8               	btfsc	status,2,c
  5107  0184DA  D003               	goto	u8620
  5108  0184DC  6A0C               	clrf	(btemp+11)^0,c
  5109  0184DE  2A0C               	incf	(btemp+11)^0,f,c
  5110  0184E0  D001               	goto	u8638
  5111  0184E2                     u8620:
  5112  0184E2  6A0C               	clrf	(btemp+11)^0,c
  5113  0184E4                     u8638:
  5114                           
  5115                           ;stkvar	_h @ sp[(0)+-1]
  5116  0184E4  0EFF               	movlw	-1
  5117  0184E6  50E3               	movf	plusw1,w,c
  5118  0184E8  6ED9               	movwf	fsr2l,c
  5119  0184EA  6ADA               	clrf	fsr2h,c
  5120  0184EC  0E03               	movlw	3
  5121  0184EE  26D9               	addwf	fsr2l,f,c
  5122  0184F0  0060  F033  FFDF   	movff	btemp+11,indf2
  5123  0184F6                     l9510:
  5124                           
  5125                           ;hid.c: 10:  if (get_switch(SENTER)) {
  5126  0184F6  0E03               	movlw	3
  5127  0184F8  6EE6               	movwf	postinc1,c
  5128  0184FA  ECBB  F0C9         	call	_get_switch	;wreg free
  5129  0184FE  5001               	movf	btemp^0,w,c
  5130  018500  B4D8               	btfsc	status,2,c
  5131  018502  D01C               	goto	l1885
  5132                           
  5133                           ;hid.c: 11:   h->wait_enter = 0;
  5134                           ;stkvar	_h @ sp[(0)+-1]
  5135  018504  0EFF               	movlw	-1
  5136  018506  50E3               	movf	plusw1,w,c
  5137  018508  6ED9               	movwf	fsr2l,c
  5138  01850A  6ADA               	clrf	fsr2h,c
  5139  01850C  0E04               	movlw	4
  5140  01850E  26D9               	addwf	fsr2l,f,c
  5141  018510  0E00               	movlw	0
  5142  018512  6EDF               	movwf	indf2,c
  5143                           
  5144                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  5145  018514  0E03               	movlw	3
  5146  018516  6EE6               	movwf	postinc1,c
  5147  018518  ECBB  F0C9         	call	_get_switch	;wreg free
  5148  01851C  5001               	movf	btemp^0,w,c
  5149  01851E  B4D8               	btfsc	status,2,c
  5150  018520  D003               	goto	u8650
  5151  018522  6A0C               	clrf	(btemp+11)^0,c
  5152  018524  2A0C               	incf	(btemp+11)^0,f,c
  5153  018526  D001               	goto	u8668
  5154  018528                     u8650:
  5155  018528  6A0C               	clrf	(btemp+11)^0,c
  5156  01852A                     u8668:
  5157                           
  5158                           ;stkvar	_h @ sp[(0)+-1]
  5159  01852A  0EFF               	movlw	-1
  5160  01852C  50E3               	movf	plusw1,w,c
  5161  01852E  6ED9               	movwf	fsr2l,c
  5162  018530  6ADA               	clrf	fsr2h,c
  5163  018532  0E05               	movlw	5
  5164  018534  26D9               	addwf	fsr2l,f,c
  5165  018536  0060  F033  FFDF   	movff	btemp+11,indf2
  5166  01853C                     l1885:
  5167                           
  5168                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  5169  01853C  52E5               	movf	postdec1,f,c
  5170  01853E  0012               	return		;funcret
  5171  018540                     __end_of_hid_input:
  5172                           	opt callstack 0
  5173                           
  5174 ;; *************** function _get_switch *****************
  5175 ;; Defined at:
  5176 ;;		line 18 in file "dio.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  i               1  [STACK] unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1  [STACK] enum E17030
  5183 ;; Registers used:
  5184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/2
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    7
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;;		_hid_input
  5202 ;; This function uses a reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text16
  5206  019376                     __ptext16:
  5207                           	opt callstack 0
  5208  019376                     _get_switch:
  5209                           	opt callstack 21
  5210                           
  5211                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  5212                           ;stkvar	_i @ sp[(0)+-1]
  5213                           
  5214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5215                           ;incstack = 0
  5216  019376  0EFF               	movlw	-1
  5217  019378  006F FF8C  F001    	movff	plusw1,btemp
  5218  01937E  0E03               	movlw	3
  5219  019380  6401               	cpfsgt	btemp^0,c
  5220  019382  D002               	goto	l8184
  5221                           
  5222                           ;dio.c: 21:   return SW_OFF;
  5223  019384  0E00               	movlw	0
  5224  019386  D008               	goto	L2
  5225  019388                     l8184:
  5226                           
  5227                           ;dio.c: 23:  return S.button[i].sw;
  5228                           ;stkvar	_i @ sp[(0)+-1]
  5229  019388  0EFF               	movlw	-1
  5230  01938A  50E3               	movf	plusw1,w,c
  5231  01938C  0D05               	mullw	5
  5232  01938E  50F3               	movf	243,w,c
  5233  019390  0F60               	addlw	low _S
  5234  019392  6ED9               	movwf	fsr2l,c
  5235  019394  6ADA               	clrf	fsr2h,c
  5236  019396  50DF               	movf	indf2,w,c
  5237  019398                     L2:
  5238  019398  6E01               	movwf	btemp^0,c
  5239                           
  5240                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5241  01939A  52E5               	movf	postdec1,f,c
  5242  01939C  0012               	return		;funcret
  5243  01939E                     __end_of_get_switch:
  5244                           	opt callstack 0
  5245                           
  5246 ;; *************** function _eaDogM_WriteCommand *****************
  5247 ;; Defined at:
  5248 ;;		line 173 in file "eadog.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  cmd             1  [STACK] const unsigned char 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1  [STACK] void 
  5255 ;; Registers used:
  5256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5257 ;; Tracked objects:
  5258 ;;		On entry : 3F/3D
  5259 ;;		On exit  : 3F/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5266 ;;Total ram usage:        0 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:   17
  5269 ;; This function calls:
  5270 ;;		_send_lcd_cmd_dma
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;; This function uses a reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text17
  5277  019932                     __ptext17:
  5278                           	opt callstack 0
  5279  019932                     _eaDogM_WriteCommand:
  5280                           	opt callstack 13
  5281                           
  5282                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  5283                           ;stkvar	_cmd @ sp[(0)+-1]
  5284                           
  5285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5286                           ;incstack = 0
  5287  019932  0EFF               	movlw	-1
  5288  019934  50E3               	movf	plusw1,w,c
  5289  019936  6EE6               	movwf	postinc1,c
  5290  019938  ECF7  F0C5         	call	_send_lcd_cmd_dma	;wreg free
  5291                           
  5292                           ; BSR set to: 0
  5293                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5294  01993C  52E5               	movf	postdec1,f,c
  5295  01993E  0012               	return		;funcret
  5296  019940                     __end_of_eaDogM_WriteCommand:
  5297                           	opt callstack 0
  5298                           
  5299 ;; *************** function _convert_adc_data *****************
  5300 ;; Defined at:
  5301 ;;		line 40 in file "mbmc.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  i               1  [STACK] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1  [STACK] void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/1
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:   10
  5322 ;; This function calls:
  5323 ;;		_conv_raw_result
  5324 ;;		_lp_filter
  5325 ;; This function is called by:
  5326 ;;		_main
  5327 ;; This function uses a reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text18
  5331  017F08                     __ptext18:
  5332                           	opt callstack 0
  5333  017F08                     _convert_adc_data:
  5334                           	opt callstack 0
  5335                           
  5336                           ; BSR set to: 0
  5337                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5338  017F08  52E6               	movf	postinc1,f,c
  5339                           
  5340                           ;mbmc.c: 42:  uint8_t i = 0;
  5341                           ;stkvar	_i @ sp[(-1)+0]
  5342                           
  5343                           ;incstack = 0
  5344  017F0A  0EFF               	movlw	-1
  5345  017F0C  6AE3               	clrf	plusw1,c
  5346  017F0E                     l9780:
  5347                           
  5348                           ;mbmc.c: 45:   if (V.calib) {
  5349  017F0E  0102               	movlb	2	; () banked
  5350  017F10  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5351  017F12  B4D8               	btfsc	status,2,c
  5352  017F14  D01B               	goto	l9784
  5353                           
  5354                           ; BSR set to: 2
  5355                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  5356  017F16  0E01               	movlw	1
  5357  017F18  6EE6               	movwf	postinc1,c
  5358                           
  5359                           ;stkvar	_i @ sp[(-2)+0]
  5360  017F1A  0EFE               	movlw	-2
  5361  017F1C  50E3               	movf	plusw1,w,c
  5362  017F1E  6EE6               	movwf	postinc1,c
  5363  017F20  0E01               	movlw	1
  5364  017F22  6EE6               	movwf	postinc1,c
  5365                           
  5366                           ;stkvar	_i @ sp[(-4)+0]
  5367  017F24  0EFC               	movlw	-4
  5368  017F26  50E3               	movf	plusw1,w,c
  5369  017F28  6EE6               	movwf	postinc1,c
  5370  017F2A  ECB2  F0A0         	call	_conv_raw_result	;wreg free
  5371  017F2E  0060  F007  FFE6   	movff	btemp,postinc1
  5372  017F34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5373  017F3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5374  017F40  0060  F013  FFE6   	movff	btemp+3,postinc1
  5375  017F46  ECA6  F0B3         	call	_lp_filter	;wreg free
  5376  017F4A  D01A               	goto	L3
  5377  017F4C                     l9784:
  5378                           
  5379                           ; BSR set to: 2
  5380                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  5381  017F4C  0E00               	movlw	0
  5382  017F4E  6EE6               	movwf	postinc1,c
  5383                           
  5384                           ;stkvar	_i @ sp[(-2)+0]
  5385  017F50  0EFE               	movlw	-2
  5386  017F52  50E3               	movf	plusw1,w,c
  5387  017F54  6EE6               	movwf	postinc1,c
  5388  017F56  0E00               	movlw	0
  5389  017F58  6EE6               	movwf	postinc1,c
  5390                           
  5391                           ;stkvar	_i @ sp[(-4)+0]
  5392  017F5A  0EFC               	movlw	-4
  5393  017F5C  50E3               	movf	plusw1,w,c
  5394  017F5E  6EE6               	movwf	postinc1,c
  5395  017F60  ECB2  F0A0         	call	_conv_raw_result	;wreg free
  5396  017F64  0060  F007  FFE6   	movff	btemp,postinc1
  5397  017F6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5398  017F70  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5399  017F76  0060  F013  FFE6   	movff	btemp+3,postinc1
  5400  017F7C  ECA6  F0B3         	call	_lp_filter	;wreg free
  5401  017F80                     L3:
  5402                           
  5403                           ;stkvar	_i @ sp[(-1)+0]
  5404  017F80  0EFF               	movlw	-1
  5405  017F82  50E3               	movf	plusw1,w,c
  5406  017F84  0D04               	mullw	4
  5407  017F86  0E00               	movlw	low _C
  5408  017F88  24F3               	addwf	243,w,c
  5409  017F8A  6ED9               	movwf	fsr2l,c
  5410  017F8C  0E01               	movlw	high _C
  5411  017F8E  20F4               	addwfc	prodh,w,c
  5412  017F90  6EDA               	movwf	fsr2h,c
  5413  017F92  0060  F007  FFDE   	movff	btemp,postinc2
  5414  017F98  0060  F00B  FFDE   	movff	btemp+1,postinc2
  5415  017F9E  0060  F00F  FFDE   	movff	btemp+2,postinc2
  5416  017FA4  0060  F013  FFDE   	movff	btemp+3,postinc2
  5417                           
  5418                           ;mbmc.c: 50:  } while (++i < 16);
  5419                           ;stkvar	_i @ sp[(-1)+0]
  5420  017FAA  0EFF               	movlw	-1
  5421  017FAC  2AE3               	incf	plusw1,f,c
  5422  017FAE  0EFF               	movlw	-1
  5423  017FB0  006F FF8C  F001    	movff	plusw1,btemp
  5424  017FB6  0E0F               	movlw	15
  5425  017FB8  6401               	cpfsgt	btemp^0,c
  5426  017FBA  D7A9               	goto	l9780
  5427                           
  5428                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5429  017FBC  52E5               	movf	postdec1,f,c
  5430  017FBE  0012               	return		;funcret
  5431  017FC0                     __end_of_convert_adc_data:
  5432                           	opt callstack 0
  5433                           
  5434 ;; *************** function _conv_raw_result *****************
  5435 ;; Defined at:
  5436 ;;		line 80 in file "daq.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  chan            1  [STACK] const enum E16136
  5439 ;;  to_what         1  [STACK] const enum E16198
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  4  [STACK] float 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/1
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    9
  5458 ;; This function calls:
  5459 ;;		___fldiv
  5460 ;;		___flmul
  5461 ;;		___flsub
  5462 ;;		___xxtofl
  5463 ;;		_get_raw_result
  5464 ;;		_nanf
  5465 ;; This function is called by:
  5466 ;;		_convert_adc_data
  5467 ;;		_init_bsoc
  5468 ;; This function uses a reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text19
  5472  014164                     __ptext19:
  5473                           	opt callstack 0
  5474  014164                     _conv_raw_result:
  5475                           	opt callstack 20
  5476                           
  5477                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5478                           
  5479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5480                           ;incstack = 0
  5481  014164  D242               	goto	l9444
  5482  014166                     l9390:
  5483                           
  5484                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5485                           ;stkvar	_chan @ sp[(0)+-1]
  5486  014166  0EFF               	movlw	-1
  5487  014168  006F FF8C  F00C    	movff	plusw1,btemp+11
  5488  01416E  0E77               	movlw	119
  5489  014170  6E09               	movwf	(btemp+8)^0,c
  5490  014172  0E3C               	movlw	60
  5491  014174  6E0A               	movwf	(btemp+9)^0,c
  5492  014176  2A0C               	incf	(btemp+11)^0,f,c
  5493  014178  D003               	goto	u8394
  5494  01417A                     u8395:
  5495  01417A  340A               	rlcf	(btemp+9)^0,w,c
  5496  01417C  320A               	rrcf	(btemp+9)^0,f,c
  5497  01417E  3209               	rrcf	(btemp+8)^0,f,c
  5498  014180                     u8394:
  5499  014180  2E0C               	decfsz	(btemp+11)^0,f,c
  5500  014182  D7FB               	goto	u8395
  5501  014184  B009               	btfsc	(btemp+8)^0,0,c
  5502  014186  D007               	goto	l9396
  5503                           
  5504                           ;daq.c: 86:    return nanf("");
  5505  014188  0E7F               	movlw	low (STR_39+18)
  5506  01418A  6EE6               	movwf	postinc1,c
  5507  01418C  0EFE               	movlw	high (STR_39+18)
  5508  01418E  6EE6               	movwf	postinc1,c
  5509  014190  ECDF  F0C4         	call	_nanf	;wreg free
  5510  014194  D23A               	goto	l1765
  5511  014196                     l9396:
  5512                           
  5513                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5514                           ;stkvar	_chan @ sp[(0)+-1]
  5515  014196  0EFF               	movlw	-1
  5516  014198  006F FF8C  F00C    	movff	plusw1,btemp+11
  5517  01419E  0E03               	movlw	3
  5518  0141A0  6E09               	movwf	(btemp+8)^0,c
  5519  0141A2  0E00               	movlw	0
  5520  0141A4  6E0A               	movwf	(btemp+9)^0,c
  5521  0141A6  2A0C               	incf	(btemp+11)^0,f,c
  5522  0141A8  D003               	goto	u8414
  5523  0141AA                     u8415:
  5524  0141AA  340A               	rlcf	(btemp+9)^0,w,c
  5525  0141AC  320A               	rrcf	(btemp+9)^0,f,c
  5526  0141AE  3209               	rrcf	(btemp+8)^0,f,c
  5527  0141B0                     u8414:
  5528  0141B0  2E0C               	decfsz	(btemp+11)^0,f,c
  5529  0141B2  D7FB               	goto	u8415
  5530  0141B4  A009               	btfss	(btemp+8)^0,0,c
  5531  0141B6  D0EB               	goto	l9410
  5532                           
  5533                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5534                           ;stkvar	_chan @ sp[(0)+-1]
  5535  0141B8  0EFF               	movlw	-1
  5536  0141BA  006F FF8C  F00C    	movff	plusw1,btemp+11
  5537  0141C0  0E01               	movlw	1
  5538  0141C2  6E09               	movwf	(btemp+8)^0,c
  5539  0141C4  0E00               	movlw	0
  5540  0141C6  6E0A               	movwf	(btemp+9)^0,c
  5541  0141C8  2A0C               	incf	(btemp+11)^0,f,c
  5542  0141CA  D003               	goto	u8434
  5543  0141CC                     u8435:
  5544  0141CC  340A               	rlcf	(btemp+9)^0,w,c
  5545  0141CE  320A               	rrcf	(btemp+9)^0,f,c
  5546  0141D0  3209               	rrcf	(btemp+8)^0,f,c
  5547  0141D2                     u8434:
  5548  0141D2  2E0C               	decfsz	(btemp+11)^0,f,c
  5549  0141D4  D7FB               	goto	u8435
  5550  0141D6  A009               	btfss	(btemp+8)^0,0,c
  5551  0141D8  D06D               	goto	l9406
  5552                           
  5553                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5554  0141DA  0E7B               	movlw	123
  5555  0141DC  6EE6               	movwf	postinc1,c
  5556  0141DE  0E14               	movlw	20
  5557  0141E0  6EE6               	movwf	postinc1,c
  5558  0141E2  0EAE               	movlw	174
  5559  0141E4  6EE6               	movwf	postinc1,c
  5560  0141E6  0E3D               	movlw	61
  5561  0141E8  6EE6               	movwf	postinc1,c
  5562  0141EA  0060  F3A4  F009   	movff	_R+32,btemp+8	;volatile
  5563  0141F0  0060  F3A8  F00A   	movff	_R+33,btemp+9	;volatile
  5564  0141F6  0E00               	movlw	0
  5565  0141F8  BE0A               	btfsc	(btemp+9)^0,7,c
  5566  0141FA  0EFF               	movlw	255
  5567  0141FC  6E0B               	movwf	(btemp+10)^0,c
  5568  0141FE  6E0C               	movwf	(btemp+11)^0,c
  5569  014200  0060  F027  FFE6   	movff	btemp+8,postinc1
  5570  014206  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5571  01420C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5572  014212  0060  F033  FFE6   	movff	btemp+11,postinc1
  5573  014218  0E01               	movlw	1
  5574  01421A  6EE6               	movwf	postinc1,c
  5575  01421C  ECC0  F0B1         	call	___xxtofl	;wreg free
  5576  014220  0060  F007  FFE6   	movff	btemp,postinc1
  5577  014226  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5578  01422C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5579  014232  0060  F013  FFE6   	movff	btemp+3,postinc1
  5580                           
  5581                           ;stkvar	_chan @ sp[(-8)+-1]
  5582  014238  0EF7               	movlw	-9
  5583  01423A  50E3               	movf	plusw1,w,c
  5584  01423C  6EE6               	movwf	postinc1,c
  5585  01423E  ECD1  F0CB         	call	_get_raw_result	;wreg free
  5586  014242  0060  F004  F00B   	movff	btemp,btemp+10
  5587  014248  0060  F008  F00C   	movff	btemp+1,btemp+11
  5588  01424E  500B               	movf	(btemp+10)^0,w,c
  5589  014250  6E05               	movwf	(btemp+4)^0,c
  5590  014252  500C               	movf	(btemp+11)^0,w,c
  5591  014254  6E06               	movwf	(btemp+5)^0,c
  5592  014256  6A07               	clrf	(btemp+6)^0,c
  5593  014258  6A08               	clrf	(btemp+7)^0,c
  5594  01425A  0060  F017  FFE6   	movff	btemp+4,postinc1
  5595  014260  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5596  014266  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5597  01426C  0060  F023  FFE6   	movff	btemp+7,postinc1
  5598  014272  0E00               	movlw	0
  5599  014274  6EE6               	movwf	postinc1,c
  5600  014276  ECC0  F0B1         	call	___xxtofl	;wreg free
  5601  01427A  0060  F007  FFE6   	movff	btemp,postinc1
  5602  014280  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5603  014286  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5604  01428C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5605  014292  ECDC  F0C6         	call	___flsub	;wreg free
  5606  014296  0060  F007  FFE6   	movff	btemp,postinc1
  5607  01429C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5608  0142A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5609  0142A8  0060  F013  FFE6   	movff	btemp+3,postinc1
  5610  0142AE  EC1A  F093         	call	___flmul	;wreg free
  5611  0142B2  D1AB               	goto	l1765
  5612  0142B4                     l9406:
  5613                           
  5614                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5615  0142B4  0E29               	movlw	41
  5616  0142B6  6EE6               	movwf	postinc1,c
  5617  0142B8  0E5C               	movlw	92
  5618  0142BA  6EE6               	movwf	postinc1,c
  5619  0142BC  0E0F               	movlw	15
  5620  0142BE  6EE6               	movwf	postinc1,c
  5621  0142C0  0E3D               	movlw	61
  5622  0142C2  6EE6               	movwf	postinc1,c
  5623  0142C4  0060  F3AC  F009   	movff	_R+34,btemp+8	;volatile
  5624  0142CA  0060  F3B0  F00A   	movff	_R+35,btemp+9	;volatile
  5625  0142D0  0E00               	movlw	0
  5626  0142D2  BE0A               	btfsc	(btemp+9)^0,7,c
  5627  0142D4  0EFF               	movlw	255
  5628  0142D6  6E0B               	movwf	(btemp+10)^0,c
  5629  0142D8  6E0C               	movwf	(btemp+11)^0,c
  5630  0142DA  0060  F027  FFE6   	movff	btemp+8,postinc1
  5631  0142E0  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5632  0142E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5633  0142EC  0060  F033  FFE6   	movff	btemp+11,postinc1
  5634  0142F2  0E01               	movlw	1
  5635  0142F4  6EE6               	movwf	postinc1,c
  5636  0142F6  ECC0  F0B1         	call	___xxtofl	;wreg free
  5637  0142FA  0060  F007  FFE6   	movff	btemp,postinc1
  5638  014300  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5639  014306  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5640  01430C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5641                           
  5642                           ;stkvar	_chan @ sp[(-8)+-1]
  5643  014312  0EF7               	movlw	-9
  5644  014314  50E3               	movf	plusw1,w,c
  5645  014316  6EE6               	movwf	postinc1,c
  5646  014318  ECD1  F0CB         	call	_get_raw_result	;wreg free
  5647  01431C  0060  F004  F00B   	movff	btemp,btemp+10
  5648  014322  0060  F008  F00C   	movff	btemp+1,btemp+11
  5649  014328  500B               	movf	(btemp+10)^0,w,c
  5650  01432A  6E05               	movwf	(btemp+4)^0,c
  5651  01432C  500C               	movf	(btemp+11)^0,w,c
  5652  01432E  6E06               	movwf	(btemp+5)^0,c
  5653  014330  6A07               	clrf	(btemp+6)^0,c
  5654  014332  6A08               	clrf	(btemp+7)^0,c
  5655  014334  0060  F017  FFE6   	movff	btemp+4,postinc1
  5656  01433A  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5657  014340  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5658  014346  0060  F023  FFE6   	movff	btemp+7,postinc1
  5659  01434C  0E00               	movlw	0
  5660  01434E  6EE6               	movwf	postinc1,c
  5661  014350  ECC0  F0B1         	call	___xxtofl	;wreg free
  5662  014354  0060  F007  FFE6   	movff	btemp,postinc1
  5663  01435A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5664  014360  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5665  014366  0060  F013  FFE6   	movff	btemp+3,postinc1
  5666  01436C  ECDC  F0C6         	call	___flsub	;wreg free
  5667  014370  0060  F007  FFE6   	movff	btemp,postinc1
  5668  014376  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5669  01437C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5670  014382  0060  F013  FFE6   	movff	btemp+3,postinc1
  5671  014388  EC1A  F093         	call	___flmul	;wreg free
  5672  01438C  D13E               	goto	l1765
  5673  01438E                     l9410:
  5674                           
  5675                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5676                           ;stkvar	_chan @ sp[(0)+-1]
  5677  01438E  0EFF               	movlw	-1
  5678  014390  006F FF8C  F00C    	movff	plusw1,btemp+11
  5679  014396  0E00               	movlw	0
  5680  014398  6E09               	movwf	(btemp+8)^0,c
  5681  01439A  0E08               	movlw	8
  5682  01439C  6E0A               	movwf	(btemp+9)^0,c
  5683  01439E  2A0C               	incf	(btemp+11)^0,f,c
  5684  0143A0  D003               	goto	u8454
  5685  0143A2                     u8455:
  5686  0143A2  340A               	rlcf	(btemp+9)^0,w,c
  5687  0143A4  320A               	rrcf	(btemp+9)^0,f,c
  5688  0143A6  3209               	rrcf	(btemp+8)^0,f,c
  5689  0143A8                     u8454:
  5690  0143A8  2E0C               	decfsz	(btemp+11)^0,f,c
  5691  0143AA  D7FB               	goto	u8455
  5692  0143AC  A009               	btfss	(btemp+8)^0,0,c
  5693  0143AE  D008               	goto	l9418
  5694                           
  5695                           ;daq.c: 96:     return 25.0;
  5696  0143B0  0E00               	movlw	0
  5697  0143B2  6E01               	movwf	btemp^0,c
  5698  0143B4  0E00               	movlw	0
  5699  0143B6  6E02               	movwf	(btemp+1)^0,c
  5700  0143B8  0EC8               	movlw	200
  5701  0143BA  6E03               	movwf	(btemp+2)^0,c
  5702  0143BC  0E41               	movlw	65
  5703  0143BE  D113               	goto	L4
  5704  0143C0                     l9418:
  5705                           
  5706                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5707  0143C0  0E00               	movlw	0
  5708  0143C2  6EE6               	movwf	postinc1,c
  5709  0143C4  0E00               	movlw	0
  5710  0143C6  6EE6               	movwf	postinc1,c
  5711  0143C8  0E7A               	movlw	122
  5712  0143CA  6EE6               	movwf	postinc1,c
  5713  0143CC  0E44               	movlw	68
  5714  0143CE  6EE6               	movwf	postinc1,c
  5715  0143D0  0E61               	movlw	97
  5716  0143D2  6EE6               	movwf	postinc1,c
  5717  0143D4  0E03               	movlw	3
  5718  0143D6  6EE6               	movwf	postinc1,c
  5719  0143D8  0E84               	movlw	132
  5720  0143DA  6EE6               	movwf	postinc1,c
  5721  0143DC  0E40               	movlw	64
  5722  0143DE  6EE6               	movwf	postinc1,c
  5723                           
  5724                           ;stkvar	_chan @ sp[(-8)+-1]
  5725  0143E0  0EF7               	movlw	-9
  5726  0143E2  50E3               	movf	plusw1,w,c
  5727  0143E4  6EE6               	movwf	postinc1,c
  5728  0143E6  ECD1  F0CB         	call	_get_raw_result	;wreg free
  5729  0143EA  0060  F004  F00B   	movff	btemp,btemp+10
  5730  0143F0  0060  F008  F00C   	movff	btemp+1,btemp+11
  5731  0143F6  500B               	movf	(btemp+10)^0,w,c
  5732  0143F8  6E05               	movwf	(btemp+4)^0,c
  5733  0143FA  500C               	movf	(btemp+11)^0,w,c
  5734  0143FC  6E06               	movwf	(btemp+5)^0,c
  5735  0143FE  6A07               	clrf	(btemp+6)^0,c
  5736  014400  6A08               	clrf	(btemp+7)^0,c
  5737  014402  0060  F017  FFE6   	movff	btemp+4,postinc1
  5738  014408  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5739  01440E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5740  014414  0060  F023  FFE6   	movff	btemp+7,postinc1
  5741  01441A  0E00               	movlw	0
  5742  01441C  6EE6               	movwf	postinc1,c
  5743  01441E  ECC0  F0B1         	call	___xxtofl	;wreg free
  5744  014422  0060  F007  FFE6   	movff	btemp,postinc1
  5745  014428  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5746  01442E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5747  014434  0060  F013  FFE6   	movff	btemp+3,postinc1
  5748  01443A  EC1A  F093         	call	___flmul	;wreg free
  5749  01443E  0060  F007  FFE6   	movff	btemp,postinc1
  5750  014444  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5751  01444A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5752  014450  0060  F013  FFE6   	movff	btemp+3,postinc1
  5753  014456  ECF5  F09D         	call	___fldiv	;wreg free
  5754  01445A  D0D7               	goto	l1765
  5755  01445C                     l9422:
  5756                           
  5757                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5758                           ;stkvar	_chan @ sp[(0)+-1]
  5759  01445C  0EFF               	movlw	-1
  5760  01445E  006F FF8C  F00C    	movff	plusw1,btemp+11
  5761  014464  0E03               	movlw	3
  5762  014466  6E09               	movwf	(btemp+8)^0,c
  5763  014468  0E00               	movlw	0
  5764  01446A  6E0A               	movwf	(btemp+9)^0,c
  5765  01446C  2A0C               	incf	(btemp+11)^0,f,c
  5766  01446E  D003               	goto	u8474
  5767  014470                     u8475:
  5768  014470  340A               	rlcf	(btemp+9)^0,w,c
  5769  014472  320A               	rrcf	(btemp+9)^0,f,c
  5770  014474  3209               	rrcf	(btemp+8)^0,f,c
  5771  014476                     u8474:
  5772  014476  2E0C               	decfsz	(btemp+11)^0,f,c
  5773  014478  D7FB               	goto	u8475
  5774  01447A  B009               	btfsc	(btemp+8)^0,0,c
  5775  01447C  D011               	goto	u8500
  5776                           
  5777                           ;stkvar	_chan @ sp[(0)+-1]
  5778  01447E  0EFF               	movlw	-1
  5779  014480  006F FF8C  F00C    	movff	plusw1,btemp+11
  5780  014486  0E00               	movlw	0
  5781  014488  6E09               	movwf	(btemp+8)^0,c
  5782  01448A  0E08               	movlw	8
  5783  01448C  6E0A               	movwf	(btemp+9)^0,c
  5784  01448E  2A0C               	incf	(btemp+11)^0,f,c
  5785  014490  D003               	goto	u8494
  5786  014492                     u8495:
  5787  014492  340A               	rlcf	(btemp+9)^0,w,c
  5788  014494  320A               	rrcf	(btemp+9)^0,f,c
  5789  014496  3209               	rrcf	(btemp+8)^0,f,c
  5790  014498                     u8494:
  5791  014498  2E0C               	decfsz	(btemp+11)^0,f,c
  5792  01449A  D7FB               	goto	u8495
  5793  01449C  A009               	btfss	(btemp+8)^0,0,c
  5794  01449E  D04E               	goto	l9430
  5795  0144A0                     u8500:
  5796                           
  5797                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5798  0144A0  0E00               	movlw	0
  5799  0144A2  6EE6               	movwf	postinc1,c
  5800  0144A4  0E00               	movlw	0
  5801  0144A6  6EE6               	movwf	postinc1,c
  5802  0144A8  0E7A               	movlw	122
  5803  0144AA  6EE6               	movwf	postinc1,c
  5804  0144AC  0E44               	movlw	68
  5805  0144AE  6EE6               	movwf	postinc1,c
  5806  0144B0  0E00               	movlw	0
  5807  0144B2  6EE6               	movwf	postinc1,c
  5808  0144B4  0E00               	movlw	0
  5809  0144B6  6EE6               	movwf	postinc1,c
  5810  0144B8  0E20               	movlw	32
  5811  0144BA  6EE6               	movwf	postinc1,c
  5812  0144BC  0E3F               	movlw	63
  5813  0144BE  6EE6               	movwf	postinc1,c
  5814                           
  5815                           ;stkvar	_chan @ sp[(-8)+-1]
  5816  0144C0  0EF7               	movlw	-9
  5817  0144C2  50E3               	movf	plusw1,w,c
  5818  0144C4  6EE6               	movwf	postinc1,c
  5819  0144C6  ECD1  F0CB         	call	_get_raw_result	;wreg free
  5820  0144CA  0060  F004  F00B   	movff	btemp,btemp+10
  5821  0144D0  0060  F008  F00C   	movff	btemp+1,btemp+11
  5822  0144D6  500B               	movf	(btemp+10)^0,w,c
  5823  0144D8  6E05               	movwf	(btemp+4)^0,c
  5824  0144DA  500C               	movf	(btemp+11)^0,w,c
  5825  0144DC  6E06               	movwf	(btemp+5)^0,c
  5826  0144DE  6A07               	clrf	(btemp+6)^0,c
  5827  0144E0  6A08               	clrf	(btemp+7)^0,c
  5828  0144E2  0060  F017  FFE6   	movff	btemp+4,postinc1
  5829  0144E8  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5830  0144EE  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5831  0144F4  0060  F023  FFE6   	movff	btemp+7,postinc1
  5832  0144FA  0E00               	movlw	0
  5833  0144FC  6EE6               	movwf	postinc1,c
  5834  0144FE  ECC0  F0B1         	call	___xxtofl	;wreg free
  5835  014502  0060  F007  FFE6   	movff	btemp,postinc1
  5836  014508  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5837  01450E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5838  014514  0060  F013  FFE6   	movff	btemp+3,postinc1
  5839  01451A  EC1A  F093         	call	___flmul	;wreg free
  5840  01451E  0060  F007  FFE6   	movff	btemp,postinc1
  5841  014524  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5842  01452A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5843  014530  0060  F013  FFE6   	movff	btemp+3,postinc1
  5844  014536  ECF5  F09D         	call	___fldiv	;wreg free
  5845  01453A  D067               	goto	l1765
  5846  01453C                     l9430:
  5847                           
  5848                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5849  01453C  0E00               	movlw	0
  5850  01453E  6EE6               	movwf	postinc1,c
  5851  014540  0E00               	movlw	0
  5852  014542  6EE6               	movwf	postinc1,c
  5853  014544  0E7A               	movlw	122
  5854  014546  6EE6               	movwf	postinc1,c
  5855  014548  0E44               	movlw	68
  5856  01454A  6EE6               	movwf	postinc1,c
  5857  01454C  0E61               	movlw	97
  5858  01454E  6EE6               	movwf	postinc1,c
  5859  014550  0E03               	movlw	3
  5860  014552  6EE6               	movwf	postinc1,c
  5861  014554  0E84               	movlw	132
  5862  014556  6EE6               	movwf	postinc1,c
  5863  014558  0E40               	movlw	64
  5864  01455A  6EE6               	movwf	postinc1,c
  5865                           
  5866                           ;stkvar	_chan @ sp[(-8)+-1]
  5867  01455C  0EF7               	movlw	-9
  5868  01455E  50E3               	movf	plusw1,w,c
  5869  014560  6EE6               	movwf	postinc1,c
  5870  014562  ECD1  F0CB         	call	_get_raw_result	;wreg free
  5871  014566  0060  F004  F00B   	movff	btemp,btemp+10
  5872  01456C  0060  F008  F00C   	movff	btemp+1,btemp+11
  5873  014572  500B               	movf	(btemp+10)^0,w,c
  5874  014574  6E05               	movwf	(btemp+4)^0,c
  5875  014576  500C               	movf	(btemp+11)^0,w,c
  5876  014578  6E06               	movwf	(btemp+5)^0,c
  5877  01457A  6A07               	clrf	(btemp+6)^0,c
  5878  01457C  6A08               	clrf	(btemp+7)^0,c
  5879  01457E  0060  F017  FFE6   	movff	btemp+4,postinc1
  5880  014584  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5881  01458A  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5882  014590  0060  F023  FFE6   	movff	btemp+7,postinc1
  5883  014596  0E00               	movlw	0
  5884  014598  6EE6               	movwf	postinc1,c
  5885  01459A  ECC0  F0B1         	call	___xxtofl	;wreg free
  5886  01459E  0060  F007  FFE6   	movff	btemp,postinc1
  5887  0145A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5888  0145AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5889  0145B0  0060  F013  FFE6   	movff	btemp+3,postinc1
  5890  0145B6  EC1A  F093         	call	___flmul	;wreg free
  5891  0145BA  0060  F007  FFE6   	movff	btemp,postinc1
  5892  0145C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5893  0145C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5894  0145CC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5895  0145D2  ECF5  F09D         	call	___fldiv	;wreg free
  5896  0145D6  D019               	goto	l1765
  5897  0145D8                     l9436:
  5898                           
  5899                           ;daq.c: 109:   return 0.0;
  5900  0145D8  0E00               	movlw	0
  5901  0145DA  6E01               	movwf	btemp^0,c
  5902  0145DC  0E00               	movlw	0
  5903  0145DE  6E02               	movwf	(btemp+1)^0,c
  5904  0145E0  0E00               	movlw	0
  5905  0145E2  6E03               	movwf	(btemp+2)^0,c
  5906  0145E4  0E00               	movlw	0
  5907  0145E6                     L4:
  5908  0145E6  6E04               	movwf	(btemp+3)^0,c
  5909  0145E8  D010               	goto	l1765
  5910  0145EA                     l9444:
  5911                           
  5912                           ;stkvar	_to_what @ sp[(0)+-2]
  5913  0145EA  0EFE               	movlw	-2
  5914  0145EC  50E3               	movf	plusw1,w,c
  5915  0145EE  6E0B               	movwf	(btemp+10)^0,c
  5916  0145F0  6A0C               	clrf	(btemp+11)^0,c
  5917                           
  5918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5919                           ; Switch size 1, requested type "simple"
  5920                           ; Number of cases is 1, Range of values is 0 to 0
  5921                           ; switch strategies available:
  5922                           ; Name         Instructions Cycles
  5923                           ; simple_byte            4     3 (average)
  5924                           ;	Chosen strategy is simple_byte
  5925  0145F2  500C               	movf	(btemp+11)^0,w,c
  5926  0145F4  0A00               	xorlw	0	; case 0
  5927  0145F6  A4D8               	btfss	status,2,c
  5928  0145F8  D7EF               	goto	l9436
  5929                           
  5930                           ; Switch size 1, requested type "simple"
  5931                           ; Number of cases is 2, Range of values is 0 to 1
  5932                           ; switch strategies available:
  5933                           ; Name         Instructions Cycles
  5934                           ; simple_byte            7     4 (average)
  5935                           ;	Chosen strategy is simple_byte
  5936  0145FA  500B               	movf	(btemp+10)^0,w,c
  5937  0145FC  0A00               	xorlw	0	; case 0
  5938  0145FE  B4D8               	btfsc	status,2,c
  5939  014600  D5B2               	goto	l9390
  5940  014602  0A01               	xorlw	1	; case 1
  5941  014604  B4D8               	btfsc	status,2,c
  5942  014606  D72A               	goto	l9422
  5943  014608  D7E7               	goto	l9436
  5944  01460A                     l1765:
  5945                           
  5946                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5947  01460A  52E5               	movf	postdec1,f,c
  5948  01460C  52E5               	movf	postdec1,f,c
  5949  01460E  0012               	return		;funcret
  5950  014610                     __end_of_conv_raw_result:
  5951                           	opt callstack 0
  5952                           
  5953 ;; *************** function _nanf *****************
  5954 ;; Defined at:
  5955 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  s               2  [STACK] PTR const unsigned char 
  5958 ;;		 -> STR_59(1), STR_45(1), 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  u               4  [STACK] struct .
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  4  [STACK] float 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/1
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5974 ;;Total ram usage:        0 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    7
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_conv_raw_result
  5981 ;; This function uses a reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text20
  5985  0189BE                     __ptext20:
  5986                           	opt callstack 0
  5987  0189BE                     _nanf:
  5988                           	opt callstack 0
  5989                           
  5990                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5991  0189BE  52E6               	movf	postinc1,f,c
  5992  0189C0  52E6               	movf	postinc1,f,c
  5993  0189C2  52E6               	movf	postinc1,f,c
  5994  0189C4  52E6               	movf	postinc1,f,c
  5995                           
  5996                           ;incstack = 0
  5997  0189C6  0EFF               	movlw	255
  5998  0189C8  6E09               	movwf	(btemp+8)^0,c
  5999  0189CA  0EFF               	movlw	255
  6000  0189CC  6E0A               	movwf	(btemp+9)^0,c
  6001  0189CE  0EFF               	movlw	255
  6002  0189D0  6E0B               	movwf	(btemp+10)^0,c
  6003  0189D2  0E7F               	movlw	127
  6004  0189D4  6E0C               	movwf	(btemp+11)^0,c
  6005                           
  6006                           ;stkvar	_u @ sp[(-4)+0]
  6007  0189D6  0EFC               	movlw	-4
  6008  0189D8  0060  F027  FFE3   	movff	btemp+8,plusw1
  6009  0189DE  0EFD               	movlw	-3
  6010  0189E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6011  0189E6  0EFE               	movlw	-2
  6012  0189E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6013  0189EE  0EFF               	movlw	-1
  6014  0189F0  0060  F033  FFE3   	movff	btemp+11,plusw1
  6015                           
  6016                           ;stkvar	_u @ sp[(-4)+0]
  6017  0189F6  0EFC               	movlw	-4
  6018  0189F8  006F FF8C  F001    	movff	plusw1,btemp
  6019  0189FE  0EFD               	movlw	-3
  6020  018A00  006F FF8C  F002    	movff	plusw1,btemp+1
  6021  018A06  0EFE               	movlw	-2
  6022  018A08  006F FF8C  F003    	movff	plusw1,btemp+2
  6023  018A0E  0EFF               	movlw	-1
  6024  018A10  006F FF8C  F004    	movff	plusw1,btemp+3
  6025                           
  6026                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  6027  018A16  0EFA               	movlw	250
  6028  018A18  26E1               	addwf	fsr1l,f,c
  6029  018A1A  0EFF               	movlw	255
  6030  018A1C  22E2               	addwfc	fsr1h,f,c
  6031  018A1E  0012               	return		;funcret
  6032  018A20                     __end_of_nanf:
  6033                           	opt callstack 0
  6034                           
  6035 ;; *************** function _get_raw_result *****************
  6036 ;; Defined at:
  6037 ;;		line 72 in file "daq.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  index           1  [STACK] const enum E16136
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  2  [STACK] unsigned short 
  6044 ;; Registers used:
  6045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/2
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6055 ;;Total ram usage:        0 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    7
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_main
  6062 ;;		_conv_raw_result
  6063 ;; This function uses a reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text21
  6067  0197A2                     __ptext21:
  6068                           	opt callstack 0
  6069  0197A2                     _get_raw_result:
  6070                           	opt callstack 21
  6071                           
  6072                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  6073                           ;stkvar	_index @ sp[(0)+-1]
  6074                           
  6075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6076                           ;incstack = 0
  6077  0197A2  0EFF               	movlw	-1
  6078  0197A4  50E3               	movf	plusw1,w,c
  6079  0197A6  0D02               	mullw	2
  6080  0197A8  50F3               	movf	243,w,c
  6081  0197AA  0FC9               	addlw	low _R
  6082  0197AC  6ED9               	movwf	fsr2l,c
  6083  0197AE  6ADA               	clrf	fsr2h,c
  6084  0197B0  006F FF78  F001    	movff	postinc2,btemp
  6085  0197B6  006F FF74  F002    	movff	postdec2,btemp+1
  6086                           
  6087                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  6088  0197BC  52E5               	movf	postdec1,f,c
  6089  0197BE  0012               	return		;funcret
  6090  0197C0                     __end_of_get_raw_result:
  6091                           	opt callstack 0
  6092                           
  6093 ;; *************** function ___xxtofl *****************
  6094 ;; Defined at:
  6095 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  sign            1  [STACK] unsigned char 
  6098 ;;  val             4  [STACK] long 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  arg             4  [STACK] unsigned long 
  6101 ;;  exp             1  [STACK] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  4  [STACK] unsigned char 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/1
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    7
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_conv_raw_result
  6122 ;;		_calc_bsoc
  6123 ;;		_init_bsoc
  6124 ;; This function uses a reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text22
  6128  016380                     __ptext22:
  6129                           	opt callstack 0
  6130  016380                     ___xxtofl:
  6131                           	opt callstack 0
  6132                           
  6133                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6134  016380  0E05               	movlw	5
  6135  016382  26E1               	addwf	fsr1l,f,c
  6136  016384  0E00               	movlw	0
  6137  016386  22E2               	addwfc	fsr1h,f,c
  6138                           
  6139                           ;stkvar	_sign @ sp[(-5)+-1]
  6140                           
  6141                           ;incstack = 0
  6142  016388  0EFA               	movlw	-6
  6143  01638A  50E3               	movf	plusw1,w,c
  6144  01638C  B4D8               	btfsc	status,2,c
  6145  01638E  D01D               	goto	l8828
  6146                           
  6147                           ;stkvar	_val @ sp[(-5)+-5]
  6148  016390  0EF9               	movlw	-7
  6149  016392  AEE3               	btfss	plusw1,7,c
  6150  016394  D01A               	goto	l8828
  6151                           
  6152                           ;stkvar	_val @ sp[(-5)+-5]
  6153  016396  0EF6               	movlw	-10
  6154  016398  006F FF8C  F009    	movff	plusw1,btemp+8
  6155  01639E  0EF7               	movlw	-9
  6156  0163A0  006F FF8C  F00A    	movff	plusw1,btemp+9
  6157  0163A6  0EF8               	movlw	-8
  6158  0163A8  006F FF8C  F00B    	movff	plusw1,btemp+10
  6159  0163AE  0EF9               	movlw	-7
  6160  0163B0  006F FF8C  F00C    	movff	plusw1,btemp+11
  6161  0163B6  1E09               	comf	(btemp+8)^0,f,c
  6162  0163B8  1E0A               	comf	(btemp+9)^0,f,c
  6163  0163BA  1E0B               	comf	(btemp+10)^0,f,c
  6164  0163BC  1E0C               	comf	(btemp+11)^0,f,c
  6165  0163BE  2A09               	incf	(btemp+8)^0,f,c
  6166  0163C0  0E00               	movlw	0
  6167  0163C2  220A               	addwfc	(btemp+9)^0,f,c
  6168  0163C4  220B               	addwfc	(btemp+10)^0,f,c
  6169  0163C6  220C               	addwfc	(btemp+11)^0,f,c
  6170  0163C8  D010               	goto	L5
  6171  0163CA                     l8828:
  6172                           
  6173                           ;stkvar	_val @ sp[(-5)+-5]
  6174  0163CA  0EF6               	movlw	-10
  6175  0163CC  006F FF8C  F009    	movff	plusw1,btemp+8
  6176  0163D2  0EF7               	movlw	-9
  6177  0163D4  006F FF8C  F00A    	movff	plusw1,btemp+9
  6178  0163DA  0EF8               	movlw	-8
  6179  0163DC  006F FF8C  F00B    	movff	plusw1,btemp+10
  6180  0163E2  0EF9               	movlw	-7
  6181  0163E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6182  0163EA                     L5:
  6183                           
  6184                           ;stkvar	_arg @ sp[(-5)+0]
  6185  0163EA  0EFB               	movlw	-5
  6186  0163EC  0060  F027  FFE3   	movff	btemp+8,plusw1
  6187  0163F2  0EFC               	movlw	-4
  6188  0163F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6189  0163FA  0EFD               	movlw	-3
  6190  0163FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6191  016402  0EFE               	movlw	-2
  6192  016404  0060  F033  FFE3   	movff	btemp+11,plusw1
  6193                           
  6194                           ;stkvar	_val @ sp[(-5)+-5]
  6195  01640A  0EF6               	movlw	-10
  6196  01640C  50E3               	movf	plusw1,w,c
  6197  01640E  E113               	bnz	l8836
  6198  016410  0EF7               	movlw	-9
  6199  016412  50E3               	movf	plusw1,w,c
  6200  016414  E110               	bnz	l8836
  6201  016416  0EF8               	movlw	-8
  6202  016418  50E3               	movf	plusw1,w,c
  6203  01641A  E10D               	bnz	l8836
  6204  01641C  0EF9               	movlw	-7
  6205  01641E  50E3               	movf	plusw1,w,c
  6206  016420  A4D8               	btfss	status,2,c
  6207  016422  D009               	goto	l8836
  6208  016424  0E00               	movlw	0
  6209  016426  6E01               	movwf	btemp^0,c
  6210  016428  0E00               	movlw	0
  6211  01642A  6E02               	movwf	(btemp+1)^0,c
  6212  01642C  0E00               	movlw	0
  6213  01642E  6E03               	movwf	(btemp+2)^0,c
  6214  016430  0E00               	movlw	0
  6215  016432  6E04               	movwf	(btemp+3)^0,c
  6216  016434  D0A2               	goto	l2911
  6217  016436                     l8836:
  6218  016436  0E96               	movlw	150
  6219  016438  6E0C               	movwf	(btemp+11)^0,c
  6220                           
  6221                           ;stkvar	_exp @ sp[(-5)+4]
  6222  01643A  0EFF               	movlw	-1
  6223  01643C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6224  016442  D00B               	goto	l8840
  6225  016444                     l8838:
  6226                           
  6227                           ;stkvar	_exp @ sp[(-5)+4]
  6228  016444  0EFF               	movlw	-1
  6229  016446  2AE3               	incf	plusw1,f,c
  6230                           
  6231                           ;stkvar	_arg @ sp[(-5)+0]
  6232  016448  90D8               	bcf	status,0,c
  6233  01644A  0EFE               	movlw	-2
  6234  01644C  32E3               	rrcf	plusw1,f,c
  6235  01644E  0EFD               	movlw	-3
  6236  016450  32E3               	rrcf	plusw1,f,c
  6237  016452  0EFC               	movlw	-4
  6238  016454  32E3               	rrcf	plusw1,f,c
  6239  016456  0EFB               	movlw	-5
  6240  016458  32E3               	rrcf	plusw1,f,c
  6241  01645A                     l8840:
  6242                           
  6243                           ;stkvar	_arg @ sp[(-5)+0]
  6244  01645A  50E1               	movf	fsr1l,w,c
  6245  01645C  0FFB               	addlw	-5
  6246  01645E  6ED9               	movwf	fsr2l,c
  6247  016460  50E2               	movf	fsr1h,w,c
  6248  016462  6EDA               	movwf	fsr2h,c
  6249  016464  0EFF               	movlw	255
  6250  016466  22DA               	addwfc	fsr2h,f,c
  6251  016468  52DE               	movf	postinc2,f,c
  6252  01646A  52DE               	movf	postinc2,f,c
  6253  01646C  52DE               	movf	postinc2,f,c
  6254  01646E  0EFE               	movlw	254
  6255  016470  14DD               	andwf	postdec2,w,c
  6256  016472  B4D8               	btfsc	status,2,c
  6257  016474  D018               	goto	l8848
  6258  016476  D7E6               	goto	l8838
  6259  016478                     l8842:
  6260                           
  6261                           ;stkvar	_exp @ sp[(-5)+4]
  6262  016478  0EFF               	movlw	-1
  6263  01647A  2AE3               	incf	plusw1,f,c
  6264                           
  6265                           ;stkvar	_arg @ sp[(-5)+0]
  6266  01647C  50E1               	movf	fsr1l,w,c
  6267  01647E  0FFB               	addlw	-5
  6268  016480  6ED9               	movwf	fsr2l,c
  6269  016482  50E2               	movf	fsr1h,w,c
  6270  016484  6EDA               	movwf	fsr2h,c
  6271  016486  0EFF               	movlw	255
  6272  016488  22DA               	addwfc	fsr2h,f,c
  6273  01648A  2ADE               	incf	postinc2,f,c
  6274  01648C  0E00               	movlw	0
  6275  01648E  22DE               	addwfc	postinc2,f,c
  6276  016490  22DE               	addwfc	postinc2,f,c
  6277  016492  22DE               	addwfc	postinc2,f,c
  6278                           
  6279                           ;stkvar	_arg @ sp[(-5)+0]
  6280  016494  90D8               	bcf	status,0,c
  6281  016496  0EFE               	movlw	-2
  6282  016498  32E3               	rrcf	plusw1,f,c
  6283  01649A  0EFD               	movlw	-3
  6284  01649C  32E3               	rrcf	plusw1,f,c
  6285  01649E  0EFC               	movlw	-4
  6286  0164A0  32E3               	rrcf	plusw1,f,c
  6287  0164A2  0EFB               	movlw	-5
  6288  0164A4  32E3               	rrcf	plusw1,f,c
  6289  0164A6                     l8848:
  6290                           
  6291                           ;stkvar	_arg @ sp[(-5)+0]
  6292  0164A6  50E1               	movf	fsr1l,w,c
  6293  0164A8  0FFB               	addlw	-5
  6294  0164AA  6ED9               	movwf	fsr2l,c
  6295  0164AC  50E2               	movf	fsr1h,w,c
  6296  0164AE  6EDA               	movwf	fsr2h,c
  6297  0164B0  0EFF               	movlw	255
  6298  0164B2  22DA               	addwfc	fsr2h,f,c
  6299  0164B4  52DE               	movf	postinc2,f,c
  6300  0164B6  52DE               	movf	postinc2,f,c
  6301  0164B8  52DE               	movf	postinc2,f,c
  6302  0164BA  0EFF               	movlw	255
  6303  0164BC  14DD               	andwf	postdec2,w,c
  6304  0164BE  B4D8               	btfsc	status,2,c
  6305  0164C0  D00C               	goto	l8852
  6306  0164C2  D7DA               	goto	l8842
  6307  0164C4                     l8850:
  6308                           
  6309                           ;stkvar	_exp @ sp[(-5)+4]
  6310  0164C4  0EFF               	movlw	-1
  6311  0164C6  06E3               	decf	plusw1,f,c
  6312                           
  6313                           ;stkvar	_arg @ sp[(-5)+0]
  6314  0164C8  90D8               	bcf	status,0,c
  6315  0164CA  0EFB               	movlw	-5
  6316  0164CC  36E3               	rlcf	plusw1,f,c
  6317  0164CE  0EFC               	movlw	-4
  6318  0164D0  36E3               	rlcf	plusw1,f,c
  6319  0164D2  0EFD               	movlw	-3
  6320  0164D4  36E3               	rlcf	plusw1,f,c
  6321  0164D6  0EFE               	movlw	-2
  6322  0164D8  36E3               	rlcf	plusw1,f,c
  6323  0164DA                     l8852:
  6324                           
  6325                           ;stkvar	_arg @ sp[(-5)+0]
  6326  0164DA  0EFD               	movlw	-3
  6327  0164DC  BEE3               	btfsc	plusw1,7,c
  6328  0164DE  D007               	goto	u8190
  6329                           
  6330                           ;stkvar	_exp @ sp[(-5)+4]
  6331  0164E0  0EFF               	movlw	-1
  6332  0164E2  006F FF8C  F001    	movff	plusw1,btemp
  6333  0164E8  0E02               	movlw	2
  6334  0164EA  6001               	cpfslt	btemp^0,c
  6335  0164EC  D7EB               	goto	l8850
  6336  0164EE                     u8190:
  6337                           
  6338                           ;stkvar	_exp @ sp[(-5)+4]
  6339  0164EE  0EFF               	movlw	-1
  6340  0164F0  B0E3               	btfsc	plusw1,0,c
  6341  0164F2  D002               	goto	l8860
  6342                           
  6343                           ;stkvar	_arg @ sp[(-5)+0]
  6344  0164F4  0EFD               	movlw	-3
  6345  0164F6  9EE3               	bcf	plusw1,7,c
  6346  0164F8                     l8860:
  6347                           
  6348                           ;stkvar	_exp @ sp[(-5)+4]
  6349  0164F8  50E1               	movf	fsr1l,w,c
  6350  0164FA  0FFF               	addlw	-1
  6351  0164FC  6ED9               	movwf	fsr2l,c
  6352  0164FE  50E2               	movf	fsr1h,w,c
  6353  016500  6EDA               	movwf	fsr2h,c
  6354  016502  0EFF               	movlw	255
  6355  016504  22DA               	addwfc	fsr2h,f,c
  6356  016506  90D8               	bcf	status,0,c
  6357  016508  32DF               	rrcf	indf2,f,c
  6358                           
  6359                           ;stkvar	_exp @ sp[(-5)+4]
  6360  01650A  0EFF               	movlw	-1
  6361  01650C  006F FF8C  F00C    	movff	plusw1,btemp+11
  6362  016512  0060  F030  F005   	movff	btemp+11,btemp+4
  6363  016518  6A06               	clrf	(btemp+5)^0,c
  6364  01651A  6A07               	clrf	(btemp+6)^0,c
  6365  01651C  6A08               	clrf	(btemp+7)^0,c
  6366  01651E  0060  F014  F008   	movff	btemp+4,btemp+7
  6367  016524  6A07               	clrf	(btemp+6)^0,c
  6368  016526  6A06               	clrf	(btemp+5)^0,c
  6369  016528  6A05               	clrf	(btemp+4)^0,c
  6370                           
  6371                           ;stkvar	_arg @ sp[(-5)+0]
  6372  01652A  50E1               	movf	fsr1l,w,c
  6373  01652C  0FFB               	addlw	-5
  6374  01652E  6ED9               	movwf	fsr2l,c
  6375  016530  50E2               	movf	fsr1h,w,c
  6376  016532  6EDA               	movwf	fsr2h,c
  6377  016534  0EFF               	movlw	255
  6378  016536  22DA               	addwfc	fsr2h,f,c
  6379  016538  5005               	movf	(btemp+4)^0,w,c
  6380  01653A  12DE               	iorwf	postinc2,f,c
  6381  01653C  5006               	movf	(btemp+5)^0,w,c
  6382  01653E  12DE               	iorwf	postinc2,f,c
  6383  016540  5007               	movf	(btemp+6)^0,w,c
  6384  016542  12DE               	iorwf	postinc2,f,c
  6385  016544  5008               	movf	(btemp+7)^0,w,c
  6386  016546  12DE               	iorwf	postinc2,f,c
  6387                           
  6388                           ;stkvar	_sign @ sp[(-5)+-1]
  6389  016548  0EFA               	movlw	-6
  6390  01654A  50E3               	movf	plusw1,w,c
  6391  01654C  B4D8               	btfsc	status,2,c
  6392  01654E  D005               	goto	l8870
  6393                           
  6394                           ;stkvar	_val @ sp[(-5)+-5]
  6395  016550  0EF9               	movlw	-7
  6396  016552  AEE3               	btfss	plusw1,7,c
  6397  016554  D002               	goto	l8870
  6398                           
  6399                           ;stkvar	_arg @ sp[(-5)+0]
  6400  016556  0EFE               	movlw	-2
  6401  016558  8EE3               	bsf	plusw1,7,c
  6402  01655A                     l8870:
  6403                           
  6404                           ;stkvar	_arg @ sp[(-5)+0]
  6405  01655A  0EFB               	movlw	-5
  6406  01655C  006F FF8C  F001    	movff	plusw1,btemp
  6407  016562  0EFC               	movlw	-4
  6408  016564  006F FF8C  F002    	movff	plusw1,btemp+1
  6409  01656A  0EFD               	movlw	-3
  6410  01656C  006F FF8C  F003    	movff	plusw1,btemp+2
  6411  016572  0EFE               	movlw	-2
  6412  016574  006F FF8C  F004    	movff	plusw1,btemp+3
  6413  01657A                     l2911:
  6414                           
  6415                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6416  01657A  0EF6               	movlw	246
  6417  01657C  26E1               	addwf	fsr1l,f,c
  6418  01657E  0EFF               	movlw	255
  6419  016580  22E2               	addwfc	fsr1h,f,c
  6420  016582  0012               	return		;funcret
  6421  016584                     __end_of___xxtofl:
  6422                           	opt callstack 0
  6423                           
  6424 ;; *************** function _clear_hid_pflags *****************
  6425 ;; Defined at:
  6426 ;;		line 51 in file "hid.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  h               1  [STACK] PTR struct H_data
  6429 ;;		 -> H(7), 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1  [STACK] void 
  6434 ;; Registers used:
  6435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 3F/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    7
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_main
  6452 ;; This function uses a reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text23
  6456  01966C                     __ptext23:
  6457                           	opt callstack 0
  6458  01966C                     _clear_hid_pflags:
  6459                           	opt callstack 23
  6460                           
  6461                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6462                           ;stkvar	_h @ sp[(0)+-1]
  6463                           
  6464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6465                           ;incstack = 0
  6466  01966C  0EFF               	movlw	-1
  6467  01966E  50E3               	movf	plusw1,w,c
  6468  019670  6ED9               	movwf	fsr2l,c
  6469  019672  6ADA               	clrf	fsr2h,c
  6470  019674  0E03               	movlw	3
  6471  019676  26D9               	addwf	fsr2l,f,c
  6472  019678  0E00               	movlw	0
  6473  01967A  6EDF               	movwf	indf2,c
  6474                           
  6475                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6476                           ;stkvar	_h @ sp[(0)+-1]
  6477  01967C  0EFF               	movlw	-1
  6478  01967E  50E3               	movf	plusw1,w,c
  6479  019680  6ED9               	movwf	fsr2l,c
  6480  019682  6ADA               	clrf	fsr2h,c
  6481  019684  0E05               	movlw	5
  6482  019686  26D9               	addwf	fsr2l,f,c
  6483  019688  0E00               	movlw	0
  6484  01968A  6EDF               	movwf	indf2,c
  6485                           
  6486                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6487  01968C  52E5               	movf	postdec1,f,c
  6488  01968E  0012               	return		;funcret
  6489  019690                     __end_of_clear_hid_pflags:
  6490                           	opt callstack 0
  6491                           
  6492 ;; *************** function _clear_adc_scan *****************
  6493 ;; Defined at:
  6494 ;;		line 64 in file "daq.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;		None
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1  [STACK] void 
  6501 ;; Registers used:
  6502 ;;		None
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/1
  6505 ;;		On exit  : 3F/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6512 ;;Total ram usage:        0 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    7
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_main
  6519 ;; This function uses a reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text24
  6523  0199C2                     __ptext24:
  6524                           	opt callstack 0
  6525  0199C2                     _clear_adc_scan:
  6526                           	opt callstack 23
  6527                           
  6528                           ;daq.c: 66:  R.done = 0;
  6529                           
  6530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6531                           ;incstack = 0
  6532  0199C2  0100               	movlb	0	; () banked
  6533  0199C4  6BF0               	clrf	(_R+39)& (0+255),b	;volatile
  6534                           
  6535                           ; BSR set to: 0
  6536                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6537  0199C6  0012               	return		;funcret
  6538  0199C8                     __end_of_clear_adc_scan:
  6539                           	opt callstack 0
  6540                           
  6541 ;; *************** function _check_help *****************
  6542 ;; Defined at:
  6543 ;;		line 40 in file "mconfig.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  flipper         1  [STACK] const _Bool 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  estatus         1    0        _Bool 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1  [STACK] _Bool 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6552 ;; Tracked objects:
  6553 ;;		On entry : 3F/2
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6561 ;;Total ram usage:        0 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:   19
  6564 ;; This function calls:
  6565 ;;		_StartTimer
  6566 ;;		_TimerDone
  6567 ;;		_display_help
  6568 ;;		_display_info
  6569 ;;		_get_vterm_ptr
  6570 ;;		_help_button
  6571 ;;		_mode_lamp_bright
  6572 ;;		_mode_lamp_dim
  6573 ;;		_set_display_info
  6574 ;;		_set_temp_display_help
  6575 ;;		_set_vterm
  6576 ;;		_sprintf
  6577 ;;		_update_lcd
  6578 ;;		_vterm_dump
  6579 ;; This function is called by:
  6580 ;;		_main
  6581 ;; This function uses a reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text25
  6585  01616E                     __ptext25:
  6586                           	opt callstack 0
  6587  01616E                     _check_help:
  6588                           	opt callstack 11
  6589                           
  6590                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6591                           
  6592                           ; BSR set to: 0
  6593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6594                           ;incstack = 0
  6595  01616E  EC27  F0C8         	call	_help_button	;wreg free
  6596  016172  5001               	movf	btemp^0,w,c
  6597  016174  B4D8               	btfsc	status,2,c
  6598  016176  D0D0               	goto	l11344
  6599  016178  ECD1  F0CC         	call	_display_info	;wreg free
  6600  01617C  0401               	decf	btemp^0,w,c
  6601  01617E  B4D8               	btfsc	status,2,c
  6602  016180  D0CB               	goto	l11344
  6603                           
  6604                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6605  016182  0EDC               	movlw	220
  6606  016184  6EE6               	movwf	postinc1,c
  6607  016186  0E05               	movlw	5
  6608  016188  6EE6               	movwf	postinc1,c
  6609  01618A  0E0B               	movlw	11
  6610  01618C  6EE6               	movwf	postinc1,c
  6611  01618E  EC88  F0C7         	call	_StartTimer	;wreg free
  6612                           
  6613                           ;mconfig.c: 48:   if (V.debug)
  6614  016192  0102               	movlb	2	; () banked
  6615  016194  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6616                           
  6617                           ; BSR set to: 2
  6618                           ;mconfig.c: 49:    vterm_dump();
  6619  016196  EC1A  F0B8         	call	_vterm_dump	;wreg free
  6620                           
  6621                           ;mconfig.c: 51:   set_vterm(1);
  6622  01619A  0E01               	movlw	1
  6623  01619C  6EE6               	movwf	postinc1,c
  6624  01619E  ECE0  F0CB         	call	_set_vterm	;wreg free
  6625                           
  6626                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6627  0161A2  ECD1  F0CC         	call	_display_info	;wreg free
  6628  0161A6  5001               	movf	btemp^0,w,c
  6629  0161A8  6EE6               	movwf	postinc1,c
  6630  0161AA  EC91  F0CC         	call	_set_temp_display_help	;wreg free
  6631                           
  6632                           ; BSR set to: 2
  6633                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6634  0161AE  0E01               	movlw	1
  6635  0161B0  6EE6               	movwf	postinc1,c
  6636  0161B2  ECEF  F0CB         	call	_set_display_info	;wreg free
  6637                           
  6638                           ;mconfig.c: 54:   if (flipper) {
  6639                           ;stkvar	_flipper @ sp[(0)+-1]
  6640  0161B6  0EFF               	movlw	-1
  6641  0161B8  50E3               	movf	plusw1,w,c
  6642  0161BA  B4D8               	btfsc	status,2,c
  6643  0161BC  D019               	goto	l11330
  6644                           
  6645                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6646  0161BE  0EC1               	movlw	low STR_27
  6647  0161C0  6EE6               	movwf	postinc1,c
  6648  0161C2  0EFF               	movlw	high STR_27
  6649  0161C4  6EE6               	movwf	postinc1,c
  6650  0161C6  0E80               	movlw	low STR_29
  6651  0161C8  6EE6               	movwf	postinc1,c
  6652  0161CA  0EFE               	movlw	high STR_29
  6653  0161CC  6EE6               	movwf	postinc1,c
  6654  0161CE  0E01               	movlw	1
  6655  0161D0  6EE6               	movwf	postinc1,c
  6656  0161D2  0E00               	movlw	0
  6657  0161D4  6EE6               	movwf	postinc1,c
  6658  0161D6  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6659  0161DA  0060  F007  FFE6   	movff	btemp,postinc1
  6660  0161E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6661  0161E6  0E06               	movlw	6
  6662  0161E8  6EE6               	movwf	postinc1,c
  6663  0161EA  EC75  F0BB         	call	_sprintf	;wreg free
  6664                           
  6665                           ;mconfig.c: 56:   } else {
  6666  0161EE  D018               	goto	l1669
  6667  0161F0                     l11330:
  6668                           
  6669                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6670  0161F0  0ED7               	movlw	low STR_28
  6671  0161F2  6EE6               	movwf	postinc1,c
  6672  0161F4  0EFF               	movlw	high STR_28
  6673  0161F6  6EE6               	movwf	postinc1,c
  6674  0161F8  0E80               	movlw	low STR_29
  6675  0161FA  6EE6               	movwf	postinc1,c
  6676  0161FC  0EFE               	movlw	high STR_29
  6677  0161FE  6EE6               	movwf	postinc1,c
  6678  016200  0E01               	movlw	1
  6679  016202  6EE6               	movwf	postinc1,c
  6680  016204  0E00               	movlw	0
  6681  016206  6EE6               	movwf	postinc1,c
  6682  016208  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6683  01620C  0060  F007  FFE6   	movff	btemp,postinc1
  6684  016212  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6685  016218  0E06               	movlw	6
  6686  01621A  6EE6               	movwf	postinc1,c
  6687  01621C  EC75  F0BB         	call	_sprintf	;wreg free
  6688  016220                     l1669:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6692  016220  0102               	movlb	2	; () banked
  6693  016222  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6694  016224  32E8               	rrcf	wreg,f,c
  6695  016226  32E8               	rrcf	wreg,f,c
  6696  016228  0B03               	andlw	3
  6697  01622A  0D24               	mullw	36
  6698  01622C  0E12               	movlw	18
  6699  01622E  26F3               	addwf	243,f,c
  6700  016230  0E00               	movlw	0
  6701  016232  22F4               	addwfc	244,f,c
  6702  016234  0E9D               	movlw	low _T
  6703  016236  6E0B               	movwf	(btemp+10)^0,c
  6704  016238  0EFD               	movlw	high _T
  6705  01623A  6E0C               	movwf	(btemp+11)^0,c
  6706  01623C  50F3               	movf	243,w,c
  6707  01623E  260B               	addwf	(btemp+10)^0,f,c
  6708  016240  50F4               	movf	244,w,c
  6709  016242  220C               	addwfc	(btemp+11)^0,f,c
  6710  016244  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6711  01624A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6712  016250  0ECD               	movlw	low STR_31
  6713  016252  6EE6               	movwf	postinc1,c
  6714  016254  0EFF               	movlw	high STR_31
  6715  016256  6EE6               	movwf	postinc1,c
  6716  016258  0E01               	movlw	1
  6717  01625A  6EE6               	movwf	postinc1,c
  6718  01625C  0E01               	movlw	1
  6719  01625E  6EE6               	movwf	postinc1,c
  6720  016260  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6721  016264  0060  F007  FFE6   	movff	btemp,postinc1
  6722  01626A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6723  016270  0E06               	movlw	6
  6724  016272  6EE6               	movwf	postinc1,c
  6725  016274  EC75  F0BB         	call	_sprintf	;wreg free
  6726                           
  6727                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6728  016278  0102               	movlb	2	; () banked
  6729  01627A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6730  01627C  32E8               	rrcf	wreg,f,c
  6731  01627E  32E8               	rrcf	wreg,f,c
  6732  016280  0B03               	andlw	3
  6733  016282  0D24               	mullw	36
  6734  016284  0E9D               	movlw	low _T
  6735  016286  6E0B               	movwf	(btemp+10)^0,c
  6736  016288  0EFD               	movlw	high _T
  6737  01628A  6E0C               	movwf	(btemp+11)^0,c
  6738  01628C  50F3               	movf	243,w,c
  6739  01628E  260B               	addwf	(btemp+10)^0,f,c
  6740  016290  50F4               	movf	244,w,c
  6741  016292  220C               	addwfc	(btemp+11)^0,f,c
  6742  016294  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6743  01629A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6744  0162A0  0ECD               	movlw	low STR_31
  6745  0162A2  6EE6               	movwf	postinc1,c
  6746  0162A4  0EFF               	movlw	high STR_31
  6747  0162A6  6EE6               	movwf	postinc1,c
  6748  0162A8  0E01               	movlw	1
  6749  0162AA  6EE6               	movwf	postinc1,c
  6750  0162AC  0E02               	movlw	2
  6751  0162AE  6EE6               	movwf	postinc1,c
  6752  0162B0  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6753  0162B4  0060  F007  FFE6   	movff	btemp,postinc1
  6754  0162BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6755  0162C0  0E06               	movlw	6
  6756  0162C2  6EE6               	movwf	postinc1,c
  6757  0162C4  EC75  F0BB         	call	_sprintf	;wreg free
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;mconfig.c: 61:   V.help_id++;
  6761  0162C8  EE20  F29B         	lfsr	2,_V+155	;volatile
  6762  0162CC  38DF               	swapf	223,w,c
  6763  0162CE  6E0C               	movwf	(btemp+11)^0,c
  6764  0162D0  320C               	rrcf	(btemp+11)^0,f,c
  6765  0162D2  300C               	rrcf	(btemp+11)^0,w,c
  6766  0162D4  0B03               	andlw	3
  6767  0162D6  6E0C               	movwf	(btemp+11)^0,c
  6768  0162D8  2A0C               	incf	(btemp+11)^0,f,c
  6769  0162DA  3A0C               	swapf	(btemp+11)^0,f,c
  6770  0162DC  360C               	rlcf	(btemp+11)^0,f,c
  6771  0162DE  360C               	rlcf	(btemp+11)^0,f,c
  6772  0162E0  50DF               	movf	223,w,c
  6773  0162E2  180C               	xorwf	(btemp+11)^0,w,c
  6774  0162E4  0B3F               	andlw	-193
  6775  0162E6  180C               	xorwf	(btemp+11)^0,w,c
  6776  0162E8  6EDF               	movwf	223,c
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6780  0162EA  0EB8               	movlw	184
  6781  0162EC  6EE6               	movwf	postinc1,c
  6782  0162EE  0E0B               	movlw	11
  6783  0162F0  6EE6               	movwf	postinc1,c
  6784  0162F2  0E09               	movlw	9
  6785  0162F4  6EE6               	movwf	postinc1,c
  6786  0162F6  EC88  F0C7         	call	_StartTimer	;wreg free
  6787                           
  6788                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6789  0162FA  0EB8               	movlw	184
  6790  0162FC  6EE6               	movwf	postinc1,c
  6791  0162FE  0E0B               	movlw	11
  6792  016300  6EE6               	movwf	postinc1,c
  6793  016302  0E07               	movlw	7
  6794  016304  6EE6               	movwf	postinc1,c
  6795  016306  EC88  F0C7         	call	_StartTimer	;wreg free
  6796                           
  6797                           ;mconfig.c: 64:   mode_lamp_bright();
  6798  01630A  ECA0  F0CC         	call	_mode_lamp_bright	;wreg free
  6799                           
  6800                           ;mconfig.c: 65:   update_lcd(1);
  6801  01630E  0E01               	movlw	1
  6802  016310  6EE6               	movwf	postinc1,c
  6803  016312  ECED  F0BA         	call	_update_lcd	;wreg free
  6804                           
  6805                           ;mconfig.c: 67:  } else {
  6806  016316  D032               	goto	l1670
  6807  016318                     l11344:
  6808                           
  6809                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6810  016318  0E09               	movlw	9
  6811  01631A  6EE6               	movwf	postinc1,c
  6812  01631C  ECCF  F0C9         	call	_TimerDone	;wreg free
  6813  016320  5001               	movf	btemp^0,w,c
  6814  016322  B4D8               	btfsc	status,2,c
  6815  016324  D02B               	goto	l1670
  6816                           
  6817                           ;mconfig.c: 69:    set_vterm(0);
  6818  016326  0E00               	movlw	0
  6819  016328  6EE6               	movwf	postinc1,c
  6820  01632A  ECE0  F0CB         	call	_set_vterm	;wreg free
  6821                           
  6822                           ;mconfig.c: 70:    V.help = 0;
  6823  01632E  0102               	movlb	2	; () banked
  6824  016330  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6825                           
  6826                           ; BSR set to: 2
  6827                           ;mconfig.c: 71:    set_display_info(display_help());
  6828  016332  ECD5  F0CC         	call	_display_help	;wreg free
  6829  016336  5001               	movf	btemp^0,w,c
  6830  016338  6EE6               	movwf	postinc1,c
  6831  01633A  ECEF  F0CB         	call	_set_display_info	;wreg free
  6832                           
  6833                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6834  01633E  0060  FA57  FFE6   	movff	_V+149,postinc1
  6835  016344  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6836  01634A  EC45  F0CC         	call	_mode_lamp_dim	;wreg free
  6837                           
  6838                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6839  01634E  0E0B               	movlw	11
  6840  016350  6EE6               	movwf	postinc1,c
  6841  016352  ECCF  F0C9         	call	_TimerDone	;wreg free
  6842  016356  5001               	movf	btemp^0,w,c
  6843  016358  B4D8               	btfsc	status,2,c
  6844  01635A  D010               	goto	l1670
  6845                           
  6846                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6847  01635C  0102               	movlb	2	; () banked
  6848  01635E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6849  016360  A4D8               	btfss	status,2,c
  6850  016362  D002               	goto	u10850
  6851  016364  0E01               	movlw	1
  6852  016366  D001               	goto	u10860
  6853  016368                     u10850:
  6854  016368  0E00               	movlw	0
  6855  01636A                     u10860:
  6856  01636A  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6857                           
  6858                           ; BSR set to: 2
  6859                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6860  01636C  0EDC               	movlw	220
  6861  01636E  6EE6               	movwf	postinc1,c
  6862  016370  0E05               	movlw	5
  6863  016372  6EE6               	movwf	postinc1,c
  6864  016374  0E0B               	movlw	11
  6865  016376  6EE6               	movwf	postinc1,c
  6866  016378  EC88  F0C7         	call	_StartTimer	;wreg free
  6867  01637C                     l1670:
  6868                           
  6869                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6870  01637C  52E5               	movf	postdec1,f,c
  6871  01637E  0012               	return		;funcret
  6872  016380                     __end_of_check_help:
  6873                           	opt callstack 0
  6874                           
  6875 ;; *************** function _vterm_dump *****************
  6876 ;; Defined at:
  6877 ;;		line 121 in file "mconfig.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1  [STACK] void 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6886 ;; Tracked objects:
  6887 ;;		On entry : 3F/2
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:   18
  6898 ;; This function calls:
  6899 ;;		_WaitMs
  6900 ;;		_eaDogM_WriteStringAtPos
  6901 ;;		_get_vterm_ptr
  6902 ;;		_sprintf
  6903 ;;		_wait_lcd_done
  6904 ;; This function is called by:
  6905 ;;		_check_help
  6906 ;; This function uses a reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text26
  6910  017034                     __ptext26:
  6911                           	opt callstack 0
  6912  017034                     _vterm_dump:
  6913                           	opt callstack 11
  6914                           
  6915                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6916                           
  6917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6918                           ;incstack = 0
  6919  017034  0E01               	movlw	1
  6920  017036  6EE6               	movwf	postinc1,c
  6921  017038  0E00               	movlw	0
  6922  01703A  6EE6               	movwf	postinc1,c
  6923  01703C  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6924  017040  0060  F007  FFE6   	movff	btemp,postinc1
  6925  017046  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6926  01704C  0E00               	movlw	0
  6927  01704E  6EE6               	movwf	postinc1,c
  6928  017050  0E00               	movlw	0
  6929  017052  6EE6               	movwf	postinc1,c
  6930  017054  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6931  017058  0060  F007  FFE6   	movff	btemp,postinc1
  6932  01705E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6933  017064  0EA3               	movlw	low STR_33
  6934  017066  6EE6               	movwf	postinc1,c
  6935  017068  0EFF               	movlw	high STR_33
  6936  01706A  6EE6               	movwf	postinc1,c
  6937  01706C  0E01               	movlw	low (_V+1)
  6938  01706E  6EE6               	movwf	postinc1,c
  6939  017070  0E02               	movlw	high (_V+1)
  6940  017072  6EE6               	movwf	postinc1,c
  6941  017074  0E08               	movlw	8
  6942  017076  6EE6               	movwf	postinc1,c
  6943  017078  EC75  F0BB         	call	_sprintf	;wreg free
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;mconfig.c: 124:  wait_lcd_done();
  6947  01707C  EC1C  F0CC         	call	_wait_lcd_done	;wreg free
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6951  017080  0E01               	movlw	low (_V+1)
  6952  017082  6EE6               	movwf	postinc1,c
  6953  017084  0E02               	movlw	high (_V+1)
  6954  017086  6EE6               	movwf	postinc1,c
  6955  017088  0E00               	movlw	0
  6956  01708A  6EE6               	movwf	postinc1,c
  6957  01708C  0E00               	movlw	0
  6958  01708E  6EE6               	movwf	postinc1,c
  6959  017090  EC79  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  6960                           
  6961                           ; BSR set to: 59
  6962                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6963  017094  0E01               	movlw	1
  6964  017096  6EE6               	movwf	postinc1,c
  6965  017098  0E01               	movlw	1
  6966  01709A  6EE6               	movwf	postinc1,c
  6967  01709C  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6968  0170A0  0060  F007  FFE6   	movff	btemp,postinc1
  6969  0170A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6970  0170AC  0E00               	movlw	0
  6971  0170AE  6EE6               	movwf	postinc1,c
  6972  0170B0  0E01               	movlw	1
  6973  0170B2  6EE6               	movwf	postinc1,c
  6974  0170B4  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  6975  0170B8  0060  F007  FFE6   	movff	btemp,postinc1
  6976  0170BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6977  0170C4  0EA3               	movlw	low STR_33
  6978  0170C6  6EE6               	movwf	postinc1,c
  6979  0170C8  0EFF               	movlw	high STR_33
  6980  0170CA  6EE6               	movwf	postinc1,c
  6981  0170CC  0E01               	movlw	low (_V+1)
  6982  0170CE  6EE6               	movwf	postinc1,c
  6983  0170D0  0E02               	movlw	high (_V+1)
  6984  0170D2  6EE6               	movwf	postinc1,c
  6985  0170D4  0E08               	movlw	8
  6986  0170D6  6EE6               	movwf	postinc1,c
  6987  0170D8  EC75  F0BB         	call	_sprintf	;wreg free
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;mconfig.c: 127:  wait_lcd_done();
  6991  0170DC  EC1C  F0CC         	call	_wait_lcd_done	;wreg free
  6992                           
  6993                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6994  0170E0  0E01               	movlw	low (_V+1)
  6995  0170E2  6EE6               	movwf	postinc1,c
  6996  0170E4  0E02               	movlw	high (_V+1)
  6997  0170E6  6EE6               	movwf	postinc1,c
  6998  0170E8  0E00               	movlw	0
  6999  0170EA  6EE6               	movwf	postinc1,c
  7000  0170EC  0E01               	movlw	1
  7001  0170EE  6EE6               	movwf	postinc1,c
  7002  0170F0  EC79  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7003                           
  7004                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7005  0170F4  0E01               	movlw	1
  7006  0170F6  6EE6               	movwf	postinc1,c
  7007  0170F8  0E02               	movlw	2
  7008  0170FA  6EE6               	movwf	postinc1,c
  7009  0170FC  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  7010  017100  0060  F007  FFE6   	movff	btemp,postinc1
  7011  017106  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7012  01710C  0E00               	movlw	0
  7013  01710E  6EE6               	movwf	postinc1,c
  7014  017110  0E02               	movlw	2
  7015  017112  6EE6               	movwf	postinc1,c
  7016  017114  EC10  F0C9         	call	_get_vterm_ptr	;wreg free
  7017  017118  0060  F007  FFE6   	movff	btemp,postinc1
  7018  01711E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7019  017124  0EA3               	movlw	low STR_33
  7020  017126  6EE6               	movwf	postinc1,c
  7021  017128  0EFF               	movlw	high STR_33
  7022  01712A  6EE6               	movwf	postinc1,c
  7023  01712C  0E01               	movlw	low (_V+1)
  7024  01712E  6EE6               	movwf	postinc1,c
  7025  017130  0E02               	movlw	high (_V+1)
  7026  017132  6EE6               	movwf	postinc1,c
  7027  017134  0E08               	movlw	8
  7028  017136  6EE6               	movwf	postinc1,c
  7029  017138  EC75  F0BB         	call	_sprintf	;wreg free
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;mconfig.c: 130:  wait_lcd_done();
  7033  01713C  EC1C  F0CC         	call	_wait_lcd_done	;wreg free
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7037  017140  0E01               	movlw	low (_V+1)
  7038  017142  6EE6               	movwf	postinc1,c
  7039  017144  0E02               	movlw	high (_V+1)
  7040  017146  6EE6               	movwf	postinc1,c
  7041  017148  0E00               	movlw	0
  7042  01714A  6EE6               	movwf	postinc1,c
  7043  01714C  0E02               	movlw	2
  7044  01714E  6EE6               	movwf	postinc1,c
  7045  017150  EC79  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7046                           
  7047                           ; BSR set to: 59
  7048                           ;mconfig.c: 132:  WaitMs(3000);
  7049  017154  0EB8               	movlw	184
  7050  017156  6EE6               	movwf	postinc1,c
  7051  017158  0E0B               	movlw	11
  7052  01715A  6EE6               	movwf	postinc1,c
  7053  01715C  EC5E  F0C8         	call	_WaitMs	;wreg free
  7054                           
  7055                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7056  017160  0012               	return		;funcret
  7057  017162                     __end_of_vterm_dump:
  7058                           	opt callstack 0
  7059                           
  7060 ;; *************** function _sprintf *****************
  7061 ;; Defined at:
  7062 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  s               2  [STACK] PTR unsigned char 
  7065 ;;		 -> D.lcd(288), D(290), V(188), 
  7066 ;;  fmt             2  [STACK] PTR const unsigned char 
  7067 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  7068 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  7069 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  7070 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  7071 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  7072 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  7073 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  7074 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  7075 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  7076 ;;		 -> STR_1(17), 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  f               6  [STACK] struct _IO_FILE
  7079 ;;  ap              2  [STACK] PTR void [1]
  7080 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7081 ;;  ret             2    0        int 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  2  [STACK] int 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/1
  7088 ;;		On exit  : 3F/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;Total ram usage:        0 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:   15
  7098 ;; This function calls:
  7099 ;;		_vfprintf
  7100 ;; This function is called by:
  7101 ;;		_main
  7102 ;;		_check_help
  7103 ;;		_vterm_dump
  7104 ;; This function uses a reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text27
  7108  0176EA                     __ptext27:
  7109                           	opt callstack 0
  7110  0176EA                     _sprintf:
  7111                           	opt callstack 0
  7112                           
  7113                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7114  0176EA  0E08               	movlw	8
  7115  0176EC  26E1               	addwf	fsr1l,f,c
  7116  0176EE  0E00               	movlw	0
  7117  0176F0  22E2               	addwfc	fsr1h,f,c
  7118                           
  7119                           ;incstack = 0
  7120  0176F2  0EFE               	movlw	254
  7121  0176F4  6E0B               	movwf	(btemp+10)^0,c
  7122  0176F6  0EFF               	movlw	255
  7123  0176F8  6E0C               	movwf	(btemp+11)^0,c
  7124                           
  7125                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  7126  0176FA  0EF5               	movlw	245
  7127  0176FC  24E1               	addwf	fsr1l,w,c
  7128  0176FE  6E09               	movwf	(btemp+8)^0,c
  7129  017700  0EFF               	movlw	255
  7130  017702  20E2               	addwfc	fsr1h,w,c
  7131  017704  6E0A               	movwf	(btemp+9)^0,c
  7132  017706  500B               	movf	(btemp+10)^0,w,c
  7133  017708  2609               	addwf	(btemp+8)^0,f,c
  7134  01770A  500C               	movf	(btemp+11)^0,w,c
  7135  01770C  220A               	addwfc	(btemp+9)^0,f,c
  7136                           
  7137                           ;stkvar	_ap @ sp[(-8)+6]
  7138  01770E  0EFF               	movlw	-1
  7139  017710  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7140  017716  0EFE               	movlw	-2
  7141  017718  0060  F027  FFE3   	movff	btemp+8,plusw1
  7142                           
  7143                           ;stkvar	_s @ sp[(-8)+-3]
  7144  01771E  0EF5               	movlw	-11
  7145  017720  006F FF8C  F00B    	movff	plusw1,btemp+10
  7146  017726  0EF6               	movlw	-10
  7147  017728  006F FF8C  F00C    	movff	plusw1,btemp+11
  7148                           
  7149                           ;stkvar	_f @ sp[(-8)+0]
  7150  01772E  0EF9               	movlw	-7
  7151  017730  0060  F033  FFE3   	movff	btemp+11,plusw1
  7152  017736  0EF8               	movlw	-8
  7153  017738  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7154                           
  7155                           ;stkvar	_f @ sp[(-8)+0]
  7156  01773E  0EFA               	movlw	250
  7157  017740  24E1               	addwf	fsr1l,w,c
  7158  017742  6ED9               	movwf	fsr2l,c
  7159  017744  0EFF               	movlw	255
  7160  017746  20E2               	addwfc	fsr1h,w,c
  7161  017748  6EDA               	movwf	fsr2h,c
  7162  01774A  0E00               	movlw	0
  7163  01774C  6EDE               	movwf	postinc2,c
  7164  01774E  0E00               	movlw	0
  7165  017750  6EDD               	movwf	postdec2,c
  7166                           
  7167                           ;stkvar	_f @ sp[(-8)+0]
  7168  017752  0EFC               	movlw	252
  7169  017754  24E1               	addwf	fsr1l,w,c
  7170  017756  6ED9               	movwf	fsr2l,c
  7171  017758  0EFF               	movlw	255
  7172  01775A  20E2               	addwfc	fsr1h,w,c
  7173  01775C  6EDA               	movwf	fsr2h,c
  7174  01775E  0E00               	movlw	0
  7175  017760  6EDE               	movwf	postinc2,c
  7176  017762  0E00               	movlw	0
  7177  017764  6EDD               	movwf	postdec2,c
  7178                           
  7179                           ;stkvar	_ap @ sp[(-8)+6]
  7180  017766  0EFE               	movlw	254
  7181  017768  24E1               	addwf	fsr1l,w,c
  7182  01776A  6E01               	movwf	btemp^0,c
  7183  01776C  0EFF               	movlw	255
  7184  01776E  20E2               	addwfc	fsr1h,w,c
  7185  017770  6E02               	movwf	(btemp+1)^0,c
  7186  017772  0060  F007  FFE6   	movff	btemp,postinc1
  7187  017778  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7188                           
  7189                           ;stkvar	_fmt @ sp[(-10)+-5]
  7190  01777E  0EF1               	movlw	-15
  7191  017780  006F FF8F FFE6     	movff	plusw1,postinc1
  7192  017786  006F FF8F FFE6     	movff	plusw1,postinc1
  7193                           
  7194                           ;stkvar	_f @ sp[(-12)+0]
  7195  01778C  0EF4               	movlw	244
  7196  01778E  24E1               	addwf	fsr1l,w,c
  7197  017790  6E01               	movwf	btemp^0,c
  7198  017792  0EFF               	movlw	255
  7199  017794  20E2               	addwfc	fsr1h,w,c
  7200  017796  6E02               	movwf	(btemp+1)^0,c
  7201  017798  0060  F007  FFE6   	movff	btemp,postinc1
  7202  01779E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7203  0177A4  ECE0  F0BF         	call	_vfprintf	;wreg free
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;stkvar	_f @ sp[(-8)+0]
  7207  0177A8  0EFA               	movlw	250
  7208  0177AA  24E1               	addwf	fsr1l,w,c
  7209  0177AC  6ED9               	movwf	fsr2l,c
  7210  0177AE  0EFF               	movlw	255
  7211  0177B0  20E2               	addwfc	fsr1h,w,c
  7212  0177B2  6EDA               	movwf	fsr2h,c
  7213  0177B4  006F FF78  F00B    	movff	postinc2,btemp+10
  7214  0177BA  006F FF74  F00C    	movff	postdec2,btemp+11
  7215                           
  7216                           ;stkvar	_s @ sp[(-8)+-3]
  7217  0177C0  0EF5               	movlw	-11
  7218  0177C2  006F FF8C  F009    	movff	plusw1,btemp+8
  7219  0177C8  0EF6               	movlw	-10
  7220  0177CA  006F FF8C  F00A    	movff	plusw1,btemp+9
  7221  0177D0  500B               	movf	(btemp+10)^0,w,c
  7222  0177D2  2409               	addwf	(btemp+8)^0,w,c
  7223  0177D4  6ED9               	movwf	fsr2l,c
  7224  0177D6  500C               	movf	(btemp+11)^0,w,c
  7225  0177D8  200A               	addwfc	(btemp+9)^0,w,c
  7226  0177DA  6EDA               	movwf	fsr2h,c
  7227  0177DC  0E00               	movlw	0
  7228  0177DE  6EDF               	movwf	indf2,c
  7229                           
  7230                           ; BSR set to: 0
  7231                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  7232  0177E0  0EF8               	movlw	248
  7233  0177E2  26E1               	addwf	fsr1l,f,c
  7234  0177E4  0EFF               	movlw	255
  7235  0177E6  22E2               	addwfc	fsr1h,f,c
  7236  0177E8  52E5               	movf	postdec1,f,c
  7237  0177EA  50E7               	movf	indf1,w,c
  7238  0177EC  5EE1               	subwf	fsr1l,f,c
  7239  0177EE  0E00               	movlw	0
  7240  0177F0  5AE2               	subwfb	fsr1h,f,c
  7241  0177F2  0012               	return		;funcret
  7242  0177F4                     __end_of_sprintf:
  7243                           	opt callstack 0
  7244                           
  7245 ;; *************** function _get_vterm_ptr *****************
  7246 ;; Defined at:
  7247 ;;		line 116 in file "mconfig.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  line            1  [STACK] const unsigned char 
  7250 ;;  vterm           1  [STACK] const unsigned char 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  2  [STACK] PTR unsigned char 
  7255 ;; Registers used:
  7256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/1
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:    7
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_main
  7273 ;;		_check_help
  7274 ;;		_vterm_dump
  7275 ;; This function uses a reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text28
  7279  019220                     __ptext28:
  7280                           	opt callstack 0
  7281  019220                     _get_vterm_ptr:
  7282                           	opt callstack 23
  7283                           
  7284                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  7285                           ;stkvar	_vterm @ sp[(0)+-2]
  7286                           
  7287                           ; BSR set to: 0
  7288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7289                           ;incstack = 0
  7290  019220  0EFE               	movlw	-2
  7291  019222  50E3               	movf	plusw1,w,c
  7292  019224  0B03               	andlw	3
  7293  019226  0D48               	mullw	72
  7294  019228  0EFF               	movlw	low _D
  7295  01922A  6E01               	movwf	btemp^0,c
  7296  01922C  0E06               	movlw	high _D
  7297  01922E  6E02               	movwf	(btemp+1)^0,c
  7298  019230  50F3               	movf	243,w,c
  7299  019232  2601               	addwf	btemp^0,f,c
  7300  019234  50F4               	movf	244,w,c
  7301  019236  2202               	addwfc	(btemp+1)^0,f,c
  7302                           
  7303                           ;stkvar	_line @ sp[(0)+-1]
  7304  019238  0EFF               	movlw	-1
  7305  01923A  50E3               	movf	plusw1,w,c
  7306  01923C  0B03               	andlw	3
  7307  01923E  0D18               	mullw	24
  7308  019240  50F3               	movf	243,w,c
  7309  019242  2601               	addwf	btemp^0,f,c
  7310  019244  50F4               	movf	244,w,c
  7311  019246  2202               	addwfc	(btemp+1)^0,f,c
  7312                           
  7313                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7314  019248  52E5               	movf	postdec1,f,c
  7315  01924A  52E5               	movf	postdec1,f,c
  7316  01924C  0012               	return		;funcret
  7317  01924E                     __end_of_get_vterm_ptr:
  7318                           	opt callstack 0
  7319                           
  7320 ;; *************** function _WaitMs *****************
  7321 ;; Defined at:
  7322 ;;		line 32 in file "timers.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  numMilliseco    2  [STACK] const unsigned short 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;		None
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1  [STACK] void 
  7329 ;; Registers used:
  7330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/2
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7340 ;;Total ram usage:        0 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    8
  7343 ;; This function calls:
  7344 ;;		_StartTimer
  7345 ;;		_TimerDone
  7346 ;; This function is called by:
  7347 ;;		_main
  7348 ;;		_vterm_dump
  7349 ;; This function uses a reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text29
  7353  0190BC                     __ptext29:
  7354                           	opt callstack 0
  7355  0190BC                     _WaitMs:
  7356                           	opt callstack 20
  7357                           
  7358                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  7359                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7360                           
  7361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7362                           ;incstack = 0
  7363  0190BC  0EFE               	movlw	-2
  7364  0190BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7365  0190C4  006F FF8F FFE6     	movff	plusw1,postinc1
  7366  0190CA  0E00               	movlw	0
  7367  0190CC  6EE6               	movwf	postinc1,c
  7368  0190CE  EC88  F0C7         	call	_StartTimer	;wreg free
  7369                           
  7370                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7371  0190D2  D005               	goto	l8154
  7372  0190D4                     l1599:
  7373                           
  7374                           ;timers.c: 36:   __nop();
  7375  0190D4  F000               	nop	
  7376                           
  7377                           ;timers.c: 37:   __nop();
  7378  0190D6  F000               	nop	
  7379                           
  7380                           ;timers.c: 38:   __nop();
  7381  0190D8  F000               	nop	
  7382                           
  7383                           ;timers.c: 39:   __nop();
  7384  0190DA  F000               	nop	
  7385  0190DC  0004               	clrwdt		;# 
  7386  0190DE                     l8154:
  7387                           
  7388                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7389  0190DE  0E00               	movlw	0
  7390  0190E0  6EE6               	movwf	postinc1,c
  7391  0190E2  ECCF  F0C9         	call	_TimerDone	;wreg free
  7392  0190E6  5001               	movf	btemp^0,w,c
  7393  0190E8  B4D8               	btfsc	status,2,c
  7394  0190EA  D7F4               	goto	l1599
  7395                           
  7396                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7397  0190EC  52E5               	movf	postdec1,f,c
  7398  0190EE  52E5               	movf	postdec1,f,c
  7399  0190F0  0012               	return		;funcret
  7400  0190F2                     __end_of_WaitMs:
  7401                           	opt callstack 0
  7402                           
  7403 ;; *************** function _update_lcd *****************
  7404 ;; Defined at:
  7405 ;;		line 85 in file "mconfig.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  vterm           1  [STACK] unsigned char 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1  [STACK] unsigned char 
  7412 ;; Registers used:
  7413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:   18
  7426 ;; This function calls:
  7427 ;;		_eaDogM_WriteStringAtPos
  7428 ;;		_wait_lcd_done
  7429 ;; This function is called by:
  7430 ;;		_main
  7431 ;;		_check_help
  7432 ;; This function uses a reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text30
  7436  0175DA                     __ptext30:
  7437                           	opt callstack 0
  7438  0175DA                     _update_lcd:
  7439                           	opt callstack 12
  7440                           
  7441                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7442                           ;stkvar	_vterm @ sp[(0)+-1]
  7443                           
  7444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7445                           ;incstack = 0
  7446  0175DA  0EFF               	movlw	-1
  7447  0175DC  006F FF8C  F001    	movff	plusw1,btemp
  7448  0175E2  0E03               	movlw	3
  7449  0175E4  1601               	andwf	btemp^0,f,c
  7450  0175E6  0EFF               	movlw	-1
  7451  0175E8  0060  F007  FFE3   	movff	btemp,plusw1
  7452                           
  7453                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7454  0175EE  EE22  F01F         	lfsr	2,_D+288
  7455  0175F2  A0DF               	btfss	indf2,0,c
  7456  0175F4  D004               	goto	l11212
  7457                           
  7458                           ;stkvar	_vterm @ sp[(0)+-1]
  7459  0175F6  0EFF               	movlw	-1
  7460  0175F8  50E3               	movf	plusw1,w,c
  7461  0175FA  B4D8               	btfsc	status,2,c
  7462  0175FC  D074               	goto	l1677
  7463  0175FE                     l11212:
  7464                           
  7465                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7466                           ;stkvar	_vterm @ sp[(0)+-1]
  7467  0175FE  0EFF               	movlw	-1
  7468  017600  50E3               	movf	plusw1,w,c
  7469  017602  0D48               	mullw	72
  7470  017604  0E0F               	movlw	low (_D+16)
  7471  017606  24F3               	addwf	243,w,c
  7472  017608  6ED9               	movwf	fsr2l,c
  7473  01760A  0E07               	movlw	high (_D+16)
  7474  01760C  20F4               	addwfc	prodh,w,c
  7475  01760E  6EDA               	movwf	fsr2h,c
  7476  017610  0E00               	movlw	0
  7477  017612  6EDF               	movwf	indf2,c
  7478                           
  7479                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7480                           ;stkvar	_vterm @ sp[(0)+-1]
  7481  017614  0EFF               	movlw	-1
  7482  017616  50E3               	movf	plusw1,w,c
  7483  017618  0D48               	mullw	72
  7484  01761A  0E27               	movlw	low (_D+40)
  7485  01761C  24F3               	addwf	243,w,c
  7486  01761E  6ED9               	movwf	fsr2l,c
  7487  017620  0E07               	movlw	high (_D+40)
  7488  017622  20F4               	addwfc	prodh,w,c
  7489  017624  6EDA               	movwf	fsr2h,c
  7490  017626  0E00               	movlw	0
  7491  017628  6EDF               	movwf	indf2,c
  7492                           
  7493                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7494                           ;stkvar	_vterm @ sp[(0)+-1]
  7495  01762A  0EFF               	movlw	-1
  7496  01762C  50E3               	movf	plusw1,w,c
  7497  01762E  0D48               	mullw	72
  7498  017630  0E3F               	movlw	low (_D+64)
  7499  017632  24F3               	addwf	243,w,c
  7500  017634  6ED9               	movwf	fsr2l,c
  7501  017636  0E07               	movlw	high (_D+64)
  7502  017638  20F4               	addwfc	prodh,w,c
  7503  01763A  6EDA               	movwf	fsr2h,c
  7504  01763C  0E00               	movlw	0
  7505  01763E  6EDF               	movwf	indf2,c
  7506                           
  7507                           ;mconfig.c: 95:  wait_lcd_done();
  7508  017640  EC1C  F0CC         	call	_wait_lcd_done	;wreg free
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7512                           ;stkvar	_vterm @ sp[(0)+-1]
  7513  017644  0EFF               	movlw	-1
  7514  017646  50E3               	movf	plusw1,w,c
  7515  017648  0D48               	mullw	72
  7516  01764A  0EFF               	movlw	low _D
  7517  01764C  6E0B               	movwf	(btemp+10)^0,c
  7518  01764E  0E06               	movlw	high _D
  7519  017650  6E0C               	movwf	(btemp+11)^0,c
  7520  017652  50F3               	movf	243,w,c
  7521  017654  260B               	addwf	(btemp+10)^0,f,c
  7522  017656  50F4               	movf	244,w,c
  7523  017658  220C               	addwfc	(btemp+11)^0,f,c
  7524  01765A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7525  017660  0060  F033  FFE6   	movff	btemp+11,postinc1
  7526  017666  0E00               	movlw	0
  7527  017668  6EE6               	movwf	postinc1,c
  7528  01766A  0E00               	movlw	0
  7529  01766C  6EE6               	movwf	postinc1,c
  7530  01766E  EC79  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7531                           
  7532                           ; BSR set to: 59
  7533                           ;mconfig.c: 97:  wait_lcd_done();
  7534  017672  EC1C  F0CC         	call	_wait_lcd_done	;wreg free
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7538                           ;stkvar	_vterm @ sp[(0)+-1]
  7539  017676  0EFF               	movlw	-1
  7540  017678  50E3               	movf	plusw1,w,c
  7541  01767A  0D48               	mullw	72
  7542  01767C  0EFF               	movlw	low _D
  7543  01767E  6E0B               	movwf	(btemp+10)^0,c
  7544  017680  0E06               	movlw	high _D
  7545  017682  6E0C               	movwf	(btemp+11)^0,c
  7546  017684  0E18               	movlw	24
  7547  017686  260B               	addwf	(btemp+10)^0,f,c
  7548  017688  0E00               	movlw	0
  7549  01768A  220C               	addwfc	(btemp+11)^0,f,c
  7550  01768C  50F3               	movf	243,w,c
  7551  01768E  260B               	addwf	(btemp+10)^0,f,c
  7552  017690  50F4               	movf	244,w,c
  7553  017692  220C               	addwfc	(btemp+11)^0,f,c
  7554  017694  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7555  01769A  0060  F033  FFE6   	movff	btemp+11,postinc1
  7556  0176A0  0E00               	movlw	0
  7557  0176A2  6EE6               	movwf	postinc1,c
  7558  0176A4  0E01               	movlw	1
  7559  0176A6  6EE6               	movwf	postinc1,c
  7560  0176A8  EC79  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7561                           
  7562                           ; BSR set to: 59
  7563                           ;mconfig.c: 99:  wait_lcd_done();
  7564  0176AC  EC1C  F0CC         	call	_wait_lcd_done	;wreg free
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7568                           ;stkvar	_vterm @ sp[(0)+-1]
  7569  0176B0  0EFF               	movlw	-1
  7570  0176B2  50E3               	movf	plusw1,w,c
  7571  0176B4  0D48               	mullw	72
  7572  0176B6  0EFF               	movlw	low _D
  7573  0176B8  6E0B               	movwf	(btemp+10)^0,c
  7574  0176BA  0E06               	movlw	high _D
  7575  0176BC  6E0C               	movwf	(btemp+11)^0,c
  7576  0176BE  0E30               	movlw	48
  7577  0176C0  260B               	addwf	(btemp+10)^0,f,c
  7578  0176C2  0E00               	movlw	0
  7579  0176C4  220C               	addwfc	(btemp+11)^0,f,c
  7580  0176C6  50F3               	movf	243,w,c
  7581  0176C8  260B               	addwf	(btemp+10)^0,f,c
  7582  0176CA  50F4               	movf	244,w,c
  7583  0176CC  220C               	addwfc	(btemp+11)^0,f,c
  7584  0176CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7585  0176D4  0060  F033  FFE6   	movff	btemp+11,postinc1
  7586  0176DA  0E00               	movlw	0
  7587  0176DC  6EE6               	movwf	postinc1,c
  7588  0176DE  0E02               	movlw	2
  7589  0176E0  6EE6               	movwf	postinc1,c
  7590  0176E2  EC79  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7591  0176E6                     l1677:
  7592                           
  7593                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7594  0176E6  52E5               	movf	postdec1,f,c
  7595  0176E8  0012               	return		;funcret
  7596  0176EA                     __end_of_update_lcd:
  7597                           	opt callstack 0
  7598                           
  7599 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7600 ;; Defined at:
  7601 ;;		line 265 in file "eadog.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  r               1  [STACK] const unsigned char 
  7604 ;;  c               1  [STACK] const unsigned char 
  7605 ;;  strPtr          2  [STACK] PTR unsigned char 
  7606 ;;		 -> D.lcd(288), D(290), V(188), 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1  [STACK] void 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7613 ;; Tracked objects:
  7614 ;;		On entry : 3F/0
  7615 ;;		On exit  : 3F/3B
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7622 ;;Total ram usage:        0 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:   17
  7625 ;; This function calls:
  7626 ;;		_eaDogM_WriteString
  7627 ;;		_send_lcd_cmd_dma
  7628 ;; This function is called by:
  7629 ;;		_update_lcd
  7630 ;;		_vterm_dump
  7631 ;; This function uses a reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text31
  7635  0190F2                     __ptext31:
  7636                           	opt callstack 0
  7637  0190F2                     _eaDogM_WriteStringAtPos:
  7638                           	opt callstack 12
  7639                           
  7640                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7641                           ;stkvar	_c @ sp[(0)+-2]
  7642                           
  7643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7644                           ;incstack = 0
  7645  0190F2  0EFE               	movlw	-2
  7646  0190F4  006F FF8C  F00C    	movff	plusw1,btemp+11
  7647                           
  7648                           ;stkvar	_r @ sp[(0)+-1]
  7649  0190FA  0EFF               	movlw	-1
  7650  0190FC  50E3               	movf	plusw1,w,c
  7651  0190FE  0D10               	mullw	16
  7652  019100  50F3               	movf	243,w,c
  7653  019102  240C               	addwf	(btemp+11)^0,w,c
  7654  019104  0F80               	addlw	128
  7655  019106  6EE6               	movwf	postinc1,c
  7656  019108  ECF7  F0C5         	call	_send_lcd_cmd_dma	;wreg free
  7657                           
  7658                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7659                           ;stkvar	_strPtr @ sp[(0)+-4]
  7660  01910C  0EFC               	movlw	-4
  7661  01910E  006F FF8F FFE6     	movff	plusw1,postinc1
  7662  019114  006F FF8F FFE6     	movff	plusw1,postinc1
  7663  01911A  EC8B  F0C0         	call	_eaDogM_WriteString	;wreg free
  7664                           
  7665                           ; BSR set to: 59
  7666                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7667  01911E  52E5               	movf	postdec1,f,c
  7668  019120  52E5               	movf	postdec1,f,c
  7669  019122  52E5               	movf	postdec1,f,c
  7670  019124  52E5               	movf	postdec1,f,c
  7671  019126  0012               	return		;funcret
  7672  019128                     __end_of_eaDogM_WriteStringAtPos:
  7673                           	opt callstack 0
  7674                           
  7675 ;; *************** function _send_lcd_cmd_dma *****************
  7676 ;; Defined at:
  7677 ;;		line 218 in file "eadog.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  strPtr          1  [STACK] unsigned char 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1  [STACK] void 
  7684 ;; Registers used:
  7685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/3D
  7688 ;;		On exit  : 3F/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:   16
  7698 ;; This function calls:
  7699 ;;		_printf
  7700 ;;		_ringBufS_flush
  7701 ;;		_start_lcd
  7702 ;;		_wait_lcd_done
  7703 ;;		_wait_lcd_set
  7704 ;; This function is called by:
  7705 ;;		_eaDogM_WriteCommand
  7706 ;;		_eaDogM_WriteStringAtPos
  7707 ;; This function uses a reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text32
  7711  018BEE                     __ptext32:
  7712                           	opt callstack 0
  7713  018BEE                     _send_lcd_cmd_dma:
  7714                           	opt callstack 12
  7715                           
  7716                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7717                           
  7718                           ; BSR set to: 59
  7719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7720                           ;incstack = 0
  7721  018BEE  ECE4  F0CC         	call	_wait_lcd_set	;wreg free
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7725  018BF2  0E00               	movlw	0
  7726  018BF4  6EE6               	movwf	postinc1,c
  7727  018BF6  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7728  018BFC  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7729  018C02  ECC6  F0C1         	call	_ringBufS_flush	;wreg free
  7730  018C06  92BC               	bcf	188,1,c	;volatile
  7731  018C08  94BC               	bcf	188,2,c	;volatile
  7732                           
  7733                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7734  018C0A  013B               	movlb	59	; () banked
  7735  018C0C  9FFC               	bcf	252,7,b	;volatile
  7736                           
  7737                           ; BSR set to: 59
  7738                           ;eadog.c: 227:  DMA1SSZ = 1;
  7739  018C0E  0E00               	movlw	0
  7740  018C10  6FF8               	movwf	248,b	;volatile
  7741  018C12  0E01               	movlw	1
  7742  018C14  6FF7               	movwf	247,b	;volatile
  7743                           
  7744                           ; BSR set to: 59
  7745                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7746  018C16  8FFC               	bsf	252,7,b	;volatile
  7747                           
  7748                           ; BSR set to: 59
  7749                           ;eadog.c: 229:  printf("%c", strPtr);
  7750                           ;stkvar	_strPtr @ sp[(0)+-1]
  7751  018C18  0EFF               	movlw	-1
  7752  018C1A  50E3               	movf	plusw1,w,c
  7753  018C1C  6EE6               	movwf	postinc1,c
  7754  018C1E  0E00               	movlw	0
  7755  018C20  6EE6               	movwf	postinc1,c
  7756  018C22  0EF9               	movlw	low STR_25
  7757  018C24  6EE6               	movwf	postinc1,c
  7758  018C26  0EFF               	movlw	high STR_25
  7759  018C28  6EE6               	movwf	postinc1,c
  7760  018C2A  0E04               	movlw	4
  7761  018C2C  6EE6               	movwf	postinc1,c
  7762  018C2E  EC10  F0C5         	call	_printf	;wreg free
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;eadog.c: 230:  start_lcd();
  7766  018C32  ECE7  F0CC         	call	_start_lcd	;wreg free
  7767                           
  7768                           ; BSR set to: 59
  7769                           ;eadog.c: 231:  wait_lcd_done();
  7770  018C36  EC1C  F0CC         	call	_wait_lcd_done	;wreg free
  7771                           
  7772                           ; BSR set to: 0
  7773  018C3A  82BC               	bsf	188,1,c	;volatile
  7774                           
  7775                           ; BSR set to: 0
  7776                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7777  018C3C  52E5               	movf	postdec1,f,c
  7778  018C3E  0012               	return		;funcret
  7779  018C40                     __end_of_send_lcd_cmd_dma:
  7780                           	opt callstack 0
  7781                           
  7782 ;; *************** function _wait_lcd_done *****************
  7783 ;; Defined at:
  7784 ;;		line 154 in file "eadog.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;		None
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1  [STACK] void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 3F/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7802 ;;Total ram usage:        0 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    8
  7805 ;; This function calls:
  7806 ;;		_wdtdelay
  7807 ;; This function is called by:
  7808 ;;		_send_lcd_cmd_dma
  7809 ;;		_update_lcd
  7810 ;;		_vterm_dump
  7811 ;; This function uses a reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text33
  7815  019838                     __ptext33:
  7816                           	opt callstack 0
  7817  019838                     _wait_lcd_done:
  7818                           	opt callstack 21
  7819                           
  7820                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7821                           
  7822                           ; BSR set to: 0
  7823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7824                           ;incstack = 0
  7825  019838  0100               	movlb	0	; () banked
  7826  01983A  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7827  01983C  D7FD               	goto	_wait_lcd_done
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;eadog.c: 157:  wdtdelay(50);
  7831  01983E  0E32               	movlw	50
  7832  019840  6EE6               	movwf	postinc1,c
  7833  019842  0E00               	movlw	0
  7834  019844  6EE6               	movwf	postinc1,c
  7835  019846  0E00               	movlw	0
  7836  019848  6EE6               	movwf	postinc1,c
  7837  01984A  0E00               	movlw	0
  7838  01984C  6EE6               	movwf	postinc1,c
  7839  01984E  EC70  F0C5         	call	_wdtdelay	;wreg free
  7840                           
  7841                           ; BSR set to: 0
  7842                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7843  019852  0012               	return		;funcret
  7844  019854                     __end_of_wait_lcd_done:
  7845                           	opt callstack 0
  7846                           
  7847 ;; *************** function _wdtdelay *****************
  7848 ;; Defined at:
  7849 ;;		line 22 in file "eadog.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  delay           4  [STACK] const unsigned long 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1  [STACK] void 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 3F/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7867 ;;Total ram usage:        0 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    7
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_init_display
  7874 ;;		_send_lcd_cmd
  7875 ;;		_send_lcd_cmd_long
  7876 ;;		_wait_lcd_done
  7877 ;; This function uses a reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text34
  7881  018AE0                     __ptext34:
  7882                           	opt callstack 0
  7883  018AE0                     _wdtdelay:
  7884                           	opt callstack 21
  7885                           
  7886                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7887                           
  7888                           ; BSR set to: 0
  7889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7890                           ;incstack = 0
  7891  018AE0  0100               	movlb	0	; () banked
  7892  018AE2  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7893  018AE4  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7894  018AE6  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7895  018AE8  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7896  018AEA                     l1444:
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;eadog.c: 27:   __nop();
  7900  018AEA  F000               	nop	
  7901  018AEC  0004               	clrwdt		;# 
  7902                           
  7903                           ;eadog.c: 29:  };
  7904  018AEE  0E01               	movlw	1
  7905  018AF0  0100               	movlb	0	; () banked
  7906  018AF2  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7907  018AF4  0E00               	movlw	0
  7908  018AF6  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7909  018AF8  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7910  018AFA  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;stkvar	_delay @ sp[(0)+-4]
  7914  018AFC  0EFC               	movlw	-4
  7915  018AFE  006F FF8C  F001    	movff	plusw1,btemp
  7916  018B04  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7917  018B06  5C01               	subwf	btemp^0,w,c
  7918  018B08  0EFD               	movlw	-3
  7919  018B0A  006F FF8C  F001    	movff	plusw1,btemp
  7920  018B10  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7921  018B12  5801               	subwfb	btemp^0,w,c
  7922  018B14  0EFE               	movlw	-2
  7923  018B16  006F FF8C  F001    	movff	plusw1,btemp
  7924  018B1C  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7925  018B1E  5801               	subwfb	btemp^0,w,c
  7926  018B20  0EFF               	movlw	-1
  7927  018B22  006F FF8C  F001    	movff	plusw1,btemp
  7928  018B28  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7929  018B2A  5801               	subwfb	btemp^0,w,c
  7930  018B2C  B0D8               	btfsc	status,0,c
  7931  018B2E  D7DD               	goto	l1444
  7932                           
  7933                           ; BSR set to: 0
  7934                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7935  018B30  52E5               	movf	postdec1,f,c
  7936  018B32  52E5               	movf	postdec1,f,c
  7937  018B34  52E5               	movf	postdec1,f,c
  7938  018B36  52E5               	movf	postdec1,f,c
  7939  018B38  0012               	return		;funcret
  7940  018B3A                     __end_of_wdtdelay:
  7941                           	opt callstack 0
  7942                           
  7943 ;; *************** function _eaDogM_WriteString *****************
  7944 ;; Defined at:
  7945 ;;		line 197 in file "eadog.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  strPtr          2  [STACK] PTR unsigned char 
  7948 ;;		 -> D.lcd(288), D(290), V(188), 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1  [STACK] void 
  7953 ;; Registers used:
  7954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7955 ;; Tracked objects:
  7956 ;;		On entry : 3F/0
  7957 ;;		On exit  : 3F/3B
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7964 ;;Total ram usage:        0 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; Hardware stack levels required when called:   16
  7967 ;; This function calls:
  7968 ;;		_printf
  7969 ;;		_ringBufS_flush
  7970 ;;		_start_lcd
  7971 ;;		_strlen
  7972 ;;		_wait_lcd_set
  7973 ;; This function is called by:
  7974 ;;		_eaDogM_WriteStringAtPos
  7975 ;; This function uses a reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text35
  7979  018116                     __ptext35:
  7980                           	opt callstack 0
  7981  018116                     _eaDogM_WriteString:
  7982                           	opt callstack 12
  7983                           
  7984                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7985                           
  7986                           ; BSR set to: 0
  7987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7988                           ;incstack = 0
  7989  018116  ECE4  F0CC         	call	_wait_lcd_set	;wreg free
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7993  01811A  0E00               	movlw	0
  7994  01811C  6EE6               	movwf	postinc1,c
  7995  01811E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7996  018124  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7997  01812A  ECC6  F0C1         	call	_ringBufS_flush	;wreg free
  7998  01812E  94BC               	bcf	188,2,c	;volatile
  7999                           
  8000                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8001                           ;stkvar	_strPtr @ sp[(0)+-2]
  8002  018130  0EFE               	movlw	-2
  8003  018132  006F FF8F FFE6     	movff	plusw1,postinc1
  8004  018138  006F FF8F FFE6     	movff	plusw1,postinc1
  8005  01813E  ECDE  F0C0         	call	_strlen	;wreg free
  8006  018142  5002               	movf	(btemp+1)^0,w,c
  8007  018144  E104               	bnz	u10760
  8008  018146  0E41               	movlw	65
  8009  018148  5C01               	subwf	btemp^0,w,c
  8010  01814A  A0D8               	btfss	status,0,c
  8011  01814C  D010               	goto	l11178
  8012  01814E                     u10760:
  8013                           
  8014                           ;stkvar	_strPtr @ sp[(0)+-2]
  8015  01814E  0EFE               	movlw	-2
  8016  018150  006F FF8C  F00B    	movff	plusw1,btemp+10
  8017  018156  0EFF               	movlw	-1
  8018  018158  006F FF8C  F00C    	movff	plusw1,btemp+11
  8019  01815E  0E40               	movlw	64
  8020  018160  240B               	addwf	(btemp+10)^0,w,c
  8021  018162  6ED9               	movwf	fsr2l,c
  8022  018164  0E00               	movlw	0
  8023  018166  200C               	addwfc	(btemp+11)^0,w,c
  8024  018168  6EDA               	movwf	fsr2h,c
  8025  01816A  0E00               	movlw	0
  8026  01816C  6EDF               	movwf	indf2,c
  8027  01816E                     l11178:
  8028                           
  8029                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  8030  01816E  013B               	movlb	59	; () banked
  8031  018170  9FFC               	bcf	252,7,b	;volatile
  8032                           
  8033                           ; BSR set to: 59
  8034                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  8035                           ;stkvar	_strPtr @ sp[(0)+-2]
  8036  018172  0EFE               	movlw	-2
  8037  018174  006F FF8F FFE6     	movff	plusw1,postinc1
  8038  01817A  006F FF8F FFE6     	movff	plusw1,postinc1
  8039  018180  ECDE  F0C0         	call	_strlen	;wreg free
  8040  018184  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8041  01818A  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8042                           
  8043                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  8044  018190  013B               	movlb	59	; () banked
  8045  018192  8FFC               	bsf	252,7,b	;volatile
  8046                           
  8047                           ; BSR set to: 59
  8048                           ;eadog.c: 208:  printf("%s", strPtr);
  8049                           ;stkvar	_strPtr @ sp[(0)+-2]
  8050  018194  0EFE               	movlw	-2
  8051  018196  006F FF8F FFE6     	movff	plusw1,postinc1
  8052  01819C  006F FF8F FFE6     	movff	plusw1,postinc1
  8053  0181A2  0EFC               	movlw	low STR_24
  8054  0181A4  6EE6               	movwf	postinc1,c
  8055  0181A6  0EFF               	movlw	high STR_24
  8056  0181A8  6EE6               	movwf	postinc1,c
  8057  0181AA  0E04               	movlw	4
  8058  0181AC  6EE6               	movwf	postinc1,c
  8059  0181AE  EC10  F0C5         	call	_printf	;wreg free
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;eadog.c: 209:  start_lcd();
  8063  0181B2  ECE7  F0CC         	call	_start_lcd	;wreg free
  8064                           
  8065                           ; BSR set to: 59
  8066                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8067  0181B6  52E5               	movf	postdec1,f,c
  8068  0181B8  52E5               	movf	postdec1,f,c
  8069  0181BA  0012               	return		;funcret
  8070  0181BC                     __end_of_eaDogM_WriteString:
  8071                           	opt callstack 0
  8072                           
  8073 ;; *************** function _wait_lcd_set *****************
  8074 ;; Defined at:
  8075 ;;		line 144 in file "eadog.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;		None
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;		None
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1  [STACK] void 
  8082 ;; Registers used:
  8083 ;;		None
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/3D
  8086 ;;		On exit  : 3F/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8093 ;;Total ram usage:        0 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    7
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_eaDogM_WriteString
  8100 ;;		_send_lcd_cmd_dma
  8101 ;; This function uses a reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text36
  8105  0199C8                     __ptext36:
  8106                           	opt callstack 0
  8107  0199C8                     _wait_lcd_set:
  8108                           	opt callstack 20
  8109                           
  8110                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  8111                           
  8112                           ; BSR set to: 59
  8113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8114                           ;incstack = 0
  8115  0199C8  0100               	movlb	0	; () banked
  8116  0199CA  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  8117                           
  8118                           ; BSR set to: 0
  8119                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8120  0199CC  0012               	return		;funcret
  8121  0199CE                     __end_of_wait_lcd_set:
  8122                           	opt callstack 0
  8123                           
  8124 ;; *************** function _start_lcd *****************
  8125 ;; Defined at:
  8126 ;;		line 139 in file "eadog.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;		None
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;		None
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1  [STACK] void 
  8133 ;; Registers used:
  8134 ;;		None
  8135 ;; Tracked objects:
  8136 ;;		On entry : 3F/0
  8137 ;;		On exit  : 3F/3B
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8144 ;;Total ram usage:        0 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:    7
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_eaDogM_WriteString
  8151 ;;		_send_lcd_cmd_dma
  8152 ;; This function uses a reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text37
  8156  0199CE                     __ptext37:
  8157                           	opt callstack 0
  8158  0199CE                     _start_lcd:
  8159                           	opt callstack 20
  8160                           
  8161                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  8162                           
  8163                           ; BSR set to: 0
  8164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8165                           ;incstack = 0
  8166  0199CE  013B               	movlb	59	; () banked
  8167  0199D0  8DFC               	bsf	252,6,b	;volatile
  8168                           
  8169                           ; BSR set to: 59
  8170                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8171  0199D2  0012               	return		;funcret
  8172  0199D4                     __end_of_start_lcd:
  8173                           	opt callstack 0
  8174                           
  8175 ;; *************** function _ringBufS_flush *****************
  8176 ;; Defined at:
  8177 ;;		line 76 in file "ringbufs.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8180 ;;		 -> ring_buf1(67), 
  8181 ;;  clearBuffer     1  [STACK] const char 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1  [STACK] void 
  8186 ;; Registers used:
  8187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8188 ;; Tracked objects:
  8189 ;;		On entry : 3F/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8197 ;;Total ram usage:        0 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:    8
  8200 ;; This function calls:
  8201 ;;		_memset
  8202 ;; This function is called by:
  8203 ;;		_eaDogM_WriteString
  8204 ;;		_send_lcd_cmd_dma
  8205 ;; This function uses a reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text38
  8209  01838C                     __ptext38:
  8210                           	opt callstack 0
  8211  01838C                     _ringBufS_flush:
  8212                           	opt callstack 19
  8213                           
  8214                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8215                           ;stkvar	__this @ sp[(0)+-2]
  8216                           
  8217                           ; BSR set to: 59
  8218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8219                           ;incstack = 0
  8220  01838C  0EFE               	movlw	-2
  8221  01838E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8222  018394  0EFF               	movlw	-1
  8223  018396  006F FF8C  F00C    	movff	plusw1,btemp+11
  8224  01839C  0E42               	movlw	66
  8225  01839E  240B               	addwf	(btemp+10)^0,w,c
  8226  0183A0  6ED9               	movwf	fsr2l,c
  8227  0183A2  0E00               	movlw	0
  8228  0183A4  200C               	addwfc	(btemp+11)^0,w,c
  8229  0183A6  6EDA               	movwf	fsr2h,c
  8230  0183A8  0E00               	movlw	0
  8231  0183AA  6EDF               	movwf	indf2,c
  8232                           
  8233                           ;ringbufs.c: 79:  _this->head = 0;
  8234                           ;stkvar	__this @ sp[(0)+-2]
  8235  0183AC  0EFE               	movlw	-2
  8236  0183AE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8237  0183B4  0EFF               	movlw	-1
  8238  0183B6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8239  0183BC  0E40               	movlw	64
  8240  0183BE  240B               	addwf	(btemp+10)^0,w,c
  8241  0183C0  6ED9               	movwf	fsr2l,c
  8242  0183C2  0E00               	movlw	0
  8243  0183C4  200C               	addwfc	(btemp+11)^0,w,c
  8244  0183C6  6EDA               	movwf	fsr2h,c
  8245  0183C8  0E00               	movlw	0
  8246  0183CA  6EDF               	movwf	indf2,c
  8247                           
  8248                           ;ringbufs.c: 80:  _this->tail = 0;
  8249                           ;stkvar	__this @ sp[(0)+-2]
  8250  0183CC  0EFE               	movlw	-2
  8251  0183CE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8252  0183D4  0EFF               	movlw	-1
  8253  0183D6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8254  0183DC  0E41               	movlw	65
  8255  0183DE  240B               	addwf	(btemp+10)^0,w,c
  8256  0183E0  6ED9               	movwf	fsr2l,c
  8257  0183E2  0E00               	movlw	0
  8258  0183E4  200C               	addwfc	(btemp+11)^0,w,c
  8259  0183E6  6EDA               	movwf	fsr2h,c
  8260  0183E8  0E00               	movlw	0
  8261  0183EA  6EDF               	movwf	indf2,c
  8262                           
  8263                           ;ringbufs.c: 81:  if (clearBuffer) {
  8264                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8265  0183EC  0EFD               	movlw	-3
  8266  0183EE  50E3               	movf	plusw1,w,c
  8267  0183F0  B4D8               	btfsc	status,2,c
  8268  0183F2  D011               	goto	l1584
  8269                           
  8270                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8271  0183F4  0E40               	movlw	64
  8272  0183F6  6EE6               	movwf	postinc1,c
  8273  0183F8  0E00               	movlw	0
  8274  0183FA  6EE6               	movwf	postinc1,c
  8275  0183FC  0E00               	movlw	0
  8276  0183FE  6EE6               	movwf	postinc1,c
  8277  018400  0E00               	movlw	0
  8278  018402  6EE6               	movwf	postinc1,c
  8279                           
  8280                           ;stkvar	__this @ sp[(-4)+-2]
  8281  018404  0EFA               	movlw	-6
  8282  018406  006F FF8F FFE6     	movff	plusw1,postinc1
  8283  01840C  006F FF8F FFE6     	movff	plusw1,postinc1
  8284  018412  ECDB  F0A8         	call	_memset	;wreg free
  8285  018416                     l1584:
  8286                           
  8287                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8288  018416  52E5               	movf	postdec1,f,c
  8289  018418  52E5               	movf	postdec1,f,c
  8290  01841A  52E5               	movf	postdec1,f,c
  8291  01841C  0012               	return		;funcret
  8292  01841E                     __end_of_ringBufS_flush:
  8293                           	opt callstack 0
  8294                           
  8295 ;; *************** function _memset *****************
  8296 ;; Defined at:
  8297 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;  dest            2  [STACK] PTR void 
  8300 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8301 ;;  c               2  [STACK] int 
  8302 ;;  n               2  [STACK] unsigned int 
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  s               2  [STACK] PTR unsigned char 
  8305 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8306 ;;  k               2  [STACK] unsigned int 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  2  [STACK] PTR void 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    7
  8323 ;; This function calls:
  8324 ;;		Nothing
  8325 ;; This function is called by:
  8326 ;;		_ringBufS_init
  8327 ;;		_ringBufS_flush
  8328 ;; This function uses a reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text39
  8332  0151B6                     __ptext39:
  8333                           	opt callstack 0
  8334  0151B6                     _memset:
  8335                           	opt callstack 0
  8336                           
  8337                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8338  0151B6  52E6               	movf	postinc1,f,c
  8339  0151B8  52E6               	movf	postinc1,f,c
  8340  0151BA  52E6               	movf	postinc1,f,c
  8341  0151BC  52E6               	movf	postinc1,f,c
  8342                           
  8343                           ;stkvar	_dest @ sp[(-4)+-2]
  8344                           
  8345                           ;incstack = 0
  8346  0151BE  0EFA               	movlw	-6
  8347  0151C0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8348  0151C6  0EFB               	movlw	-5
  8349  0151C8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8350                           
  8351                           ;stkvar	_s @ sp[(-4)+0]
  8352  0151CE  0EFD               	movlw	-3
  8353  0151D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  8354  0151D6  0EFC               	movlw	-4
  8355  0151D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8356                           
  8357                           ;stkvar	_n @ sp[(-4)+-6]
  8358  0151DE  0EF6               	movlw	-10
  8359  0151E0  006F FF8C  F001    	movff	plusw1,btemp
  8360  0151E6  0EF7               	movlw	-9
  8361  0151E8  50E3               	movf	plusw1,w,c
  8362  0151EA  1001               	iorwf	btemp^0,w,c
  8363  0151EC  B4D8               	btfsc	status,2,c
  8364  0151EE  D154               	goto	u10730
  8365                           
  8366                           ;stkvar	_c @ sp[(-4)+-4]
  8367                           ;stkvar	_s @ sp[(-4)+0]
  8368  0151F0  0EFC               	movlw	-4
  8369  0151F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8370  0151F8  0EFD               	movlw	-3
  8371  0151FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8372  015200  0EF8               	movlw	-8
  8373  015202  006F FF8F FFDF     	movff	plusw1,indf2
  8374                           
  8375                           ;stkvar	_c @ sp[(-4)+-4]
  8376                           ;stkvar	_n @ sp[(-4)+-6]
  8377                           ;stkvar	_s @ sp[(-4)+0]
  8378  015208  0EFC               	movlw	-4
  8379  01520A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8380  015210  0EFD               	movlw	-3
  8381  015212  006F FF8C  F00C    	movff	plusw1,btemp+11
  8382  015218  0EF6               	movlw	-10
  8383  01521A  50E3               	movf	plusw1,w,c
  8384  01521C  260B               	addwf	(btemp+10)^0,f,c
  8385  01521E  0EF7               	movlw	-9
  8386  015220  50E3               	movf	plusw1,w,c
  8387  015222  220C               	addwfc	(btemp+11)^0,f,c
  8388  015224  0EFF               	movlw	255
  8389  015226  240B               	addwf	(btemp+10)^0,w,c
  8390  015228  6ED9               	movwf	fsr2l,c
  8391  01522A  0EFF               	movlw	255
  8392  01522C  200C               	addwfc	(btemp+11)^0,w,c
  8393  01522E  6EDA               	movwf	fsr2h,c
  8394  015230  0EF8               	movlw	-8
  8395  015232  006F FF8F FFDF     	movff	plusw1,indf2
  8396                           
  8397                           ;stkvar	_n @ sp[(-4)+-6]
  8398  015238  0EF7               	movlw	-9
  8399  01523A  50E3               	movf	plusw1,w,c
  8400  01523C  E108               	bnz	l11094
  8401  01523E  0EF6               	movlw	-10
  8402  015240  006F FF8C  F001    	movff	plusw1,btemp
  8403  015246  0E03               	movlw	3
  8404  015248  5E01               	subwf	btemp^0,f,c
  8405  01524A  A0D8               	btfss	status,0,c
  8406  01524C  D125               	goto	u10730
  8407  01524E                     l11094:
  8408                           
  8409                           ;stkvar	_c @ sp[(-4)+-4]
  8410                           ;stkvar	_s @ sp[(-4)+0]
  8411  01524E  0EFC               	movlw	-4
  8412  015250  006F FF8C  F00B    	movff	plusw1,btemp+10
  8413  015256  0EFD               	movlw	-3
  8414  015258  006F FF8C  F00C    	movff	plusw1,btemp+11
  8415  01525E  0E01               	movlw	1
  8416  015260  240B               	addwf	(btemp+10)^0,w,c
  8417  015262  6ED9               	movwf	fsr2l,c
  8418  015264  0E00               	movlw	0
  8419  015266  200C               	addwfc	(btemp+11)^0,w,c
  8420  015268  6EDA               	movwf	fsr2h,c
  8421  01526A  0EF8               	movlw	-8
  8422  01526C  006F FF8F FFDF     	movff	plusw1,indf2
  8423                           
  8424                           ;stkvar	_c @ sp[(-4)+-4]
  8425                           ;stkvar	_s @ sp[(-4)+0]
  8426  015272  0EFC               	movlw	-4
  8427  015274  006F FF8C  F00B    	movff	plusw1,btemp+10
  8428  01527A  0EFD               	movlw	-3
  8429  01527C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8430  015282  0E02               	movlw	2
  8431  015284  240B               	addwf	(btemp+10)^0,w,c
  8432  015286  6ED9               	movwf	fsr2l,c
  8433  015288  0E00               	movlw	0
  8434  01528A  200C               	addwfc	(btemp+11)^0,w,c
  8435  01528C  6EDA               	movwf	fsr2h,c
  8436  01528E  0EF8               	movlw	-8
  8437  015290  006F FF8F FFDF     	movff	plusw1,indf2
  8438                           
  8439                           ;stkvar	_c @ sp[(-4)+-4]
  8440                           ;stkvar	_n @ sp[(-4)+-6]
  8441                           ;stkvar	_s @ sp[(-4)+0]
  8442  015296  0EFC               	movlw	-4
  8443  015298  006F FF8C  F00B    	movff	plusw1,btemp+10
  8444  01529E  0EFD               	movlw	-3
  8445  0152A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8446  0152A6  0EF6               	movlw	-10
  8447  0152A8  50E3               	movf	plusw1,w,c
  8448  0152AA  260B               	addwf	(btemp+10)^0,f,c
  8449  0152AC  0EF7               	movlw	-9
  8450  0152AE  50E3               	movf	plusw1,w,c
  8451  0152B0  220C               	addwfc	(btemp+11)^0,f,c
  8452  0152B2  0EFE               	movlw	254
  8453  0152B4  240B               	addwf	(btemp+10)^0,w,c
  8454  0152B6  6ED9               	movwf	fsr2l,c
  8455  0152B8  0EFF               	movlw	255
  8456  0152BA  200C               	addwfc	(btemp+11)^0,w,c
  8457  0152BC  6EDA               	movwf	fsr2h,c
  8458  0152BE  0EF8               	movlw	-8
  8459  0152C0  006F FF8F FFDF     	movff	plusw1,indf2
  8460                           
  8461                           ;stkvar	_c @ sp[(-4)+-4]
  8462                           ;stkvar	_n @ sp[(-4)+-6]
  8463                           ;stkvar	_s @ sp[(-4)+0]
  8464  0152C6  0EFC               	movlw	-4
  8465  0152C8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8466  0152CE  0EFD               	movlw	-3
  8467  0152D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8468  0152D6  0EF6               	movlw	-10
  8469  0152D8  50E3               	movf	plusw1,w,c
  8470  0152DA  260B               	addwf	(btemp+10)^0,f,c
  8471  0152DC  0EF7               	movlw	-9
  8472  0152DE  50E3               	movf	plusw1,w,c
  8473  0152E0  220C               	addwfc	(btemp+11)^0,f,c
  8474  0152E2  0EFD               	movlw	253
  8475  0152E4  240B               	addwf	(btemp+10)^0,w,c
  8476  0152E6  6ED9               	movwf	fsr2l,c
  8477  0152E8  0EFF               	movlw	255
  8478  0152EA  200C               	addwfc	(btemp+11)^0,w,c
  8479  0152EC  6EDA               	movwf	fsr2h,c
  8480  0152EE  0EF8               	movlw	-8
  8481  0152F0  006F FF8F FFDF     	movff	plusw1,indf2
  8482                           
  8483                           ;stkvar	_n @ sp[(-4)+-6]
  8484  0152F6  0EF7               	movlw	-9
  8485  0152F8  50E3               	movf	plusw1,w,c
  8486  0152FA  E108               	bnz	l11100
  8487  0152FC  0EF6               	movlw	-10
  8488  0152FE  006F FF8C  F001    	movff	plusw1,btemp
  8489  015304  0E07               	movlw	7
  8490  015306  5E01               	subwf	btemp^0,f,c
  8491  015308  A0D8               	btfss	status,0,c
  8492  01530A  D0C6               	goto	u10730
  8493  01530C                     l11100:
  8494                           
  8495                           ;stkvar	_c @ sp[(-4)+-4]
  8496                           ;stkvar	_s @ sp[(-4)+0]
  8497  01530C  0EFC               	movlw	-4
  8498  01530E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8499  015314  0EFD               	movlw	-3
  8500  015316  006F FF8C  F00C    	movff	plusw1,btemp+11
  8501  01531C  0E03               	movlw	3
  8502  01531E  240B               	addwf	(btemp+10)^0,w,c
  8503  015320  6ED9               	movwf	fsr2l,c
  8504  015322  0E00               	movlw	0
  8505  015324  200C               	addwfc	(btemp+11)^0,w,c
  8506  015326  6EDA               	movwf	fsr2h,c
  8507  015328  0EF8               	movlw	-8
  8508  01532A  006F FF8F FFDF     	movff	plusw1,indf2
  8509                           
  8510                           ;stkvar	_c @ sp[(-4)+-4]
  8511                           ;stkvar	_n @ sp[(-4)+-6]
  8512                           ;stkvar	_s @ sp[(-4)+0]
  8513  015330  0EFC               	movlw	-4
  8514  015332  006F FF8C  F00B    	movff	plusw1,btemp+10
  8515  015338  0EFD               	movlw	-3
  8516  01533A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8517  015340  0EF6               	movlw	-10
  8518  015342  50E3               	movf	plusw1,w,c
  8519  015344  260B               	addwf	(btemp+10)^0,f,c
  8520  015346  0EF7               	movlw	-9
  8521  015348  50E3               	movf	plusw1,w,c
  8522  01534A  220C               	addwfc	(btemp+11)^0,f,c
  8523  01534C  0EFC               	movlw	252
  8524  01534E  240B               	addwf	(btemp+10)^0,w,c
  8525  015350  6ED9               	movwf	fsr2l,c
  8526  015352  0EFF               	movlw	255
  8527  015354  200C               	addwfc	(btemp+11)^0,w,c
  8528  015356  6EDA               	movwf	fsr2h,c
  8529  015358  0EF8               	movlw	-8
  8530  01535A  006F FF8F FFDF     	movff	plusw1,indf2
  8531                           
  8532                           ;stkvar	_n @ sp[(-4)+-6]
  8533  015360  0EF7               	movlw	-9
  8534  015362  50E3               	movf	plusw1,w,c
  8535  015364  E108               	bnz	l11106
  8536  015366  0EF6               	movlw	-10
  8537  015368  006F FF8C  F001    	movff	plusw1,btemp
  8538  01536E  0E09               	movlw	9
  8539  015370  5E01               	subwf	btemp^0,f,c
  8540  015372  A0D8               	btfss	status,0,c
  8541  015374  D091               	goto	u10730
  8542  015376                     l11106:
  8543                           
  8544                           ;stkvar	_s @ sp[(-4)+0]
  8545  015376  0EFC               	movlw	-4
  8546  015378  006F FF8C  F00B    	movff	plusw1,btemp+10
  8547  01537E  1E0B               	comf	(btemp+10)^0,f,c
  8548  015380  0EFD               	movlw	-3
  8549  015382  006F FF8C  F00C    	movff	plusw1,btemp+11
  8550  015388  1E0C               	comf	(btemp+11)^0,f,c
  8551  01538A  2A0B               	incf	(btemp+10)^0,f,c
  8552  01538C  B4D8               	btfsc	status,2,c
  8553  01538E  2A0C               	incf	(btemp+11)^0,f,c
  8554  015390  0E03               	movlw	3
  8555  015392  160B               	andwf	(btemp+10)^0,f,c
  8556  015394  0E00               	movlw	0
  8557  015396  160C               	andwf	(btemp+11)^0,f,c
  8558                           
  8559                           ;stkvar	_k @ sp[(-4)+2]
  8560  015398  0EFE               	movlw	-2
  8561  01539A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8562  0153A0  0EFF               	movlw	-1
  8563  0153A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  8564                           
  8565                           ;stkvar	_k @ sp[(-4)+2]
  8566                           ;stkvar	_s @ sp[(-4)+0]
  8567  0153A8  0EFC               	movlw	-4
  8568  0153AA  50E3               	movf	plusw1,w,c
  8569  0153AC  6E01               	movwf	btemp^0,c
  8570  0153AE  0EFE               	movlw	-2
  8571  0153B0  50E3               	movf	plusw1,w,c
  8572  0153B2  2601               	addwf	btemp^0,f,c
  8573  0153B4  0EFC               	movlw	-4
  8574  0153B6  0060  F007  FFE3   	movff	btemp,plusw1
  8575  0153BC  0EFD               	movlw	-3
  8576  0153BE  50E3               	movf	plusw1,w,c
  8577  0153C0  6E01               	movwf	btemp^0,c
  8578  0153C2  0EFF               	movlw	-1
  8579  0153C4  50E3               	movf	plusw1,w,c
  8580  0153C6  2201               	addwfc	btemp^0,f,c
  8581  0153C8  0EFD               	movlw	-3
  8582  0153CA  0060  F007  FFE3   	movff	btemp,plusw1
  8583                           
  8584                           ;stkvar	_k @ sp[(-4)+2]
  8585                           ;stkvar	_n @ sp[(-4)+-6]
  8586  0153D0  0EF6               	movlw	-10
  8587  0153D2  50E3               	movf	plusw1,w,c
  8588  0153D4  6E01               	movwf	btemp^0,c
  8589  0153D6  0EFE               	movlw	-2
  8590  0153D8  50E3               	movf	plusw1,w,c
  8591  0153DA  5E01               	subwf	btemp^0,f,c
  8592  0153DC  0EF6               	movlw	-10
  8593  0153DE  0060  F007  FFE3   	movff	btemp,plusw1
  8594  0153E4  0EF7               	movlw	-9
  8595  0153E6  50E3               	movf	plusw1,w,c
  8596  0153E8  6E01               	movwf	btemp^0,c
  8597  0153EA  0EFF               	movlw	-1
  8598  0153EC  50E3               	movf	plusw1,w,c
  8599  0153EE  5A01               	subwfb	btemp^0,f,c
  8600  0153F0  0EF7               	movlw	-9
  8601  0153F2  0060  F007  FFE3   	movff	btemp,plusw1
  8602  0153F8  0EFC               	movlw	252
  8603  0153FA  6E0B               	movwf	(btemp+10)^0,c
  8604  0153FC  0EFF               	movlw	255
  8605  0153FE  6E0C               	movwf	(btemp+11)^0,c
  8606                           
  8607                           ;stkvar	_n @ sp[(-4)+-6]
  8608  015400  0EF6               	movlw	-10
  8609  015402  006F FF8C  F001    	movff	plusw1,btemp
  8610  015408  500B               	movf	(btemp+10)^0,w,c
  8611  01540A  1601               	andwf	btemp^0,f,c
  8612  01540C  0EF6               	movlw	-10
  8613  01540E  0060  F007  FFE3   	movff	btemp,plusw1
  8614  015414  0EF7               	movlw	-9
  8615  015416  006F FF8C  F001    	movff	plusw1,btemp
  8616  01541C  500C               	movf	(btemp+11)^0,w,c
  8617  01541E  1601               	andwf	btemp^0,f,c
  8618  015420  0EF7               	movlw	-9
  8619  015422  D02E               	goto	L6
  8620  015424                     l11114:
  8621                           
  8622                           ;stkvar	_c @ sp[(-4)+-4]
  8623                           ;stkvar	_s @ sp[(-4)+0]
  8624  015424  0EFC               	movlw	-4
  8625  015426  006F FF8F FFD9     	movff	plusw1,fsr2l
  8626  01542C  0EFD               	movlw	-3
  8627  01542E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8628  015434  0EF8               	movlw	-8
  8629  015436  006F FF8F FFDF     	movff	plusw1,indf2
  8630                           
  8631                           ;stkvar	_n @ sp[(-4)+-6]
  8632  01543C  0EF6               	movlw	-10
  8633  01543E  006F FF8C  F001    	movff	plusw1,btemp
  8634  015444  0E01               	movlw	1
  8635  015446  5E01               	subwf	btemp^0,f,c
  8636  015448  0EF6               	movlw	-10
  8637  01544A  0060  F007  FFE3   	movff	btemp,plusw1
  8638  015450  0EF7               	movlw	-9
  8639  015452  006F FF8C  F001    	movff	plusw1,btemp
  8640  015458  0E00               	movlw	0
  8641  01545A  5A01               	subwfb	btemp^0,f,c
  8642  01545C  0EF7               	movlw	-9
  8643  01545E  0060  F007  FFE3   	movff	btemp,plusw1
  8644                           
  8645                           ;stkvar	_s @ sp[(-4)+0]
  8646  015464  0EFC               	movlw	-4
  8647  015466  50E3               	movf	plusw1,w,c
  8648  015468  0F01               	addlw	1
  8649  01546A  6E01               	movwf	btemp^0,c
  8650  01546C  0EFC               	movlw	-4
  8651  01546E  0060  F007  FFE3   	movff	btemp,plusw1
  8652  015474  6A01               	clrf	btemp^0,c
  8653  015476  0EFD               	movlw	-3
  8654  015478  50E3               	movf	plusw1,w,c
  8655  01547A  2001               	addwfc	btemp^0,w,c
  8656  01547C  6E01               	movwf	btemp^0,c
  8657  01547E  0EFD               	movlw	-3
  8658  015480                     L6:
  8659  015480  0060  F007  FFE3   	movff	btemp,plusw1
  8660                           
  8661                           ;stkvar	_n @ sp[(-4)+-6]
  8662  015486  0EF6               	movlw	-10
  8663  015488  006F FF8C  F001    	movff	plusw1,btemp
  8664  01548E  0EF7               	movlw	-9
  8665  015490  50E3               	movf	plusw1,w,c
  8666  015492  1001               	iorwf	btemp^0,w,c
  8667  015494  A4D8               	btfss	status,2,c
  8668  015496  D7C6               	goto	l11114
  8669  015498                     u10730:
  8670                           
  8671                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8672  015498  0EF6               	movlw	246
  8673  01549A  26E1               	addwf	fsr1l,f,c
  8674  01549C  0EFF               	movlw	255
  8675  01549E  22E2               	addwfc	fsr1h,f,c
  8676  0154A0  0012               	return		;funcret
  8677  0154A2                     __end_of_memset:
  8678                           	opt callstack 0
  8679                           
  8680 ;; *************** function _printf *****************
  8681 ;; Defined at:
  8682 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  fmt             2  [STACK] PTR const unsigned char 
  8685 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  ap              2  [STACK] PTR void [1]
  8688 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8689 ;;  ret             2    0        int 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  2  [STACK] int 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8694 ;; Tracked objects:
  8695 ;;		On entry : 3F/3B
  8696 ;;		On exit  : 3F/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:   15
  8706 ;; This function calls:
  8707 ;;		_vfprintf
  8708 ;; This function is called by:
  8709 ;;		_eaDogM_WriteString
  8710 ;;		_send_lcd_cmd_dma
  8711 ;; This function uses a reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text40
  8715  018A20                     __ptext40:
  8716                           	opt callstack 0
  8717  018A20                     _printf:
  8718                           	opt callstack 0
  8719                           
  8720                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8721  018A20  52E6               	movf	postinc1,f,c
  8722  018A22  52E6               	movf	postinc1,f,c
  8723                           
  8724                           ;stkvar	?_printf @ sp[(-2)+-3]
  8725                           
  8726                           ;incstack = 0
  8727  018A24  0EFB               	movlw	251
  8728  018A26  24E1               	addwf	fsr1l,w,c
  8729  018A28  6E0B               	movwf	(btemp+10)^0,c
  8730  018A2A  0EFF               	movlw	255
  8731  018A2C  20E2               	addwfc	fsr1h,w,c
  8732  018A2E  6E0C               	movwf	(btemp+11)^0,c
  8733                           
  8734                           ;stkvar	_ap @ sp[(-2)+0]
  8735  018A30  0EFF               	movlw	-1
  8736  018A32  0060  F033  FFE3   	movff	btemp+11,plusw1
  8737  018A38  0EFE               	movlw	-2
  8738  018A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8739                           
  8740                           ;stkvar	_ap @ sp[(-2)+0]
  8741  018A40  0EFE               	movlw	254
  8742  018A42  24E1               	addwf	fsr1l,w,c
  8743  018A44  6E01               	movwf	btemp^0,c
  8744  018A46  0EFF               	movlw	255
  8745  018A48  20E2               	addwfc	fsr1h,w,c
  8746  018A4A  6E02               	movwf	(btemp+1)^0,c
  8747  018A4C  0060  F007  FFE6   	movff	btemp,postinc1
  8748  018A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8749                           
  8750                           ;stkvar	_fmt @ sp[(-4)+-3]
  8751  018A58  0EF9               	movlw	-7
  8752  018A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  8753  018A60  006F FF8F FFE6     	movff	plusw1,postinc1
  8754  018A66  0E00               	movlw	0
  8755  018A68  6EE6               	movwf	postinc1,c
  8756  018A6A  0E00               	movlw	0
  8757  018A6C  6EE6               	movwf	postinc1,c
  8758  018A6E  ECE0  F0BF         	call	_vfprintf	;wreg free
  8759                           
  8760                           ; BSR set to: 0
  8761                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8762  018A72  52E5               	movf	postdec1,f,c
  8763  018A74  52E5               	movf	postdec1,f,c
  8764  018A76  52E5               	movf	postdec1,f,c
  8765  018A78  50E7               	movf	indf1,w,c
  8766  018A7A  5EE1               	subwf	fsr1l,f,c
  8767  018A7C  0E00               	movlw	0
  8768  018A7E  5AE2               	subwfb	fsr1h,f,c
  8769  018A80  0012               	return		;funcret
  8770  018A82                     __end_of_printf:
  8771                           	opt callstack 0
  8772                           
  8773 ;; *************** function _vfprintf *****************
  8774 ;; Defined at:
  8775 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8778 ;;		 -> f(6), NULL(0), 
  8779 ;;  fmt             2  [STACK] PTR const unsigned char 
  8780 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8781 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8782 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8783 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8784 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8785 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8786 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8787 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8788 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8789 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8790 ;;  ap              2  [STACK] PTR PTR void 
  8791 ;;		 -> ap(2), ap(2), 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  cfmt            2  [STACK] PTR unsigned char 
  8794 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8795 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8796 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8797 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8798 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8799 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8800 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8801 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8802 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8803 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  2  [STACK] int 
  8806 ;; Registers used:
  8807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/1
  8810 ;;		On exit  : 3F/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8817 ;;Total ram usage:        0 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:   14
  8820 ;; This function calls:
  8821 ;;		_vfpfcnvrt
  8822 ;; This function is called by:
  8823 ;;		_sprintf
  8824 ;;		_printf
  8825 ;; This function uses a reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text41
  8829  017FC0                     __ptext41:
  8830                           	opt callstack 0
  8831  017FC0                     _vfprintf:
  8832                           	opt callstack 0
  8833                           
  8834                           ; BSR set to: 0
  8835                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8836  017FC0  52E6               	movf	postinc1,f,c
  8837  017FC2  52E6               	movf	postinc1,f,c
  8838                           
  8839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8840                           ;stkvar	_fmt @ sp[(-2)+-4]
  8841                           
  8842                           ;incstack = 0
  8843  017FC4  0EFA               	movlw	-6
  8844  017FC6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8845  017FCC  0EFB               	movlw	-5
  8846  017FCE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8847                           
  8848                           ;stkvar	_cfmt @ sp[(-2)+0]
  8849  017FD4  0EFF               	movlw	-1
  8850  017FD6  0060  F033  FFE3   	movff	btemp+11,plusw1
  8851  017FDC  0EFE               	movlw	-2
  8852  017FDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8853                           
  8854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8855  017FE4  0100               	movlb	0	; () banked
  8856  017FE6  6BC7               	clrf	_nout& (0+255),b
  8857  017FE8  6BC8               	clrf	(_nout+1)& (0+255),b
  8858                           
  8859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8860  017FEA  D021               	goto	l11128
  8861  017FEC                     l11126:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8865                           ;stkvar	_ap @ sp[(-2)+-6]
  8866  017FEC  0EF8               	movlw	-8
  8867  017FEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8868  017FF4  006F FF8F FFE6     	movff	plusw1,postinc1
  8869                           
  8870                           ;stkvar	_cfmt @ sp[(-4)+0]
  8871  017FFA  0EFC               	movlw	252
  8872  017FFC  24E1               	addwf	fsr1l,w,c
  8873  017FFE  6E01               	movwf	btemp^0,c
  8874  018000  0EFF               	movlw	255
  8875  018002  20E2               	addwfc	fsr1h,w,c
  8876  018004  6E02               	movwf	(btemp+1)^0,c
  8877  018006  0060  F007  FFE6   	movff	btemp,postinc1
  8878  01800C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8879                           
  8880                           ;stkvar	_fp @ sp[(-6)+-2]
  8881  018012  0EF8               	movlw	-8
  8882  018014  006F FF8F FFE6     	movff	plusw1,postinc1
  8883  01801A  006F FF8F FFE6     	movff	plusw1,postinc1
  8884  018020  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8885  018024  5001               	movf	btemp^0,w,c
  8886  018026  0100               	movlb	0	; () banked
  8887  018028  27C7               	addwf	_nout& (0+255),f,b
  8888  01802A  5002               	movf	(btemp+1)^0,w,c
  8889  01802C  23C8               	addwfc	(_nout+1)& (0+255),f,b
  8890  01802E                     l11128:
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8894                           ;stkvar	_cfmt @ sp[(-2)+0]
  8895  01802E  50E1               	movf	fsr1l,w,c
  8896  018030  0FFE               	addlw	-2
  8897  018032  6ED9               	movwf	fsr2l,c
  8898  018034  50E2               	movf	fsr1h,w,c
  8899  018036  6EDA               	movwf	fsr2h,c
  8900  018038  0EFF               	movlw	255
  8901  01803A  22DA               	addwfc	fsr2h,f,c
  8902  01803C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8903  018042  006F FF77 FFF7     	movff	postdec2,tblptrh
  8904  018048                     	if	0	;tblptru may be non-zero
  8905  018048                     	endif
  8906  018048                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8907  018048  0E00               	movlw	low (__mediumconst shr (0+16))
  8908  01804A  6EF8               	movwf	tblptru,c
  8909  01804C                     	endif
  8910  01804C  0008               	tblrd		*
  8911  01804E  50F5               	movf	tablat,w,c
  8912  018050  0900               	iorlw	0
  8913  018052  A4D8               	btfss	status,2,c
  8914  018054  D7CB               	goto	l11126
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8918  018056  0060  F31C  F001   	movff	_nout,btemp
  8919  01805C  0060  F320  F002   	movff	_nout+1,btemp+1
  8920                           
  8921                           ; BSR set to: 0
  8922                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8923  018062  0EF8               	movlw	248
  8924  018064  26E1               	addwf	fsr1l,f,c
  8925  018066  0EFF               	movlw	255
  8926  018068  22E2               	addwfc	fsr1h,f,c
  8927  01806A  0012               	return		;funcret
  8928  01806C                     __end_of_vfprintf:
  8929                           	opt callstack 0
  8930                           
  8931 ;; *************** function _vfpfcnvrt *****************
  8932 ;; Defined at:
  8933 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8936 ;;		 -> f(6), NULL(0), 
  8937 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8938 ;;		 -> cfmt(2), 
  8939 ;;  ap              2  [STACK] PTR PTR void 
  8940 ;;		 -> ap(2), ap(2), 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  llu             8  [STACK] unsigned long long 
  8943 ;;  ll              8  [STACK] long long 
  8944 ;;  f               4  [STACK] long long 
  8945 ;;  ct              3  [STACK] unsigned char [3]
  8946 ;;  vp              3    0        PTR void 
  8947 ;;  cp              2  [STACK] PTR unsigned char 
  8948 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8949 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8950 ;;		 -> STR_3(6), V(188), 
  8951 ;;  i               2    0        int 
  8952 ;;  done            2    0        int 
  8953 ;;  c               1  [STACK] unsigned char 
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  2  [STACK] int 
  8956 ;; Registers used:
  8957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8967 ;;Total ram usage:        0 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:   13
  8970 ;; This function calls:
  8971 ;;		_atoi
  8972 ;;		_ctoa
  8973 ;;		_dtoa
  8974 ;;		_efgtoa
  8975 ;;		_fputc
  8976 ;;		_isdigit
  8977 ;;		_isupper
  8978 ;;		_stoa
  8979 ;;		_strncmp
  8980 ;;		_tolower
  8981 ;;		_xtoa
  8982 ;; This function is called by:
  8983 ;;		_vfprintf
  8984 ;; This function uses a reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text42
  8988  011244                     __ptext42:
  8989                           	opt callstack 0
  8990  011244                     _vfpfcnvrt:
  8991                           	opt callstack 0
  8992                           
  8993                           ; BSR set to: 0
  8994                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8995  011244  0E20               	movlw	32
  8996  011246  26E1               	addwf	fsr1l,f,c
  8997  011248  0E00               	movlw	0
  8998  01124A  22E2               	addwfc	fsr1h,f,c
  8999                           
  9000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9001                           ;stkvar	_fmt @ sp[(-32)+-4]
  9002                           
  9003                           ;incstack = 0
  9004  01124C  0EDC               	movlw	-36
  9005  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9006  011254  0EDD               	movlw	-35
  9007  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9008  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9009  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9010  011268                     	if	0	;tblptru may be non-zero
  9011  011268                     	endif
  9012  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9013  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9014  01126A  6EF8               	movwf	tblptru,c
  9015  01126C                     	endif
  9016  01126C  0008               	tblrd		*
  9017  01126E  50F5               	movf	tablat,w,c
  9018  011270  0A25               	xorlw	37
  9019  011272  A4D8               	btfss	status,2,c
  9020  011274  EF92  F08E         	goto	l11072
  9021                           
  9022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9023                           ;stkvar	_fmt @ sp[(-32)+-4]
  9024  011278  0EDC               	movlw	-36
  9025  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9026  011280  0EDD               	movlw	-35
  9027  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9028  011288  2ADE               	incf	postinc2,f,c
  9029  01128A  0E00               	movlw	0
  9030  01128C  22DD               	addwfc	postdec2,f,c
  9031                           
  9032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9033  01128E  6A24               	clrf	_width^0,c
  9034  011290  6A25               	clrf	(_width+1)^0,c
  9035  011292  6A28               	clrf	_flags^0,c
  9036  011294  6A29               	clrf	(_flags+1)^0,c
  9037                           
  9038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9039  011296  6826               	setf	_prec^0,c
  9040  011298  6827               	setf	(_prec+1)^0,c
  9041                           
  9042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9043                           ;stkvar	_fmt @ sp[(-32)+-4]
  9044  01129A  0EDC               	movlw	-36
  9045  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9046  0112A2  0EDD               	movlw	-35
  9047  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9048  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9049  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9050  0112B6                     	if	0	;tblptru may be non-zero
  9051  0112B6                     	endif
  9052  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9053  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9054  0112B8  6EF8               	movwf	tblptru,c
  9055  0112BA                     	endif
  9056  0112BA  0008               	tblrd		*
  9057  0112BC  50F5               	movf	tablat,w,c
  9058  0112BE  0A2A               	xorlw	42
  9059  0112C0  A4D8               	btfss	status,2,c
  9060  0112C2  D031               	goto	l10936
  9061                           
  9062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9063                           ;stkvar	_fmt @ sp[(-32)+-4]
  9064  0112C4  0EDC               	movlw	-36
  9065  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9066  0112CC  0EDD               	movlw	-35
  9067  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9068  0112D4  2ADE               	incf	postinc2,f,c
  9069  0112D6  0E00               	movlw	0
  9070  0112D8  22DD               	addwfc	postdec2,f,c
  9071                           
  9072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9073                           ;stkvar	_ap @ sp[(-32)+-6]
  9074  0112DA  0EDA               	movlw	-38
  9075  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9076  0112E2  0EDB               	movlw	-37
  9077  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9078  0112EA  0E02               	movlw	2
  9079  0112EC  5EDE               	subwf	postinc2,f,c
  9080  0112EE  0E00               	movlw	0
  9081  0112F0  5ADD               	subwfb	postdec2,f,c
  9082  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9083  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9084  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9085  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9086  01130A  006F FF78  F024    	movff	postinc2,_width
  9087  011310  006F FF74  F025    	movff	postdec2,_width+1
  9088                           
  9089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9090  011316  AE25               	btfss	(_width+1)^0,7,c
  9091  011318  D066               	goto	u10490
  9092                           
  9093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9094  01131A  8028               	bsf	_flags^0,0,c
  9095                           
  9096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  9097  01131C  6C24               	negf	_width^0,c
  9098  01131E  1E25               	comf	(_width+1)^0,f,c
  9099  011320  B0D8               	btfsc	status,0,c
  9100  011322  2A25               	incf	(_width+1)^0,f,c
  9101  011324  D060               	goto	u10490
  9102  011326                     l10936:
  9103                           
  9104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  9105                           ;stkvar	_fmt @ sp[(-32)+-4]
  9106  011326  0EDC               	movlw	-36
  9107  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  9108  01132E  0EDD               	movlw	-35
  9109  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  9110  011336  006F FF78  F00B    	movff	postinc2,btemp+10
  9111  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
  9112  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9113  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
  9114  01134E  EC5D  F0AE         	call	_atoi	;wreg free
  9115  011352  0060  F004  F024   	movff	btemp,_width
  9116  011358  0060  F008  F025   	movff	btemp+1,_width+1
  9117                           
  9118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9119  01135E  D00B               	goto	l10940
  9120  011360                     l10938:
  9121                           
  9122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  9123                           ;stkvar	_fmt @ sp[(-32)+-4]
  9124  011360  0EDC               	movlw	-36
  9125  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  9126  011368  0EDD               	movlw	-35
  9127  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9128  011370  2ADE               	incf	postinc2,f,c
  9129  011372  0E00               	movlw	0
  9130  011374  22DD               	addwfc	postdec2,f,c
  9131  011376                     l10940:
  9132  011376  0ED0               	movlw	208
  9133  011378  6E0B               	movwf	(btemp+10)^0,c
  9134  01137A  0EFF               	movlw	255
  9135  01137C  6E0C               	movwf	(btemp+11)^0,c
  9136                           
  9137                           ;stkvar	_fmt @ sp[(-32)+-4]
  9138  01137E  0EDC               	movlw	-36
  9139  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9140  011386  0EDD               	movlw	-35
  9141  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9142  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9143  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  9144  01139A                     	if	0	;tblptru may be non-zero
  9145  01139A                     	endif
  9146  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9147  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  9148  01139C  6EF8               	movwf	tblptru,c
  9149  01139E                     	endif
  9150  01139E  0008               	tblrd		*
  9151  0113A0  50F5               	movf	tablat,w,c
  9152  0113A2  6E09               	movwf	(btemp+8)^0,c
  9153  0113A4  6A0A               	clrf	(btemp+9)^0,c
  9154  0113A6  500B               	movf	(btemp+10)^0,w,c
  9155  0113A8  2609               	addwf	(btemp+8)^0,f,c
  9156  0113AA  500C               	movf	(btemp+11)^0,w,c
  9157  0113AC  220A               	addwfc	(btemp+9)^0,f,c
  9158  0113AE  500A               	movf	(btemp+9)^0,w,c
  9159  0113B0  E106               	bnz	u10470
  9160  0113B2  0E0A               	movlw	10
  9161  0113B4  5C09               	subwf	(btemp+8)^0,w,c
  9162  0113B6  B0D8               	btfsc	status,0,c
  9163  0113B8  D002               	goto	u10470
  9164  0113BA  0E01               	movlw	1
  9165  0113BC  D001               	goto	u10480
  9166  0113BE                     u10470:
  9167  0113BE  0E00               	movlw	0
  9168  0113C0                     u10480:
  9169  0113C0  6E0B               	movwf	(btemp+10)^0,c
  9170  0113C2  6A0C               	clrf	(btemp+11)^0,c
  9171                           
  9172                           ;stkvar	_vfpfcnvrt$5117 @ sp[(-32)+4]
  9173  0113C4  0EE4               	movlw	-28
  9174  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9175  0113CC  0EE5               	movlw	-27
  9176  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  9177                           
  9178                           ;stkvar	_vfpfcnvrt$5117 @ sp[(-32)+4]
  9179  0113D4  0EE4               	movlw	-28
  9180  0113D6  006F FF8C  F001    	movff	plusw1,btemp
  9181  0113DC  0EE5               	movlw	-27
  9182  0113DE  50E3               	movf	plusw1,w,c
  9183  0113E0  1001               	iorwf	btemp^0,w,c
  9184  0113E2  A4D8               	btfss	status,2,c
  9185  0113E4  D7BD               	goto	l10938
  9186  0113E6                     u10490:
  9187                           
  9188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  9189                           ;stkvar	_fmt @ sp[(-32)+-4]
  9190  0113E6  0EDC               	movlw	-36
  9191  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9192  0113EE  0EDD               	movlw	-35
  9193  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9194  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9195  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9196  011402                     	if	0	;tblptru may be non-zero
  9197  011402                     	endif
  9198  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9199  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  9200  011404  6EF8               	movwf	tblptru,c
  9201  011406                     	endif
  9202  011406  0008               	tblrd		*
  9203  011408  50F5               	movf	tablat,w,c
  9204  01140A  0A2E               	xorlw	46
  9205  01140C  A4D8               	btfss	status,2,c
  9206  01140E  D0AC               	goto	u10540
  9207                           
  9208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  9209  011410  6A26               	clrf	_prec^0,c
  9210  011412  6A27               	clrf	(_prec+1)^0,c
  9211                           
  9212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  9213                           ;stkvar	_fmt @ sp[(-32)+-4]
  9214  011414  0EDC               	movlw	-36
  9215  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  9216  01141C  0EDD               	movlw	-35
  9217  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9218  011424  2ADE               	incf	postinc2,f,c
  9219  011426  0E00               	movlw	0
  9220  011428  22DD               	addwfc	postdec2,f,c
  9221                           
  9222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  9223                           ;stkvar	_fmt @ sp[(-32)+-4]
  9224  01142A  0EDC               	movlw	-36
  9225  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9226  011432  0EDD               	movlw	-35
  9227  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  9228  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9229  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  9230  011446                     	if	0	;tblptru may be non-zero
  9231  011446                     	endif
  9232  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9233  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  9234  011448  6EF8               	movwf	tblptru,c
  9235  01144A                     	endif
  9236  01144A  0008               	tblrd		*
  9237  01144C  50F5               	movf	tablat,w,c
  9238  01144E  0A2A               	xorlw	42
  9239  011450  A4D8               	btfss	status,2,c
  9240  011452  D02A               	goto	l10958
  9241                           
  9242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  9243                           ;stkvar	_fmt @ sp[(-32)+-4]
  9244  011454  0EDC               	movlw	-36
  9245  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  9246  01145C  0EDD               	movlw	-35
  9247  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9248  011464  2ADE               	incf	postinc2,f,c
  9249  011466  0E00               	movlw	0
  9250  011468  22DD               	addwfc	postdec2,f,c
  9251                           
  9252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  9253                           ;stkvar	_ap @ sp[(-32)+-6]
  9254  01146A  0EDA               	movlw	-38
  9255  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9256  011472  0EDB               	movlw	-37
  9257  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  9258  01147A  0E02               	movlw	2
  9259  01147C  5EDE               	subwf	postinc2,f,c
  9260  01147E  0E00               	movlw	0
  9261  011480  5ADD               	subwfb	postdec2,f,c
  9262  011482  006F FF78  F00B    	movff	postinc2,btemp+10
  9263  011488  006F FF74  F00C    	movff	postdec2,btemp+11
  9264  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9265  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9266  01149A  006F FF78  F026    	movff	postinc2,_prec
  9267  0114A0  006F FF74  F027    	movff	postdec2,_prec+1
  9268                           
  9269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  9270  0114A6  D060               	goto	u10540
  9271  0114A8                     l10958:
  9272                           
  9273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  9274                           ;stkvar	_fmt @ sp[(-32)+-4]
  9275  0114A8  0EDC               	movlw	-36
  9276  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9277  0114B0  0EDD               	movlw	-35
  9278  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9279  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
  9280  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
  9281  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9282  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
  9283  0114D0  EC5D  F0AE         	call	_atoi	;wreg free
  9284  0114D4  0060  F004  F026   	movff	btemp,_prec
  9285  0114DA  0060  F008  F027   	movff	btemp+1,_prec+1
  9286                           
  9287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9288  0114E0  D00B               	goto	l10962
  9289  0114E2                     l10960:
  9290                           
  9291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  9292                           ;stkvar	_fmt @ sp[(-32)+-4]
  9293  0114E2  0EDC               	movlw	-36
  9294  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9295  0114EA  0EDD               	movlw	-35
  9296  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9297  0114F2  2ADE               	incf	postinc2,f,c
  9298  0114F4  0E00               	movlw	0
  9299  0114F6  22DD               	addwfc	postdec2,f,c
  9300  0114F8                     l10962:
  9301  0114F8  0ED0               	movlw	208
  9302  0114FA  6E0B               	movwf	(btemp+10)^0,c
  9303  0114FC  0EFF               	movlw	255
  9304  0114FE  6E0C               	movwf	(btemp+11)^0,c
  9305                           
  9306                           ;stkvar	_fmt @ sp[(-32)+-4]
  9307  011500  0EDC               	movlw	-36
  9308  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  9309  011508  0EDD               	movlw	-35
  9310  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9311  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  9312  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  9313  01151C                     	if	0	;tblptru may be non-zero
  9314  01151C                     	endif
  9315  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9316  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  9317  01151E  6EF8               	movwf	tblptru,c
  9318  011520                     	endif
  9319  011520  0008               	tblrd		*
  9320  011522  50F5               	movf	tablat,w,c
  9321  011524  6E09               	movwf	(btemp+8)^0,c
  9322  011526  6A0A               	clrf	(btemp+9)^0,c
  9323  011528  500B               	movf	(btemp+10)^0,w,c
  9324  01152A  2609               	addwf	(btemp+8)^0,f,c
  9325  01152C  500C               	movf	(btemp+11)^0,w,c
  9326  01152E  220A               	addwfc	(btemp+9)^0,f,c
  9327  011530  500A               	movf	(btemp+9)^0,w,c
  9328  011532  E106               	bnz	u10520
  9329  011534  0E0A               	movlw	10
  9330  011536  5C09               	subwf	(btemp+8)^0,w,c
  9331  011538  B0D8               	btfsc	status,0,c
  9332  01153A  D002               	goto	u10520
  9333  01153C  0E01               	movlw	1
  9334  01153E  D001               	goto	u10530
  9335  011540                     u10520:
  9336  011540  0E00               	movlw	0
  9337  011542                     u10530:
  9338  011542  6E0B               	movwf	(btemp+10)^0,c
  9339  011544  6A0C               	clrf	(btemp+11)^0,c
  9340                           
  9341                           ;stkvar	_vfpfcnvrt$5118 @ sp[(-32)+0]
  9342  011546  0EE0               	movlw	-32
  9343  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9344  01154E  0EE1               	movlw	-31
  9345  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
  9346                           
  9347                           ;stkvar	_vfpfcnvrt$5118 @ sp[(-32)+0]
  9348  011556  0EE0               	movlw	-32
  9349  011558  006F FF8C  F001    	movff	plusw1,btemp
  9350  01155E  0EE1               	movlw	-31
  9351  011560  50E3               	movf	plusw1,w,c
  9352  011562  1001               	iorwf	btemp^0,w,c
  9353  011564  A4D8               	btfss	status,2,c
  9354  011566  D7BD               	goto	l10960
  9355  011568                     u10540:
  9356                           
  9357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  9358                           ;stkvar	_fmt @ sp[(-32)+-4]
  9359  011568  0EDC               	movlw	-36
  9360  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9361  011570  0EDD               	movlw	-35
  9362  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  9363  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  9364  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9365  011584                     	if	0	;tblptru may be non-zero
  9366  011584                     	endif
  9367  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9368  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  9369  011586  6EF8               	movwf	tblptru,c
  9370  011588                     	endif
  9371  011588  0008               	tblrd		*
  9372  01158A  50F5               	movf	tablat,w,c
  9373  01158C  6EE6               	movwf	postinc1,c
  9374  01158E  0E00               	movlw	0
  9375  011590  6EE6               	movwf	postinc1,c
  9376  011592  EC26  F0C3         	call	_tolower	;wreg free
  9377                           
  9378                           ;stkvar	_ct @ sp[(-32)+26]
  9379  011596  0EFA               	movlw	-6
  9380  011598  0060  F007  FFE3   	movff	btemp,plusw1
  9381                           
  9382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  9383                           ;stkvar	_ct @ sp[(-32)+26]
  9384  01159E  0EFA               	movlw	-6
  9385  0115A0  50E3               	movf	plusw1,w,c
  9386  0115A2  B4D8               	btfsc	status,2,c
  9387  0115A4  D05B               	goto	l10978
  9388                           
  9389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  9390                           ;stkvar	_ct @ sp[(-32)+26]
  9391  0115A6  0EFB               	movlw	251
  9392  0115A8  24E1               	addwf	fsr1l,w,c
  9393  0115AA  6ED9               	movwf	fsr2l,c
  9394  0115AC  0EFF               	movlw	255
  9395  0115AE  20E2               	addwfc	fsr1h,w,c
  9396  0115B0  6EDA               	movwf	fsr2h,c
  9397                           
  9398                           ;stkvar	_fmt @ sp[(-32)+-4]
  9399  0115B2  0EDC               	movlw	-36
  9400  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9401  0115BA  0EDD               	movlw	-35
  9402  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9403  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
  9404  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
  9405  0115CE  0E01               	movlw	1
  9406  0115D0  260B               	addwf	(btemp+10)^0,f,c
  9407  0115D2  0E00               	movlw	0
  9408  0115D4  220C               	addwfc	(btemp+11)^0,f,c
  9409  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9410  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9411  0115E2                     	if	0	;tblptru may be non-zero
  9412  0115E2                     	endif
  9413  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9414  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9415  0115E4  6EF8               	movwf	tblptru,c
  9416  0115E6                     	endif
  9417  0115E6  0008               	tblrd		*
  9418  0115E8  50F5               	movf	tablat,w,c
  9419  0115EA  6EE6               	movwf	postinc1,c
  9420  0115EC  0E00               	movlw	0
  9421  0115EE  6EE6               	movwf	postinc1,c
  9422  0115F0  EC26  F0C3         	call	_tolower	;wreg free
  9423  0115F4  5001               	movf	btemp^0,w,c
  9424  0115F6  6EDF               	movwf	indf2,c
  9425                           
  9426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9427                           ;stkvar	_ct @ sp[(-32)+26]
  9428  0115F8  0EFB               	movlw	251
  9429  0115FA  24E1               	addwf	fsr1l,w,c
  9430  0115FC  6ED9               	movwf	fsr2l,c
  9431  0115FE  0EFF               	movlw	255
  9432  011600  20E2               	addwfc	fsr1h,w,c
  9433  011602  6EDA               	movwf	fsr2h,c
  9434  011604  50DF               	movf	indf2,w,c
  9435  011606  B4D8               	btfsc	status,2,c
  9436  011608  D029               	goto	l10978
  9437                           
  9438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9439                           ;stkvar	_ct @ sp[(-32)+26]
  9440  01160A  0EFC               	movlw	252
  9441  01160C  24E1               	addwf	fsr1l,w,c
  9442  01160E  6ED9               	movwf	fsr2l,c
  9443  011610  0EFF               	movlw	255
  9444  011612  20E2               	addwfc	fsr1h,w,c
  9445  011614  6EDA               	movwf	fsr2h,c
  9446                           
  9447                           ;stkvar	_fmt @ sp[(-32)+-4]
  9448  011616  0EDC               	movlw	-36
  9449  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9450  01161E  0EDD               	movlw	-35
  9451  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9452  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
  9453  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
  9454  011632  0E02               	movlw	2
  9455  011634  260B               	addwf	(btemp+10)^0,f,c
  9456  011636  0E00               	movlw	0
  9457  011638  220C               	addwfc	(btemp+11)^0,f,c
  9458  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9459  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9460  011646                     	if	0	;tblptru may be non-zero
  9461  011646                     	endif
  9462  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9463  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9464  011648  6EF8               	movwf	tblptru,c
  9465  01164A                     	endif
  9466  01164A  0008               	tblrd		*
  9467  01164C  50F5               	movf	tablat,w,c
  9468  01164E  6EE6               	movwf	postinc1,c
  9469  011650  0E00               	movlw	0
  9470  011652  6EE6               	movwf	postinc1,c
  9471  011654  EC26  F0C3         	call	_tolower	;wreg free
  9472  011658  5001               	movf	btemp^0,w,c
  9473  01165A  6EDF               	movwf	indf2,c
  9474  01165C                     l10978:
  9475                           
  9476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9477                           ;stkvar	_fmt @ sp[(-32)+-4]
  9478  01165C  0EDC               	movlw	-36
  9479  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9480  011664  0EDD               	movlw	-35
  9481  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9482  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9483  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9484  011678                     	if	0	;tblptru may be non-zero
  9485  011678                     	endif
  9486  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9487  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9488  01167A  6EF8               	movwf	tblptru,c
  9489  01167C                     	endif
  9490  01167C  0008               	tblrd		*
  9491  01167E  50F5               	movf	tablat,w,c
  9492  011680  0A63               	xorlw	99
  9493  011682  A4D8               	btfss	status,2,c
  9494  011684  D036               	goto	l10988
  9495                           
  9496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9497                           ;stkvar	_fmt @ sp[(-32)+-4]
  9498  011686  0EDC               	movlw	-36
  9499  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9500  01168E  0EDD               	movlw	-35
  9501  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9502  011696  2ADE               	incf	postinc2,f,c
  9503  011698  0E00               	movlw	0
  9504  01169A  22DD               	addwfc	postdec2,f,c
  9505                           
  9506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9507                           ;stkvar	_ap @ sp[(-32)+-6]
  9508  01169C  0EDA               	movlw	-38
  9509  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9510  0116A4  0EDB               	movlw	-37
  9511  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9512  0116AC  0E02               	movlw	2
  9513  0116AE  5EDE               	subwf	postinc2,f,c
  9514  0116B0  0E00               	movlw	0
  9515  0116B2  5ADD               	subwfb	postdec2,f,c
  9516  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
  9517  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
  9518  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9519  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9520  0116CC  50DF               	movf	indf2,w,c
  9521  0116CE  6E0C               	movwf	(btemp+11)^0,c
  9522                           
  9523                           ;stkvar	_c @ sp[(-32)+31]
  9524  0116D0  0EFF               	movlw	-1
  9525  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9526                           
  9527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9528                           ;stkvar	_c @ sp[(-32)+31]
  9529  0116D8  0EFF               	movlw	-1
  9530  0116DA  50E3               	movf	plusw1,w,c
  9531  0116DC  6EE6               	movwf	postinc1,c
  9532                           
  9533                           ;stkvar	_fp @ sp[(-33)+-2]
  9534  0116DE  0EDD               	movlw	-35
  9535  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9536  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9537  0116EC  ECA0  F0C2         	call	_ctoa	;wreg free
  9538  0116F0  D343               	goto	l2228
  9539  0116F2                     l10988:
  9540                           
  9541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9542                           ;stkvar	_fmt @ sp[(-32)+-4]
  9543  0116F2  0EDC               	movlw	-36
  9544  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9545  0116FA  0EDD               	movlw	-35
  9546  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9547  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9548  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9549  01170E                     	if	0	;tblptru may be non-zero
  9550  01170E                     	endif
  9551  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9552  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9553  011710  6EF8               	movwf	tblptru,c
  9554  011712                     	endif
  9555  011712  0008               	tblrd		*
  9556  011714  50F5               	movf	tablat,w,c
  9557  011716  0A64               	xorlw	100
  9558  011718  B4D8               	btfsc	status,2,c
  9559  01171A  D015               	goto	u10590
  9560                           
  9561                           ;stkvar	_fmt @ sp[(-32)+-4]
  9562  01171C  0EDC               	movlw	-36
  9563  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9564  011724  0EDD               	movlw	-35
  9565  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9566  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9567  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9568  011738                     	if	0	;tblptru may be non-zero
  9569  011738                     	endif
  9570  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9571  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9572  01173A  6EF8               	movwf	tblptru,c
  9573  01173C                     	endif
  9574  01173C  0008               	tblrd		*
  9575  01173E  50F5               	movf	tablat,w,c
  9576  011740  0A69               	xorlw	105
  9577  011742  A4D8               	btfss	status,2,c
  9578  011744  D075               	goto	l11000
  9579  011746                     u10590:
  9580                           
  9581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9582                           ;stkvar	_fmt @ sp[(-32)+-4]
  9583  011746  0EDC               	movlw	-36
  9584  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9585  01174E  0EDD               	movlw	-35
  9586  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9587  011756  2ADE               	incf	postinc2,f,c
  9588  011758  0E00               	movlw	0
  9589  01175A  22DD               	addwfc	postdec2,f,c
  9590                           
  9591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9592                           ;stkvar	_ap @ sp[(-32)+-6]
  9593  01175C  0EDA               	movlw	-38
  9594  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9595  011764  0EDB               	movlw	-37
  9596  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9597  01176C  0E02               	movlw	2
  9598  01176E  5EDE               	subwf	postinc2,f,c
  9599  011770  0E00               	movlw	0
  9600  011772  5ADD               	subwfb	postdec2,f,c
  9601  011774  006F FF78  F00B    	movff	postinc2,btemp+10
  9602  01177A  006F FF74  F00C    	movff	postdec2,btemp+11
  9603  011780  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9604  011786  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9605  01178C  006F FF78  F00B    	movff	postinc2,btemp+10
  9606  011792  006F FF74  F00C    	movff	postdec2,btemp+11
  9607                           
  9608                           ;stkvar	_ll @ sp[(-32)+14]
  9609  011798  0EEE               	movlw	-18
  9610  01179A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9611  0117A0  0EEF               	movlw	-17
  9612  0117A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9613  0117A8  6A01               	clrf	btemp^0,c
  9614  0117AA  BEE3               	btfsc	plusw1,7,c
  9615  0117AC  6801               	setf	btemp^0,c
  9616  0117AE  0EF0               	movlw	-16
  9617  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
  9618  0117B6  0EF1               	movlw	-15
  9619  0117B8  0060  F007  FFE3   	movff	btemp,plusw1
  9620  0117BE  0EF2               	movlw	-14
  9621  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
  9622  0117C6  0EF3               	movlw	-13
  9623  0117C8  0060  F007  FFE3   	movff	btemp,plusw1
  9624  0117CE  0EF4               	movlw	-12
  9625  0117D0  0060  F007  FFE3   	movff	btemp,plusw1
  9626  0117D6  0EF5               	movlw	-11
  9627  0117D8  0060  F007  FFE3   	movff	btemp,plusw1
  9628                           
  9629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9630                           ;stkvar	_ll @ sp[(-32)+14]
  9631  0117DE  50E1               	movf	fsr1l,w,c
  9632  0117E0  0FEE               	addlw	-18
  9633  0117E2  6ED9               	movwf	fsr2l,c
  9634  0117E4  50E2               	movf	fsr1h,w,c
  9635  0117E6  6EDA               	movwf	fsr2h,c
  9636  0117E8  0EFF               	movlw	255
  9637  0117EA  22DA               	addwfc	fsr2h,f,c
  9638  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9639  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9640  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9641  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9642  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9643  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9644  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9645  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9646                           
  9647                           ;stkvar	_fp @ sp[(-40)+-2]
  9648  01181C  0ED6               	movlw	-42
  9649  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9650  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9651  01182A  EC08  F0A3         	call	_dtoa	;wreg free
  9652  01182E  D2A4               	goto	l2228
  9653  011830                     l11000:
  9654                           
  9655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9656                           ;stkvar	_ct @ sp[(-32)+26]
  9657  011830  0EFA               	movlw	-6
  9658  011832  006F FF8C  F001    	movff	plusw1,btemp
  9659  011838  0E66               	movlw	102
  9660  01183A  1801               	xorwf	btemp^0,w,c
  9661  01183C  A4D8               	btfss	status,2,c
  9662  01183E  D06E               	goto	l11012
  9663                           
  9664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9665                           ;stkvar	_fmt @ sp[(-32)+-4]
  9666  011840  0EDC               	movlw	-36
  9667  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9668  011848  0EDD               	movlw	-35
  9669  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9670  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9671  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9672  01185C                     	if	0	;tblptru may be non-zero
  9673  01185C                     	endif
  9674  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9675  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9676  01185E  6EF8               	movwf	tblptru,c
  9677  011860                     	endif
  9678                           
  9679                           ;stkvar	_c @ sp[(-32)+31]
  9680  011860  0008               	tblrd		*
  9681  011862  0EFF               	movlw	-1
  9682  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9683                           
  9684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9685                           ;stkvar	_fmt @ sp[(-32)+-4]
  9686  01186A  0EDC               	movlw	-36
  9687  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9688  011872  0EDD               	movlw	-35
  9689  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9690  01187A  2ADE               	incf	postinc2,f,c
  9691  01187C  0E00               	movlw	0
  9692  01187E  22DD               	addwfc	postdec2,f,c
  9693                           
  9694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9695                           ;stkvar	_ap @ sp[(-32)+-6]
  9696  011880  0EDA               	movlw	-38
  9697  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9698  011888  0EDB               	movlw	-37
  9699  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9700  011890  0E04               	movlw	4
  9701  011892  5EDE               	subwf	postinc2,f,c
  9702  011894  0E00               	movlw	0
  9703  011896  5ADD               	subwfb	postdec2,f,c
  9704  011898  006F FF78  F00B    	movff	postinc2,btemp+10
  9705  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
  9706  0118A4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9707  0118AA  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9708  0118B0  006F FF78  F009    	movff	postinc2,btemp+8
  9709  0118B6  006F FF78  F00A    	movff	postinc2,btemp+9
  9710  0118BC  006F FF78  F00B    	movff	postinc2,btemp+10
  9711  0118C2  006F FF78  F00C    	movff	postinc2,btemp+11
  9712                           
  9713                           ;stkvar	_f @ sp[(-32)+22]
  9714  0118C8  0EF6               	movlw	-10
  9715  0118CA  0060  F027  FFE3   	movff	btemp+8,plusw1
  9716  0118D0  0EF7               	movlw	-9
  9717  0118D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9718  0118D8  0EF8               	movlw	-8
  9719  0118DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9720  0118E0  0EF9               	movlw	-7
  9721  0118E2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9722  0118E8                     l11008:
  9723                           
  9724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9725                           ;stkvar	_c @ sp[(-32)+31]
  9726  0118E8  0EFF               	movlw	-1
  9727  0118EA  50E3               	movf	plusw1,w,c
  9728  0118EC  6EE6               	movwf	postinc1,c
  9729                           
  9730                           ;stkvar	_f @ sp[(-33)+22]
  9731  0118EE  0EF5               	movlw	-11
  9732  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9733  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9734  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9735  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9736                           
  9737                           ;stkvar	_fp @ sp[(-37)+-2]
  9738  011908  0ED9               	movlw	-39
  9739  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9740  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9741  011916  EC00  F080         	call	_efgtoa	;wreg free
  9742  01191A  D22E               	goto	l2228
  9743  01191C                     l11012:
  9744                           
  9745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9746  01191C  0E02               	movlw	2
  9747  01191E  6EE6               	movwf	postinc1,c
  9748  011920  0E00               	movlw	0
  9749  011922  6EE6               	movwf	postinc1,c
  9750  011924  0EF6               	movlw	low STR_54
  9751  011926  6EE6               	movwf	postinc1,c
  9752  011928  0EFF               	movlw	high STR_54
  9753  01192A  6EE6               	movwf	postinc1,c
  9754                           
  9755                           ;stkvar	_ct @ sp[(-36)+26]
  9756  01192C  0EF6               	movlw	246
  9757  01192E  24E1               	addwf	fsr1l,w,c
  9758  011930  6E01               	movwf	btemp^0,c
  9759  011932  0EFF               	movlw	255
  9760  011934  20E2               	addwfc	fsr1h,w,c
  9761  011936  6E02               	movwf	(btemp+1)^0,c
  9762  011938  0060  F007  FFE6   	movff	btemp,postinc1
  9763  01193E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9764  011944  ECC2  F0B2         	call	_strncmp	;wreg free
  9765  011948  5001               	movf	btemp^0,w,c
  9766  01194A  1002               	iorwf	(btemp+1)^0,w,c
  9767  01194C  A4D8               	btfss	status,2,c
  9768  01194E  D096               	goto	l11032
  9769                           
  9770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9771                           ;stkvar	_fmt @ sp[(-32)+-4]
  9772  011950  0EDC               	movlw	-36
  9773  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9774  011958  0EDD               	movlw	-35
  9775  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9776  011960  006F FF78  F00B    	movff	postinc2,btemp+10
  9777  011966  006F FF74  F00C    	movff	postdec2,btemp+11
  9778  01196C  0E01               	movlw	1
  9779  01196E  260B               	addwf	(btemp+10)^0,f,c
  9780  011970  0E00               	movlw	0
  9781  011972  220C               	addwfc	(btemp+11)^0,f,c
  9782  011974  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9783  01197A  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9784  011980                     	if	0	;tblptru may be non-zero
  9785  011980                     	endif
  9786  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9787  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9788  011982  6EF8               	movwf	tblptru,c
  9789  011984                     	endif
  9790                           
  9791                           ;stkvar	_c @ sp[(-32)+31]
  9792  011984  0008               	tblrd		*
  9793  011986  0EFF               	movlw	-1
  9794  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9795  01198E  0EBF               	movlw	191
  9796  011990  6E0B               	movwf	(btemp+10)^0,c
  9797  011992  0EFF               	movlw	255
  9798  011994  6E0C               	movwf	(btemp+11)^0,c
  9799                           
  9800                           ;stkvar	_fmt @ sp[(-32)+-4]
  9801  011996  0EDC               	movlw	-36
  9802  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9803  01199E  0EDD               	movlw	-35
  9804  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9805  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9806  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9807  0119B2                     	if	0	;tblptru may be non-zero
  9808  0119B2                     	endif
  9809  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9810  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9811  0119B4  6EF8               	movwf	tblptru,c
  9812  0119B6                     	endif
  9813  0119B6  0008               	tblrd		*
  9814  0119B8  50F5               	movf	tablat,w,c
  9815  0119BA  6E09               	movwf	(btemp+8)^0,c
  9816  0119BC  6A0A               	clrf	(btemp+9)^0,c
  9817  0119BE  500B               	movf	(btemp+10)^0,w,c
  9818  0119C0  2609               	addwf	(btemp+8)^0,f,c
  9819  0119C2  500C               	movf	(btemp+11)^0,w,c
  9820  0119C4  220A               	addwfc	(btemp+9)^0,f,c
  9821  0119C6  500A               	movf	(btemp+9)^0,w,c
  9822  0119C8  E106               	bnz	u10620
  9823  0119CA  0E1A               	movlw	26
  9824  0119CC  5C09               	subwf	(btemp+8)^0,w,c
  9825  0119CE  B0D8               	btfsc	status,0,c
  9826  0119D0  D002               	goto	u10620
  9827  0119D2  0E01               	movlw	1
  9828  0119D4  D001               	goto	u10630
  9829  0119D6                     u10620:
  9830  0119D6  0E00               	movlw	0
  9831  0119D8                     u10630:
  9832  0119D8  6E0B               	movwf	(btemp+10)^0,c
  9833  0119DA  6A0C               	clrf	(btemp+11)^0,c
  9834                           
  9835                           ;stkvar	_vfpfcnvrt$5124 @ sp[(-32)+2]
  9836  0119DC  0EE2               	movlw	-30
  9837  0119DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9838  0119E4  0EE3               	movlw	-29
  9839  0119E6  0060  F033  FFE3   	movff	btemp+11,plusw1
  9840                           
  9841                           ;stkvar	_vfpfcnvrt$5124 @ sp[(-32)+2]
  9842  0119EC  0EE2               	movlw	-30
  9843  0119EE  006F FF8C  F001    	movff	plusw1,btemp
  9844  0119F4  0EE3               	movlw	-29
  9845  0119F6  50E3               	movf	plusw1,w,c
  9846  0119F8  1001               	iorwf	btemp^0,w,c
  9847                           
  9848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9849                           ;stkvar	_ap @ sp[(-32)+-6]
  9850                           
  9851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9852                           
  9853                           ;stkvar	_f @ sp[(-32)+22]
  9854                           
  9855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9856                           ;stkvar	_ap @ sp[(-32)+-6]
  9857  0119FA  0EDA               	movlw	-38
  9858  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9859  011A02  0EDB               	movlw	-37
  9860  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9861  011A0A  0E04               	movlw	4
  9862  011A0C  5EDE               	subwf	postinc2,f,c
  9863  011A0E  0E00               	movlw	0
  9864  011A10  5ADD               	subwfb	postdec2,f,c
  9865  011A12  006F FF78  F00B    	movff	postinc2,btemp+10
  9866  011A18  006F FF74  F00C    	movff	postdec2,btemp+11
  9867  011A1E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9868  011A24  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9869  011A2A  006F FF78  F009    	movff	postinc2,btemp+8
  9870  011A30  006F FF78  F00A    	movff	postinc2,btemp+9
  9871  011A36  006F FF78  F00B    	movff	postinc2,btemp+10
  9872  011A3C  006F FF78  F00C    	movff	postinc2,btemp+11
  9873                           
  9874                           ;stkvar	_f @ sp[(-32)+22]
  9875  011A42  0EF6               	movlw	-10
  9876  011A44  0060  F027  FFE3   	movff	btemp+8,plusw1
  9877  011A4A  0EF7               	movlw	-9
  9878  011A4C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9879  011A52  0EF8               	movlw	-8
  9880  011A54  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9881  011A5A  0EF9               	movlw	-7
  9882  011A5C  0060  F033  FFE3   	movff	btemp+11,plusw1
  9883                           
  9884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9885                           ;stkvar	_fmt @ sp[(-32)+-4]
  9886  011A62  0EDC               	movlw	-36
  9887  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9888  011A6A  0EDD               	movlw	-35
  9889  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9890  011A72  0E02               	movlw	2
  9891  011A74  26DE               	addwf	postinc2,f,c
  9892  011A76  0E00               	movlw	0
  9893  011A78  22DD               	addwfc	postdec2,f,c
  9894  011A7A  D736               	goto	l11008
  9895  011A7C                     l11032:
  9896                           
  9897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9898                           ;stkvar	_fmt @ sp[(-32)+-4]
  9899  011A7C  0EDC               	movlw	-36
  9900  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9901  011A84  0EDD               	movlw	-35
  9902  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9903  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9904  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9905  011A98                     	if	0	;tblptru may be non-zero
  9906  011A98                     	endif
  9907  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9908  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9909  011A9A  6EF8               	movwf	tblptru,c
  9910  011A9C                     	endif
  9911  011A9C  0008               	tblrd		*
  9912  011A9E  50F5               	movf	tablat,w,c
  9913  011AA0  0A73               	xorlw	115
  9914  011AA2  A4D8               	btfss	status,2,c
  9915  011AA4  D042               	goto	l11042
  9916                           
  9917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9918                           ;stkvar	_fmt @ sp[(-32)+-4]
  9919  011AA6  0EDC               	movlw	-36
  9920  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9921  011AAE  0EDD               	movlw	-35
  9922  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9923  011AB6  2ADE               	incf	postinc2,f,c
  9924  011AB8  0E00               	movlw	0
  9925  011ABA  22DD               	addwfc	postdec2,f,c
  9926                           
  9927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9928                           ;stkvar	_ap @ sp[(-32)+-6]
  9929  011ABC  0EDA               	movlw	-38
  9930  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9931  011AC4  0EDB               	movlw	-37
  9932  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9933  011ACC  0E02               	movlw	2
  9934  011ACE  5EDE               	subwf	postinc2,f,c
  9935  011AD0  0E00               	movlw	0
  9936  011AD2  5ADD               	subwfb	postdec2,f,c
  9937  011AD4  006F FF78  F00B    	movff	postinc2,btemp+10
  9938  011ADA  006F FF74  F00C    	movff	postdec2,btemp+11
  9939  011AE0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9940  011AE6  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9941  011AEC  006F FF78  F00B    	movff	postinc2,btemp+10
  9942  011AF2  006F FF74  F00C    	movff	postdec2,btemp+11
  9943                           
  9944                           ;stkvar	_cp @ sp[(-32)+29]
  9945  011AF8  0EFE               	movlw	-2
  9946  011AFA  0060  F033  FFE3   	movff	btemp+11,plusw1
  9947  011B00  0EFD               	movlw	-3
  9948  011B02  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9949                           
  9950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9951                           ;stkvar	_cp @ sp[(-32)+29]
  9952  011B08  0EFD               	movlw	-3
  9953  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9954  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9955                           
  9956                           ;stkvar	_fp @ sp[(-34)+-2]
  9957  011B16  0EDC               	movlw	-36
  9958  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9959  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9960  011B24  ECBE  F0AB         	call	_stoa	;wreg free
  9961  011B28  D127               	goto	l2228
  9962  011B2A                     l11042:
  9963                           
  9964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9965                           ;stkvar	_fmt @ sp[(-32)+-4]
  9966  011B2A  0EDC               	movlw	-36
  9967  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9968  011B32  0EDD               	movlw	-35
  9969  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9970  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9971  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9972  011B46                     	if	0	;tblptru may be non-zero
  9973  011B46                     	endif
  9974  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9975  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9976  011B48  6EF8               	movwf	tblptru,c
  9977  011B4A                     	endif
  9978  011B4A  0008               	tblrd		*
  9979  011B4C  50F5               	movf	tablat,w,c
  9980  011B4E  0A78               	xorlw	120
  9981  011B50  B4D8               	btfsc	status,2,c
  9982  011B52  D015               	goto	u10670
  9983                           
  9984                           ;stkvar	_fmt @ sp[(-32)+-4]
  9985  011B54  0EDC               	movlw	-36
  9986  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9987  011B5C  0EDD               	movlw	-35
  9988  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9989  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9990  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9991  011B70                     	if	0	;tblptru may be non-zero
  9992  011B70                     	endif
  9993  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9994  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9995  011B72  6EF8               	movwf	tblptru,c
  9996  011B74                     	endif
  9997  011B74  0008               	tblrd		*
  9998  011B76  50F5               	movf	tablat,w,c
  9999  011B78  0A58               	xorlw	88
 10000  011B7A  A4D8               	btfss	status,2,c
 10001  011B7C  D094               	goto	l11056
 10002  011B7E                     u10670:
 10003                           
 10004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 10005                           ;stkvar	_fmt @ sp[(-32)+-4]
 10006  011B7E  0EDC               	movlw	-36
 10007  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
 10008  011B86  0EDD               	movlw	-35
 10009  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
 10010  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10011  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
 10012  011B9A                     	if	0	;tblptru may be non-zero
 10013  011B9A                     	endif
 10014  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10015  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 10016  011B9C  6EF8               	movwf	tblptru,c
 10017  011B9E                     	endif
 10018                           
 10019                           ;stkvar	_c @ sp[(-32)+31]
 10020  011B9E  0008               	tblrd		*
 10021  011BA0  0EFF               	movlw	-1
 10022  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
 10023                           
 10024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 10025                           ;stkvar	_fmt @ sp[(-32)+-4]
 10026  011BA8  0EDC               	movlw	-36
 10027  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10028  011BB0  0EDD               	movlw	-35
 10029  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10030  011BB8  2ADE               	incf	postinc2,f,c
 10031  011BBA  0E00               	movlw	0
 10032  011BBC  22DD               	addwfc	postdec2,f,c
 10033                           
 10034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10035                           ;stkvar	_ap @ sp[(-32)+-6]
 10036  011BBE  0EDA               	movlw	-38
 10037  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10038  011BC6  0EDB               	movlw	-37
 10039  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10040  011BCE  0E02               	movlw	2
 10041  011BD0  5EDE               	subwf	postinc2,f,c
 10042  011BD2  0E00               	movlw	0
 10043  011BD4  5ADD               	subwfb	postdec2,f,c
 10044  011BD6  006F FF78  F00B    	movff	postinc2,btemp+10
 10045  011BDC  006F FF74  F00C    	movff	postdec2,btemp+11
 10046  011BE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10047  011BE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10048  011BEE  006F FF78  F00B    	movff	postinc2,btemp+10
 10049  011BF4  006F FF74  F00C    	movff	postdec2,btemp+11
 10050  011BFA  500B               	movf	(btemp+10)^0,w,c
 10051  011BFC  6E11               	movwf	(btemp+16)^0,c
 10052  011BFE  500C               	movf	(btemp+11)^0,w,c
 10053  011C00  6E12               	movwf	(btemp+17)^0,c
 10054  011C02  6A13               	clrf	(btemp+18)^0,c
 10055  011C04  6A14               	clrf	(btemp+19)^0,c
 10056  011C06  6A15               	clrf	(btemp+20)^0,c
 10057  011C08  6A16               	clrf	(btemp+21)^0,c
 10058  011C0A  6A17               	clrf	(btemp+22)^0,c
 10059  011C0C  6A18               	clrf	(btemp+23)^0,c
 10060                           
 10061                           ;stkvar	_llu @ sp[(-32)+6]
 10062  011C0E  0EE6               	movlw	-26
 10063  011C10  0060  F047  FFE3   	movff	btemp+16,plusw1
 10064  011C16  0EE7               	movlw	-25
 10065  011C18  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10066  011C1E  0EE8               	movlw	-24
 10067  011C20  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10068  011C26  0EE9               	movlw	-23
 10069  011C28  0060  F053  FFE3   	movff	btemp+19,plusw1
 10070  011C2E  0EEA               	movlw	-22
 10071  011C30  0060  F057  FFE3   	movff	btemp+20,plusw1
 10072  011C36  0EEB               	movlw	-21
 10073  011C38  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10074  011C3E  0EEC               	movlw	-20
 10075  011C40  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10076  011C46  0EED               	movlw	-19
 10077  011C48  0060  F063  FFE3   	movff	btemp+23,plusw1
 10078                           
 10079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 10080                           ;stkvar	_c @ sp[(-32)+31]
 10081  011C4E  0EFF               	movlw	-1
 10082  011C50  50E3               	movf	plusw1,w,c
 10083  011C52  6EE6               	movwf	postinc1,c
 10084                           
 10085                           ;stkvar	_llu @ sp[(-33)+6]
 10086  011C54  50E1               	movf	fsr1l,w,c
 10087  011C56  0FE5               	addlw	-27
 10088  011C58  6ED9               	movwf	fsr2l,c
 10089  011C5A  50E2               	movf	fsr1h,w,c
 10090  011C5C  6EDA               	movwf	fsr2h,c
 10091  011C5E  0EFF               	movlw	255
 10092  011C60  22DA               	addwfc	fsr2h,f,c
 10093  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
 10094  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
 10095  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 10096  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
 10097  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 10098  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
 10099  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
 10100  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 10101                           
 10102                           ;stkvar	_fp @ sp[(-41)+-2]
 10103  011C92  0ED5               	movlw	-43
 10104  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
 10105  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 10106  011CA0  EC48  F0A5         	call	_xtoa	;wreg free
 10107  011CA4  D069               	goto	l2228
 10108  011CA6                     l11056:
 10109                           
 10110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10111                           ;stkvar	_fmt @ sp[(-32)+-4]
 10112  011CA6  0EDC               	movlw	-36
 10113  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10114  011CAE  0EDD               	movlw	-35
 10115  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10116  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10117  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10118  011CC2                     	if	0	;tblptru may be non-zero
 10119  011CC2                     	endif
 10120  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10121  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 10122  011CC4  6EF8               	movwf	tblptru,c
 10123  011CC6                     	endif
 10124  011CC6  0008               	tblrd		*
 10125  011CC8  50F5               	movf	tablat,w,c
 10126  011CCA  0A25               	xorlw	37
 10127  011CCC  A4D8               	btfss	status,2,c
 10128  011CCE  D01A               	goto	l11066
 10129                           
 10130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10131                           ;stkvar	_fmt @ sp[(-32)+-4]
 10132  011CD0  0EDC               	movlw	-36
 10133  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10134  011CD8  0EDD               	movlw	-35
 10135  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10136  011CE0  2ADE               	incf	postinc2,f,c
 10137  011CE2  0E00               	movlw	0
 10138  011CE4  22DD               	addwfc	postdec2,f,c
 10139                           
 10140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10141                           ;stkvar	_fp @ sp[(-32)+-2]
 10142  011CE6  0EDE               	movlw	-34
 10143  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10144  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10145  011CF4  0E25               	movlw	37
 10146  011CF6  6EE6               	movwf	postinc1,c
 10147  011CF8  0E00               	movlw	0
 10148  011CFA  6EE6               	movwf	postinc1,c
 10149  011CFC  EC45  F0B9         	call	_fputc	;wreg free
 10150  011D00                     l11062:
 10151                           
 10152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10153  011D00  0E01               	movlw	1
 10154  011D02  D00C               	goto	L7
 10155  011D04                     l11066:
 10156                           
 10157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10158                           ;stkvar	_fmt @ sp[(-32)+-4]
 10159  011D04  0EDC               	movlw	-36
 10160  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10161  011D0C  0EDD               	movlw	-35
 10162  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10163  011D14  2ADE               	incf	postinc2,f,c
 10164  011D16  0E00               	movlw	0
 10165  011D18  22DD               	addwfc	postdec2,f,c
 10166                           
 10167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10168  011D1A  0E00               	movlw	0
 10169  011D1C                     L7:
 10170  011D1C  6E01               	movwf	btemp^0,c
 10171  011D1E  0E00               	movlw	0
 10172  011D20  6E02               	movwf	(btemp+1)^0,c
 10173  011D22  D02A               	goto	l2228
 10174  011D24                     l11072:
 10175                           
 10176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10177                           ;stkvar	_fp @ sp[(-32)+-2]
 10178  011D24  0EDE               	movlw	-34
 10179  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
 10180  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 10181                           
 10182                           ;stkvar	_fmt @ sp[(-34)+-4]
 10183  011D32  0EDA               	movlw	-38
 10184  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
 10185  011D3A  0EDB               	movlw	-37
 10186  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10187  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
 10188  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
 10189  011D4E                     	if	0	;tblptru may be non-zero
 10190  011D4E                     	endif
 10191  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10192  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 10193  011D50  6EF8               	movwf	tblptru,c
 10194  011D52                     	endif
 10195  011D52  0008               	tblrd		*
 10196  011D54  50F5               	movf	tablat,w,c
 10197  011D56  6EE6               	movwf	postinc1,c
 10198  011D58  0E00               	movlw	0
 10199  011D5A  6EE6               	movwf	postinc1,c
 10200  011D5C  EC45  F0B9         	call	_fputc	;wreg free
 10201                           
 10202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10203                           ;stkvar	_fmt @ sp[(-32)+-4]
 10204  011D60  0EDC               	movlw	-36
 10205  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 10206  011D68  0EDD               	movlw	-35
 10207  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10208  011D70  2ADE               	incf	postinc2,f,c
 10209  011D72  0E00               	movlw	0
 10210  011D74  22DD               	addwfc	postdec2,f,c
 10211  011D76  D7C4               	goto	l11062
 10212  011D78                     l2228:
 10213                           
 10214                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10215  011D78  0EDA               	movlw	218
 10216  011D7A  26E1               	addwf	fsr1l,f,c
 10217  011D7C  0EFF               	movlw	255
 10218  011D7E  22E2               	addwfc	fsr1h,f,c
 10219  011D80  0012               	return		;funcret
 10220  011D82                     __end_of_vfpfcnvrt:
 10221                           	opt callstack 0
 10222                           
 10223 ;; *************** function _xtoa *****************
 10224 ;; Defined at:
 10225 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10228 ;;		 -> f(6), NULL(0), 
 10229 ;;  d               8  [STACK] unsigned long long 
 10230 ;;  x               1  [STACK] unsigned char 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;  n               8  [STACK] unsigned long long 
 10233 ;;  c               2  [STACK] int 
 10234 ;;  i               2  [STACK] int 
 10235 ;;  w               2  [STACK] int 
 10236 ;;  p               2  [STACK] int 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  2  [STACK] int 
 10239 ;; Registers used:
 10240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;Total ram usage:        0 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:   12
 10253 ;; This function calls:
 10254 ;;		_isalpha
 10255 ;;		_isupper
 10256 ;;		_pad
 10257 ;;		_toupper
 10258 ;; This function is called by:
 10259 ;;		_vfpfcnvrt
 10260 ;; This function uses a reentrant model
 10261 ;;
 10262                           
 10263                           	psect	text43
 10264  014A90                     __ptext43:
 10265                           	opt callstack 0
 10266  014A90                     _xtoa:
 10267                           	opt callstack 0
 10268                           
 10269                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10270  014A90  0E14               	movlw	20
 10271  014A92  26E1               	addwf	fsr1l,f,c
 10272  014A94  0E00               	movlw	0
 10273  014A96  22E2               	addwfc	fsr1h,f,c
 10274                           
 10275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 10276                           
 10277                           ;incstack = 0
 10278  014A98  AE27               	btfss	(_prec+1)^0,7,c
 10279                           
 10280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 10281  014A9A  9228               	bcf	_flags^0,1,c
 10282                           
 10283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 10284  014A9C  BE27               	btfsc	(_prec+1)^0,7,c
 10285  014A9E  D005               	goto	u10270
 10286  014AA0  5027               	movf	(_prec+1)^0,w,c
 10287  014AA2  E110               	bnz	l10854
 10288  014AA4  0426               	decf	_prec^0,w,c
 10289  014AA6  B0D8               	btfsc	status,0,c
 10290  014AA8  D00D               	goto	l10854
 10291  014AAA                     u10270:
 10292  014AAA  0E01               	movlw	1
 10293  014AAC  6E0B               	movwf	(btemp+10)^0,c
 10294  014AAE  0E00               	movlw	0
 10295  014AB0  6E0C               	movwf	(btemp+11)^0,c
 10296                           
 10297                           ;stkvar	_p @ sp[(-20)+18]
 10298  014AB2  0EFE               	movlw	-2
 10299  014AB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10300  014ABA  0EFF               	movlw	-1
 10301  014ABC  0060  F033  FFE3   	movff	btemp+11,plusw1
 10302  014AC2  D008               	goto	l2178
 10303  014AC4                     l10854:
 10304                           
 10305                           ;stkvar	_p @ sp[(-20)+18]
 10306  014AC4  0EFE               	movlw	-2
 10307  014AC6  0060  F09B  FFE3   	movff	_prec,plusw1
 10308  014ACC  0EFF               	movlw	-1
 10309  014ACE  0060  F09F  FFE3   	movff	_prec+1,plusw1
 10310  014AD4                     l2178:
 10311                           
 10312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 10313                           ;stkvar	_w @ sp[(-20)+16]
 10314  014AD4  0EFC               	movlw	-4
 10315  014AD6  0060  F093  FFE3   	movff	_width,plusw1
 10316  014ADC  0EFD               	movlw	-3
 10317  014ADE  0060  F097  FFE3   	movff	_width+1,plusw1
 10318                           
 10319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 10320  014AE4  A828               	btfss	_flags^0,4,c
 10321  014AE6  D00B               	goto	l10860
 10322                           
 10323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 10324                           ;stkvar	_w @ sp[(-20)+16]
 10325  014AE8  50E1               	movf	fsr1l,w,c
 10326  014AEA  0FFC               	addlw	-4
 10327  014AEC  6ED9               	movwf	fsr2l,c
 10328  014AEE  50E2               	movf	fsr1h,w,c
 10329  014AF0  6EDA               	movwf	fsr2h,c
 10330  014AF2  0EFF               	movlw	255
 10331  014AF4  22DA               	addwfc	fsr2h,f,c
 10332  014AF6  0EFE               	movlw	254
 10333  014AF8  26DE               	addwf	postinc2,f,c
 10334  014AFA  0EFF               	movlw	255
 10335  014AFC  22DD               	addwfc	postdec2,f,c
 10336  014AFE                     l10860:
 10337                           
 10338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 10339                           ;stkvar	_d @ sp[(-20)+-10]
 10340  014AFE  0EE2               	movlw	226
 10341  014B00  24E1               	addwf	fsr1l,w,c
 10342  014B02  6ED9               	movwf	fsr2l,c
 10343  014B04  0EFF               	movlw	255
 10344  014B06  20E2               	addwfc	fsr1h,w,c
 10345  014B08  6EDA               	movwf	fsr2h,c
 10346                           
 10347                           ;stkvar	_n @ sp[(-20)+4]
 10348  014B0A  0E08               	movlw	8
 10349  014B0C  6E01               	movwf	btemp^0,c
 10350  014B0E  0EF0               	movlw	-16
 10351  014B10                     us1029999:
 10352  014B10  006F FF7B FFE3     	movff	postinc2,plusw1
 10353  014B16  28E8               	incf	wreg,w,c
 10354  014B18  2E01               	decfsz	btemp^0,f,c
 10355  014B1A  D7FA               	bra	us1029999
 10356                           
 10357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 10358  014B1C  0E4F               	movlw	79
 10359  014B1E  6E0B               	movwf	(btemp+10)^0,c
 10360  014B20  0E00               	movlw	0
 10361  014B22  6E0C               	movwf	(btemp+11)^0,c
 10362                           
 10363                           ;stkvar	_i @ sp[(-20)+14]
 10364  014B24  0EFA               	movlw	-6
 10365  014B26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10366  014B2C  0EFB               	movlw	-5
 10367  014B2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 10368                           
 10369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 10370  014B34  0103               	movlb	3	; () banked
 10371  014B36  6BE3               	clrf	(_dbuf+79)& (0+255),b
 10372                           
 10373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10374  014B38  D0EE               	goto	l10898
 10375  014B3A                     l10866:
 10376                           
 10377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 10378                           ;stkvar	_i @ sp[(-20)+14]
 10379  014B3A  50E1               	movf	fsr1l,w,c
 10380  014B3C  0FFA               	addlw	-6
 10381  014B3E  6ED9               	movwf	fsr2l,c
 10382  014B40  50E2               	movf	fsr1h,w,c
 10383  014B42  6EDA               	movwf	fsr2h,c
 10384  014B44  0EFF               	movlw	255
 10385  014B46  22DA               	addwfc	fsr2h,f,c
 10386  014B48  06DE               	decf	postinc2,f,c
 10387  014B4A  0E00               	movlw	0
 10388  014B4C  5ADD               	subwfb	postdec2,f,c
 10389                           
 10390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 10391                           ;stkvar	_n @ sp[(-20)+4]
 10392  014B4E  0EF0               	movlw	-16
 10393  014B50  006F FF8C  F00B    	movff	plusw1,btemp+10
 10394  014B56  0EF1               	movlw	-15
 10395  014B58  006F FF8C  F00C    	movff	plusw1,btemp+11
 10396  014B5E  0E0F               	movlw	15
 10397  014B60  160B               	andwf	(btemp+10)^0,f,c
 10398  014B62  0E00               	movlw	0
 10399  014B64  160C               	andwf	(btemp+11)^0,f,c
 10400                           
 10401                           ;stkvar	_c @ sp[(-20)+12]
 10402  014B66  0EF8               	movlw	-8
 10403  014B68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10404  014B6E  0EF9               	movlw	-7
 10405  014B70  0060  F033  FFE3   	movff	btemp+11,plusw1
 10406                           
 10407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 10408                           ;stkvar	_c @ sp[(-20)+12]
 10409  014B76  0EF9               	movlw	-7
 10410  014B78  BEE3               	btfsc	plusw1,7,c
 10411  014B7A  D00F               	goto	l10874
 10412  014B7C  0EF9               	movlw	-7
 10413  014B7E  50E3               	movf	plusw1,w,c
 10414  014B80  E108               	bnz	u10300
 10415  014B82  0EF8               	movlw	-8
 10416  014B84  006F FF8C  F001    	movff	plusw1,btemp
 10417  014B8A  0E0A               	movlw	10
 10418  014B8C  5E01               	subwf	btemp^0,f,c
 10419  014B8E  A0D8               	btfss	status,0,c
 10420  014B90  D004               	goto	l10874
 10421  014B92                     u10300:
 10422                           
 10423                           ;stkvar	_c @ sp[(-20)+12]
 10424  014B92  0EF8               	movlw	-8
 10425  014B94  50E3               	movf	plusw1,w,c
 10426  014B96  0F57               	addlw	87
 10427  014B98  D003               	goto	L8
 10428  014B9A                     l10874:
 10429                           
 10430                           ;stkvar	_c @ sp[(-20)+12]
 10431  014B9A  0EF8               	movlw	-8
 10432  014B9C  50E3               	movf	plusw1,w,c
 10433  014B9E  0F30               	addlw	48
 10434  014BA0                     L8:
 10435  014BA0  6E0B               	movwf	(btemp+10)^0,c
 10436  014BA2  0EF9               	movlw	-7
 10437  014BA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10438  014BAA  0E00               	movlw	0
 10439  014BAC  220C               	addwfc	(btemp+11)^0,f,c
 10440                           
 10441                           ;stkvar	_c @ sp[(-20)+12]
 10442  014BAE  0EF8               	movlw	-8
 10443  014BB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10444  014BB6  0EF9               	movlw	-7
 10445  014BB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 10446  014BBE  0EBF               	movlw	191
 10447  014BC0  6E0B               	movwf	(btemp+10)^0,c
 10448  014BC2  0EFF               	movlw	255
 10449  014BC4  6E0C               	movwf	(btemp+11)^0,c
 10450                           
 10451                           ;stkvar	_x @ sp[(-20)+-11]
 10452  014BC6  0EE1               	movlw	-31
 10453  014BC8  50E3               	movf	plusw1,w,c
 10454  014BCA  6E09               	movwf	(btemp+8)^0,c
 10455  014BCC  6A0A               	clrf	(btemp+9)^0,c
 10456  014BCE  500B               	movf	(btemp+10)^0,w,c
 10457  014BD0  2609               	addwf	(btemp+8)^0,f,c
 10458  014BD2  500C               	movf	(btemp+11)^0,w,c
 10459  014BD4  220A               	addwfc	(btemp+9)^0,f,c
 10460  014BD6  500A               	movf	(btemp+9)^0,w,c
 10461  014BD8  E106               	bnz	u10310
 10462  014BDA  0E1A               	movlw	26
 10463  014BDC  5C09               	subwf	(btemp+8)^0,w,c
 10464  014BDE  B0D8               	btfsc	status,0,c
 10465  014BE0  D002               	goto	u10310
 10466  014BE2  0E01               	movlw	1
 10467  014BE4  D001               	goto	u10320
 10468  014BE6                     u10310:
 10469  014BE6  0E00               	movlw	0
 10470  014BE8                     u10320:
 10471  014BE8  6E0B               	movwf	(btemp+10)^0,c
 10472  014BEA  6A0C               	clrf	(btemp+11)^0,c
 10473                           
 10474                           ;stkvar	_xtoa$5102 @ sp[(-20)+2]
 10475  014BEC  0EEE               	movlw	-18
 10476  014BEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10477  014BF4  0EEF               	movlw	-17
 10478  014BF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10479                           
 10480                           ;stkvar	_xtoa$5102 @ sp[(-20)+2]
 10481  014BFC  0EEE               	movlw	-18
 10482  014BFE  006F FF8C  F001    	movff	plusw1,btemp
 10483  014C04  0EEF               	movlw	-17
 10484  014C06  50E3               	movf	plusw1,w,c
 10485  014C08  1001               	iorwf	btemp^0,w,c
 10486  014C0A  B4D8               	btfsc	status,2,c
 10487  014C0C  D041               	goto	l10890
 10488  014C0E  0E9F               	movlw	159
 10489  014C10  6E0B               	movwf	(btemp+10)^0,c
 10490  014C12  0EFF               	movlw	255
 10491  014C14  6E0C               	movwf	(btemp+11)^0,c
 10492                           
 10493                           ;stkvar	_c @ sp[(-20)+12]
 10494  014C16  0EF8               	movlw	-8
 10495  014C18  006F FF8C  F009    	movff	plusw1,btemp+8
 10496  014C1E  0EF9               	movlw	-7
 10497  014C20  006F FF8C  F00A    	movff	plusw1,btemp+9
 10498  014C26  0E20               	movlw	32
 10499  014C28  1209               	iorwf	(btemp+8)^0,f,c
 10500  014C2A  0E00               	movlw	0
 10501  014C2C  120A               	iorwf	(btemp+9)^0,f,c
 10502  014C2E  500B               	movf	(btemp+10)^0,w,c
 10503  014C30  2609               	addwf	(btemp+8)^0,f,c
 10504  014C32  500C               	movf	(btemp+11)^0,w,c
 10505  014C34  220A               	addwfc	(btemp+9)^0,f,c
 10506  014C36  500A               	movf	(btemp+9)^0,w,c
 10507  014C38  E106               	bnz	u10340
 10508  014C3A  0E1A               	movlw	26
 10509  014C3C  5C09               	subwf	(btemp+8)^0,w,c
 10510  014C3E  B0D8               	btfsc	status,0,c
 10511  014C40  D002               	goto	u10340
 10512  014C42  0E01               	movlw	1
 10513  014C44  D001               	goto	u10350
 10514  014C46                     u10340:
 10515  014C46  0E00               	movlw	0
 10516  014C48                     u10350:
 10517  014C48  6E0B               	movwf	(btemp+10)^0,c
 10518  014C4A  6A0C               	clrf	(btemp+11)^0,c
 10519                           
 10520                           ;stkvar	_xtoa$5103 @ sp[(-20)+0]
 10521  014C4C  0EEC               	movlw	-20
 10522  014C4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10523  014C54  0EED               	movlw	-19
 10524  014C56  0060  F033  FFE3   	movff	btemp+11,plusw1
 10525                           
 10526                           ;stkvar	_xtoa$5103 @ sp[(-20)+0]
 10527  014C5C  0EEC               	movlw	-20
 10528  014C5E  006F FF8C  F001    	movff	plusw1,btemp
 10529  014C64  0EED               	movlw	-19
 10530  014C66  50E3               	movf	plusw1,w,c
 10531  014C68  1001               	iorwf	btemp^0,w,c
 10532  014C6A  B4D8               	btfsc	status,2,c
 10533  014C6C  D011               	goto	l10890
 10534                           
 10535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10536                           ;stkvar	_c @ sp[(-20)+12]
 10537  014C6E  0EF8               	movlw	-8
 10538  014C70  006F FF8F FFE6     	movff	plusw1,postinc1
 10539  014C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10540  014C7C  ECE4  F0C2         	call	_toupper	;wreg free
 10541                           
 10542                           ;stkvar	_c @ sp[(-20)+12]
 10543  014C80  0EF8               	movlw	-8
 10544  014C82  0060  F007  FFE3   	movff	btemp,plusw1
 10545  014C88  0EF9               	movlw	-7
 10546  014C8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10547  014C90                     l10890:
 10548                           
 10549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10550                           ;stkvar	_c @ sp[(-20)+12]
 10551                           ;stkvar	_i @ sp[(-20)+14]
 10552  014C90  0EFA               	movlw	-6
 10553  014C92  006F FF8C  F00B    	movff	plusw1,btemp+10
 10554  014C98  0EFB               	movlw	-5
 10555  014C9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10556  014CA0  0E94               	movlw	low _dbuf
 10557  014CA2  240B               	addwf	(btemp+10)^0,w,c
 10558  014CA4  6ED9               	movwf	fsr2l,c
 10559  014CA6  0E03               	movlw	high _dbuf
 10560  014CA8  200C               	addwfc	(btemp+11)^0,w,c
 10561  014CAA  6EDA               	movwf	fsr2h,c
 10562  014CAC  0EF8               	movlw	-8
 10563  014CAE  006F FF8F FFDF     	movff	plusw1,indf2
 10564                           
 10565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10566                           ;stkvar	_p @ sp[(-20)+18]
 10567  014CB4  50E1               	movf	fsr1l,w,c
 10568  014CB6  0FFE               	addlw	-2
 10569  014CB8  6ED9               	movwf	fsr2l,c
 10570  014CBA  50E2               	movf	fsr1h,w,c
 10571  014CBC  6EDA               	movwf	fsr2h,c
 10572  014CBE  0EFF               	movlw	255
 10573  014CC0  22DA               	addwfc	fsr2h,f,c
 10574  014CC2  06DE               	decf	postinc2,f,c
 10575  014CC4  0E00               	movlw	0
 10576  014CC6  5ADD               	subwfb	postdec2,f,c
 10577                           
 10578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10579                           ;stkvar	_w @ sp[(-20)+16]
 10580  014CC8  50E1               	movf	fsr1l,w,c
 10581  014CCA  0FFC               	addlw	-4
 10582  014CCC  6ED9               	movwf	fsr2l,c
 10583  014CCE  50E2               	movf	fsr1h,w,c
 10584  014CD0  6EDA               	movwf	fsr2h,c
 10585  014CD2  0EFF               	movlw	255
 10586  014CD4  22DA               	addwfc	fsr2h,f,c
 10587  014CD6  06DE               	decf	postinc2,f,c
 10588  014CD8  0E00               	movlw	0
 10589  014CDA  5ADD               	subwfb	postdec2,f,c
 10590                           
 10591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10592  014CDC  0E04               	movlw	4
 10593  014CDE  6E0C               	movwf	(btemp+11)^0,c
 10594                           
 10595                           ;stkvar	_n @ sp[(-20)+4]
 10596  014CE0  50E1               	movf	fsr1l,w,c
 10597  014CE2  0FF0               	addlw	-16
 10598  014CE4  6ED9               	movwf	fsr2l,c
 10599  014CE6  50E2               	movf	fsr1h,w,c
 10600  014CE8  6EDA               	movwf	fsr2h,c
 10601  014CEA  0EFF               	movlw	255
 10602  014CEC  22DA               	addwfc	fsr2h,f,c
 10603  014CEE  280C               	incf	(btemp+11)^0,w,c
 10604  014CF0  52DE               	movf	postinc2,f,c
 10605  014CF2  D00F               	goto	u10370
 10606  014CF4                     u10375:
 10607  014CF4  52DE               	movf	postinc2,f,c
 10608  014CF6  52DE               	movf	postinc2,f,c
 10609  014CF8  52DE               	movf	postinc2,f,c
 10610  014CFA  52DE               	movf	postinc2,f,c
 10611  014CFC  52DE               	movf	postinc2,f,c
 10612  014CFE  52DE               	movf	postinc2,f,c
 10613  014D00  90D8               	bcf	status,0,c
 10614  014D02  32DD               	rrcf	postdec2,f,c
 10615  014D04  32DD               	rrcf	postdec2,f,c
 10616  014D06  32DD               	rrcf	postdec2,f,c
 10617  014D08  32DD               	rrcf	postdec2,f,c
 10618  014D0A  32DD               	rrcf	postdec2,f,c
 10619  014D0C  32DD               	rrcf	postdec2,f,c
 10620  014D0E  32DD               	rrcf	postdec2,f,c
 10621  014D10  32DE               	rrcf	postinc2,f,c
 10622  014D12                     u10370:
 10623  014D12  2EE8               	decfsz	wreg,f,c
 10624  014D14  D7EF               	goto	u10375
 10625  014D16                     l10898:
 10626                           
 10627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10628                           ;stkvar	_i @ sp[(-20)+14]
 10629  014D16  0EFB               	movlw	-5
 10630  014D18  BEE3               	btfsc	plusw1,7,c
 10631  014D1A  D03A               	goto	u10420
 10632  014D1C  0EFB               	movlw	-5
 10633  014D1E  50E3               	movf	plusw1,w,c
 10634  014D20  E108               	bnz	u10380
 10635  014D22  0EFA               	movlw	-6
 10636  014D24  006F FF8C  F001    	movff	plusw1,btemp
 10637  014D2A  0E02               	movlw	2
 10638  014D2C  5E01               	subwf	btemp^0,f,c
 10639  014D2E  A0D8               	btfss	status,0,c
 10640  014D30  D02F               	goto	u10420
 10641  014D32                     u10380:
 10642                           
 10643                           ;stkvar	_n @ sp[(-20)+4]
 10644  014D32  0EF0               	movlw	-16
 10645  014D34  50E3               	movf	plusw1,w,c
 10646  014D36  E115               	bnz	u10391
 10647  014D38  0EF1               	movlw	-15
 10648  014D3A  50E3               	movf	plusw1,w,c
 10649  014D3C  E112               	bnz	u10391
 10650  014D3E  0EF2               	movlw	-14
 10651  014D40  50E3               	movf	plusw1,w,c
 10652  014D42  E10F               	bnz	u10391
 10653  014D44  0EF3               	movlw	-13
 10654  014D46  50E3               	movf	plusw1,w,c
 10655  014D48  E10C               	bnz	u10391
 10656  014D4A  0EF4               	movlw	-12
 10657  014D4C  50E3               	movf	plusw1,w,c
 10658  014D4E  E109               	bnz	u10391
 10659  014D50  0EF5               	movlw	-11
 10660  014D52  50E3               	movf	plusw1,w,c
 10661  014D54  E106               	bnz	u10391
 10662  014D56  0EF6               	movlw	-10
 10663  014D58  50E3               	movf	plusw1,w,c
 10664  014D5A  E103               	bnz	u10391
 10665  014D5C  0EF7               	movlw	-9
 10666  014D5E  50E3               	movf	plusw1,w,c
 10667  014D60  A4D8               	btfss	status,2,c
 10668  014D62                     u10391:
 10669  014D62  D6EB               	goto	l10866
 10670                           
 10671                           ;stkvar	_p @ sp[(-20)+18]
 10672  014D64  0EFF               	movlw	-1
 10673  014D66  BEE3               	btfsc	plusw1,7,c
 10674  014D68  D007               	goto	u10400
 10675  014D6A  0EFF               	movlw	-1
 10676  014D6C  50E3               	movf	plusw1,w,c
 10677  014D6E  E103               	bnz	u10401
 10678  014D70  0EFE               	movlw	-2
 10679  014D72  04E3               	decf	plusw1,w,c
 10680  014D74  B0D8               	btfsc	status,0,c
 10681  014D76                     u10401:
 10682  014D76  D6E1               	goto	l10866
 10683  014D78                     u10400:
 10684                           
 10685                           ;stkvar	_w @ sp[(-20)+16]
 10686  014D78  0EFD               	movlw	-3
 10687  014D7A  BEE3               	btfsc	plusw1,7,c
 10688  014D7C  D009               	goto	u10420
 10689  014D7E  0EFD               	movlw	-3
 10690  014D80  50E3               	movf	plusw1,w,c
 10691  014D82  E104               	bnz	u10410
 10692  014D84  0EFC               	movlw	-4
 10693  014D86  04E3               	decf	plusw1,w,c
 10694  014D88  A0D8               	btfss	status,0,c
 10695  014D8A  D002               	goto	u10420
 10696  014D8C                     u10410:
 10697  014D8C  B228               	btfsc	_flags^0,1,c
 10698  014D8E  D6D5               	goto	l10866
 10699  014D90                     u10420:
 10700                           
 10701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10702  014D90  A828               	btfss	_flags^0,4,c
 10703  014D92  D036               	goto	l10914
 10704                           
 10705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10706                           ;stkvar	_i @ sp[(-20)+14]
 10707  014D94  50E1               	movf	fsr1l,w,c
 10708  014D96  0FFA               	addlw	-6
 10709  014D98  6ED9               	movwf	fsr2l,c
 10710  014D9A  50E2               	movf	fsr1h,w,c
 10711  014D9C  6EDA               	movwf	fsr2h,c
 10712  014D9E  0EFF               	movlw	255
 10713  014DA0  22DA               	addwfc	fsr2h,f,c
 10714  014DA2  06DE               	decf	postinc2,f,c
 10715  014DA4  0E00               	movlw	0
 10716  014DA6  5ADD               	subwfb	postdec2,f,c
 10717                           
 10718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10719                           ;stkvar	_x @ sp[(-20)+-11]
 10720                           ;stkvar	_i @ sp[(-20)+14]
 10721  014DA8  0EFA               	movlw	-6
 10722  014DAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10723  014DB0  0EFB               	movlw	-5
 10724  014DB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10725  014DB8  0E94               	movlw	low _dbuf
 10726  014DBA  240B               	addwf	(btemp+10)^0,w,c
 10727  014DBC  6ED9               	movwf	fsr2l,c
 10728  014DBE  0E03               	movlw	high _dbuf
 10729  014DC0  200C               	addwfc	(btemp+11)^0,w,c
 10730  014DC2  6EDA               	movwf	fsr2h,c
 10731  014DC4  0EE1               	movlw	-31
 10732  014DC6  006F FF8F FFDF     	movff	plusw1,indf2
 10733                           
 10734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10735                           ;stkvar	_i @ sp[(-20)+14]
 10736  014DCC  50E1               	movf	fsr1l,w,c
 10737  014DCE  0FFA               	addlw	-6
 10738  014DD0  6ED9               	movwf	fsr2l,c
 10739  014DD2  50E2               	movf	fsr1h,w,c
 10740  014DD4  6EDA               	movwf	fsr2h,c
 10741  014DD6  0EFF               	movlw	255
 10742  014DD8  22DA               	addwfc	fsr2h,f,c
 10743  014DDA  06DE               	decf	postinc2,f,c
 10744  014DDC  0E00               	movlw	0
 10745  014DDE  5ADD               	subwfb	postdec2,f,c
 10746                           
 10747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10748                           ;stkvar	_i @ sp[(-20)+14]
 10749  014DE0  0EFA               	movlw	-6
 10750  014DE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10751  014DE8  0EFB               	movlw	-5
 10752  014DEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10753  014DF0  0E94               	movlw	low _dbuf
 10754  014DF2  240B               	addwf	(btemp+10)^0,w,c
 10755  014DF4  6ED9               	movwf	fsr2l,c
 10756  014DF6  0E03               	movlw	high _dbuf
 10757  014DF8  200C               	addwfc	(btemp+11)^0,w,c
 10758  014DFA  6EDA               	movwf	fsr2h,c
 10759  014DFC  0E30               	movlw	48
 10760  014DFE  6EDF               	movwf	indf2,c
 10761  014E00                     l10914:
 10762                           
 10763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10764                           ;stkvar	_w @ sp[(-20)+16]
 10765  014E00  0EFC               	movlw	-4
 10766  014E02  006F FF8F FFE6     	movff	plusw1,postinc1
 10767  014E08  006F FF8F FFE6     	movff	plusw1,postinc1
 10768                           
 10769                           ;stkvar	_i @ sp[(-22)+14]
 10770  014E0E  0E94               	movlw	low _dbuf
 10771  014E10  6E0B               	movwf	(btemp+10)^0,c
 10772  014E12  0E03               	movlw	high _dbuf
 10773  014E14  6E0C               	movwf	(btemp+11)^0,c
 10774  014E16  0EF8               	movlw	-8
 10775  014E18  50E3               	movf	plusw1,w,c
 10776  014E1A  260B               	addwf	(btemp+10)^0,f,c
 10777  014E1C  0EF9               	movlw	-7
 10778  014E1E  50E3               	movf	plusw1,w,c
 10779  014E20  220C               	addwfc	(btemp+11)^0,f,c
 10780  014E22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10781  014E28  0060  F033  FFE6   	movff	btemp+11,postinc1
 10782                           
 10783                           ;stkvar	_fp @ sp[(-24)+-2]
 10784  014E2E  0EE6               	movlw	-26
 10785  014E30  006F FF8F FFE6     	movff	plusw1,postinc1
 10786  014E36  006F FF8F FFE6     	movff	plusw1,postinc1
 10787  014E3C  EC63  F0BA         	call	_pad	;wreg free
 10788                           
 10789                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10790  014E40  0EE1               	movlw	225
 10791  014E42  26E1               	addwf	fsr1l,f,c
 10792  014E44  0EFF               	movlw	255
 10793  014E46  22E2               	addwfc	fsr1h,f,c
 10794  014E48  0012               	return		;funcret
 10795  014E4A                     __end_of_xtoa:
 10796                           	opt callstack 0
 10797                           
 10798 ;; *************** function _toupper *****************
 10799 ;; Defined at:
 10800 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  c               2  [STACK] int 
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;		None
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  2  [STACK] int 
 10807 ;; Registers used:
 10808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/3
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10818 ;;Total ram usage:        0 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    8
 10821 ;; This function calls:
 10822 ;;		_islower
 10823 ;; This function is called by:
 10824 ;;		_xtoa
 10825 ;; This function uses a reentrant model
 10826 ;;
 10827                           
 10828                           	psect	text44
 10829  0185C8                     __ptext44:
 10830                           	opt callstack 0
 10831  0185C8                     _toupper:
 10832                           	opt callstack 0
 10833                           
 10834                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10835  0185C8  52E6               	movf	postinc1,f,c
 10836  0185CA  52E6               	movf	postinc1,f,c
 10837                           
 10838                           ;stkvar	_c @ sp[(-2)+-2]
 10839                           
 10840                           ;incstack = 0
 10841  0185CC  0EFC               	movlw	-4
 10842  0185CE  50E3               	movf	plusw1,w,c
 10843  0185D0  0F9F               	addlw	159
 10844  0185D2  6E0B               	movwf	(btemp+10)^0,c
 10845  0185D4  0EFD               	movlw	-3
 10846  0185D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10847  0185DC  0EFF               	movlw	255
 10848  0185DE  220C               	addwfc	(btemp+11)^0,f,c
 10849  0185E0  500C               	movf	(btemp+11)^0,w,c
 10850  0185E2  E106               	bnz	u5100
 10851  0185E4  0E1A               	movlw	26
 10852  0185E6  5C0B               	subwf	(btemp+10)^0,w,c
 10853  0185E8  B0D8               	btfsc	status,0,c
 10854  0185EA  D002               	goto	u5100
 10855  0185EC  0E01               	movlw	1
 10856  0185EE  D001               	goto	u5110
 10857  0185F0                     u5100:
 10858  0185F0  0E00               	movlw	0
 10859  0185F2                     u5110:
 10860  0185F2  6E0B               	movwf	(btemp+10)^0,c
 10861  0185F4  6A0C               	clrf	(btemp+11)^0,c
 10862                           
 10863                           ;stkvar	_toupper$5878 @ sp[(-2)+0]
 10864  0185F6  0EFE               	movlw	-2
 10865  0185F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10866  0185FE  0EFF               	movlw	-1
 10867  018600  0060  F033  FFE3   	movff	btemp+11,plusw1
 10868                           
 10869                           ;stkvar	_toupper$5878 @ sp[(-2)+0]
 10870  018606  0EFE               	movlw	-2
 10871  018608  006F FF8C  F001    	movff	plusw1,btemp
 10872  01860E  0EFF               	movlw	-1
 10873  018610  50E3               	movf	plusw1,w,c
 10874  018612  1001               	iorwf	btemp^0,w,c
 10875  018614  B4D8               	btfsc	status,2,c
 10876  018616  D00D               	goto	l7034
 10877                           
 10878                           ;stkvar	_c @ sp[(-2)+-2]
 10879  018618  0EFC               	movlw	-4
 10880  01861A  006F FF8C  F001    	movff	plusw1,btemp
 10881  018620  0EFD               	movlw	-3
 10882  018622  006F FF8C  F002    	movff	plusw1,btemp+1
 10883  018628  0E5F               	movlw	95
 10884  01862A  1601               	andwf	btemp^0,f,c
 10885  01862C  0E00               	movlw	0
 10886  01862E  1602               	andwf	(btemp+1)^0,f,c
 10887  018630  D008               	goto	l3332
 10888  018632                     l7034:
 10889                           
 10890                           ;stkvar	_c @ sp[(-2)+-2]
 10891  018632  0EFC               	movlw	-4
 10892  018634  006F FF8C  F001    	movff	plusw1,btemp
 10893  01863A  0EFD               	movlw	-3
 10894  01863C  006F FF8C  F002    	movff	plusw1,btemp+1
 10895  018642                     l3332:
 10896                           
 10897                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10898  018642  52E5               	movf	postdec1,f,c
 10899  018644  52E5               	movf	postdec1,f,c
 10900  018646  52E5               	movf	postdec1,f,c
 10901  018648  52E5               	movf	postdec1,f,c
 10902  01864A  0012               	return		;funcret
 10903  01864C                     __end_of_toupper:
 10904                           	opt callstack 0
 10905                           
 10906 ;; *************** function _islower *****************
 10907 ;; Defined at:
 10908 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  c               2  [STACK] int 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  2  [STACK] int 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10926 ;;Total ram usage:        0 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    7
 10929 ;; This function calls:
 10930 ;;		Nothing
 10931 ;; This function is called by:
 10932 ;;		_toupper
 10933 ;; This function uses a reentrant model
 10934 ;;
 10935                           
 10936                           	psect	text45
 10937  019190                     __ptext45:
 10938                           	opt callstack 0
 10939  019190                     _islower:
 10940                           	opt callstack 15
 10941                           
 10942                           ;stkvar	_c @ sp[(0)+-2]
 10943                           
 10944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10945                           ;incstack = 0
 10946  019190  0EFE               	movlw	-2
 10947  019192  50E3               	movf	plusw1,w,c
 10948  019194  0F9F               	addlw	159
 10949  019196  6E0B               	movwf	(btemp+10)^0,c
 10950  019198  0EFF               	movlw	-1
 10951  01919A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10952  0191A0  0EFF               	movlw	255
 10953  0191A2  220C               	addwfc	(btemp+11)^0,f,c
 10954  0191A4  500C               	movf	(btemp+11)^0,w,c
 10955  0191A6  E106               	bnz	u4790
 10956  0191A8  0E1A               	movlw	26
 10957  0191AA  5C0B               	subwf	(btemp+10)^0,w,c
 10958  0191AC  B0D8               	btfsc	status,0,c
 10959  0191AE  D002               	goto	u4790
 10960  0191B0  0E01               	movlw	1
 10961  0191B2  D001               	goto	u4800
 10962  0191B4                     u4790:
 10963  0191B4  0E00               	movlw	0
 10964  0191B6                     u4800:
 10965  0191B6  6E01               	movwf	btemp^0,c
 10966  0191B8  6A02               	clrf	(btemp+1)^0,c
 10967                           
 10968                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10969  0191BA  52E5               	movf	postdec1,f,c
 10970  0191BC  52E5               	movf	postdec1,f,c
 10971  0191BE  0012               	return		;funcret
 10972  0191C0                     __end_of_islower:
 10973                           	opt callstack 0
 10974                           
 10975 ;; *************** function _isalpha *****************
 10976 ;; Defined at:
 10977 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10978 ;; Parameters:    Size  Location     Type
 10979 ;;  c               2  [STACK] int 
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;		None
 10982 ;; Return value:  Size  Location     Type
 10983 ;;                  2  [STACK] int 
 10984 ;; Registers used:
 10985 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10986 ;; Tracked objects:
 10987 ;;		On entry : 0/0
 10988 ;;		On exit  : 0/0
 10989 ;;		Unchanged: 0/0
 10990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10995 ;;Total ram usage:        0 bytes
 10996 ;; Hardware stack levels used:    1
 10997 ;; Hardware stack levels required when called:    7
 10998 ;; This function calls:
 10999 ;;		Nothing
 11000 ;; This function is called by:
 11001 ;;		_xtoa
 11002 ;; This function uses a reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text46
 11006  018E8A                     __ptext46:
 11007                           	opt callstack 0
 11008  018E8A                     _isalpha:
 11009                           	opt callstack 16
 11010                           
 11011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11012                           ;incstack = 0
 11013  018E8A  0E9F               	movlw	159
 11014  018E8C  6E0B               	movwf	(btemp+10)^0,c
 11015  018E8E  0EFF               	movlw	255
 11016  018E90  6E0C               	movwf	(btemp+11)^0,c
 11017                           
 11018                           ;stkvar	_c @ sp[(0)+-2]
 11019  018E92  0EFE               	movlw	-2
 11020  018E94  006F FF8C  F009    	movff	plusw1,btemp+8
 11021  018E9A  0EFF               	movlw	-1
 11022  018E9C  006F FF8C  F00A    	movff	plusw1,btemp+9
 11023  018EA2  0E20               	movlw	32
 11024  018EA4  1209               	iorwf	(btemp+8)^0,f,c
 11025  018EA6  0E00               	movlw	0
 11026  018EA8  120A               	iorwf	(btemp+9)^0,f,c
 11027  018EAA  500B               	movf	(btemp+10)^0,w,c
 11028  018EAC  2609               	addwf	(btemp+8)^0,f,c
 11029  018EAE  500C               	movf	(btemp+11)^0,w,c
 11030  018EB0  220A               	addwfc	(btemp+9)^0,f,c
 11031  018EB2  500A               	movf	(btemp+9)^0,w,c
 11032  018EB4  E106               	bnz	u5080
 11033  018EB6  0E1A               	movlw	26
 11034  018EB8  5C09               	subwf	(btemp+8)^0,w,c
 11035  018EBA  B0D8               	btfsc	status,0,c
 11036  018EBC  D002               	goto	u5080
 11037  018EBE  0E01               	movlw	1
 11038  018EC0  D001               	goto	u5090
 11039  018EC2                     u5080:
 11040  018EC2  0E00               	movlw	0
 11041  018EC4                     u5090:
 11042  018EC4  6E01               	movwf	btemp^0,c
 11043  018EC6  6A02               	clrf	(btemp+1)^0,c
 11044                           
 11045                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11046  018EC8  52E5               	movf	postdec1,f,c
 11047  018ECA  52E5               	movf	postdec1,f,c
 11048  018ECC  0012               	return		;funcret
 11049  018ECE                     __end_of_isalpha:
 11050                           	opt callstack 0
 11051                           
 11052 ;; *************** function _strncmp *****************
 11053 ;; Defined at:
 11054 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;  _l              2  [STACK] PTR const unsigned char 
 11057 ;;		 -> ct(3), 
 11058 ;;  _r              2  [STACK] PTR const unsigned char 
 11059 ;;		 -> STR_56(3), 
 11060 ;;  n               2  [STACK] unsigned int 
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;  r               2  [STACK] PTR const unsigned char 
 11063 ;;		 -> STR_56(3), 
 11064 ;;  l               2  [STACK] PTR const unsigned char 
 11065 ;;		 -> ct(3), 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  2  [STACK] int 
 11068 ;; Registers used:
 11069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11079 ;;Total ram usage:        0 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    7
 11082 ;; This function calls:
 11083 ;;		Nothing
 11084 ;; This function is called by:
 11085 ;;		_vfpfcnvrt
 11086 ;; This function uses a reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text47
 11090  016584                     __ptext47:
 11091                           	opt callstack 0
 11092  016584                     _strncmp:
 11093                           	opt callstack 0
 11094                           
 11095                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11096  016584  52E6               	movf	postinc1,f,c
 11097  016586  52E6               	movf	postinc1,f,c
 11098  016588  52E6               	movf	postinc1,f,c
 11099  01658A  52E6               	movf	postinc1,f,c
 11100                           
 11101                           ;stkvar	__l @ sp[(-4)+-2]
 11102                           
 11103                           ;incstack = 0
 11104  01658C  0EFA               	movlw	-6
 11105  01658E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11106  016594  0EFB               	movlw	-5
 11107  016596  006F FF8C  F00C    	movff	plusw1,btemp+11
 11108                           
 11109                           ;stkvar	_l @ sp[(-4)+2]
 11110  01659C  0EFF               	movlw	-1
 11111  01659E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11112  0165A4  0EFE               	movlw	-2
 11113  0165A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11114                           
 11115                           ;stkvar	__r @ sp[(-4)+-4]
 11116  0165AC  0EF8               	movlw	-8
 11117  0165AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11118  0165B4  0EF9               	movlw	-7
 11119  0165B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11120                           
 11121                           ;stkvar	_r @ sp[(-4)+0]
 11122  0165BC  0EFD               	movlw	-3
 11123  0165BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 11124  0165C4  0EFC               	movlw	-4
 11125  0165C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11126                           
 11127                           ;stkvar	_n @ sp[(-4)+-6]
 11128  0165CC  0EF6               	movlw	-10
 11129  0165CE  006F FF8C  F001    	movff	plusw1,btemp
 11130  0165D4  0E01               	movlw	1
 11131  0165D6  5E01               	subwf	btemp^0,f,c
 11132  0165D8  0EF6               	movlw	-10
 11133  0165DA  0060  F007  FFE3   	movff	btemp,plusw1
 11134  0165E0  0EF7               	movlw	-9
 11135  0165E2  006F FF8C  F001    	movff	plusw1,btemp
 11136  0165E8  0E00               	movlw	0
 11137  0165EA  5A01               	subwfb	btemp^0,f,c
 11138  0165EC  0EF7               	movlw	-9
 11139  0165EE  0060  F007  FFE3   	movff	btemp,plusw1
 11140  0165F4  0EF6               	movlw	-10
 11141  0165F6  28E3               	incf	plusw1,w,c
 11142  0165F8  E13F               	bnz	l7804
 11143  0165FA  0EF7               	movlw	-9
 11144  0165FC  28E3               	incf	plusw1,w,c
 11145  0165FE  A4D8               	btfss	status,2,c
 11146  016600  D03B               	goto	l7804
 11147  016602  0E00               	movlw	0
 11148  016604  6E01               	movwf	btemp^0,c
 11149  016606  0E00               	movlw	0
 11150  016608  6E02               	movwf	(btemp+1)^0,c
 11151  01660A  D09B               	goto	l3304
 11152  01660C                     l7802:
 11153                           
 11154                           ;stkvar	_l @ sp[(-4)+2]
 11155  01660C  0EFE               	movlw	-2
 11156  01660E  50E3               	movf	plusw1,w,c
 11157  016610  0F01               	addlw	1
 11158  016612  6E01               	movwf	btemp^0,c
 11159  016614  0EFE               	movlw	-2
 11160  016616  0060  F007  FFE3   	movff	btemp,plusw1
 11161  01661C  6A01               	clrf	btemp^0,c
 11162  01661E  0EFF               	movlw	-1
 11163  016620  50E3               	movf	plusw1,w,c
 11164  016622  2001               	addwfc	btemp^0,w,c
 11165  016624  6E01               	movwf	btemp^0,c
 11166  016626  0EFF               	movlw	-1
 11167  016628  0060  F007  FFE3   	movff	btemp,plusw1
 11168                           
 11169                           ;stkvar	_r @ sp[(-4)+0]
 11170  01662E  0EFC               	movlw	-4
 11171  016630  50E3               	movf	plusw1,w,c
 11172  016632  0F01               	addlw	1
 11173  016634  6E01               	movwf	btemp^0,c
 11174  016636  0EFC               	movlw	-4
 11175  016638  0060  F007  FFE3   	movff	btemp,plusw1
 11176  01663E  6A01               	clrf	btemp^0,c
 11177  016640  0EFD               	movlw	-3
 11178  016642  50E3               	movf	plusw1,w,c
 11179  016644  2001               	addwfc	btemp^0,w,c
 11180  016646  6E01               	movwf	btemp^0,c
 11181  016648  0EFD               	movlw	-3
 11182  01664A  0060  F007  FFE3   	movff	btemp,plusw1
 11183                           
 11184                           ;stkvar	_n @ sp[(-4)+-6]
 11185  016650  0EF6               	movlw	-10
 11186  016652  006F FF8C  F001    	movff	plusw1,btemp
 11187  016658  0E01               	movlw	1
 11188  01665A  5E01               	subwf	btemp^0,f,c
 11189  01665C  0EF6               	movlw	-10
 11190  01665E  0060  F007  FFE3   	movff	btemp,plusw1
 11191  016664  0EF7               	movlw	-9
 11192  016666  006F FF8C  F001    	movff	plusw1,btemp
 11193  01666C  0E00               	movlw	0
 11194  01666E  5A01               	subwfb	btemp^0,f,c
 11195  016670  0EF7               	movlw	-9
 11196  016672  0060  F007  FFE3   	movff	btemp,plusw1
 11197  016678                     l7804:
 11198                           
 11199                           ;stkvar	_l @ sp[(-4)+2]
 11200  016678  0EFE               	movlw	-2
 11201  01667A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11202  016680  0EFF               	movlw	-1
 11203  016682  006F FF8F FFDA     	movff	plusw1,fsr2h
 11204  016688  50DF               	movf	indf2,w,c
 11205  01668A  B4D8               	btfsc	status,2,c
 11206  01668C  D03B               	goto	u6660
 11207                           
 11208                           ;stkvar	_r @ sp[(-4)+0]
 11209  01668E  50E1               	movf	fsr1l,w,c
 11210  016690  0FFC               	addlw	-4
 11211  016692  6ED9               	movwf	fsr2l,c
 11212  016694  50E2               	movf	fsr1h,w,c
 11213  016696  6EDA               	movwf	fsr2h,c
 11214  016698  0EFF               	movlw	255
 11215  01669A  22DA               	addwfc	fsr2h,f,c
 11216  01669C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11217  0166A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11218  0166A8                     	if	0	;tblptru may be non-zero
 11219  0166A8                     	endif
 11220  0166A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11221  0166A8  0E00               	movlw	low (__mediumconst shr (0+16))
 11222  0166AA  6EF8               	movwf	tblptru,c
 11223  0166AC                     	endif
 11224  0166AC  0008               	tblrd		*
 11225  0166AE  50F5               	movf	tablat,w,c
 11226  0166B0  0900               	iorlw	0
 11227  0166B2  B4D8               	btfsc	status,2,c
 11228  0166B4  D027               	goto	u6660
 11229                           
 11230                           ;stkvar	_n @ sp[(-4)+-6]
 11231  0166B6  0EF6               	movlw	-10
 11232  0166B8  006F FF8C  F001    	movff	plusw1,btemp
 11233  0166BE  0EF7               	movlw	-9
 11234  0166C0  50E3               	movf	plusw1,w,c
 11235  0166C2  1001               	iorwf	btemp^0,w,c
 11236  0166C4  B4D8               	btfsc	status,2,c
 11237  0166C6  D01E               	goto	u6660
 11238                           
 11239                           ;stkvar	_l @ sp[(-4)+2]
 11240  0166C8  0EFE               	movlw	-2
 11241  0166CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11242  0166D0  0EFF               	movlw	-1
 11243  0166D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11244  0166D8  50DF               	movf	indf2,w,c
 11245  0166DA  6E0C               	movwf	(btemp+11)^0,c
 11246                           
 11247                           ;stkvar	_r @ sp[(-4)+0]
 11248  0166DC  50E1               	movf	fsr1l,w,c
 11249  0166DE  0FFC               	addlw	-4
 11250  0166E0  6ED9               	movwf	fsr2l,c
 11251  0166E2  50E2               	movf	fsr1h,w,c
 11252  0166E4  6EDA               	movwf	fsr2h,c
 11253  0166E6  0EFF               	movlw	255
 11254  0166E8  22DA               	addwfc	fsr2h,f,c
 11255  0166EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11256  0166F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11257  0166F6                     	if	0	;tblptru may be non-zero
 11258  0166F6                     	endif
 11259  0166F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11260  0166F6  0E00               	movlw	low (__mediumconst shr (0+16))
 11261  0166F8  6EF8               	movwf	tblptru,c
 11262  0166FA                     	endif
 11263  0166FA  0008               	tblrd		*
 11264  0166FC  50F5               	movf	tablat,w,c
 11265  0166FE  180C               	xorwf	(btemp+11)^0,w,c
 11266  016700  B4D8               	btfsc	status,2,c
 11267  016702  D784               	goto	l7802
 11268  016704                     u6660:
 11269                           
 11270                           ;stkvar	_l @ sp[(-4)+2]
 11271  016704  0EFE               	movlw	-2
 11272  016706  006F FF8F FFD9     	movff	plusw1,fsr2l
 11273  01670C  0EFF               	movlw	-1
 11274  01670E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11275  016714  50DF               	movf	indf2,w,c
 11276  016716  6E01               	movwf	btemp^0,c
 11277  016718  6A02               	clrf	(btemp+1)^0,c
 11278                           
 11279                           ;stkvar	_r @ sp[(-4)+0]
 11280  01671A  50E1               	movf	fsr1l,w,c
 11281  01671C  0FFC               	addlw	-4
 11282  01671E  6ED9               	movwf	fsr2l,c
 11283  016720  50E2               	movf	fsr1h,w,c
 11284  016722  6EDA               	movwf	fsr2h,c
 11285  016724  0EFF               	movlw	255
 11286  016726  22DA               	addwfc	fsr2h,f,c
 11287  016728  006F FF7B FFF6     	movff	postinc2,tblptrl
 11288  01672E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11289  016734                     	if	0	;tblptru may be non-zero
 11290  016734                     	endif
 11291  016734                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11292  016734  0E00               	movlw	low (__mediumconst shr (0+16))
 11293  016736  6EF8               	movwf	tblptru,c
 11294  016738                     	endif
 11295  016738  0008               	tblrd		*
 11296  01673A  50F5               	movf	tablat,w,c
 11297  01673C  5E01               	subwf	btemp^0,f,c
 11298  01673E  0E00               	movlw	0
 11299  016740  5A02               	subwfb	(btemp+1)^0,f,c
 11300  016742                     l3304:
 11301                           
 11302                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 11303  016742  0EF6               	movlw	246
 11304  016744  26E1               	addwf	fsr1l,f,c
 11305  016746  0EFF               	movlw	255
 11306  016748  22E2               	addwfc	fsr1h,f,c
 11307  01674A  0012               	return		;funcret
 11308  01674C                     __end_of_strncmp:
 11309                           	opt callstack 0
 11310                           
 11311 ;; *************** function _stoa *****************
 11312 ;; Defined at:
 11313 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11316 ;;		 -> f(6), NULL(0), 
 11317 ;;  s               2  [STACK] PTR unsigned char 
 11318 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 11319 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 11320 ;;		 -> STR_3(6), V(188), 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;  nuls            7  [STACK] unsigned char [7]
 11323 ;;  l               2  [STACK] int 
 11324 ;;  p               2  [STACK] int 
 11325 ;;  cp              2  [STACK] PTR unsigned char 
 11326 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 11327 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 11328 ;;		 -> STR_7(6), STR_3(6), V(188), 
 11329 ;;  w               2  [STACK] int 
 11330 ;;  i               2  [STACK] int 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  2  [STACK] int 
 11333 ;; Registers used:
 11334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11344 ;;Total ram usage:        0 bytes
 11345 ;; Hardware stack levels used:    1
 11346 ;; Hardware stack levels required when called:   10
 11347 ;; This function calls:
 11348 ;;		_fputc
 11349 ;;		_strlen
 11350 ;; This function is called by:
 11351 ;;		_vfpfcnvrt
 11352 ;; This function uses a reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text48
 11356  01577C                     __ptext48:
 11357                           	opt callstack 0
 11358  01577C                     _stoa:
 11359                           	opt callstack 0
 11360                           
 11361                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11362  01577C  0E11               	movlw	17
 11363  01577E  26E1               	addwf	fsr1l,f,c
 11364  015780  0E00               	movlw	0
 11365  015782  22E2               	addwfc	fsr1h,f,c
 11366                           
 11367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11368                           
 11369                           ;incstack = 0
 11370  015784  EE20  F0F1         	lfsr	2,stoa@F1166
 11371                           
 11372                           ;stkvar	_nuls @ sp[(-17)+0]
 11373  015788  0E07               	movlw	7
 11374  01578A  6E01               	movwf	btemp^0,c
 11375  01578C  0EEF               	movlw	-17
 11376  01578E                     us1016999:
 11377  01578E  006F FF7B FFE3     	movff	postinc2,plusw1
 11378  015794  28E8               	incf	wreg,w,c
 11379  015796  2E01               	decfsz	btemp^0,f,c
 11380  015798  D7FA               	bra	us1016999
 11381                           
 11382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 11383                           ;stkvar	_s @ sp[(-17)+-4]
 11384  01579A  0EEB               	movlw	-21
 11385  01579C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11386  0157A2  0EEC               	movlw	-20
 11387  0157A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11388                           
 11389                           ;stkvar	_cp @ sp[(-17)+11]
 11390  0157AA  0EFB               	movlw	-5
 11391  0157AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 11392  0157B2  0EFA               	movlw	-6
 11393  0157B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11394                           
 11395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 11396                           ;stkvar	_cp @ sp[(-17)+11]
 11397  0157BA  0EFA               	movlw	-6
 11398  0157BC  006F FF8C  F001    	movff	plusw1,btemp
 11399  0157C2  0EFB               	movlw	-5
 11400  0157C4  50E3               	movf	plusw1,w,c
 11401  0157C6  1001               	iorwf	btemp^0,w,c
 11402  0157C8  A4D8               	btfss	status,2,c
 11403  0157CA  D00E               	goto	l10802
 11404                           
 11405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11406                           ;stkvar	_nuls @ sp[(-17)+0]
 11407  0157CC  0EEF               	movlw	239
 11408  0157CE  24E1               	addwf	fsr1l,w,c
 11409  0157D0  6E0B               	movwf	(btemp+10)^0,c
 11410  0157D2  0EFF               	movlw	255
 11411  0157D4  20E2               	addwfc	fsr1h,w,c
 11412  0157D6  6E0C               	movwf	(btemp+11)^0,c
 11413                           
 11414                           ;stkvar	_cp @ sp[(-17)+11]
 11415  0157D8  0EFB               	movlw	-5
 11416  0157DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11417  0157E0  0EFA               	movlw	-6
 11418  0157E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11419  0157E8                     l10802:
 11420                           
 11421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11422                           ;stkvar	_cp @ sp[(-17)+11]
 11423  0157E8  0EFA               	movlw	-6
 11424  0157EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11425  0157F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11426  0157F6  ECDE  F0C0         	call	_strlen	;wreg free
 11427                           
 11428                           ;stkvar	_l @ sp[(-17)+7]
 11429  0157FA  0EF6               	movlw	-10
 11430  0157FC  0060  F007  FFE3   	movff	btemp,plusw1
 11431  015802  0EF7               	movlw	-9
 11432  015804  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11433                           
 11434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11435                           ;stkvar	_p @ sp[(-17)+9]
 11436  01580A  0EF8               	movlw	-8
 11437  01580C  0060  F09B  FFE3   	movff	_prec,plusw1
 11438  015812  0EF9               	movlw	-7
 11439  015814  0060  F09F  FFE3   	movff	_prec+1,plusw1
 11440                           
 11441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11442                           ;stkvar	_p @ sp[(-17)+9]
 11443  01581A  0EF9               	movlw	-7
 11444  01581C  BEE3               	btfsc	plusw1,7,c
 11445  01581E  D023               	goto	l2157
 11446                           
 11447                           ;stkvar	_l @ sp[(-17)+7]
 11448                           ;stkvar	_p @ sp[(-17)+9]
 11449  015820  50E1               	movf	fsr1l,w,c
 11450  015822  0FF8               	addlw	-8
 11451  015824  6ED9               	movwf	fsr2l,c
 11452  015826  50E2               	movf	fsr1h,w,c
 11453  015828  6EDA               	movwf	fsr2h,c
 11454  01582A  0EFF               	movlw	255
 11455  01582C  22DA               	addwfc	fsr2h,f,c
 11456  01582E  0EF6               	movlw	-10
 11457  015830  50E3               	movf	plusw1,w,c
 11458  015832  5CDE               	subwf	postinc2,w,c
 11459  015834  50DE               	movf	postinc2,w,c
 11460  015836  0A80               	xorlw	128
 11461  015838  6E01               	movwf	btemp^0,c
 11462  01583A  0EF7               	movlw	-9
 11463  01583C  50E3               	movf	plusw1,w,c
 11464  01583E  0A80               	xorlw	128
 11465  015840  5801               	subwfb	btemp^0,w,c
 11466  015842  B0D8               	btfsc	status,0,c
 11467  015844  D010               	goto	l2157
 11468                           
 11469                           ;stkvar	_p @ sp[(-17)+9]
 11470                           ;stkvar	_l @ sp[(-17)+7]
 11471  015846  0EF8               	movlw	-8
 11472  015848  006F FF8C  F001    	movff	plusw1,btemp
 11473  01584E  0EF6               	movlw	-10
 11474  015850  0060  F007  FFE3   	movff	btemp,plusw1
 11475  015856  0EF9               	movlw	-7
 11476  015858  006F FF8C  F001    	movff	plusw1,btemp
 11477  01585E  0EF7               	movlw	-9
 11478  015860  0060  F007  FFE3   	movff	btemp,plusw1
 11479  015866                     l2157:
 11480                           
 11481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11482                           ;stkvar	_l @ sp[(-17)+7]
 11483                           ;stkvar	_p @ sp[(-17)+9]
 11484  015866  0EF6               	movlw	-10
 11485  015868  006F FF8C  F001    	movff	plusw1,btemp
 11486  01586E  0EF8               	movlw	-8
 11487  015870  0060  F007  FFE3   	movff	btemp,plusw1
 11488  015876  0EF7               	movlw	-9
 11489  015878  006F FF8C  F001    	movff	plusw1,btemp
 11490  01587E  0EF9               	movlw	-7
 11491  015880  0060  F007  FFE3   	movff	btemp,plusw1
 11492                           
 11493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11494                           ;stkvar	_w @ sp[(-17)+13]
 11495  015886  0EFC               	movlw	-4
 11496  015888  0060  F093  FFE3   	movff	_width,plusw1
 11497  01588E  0EFD               	movlw	-3
 11498  015890  0060  F097  FFE3   	movff	_width+1,plusw1
 11499                           
 11500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11501  015896  A028               	btfss	_flags^0,0,c
 11502  015898  D01F               	goto	l10822
 11503  01589A  D031               	goto	u10210
 11504  01589C                     l10818:
 11505                           
 11506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11507                           ;stkvar	_fp @ sp[(-17)+-2]
 11508  01589C  0EED               	movlw	-19
 11509  01589E  006F FF8F FFE6     	movff	plusw1,postinc1
 11510  0158A4  006F FF8F FFE6     	movff	plusw1,postinc1
 11511  0158AA  0E20               	movlw	32
 11512  0158AC  6EE6               	movwf	postinc1,c
 11513  0158AE  0E00               	movlw	0
 11514  0158B0  6EE6               	movwf	postinc1,c
 11515  0158B2  EC45  F0B9         	call	_fputc	;wreg free
 11516                           
 11517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11518                           ;stkvar	_l @ sp[(-17)+7]
 11519  0158B6  0EF6               	movlw	-10
 11520  0158B8  50E3               	movf	plusw1,w,c
 11521  0158BA  0F01               	addlw	1
 11522  0158BC  6E01               	movwf	btemp^0,c
 11523  0158BE  0EF6               	movlw	-10
 11524  0158C0  0060  F007  FFE3   	movff	btemp,plusw1
 11525  0158C6  6A01               	clrf	btemp^0,c
 11526  0158C8  0EF7               	movlw	-9
 11527  0158CA  50E3               	movf	plusw1,w,c
 11528  0158CC  2001               	addwfc	btemp^0,w,c
 11529  0158CE  6E01               	movwf	btemp^0,c
 11530  0158D0  0EF7               	movlw	-9
 11531  0158D2  0060  F007  FFE3   	movff	btemp,plusw1
 11532  0158D8                     l10822:
 11533                           
 11534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11535                           ;stkvar	_w @ sp[(-17)+13]
 11536                           ;stkvar	_l @ sp[(-17)+7]
 11537  0158D8  50E1               	movf	fsr1l,w,c
 11538  0158DA  0FF6               	addlw	-10
 11539  0158DC  6ED9               	movwf	fsr2l,c
 11540  0158DE  50E2               	movf	fsr1h,w,c
 11541  0158E0  6EDA               	movwf	fsr2h,c
 11542  0158E2  0EFF               	movlw	255
 11543  0158E4  22DA               	addwfc	fsr2h,f,c
 11544  0158E6  0EFC               	movlw	-4
 11545  0158E8  50E3               	movf	plusw1,w,c
 11546  0158EA  5CDE               	subwf	postinc2,w,c
 11547  0158EC  50DE               	movf	postinc2,w,c
 11548  0158EE  0A80               	xorlw	128
 11549  0158F0  6E01               	movwf	btemp^0,c
 11550  0158F2  0EFD               	movlw	-3
 11551  0158F4  50E3               	movf	plusw1,w,c
 11552  0158F6  0A80               	xorlw	128
 11553  0158F8  5801               	subwfb	btemp^0,w,c
 11554  0158FA  A0D8               	btfss	status,0,c
 11555  0158FC  D7CF               	goto	l10818
 11556  0158FE                     u10210:
 11557                           
 11558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11559                           ;stkvar	_i @ sp[(-17)+15]
 11560  0158FE  0EFE               	movlw	-2
 11561  015900  6AE3               	clrf	plusw1,c
 11562  015902  0EFF               	movlw	-1
 11563  015904  6AE3               	clrf	plusw1,c
 11564                           
 11565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11566  015906  D045               	goto	l10832
 11567  015908                     l10826:
 11568                           
 11569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11570                           ;stkvar	_fp @ sp[(-17)+-2]
 11571  015908  0EED               	movlw	-19
 11572  01590A  006F FF8F FFE6     	movff	plusw1,postinc1
 11573  015910  006F FF8F FFE6     	movff	plusw1,postinc1
 11574                           
 11575                           ;stkvar	_cp @ sp[(-19)+11]
 11576  015916  0EF8               	movlw	-8
 11577  015918  006F FF8F FFF6     	movff	plusw1,tblptrl
 11578  01591E  0EF9               	movlw	-7
 11579  015920  006F FF8F FFF7     	movff	plusw1,tblptrh
 11580  015926  0E00               	movlw	low (__mediumconst shr (0+16))
 11581  015928  6EF8               	movwf	tblptru,c
 11582  01592A  0E1F               	movlw	(high __ramtop+-1)
 11583  01592C  64F7               	cpfsgt	tblptrh,c
 11584  01592E  D003               	bra	u10227
 11585  015930  0008               	tblrd		*
 11586  015932  50F5               	movf	tablat,w,c
 11587  015934  D007               	bra	u10220
 11588  015936                     u10227:
 11589  015936  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11590  01593C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11591  015942  50EF               	movf	indf0,w,c
 11592  015944                     u10220:
 11593  015944  6EE6               	movwf	postinc1,c
 11594  015946  0E00               	movlw	0
 11595  015948  6EE6               	movwf	postinc1,c
 11596  01594A  EC45  F0B9         	call	_fputc	;wreg free
 11597                           
 11598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11599                           ;stkvar	_cp @ sp[(-17)+11]
 11600  01594E  0EFA               	movlw	-6
 11601  015950  50E3               	movf	plusw1,w,c
 11602  015952  0F01               	addlw	1
 11603  015954  6E01               	movwf	btemp^0,c
 11604  015956  0EFA               	movlw	-6
 11605  015958  0060  F007  FFE3   	movff	btemp,plusw1
 11606  01595E  6A01               	clrf	btemp^0,c
 11607  015960  0EFB               	movlw	-5
 11608  015962  50E3               	movf	plusw1,w,c
 11609  015964  2001               	addwfc	btemp^0,w,c
 11610  015966  6E01               	movwf	btemp^0,c
 11611  015968  0EFB               	movlw	-5
 11612  01596A  0060  F007  FFE3   	movff	btemp,plusw1
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11615                           ;stkvar	_i @ sp[(-17)+15]
 11616  015970  0EFE               	movlw	-2
 11617  015972  50E3               	movf	plusw1,w,c
 11618  015974  0F01               	addlw	1
 11619  015976  6E01               	movwf	btemp^0,c
 11620  015978  0EFE               	movlw	-2
 11621  01597A  0060  F007  FFE3   	movff	btemp,plusw1
 11622  015980  6A01               	clrf	btemp^0,c
 11623  015982  0EFF               	movlw	-1
 11624  015984  50E3               	movf	plusw1,w,c
 11625  015986  2001               	addwfc	btemp^0,w,c
 11626  015988  6E01               	movwf	btemp^0,c
 11627  01598A  0EFF               	movlw	-1
 11628  01598C  0060  F007  FFE3   	movff	btemp,plusw1
 11629  015992                     l10832:
 11630                           
 11631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11632                           ;stkvar	_p @ sp[(-17)+9]
 11633                           ;stkvar	_i @ sp[(-17)+15]
 11634  015992  50E1               	movf	fsr1l,w,c
 11635  015994  0FFE               	addlw	-2
 11636  015996  6ED9               	movwf	fsr2l,c
 11637  015998  50E2               	movf	fsr1h,w,c
 11638  01599A  6EDA               	movwf	fsr2h,c
 11639  01599C  0EFF               	movlw	255
 11640  01599E  22DA               	addwfc	fsr2h,f,c
 11641  0159A0  0EF8               	movlw	-8
 11642  0159A2  50E3               	movf	plusw1,w,c
 11643  0159A4  5CDE               	subwf	postinc2,w,c
 11644  0159A6  50DE               	movf	postinc2,w,c
 11645  0159A8  0A80               	xorlw	128
 11646  0159AA  6E01               	movwf	btemp^0,c
 11647  0159AC  0EF9               	movlw	-7
 11648  0159AE  50E3               	movf	plusw1,w,c
 11649  0159B0  0A80               	xorlw	128
 11650  0159B2  5801               	subwfb	btemp^0,w,c
 11651  0159B4  A0D8               	btfss	status,0,c
 11652  0159B6  D7A8               	goto	l10826
 11653                           
 11654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11655  0159B8  B028               	btfsc	_flags^0,0,c
 11656  0159BA  D01F               	goto	l10840
 11657  0159BC  D031               	goto	u10250
 11658  0159BE                     l10836:
 11659                           
 11660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11661                           ;stkvar	_fp @ sp[(-17)+-2]
 11662  0159BE  0EED               	movlw	-19
 11663  0159C0  006F FF8F FFE6     	movff	plusw1,postinc1
 11664  0159C6  006F FF8F FFE6     	movff	plusw1,postinc1
 11665  0159CC  0E20               	movlw	32
 11666  0159CE  6EE6               	movwf	postinc1,c
 11667  0159D0  0E00               	movlw	0
 11668  0159D2  6EE6               	movwf	postinc1,c
 11669  0159D4  EC45  F0B9         	call	_fputc	;wreg free
 11670                           
 11671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11672                           ;stkvar	_l @ sp[(-17)+7]
 11673  0159D8  0EF6               	movlw	-10
 11674  0159DA  50E3               	movf	plusw1,w,c
 11675  0159DC  0F01               	addlw	1
 11676  0159DE  6E01               	movwf	btemp^0,c
 11677  0159E0  0EF6               	movlw	-10
 11678  0159E2  0060  F007  FFE3   	movff	btemp,plusw1
 11679  0159E8  6A01               	clrf	btemp^0,c
 11680  0159EA  0EF7               	movlw	-9
 11681  0159EC  50E3               	movf	plusw1,w,c
 11682  0159EE  2001               	addwfc	btemp^0,w,c
 11683  0159F0  6E01               	movwf	btemp^0,c
 11684  0159F2  0EF7               	movlw	-9
 11685  0159F4  0060  F007  FFE3   	movff	btemp,plusw1
 11686  0159FA                     l10840:
 11687                           
 11688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11689                           ;stkvar	_w @ sp[(-17)+13]
 11690                           ;stkvar	_l @ sp[(-17)+7]
 11691  0159FA  50E1               	movf	fsr1l,w,c
 11692  0159FC  0FF6               	addlw	-10
 11693  0159FE  6ED9               	movwf	fsr2l,c
 11694  015A00  50E2               	movf	fsr1h,w,c
 11695  015A02  6EDA               	movwf	fsr2h,c
 11696  015A04  0EFF               	movlw	255
 11697  015A06  22DA               	addwfc	fsr2h,f,c
 11698  015A08  0EFC               	movlw	-4
 11699  015A0A  50E3               	movf	plusw1,w,c
 11700  015A0C  5CDE               	subwf	postinc2,w,c
 11701  015A0E  50DE               	movf	postinc2,w,c
 11702  015A10  0A80               	xorlw	128
 11703  015A12  6E01               	movwf	btemp^0,c
 11704  015A14  0EFD               	movlw	-3
 11705  015A16  50E3               	movf	plusw1,w,c
 11706  015A18  0A80               	xorlw	128
 11707  015A1A  5801               	subwfb	btemp^0,w,c
 11708  015A1C  A0D8               	btfss	status,0,c
 11709  015A1E  D7CF               	goto	l10836
 11710  015A20                     u10250:
 11711                           
 11712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11713                           ;stkvar	_l @ sp[(-17)+7]
 11714  015A20  0EF6               	movlw	-10
 11715  015A22  006F FF8C  F001    	movff	plusw1,btemp
 11716  015A28  0EF7               	movlw	-9
 11717  015A2A  006F FF8C  F002    	movff	plusw1,btemp+1
 11718                           
 11719                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11720  015A30  0EEB               	movlw	235
 11721  015A32  26E1               	addwf	fsr1l,f,c
 11722  015A34  0EFF               	movlw	255
 11723  015A36  22E2               	addwfc	fsr1h,f,c
 11724  015A38  0012               	return		;funcret
 11725  015A3A                     __end_of_stoa:
 11726                           	opt callstack 0
 11727                           
 11728 ;; *************** function _efgtoa *****************
 11729 ;; Defined at:
 11730 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11733 ;;		 -> f(6), NULL(0), 
 11734 ;;  f               4  [STACK] PTR struct _IO_FILE
 11735 ;;  c               1  [STACK] unsigned char 
 11736 ;; Auto vars:     Size  Location     Type
 11737 ;;  u               4  [STACK] unsigned char 
 11738 ;;  g               4  [STACK] unsigned char 
 11739 ;;  l               4  [STACK] unsigned char 
 11740 ;;  h               4  [STACK] unsigned char 
 11741 ;;  ou              4  [STACK] unsigned char 
 11742 ;;  n               2  [STACK] int 
 11743 ;;  e               2  [STACK] int 
 11744 ;;  i               2  [STACK] int 
 11745 ;;  w               2  [STACK] int 
 11746 ;;  p               2  [STACK] int 
 11747 ;;  sign            2  [STACK] int 
 11748 ;;  d               2  [STACK] int 
 11749 ;;  ne              2  [STACK] int 
 11750 ;;  m               2  [STACK] int 
 11751 ;;  pp              2  [STACK] int 
 11752 ;;  t               2  [STACK] int 
 11753 ;;  mode            1  [STACK] unsigned char 
 11754 ;;  nmode           1  [STACK] unsigned char 
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  2  [STACK] int 
 11757 ;; Registers used:
 11758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11768 ;;Total ram usage:        0 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:   12
 11771 ;; This function calls:
 11772 ;;		___awdiv
 11773 ;;		___awmod
 11774 ;;		___fladd
 11775 ;;		___fldiv
 11776 ;;		___fleq
 11777 ;;		___flge
 11778 ;;		___flmul
 11779 ;;		___flneg
 11780 ;;		___flsub
 11781 ;;		___fltol
 11782 ;;		___fpclassifyf
 11783 ;;		_floorf
 11784 ;;		_isupper
 11785 ;;		_pad
 11786 ;;		_strcpy
 11787 ;;		_tolower
 11788 ;; This function is called by:
 11789 ;;		_vfpfcnvrt
 11790 ;; This function uses a reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text49
 11794  010000                     __ptext49:
 11795                           	opt callstack 0
 11796  010000                     _efgtoa:
 11797                           	opt callstack 0
 11798                           
 11799                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11800  010000  0E38               	movlw	56
 11801  010002  26E1               	addwf	fsr1l,f,c
 11802  010004  0E00               	movlw	0
 11803  010006  22E2               	addwfc	fsr1h,f,c
 11804                           
 11805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11806                           ;stkvar	_sign @ sp[(-56)+42]
 11807                           
 11808                           ;incstack = 0
 11809  010008  0EF2               	movlw	-14
 11810  01000A  6AE3               	clrf	plusw1,c
 11811  01000C  0EF3               	movlw	-13
 11812  01000E  6AE3               	clrf	plusw1,c
 11813                           
 11814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11815                           ;stkvar	_f @ sp[(-56)+-6]
 11816  010010  0EC2               	movlw	-62
 11817  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 11818  010018  0EC3               	movlw	-61
 11819  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 11820  010020  0EC4               	movlw	-60
 11821  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 11822  010028  0EC5               	movlw	-59
 11823  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11824                           
 11825                           ;stkvar	_g @ sp[(-56)+16]
 11826  010030  0ED8               	movlw	-40
 11827  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 11828  010038  0ED9               	movlw	-39
 11829  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11830  010040  0EDA               	movlw	-38
 11831  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11832  010048  0EDB               	movlw	-37
 11833  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11834                           
 11835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11836                           ;stkvar	_g @ sp[(-56)+16]
 11837  010050  0EDB               	movlw	-37
 11838  010052  AEE3               	btfss	plusw1,7,c
 11839  010054  D02B               	goto	l10500
 11840                           
 11841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11842  010056  0E01               	movlw	1
 11843  010058  6E0B               	movwf	(btemp+10)^0,c
 11844  01005A  0E00               	movlw	0
 11845  01005C  6E0C               	movwf	(btemp+11)^0,c
 11846                           
 11847                           ;stkvar	_sign @ sp[(-56)+42]
 11848  01005E  0EF2               	movlw	-14
 11849  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11850  010066  0EF3               	movlw	-13
 11851  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 11852                           
 11853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11854                           ;stkvar	_g @ sp[(-56)+16]
 11855  01006E  0ED8               	movlw	-40
 11856  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11857  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11858  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11859  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11860  010088  EC95  F0C6         	call	___flneg	;wreg free
 11861                           
 11862                           ;stkvar	_g @ sp[(-56)+16]
 11863  01008C  0ED8               	movlw	-40
 11864  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 11865  010094  0ED9               	movlw	-39
 11866  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11867  01009C  0EDA               	movlw	-38
 11868  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 11869  0100A4  0EDB               	movlw	-37
 11870  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 11871  0100AC                     l10500:
 11872                           
 11873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11874                           ;stkvar	_n @ sp[(-56)+32]
 11875  0100AC  0EE8               	movlw	-24
 11876  0100AE  6AE3               	clrf	plusw1,c
 11877  0100B0  0EE9               	movlw	-23
 11878  0100B2  6AE3               	clrf	plusw1,c
 11879                           
 11880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11881                           ;stkvar	_w @ sp[(-56)+38]
 11882  0100B4  0EEE               	movlw	-18
 11883  0100B6  0060  F093  FFE3   	movff	_width,plusw1
 11884  0100BC  0EEF               	movlw	-17
 11885  0100BE  0060  F097  FFE3   	movff	_width+1,plusw1
 11886                           
 11887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11888                           ;stkvar	_sign @ sp[(-56)+42]
 11889  0100C4  0EF2               	movlw	-14
 11890  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 11891  0100CC  0EF3               	movlw	-13
 11892  0100CE  50E3               	movf	plusw1,w,c
 11893  0100D0  1001               	iorwf	btemp^0,w,c
 11894  0100D2  A4D8               	btfss	status,2,c
 11895  0100D4  D002               	goto	u9660
 11896  0100D6  A428               	btfss	_flags^0,2,c
 11897  0100D8  D036               	goto	l10520
 11898  0100DA                     u9660:
 11899                           
 11900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11901                           ;stkvar	_sign @ sp[(-56)+42]
 11902  0100DA  0EF2               	movlw	-14
 11903  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 11904  0100E2  0EF3               	movlw	-13
 11905  0100E4  50E3               	movf	plusw1,w,c
 11906  0100E6  1001               	iorwf	btemp^0,w,c
 11907  0100E8  A4D8               	btfss	status,2,c
 11908  0100EA  D002               	goto	l10512
 11909  0100EC  0E2B               	movlw	43
 11910  0100EE  D001               	goto	L9
 11911  0100F0                     l10512:
 11912  0100F0  0E2D               	movlw	45
 11913  0100F2                     L9:
 11914  0100F2  6E0B               	movwf	(btemp+10)^0,c
 11915  0100F4  0E00               	movlw	0
 11916  0100F6  6E0C               	movwf	(btemp+11)^0,c
 11917                           
 11918                           ;stkvar	_efgtoa$5071 @ sp[(-56)+10]
 11919  0100F8  0ED2               	movlw	-46
 11920  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11921  010100  0ED3               	movlw	-45
 11922  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 11923                           
 11924                           ;stkvar	_efgtoa$5071 @ sp[(-56)+10]
 11925  010108  0ED2               	movlw	-46
 11926  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11927                           
 11928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11929                           ;stkvar	_n @ sp[(-56)+32]
 11930  010110  0EE8               	movlw	-24
 11931  010112  50E3               	movf	plusw1,w,c
 11932  010114  0F01               	addlw	1
 11933  010116  6E01               	movwf	btemp^0,c
 11934  010118  0EE8               	movlw	-24
 11935  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 11936  010120  6A01               	clrf	btemp^0,c
 11937  010122  0EE9               	movlw	-23
 11938  010124  50E3               	movf	plusw1,w,c
 11939  010126  2001               	addwfc	btemp^0,w,c
 11940  010128  6E01               	movwf	btemp^0,c
 11941  01012A  0EE9               	movlw	-23
 11942  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 11943                           
 11944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11945                           ;stkvar	_w @ sp[(-56)+38]
 11946  010132  50E1               	movf	fsr1l,w,c
 11947  010134  0FEE               	addlw	-18
 11948  010136  6ED9               	movwf	fsr2l,c
 11949  010138  50E2               	movf	fsr1h,w,c
 11950  01013A  6EDA               	movwf	fsr2h,c
 11951  01013C  0EFF               	movlw	255
 11952  01013E  22DA               	addwfc	fsr2h,f,c
 11953  010140  06DE               	decf	postinc2,f,c
 11954  010142  0E00               	movlw	0
 11955  010144  5ADD               	subwfb	postdec2,f,c
 11956  010146                     l10520:
 11957                           
 11958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11959                           ;stkvar	_g @ sp[(-56)+16]
 11960  010146  0ED8               	movlw	-40
 11961  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11962  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11963  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11964  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11965  010160  EC86  F0B4         	call	___fpclassifyf	;wreg free
 11966  010164  0401               	decf	btemp^0,w,c
 11967  010166  1002               	iorwf	(btemp+1)^0,w,c
 11968  010168  A4D8               	btfss	status,2,c
 11969  01016A  D076               	goto	l10538
 11970  01016C  0EBF               	movlw	191
 11971  01016E  6E0B               	movwf	(btemp+10)^0,c
 11972  010170  0EFF               	movlw	255
 11973  010172  6E0C               	movwf	(btemp+11)^0,c
 11974                           
 11975                           ;stkvar	_c @ sp[(-56)+-7]
 11976  010174  0EC1               	movlw	-63
 11977  010176  50E3               	movf	plusw1,w,c
 11978  010178  6E09               	movwf	(btemp+8)^0,c
 11979  01017A  6A0A               	clrf	(btemp+9)^0,c
 11980  01017C  500B               	movf	(btemp+10)^0,w,c
 11981  01017E  2609               	addwf	(btemp+8)^0,f,c
 11982  010180  500C               	movf	(btemp+11)^0,w,c
 11983  010182  220A               	addwfc	(btemp+9)^0,f,c
 11984  010184  500A               	movf	(btemp+9)^0,w,c
 11985  010186  E106               	bnz	u9690
 11986  010188  0E1A               	movlw	26
 11987  01018A  5C09               	subwf	(btemp+8)^0,w,c
 11988  01018C  B0D8               	btfsc	status,0,c
 11989  01018E  D002               	goto	u9690
 11990  010190  0E01               	movlw	1
 11991  010192  D001               	goto	u9700
 11992  010194                     u9690:
 11993  010194  0E00               	movlw	0
 11994  010196                     u9700:
 11995  010196  6E0B               	movwf	(btemp+10)^0,c
 11996  010198  6A0C               	clrf	(btemp+11)^0,c
 11997                           
 11998                           ;stkvar	_efgtoa$5072 @ sp[(-56)+8]
 11999  01019A  0ED0               	movlw	-48
 12000  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12001  0101A2  0ED1               	movlw	-47
 12002  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12003                           
 12004                           ;stkvar	_efgtoa$5072 @ sp[(-56)+8]
 12005  0101AA  0ED0               	movlw	-48
 12006  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 12007  0101B2  0ED1               	movlw	-47
 12008  0101B4  50E3               	movf	plusw1,w,c
 12009  0101B6  1001               	iorwf	btemp^0,w,c
 12010  0101B8  B4D8               	btfsc	status,2,c
 12011  0101BA  D017               	goto	l10530
 12012                           
 12013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 12014  0101BC  0EE6               	movlw	low STR_46
 12015  0101BE  6EE6               	movwf	postinc1,c
 12016  0101C0  0EFF               	movlw	high STR_46
 12017  0101C2  6EE6               	movwf	postinc1,c
 12018                           
 12019                           ;stkvar	_n @ sp[(-58)+32]
 12020  0101C4  0E94               	movlw	low _dbuf
 12021  0101C6  6E0B               	movwf	(btemp+10)^0,c
 12022  0101C8  0E03               	movlw	high _dbuf
 12023  0101CA  6E0C               	movwf	(btemp+11)^0,c
 12024  0101CC  0EE6               	movlw	-26
 12025  0101CE  50E3               	movf	plusw1,w,c
 12026  0101D0  260B               	addwf	(btemp+10)^0,f,c
 12027  0101D2  0EE7               	movlw	-25
 12028  0101D4  50E3               	movf	plusw1,w,c
 12029  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 12030  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12031  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12032  0101E4  ECE8  F0BD         	call	_strcpy	;wreg free
 12033                           
 12034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 12035  0101E8  D016               	goto	l10532
 12036  0101EA                     l10530:
 12037                           
 12038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 12039  0101EA  0EEE               	movlw	low STR_47
 12040  0101EC  6EE6               	movwf	postinc1,c
 12041  0101EE  0EFF               	movlw	high STR_47
 12042  0101F0  6EE6               	movwf	postinc1,c
 12043                           
 12044                           ;stkvar	_n @ sp[(-58)+32]
 12045  0101F2  0E94               	movlw	low _dbuf
 12046  0101F4  6E0B               	movwf	(btemp+10)^0,c
 12047  0101F6  0E03               	movlw	high _dbuf
 12048  0101F8  6E0C               	movwf	(btemp+11)^0,c
 12049  0101FA  0EE6               	movlw	-26
 12050  0101FC  50E3               	movf	plusw1,w,c
 12051  0101FE  260B               	addwf	(btemp+10)^0,f,c
 12052  010200  0EE7               	movlw	-25
 12053  010202  50E3               	movf	plusw1,w,c
 12054  010204  220C               	addwfc	(btemp+11)^0,f,c
 12055  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12056  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12057  010212  ECE8  F0BD         	call	_strcpy	;wreg free
 12058  010216                     l10532:
 12059                           
 12060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 12061                           ;stkvar	_w @ sp[(-56)+38]
 12062  010216  50E1               	movf	fsr1l,w,c
 12063  010218  0FEE               	addlw	-18
 12064  01021A  6ED9               	movwf	fsr2l,c
 12065  01021C  50E2               	movf	fsr1h,w,c
 12066  01021E  6EDA               	movwf	fsr2h,c
 12067  010220  0EFF               	movlw	255
 12068  010222  22DA               	addwfc	fsr2h,f,c
 12069  010224  0EFD               	movlw	253
 12070  010226  26DE               	addwf	postinc2,f,c
 12071  010228  0EFF               	movlw	255
 12072  01022A  22DD               	addwfc	postdec2,f,c
 12073  01022C                     l10534:
 12074                           
 12075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 12076                           ;stkvar	_w @ sp[(-56)+38]
 12077  01022C  0EEE               	movlw	-18
 12078  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 12079  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 12080  01023A  0E94               	movlw	low _dbuf
 12081  01023C  6EE6               	movwf	postinc1,c
 12082  01023E  0E03               	movlw	high _dbuf
 12083  010240  6EE6               	movwf	postinc1,c
 12084                           
 12085                           ;stkvar	_fp @ sp[(-60)+-2]
 12086  010242  0EC2               	movlw	-62
 12087  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 12088  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 12089  010250  EC63  F0BA         	call	_pad	;wreg free
 12090  010254  EF1D  F089         	goto	l2075
 12091  010258                     l10538:
 12092                           
 12093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12094                           ;stkvar	_g @ sp[(-56)+16]
 12095  010258  0ED8               	movlw	-40
 12096  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 12097  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 12098  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 12099  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 12100  010272  EC86  F0B4         	call	___fpclassifyf	;wreg free
 12101  010276  5001               	movf	btemp^0,w,c
 12102  010278  1002               	iorwf	(btemp+1)^0,w,c
 12103  01027A  A4D8               	btfss	status,2,c
 12104  01027C  D056               	goto	l10556
 12105  01027E  0EBF               	movlw	191
 12106  010280  6E0B               	movwf	(btemp+10)^0,c
 12107  010282  0EFF               	movlw	255
 12108  010284  6E0C               	movwf	(btemp+11)^0,c
 12109                           
 12110                           ;stkvar	_c @ sp[(-56)+-7]
 12111  010286  0EC1               	movlw	-63
 12112  010288  50E3               	movf	plusw1,w,c
 12113  01028A  6E09               	movwf	(btemp+8)^0,c
 12114  01028C  6A0A               	clrf	(btemp+9)^0,c
 12115  01028E  500B               	movf	(btemp+10)^0,w,c
 12116  010290  2609               	addwf	(btemp+8)^0,f,c
 12117  010292  500C               	movf	(btemp+11)^0,w,c
 12118  010294  220A               	addwfc	(btemp+9)^0,f,c
 12119  010296  500A               	movf	(btemp+9)^0,w,c
 12120  010298  E106               	bnz	u9730
 12121  01029A  0E1A               	movlw	26
 12122  01029C  5C09               	subwf	(btemp+8)^0,w,c
 12123  01029E  B0D8               	btfsc	status,0,c
 12124  0102A0  D002               	goto	u9730
 12125  0102A2  0E01               	movlw	1
 12126  0102A4  D001               	goto	u9740
 12127  0102A6                     u9730:
 12128  0102A6  0E00               	movlw	0
 12129  0102A8                     u9740:
 12130  0102A8  6E0B               	movwf	(btemp+10)^0,c
 12131  0102AA  6A0C               	clrf	(btemp+11)^0,c
 12132                           
 12133                           ;stkvar	_efgtoa$5076 @ sp[(-56)+6]
 12134  0102AC  0ECE               	movlw	-50
 12135  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12136  0102B4  0ECF               	movlw	-49
 12137  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12138                           
 12139                           ;stkvar	_efgtoa$5076 @ sp[(-56)+6]
 12140  0102BC  0ECE               	movlw	-50
 12141  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 12142  0102C4  0ECF               	movlw	-49
 12143  0102C6  50E3               	movf	plusw1,w,c
 12144  0102C8  1001               	iorwf	btemp^0,w,c
 12145  0102CA  B4D8               	btfsc	status,2,c
 12146  0102CC  D017               	goto	l10548
 12147                           
 12148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 12149  0102CE  0EEA               	movlw	low STR_50
 12150  0102D0  6EE6               	movwf	postinc1,c
 12151  0102D2  0EFF               	movlw	high STR_50
 12152  0102D4  6EE6               	movwf	postinc1,c
 12153                           
 12154                           ;stkvar	_n @ sp[(-58)+32]
 12155  0102D6  0E94               	movlw	low _dbuf
 12156  0102D8  6E0B               	movwf	(btemp+10)^0,c
 12157  0102DA  0E03               	movlw	high _dbuf
 12158  0102DC  6E0C               	movwf	(btemp+11)^0,c
 12159  0102DE  0EE6               	movlw	-26
 12160  0102E0  50E3               	movf	plusw1,w,c
 12161  0102E2  260B               	addwf	(btemp+10)^0,f,c
 12162  0102E4  0EE7               	movlw	-25
 12163  0102E6  50E3               	movf	plusw1,w,c
 12164  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 12165  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12166  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12167  0102F6  ECE8  F0BD         	call	_strcpy	;wreg free
 12168                           
 12169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 12170  0102FA  D78D               	goto	l10532
 12171  0102FC                     l10548:
 12172                           
 12173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 12174  0102FC  0EF2               	movlw	low STR_51
 12175  0102FE  6EE6               	movwf	postinc1,c
 12176  010300  0EFF               	movlw	high STR_51
 12177  010302  6EE6               	movwf	postinc1,c
 12178                           
 12179                           ;stkvar	_n @ sp[(-58)+32]
 12180  010304  0E94               	movlw	low _dbuf
 12181  010306  6E0B               	movwf	(btemp+10)^0,c
 12182  010308  0E03               	movlw	high _dbuf
 12183  01030A  6E0C               	movwf	(btemp+11)^0,c
 12184  01030C  0EE6               	movlw	-26
 12185  01030E  50E3               	movf	plusw1,w,c
 12186  010310  260B               	addwf	(btemp+10)^0,f,c
 12187  010312  0EE7               	movlw	-25
 12188  010314  50E3               	movf	plusw1,w,c
 12189  010316  220C               	addwfc	(btemp+11)^0,f,c
 12190  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12191  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12192  010324  ECE8  F0BD         	call	_strcpy	;wreg free
 12193  010328  D776               	goto	l10532
 12194  01032A                     l10556:
 12195                           
 12196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 12197  01032A  0E00               	movlw	0
 12198  01032C  6E09               	movwf	(btemp+8)^0,c
 12199  01032E  0E00               	movlw	0
 12200  010330  6E0A               	movwf	(btemp+9)^0,c
 12201  010332  0E80               	movlw	128
 12202  010334  6E0B               	movwf	(btemp+10)^0,c
 12203  010336  0E3F               	movlw	63
 12204  010338  6E0C               	movwf	(btemp+11)^0,c
 12205                           
 12206                           ;stkvar	_u @ sp[(-56)+12]
 12207  01033A  0ED4               	movlw	-44
 12208  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 12209  010342  0ED5               	movlw	-43
 12210  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12211  01034A  0ED6               	movlw	-42
 12212  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12213  010352  0ED7               	movlw	-41
 12214  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 12215                           
 12216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 12217                           ;stkvar	_e @ sp[(-56)+34]
 12218  01035A  0EEA               	movlw	-22
 12219  01035C  6AE3               	clrf	plusw1,c
 12220  01035E  0EEB               	movlw	-21
 12221  010360  6AE3               	clrf	plusw1,c
 12222                           
 12223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 12224  010362  0E00               	movlw	0
 12225  010364  6EE6               	movwf	postinc1,c
 12226  010366  0E00               	movlw	0
 12227  010368  6EE6               	movwf	postinc1,c
 12228  01036A  0E00               	movlw	0
 12229  01036C  6EE6               	movwf	postinc1,c
 12230  01036E  0E00               	movlw	0
 12231  010370  6EE6               	movwf	postinc1,c
 12232                           
 12233                           ;stkvar	_g @ sp[(-60)+16]
 12234  010372  0ED4               	movlw	-44
 12235  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 12236  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 12237  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 12238  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 12239  01038C  EC22  F0BF         	call	___fleq	;wreg free
 12240  010390  A001               	btfss	btemp& (0+255),0,c
 12241  010392  D039               	goto	l10568
 12242  010394  D0BC               	goto	u9780
 12243  010396                     l10564:
 12244                           
 12245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 12246  010396  0E00               	movlw	0
 12247  010398  6EE6               	movwf	postinc1,c
 12248  01039A  0E00               	movlw	0
 12249  01039C  6EE6               	movwf	postinc1,c
 12250  01039E  0E20               	movlw	32
 12251  0103A0  6EE6               	movwf	postinc1,c
 12252  0103A2  0E41               	movlw	65
 12253  0103A4  6EE6               	movwf	postinc1,c
 12254                           
 12255                           ;stkvar	_u @ sp[(-60)+12]
 12256  0103A6  0ED0               	movlw	-48
 12257  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12258  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12259  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 12260  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 12261  0103C0  EC1A  F093         	call	___flmul	;wreg free
 12262                           
 12263                           ;stkvar	_u @ sp[(-56)+12]
 12264  0103C4  0ED4               	movlw	-44
 12265  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 12266  0103CC  0ED5               	movlw	-43
 12267  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12268  0103D4  0ED6               	movlw	-42
 12269  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12270  0103DC  0ED7               	movlw	-41
 12271  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 12272                           
 12273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 12274                           ;stkvar	_e @ sp[(-56)+34]
 12275  0103E4  0EEA               	movlw	-22
 12276  0103E6  50E3               	movf	plusw1,w,c
 12277  0103E8  0F01               	addlw	1
 12278  0103EA  6E01               	movwf	btemp^0,c
 12279  0103EC  0EEA               	movlw	-22
 12280  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 12281  0103F4  6A01               	clrf	btemp^0,c
 12282  0103F6  0EEB               	movlw	-21
 12283  0103F8  50E3               	movf	plusw1,w,c
 12284  0103FA  2001               	addwfc	btemp^0,w,c
 12285  0103FC  6E01               	movwf	btemp^0,c
 12286  0103FE  0EEB               	movlw	-21
 12287  010400  0060  F007  FFE3   	movff	btemp,plusw1
 12288  010406                     l10568:
 12289                           
 12290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 12291  010406  0E00               	movlw	0
 12292  010408  6EE6               	movwf	postinc1,c
 12293  01040A  0E00               	movlw	0
 12294  01040C  6EE6               	movwf	postinc1,c
 12295  01040E  0E20               	movlw	32
 12296  010410  6EE6               	movwf	postinc1,c
 12297  010412  0E41               	movlw	65
 12298  010414  6EE6               	movwf	postinc1,c
 12299                           
 12300                           ;stkvar	_u @ sp[(-60)+12]
 12301  010416  0ED0               	movlw	-48
 12302  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 12303  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 12304  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 12305  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 12306  010430  EC1A  F093         	call	___flmul	;wreg free
 12307  010434  0060  F007  FFE6   	movff	btemp,postinc1
 12308  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12309  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12310  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 12311                           
 12312                           ;stkvar	_g @ sp[(-60)+16]
 12313  01044C  0ED4               	movlw	-44
 12314  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 12315  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 12316  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 12317  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 12318  010466  ECC2  F0B6         	call	___flge	;wreg free
 12319  01046A  A001               	btfss	btemp& (0+255),0,c
 12320  01046C  D032               	goto	l10574
 12321  01046E  D793               	goto	l10564
 12322  010470                     l10570:
 12323                           
 12324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 12325  010470  0E00               	movlw	0
 12326  010472  6EE6               	movwf	postinc1,c
 12327  010474  0E00               	movlw	0
 12328  010476  6EE6               	movwf	postinc1,c
 12329  010478  0E20               	movlw	32
 12330  01047A  6EE6               	movwf	postinc1,c
 12331  01047C  0E41               	movlw	65
 12332  01047E  6EE6               	movwf	postinc1,c
 12333                           
 12334                           ;stkvar	_u @ sp[(-60)+12]
 12335  010480  0ED0               	movlw	-48
 12336  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 12337  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 12338  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 12339  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 12340  01049A  ECF5  F09D         	call	___fldiv	;wreg free
 12341                           
 12342                           ;stkvar	_u @ sp[(-56)+12]
 12343  01049E  0ED4               	movlw	-44
 12344  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 12345  0104A6  0ED5               	movlw	-43
 12346  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12347  0104AE  0ED6               	movlw	-42
 12348  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12349  0104B6  0ED7               	movlw	-41
 12350  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 12351                           
 12352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 12353                           ;stkvar	_e @ sp[(-56)+34]
 12354  0104BE  50E1               	movf	fsr1l,w,c
 12355  0104C0  0FEA               	addlw	-22
 12356  0104C2  6ED9               	movwf	fsr2l,c
 12357  0104C4  50E2               	movf	fsr1h,w,c
 12358  0104C6  6EDA               	movwf	fsr2h,c
 12359  0104C8  0EFF               	movlw	255
 12360  0104CA  22DA               	addwfc	fsr2h,f,c
 12361  0104CC  06DE               	decf	postinc2,f,c
 12362  0104CE  0E00               	movlw	0
 12363  0104D0  5ADD               	subwfb	postdec2,f,c
 12364  0104D2                     l10574:
 12365                           
 12366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 12367                           ;stkvar	_u @ sp[(-56)+12]
 12368  0104D2  0ED4               	movlw	-44
 12369  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12370  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 12372  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 12373                           
 12374                           ;stkvar	_g @ sp[(-60)+16]
 12375  0104EC  0ED4               	movlw	-44
 12376  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 12377  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 12378  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 12379  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 12380  010506  ECC2  F0B6         	call	___flge	;wreg free
 12381  01050A  A001               	btfss	btemp& (0+255),0,c
 12382  01050C  D7B1               	goto	l10570
 12383  01050E                     u9780:
 12384                           
 12385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 12386                           ;stkvar	_c @ sp[(-56)+-7]
 12387  01050E  0EC1               	movlw	-63
 12388  010510  50E3               	movf	plusw1,w,c
 12389  010512  6EE6               	movwf	postinc1,c
 12390  010514  0E00               	movlw	0
 12391  010516  6EE6               	movwf	postinc1,c
 12392  010518  EC26  F0C3         	call	_tolower	;wreg free
 12393                           
 12394                           ;stkvar	_mode @ sp[(-56)+54]
 12395  01051C  0EFE               	movlw	-2
 12396  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 12397                           
 12398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 12399                           ;stkvar	_mode @ sp[(-56)+54]
 12400                           ;stkvar	_nmode @ sp[(-56)+55]
 12401  010524  0EFE               	movlw	-2
 12402  010526  006F FF8C  F001    	movff	plusw1,btemp
 12403  01052C  0EFF               	movlw	-1
 12404  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 12405                           
 12406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 12407                           ;stkvar	_mode @ sp[(-56)+54]
 12408  010534  0EFE               	movlw	-2
 12409  010536  006F FF8C  F001    	movff	plusw1,btemp
 12410  01053C  0E67               	movlw	103
 12411  01053E  1801               	xorwf	btemp^0,w,c
 12412  010540  A4D8               	btfss	status,2,c
 12413  010542  D025               	goto	l10592
 12414                           
 12415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 12416  010544  5026               	movf	_prec^0,w,c
 12417  010546  1027               	iorwf	(_prec+1)^0,w,c
 12418  010548  A4D8               	btfss	status,2,c
 12419  01054A  D004               	goto	l10586
 12420                           
 12421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12422  01054C  0E00               	movlw	0
 12423  01054E  6E27               	movwf	(_prec+1)^0,c
 12424  010550  0E01               	movlw	1
 12425  010552  6E26               	movwf	_prec^0,c
 12426  010554                     l10586:
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12429  010554  BE27               	btfsc	(_prec+1)^0,7,c
 12430  010556  D005               	goto	u9810
 12431  010558  5027               	movf	(_prec+1)^0,w,c
 12432  01055A  E110               	bnz	l10590
 12433  01055C  0426               	decf	_prec^0,w,c
 12434  01055E  B0D8               	btfsc	status,0,c
 12435  010560  D00D               	goto	l10590
 12436  010562                     u9810:
 12437  010562  0E06               	movlw	6
 12438  010564  6E0B               	movwf	(btemp+10)^0,c
 12439  010566  0E00               	movlw	0
 12440  010568  6E0C               	movwf	(btemp+11)^0,c
 12441                           
 12442                           ;stkvar	_p @ sp[(-56)+40]
 12443  01056A  0EF0               	movlw	-16
 12444  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12445  010572  0EF1               	movlw	-15
 12446  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 12447  01057A  D00C               	goto	l10598
 12448  01057C                     l10590:
 12449                           
 12450                           ;stkvar	_p @ sp[(-56)+40]
 12451  01057C  0EF0               	movlw	-16
 12452  01057E  0060  F09B  FFE3   	movff	_prec,plusw1
 12453  010584  0EF1               	movlw	-15
 12454  010586  0060  F09F  FFE3   	movff	_prec+1,plusw1
 12455  01058C  D003               	goto	l10598
 12456  01058E                     l10592:
 12457                           
 12458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12459  01058E  AE27               	btfss	(_prec+1)^0,7,c
 12460  010590  D7F5               	goto	l10590
 12461  010592  D7E7               	goto	u9810
 12462  010594                     l10598:
 12463                           
 12464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12465                           ;stkvar	_mode @ sp[(-56)+54]
 12466  010594  0EFE               	movlw	-2
 12467  010596  006F FF8C  F001    	movff	plusw1,btemp
 12468  01059C  0E67               	movlw	103
 12469  01059E  1801               	xorwf	btemp^0,w,c
 12470  0105A0  A4D8               	btfss	status,2,c
 12471  0105A2  D02F               	goto	l10608
 12472                           
 12473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12474                           ;stkvar	_e @ sp[(-56)+34]
 12475  0105A4  0EEB               	movlw	-21
 12476  0105A6  AEE3               	btfss	plusw1,7,c
 12477  0105A8  D00E               	goto	u9840
 12478  0105AA  0EEA               	movlw	-22
 12479  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 12480  0105B2  0EFC               	movlw	252
 12481  0105B4  5E01               	subwf	btemp^0,f,c
 12482  0105B6  0EEB               	movlw	-21
 12483  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 12484  0105BE  0EFF               	movlw	255
 12485  0105C0  5A01               	subwfb	btemp^0,f,c
 12486  0105C2  A0D8               	btfss	status,0,c
 12487  0105C4  D018               	goto	l10606
 12488  0105C6                     u9840:
 12489                           
 12490                           ;stkvar	_e @ sp[(-56)+34]
 12491                           ;stkvar	_p @ sp[(-56)+40]
 12492  0105C6  0EF0               	movlw	-16
 12493  0105C8  50E3               	movf	plusw1,w,c
 12494  0105CA  0FFF               	addlw	255
 12495  0105CC  6E0B               	movwf	(btemp+10)^0,c
 12496  0105CE  0EF1               	movlw	-15
 12497  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12498  0105D6  0EFF               	movlw	255
 12499  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 12500  0105DA  0EEA               	movlw	-22
 12501  0105DC  50E3               	movf	plusw1,w,c
 12502  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 12503  0105E0  500C               	movf	(btemp+11)^0,w,c
 12504  0105E2  0A80               	xorlw	128
 12505  0105E4  6E01               	movwf	btemp^0,c
 12506  0105E6  0EEB               	movlw	-21
 12507  0105E8  50E3               	movf	plusw1,w,c
 12508  0105EA  0A80               	xorlw	128
 12509  0105EC  5801               	subwfb	btemp^0,w,c
 12510  0105EE  A0D8               	btfss	status,0,c
 12511  0105F0  D002               	goto	l10606
 12512                           
 12513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12514  0105F2  0E66               	movlw	102
 12515  0105F4  D001               	goto	L10
 12516  0105F6                     l10606:
 12517                           
 12518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12519  0105F6  0E65               	movlw	101
 12520  0105F8                     L10:
 12521  0105F8  6E0C               	movwf	(btemp+11)^0,c
 12522                           
 12523                           ;stkvar	_nmode @ sp[(-56)+55]
 12524  0105FA  0EFF               	movlw	-1
 12525  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12526  010602                     l10608:
 12527                           
 12528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12529                           ;stkvar	_p @ sp[(-56)+40]
 12530                           ;stkvar	_m @ sp[(-56)+48]
 12531  010602  0EF0               	movlw	-16
 12532  010604  006F FF8C  F001    	movff	plusw1,btemp
 12533  01060A  0EF8               	movlw	-8
 12534  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 12535  010612  0EF1               	movlw	-15
 12536  010614  006F FF8C  F001    	movff	plusw1,btemp
 12537  01061A  0EF9               	movlw	-7
 12538  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 12539                           
 12540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12541                           ;stkvar	_mode @ sp[(-56)+54]
 12542  010622  0EFE               	movlw	-2
 12543  010624  006F FF8C  F001    	movff	plusw1,btemp
 12544  01062A  0E67               	movlw	103
 12545  01062C  1801               	xorwf	btemp^0,w,c
 12546  01062E  A4D8               	btfss	status,2,c
 12547  010630  D00B               	goto	u9880
 12548                           
 12549                           ;stkvar	_nmode @ sp[(-56)+55]
 12550  010632  0EFF               	movlw	-1
 12551  010634  006F FF8C  F001    	movff	plusw1,btemp
 12552  01063A  0E66               	movlw	102
 12553  01063C  1801               	xorwf	btemp^0,w,c
 12554  01063E  A4D8               	btfss	status,2,c
 12555  010640  D014               	goto	l2104
 12556                           
 12557                           ;stkvar	_e @ sp[(-56)+34]
 12558  010642  0EEB               	movlw	-21
 12559  010644  AEE3               	btfss	plusw1,7,c
 12560  010646  D011               	goto	l2104
 12561  010648                     u9880:
 12562                           
 12563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12564                           ;stkvar	_m @ sp[(-56)+48]
 12565  010648  0EF8               	movlw	-8
 12566  01064A  50E3               	movf	plusw1,w,c
 12567  01064C  0F01               	addlw	1
 12568  01064E  6E01               	movwf	btemp^0,c
 12569  010650  0EF8               	movlw	-8
 12570  010652  0060  F007  FFE3   	movff	btemp,plusw1
 12571  010658  6A01               	clrf	btemp^0,c
 12572  01065A  0EF9               	movlw	-7
 12573  01065C  50E3               	movf	plusw1,w,c
 12574  01065E  2001               	addwfc	btemp^0,w,c
 12575  010660  6E01               	movwf	btemp^0,c
 12576  010662  0EF9               	movlw	-7
 12577  010664  0060  F007  FFE3   	movff	btemp,plusw1
 12578  01066A                     l2104:
 12579                           
 12580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12581                           ;stkvar	_nmode @ sp[(-56)+55]
 12582  01066A  0EFF               	movlw	-1
 12583  01066C  006F FF8C  F001    	movff	plusw1,btemp
 12584  010672  0E66               	movlw	102
 12585  010674  1801               	xorwf	btemp^0,w,c
 12586  010676  A4D8               	btfss	status,2,c
 12587  010678  D03B               	goto	l10628
 12588                           
 12589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12590                           ;stkvar	_e @ sp[(-56)+34]
 12591  01067A  0EEB               	movlw	-21
 12592  01067C  AEE3               	btfss	plusw1,7,c
 12593  01067E  D01C               	goto	l10624
 12594                           
 12595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12596  010680  0E00               	movlw	0
 12597  010682  6E09               	movwf	(btemp+8)^0,c
 12598  010684  0E00               	movlw	0
 12599  010686  6E0A               	movwf	(btemp+9)^0,c
 12600  010688  0E80               	movlw	128
 12601  01068A  6E0B               	movwf	(btemp+10)^0,c
 12602  01068C  0E3F               	movlw	63
 12603  01068E  6E0C               	movwf	(btemp+11)^0,c
 12604                           
 12605                           ;stkvar	_u @ sp[(-56)+12]
 12606  010690  0ED4               	movlw	-44
 12607  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 12608  010698  0ED5               	movlw	-43
 12609  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12610  0106A0  0ED6               	movlw	-42
 12611  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12612  0106A8  0ED7               	movlw	-41
 12613  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 12614                           
 12615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12616                           ;stkvar	_e @ sp[(-56)+34]
 12617  0106B0  0EEA               	movlw	-22
 12618  0106B2  6AE3               	clrf	plusw1,c
 12619  0106B4  0EEB               	movlw	-21
 12620  0106B6  6AE3               	clrf	plusw1,c
 12621  0106B8                     l10624:
 12622                           
 12623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12624                           ;stkvar	_mode @ sp[(-56)+54]
 12625  0106B8  0EFE               	movlw	-2
 12626  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 12627  0106C0  0E67               	movlw	103
 12628  0106C2  1801               	xorwf	btemp^0,w,c
 12629  0106C4  B4D8               	btfsc	status,2,c
 12630  0106C6  D014               	goto	l10628
 12631                           
 12632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12633                           ;stkvar	_e @ sp[(-56)+34]
 12634                           ;stkvar	_m @ sp[(-56)+48]
 12635  0106C8  0EF8               	movlw	-8
 12636  0106CA  50E3               	movf	plusw1,w,c
 12637  0106CC  6E01               	movwf	btemp^0,c
 12638  0106CE  0EEA               	movlw	-22
 12639  0106D0  50E3               	movf	plusw1,w,c
 12640  0106D2  2601               	addwf	btemp^0,f,c
 12641  0106D4  0EF8               	movlw	-8
 12642  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 12643  0106DC  0EF9               	movlw	-7
 12644  0106DE  50E3               	movf	plusw1,w,c
 12645  0106E0  6E01               	movwf	btemp^0,c
 12646  0106E2  0EEB               	movlw	-21
 12647  0106E4  50E3               	movf	plusw1,w,c
 12648  0106E6  2201               	addwfc	btemp^0,f,c
 12649  0106E8  0EF9               	movlw	-7
 12650  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 12651  0106F0                     l10628:
 12652                           
 12653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12654                           ;stkvar	_i @ sp[(-56)+36]
 12655  0106F0  0EEC               	movlw	-20
 12656  0106F2  6AE3               	clrf	plusw1,c
 12657  0106F4  0EED               	movlw	-19
 12658  0106F6  6AE3               	clrf	plusw1,c
 12659                           
 12660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12661                           ;stkvar	_g @ sp[(-56)+16]
 12662  0106F8  0ED8               	movlw	-40
 12663  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 12664  010700  0ED9               	movlw	-39
 12665  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 12666  010708  0EDA               	movlw	-38
 12667  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12668  010710  0EDB               	movlw	-37
 12669  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 12670                           
 12671                           ;stkvar	_h @ sp[(-56)+24]
 12672  010718  0EE0               	movlw	-32
 12673  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 12674  010720  0EE1               	movlw	-31
 12675  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12676  010728  0EE2               	movlw	-30
 12677  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12678  010730  0EE3               	movlw	-29
 12679  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 12680                           
 12681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12682                           ;stkvar	_u @ sp[(-56)+12]
 12683  010738  0ED4               	movlw	-44
 12684  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 12685  010740  0ED5               	movlw	-43
 12686  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 12687  010748  0ED6               	movlw	-42
 12688  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12689  010750  0ED7               	movlw	-41
 12690  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 12691                           
 12692                           ;stkvar	_ou @ sp[(-56)+28]
 12693  010758  0EE4               	movlw	-28
 12694  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 12695  010760  0EE5               	movlw	-27
 12696  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12697  010768  0EE6               	movlw	-26
 12698  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12699  010770  0EE7               	movlw	-25
 12700  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 12701                           
 12702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12703  010778  D0D6               	goto	l10644
 12704  01077A                     l10634:
 12705                           
 12706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12707                           ;stkvar	_u @ sp[(-56)+12]
 12708  01077A  0ED4               	movlw	-44
 12709  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12710  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12711  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12712  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12713                           
 12714                           ;stkvar	_h @ sp[(-60)+24]
 12715  010794  0EDC               	movlw	-36
 12716  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12717  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12718  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12719  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12720  0107AE  ECF5  F09D         	call	___fldiv	;wreg free
 12721  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 12722  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12723  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12724  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 12725  0107CA  EC25  F0A7         	call	_floorf	;wreg free
 12726                           
 12727                           ;stkvar	_l @ sp[(-56)+20]
 12728  0107CE  0EDC               	movlw	-36
 12729  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 12730  0107D6  0EDD               	movlw	-35
 12731  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12732  0107DE  0EDE               	movlw	-34
 12733  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12734  0107E6  0EDF               	movlw	-33
 12735  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 12736                           
 12737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12738                           ;stkvar	_l @ sp[(-56)+20]
 12739  0107EE  0EDC               	movlw	-36
 12740  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12741  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12742  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12743  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12744  010808  EC51  F0B5         	call	___fltol	;wreg free
 12745  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 12746  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 12747                           
 12748                           ;stkvar	_d @ sp[(-56)+44]
 12749  010818  0EF4               	movlw	-12
 12750  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12751  010820  0EF5               	movlw	-11
 12752  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 12753                           
 12754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12755                           ;stkvar	_u @ sp[(-56)+12]
 12756  010828  0ED4               	movlw	-44
 12757  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12758  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12759  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12760  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12761                           
 12762                           ;stkvar	_l @ sp[(-60)+20]
 12763  010842  0ED8               	movlw	-40
 12764  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12765  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12766  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12767  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12768  01085C  EC1A  F093         	call	___flmul	;wreg free
 12769  010860  0060  F007  FFE6   	movff	btemp,postinc1
 12770  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12771  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12772  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 12773                           
 12774                           ;stkvar	_h @ sp[(-60)+24]
 12775  010878  0EDC               	movlw	-36
 12776  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12777  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12778  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12779  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12780  010892  ECDC  F0C6         	call	___flsub	;wreg free
 12781                           
 12782                           ;stkvar	_h @ sp[(-56)+24]
 12783  010896  0EE0               	movlw	-32
 12784  010898  0060  F007  FFE3   	movff	btemp,plusw1
 12785  01089E  0EE1               	movlw	-31
 12786  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12787  0108A6  0EE2               	movlw	-30
 12788  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12789  0108AE  0EE3               	movlw	-29
 12790  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 12791                           
 12792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12793  0108B6  0E00               	movlw	0
 12794  0108B8  6EE6               	movwf	postinc1,c
 12795  0108BA  0E00               	movlw	0
 12796  0108BC  6EE6               	movwf	postinc1,c
 12797  0108BE  0E20               	movlw	32
 12798  0108C0  6EE6               	movwf	postinc1,c
 12799  0108C2  0E41               	movlw	65
 12800  0108C4  6EE6               	movwf	postinc1,c
 12801                           
 12802                           ;stkvar	_u @ sp[(-60)+12]
 12803  0108C6  0ED0               	movlw	-48
 12804  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12805  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12806  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12807  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12808  0108E0  ECF5  F09D         	call	___fldiv	;wreg free
 12809                           
 12810                           ;stkvar	_u @ sp[(-56)+12]
 12811  0108E4  0ED4               	movlw	-44
 12812  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 12813  0108EC  0ED5               	movlw	-43
 12814  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12815  0108F4  0ED6               	movlw	-42
 12816  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12817  0108FC  0ED7               	movlw	-41
 12818  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 12819                           
 12820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12821                           ;stkvar	_i @ sp[(-56)+36]
 12822  010904  0EEC               	movlw	-20
 12823  010906  50E3               	movf	plusw1,w,c
 12824  010908  0F01               	addlw	1
 12825  01090A  6E01               	movwf	btemp^0,c
 12826  01090C  0EEC               	movlw	-20
 12827  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 12828  010914  6A01               	clrf	btemp^0,c
 12829  010916  0EED               	movlw	-19
 12830  010918  50E3               	movf	plusw1,w,c
 12831  01091A  2001               	addwfc	btemp^0,w,c
 12832  01091C  6E01               	movwf	btemp^0,c
 12833  01091E  0EED               	movlw	-19
 12834  010920  0060  F007  FFE3   	movff	btemp,plusw1
 12835  010926                     l10644:
 12836                           
 12837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12838                           ;stkvar	_m @ sp[(-56)+48]
 12839                           ;stkvar	_i @ sp[(-56)+36]
 12840  010926  50E1               	movf	fsr1l,w,c
 12841  010928  0FEC               	addlw	-20
 12842  01092A  6ED9               	movwf	fsr2l,c
 12843  01092C  50E2               	movf	fsr1h,w,c
 12844  01092E  6EDA               	movwf	fsr2h,c
 12845  010930  0EFF               	movlw	255
 12846  010932  22DA               	addwfc	fsr2h,f,c
 12847  010934  0EF8               	movlw	-8
 12848  010936  50E3               	movf	plusw1,w,c
 12849  010938  5CDE               	subwf	postinc2,w,c
 12850  01093A  50DE               	movf	postinc2,w,c
 12851  01093C  0A80               	xorlw	128
 12852  01093E  6E01               	movwf	btemp^0,c
 12853  010940  0EF9               	movlw	-7
 12854  010942  50E3               	movf	plusw1,w,c
 12855  010944  0A80               	xorlw	128
 12856  010946  5801               	subwfb	btemp^0,w,c
 12857  010948  A0D8               	btfss	status,0,c
 12858  01094A  D717               	goto	l10634
 12859                           
 12860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12861  01094C  0E00               	movlw	0
 12862  01094E  6EE6               	movwf	postinc1,c
 12863  010950  0E00               	movlw	0
 12864  010952  6EE6               	movwf	postinc1,c
 12865  010954  0EA0               	movlw	160
 12866  010956  6EE6               	movwf	postinc1,c
 12867  010958  0E40               	movlw	64
 12868  01095A  6EE6               	movwf	postinc1,c
 12869                           
 12870                           ;stkvar	_u @ sp[(-60)+12]
 12871  01095C  0ED0               	movlw	-48
 12872  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12873  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12874  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12875  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12876  010976  EC1A  F093         	call	___flmul	;wreg free
 12877                           
 12878                           ;stkvar	_l @ sp[(-56)+20]
 12879  01097A  0EDC               	movlw	-36
 12880  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 12881  010982  0EDD               	movlw	-35
 12882  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12883  01098A  0EDE               	movlw	-34
 12884  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12885  010992  0EDF               	movlw	-33
 12886  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 12887                           
 12888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12889                           ;stkvar	_l @ sp[(-56)+20]
 12890  01099A  0EDC               	movlw	-36
 12891  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12892  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12893  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12894  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12895                           
 12896                           ;stkvar	_h @ sp[(-60)+24]
 12897  0109B4  0EDC               	movlw	-36
 12898  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12899  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12900  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12901  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12902  0109CE  ECC2  F0B6         	call	___flge	;wreg free
 12903  0109D2  A001               	btfss	btemp& (0+255),0,c
 12904  0109D4  D021               	goto	u9950
 12905                           
 12906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12907                           ;stkvar	_l @ sp[(-56)+20]
 12908                           
 12909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12910                           
 12911                           ;stkvar	_l @ sp[(-56)+20]
 12912                           
 12913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12914  0109D6  0EDC               	movlw	-36
 12915  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12916  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12917  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12918  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12919                           
 12920                           ;stkvar	_h @ sp[(-60)+24]
 12921  0109F0  0EDC               	movlw	-36
 12922  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12923  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12924  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12925  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12926  010A0A  EC22  F0BF         	call	___fleq	;wreg free
 12927  010A0E  A001               	btfss	btemp& (0+255),0,c
 12928  010A10  D01B               	goto	l10658
 12929                           
 12930                           ;stkvar	_d @ sp[(-56)+44]
 12931  010A12  0EF4               	movlw	-12
 12932  010A14  B0E3               	btfsc	plusw1,0,c
 12933  010A16  D018               	goto	l10658
 12934  010A18                     u9950:
 12935                           
 12936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12937  010A18  0E00               	movlw	0
 12938  010A1A  6E09               	movwf	(btemp+8)^0,c
 12939  010A1C  0E00               	movlw	0
 12940  010A1E  6E0A               	movwf	(btemp+9)^0,c
 12941  010A20  0E00               	movlw	0
 12942  010A22  6E0B               	movwf	(btemp+10)^0,c
 12943  010A24  0E00               	movlw	0
 12944  010A26  6E0C               	movwf	(btemp+11)^0,c
 12945                           
 12946                           ;stkvar	_l @ sp[(-56)+20]
 12947  010A28  0EDC               	movlw	-36
 12948  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 12949  010A30  0EDD               	movlw	-35
 12950  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12951  010A38  0EDE               	movlw	-34
 12952  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12953  010A40  0EDF               	movlw	-33
 12954  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 12955  010A48                     l10658:
 12956                           
 12957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12958                           ;stkvar	_l @ sp[(-56)+20]
 12959  010A48  0EDC               	movlw	-36
 12960  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12961  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12962  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12963  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12964                           
 12965                           ;stkvar	_g @ sp[(-60)+16]
 12966  010A62  0ED4               	movlw	-44
 12967  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12968  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12969  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12970  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12971  010A7C  EC2F  F097         	call	___fladd	;wreg free
 12972                           
 12973                           ;stkvar	_h @ sp[(-56)+24]
 12974  010A80  0EE0               	movlw	-32
 12975  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 12976  010A88  0EE1               	movlw	-31
 12977  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12978  010A90  0EE2               	movlw	-30
 12979  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12980  010A98  0EE3               	movlw	-29
 12981  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 12982                           
 12983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12984                           ;stkvar	_ou @ sp[(-56)+28]
 12985  010AA0  0EE4               	movlw	-28
 12986  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 12987  010AA8  0EE5               	movlw	-27
 12988  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 12989  010AB0  0EE6               	movlw	-26
 12990  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 12991  010AB8  0EE7               	movlw	-25
 12992  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 12993                           
 12994                           ;stkvar	_u @ sp[(-56)+12]
 12995  010AC0  0ED4               	movlw	-44
 12996  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 12997  010AC8  0ED5               	movlw	-43
 12998  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12999  010AD0  0ED6               	movlw	-42
 13000  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13001  010AD8  0ED7               	movlw	-41
 13002  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13003                           
 13004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 13005                           ;stkvar	_nmode @ sp[(-56)+55]
 13006  010AE0  0EFF               	movlw	-1
 13007  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 13008  010AE8  0E65               	movlw	101
 13009  010AEA  1801               	xorwf	btemp^0,w,c
 13010  010AEC  B4D8               	btfsc	status,2,c
 13011  010AEE  D011               	goto	l10666
 13012                           
 13013                           ;stkvar	_e @ sp[(-56)+34]
 13014                           ;stkvar	_ne @ sp[(-56)+46]
 13015  010AF0  0EEA               	movlw	-22
 13016  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 13017  010AF8  0EF6               	movlw	-10
 13018  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 13019  010B00  0EEB               	movlw	-21
 13020  010B02  006F FF8C  F001    	movff	plusw1,btemp
 13021  010B08  0EF7               	movlw	-9
 13022  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 13023  010B10  D004               	goto	l2119
 13024  010B12                     l10666:
 13025                           
 13026                           ;stkvar	_ne @ sp[(-56)+46]
 13027  010B12  0EF6               	movlw	-10
 13028  010B14  6AE3               	clrf	plusw1,c
 13029  010B16  0EF7               	movlw	-9
 13030  010B18  6AE3               	clrf	plusw1,c
 13031  010B1A                     l2119:
 13032                           
 13033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 13034                           ;stkvar	_pp @ sp[(-56)+50]
 13035  010B1A  0EFA               	movlw	-6
 13036  010B1C  6AE3               	clrf	plusw1,c
 13037  010B1E  0EFB               	movlw	-5
 13038  010B20  6AE3               	clrf	plusw1,c
 13039                           
 13040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 13041                           ;stkvar	_t @ sp[(-56)+52]
 13042  010B22  0EFC               	movlw	-4
 13043  010B24  6AE3               	clrf	plusw1,c
 13044  010B26  0EFD               	movlw	-3
 13045  010B28  6AE3               	clrf	plusw1,c
 13046                           
 13047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 13048                           ;stkvar	_i @ sp[(-56)+36]
 13049  010B2A  0EEC               	movlw	-20
 13050  010B2C  6AE3               	clrf	plusw1,c
 13051  010B2E  0EED               	movlw	-19
 13052  010B30  6AE3               	clrf	plusw1,c
 13053                           
 13054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13055  010B32  D1B7               	goto	l10718
 13056  010B34                     l10668:
 13057                           
 13058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 13059                           ;stkvar	_u @ sp[(-56)+12]
 13060  010B34  0ED4               	movlw	-44
 13061  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 13062  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13063  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 13064  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 13065                           
 13066                           ;stkvar	_h @ sp[(-60)+24]
 13067  010B4E  0EDC               	movlw	-36
 13068  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 13069  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 13070  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13071  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 13072  010B68  ECF5  F09D         	call	___fldiv	;wreg free
 13073  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 13074  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13075  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13076  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 13077  010B84  EC25  F0A7         	call	_floorf	;wreg free
 13078                           
 13079                           ;stkvar	_l @ sp[(-56)+20]
 13080  010B88  0EDC               	movlw	-36
 13081  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 13082  010B90  0EDD               	movlw	-35
 13083  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13084  010B98  0EDE               	movlw	-34
 13085  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13086  010BA0  0EDF               	movlw	-33
 13087  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 13088                           
 13089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 13090                           ;stkvar	_l @ sp[(-56)+20]
 13091  010BA8  0EDC               	movlw	-36
 13092  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13093  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 13094  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 13095  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 13096  010BC2  EC51  F0B5         	call	___fltol	;wreg free
 13097  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 13098  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 13099                           
 13100                           ;stkvar	_d @ sp[(-56)+44]
 13101  010BD2  0EF4               	movlw	-12
 13102  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13103  010BDA  0EF5               	movlw	-11
 13104  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13105                           
 13106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 13107  010BE2  B828               	btfsc	_flags^0,4,c
 13108  010BE4  D026               	goto	l10682
 13109                           
 13110                           ;stkvar	_d @ sp[(-56)+44]
 13111  010BE6  0EF4               	movlw	-12
 13112  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 13113  010BEE  0EF5               	movlw	-11
 13114  010BF0  50E3               	movf	plusw1,w,c
 13115  010BF2  1001               	iorwf	btemp^0,w,c
 13116  010BF4  A4D8               	btfss	status,2,c
 13117  010BF6  D01D               	goto	l10682
 13118                           
 13119                           ;stkvar	_mode @ sp[(-56)+54]
 13120  010BF8  0EFE               	movlw	-2
 13121  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 13122  010C00  0E67               	movlw	103
 13123  010C02  1801               	xorwf	btemp^0,w,c
 13124  010C04  A4D8               	btfss	status,2,c
 13125  010C06  D015               	goto	l10682
 13126                           
 13127                           ;stkvar	_ne @ sp[(-56)+46]
 13128  010C08  0EF7               	movlw	-9
 13129  010C0A  AEE3               	btfss	plusw1,7,c
 13130  010C0C  D012               	goto	l10682
 13131                           
 13132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 13133                           ;stkvar	_t @ sp[(-56)+52]
 13134  010C0E  0EFC               	movlw	-4
 13135  010C10  50E3               	movf	plusw1,w,c
 13136  010C12  0F01               	addlw	1
 13137  010C14  6E01               	movwf	btemp^0,c
 13138  010C16  0EFC               	movlw	-4
 13139  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 13140  010C1E  6A01               	clrf	btemp^0,c
 13141  010C20  0EFD               	movlw	-3
 13142  010C22  50E3               	movf	plusw1,w,c
 13143  010C24  2001               	addwfc	btemp^0,w,c
 13144  010C26  6E01               	movwf	btemp^0,c
 13145  010C28  0EFD               	movlw	-3
 13146  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 13147                           
 13148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 13149  010C30  D0AF               	goto	l10710
 13150  010C32                     l10682:
 13151                           
 13152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 13153                           ;stkvar	_pp @ sp[(-56)+50]
 13154  010C32  0EFA               	movlw	-6
 13155  010C34  006F FF8C  F001    	movff	plusw1,btemp
 13156  010C3A  0EFB               	movlw	-5
 13157  010C3C  50E3               	movf	plusw1,w,c
 13158  010C3E  1001               	iorwf	btemp^0,w,c
 13159  010C40  A4D8               	btfss	status,2,c
 13160  010C42  D070               	goto	l10702
 13161                           
 13162                           ;stkvar	_ne @ sp[(-56)+46]
 13163  010C44  0EF7               	movlw	-9
 13164  010C46  AEE3               	btfss	plusw1,7,c
 13165  010C48  D06D               	goto	l10702
 13166                           
 13167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 13168                           ;stkvar	_n @ sp[(-56)+32]
 13169  010C4A  0EE8               	movlw	-24
 13170  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13171  010C52  0EE9               	movlw	-23
 13172  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 13173  010C5A  0E94               	movlw	low _dbuf
 13174  010C5C  240B               	addwf	(btemp+10)^0,w,c
 13175  010C5E  6ED9               	movwf	fsr2l,c
 13176  010C60  0E03               	movlw	high _dbuf
 13177  010C62  200C               	addwfc	(btemp+11)^0,w,c
 13178  010C64  6EDA               	movwf	fsr2h,c
 13179  010C66  0E2E               	movlw	46
 13180  010C68  6EDF               	movwf	indf2,c
 13181                           
 13182                           ;stkvar	_n @ sp[(-56)+32]
 13183  010C6A  0EE8               	movlw	-24
 13184  010C6C  50E3               	movf	plusw1,w,c
 13185  010C6E  0F01               	addlw	1
 13186  010C70  6E01               	movwf	btemp^0,c
 13187  010C72  0EE8               	movlw	-24
 13188  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 13189  010C7A  6A01               	clrf	btemp^0,c
 13190  010C7C  0EE9               	movlw	-23
 13191  010C7E  50E3               	movf	plusw1,w,c
 13192  010C80  2001               	addwfc	btemp^0,w,c
 13193  010C82  6E01               	movwf	btemp^0,c
 13194  010C84  0EE9               	movlw	-23
 13195  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 13196                           
 13197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 13198                           ;stkvar	_w @ sp[(-56)+38]
 13199  010C8C  50E1               	movf	fsr1l,w,c
 13200  010C8E  0FEE               	addlw	-18
 13201  010C90  6ED9               	movwf	fsr2l,c
 13202  010C92  50E2               	movf	fsr1h,w,c
 13203  010C94  6EDA               	movwf	fsr2h,c
 13204  010C96  0EFF               	movlw	255
 13205  010C98  22DA               	addwfc	fsr2h,f,c
 13206  010C9A  06DE               	decf	postinc2,f,c
 13207  010C9C  0E00               	movlw	0
 13208  010C9E  5ADD               	subwfb	postdec2,f,c
 13209                           
 13210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 13211  010CA0  0E01               	movlw	1
 13212  010CA2  6E0B               	movwf	(btemp+10)^0,c
 13213  010CA4  0E00               	movlw	0
 13214  010CA6  6E0C               	movwf	(btemp+11)^0,c
 13215                           
 13216                           ;stkvar	_pp @ sp[(-56)+50]
 13217  010CA8  0EFA               	movlw	-6
 13218  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13219  010CB0  0EFB               	movlw	-5
 13220  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13221  010CB8  D035               	goto	l10702
 13222  010CBA                     l10694:
 13223                           
 13224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 13225                           ;stkvar	_n @ sp[(-56)+32]
 13226  010CBA  0EE8               	movlw	-24
 13227  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13228  010CC2  0EE9               	movlw	-23
 13229  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13230  010CCA  0E94               	movlw	low _dbuf
 13231  010CCC  240B               	addwf	(btemp+10)^0,w,c
 13232  010CCE  6ED9               	movwf	fsr2l,c
 13233  010CD0  0E03               	movlw	high _dbuf
 13234  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 13235  010CD4  6EDA               	movwf	fsr2h,c
 13236  010CD6  0E30               	movlw	48
 13237  010CD8  6EDF               	movwf	indf2,c
 13238                           
 13239                           ;stkvar	_n @ sp[(-56)+32]
 13240  010CDA  0EE8               	movlw	-24
 13241  010CDC  50E3               	movf	plusw1,w,c
 13242  010CDE  0F01               	addlw	1
 13243  010CE0  6E01               	movwf	btemp^0,c
 13244  010CE2  0EE8               	movlw	-24
 13245  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 13246  010CEA  6A01               	clrf	btemp^0,c
 13247  010CEC  0EE9               	movlw	-23
 13248  010CEE  50E3               	movf	plusw1,w,c
 13249  010CF0  2001               	addwfc	btemp^0,w,c
 13250  010CF2  6E01               	movwf	btemp^0,c
 13251  010CF4  0EE9               	movlw	-23
 13252  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 13253                           
 13254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 13255                           ;stkvar	_w @ sp[(-56)+38]
 13256  010CFC  50E1               	movf	fsr1l,w,c
 13257  010CFE  0FEE               	addlw	-18
 13258  010D00  6ED9               	movwf	fsr2l,c
 13259  010D02  50E2               	movf	fsr1h,w,c
 13260  010D04  6EDA               	movwf	fsr2h,c
 13261  010D06  0EFF               	movlw	255
 13262  010D08  22DA               	addwfc	fsr2h,f,c
 13263  010D0A  06DE               	decf	postinc2,f,c
 13264  010D0C  0E00               	movlw	0
 13265  010D0E  5ADD               	subwfb	postdec2,f,c
 13266                           
 13267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 13268                           ;stkvar	_t @ sp[(-56)+52]
 13269  010D10  50E1               	movf	fsr1l,w,c
 13270  010D12  0FFC               	addlw	-4
 13271  010D14  6ED9               	movwf	fsr2l,c
 13272  010D16  50E2               	movf	fsr1h,w,c
 13273  010D18  6EDA               	movwf	fsr2h,c
 13274  010D1A  0EFF               	movlw	255
 13275  010D1C  22DA               	addwfc	fsr2h,f,c
 13276  010D1E  06DE               	decf	postinc2,f,c
 13277  010D20  0E00               	movlw	0
 13278  010D22  5ADD               	subwfb	postdec2,f,c
 13279  010D24                     l10702:
 13280                           
 13281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 13282                           ;stkvar	_t @ sp[(-56)+52]
 13283  010D24  0EFC               	movlw	-4
 13284  010D26  006F FF8C  F001    	movff	plusw1,btemp
 13285  010D2C  0EFD               	movlw	-3
 13286  010D2E  50E3               	movf	plusw1,w,c
 13287  010D30  1001               	iorwf	btemp^0,w,c
 13288  010D32  A4D8               	btfss	status,2,c
 13289  010D34  D7C2               	goto	l10694
 13290                           
 13291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 13292                           ;stkvar	_n @ sp[(-56)+32]
 13293  010D36  0EE8               	movlw	-24
 13294  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 13295  010D3E  0EE9               	movlw	-23
 13296  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 13297  010D46  0E94               	movlw	low _dbuf
 13298  010D48  240B               	addwf	(btemp+10)^0,w,c
 13299  010D4A  6ED9               	movwf	fsr2l,c
 13300  010D4C  0E03               	movlw	high _dbuf
 13301  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 13302  010D50  6EDA               	movwf	fsr2h,c
 13303                           
 13304                           ;stkvar	_d @ sp[(-56)+44]
 13305  010D52  0EF4               	movlw	-12
 13306  010D54  50E3               	movf	plusw1,w,c
 13307  010D56  0F30               	addlw	48
 13308  010D58  6EDF               	movwf	indf2,c
 13309                           
 13310                           ;stkvar	_n @ sp[(-56)+32]
 13311  010D5A  0EE8               	movlw	-24
 13312  010D5C  50E3               	movf	plusw1,w,c
 13313  010D5E  0F01               	addlw	1
 13314  010D60  6E01               	movwf	btemp^0,c
 13315  010D62  0EE8               	movlw	-24
 13316  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 13317  010D6A  6A01               	clrf	btemp^0,c
 13318  010D6C  0EE9               	movlw	-23
 13319  010D6E  50E3               	movf	plusw1,w,c
 13320  010D70  2001               	addwfc	btemp^0,w,c
 13321  010D72  6E01               	movwf	btemp^0,c
 13322  010D74  0EE9               	movlw	-23
 13323  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 13324                           
 13325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 13326                           ;stkvar	_w @ sp[(-56)+38]
 13327  010D7C  50E1               	movf	fsr1l,w,c
 13328  010D7E  0FEE               	addlw	-18
 13329  010D80  6ED9               	movwf	fsr2l,c
 13330  010D82  50E2               	movf	fsr1h,w,c
 13331  010D84  6EDA               	movwf	fsr2h,c
 13332  010D86  0EFF               	movlw	255
 13333  010D88  22DA               	addwfc	fsr2h,f,c
 13334  010D8A  06DE               	decf	postinc2,f,c
 13335  010D8C  0E00               	movlw	0
 13336  010D8E  5ADD               	subwfb	postdec2,f,c
 13337  010D90                     l10710:
 13338                           
 13339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 13340                           ;stkvar	_u @ sp[(-56)+12]
 13341  010D90  0ED4               	movlw	-44
 13342  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 13343  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 13344  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 13345  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 13346                           
 13347                           ;stkvar	_l @ sp[(-60)+20]
 13348  010DAA  0ED8               	movlw	-40
 13349  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 13350  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 13351  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 13352  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 13353  010DC4  EC1A  F093         	call	___flmul	;wreg free
 13354  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 13355  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13356  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13357  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 13358                           
 13359                           ;stkvar	_h @ sp[(-60)+24]
 13360  010DE0  0EDC               	movlw	-36
 13361  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 13362  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 13363  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 13364  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 13365  010DFA  ECDC  F0C6         	call	___flsub	;wreg free
 13366                           
 13367                           ;stkvar	_h @ sp[(-56)+24]
 13368  010DFE  0EE0               	movlw	-32
 13369  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 13370  010E06  0EE1               	movlw	-31
 13371  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13372  010E0E  0EE2               	movlw	-30
 13373  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13374  010E16  0EE3               	movlw	-29
 13375  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 13376                           
 13377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 13378  010E1E  0E00               	movlw	0
 13379  010E20  6EE6               	movwf	postinc1,c
 13380  010E22  0E00               	movlw	0
 13381  010E24  6EE6               	movwf	postinc1,c
 13382  010E26  0E20               	movlw	32
 13383  010E28  6EE6               	movwf	postinc1,c
 13384  010E2A  0E41               	movlw	65
 13385  010E2C  6EE6               	movwf	postinc1,c
 13386                           
 13387                           ;stkvar	_u @ sp[(-60)+12]
 13388  010E2E  0ED0               	movlw	-48
 13389  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 13390  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 13391  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13392  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 13393  010E48  ECF5  F09D         	call	___fldiv	;wreg free
 13394                           
 13395                           ;stkvar	_u @ sp[(-56)+12]
 13396  010E4C  0ED4               	movlw	-44
 13397  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 13398  010E54  0ED5               	movlw	-43
 13399  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13400  010E5C  0ED6               	movlw	-42
 13401  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13402  010E64  0ED7               	movlw	-41
 13403  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 13404                           
 13405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 13406                           ;stkvar	_ne @ sp[(-56)+46]
 13407  010E6C  50E1               	movf	fsr1l,w,c
 13408  010E6E  0FF6               	addlw	-10
 13409  010E70  6ED9               	movwf	fsr2l,c
 13410  010E72  50E2               	movf	fsr1h,w,c
 13411  010E74  6EDA               	movwf	fsr2h,c
 13412  010E76  0EFF               	movlw	255
 13413  010E78  22DA               	addwfc	fsr2h,f,c
 13414  010E7A  06DE               	decf	postinc2,f,c
 13415  010E7C  0E00               	movlw	0
 13416  010E7E  5ADD               	subwfb	postdec2,f,c
 13417                           
 13418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 13419                           ;stkvar	_i @ sp[(-56)+36]
 13420  010E80  0EEC               	movlw	-20
 13421  010E82  50E3               	movf	plusw1,w,c
 13422  010E84  0F01               	addlw	1
 13423  010E86  6E01               	movwf	btemp^0,c
 13424  010E88  0EEC               	movlw	-20
 13425  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 13426  010E90  6A01               	clrf	btemp^0,c
 13427  010E92  0EED               	movlw	-19
 13428  010E94  50E3               	movf	plusw1,w,c
 13429  010E96  2001               	addwfc	btemp^0,w,c
 13430  010E98  6E01               	movwf	btemp^0,c
 13431  010E9A  0EED               	movlw	-19
 13432  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 13433  010EA2                     l10718:
 13434                           
 13435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13436                           ;stkvar	_m @ sp[(-56)+48]
 13437                           ;stkvar	_i @ sp[(-56)+36]
 13438  010EA2  50E1               	movf	fsr1l,w,c
 13439  010EA4  0FEC               	addlw	-20
 13440  010EA6  6ED9               	movwf	fsr2l,c
 13441  010EA8  50E2               	movf	fsr1h,w,c
 13442  010EAA  6EDA               	movwf	fsr2h,c
 13443  010EAC  0EFF               	movlw	255
 13444  010EAE  22DA               	addwfc	fsr2h,f,c
 13445  010EB0  0EF8               	movlw	-8
 13446  010EB2  50E3               	movf	plusw1,w,c
 13447  010EB4  5CDE               	subwf	postinc2,w,c
 13448  010EB6  50DE               	movf	postinc2,w,c
 13449  010EB8  0A80               	xorlw	128
 13450  010EBA  6E01               	movwf	btemp^0,c
 13451  010EBC  0EF9               	movlw	-7
 13452  010EBE  50E3               	movf	plusw1,w,c
 13453  010EC0  0A80               	xorlw	128
 13454  010EC2  5801               	subwfb	btemp^0,w,c
 13455  010EC4  B0D8               	btfsc	status,0,c
 13456  010EC6  D00E               	goto	u10050
 13457                           
 13458                           ;stkvar	_n @ sp[(-56)+32]
 13459  010EC8  0EE9               	movlw	-23
 13460  010ECA  BEE3               	btfsc	plusw1,7,c
 13461  010ECC  D633               	goto	l10668
 13462  010ECE  0EE9               	movlw	-23
 13463  010ED0  50E3               	movf	plusw1,w,c
 13464  010ED2  E108               	bnz	u10050
 13465  010ED4  0EE8               	movlw	-24
 13466  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 13467  010EDC  0E4B               	movlw	75
 13468  010EDE  5E01               	subwf	btemp^0,f,c
 13469  010EE0  A0D8               	btfss	status,0,c
 13470  010EE2  D628               	goto	l10668
 13471  010EE4                     u10050:
 13472                           
 13473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13474                           ;stkvar	_pp @ sp[(-56)+50]
 13475  010EE4  0EFA               	movlw	-6
 13476  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 13477  010EEC  0EFB               	movlw	-5
 13478  010EEE  50E3               	movf	plusw1,w,c
 13479  010EF0  1001               	iorwf	btemp^0,w,c
 13480  010EF2  B4D8               	btfsc	status,2,c
 13481  010EF4  A828               	btfss	_flags^0,4,c
 13482  010EF6  D021               	goto	l10730
 13483                           
 13484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13485                           ;stkvar	_n @ sp[(-56)+32]
 13486  010EF8  0EE8               	movlw	-24
 13487  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 13488  010F00  0EE9               	movlw	-23
 13489  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 13490  010F08  0E94               	movlw	low _dbuf
 13491  010F0A  240B               	addwf	(btemp+10)^0,w,c
 13492  010F0C  6ED9               	movwf	fsr2l,c
 13493  010F0E  0E03               	movlw	high _dbuf
 13494  010F10  200C               	addwfc	(btemp+11)^0,w,c
 13495  010F12  6EDA               	movwf	fsr2h,c
 13496  010F14  0E2E               	movlw	46
 13497  010F16  6EDF               	movwf	indf2,c
 13498                           
 13499                           ;stkvar	_n @ sp[(-56)+32]
 13500  010F18  0EE8               	movlw	-24
 13501  010F1A  50E3               	movf	plusw1,w,c
 13502  010F1C  0F01               	addlw	1
 13503  010F1E  6E01               	movwf	btemp^0,c
 13504  010F20  0EE8               	movlw	-24
 13505  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 13506  010F28  6A01               	clrf	btemp^0,c
 13507  010F2A  0EE9               	movlw	-23
 13508  010F2C  50E3               	movf	plusw1,w,c
 13509  010F2E  2001               	addwfc	btemp^0,w,c
 13510  010F30  6E01               	movwf	btemp^0,c
 13511  010F32  0EE9               	movlw	-23
 13512  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 13513  010F3A                     l10730:
 13514                           
 13515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13516                           ;stkvar	_n @ sp[(-56)+32]
 13517  010F3A  0EE8               	movlw	-24
 13518  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13519  010F42  0EE9               	movlw	-23
 13520  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 13521  010F4A  0E94               	movlw	low _dbuf
 13522  010F4C  240B               	addwf	(btemp+10)^0,w,c
 13523  010F4E  6ED9               	movwf	fsr2l,c
 13524  010F50  0E03               	movlw	high _dbuf
 13525  010F52  200C               	addwfc	(btemp+11)^0,w,c
 13526  010F54  6EDA               	movwf	fsr2h,c
 13527  010F56  0E00               	movlw	0
 13528  010F58  6EDF               	movwf	indf2,c
 13529                           
 13530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13531                           ;stkvar	_nmode @ sp[(-56)+55]
 13532  010F5A  0EFF               	movlw	-1
 13533  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 13534  010F62  0E65               	movlw	101
 13535  010F64  1801               	xorwf	btemp^0,w,c
 13536  010F66  A4D8               	btfss	status,2,c
 13537  010F68  EF16  F081         	goto	l10534
 13538                           
 13539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13540  010F6C  0E4F               	movlw	79
 13541  010F6E  6E0B               	movwf	(btemp+10)^0,c
 13542  010F70  0E00               	movlw	0
 13543  010F72  6E0C               	movwf	(btemp+11)^0,c
 13544                           
 13545                           ;stkvar	_i @ sp[(-56)+36]
 13546  010F74  0EEC               	movlw	-20
 13547  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13548  010F7C  0EED               	movlw	-19
 13549  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13550                           
 13551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13552                           ;stkvar	_i @ sp[(-56)+36]
 13553  010F84  0EEC               	movlw	-20
 13554  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 13555  010F8C  0EED               	movlw	-19
 13556  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13557  010F94  0E94               	movlw	low _dbuf
 13558  010F96  240B               	addwf	(btemp+10)^0,w,c
 13559  010F98  6ED9               	movwf	fsr2l,c
 13560  010F9A  0E03               	movlw	high _dbuf
 13561  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 13562  010F9E  6EDA               	movwf	fsr2h,c
 13563  010FA0  0E00               	movlw	0
 13564  010FA2  6EDF               	movwf	indf2,c
 13565                           
 13566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13567                           ;stkvar	_sign @ sp[(-56)+42]
 13568  010FA4  0EF2               	movlw	-14
 13569  010FA6  6AE3               	clrf	plusw1,c
 13570  010FA8  0EF3               	movlw	-13
 13571  010FAA  6AE3               	clrf	plusw1,c
 13572                           
 13573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13574                           ;stkvar	_e @ sp[(-56)+34]
 13575  010FAC  0EEB               	movlw	-21
 13576  010FAE  AEE3               	btfss	plusw1,7,c
 13577  010FB0  D012               	goto	l10744
 13578                           
 13579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13580  010FB2  0E01               	movlw	1
 13581  010FB4  6E0B               	movwf	(btemp+10)^0,c
 13582  010FB6  0E00               	movlw	0
 13583  010FB8  6E0C               	movwf	(btemp+11)^0,c
 13584                           
 13585                           ;stkvar	_sign @ sp[(-56)+42]
 13586  010FBA  0EF2               	movlw	-14
 13587  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13588  010FC2  0EF3               	movlw	-13
 13589  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13590                           
 13591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13592                           ;stkvar	_e @ sp[(-56)+34]
 13593                           ;stkvar	_e @ sp[(-56)+34]
 13594  010FCA  0EEA               	movlw	-22
 13595  010FCC  6CE3               	negf	plusw1,c
 13596  010FCE  0EEB               	movlw	-21
 13597  010FD0  1EE3               	comf	plusw1,f,c
 13598  010FD2  B0D8               	btfsc	status,0,c
 13599  010FD4  2AE3               	incf	plusw1,f,c
 13600  010FD6                     l10744:
 13601                           
 13602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13603  010FD6  0E02               	movlw	2
 13604  010FD8  6E0B               	movwf	(btemp+10)^0,c
 13605  010FDA  0E00               	movlw	0
 13606  010FDC  6E0C               	movwf	(btemp+11)^0,c
 13607                           
 13608                           ;stkvar	_p @ sp[(-56)+40]
 13609  010FDE  0EF0               	movlw	-16
 13610  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13611  010FE6  0EF1               	movlw	-15
 13612  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13613                           
 13614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13615  010FEE  D051               	goto	l10756
 13616  010FF0                     l10746:
 13617                           
 13618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13619                           ;stkvar	_i @ sp[(-56)+36]
 13620  010FF0  50E1               	movf	fsr1l,w,c
 13621  010FF2  0FEC               	addlw	-20
 13622  010FF4  6ED9               	movwf	fsr2l,c
 13623  010FF6  50E2               	movf	fsr1h,w,c
 13624  010FF8  6EDA               	movwf	fsr2h,c
 13625  010FFA  0EFF               	movlw	255
 13626  010FFC  22DA               	addwfc	fsr2h,f,c
 13627  010FFE  06DE               	decf	postinc2,f,c
 13628  011000  0E00               	movlw	0
 13629  011002  5ADD               	subwfb	postdec2,f,c
 13630                           
 13631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13632                           ;stkvar	_i @ sp[(-56)+36]
 13633  011004  0EEC               	movlw	-20
 13634  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 13635  01100C  0EED               	movlw	-19
 13636  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13637  011014  0E94               	movlw	low _dbuf
 13638  011016  240B               	addwf	(btemp+10)^0,w,c
 13639  011018  6ED9               	movwf	fsr2l,c
 13640  01101A  0E03               	movlw	high _dbuf
 13641  01101C  200C               	addwfc	(btemp+11)^0,w,c
 13642  01101E  6EDA               	movwf	fsr2h,c
 13643  011020  0E0A               	movlw	10
 13644  011022  6EE6               	movwf	postinc1,c
 13645  011024  0E00               	movlw	0
 13646  011026  6EE6               	movwf	postinc1,c
 13647                           
 13648                           ;stkvar	_e @ sp[(-58)+34]
 13649  011028  0EE8               	movlw	-24
 13650  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13651  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13652  011036  ECD7  F0B9         	call	___awmod	;wreg free
 13653  01103A  5001               	movf	btemp^0,w,c
 13654  01103C  0F30               	addlw	48
 13655  01103E  6EDF               	movwf	indf2,c
 13656                           
 13657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13658  011040  0E0A               	movlw	10
 13659  011042  6EE6               	movwf	postinc1,c
 13660  011044  0E00               	movlw	0
 13661  011046  6EE6               	movwf	postinc1,c
 13662                           
 13663                           ;stkvar	_e @ sp[(-58)+34]
 13664  011048  0EE8               	movlw	-24
 13665  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13666  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13667  011056  EC73  F0B7         	call	___awdiv	;wreg free
 13668                           
 13669                           ;stkvar	_e @ sp[(-56)+34]
 13670  01105A  0EEA               	movlw	-22
 13671  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 13672  011062  0EEB               	movlw	-21
 13673  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13674                           
 13675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13676                           ;stkvar	_p @ sp[(-56)+40]
 13677  01106A  50E1               	movf	fsr1l,w,c
 13678  01106C  0FF0               	addlw	-16
 13679  01106E  6ED9               	movwf	fsr2l,c
 13680  011070  50E2               	movf	fsr1h,w,c
 13681  011072  6EDA               	movwf	fsr2h,c
 13682  011074  0EFF               	movlw	255
 13683  011076  22DA               	addwfc	fsr2h,f,c
 13684  011078  06DE               	decf	postinc2,f,c
 13685  01107A  0E00               	movlw	0
 13686  01107C  5ADD               	subwfb	postdec2,f,c
 13687                           
 13688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13689                           ;stkvar	_w @ sp[(-56)+38]
 13690  01107E  50E1               	movf	fsr1l,w,c
 13691  011080  0FEE               	addlw	-18
 13692  011082  6ED9               	movwf	fsr2l,c
 13693  011084  50E2               	movf	fsr1h,w,c
 13694  011086  6EDA               	movwf	fsr2h,c
 13695  011088  0EFF               	movlw	255
 13696  01108A  22DA               	addwfc	fsr2h,f,c
 13697  01108C  06DE               	decf	postinc2,f,c
 13698  01108E  0E00               	movlw	0
 13699  011090  5ADD               	subwfb	postdec2,f,c
 13700  011092                     l10756:
 13701                           
 13702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13703                           ;stkvar	_e @ sp[(-56)+34]
 13704  011092  0EEA               	movlw	-22
 13705  011094  006F FF8C  F001    	movff	plusw1,btemp
 13706  01109A  0EEB               	movlw	-21
 13707  01109C  50E3               	movf	plusw1,w,c
 13708  01109E  1001               	iorwf	btemp^0,w,c
 13709  0110A0  A4D8               	btfss	status,2,c
 13710  0110A2  D7A6               	goto	l10746
 13711                           
 13712                           ;stkvar	_p @ sp[(-56)+40]
 13713  0110A4  0EF1               	movlw	-15
 13714  0110A6  BEE3               	btfsc	plusw1,7,c
 13715  0110A8  D007               	goto	u10110
 13716  0110AA  0EF1               	movlw	-15
 13717  0110AC  50E3               	movf	plusw1,w,c
 13718  0110AE  E1A0               	bnz	l10746
 13719  0110B0  0EF0               	movlw	-16
 13720  0110B2  04E3               	decf	plusw1,w,c
 13721  0110B4  B0D8               	btfsc	status,0,c
 13722  0110B6  D79C               	goto	l10746
 13723  0110B8                     u10110:
 13724                           
 13725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13726                           ;stkvar	_i @ sp[(-56)+36]
 13727  0110B8  50E1               	movf	fsr1l,w,c
 13728  0110BA  0FEC               	addlw	-20
 13729  0110BC  6ED9               	movwf	fsr2l,c
 13730  0110BE  50E2               	movf	fsr1h,w,c
 13731  0110C0  6EDA               	movwf	fsr2h,c
 13732  0110C2  0EFF               	movlw	255
 13733  0110C4  22DA               	addwfc	fsr2h,f,c
 13734  0110C6  06DE               	decf	postinc2,f,c
 13735  0110C8  0E00               	movlw	0
 13736  0110CA  5ADD               	subwfb	postdec2,f,c
 13737                           
 13738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13739                           ;stkvar	_sign @ sp[(-56)+42]
 13740  0110CC  0EF2               	movlw	-14
 13741  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 13742  0110D4  0EF3               	movlw	-13
 13743  0110D6  50E3               	movf	plusw1,w,c
 13744  0110D8  1001               	iorwf	btemp^0,w,c
 13745  0110DA  A4D8               	btfss	status,2,c
 13746  0110DC  D002               	goto	l10766
 13747  0110DE  0E2B               	movlw	43
 13748  0110E0  D001               	goto	L11
 13749  0110E2                     l10766:
 13750  0110E2  0E2D               	movlw	45
 13751  0110E4                     L11:
 13752  0110E4  6E0B               	movwf	(btemp+10)^0,c
 13753  0110E6  0E00               	movlw	0
 13754  0110E8  6E0C               	movwf	(btemp+11)^0,c
 13755                           
 13756                           ;stkvar	_efgtoa$5080 @ sp[(-56)+4]
 13757  0110EA  0ECC               	movlw	-52
 13758  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13759  0110F2  0ECD               	movlw	-51
 13760  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13761                           
 13762                           ;stkvar	_efgtoa$5080 @ sp[(-56)+4]
 13763                           ;stkvar	_i @ sp[(-56)+36]
 13764  0110FA  0EEC               	movlw	-20
 13765  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13766  011102  0EED               	movlw	-19
 13767  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 13768  01110A  0E94               	movlw	low _dbuf
 13769  01110C  240B               	addwf	(btemp+10)^0,w,c
 13770  01110E  6ED9               	movwf	fsr2l,c
 13771  011110  0E03               	movlw	high _dbuf
 13772  011112  200C               	addwfc	(btemp+11)^0,w,c
 13773  011114  6EDA               	movwf	fsr2h,c
 13774  011116  0ECC               	movlw	-52
 13775  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13776                           
 13777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13778                           ;stkvar	_w @ sp[(-56)+38]
 13779  01111E  50E1               	movf	fsr1l,w,c
 13780  011120  0FEE               	addlw	-18
 13781  011122  6ED9               	movwf	fsr2l,c
 13782  011124  50E2               	movf	fsr1h,w,c
 13783  011126  6EDA               	movwf	fsr2h,c
 13784  011128  0EFF               	movlw	255
 13785  01112A  22DA               	addwfc	fsr2h,f,c
 13786  01112C  06DE               	decf	postinc2,f,c
 13787  01112E  0E00               	movlw	0
 13788  011130  5ADD               	subwfb	postdec2,f,c
 13789                           
 13790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13791                           ;stkvar	_i @ sp[(-56)+36]
 13792  011132  50E1               	movf	fsr1l,w,c
 13793  011134  0FEC               	addlw	-20
 13794  011136  6ED9               	movwf	fsr2l,c
 13795  011138  50E2               	movf	fsr1h,w,c
 13796  01113A  6EDA               	movwf	fsr2h,c
 13797  01113C  0EFF               	movlw	255
 13798  01113E  22DA               	addwfc	fsr2h,f,c
 13799  011140  06DE               	decf	postinc2,f,c
 13800  011142  0E00               	movlw	0
 13801  011144  5ADD               	subwfb	postdec2,f,c
 13802  011146  0EBF               	movlw	191
 13803  011148  6E0B               	movwf	(btemp+10)^0,c
 13804  01114A  0EFF               	movlw	255
 13805  01114C  6E0C               	movwf	(btemp+11)^0,c
 13806                           
 13807                           ;stkvar	_c @ sp[(-56)+-7]
 13808  01114E  0EC1               	movlw	-63
 13809  011150  50E3               	movf	plusw1,w,c
 13810  011152  6E09               	movwf	(btemp+8)^0,c
 13811  011154  6A0A               	clrf	(btemp+9)^0,c
 13812  011156  500B               	movf	(btemp+10)^0,w,c
 13813  011158  2609               	addwf	(btemp+8)^0,f,c
 13814  01115A  500C               	movf	(btemp+11)^0,w,c
 13815  01115C  220A               	addwfc	(btemp+9)^0,f,c
 13816  01115E  500A               	movf	(btemp+9)^0,w,c
 13817  011160  E106               	bnz	u10130
 13818  011162  0E1A               	movlw	26
 13819  011164  5C09               	subwf	(btemp+8)^0,w,c
 13820  011166  B0D8               	btfsc	status,0,c
 13821  011168  D002               	goto	u10130
 13822  01116A  0E01               	movlw	1
 13823  01116C  D001               	goto	u10140
 13824  01116E                     u10130:
 13825  01116E  0E00               	movlw	0
 13826  011170                     u10140:
 13827  011170  6E0B               	movwf	(btemp+10)^0,c
 13828  011172  6A0C               	clrf	(btemp+11)^0,c
 13829                           
 13830                           ;stkvar	_efgtoa$5082 @ sp[(-56)+0]
 13831  011174  0EC8               	movlw	-56
 13832  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13833  01117C  0EC9               	movlw	-55
 13834  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13835                           
 13836                           ;stkvar	_efgtoa$5082 @ sp[(-56)+0]
 13837  011184  0EC8               	movlw	-56
 13838  011186  006F FF8C  F001    	movff	plusw1,btemp
 13839  01118C  0EC9               	movlw	-55
 13840  01118E  50E3               	movf	plusw1,w,c
 13841  011190  1001               	iorwf	btemp^0,w,c
 13842  011192  A4D8               	btfss	status,2,c
 13843  011194  D002               	goto	l10782
 13844  011196  0E65               	movlw	101
 13845  011198  D001               	goto	L12
 13846  01119A                     l10782:
 13847  01119A  0E45               	movlw	69
 13848  01119C                     L12:
 13849  01119C  6E0B               	movwf	(btemp+10)^0,c
 13850  01119E  0E00               	movlw	0
 13851  0111A0  6E0C               	movwf	(btemp+11)^0,c
 13852                           
 13853                           ;stkvar	_efgtoa$5081 @ sp[(-56)+2]
 13854  0111A2  0ECA               	movlw	-54
 13855  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13856  0111AA  0ECB               	movlw	-53
 13857  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13858                           
 13859                           ;stkvar	_efgtoa$5081 @ sp[(-56)+2]
 13860                           ;stkvar	_i @ sp[(-56)+36]
 13861  0111B2  0EEC               	movlw	-20
 13862  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13863  0111BA  0EED               	movlw	-19
 13864  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13865  0111C2  0E94               	movlw	low _dbuf
 13866  0111C4  240B               	addwf	(btemp+10)^0,w,c
 13867  0111C6  6ED9               	movwf	fsr2l,c
 13868  0111C8  0E03               	movlw	high _dbuf
 13869  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 13870  0111CC  6EDA               	movwf	fsr2h,c
 13871  0111CE  0ECA               	movlw	-54
 13872  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13873                           
 13874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13875                           ;stkvar	_w @ sp[(-56)+38]
 13876  0111D6  50E1               	movf	fsr1l,w,c
 13877  0111D8  0FEE               	addlw	-18
 13878  0111DA  6ED9               	movwf	fsr2l,c
 13879  0111DC  50E2               	movf	fsr1h,w,c
 13880  0111DE  6EDA               	movwf	fsr2h,c
 13881  0111E0  0EFF               	movlw	255
 13882  0111E2  22DA               	addwfc	fsr2h,f,c
 13883  0111E4  06DE               	decf	postinc2,f,c
 13884  0111E6  0E00               	movlw	0
 13885  0111E8  5ADD               	subwfb	postdec2,f,c
 13886                           
 13887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13888                           ;stkvar	_i @ sp[(-56)+36]
 13889  0111EA  0EEC               	movlw	-20
 13890  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13891  0111F2  0EED               	movlw	-19
 13892  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13893  0111FA  0E94               	movlw	low _dbuf
 13894  0111FC  240B               	addwf	(btemp+10)^0,w,c
 13895  0111FE  6E09               	movwf	(btemp+8)^0,c
 13896  011200  0E03               	movlw	high _dbuf
 13897  011202  200C               	addwfc	(btemp+11)^0,w,c
 13898  011204  6E0A               	movwf	(btemp+9)^0,c
 13899  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 13900  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 13901                           
 13902                           ;stkvar	_n @ sp[(-58)+32]
 13903  011212  0E94               	movlw	low _dbuf
 13904  011214  6E0B               	movwf	(btemp+10)^0,c
 13905  011216  0E03               	movlw	high _dbuf
 13906  011218  6E0C               	movwf	(btemp+11)^0,c
 13907  01121A  0EE6               	movlw	-26
 13908  01121C  50E3               	movf	plusw1,w,c
 13909  01121E  260B               	addwf	(btemp+10)^0,f,c
 13910  011220  0EE7               	movlw	-25
 13911  011222  50E3               	movf	plusw1,w,c
 13912  011224  220C               	addwfc	(btemp+11)^0,f,c
 13913  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13914  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13915  011232  ECE8  F0BD         	call	_strcpy	;wreg free
 13916  011236  EF16  F081         	goto	l10534
 13917  01123A                     l2075:
 13918                           
 13919                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13920  01123A  0EC1               	movlw	193
 13921  01123C  26E1               	addwf	fsr1l,f,c
 13922  01123E  0EFF               	movlw	255
 13923  011240  22E2               	addwfc	fsr1h,f,c
 13924  011242  0012               	return		;funcret
 13925  011244                     __end_of_efgtoa:
 13926                           	opt callstack 0
 13927                           
 13928 ;; *************** function _tolower *****************
 13929 ;; Defined at:
 13930 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  c               2  [STACK] int 
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;		None
 13935 ;; Return value:  Size  Location     Type
 13936 ;;                  2  [STACK] int 
 13937 ;; Registers used:
 13938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13939 ;; Tracked objects:
 13940 ;;		On entry : 0/0
 13941 ;;		On exit  : 0/0
 13942 ;;		Unchanged: 0/0
 13943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13948 ;;Total ram usage:        0 bytes
 13949 ;; Hardware stack levels used:    1
 13950 ;; Hardware stack levels required when called:    8
 13951 ;; This function calls:
 13952 ;;		_isupper
 13953 ;; This function is called by:
 13954 ;;		_efgtoa
 13955 ;;		_vfpfcnvrt
 13956 ;; This function uses a reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text50
 13960  01864C                     __ptext50:
 13961                           	opt callstack 0
 13962  01864C                     _tolower:
 13963                           	opt callstack 0
 13964                           
 13965                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13966  01864C  52E6               	movf	postinc1,f,c
 13967  01864E  52E6               	movf	postinc1,f,c
 13968                           
 13969                           ;stkvar	_c @ sp[(-2)+-2]
 13970                           
 13971                           ;incstack = 0
 13972  018650  0EFC               	movlw	-4
 13973  018652  50E3               	movf	plusw1,w,c
 13974  018654  0FBF               	addlw	191
 13975  018656  6E0B               	movwf	(btemp+10)^0,c
 13976  018658  0EFD               	movlw	-3
 13977  01865A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13978  018660  0EFF               	movlw	255
 13979  018662  220C               	addwfc	(btemp+11)^0,f,c
 13980  018664  500C               	movf	(btemp+11)^0,w,c
 13981  018666  E106               	bnz	u4950
 13982  018668  0E1A               	movlw	26
 13983  01866A  5C0B               	subwf	(btemp+10)^0,w,c
 13984  01866C  B0D8               	btfsc	status,0,c
 13985  01866E  D002               	goto	u4950
 13986  018670  0E01               	movlw	1
 13987  018672  D001               	goto	u4960
 13988  018674                     u4950:
 13989  018674  0E00               	movlw	0
 13990  018676                     u4960:
 13991  018676  6E0B               	movwf	(btemp+10)^0,c
 13992  018678  6A0C               	clrf	(btemp+11)^0,c
 13993                           
 13994                           ;stkvar	_tolower$5863 @ sp[(-2)+0]
 13995  01867A  0EFE               	movlw	-2
 13996  01867C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13997  018682  0EFF               	movlw	-1
 13998  018684  0060  F033  FFE3   	movff	btemp+11,plusw1
 13999                           
 14000                           ;stkvar	_tolower$5863 @ sp[(-2)+0]
 14001  01868A  0EFE               	movlw	-2
 14002  01868C  006F FF8C  F001    	movff	plusw1,btemp
 14003  018692  0EFF               	movlw	-1
 14004  018694  50E3               	movf	plusw1,w,c
 14005  018696  1001               	iorwf	btemp^0,w,c
 14006  018698  B4D8               	btfsc	status,2,c
 14007  01869A  D00D               	goto	l6978
 14008                           
 14009                           ;stkvar	_c @ sp[(-2)+-2]
 14010  01869C  0EFC               	movlw	-4
 14011  01869E  006F FF8C  F001    	movff	plusw1,btemp
 14012  0186A4  0EFD               	movlw	-3
 14013  0186A6  006F FF8C  F002    	movff	plusw1,btemp+1
 14014  0186AC  0E20               	movlw	32
 14015  0186AE  1201               	iorwf	btemp^0,f,c
 14016  0186B0  0E00               	movlw	0
 14017  0186B2  1202               	iorwf	(btemp+1)^0,f,c
 14018  0186B4  D008               	goto	l3319
 14019  0186B6                     l6978:
 14020                           
 14021                           ;stkvar	_c @ sp[(-2)+-2]
 14022  0186B6  0EFC               	movlw	-4
 14023  0186B8  006F FF8C  F001    	movff	plusw1,btemp
 14024  0186BE  0EFD               	movlw	-3
 14025  0186C0  006F FF8C  F002    	movff	plusw1,btemp+1
 14026  0186C6                     l3319:
 14027                           
 14028                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14029  0186C6  52E5               	movf	postdec1,f,c
 14030  0186C8  52E5               	movf	postdec1,f,c
 14031  0186CA  52E5               	movf	postdec1,f,c
 14032  0186CC  52E5               	movf	postdec1,f,c
 14033  0186CE  0012               	return		;funcret
 14034  0186D0                     __end_of_tolower:
 14035                           	opt callstack 0
 14036                           
 14037 ;; *************** function _isupper *****************
 14038 ;; Defined at:
 14039 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;  c               2  [STACK] int 
 14042 ;; Auto vars:     Size  Location     Type
 14043 ;;		None
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  2  [STACK] int 
 14046 ;; Registers used:
 14047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14048 ;; Tracked objects:
 14049 ;;		On entry : 0/0
 14050 ;;		On exit  : 0/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14057 ;;Total ram usage:        0 bytes
 14058 ;; Hardware stack levels used:    1
 14059 ;; Hardware stack levels required when called:    7
 14060 ;; This function calls:
 14061 ;;		Nothing
 14062 ;; This function is called by:
 14063 ;;		_efgtoa
 14064 ;;		_xtoa
 14065 ;;		_vfpfcnvrt
 14066 ;;		_tolower
 14067 ;; This function uses a reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text51
 14071  0191C0                     __ptext51:
 14072                           	opt callstack 0
 14073  0191C0                     _isupper:
 14074                           	opt callstack 16
 14075                           
 14076                           ;stkvar	_c @ sp[(0)+-2]
 14077                           
 14078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14079                           ;incstack = 0
 14080  0191C0  0EFE               	movlw	-2
 14081  0191C2  50E3               	movf	plusw1,w,c
 14082  0191C4  0FBF               	addlw	191
 14083  0191C6  6E0B               	movwf	(btemp+10)^0,c
 14084  0191C8  0EFF               	movlw	-1
 14085  0191CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14086  0191D0  0EFF               	movlw	255
 14087  0191D2  220C               	addwfc	(btemp+11)^0,f,c
 14088  0191D4  500C               	movf	(btemp+11)^0,w,c
 14089  0191D6  E106               	bnz	u4770
 14090  0191D8  0E1A               	movlw	26
 14091  0191DA  5C0B               	subwf	(btemp+10)^0,w,c
 14092  0191DC  B0D8               	btfsc	status,0,c
 14093  0191DE  D002               	goto	u4770
 14094  0191E0  0E01               	movlw	1
 14095  0191E2  D001               	goto	u4780
 14096  0191E4                     u4770:
 14097  0191E4  0E00               	movlw	0
 14098  0191E6                     u4780:
 14099  0191E6  6E01               	movwf	btemp^0,c
 14100  0191E8  6A02               	clrf	(btemp+1)^0,c
 14101                           
 14102                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14103  0191EA  52E5               	movf	postdec1,f,c
 14104  0191EC  52E5               	movf	postdec1,f,c
 14105  0191EE  0012               	return		;funcret
 14106  0191F0                     __end_of_isupper:
 14107                           	opt callstack 0
 14108                           
 14109 ;; *************** function _strcpy *****************
 14110 ;; Defined at:
 14111 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  dest            2  [STACK] PTR unsigned char 
 14114 ;;		 -> dbuf(80), 
 14115 ;;  src             2  [STACK] PTR const unsigned char 
 14116 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 14117 ;;		 -> dbuf(80), 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  d               2  [STACK] PTR unsigned char 
 14120 ;;		 -> dbuf(80), 
 14121 ;;  s               2  [STACK] PTR const unsigned char 
 14122 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 14123 ;;		 -> dbuf(80), 
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  2  [STACK] PTR unsigned char 
 14126 ;; Registers used:
 14127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14137 ;;Total ram usage:        0 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; Hardware stack levels required when called:    7
 14140 ;; This function calls:
 14141 ;;		Nothing
 14142 ;; This function is called by:
 14143 ;;		_efgtoa
 14144 ;; This function uses a reentrant model
 14145 ;;
 14146                           
 14147                           	psect	text52
 14148  017BD0                     __ptext52:
 14149                           	opt callstack 0
 14150  017BD0                     _strcpy:
 14151                           	opt callstack 0
 14152                           
 14153                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14154  017BD0  52E6               	movf	postinc1,f,c
 14155  017BD2  52E6               	movf	postinc1,f,c
 14156  017BD4  52E6               	movf	postinc1,f,c
 14157  017BD6  52E6               	movf	postinc1,f,c
 14158                           
 14159                           ;stkvar	_src @ sp[(-4)+-4]
 14160                           
 14161                           ;incstack = 0
 14162  017BD8  0EF8               	movlw	-8
 14163  017BDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14164  017BE0  0EF9               	movlw	-7
 14165  017BE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 14166                           
 14167                           ;stkvar	_s @ sp[(-4)+2]
 14168  017BE8  0EFF               	movlw	-1
 14169  017BEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14170  017BF0  0EFE               	movlw	-2
 14171  017BF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14172                           
 14173                           ;stkvar	_dest @ sp[(-4)+-2]
 14174  017BF8  0EFA               	movlw	-6
 14175  017BFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14176  017C00  0EFB               	movlw	-5
 14177  017C02  006F FF8C  F00C    	movff	plusw1,btemp+11
 14178                           
 14179                           ;stkvar	_d @ sp[(-4)+0]
 14180  017C08  0EFD               	movlw	-3
 14181  017C0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14182  017C10  0EFC               	movlw	-4
 14183  017C12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14184  017C18                     l10408:
 14185                           
 14186                           ;stkvar	_s @ sp[(-4)+2]
 14187  017C18  50E1               	movf	fsr1l,w,c
 14188  017C1A  0FFE               	addlw	-2
 14189  017C1C  6ED9               	movwf	fsr2l,c
 14190  017C1E  50E2               	movf	fsr1h,w,c
 14191  017C20  6EDA               	movwf	fsr2h,c
 14192  017C22  0EFF               	movlw	255
 14193  017C24  22DA               	addwfc	fsr2h,f,c
 14194  017C26  006F FF7C  F00B    	movff	indf2,btemp+10
 14195  017C2C  0E01               	movlw	1
 14196  017C2E  26DE               	addwf	postinc2,f,c
 14197  017C30  006F FF7C  F00C    	movff	indf2,btemp+11
 14198  017C36  0E00               	movlw	0
 14199  017C38  22DD               	addwfc	postdec2,f,c
 14200  017C3A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14201  017C40  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14202  017C46  0E00               	movlw	low (__mediumconst shr (0+16))
 14203  017C48  6EF8               	movwf	tblptru,c
 14204                           
 14205                           ;stkvar	_d @ sp[(-4)+0]
 14206  017C4A  50E1               	movf	fsr1l,w,c
 14207  017C4C  0FFC               	addlw	-4
 14208  017C4E  6ED9               	movwf	fsr2l,c
 14209  017C50  50E2               	movf	fsr1h,w,c
 14210  017C52  6EDA               	movwf	fsr2h,c
 14211  017C54  0EFF               	movlw	255
 14212  017C56  22DA               	addwfc	fsr2h,f,c
 14213  017C58  006F FF7C  F00B    	movff	indf2,btemp+10
 14214  017C5E  0E01               	movlw	1
 14215  017C60  26DE               	addwf	postinc2,f,c
 14216  017C62  006F FF7C  F00C    	movff	indf2,btemp+11
 14217  017C68  0E00               	movlw	0
 14218  017C6A  22DD               	addwfc	postdec2,f,c
 14219  017C6C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14220  017C72  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14221  017C78  0E1F               	movlw	(high __ramtop+-1)
 14222  017C7A  64F7               	cpfsgt	tblptrh,c
 14223  017C7C  D003               	bra	u9447
 14224  017C7E  0008               	tblrd		*
 14225  017C80  50F5               	movf	tablat,w,c
 14226  017C82  D007               	bra	u9440
 14227  017C84                     u9447:
 14228  017C84  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14229  017C8A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14230  017C90  50EF               	movf	indf0,w,c
 14231  017C92                     u9440:
 14232  017C92  6EDF               	movwf	indf2,c
 14233  017C94  50DF               	movf	indf2,w,c
 14234  017C96  A4D8               	btfss	status,2,c
 14235  017C98  D7BF               	goto	l10408
 14236                           
 14237                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 14238  017C9A  0EF8               	movlw	248
 14239  017C9C  26E1               	addwf	fsr1l,f,c
 14240  017C9E  0EFF               	movlw	255
 14241  017CA0  22E2               	addwfc	fsr1h,f,c
 14242  017CA2  0012               	return		;funcret
 14243  017CA4                     __end_of_strcpy:
 14244                           	opt callstack 0
 14245                           
 14246 ;; *************** function _floorf *****************
 14247 ;; Defined at:
 14248 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;  x               4  [STACK] float 
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;  u               4  [STACK] struct .
 14253 ;;  m               4  [STACK] unsigned long 
 14254 ;;  e               2  [STACK] int 
 14255 ;; Return value:  Size  Location     Type
 14256 ;;                  4  [STACK] float 
 14257 ;; Registers used:
 14258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14259 ;; Tracked objects:
 14260 ;;		On entry : 0/0
 14261 ;;		On exit  : 0/0
 14262 ;;		Unchanged: 0/0
 14263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14268 ;;Total ram usage:        0 bytes
 14269 ;; Hardware stack levels used:    1
 14270 ;; Hardware stack levels required when called:    7
 14271 ;; This function calls:
 14272 ;;		Nothing
 14273 ;; This function is called by:
 14274 ;;		_efgtoa
 14275 ;; This function uses a reentrant model
 14276 ;;
 14277                           
 14278                           	psect	text53
 14279  014E4A                     __ptext53:
 14280                           	opt callstack 0
 14281  014E4A                     _floorf:
 14282                           	opt callstack 0
 14283                           
 14284                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14285  014E4A  0E0A               	movlw	10
 14286  014E4C  26E1               	addwf	fsr1l,f,c
 14287  014E4E  0E00               	movlw	0
 14288  014E50  22E2               	addwfc	fsr1h,f,c
 14289                           
 14290                           ;incstack = 0
 14291  014E52  0060  F254  F009   	movff	floorf@F524,btemp+8
 14292  014E58  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 14293  014E5E  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 14294  014E64  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 14295                           
 14296                           ;stkvar	_u @ sp[(-10)+0]
 14297  014E6A  0EF6               	movlw	-10
 14298  014E6C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14299  014E72  0EF7               	movlw	-9
 14300  014E74  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14301  014E7A  0EF8               	movlw	-8
 14302  014E7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14303  014E82  0EF9               	movlw	-7
 14304  014E84  0060  F033  FFE3   	movff	btemp+11,plusw1
 14305                           
 14306                           ;stkvar	_x @ sp[(-10)+-4]
 14307  014E8A  0EF2               	movlw	-14
 14308  014E8C  006F FF8C  F009    	movff	plusw1,btemp+8
 14309  014E92  0EF3               	movlw	-13
 14310  014E94  006F FF8C  F00A    	movff	plusw1,btemp+9
 14311  014E9A  0EF4               	movlw	-12
 14312  014E9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14313  014EA2  0EF5               	movlw	-11
 14314  014EA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14315                           
 14316                           ;stkvar	_u @ sp[(-10)+0]
 14317  014EAA  0EF6               	movlw	-10
 14318  014EAC  0060  F027  FFE3   	movff	btemp+8,plusw1
 14319  014EB2  0EF7               	movlw	-9
 14320  014EB4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14321  014EBA  0EF8               	movlw	-8
 14322  014EBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14323  014EC2  0EF9               	movlw	-7
 14324  014EC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14325  014ECA  0E81               	movlw	129
 14326  014ECC  6E0B               	movwf	(btemp+10)^0,c
 14327  014ECE  0EFF               	movlw	255
 14328  014ED0  6E0C               	movwf	(btemp+11)^0,c
 14329                           
 14330                           ;stkvar	_u @ sp[(-10)+0]
 14331  014ED2  0EF6               	movlw	-10
 14332  014ED4  006F FF8C  F005    	movff	plusw1,btemp+4
 14333  014EDA  0EF7               	movlw	-9
 14334  014EDC  006F FF8C  F006    	movff	plusw1,btemp+5
 14335  014EE2  0EF8               	movlw	-8
 14336  014EE4  006F FF8C  F007    	movff	plusw1,btemp+6
 14337  014EEA  0EF9               	movlw	-7
 14338  014EEC  006F FF8C  F008    	movff	plusw1,btemp+7
 14339  014EF2  0E18               	movlw	24
 14340  014EF4  D005               	goto	u4980
 14341  014EF6                     u4985:
 14342  014EF6  90D8               	bcf	status,0,c
 14343  014EF8  3208               	rrcf	(btemp+7)^0,f,c
 14344  014EFA  3207               	rrcf	(btemp+6)^0,f,c
 14345  014EFC  3206               	rrcf	(btemp+5)^0,f,c
 14346  014EFE  3205               	rrcf	(btemp+4)^0,f,c
 14347  014F00                     u4980:
 14348  014F00  2EE8               	decfsz	wreg,f,c
 14349  014F02  D7F9               	goto	u4985
 14350  014F04  0060  F014  F009   	movff	btemp+4,btemp+8
 14351  014F0A  0060  F018  F00A   	movff	btemp+5,btemp+9
 14352  014F10  0EFF               	movlw	255
 14353  014F12  1609               	andwf	(btemp+8)^0,f,c
 14354  014F14  0E00               	movlw	0
 14355  014F16  160A               	andwf	(btemp+9)^0,f,c
 14356  014F18  500B               	movf	(btemp+10)^0,w,c
 14357  014F1A  2609               	addwf	(btemp+8)^0,f,c
 14358  014F1C  500C               	movf	(btemp+11)^0,w,c
 14359  014F1E  220A               	addwfc	(btemp+9)^0,f,c
 14360                           
 14361                           ;stkvar	_e @ sp[(-10)+8]
 14362  014F20  0EFE               	movlw	-2
 14363  014F22  0060  F027  FFE3   	movff	btemp+8,plusw1
 14364  014F28  0EFF               	movlw	-1
 14365  014F2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14366                           
 14367                           ;stkvar	_e @ sp[(-10)+8]
 14368  014F30  0EFF               	movlw	-1
 14369  014F32  BEE3               	btfsc	plusw1,7,c
 14370  014F34  D019               	goto	l6992
 14371  014F36  0EFF               	movlw	-1
 14372  014F38  50E3               	movf	plusw1,w,c
 14373  014F3A  E108               	bnz	u4990
 14374  014F3C  0EFE               	movlw	-2
 14375  014F3E  006F FF8C  F001    	movff	plusw1,btemp
 14376  014F44  0E17               	movlw	23
 14377  014F46  5E01               	subwf	btemp^0,f,c
 14378  014F48  A0D8               	btfss	status,0,c
 14379  014F4A  D00E               	goto	l6992
 14380  014F4C                     u4990:
 14381                           
 14382                           ;stkvar	_x @ sp[(-10)+-4]
 14383  014F4C  0EF2               	movlw	-14
 14384  014F4E  006F FF8C  F001    	movff	plusw1,btemp
 14385  014F54  0EF3               	movlw	-13
 14386  014F56  006F FF8C  F002    	movff	plusw1,btemp+1
 14387  014F5C  0EF4               	movlw	-12
 14388  014F5E  006F FF8C  F003    	movff	plusw1,btemp+2
 14389  014F64  0EF5               	movlw	-11
 14390  014F66  D11F               	goto	L13
 14391  014F68                     l6992:
 14392                           
 14393                           ;stkvar	_e @ sp[(-10)+8]
 14394  014F68  0EFF               	movlw	-1
 14395  014F6A  BEE3               	btfsc	plusw1,7,c
 14396  014F6C  D0B4               	goto	l7008
 14397                           
 14398                           ;stkvar	_e @ sp[(-10)+8]
 14399  014F6E  0EFE               	movlw	-2
 14400  014F70  006F FF8C  F00C    	movff	plusw1,btemp+11
 14401  014F76  0EFF               	movlw	255
 14402  014F78  6E05               	movwf	(btemp+4)^0,c
 14403  014F7A  0EFF               	movlw	255
 14404  014F7C  6E06               	movwf	(btemp+5)^0,c
 14405  014F7E  0E7F               	movlw	127
 14406  014F80  6E07               	movwf	(btemp+6)^0,c
 14407  014F82  0E00               	movlw	0
 14408  014F84  6E08               	movwf	(btemp+7)^0,c
 14409  014F86                     u5015:
 14410  014F86  660C               	tstfsz	(btemp+11)^0,c
 14411  014F88  D001               	goto	u5016
 14412  014F8A  D007               	goto	u5017
 14413  014F8C                     u5016:
 14414  014F8C  3408               	rlcf	(btemp+7)^0,w,c
 14415  014F8E  3208               	rrcf	(btemp+7)^0,f,c
 14416  014F90  3207               	rrcf	(btemp+6)^0,f,c
 14417  014F92  3206               	rrcf	(btemp+5)^0,f,c
 14418  014F94  3205               	rrcf	(btemp+4)^0,f,c
 14419  014F96  2E0C               	decfsz	(btemp+11)^0,f,c
 14420  014F98  D7F6               	goto	u5015
 14421  014F9A                     u5017:
 14422                           
 14423                           ;stkvar	_m @ sp[(-10)+4]
 14424  014F9A  0EFA               	movlw	-6
 14425  014F9C  0060  F017  FFE3   	movff	btemp+4,plusw1
 14426  014FA2  0EFB               	movlw	-5
 14427  014FA4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 14428  014FAA  0EFC               	movlw	-4
 14429  014FAC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 14430  014FB2  0EFD               	movlw	-3
 14431  014FB4  0060  F023  FFE3   	movff	btemp+7,plusw1
 14432                           
 14433                           ;stkvar	_m @ sp[(-10)+4]
 14434                           ;stkvar	_u @ sp[(-10)+0]
 14435  014FBA  0EF6               	movlw	-10
 14436  014FBC  006F FF8C  F009    	movff	plusw1,btemp+8
 14437  014FC2  0EF7               	movlw	-9
 14438  014FC4  006F FF8C  F00A    	movff	plusw1,btemp+9
 14439  014FCA  0EF8               	movlw	-8
 14440  014FCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14441  014FD2  0EF9               	movlw	-7
 14442  014FD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14443  014FDA  0EFA               	movlw	-6
 14444  014FDC  50E3               	movf	plusw1,w,c
 14445  014FDE  1609               	andwf	(btemp+8)^0,f,c
 14446  014FE0  0EFB               	movlw	-5
 14447  014FE2  50E3               	movf	plusw1,w,c
 14448  014FE4  160A               	andwf	(btemp+9)^0,f,c
 14449  014FE6  0EFC               	movlw	-4
 14450  014FE8  50E3               	movf	plusw1,w,c
 14451  014FEA  160B               	andwf	(btemp+10)^0,f,c
 14452  014FEC  0EFD               	movlw	-3
 14453  014FEE  50E3               	movf	plusw1,w,c
 14454  014FF0  160C               	andwf	(btemp+11)^0,f,c
 14455  014FF2  5009               	movf	(btemp+8)^0,w,c
 14456  014FF4  100A               	iorwf	(btemp+9)^0,w,c
 14457  014FF6  100B               	iorwf	(btemp+10)^0,w,c
 14458  014FF8  100C               	iorwf	(btemp+11)^0,w,c
 14459  014FFA  B4D8               	btfsc	status,2,c
 14460  014FFC  D7A7               	goto	u4990
 14461                           
 14462                           ;stkvar	_u @ sp[(-10)+0]
 14463  014FFE  0EF6               	movlw	-10
 14464  015000  006F FF8C  F009    	movff	plusw1,btemp+8
 14465  015006  0EF7               	movlw	-9
 14466  015008  006F FF8C  F00A    	movff	plusw1,btemp+9
 14467  01500E  0EF8               	movlw	-8
 14468  015010  006F FF8C  F00B    	movff	plusw1,btemp+10
 14469  015016  0EF9               	movlw	-7
 14470  015018  006F FF8C  F00C    	movff	plusw1,btemp+11
 14471  01501E  0E20               	movlw	32
 14472  015020  D005               	goto	u5030
 14473  015022                     u5035:
 14474  015022  90D8               	bcf	status,0,c
 14475  015024  320C               	rrcf	(btemp+11)^0,f,c
 14476  015026  320B               	rrcf	(btemp+10)^0,f,c
 14477  015028  320A               	rrcf	(btemp+9)^0,f,c
 14478  01502A  3209               	rrcf	(btemp+8)^0,f,c
 14479  01502C                     u5030:
 14480  01502C  2EE8               	decfsz	wreg,f,c
 14481  01502E  D7F9               	goto	u5035
 14482  015030  5009               	movf	(btemp+8)^0,w,c
 14483  015032  B4D8               	btfsc	status,2,c
 14484  015034  D028               	goto	l7006
 14485                           
 14486                           ;stkvar	_m @ sp[(-10)+4]
 14487                           ;stkvar	_u @ sp[(-10)+0]
 14488  015036  0EF6               	movlw	-10
 14489  015038  50E3               	movf	plusw1,w,c
 14490  01503A  6E01               	movwf	btemp^0,c
 14491  01503C  0EFA               	movlw	-6
 14492  01503E  50E3               	movf	plusw1,w,c
 14493  015040  2601               	addwf	btemp^0,f,c
 14494  015042  0EF6               	movlw	-10
 14495  015044  0060  F007  FFE3   	movff	btemp,plusw1
 14496  01504A  0EF7               	movlw	-9
 14497  01504C  50E3               	movf	plusw1,w,c
 14498  01504E  6E01               	movwf	btemp^0,c
 14499  015050  0EFB               	movlw	-5
 14500  015052  50E3               	movf	plusw1,w,c
 14501  015054  2201               	addwfc	btemp^0,f,c
 14502  015056  0EF7               	movlw	-9
 14503  015058  0060  F007  FFE3   	movff	btemp,plusw1
 14504  01505E  0EF8               	movlw	-8
 14505  015060  50E3               	movf	plusw1,w,c
 14506  015062  6E01               	movwf	btemp^0,c
 14507  015064  0EFC               	movlw	-4
 14508  015066  50E3               	movf	plusw1,w,c
 14509  015068  2201               	addwfc	btemp^0,f,c
 14510  01506A  0EF8               	movlw	-8
 14511  01506C  0060  F007  FFE3   	movff	btemp,plusw1
 14512  015072  0EF9               	movlw	-7
 14513  015074  50E3               	movf	plusw1,w,c
 14514  015076  6E01               	movwf	btemp^0,c
 14515  015078  0EFD               	movlw	-3
 14516  01507A  50E3               	movf	plusw1,w,c
 14517  01507C  2201               	addwfc	btemp^0,f,c
 14518  01507E  0EF9               	movlw	-7
 14519  015080  0060  F007  FFE3   	movff	btemp,plusw1
 14520  015086                     l7006:
 14521                           
 14522                           ;stkvar	_m @ sp[(-10)+4]
 14523  015086  0EFA               	movlw	-6
 14524  015088  006F FF8C  F009    	movff	plusw1,btemp+8
 14525  01508E  0EFB               	movlw	-5
 14526  015090  006F FF8C  F00A    	movff	plusw1,btemp+9
 14527  015096  0EFC               	movlw	-4
 14528  015098  006F FF8C  F00B    	movff	plusw1,btemp+10
 14529  01509E  0EFD               	movlw	-3
 14530  0150A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14531  0150A6  1C09               	comf	(btemp+8)^0,w,c
 14532  0150A8  6E05               	movwf	(btemp+4)^0,c
 14533  0150AA  1C0A               	comf	(btemp+9)^0,w,c
 14534  0150AC  6E06               	movwf	(btemp+5)^0,c
 14535  0150AE  1C0B               	comf	(btemp+10)^0,w,c
 14536  0150B0  6E07               	movwf	(btemp+6)^0,c
 14537  0150B2  1C0C               	comf	(btemp+11)^0,w,c
 14538  0150B4  6E08               	movwf	(btemp+7)^0,c
 14539                           
 14540                           ;stkvar	_u @ sp[(-10)+0]
 14541  0150B6  50E1               	movf	fsr1l,w,c
 14542  0150B8  0FF6               	addlw	-10
 14543  0150BA  6ED9               	movwf	fsr2l,c
 14544  0150BC  50E2               	movf	fsr1h,w,c
 14545  0150BE  6EDA               	movwf	fsr2h,c
 14546  0150C0  0EFF               	movlw	255
 14547  0150C2  22DA               	addwfc	fsr2h,f,c
 14548  0150C4  5005               	movf	(btemp+4)^0,w,c
 14549  0150C6  16DE               	andwf	postinc2,f,c
 14550  0150C8  5006               	movf	(btemp+5)^0,w,c
 14551  0150CA  16DE               	andwf	postinc2,f,c
 14552  0150CC  5007               	movf	(btemp+6)^0,w,c
 14553  0150CE  16DE               	andwf	postinc2,f,c
 14554  0150D0  5008               	movf	(btemp+7)^0,w,c
 14555  0150D2  16DE               	andwf	postinc2,f,c
 14556  0150D4  D05B               	goto	l7016
 14557  0150D6                     l7008:
 14558                           
 14559                           ;stkvar	_u @ sp[(-10)+0]
 14560  0150D6  0EF6               	movlw	-10
 14561  0150D8  006F FF8C  F009    	movff	plusw1,btemp+8
 14562  0150DE  0EF7               	movlw	-9
 14563  0150E0  006F FF8C  F00A    	movff	plusw1,btemp+9
 14564  0150E6  0EF8               	movlw	-8
 14565  0150E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14566  0150EE  0EF9               	movlw	-7
 14567  0150F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14568  0150F6  0E20               	movlw	32
 14569  0150F8  D005               	goto	u5050
 14570  0150FA                     u5055:
 14571  0150FA  90D8               	bcf	status,0,c
 14572  0150FC  320C               	rrcf	(btemp+11)^0,f,c
 14573  0150FE  320B               	rrcf	(btemp+10)^0,f,c
 14574  015100  320A               	rrcf	(btemp+9)^0,f,c
 14575  015102  3209               	rrcf	(btemp+8)^0,f,c
 14576  015104                     u5050:
 14577  015104  2EE8               	decfsz	wreg,f,c
 14578  015106  D7F9               	goto	u5055
 14579  015108  6609               	tstfsz	(btemp+8)^0,c
 14580  01510A  D009               	goto	l7012
 14581                           
 14582                           ;stkvar	_u @ sp[(-10)+0]
 14583  01510C  0EF6               	movlw	-10
 14584  01510E  6AE3               	clrf	plusw1,c
 14585  015110  0EF7               	movlw	-9
 14586  015112  6AE3               	clrf	plusw1,c
 14587  015114  0EF8               	movlw	-8
 14588  015116  6AE3               	clrf	plusw1,c
 14589  015118  0EF9               	movlw	-7
 14590  01511A  6AE3               	clrf	plusw1,c
 14591  01511C  D037               	goto	l7016
 14592  01511E                     l7012:
 14593                           
 14594                           ;stkvar	_u @ sp[(-10)+0]
 14595  01511E  0EF6               	movlw	-10
 14596  015120  006F FF8C  F009    	movff	plusw1,btemp+8
 14597  015126  0EF7               	movlw	-9
 14598  015128  006F FF8C  F00A    	movff	plusw1,btemp+9
 14599  01512E  0EF8               	movlw	-8
 14600  015130  006F FF8C  F00B    	movff	plusw1,btemp+10
 14601  015136  0EF9               	movlw	-7
 14602  015138  006F FF8C  F00C    	movff	plusw1,btemp+11
 14603  01513E  90D8               	bcf	status,0,c
 14604  015140  3409               	rlcf	(btemp+8)^0,w,c
 14605  015142  6E05               	movwf	(btemp+4)^0,c
 14606  015144  340A               	rlcf	(btemp+9)^0,w,c
 14607  015146  6E06               	movwf	(btemp+5)^0,c
 14608  015148  340B               	rlcf	(btemp+10)^0,w,c
 14609  01514A  6E07               	movwf	(btemp+6)^0,c
 14610  01514C  340C               	rlcf	(btemp+11)^0,w,c
 14611  01514E  6E08               	movwf	(btemp+7)^0,c
 14612  015150  5005               	movf	(btemp+4)^0,w,c
 14613  015152  1006               	iorwf	(btemp+5)^0,w,c
 14614  015154  1007               	iorwf	(btemp+6)^0,w,c
 14615  015156  1008               	iorwf	(btemp+7)^0,w,c
 14616  015158  B4D8               	btfsc	status,2,c
 14617  01515A  D018               	goto	l7016
 14618  01515C  0E00               	movlw	0
 14619  01515E  6E09               	movwf	(btemp+8)^0,c
 14620  015160  0E00               	movlw	0
 14621  015162  6E0A               	movwf	(btemp+9)^0,c
 14622  015164  0E80               	movlw	128
 14623  015166  6E0B               	movwf	(btemp+10)^0,c
 14624  015168  0EBF               	movlw	191
 14625  01516A  6E0C               	movwf	(btemp+11)^0,c
 14626                           
 14627                           ;stkvar	_u @ sp[(-10)+0]
 14628  01516C  0EF6               	movlw	-10
 14629  01516E  0060  F027  FFE3   	movff	btemp+8,plusw1
 14630  015174  0EF7               	movlw	-9
 14631  015176  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14632  01517C  0EF8               	movlw	-8
 14633  01517E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14634  015184  0EF9               	movlw	-7
 14635  015186  0060  F033  FFE3   	movff	btemp+11,plusw1
 14636  01518C                     l7016:
 14637                           
 14638                           ;stkvar	_u @ sp[(-10)+0]
 14639  01518C  0EF6               	movlw	-10
 14640  01518E  006F FF8C  F001    	movff	plusw1,btemp
 14641  015194  0EF7               	movlw	-9
 14642  015196  006F FF8C  F002    	movff	plusw1,btemp+1
 14643  01519C  0EF8               	movlw	-8
 14644  01519E  006F FF8C  F003    	movff	plusw1,btemp+2
 14645  0151A4  0EF9               	movlw	-7
 14646  0151A6                     L13:
 14647  0151A6  006F FF8C  F004    	movff	plusw1,btemp+3
 14648                           
 14649                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14650  0151AC  0EF2               	movlw	242
 14651  0151AE  26E1               	addwf	fsr1l,f,c
 14652  0151B0  0EFF               	movlw	255
 14653  0151B2  22E2               	addwfc	fsr1h,f,c
 14654  0151B4  0012               	return		;funcret
 14655  0151B6                     __end_of_floorf:
 14656                           	opt callstack 0
 14657                           
 14658 ;; *************** function ___fpclassifyf *****************
 14659 ;; Defined at:
 14660 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;  x               4  [STACK] float 
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;  u               4  [STACK] struct .
 14665 ;;  e               2  [STACK] int 
 14666 ;; Return value:  Size  Location     Type
 14667 ;;                  2  [STACK] int 
 14668 ;; Registers used:
 14669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14670 ;; Tracked objects:
 14671 ;;		On entry : 0/0
 14672 ;;		On exit  : 0/0
 14673 ;;		Unchanged: 0/0
 14674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14679 ;;Total ram usage:        0 bytes
 14680 ;; Hardware stack levels used:    1
 14681 ;; Hardware stack levels required when called:    7
 14682 ;; This function calls:
 14683 ;;		Nothing
 14684 ;; This function is called by:
 14685 ;;		_efgtoa
 14686 ;; This function uses a reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text54
 14690  01690C                     __ptext54:
 14691                           	opt callstack 0
 14692  01690C                     ___fpclassifyf:
 14693                           	opt callstack 0
 14694                           
 14695                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14696  01690C  0E06               	movlw	6
 14697  01690E  26E1               	addwf	fsr1l,f,c
 14698  016910  0E00               	movlw	0
 14699  016912  22E2               	addwfc	fsr1h,f,c
 14700                           
 14701                           ;incstack = 0
 14702  016914  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 14703  01691A  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 14704  016920  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 14705  016926  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 14706                           
 14707                           ;stkvar	_u @ sp[(-6)+0]
 14708  01692C  0EFA               	movlw	-6
 14709  01692E  0060  F027  FFE3   	movff	btemp+8,plusw1
 14710  016934  0EFB               	movlw	-5
 14711  016936  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14712  01693C  0EFC               	movlw	-4
 14713  01693E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14714  016944  0EFD               	movlw	-3
 14715  016946  0060  F033  FFE3   	movff	btemp+11,plusw1
 14716                           
 14717                           ;stkvar	_x @ sp[(-6)+-4]
 14718  01694C  0EF6               	movlw	-10
 14719  01694E  006F FF8C  F009    	movff	plusw1,btemp+8
 14720  016954  0EF7               	movlw	-9
 14721  016956  006F FF8C  F00A    	movff	plusw1,btemp+9
 14722  01695C  0EF8               	movlw	-8
 14723  01695E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14724  016964  0EF9               	movlw	-7
 14725  016966  006F FF8C  F00C    	movff	plusw1,btemp+11
 14726                           
 14727                           ;stkvar	_u @ sp[(-6)+0]
 14728  01696C  0EFA               	movlw	-6
 14729  01696E  0060  F027  FFE3   	movff	btemp+8,plusw1
 14730  016974  0EFB               	movlw	-5
 14731  016976  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14732  01697C  0EFC               	movlw	-4
 14733  01697E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14734  016984  0EFD               	movlw	-3
 14735  016986  0060  F033  FFE3   	movff	btemp+11,plusw1
 14736                           
 14737                           ;stkvar	_u @ sp[(-6)+0]
 14738  01698C  0EFA               	movlw	-6
 14739  01698E  006F FF8C  F009    	movff	plusw1,btemp+8
 14740  016994  0EFB               	movlw	-5
 14741  016996  006F FF8C  F00A    	movff	plusw1,btemp+9
 14742  01699C  0EFC               	movlw	-4
 14743  01699E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14744  0169A4  0EFD               	movlw	-3
 14745  0169A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 14746  0169AC  0E18               	movlw	24
 14747  0169AE  D005               	goto	u4860
 14748  0169B0                     u4865:
 14749  0169B0  90D8               	bcf	status,0,c
 14750  0169B2  320C               	rrcf	(btemp+11)^0,f,c
 14751  0169B4  320B               	rrcf	(btemp+10)^0,f,c
 14752  0169B6  320A               	rrcf	(btemp+9)^0,f,c
 14753  0169B8  3209               	rrcf	(btemp+8)^0,f,c
 14754  0169BA                     u4860:
 14755  0169BA  2EE8               	decfsz	wreg,f,c
 14756  0169BC  D7F9               	goto	u4865
 14757  0169BE  0060  F024  F007   	movff	btemp+8,btemp+6
 14758  0169C4  0060  F028  F008   	movff	btemp+9,btemp+7
 14759  0169CA  0EFF               	movlw	255
 14760  0169CC  1607               	andwf	(btemp+6)^0,f,c
 14761  0169CE  0E00               	movlw	0
 14762  0169D0  1608               	andwf	(btemp+7)^0,f,c
 14763                           
 14764                           ;stkvar	_e @ sp[(-6)+4]
 14765  0169D2  0EFE               	movlw	-2
 14766  0169D4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 14767  0169DA  0EFF               	movlw	-1
 14768  0169DC  0060  F023  FFE3   	movff	btemp+7,plusw1
 14769                           
 14770                           ;stkvar	_e @ sp[(-6)+4]
 14771  0169E2  0EFE               	movlw	-2
 14772  0169E4  006F FF8C  F001    	movff	plusw1,btemp
 14773  0169EA  0EFF               	movlw	-1
 14774  0169EC  50E3               	movf	plusw1,w,c
 14775  0169EE  1001               	iorwf	btemp^0,w,c
 14776  0169F0  A4D8               	btfss	status,2,c
 14777  0169F2  D023               	goto	l6954
 14778                           
 14779                           ;stkvar	_u @ sp[(-6)+0]
 14780  0169F4  0EFA               	movlw	-6
 14781  0169F6  006F FF8C  F009    	movff	plusw1,btemp+8
 14782  0169FC  0EFB               	movlw	-5
 14783  0169FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 14784  016A04  0EFC               	movlw	-4
 14785  016A06  006F FF8C  F00B    	movff	plusw1,btemp+10
 14786  016A0C  0EFD               	movlw	-3
 14787  016A0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14788  016A14  90D8               	bcf	status,0,c
 14789  016A16  3409               	rlcf	(btemp+8)^0,w,c
 14790  016A18  6E05               	movwf	(btemp+4)^0,c
 14791  016A1A  340A               	rlcf	(btemp+9)^0,w,c
 14792  016A1C  6E06               	movwf	(btemp+5)^0,c
 14793  016A1E  340B               	rlcf	(btemp+10)^0,w,c
 14794  016A20  6E07               	movwf	(btemp+6)^0,c
 14795  016A22  340C               	rlcf	(btemp+11)^0,w,c
 14796  016A24  6E08               	movwf	(btemp+7)^0,c
 14797  016A26  5005               	movf	(btemp+4)^0,w,c
 14798  016A28  1006               	iorwf	(btemp+5)^0,w,c
 14799  016A2A  1007               	iorwf	(btemp+6)^0,w,c
 14800  016A2C  1008               	iorwf	(btemp+7)^0,w,c
 14801  016A2E  A4D8               	btfss	status,2,c
 14802  016A30  D002               	goto	l6950
 14803  016A32  0E02               	movlw	2
 14804  016A34  D02E               	goto	L14
 14805  016A36                     l6950:
 14806  016A36  0E03               	movlw	3
 14807  016A38  D02C               	goto	L14
 14808  016A3A                     l6954:
 14809                           
 14810                           ;stkvar	_e @ sp[(-6)+4]
 14811  016A3A  0EFE               	movlw	-2
 14812  016A3C  28E3               	incf	plusw1,w,c
 14813  016A3E  E128               	bnz	l6960
 14814  016A40  0EFF               	movlw	-1
 14815  016A42  50E3               	movf	plusw1,w,c
 14816  016A44  A4D8               	btfss	status,2,c
 14817  016A46  D024               	goto	l6960
 14818                           
 14819                           ;stkvar	_u @ sp[(-6)+0]
 14820  016A48  0EFA               	movlw	-6
 14821  016A4A  006F FF8C  F009    	movff	plusw1,btemp+8
 14822  016A50  0EFB               	movlw	-5
 14823  016A52  006F FF8C  F00A    	movff	plusw1,btemp+9
 14824  016A58  0EFC               	movlw	-4
 14825  016A5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14826  016A60  0EFD               	movlw	-3
 14827  016A62  006F FF8C  F00C    	movff	plusw1,btemp+11
 14828  016A68  0E09               	movlw	9
 14829  016A6A                     u4905:
 14830  016A6A  90D8               	bcf	status,0,c
 14831  016A6C  3609               	rlcf	(btemp+8)^0,f,c
 14832  016A6E  360A               	rlcf	(btemp+9)^0,f,c
 14833  016A70  360B               	rlcf	(btemp+10)^0,f,c
 14834  016A72  360C               	rlcf	(btemp+11)^0,f,c
 14835  016A74  2EE8               	decfsz	wreg,f,c
 14836  016A76  D7F9               	goto	u4905
 14837  016A78  5009               	movf	(btemp+8)^0,w,c
 14838  016A7A  100A               	iorwf	(btemp+9)^0,w,c
 14839  016A7C  100B               	iorwf	(btemp+10)^0,w,c
 14840  016A7E  100C               	iorwf	(btemp+11)^0,w,c
 14841  016A80  A4D8               	btfss	status,2,c
 14842  016A82  D002               	goto	u4910
 14843  016A84  0E01               	movlw	1
 14844  016A86  D001               	goto	u4920
 14845  016A88                     u4910:
 14846  016A88  0E00               	movlw	0
 14847  016A8A                     u4920:
 14848  016A8A  6E01               	movwf	btemp^0,c
 14849  016A8C  6A02               	clrf	(btemp+1)^0,c
 14850  016A8E  D004               	goto	l2934
 14851  016A90                     l6960:
 14852  016A90  0E04               	movlw	4
 14853  016A92                     L14:
 14854  016A92  6E01               	movwf	btemp^0,c
 14855  016A94  0E00               	movlw	0
 14856  016A96  6E02               	movwf	(btemp+1)^0,c
 14857  016A98                     l2934:
 14858                           
 14859                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14860  016A98  0EF6               	movlw	246
 14861  016A9A  26E1               	addwf	fsr1l,f,c
 14862  016A9C  0EFF               	movlw	255
 14863  016A9E  22E2               	addwfc	fsr1h,f,c
 14864  016AA0  0012               	return		;funcret
 14865  016AA2                     __end_of___fpclassifyf:
 14866                           	opt callstack 0
 14867                           
 14868 ;; *************** function ___fltol *****************
 14869 ;; Defined at:
 14870 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14871 ;; Parameters:    Size  Location     Type
 14872 ;;  f1              4  [STACK] int 
 14873 ;; Auto vars:     Size  Location     Type
 14874 ;;  exp1            1  [STACK] unsigned char 
 14875 ;;  sign1           1  [STACK] unsigned char 
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  4  [STACK] long 
 14878 ;; Registers used:
 14879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14880 ;; Tracked objects:
 14881 ;;		On entry : 0/1
 14882 ;;		On exit  : 0/0
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14889 ;;Total ram usage:        0 bytes
 14890 ;; Hardware stack levels used:    1
 14891 ;; Hardware stack levels required when called:    7
 14892 ;; This function calls:
 14893 ;;		Nothing
 14894 ;; This function is called by:
 14895 ;;		_calc_bsoc
 14896 ;;		_init_bsoc
 14897 ;;		_efgtoa
 14898 ;; This function uses a reentrant model
 14899 ;;
 14900                           
 14901                           	psect	text55
 14902  016AA2                     __ptext55:
 14903                           	opt callstack 0
 14904  016AA2                     ___fltol:
 14905                           	opt callstack 0
 14906                           
 14907                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14908  016AA2  52E6               	movf	postinc1,f,c
 14909  016AA4  52E6               	movf	postinc1,f,c
 14910                           
 14911                           ;stkvar	_f1 @ sp[(-2)+-4]
 14912                           
 14913                           ;incstack = 0
 14914  016AA6  0EFA               	movlw	-6
 14915  016AA8  006F FF8C  F009    	movff	plusw1,btemp+8
 14916  016AAE  0EFB               	movlw	-5
 14917  016AB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 14918  016AB6  0EFC               	movlw	-4
 14919  016AB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14920  016ABE  0EFD               	movlw	-3
 14921  016AC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14922  016AC6  0E18               	movlw	24
 14923  016AC8  D005               	goto	u8030
 14924  016ACA                     u8035:
 14925  016ACA  90D8               	bcf	status,0,c
 14926  016ACC  320C               	rrcf	(btemp+11)^0,f,c
 14927  016ACE  320B               	rrcf	(btemp+10)^0,f,c
 14928  016AD0  320A               	rrcf	(btemp+9)^0,f,c
 14929  016AD2  3209               	rrcf	(btemp+8)^0,f,c
 14930  016AD4                     u8030:
 14931  016AD4  2EE8               	decfsz	wreg,f,c
 14932  016AD6  D7F9               	goto	u8035
 14933                           
 14934                           ;stkvar	_exp1 @ sp[(-2)+0]
 14935  016AD8  0EFE               	movlw	-2
 14936  016ADA  0060  F027  FFE3   	movff	btemp+8,plusw1
 14937  016AE0  0EFE               	movlw	-2
 14938  016AE2  50E3               	movf	plusw1,w,c
 14939  016AE4  A4D8               	btfss	status,2,c
 14940  016AE6  D006               	goto	l8786
 14941  016AE8                     u8040:
 14942  016AE8  0E00               	movlw	0
 14943  016AEA  6E01               	movwf	btemp^0,c
 14944  016AEC  6A02               	clrf	(btemp+1)^0,c
 14945  016AEE  6A03               	clrf	(btemp+2)^0,c
 14946  016AF0  6A04               	clrf	(btemp+3)^0,c
 14947  016AF2  D08B               	goto	l2550
 14948  016AF4                     l8786:
 14949                           
 14950                           ;stkvar	_f1 @ sp[(-2)+-4]
 14951  016AF4  0EFA               	movlw	-6
 14952  016AF6  006F FF8C  F009    	movff	plusw1,btemp+8
 14953  016AFC  0EFB               	movlw	-5
 14954  016AFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 14955  016B04  0EFC               	movlw	-4
 14956  016B06  006F FF8C  F00B    	movff	plusw1,btemp+10
 14957  016B0C  0EFD               	movlw	-3
 14958  016B0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14959  016B14  0E20               	movlw	32
 14960  016B16  D005               	goto	u8050
 14961  016B18                     u8055:
 14962  016B18  90D8               	bcf	status,0,c
 14963  016B1A  320C               	rrcf	(btemp+11)^0,f,c
 14964  016B1C  320B               	rrcf	(btemp+10)^0,f,c
 14965  016B1E  320A               	rrcf	(btemp+9)^0,f,c
 14966  016B20  3209               	rrcf	(btemp+8)^0,f,c
 14967  016B22                     u8050:
 14968  016B22  2EE8               	decfsz	wreg,f,c
 14969  016B24  D7F9               	goto	u8055
 14970                           
 14971                           ;stkvar	_sign1 @ sp[(-2)+1]
 14972  016B26  0EFF               	movlw	-1
 14973  016B28  0060  F027  FFE3   	movff	btemp+8,plusw1
 14974                           
 14975                           ;stkvar	_f1 @ sp[(-2)+-4]
 14976  016B2E  0EFC               	movlw	-4
 14977  016B30  8EE3               	bsf	plusw1,7,c
 14978                           
 14979                           ;stkvar	_f1 @ sp[(-2)+-4]
 14980  016B32  50E1               	movf	fsr1l,w,c
 14981  016B34  0FFA               	addlw	-6
 14982  016B36  6ED9               	movwf	fsr2l,c
 14983  016B38  50E2               	movf	fsr1h,w,c
 14984  016B3A  6EDA               	movwf	fsr2h,c
 14985  016B3C  0EFF               	movlw	255
 14986  016B3E  22DA               	addwfc	fsr2h,f,c
 14987  016B40  0EFF               	movlw	255
 14988  016B42  16DE               	andwf	postinc2,f,c
 14989  016B44  0EFF               	movlw	255
 14990  016B46  16DE               	andwf	postinc2,f,c
 14991  016B48  0EFF               	movlw	255
 14992  016B4A  16DE               	andwf	postinc2,f,c
 14993  016B4C  0E00               	movlw	0
 14994  016B4E  16DE               	andwf	postinc2,f,c
 14995                           
 14996                           ;stkvar	_exp1 @ sp[(-2)+0]
 14997  016B50  0EFE               	movlw	-2
 14998  016B52  006F FF8C  F001    	movff	plusw1,btemp
 14999  016B58  0E96               	movlw	150
 15000  016B5A  5E01               	subwf	btemp^0,f,c
 15001  016B5C  0EFE               	movlw	-2
 15002  016B5E  0060  F007  FFE3   	movff	btemp,plusw1
 15003                           
 15004                           ;stkvar	_exp1 @ sp[(-2)+0]
 15005  016B64  0EFE               	movlw	-2
 15006  016B66  AEE3               	btfss	plusw1,7,c
 15007  016B68  D014               	goto	l8804
 15008                           
 15009                           ;stkvar	_exp1 @ sp[(-2)+0]
 15010  016B6A  0EFE               	movlw	-2
 15011  016B6C  50E3               	movf	plusw1,w,c
 15012  016B6E  0A80               	xorlw	128
 15013  016B70  0F97               	addlw	151
 15014  016B72  A0D8               	btfss	status,0,c
 15015  016B74  D7B9               	goto	u8040
 15016  016B76                     l8802:
 15017                           
 15018                           ;stkvar	_f1 @ sp[(-2)+-4]
 15019  016B76  90D8               	bcf	status,0,c
 15020  016B78  0EFD               	movlw	-3
 15021  016B7A  32E3               	rrcf	plusw1,f,c
 15022  016B7C  0EFC               	movlw	-4
 15023  016B7E  32E3               	rrcf	plusw1,f,c
 15024  016B80  0EFB               	movlw	-5
 15025  016B82  32E3               	rrcf	plusw1,f,c
 15026  016B84  0EFA               	movlw	-6
 15027  016B86  32E3               	rrcf	plusw1,f,c
 15028                           
 15029                           ;stkvar	_exp1 @ sp[(-2)+0]
 15030  016B88  0EFE               	movlw	-2
 15031  016B8A  2AE3               	incf	plusw1,f,c
 15032  016B8C  B4D8               	btfsc	status,2,c
 15033  016B8E  D018               	goto	u8100
 15034  016B90  D7F2               	goto	l8802
 15035  016B92                     l8804:
 15036                           
 15037                           ;stkvar	_exp1 @ sp[(-2)+0]
 15038  016B92  0EFE               	movlw	-2
 15039  016B94  006F FF8C  F001    	movff	plusw1,btemp
 15040  016B9A  0E1F               	movlw	31
 15041  016B9C  6401               	cpfsgt	btemp^0,c
 15042  016B9E  D00C               	goto	l8812
 15043  016BA0  D7A3               	goto	u8040
 15044  016BA2                     l8810:
 15045                           
 15046                           ;stkvar	_f1 @ sp[(-2)+-4]
 15047  016BA2  90D8               	bcf	status,0,c
 15048  016BA4  0EFA               	movlw	-6
 15049  016BA6  36E3               	rlcf	plusw1,f,c
 15050  016BA8  0EFB               	movlw	-5
 15051  016BAA  36E3               	rlcf	plusw1,f,c
 15052  016BAC  0EFC               	movlw	-4
 15053  016BAE  36E3               	rlcf	plusw1,f,c
 15054  016BB0  0EFD               	movlw	-3
 15055  016BB2  36E3               	rlcf	plusw1,f,c
 15056                           
 15057                           ;stkvar	_exp1 @ sp[(-2)+0]
 15058  016BB4  0EFE               	movlw	-2
 15059  016BB6  06E3               	decf	plusw1,f,c
 15060  016BB8                     l8812:
 15061                           
 15062                           ;stkvar	_exp1 @ sp[(-2)+0]
 15063  016BB8  0EFE               	movlw	-2
 15064  016BBA  50E3               	movf	plusw1,w,c
 15065  016BBC  A4D8               	btfss	status,2,c
 15066  016BBE  D7F1               	goto	l8810
 15067  016BC0                     u8100:
 15068                           
 15069                           ;stkvar	_sign1 @ sp[(-2)+1]
 15070  016BC0  0EFF               	movlw	-1
 15071  016BC2  50E3               	movf	plusw1,w,c
 15072  016BC4  B4D8               	btfsc	status,2,c
 15073  016BC6  D011               	goto	u8120
 15074                           
 15075                           ;stkvar	_f1 @ sp[(-2)+-4]
 15076                           ;stkvar	_f1 @ sp[(-2)+-4]
 15077  016BC8  0EFA               	movlw	-6
 15078  016BCA  6CE3               	negf	plusw1,c
 15079  016BCC  0EFB               	movlw	-5
 15080  016BCE  1EE3               	comf	plusw1,f,c
 15081  016BD0  0EFC               	movlw	-4
 15082  016BD2  1EE3               	comf	plusw1,f,c
 15083  016BD4  0EFD               	movlw	-3
 15084  016BD6  1EE3               	comf	plusw1,f,c
 15085  016BD8  E308               	bnc	u8120
 15086  016BDA  0EFB               	movlw	-5
 15087  016BDC  2AE3               	incf	plusw1,f,c
 15088  016BDE  E305               	bnc	u8120
 15089  016BE0  0EFC               	movlw	-4
 15090  016BE2  2AE3               	incf	plusw1,f,c
 15091  016BE4  E302               	bnc	u8120
 15092  016BE6  0EFD               	movlw	-3
 15093  016BE8  2AE3               	incf	plusw1,f,c
 15094  016BEA                     u8120:
 15095                           
 15096                           ;stkvar	_f1 @ sp[(-2)+-4]
 15097  016BEA  0EFA               	movlw	-6
 15098  016BEC  006F FF8C  F001    	movff	plusw1,btemp
 15099  016BF2  0EFB               	movlw	-5
 15100  016BF4  006F FF8C  F002    	movff	plusw1,btemp+1
 15101  016BFA  0EFC               	movlw	-4
 15102  016BFC  006F FF8C  F003    	movff	plusw1,btemp+2
 15103  016C02  0EFD               	movlw	-3
 15104  016C04  006F FF8C  F004    	movff	plusw1,btemp+3
 15105  016C0A                     l2550:
 15106                           
 15107                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15108  016C0A  0EFA               	movlw	250
 15109  016C0C  26E1               	addwf	fsr1l,f,c
 15110  016C0E  0EFF               	movlw	255
 15111  016C10  22E2               	addwfc	fsr1h,f,c
 15112  016C12  0012               	return		;funcret
 15113  016C14                     __end_of___fltol:
 15114                           	opt callstack 0
 15115                           
 15116 ;; *************** function ___flneg *****************
 15117 ;; Defined at:
 15118 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;  f1              4  [STACK] long 
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;		None
 15123 ;; Return value:  Size  Location     Type
 15124 ;;                  4  [STACK] long 
 15125 ;; Registers used:
 15126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15127 ;; Tracked objects:
 15128 ;;		On entry : 0/0
 15129 ;;		On exit  : 0/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15136 ;;Total ram usage:        0 bytes
 15137 ;; Hardware stack levels used:    1
 15138 ;; Hardware stack levels required when called:    7
 15139 ;; This function calls:
 15140 ;;		Nothing
 15141 ;; This function is called by:
 15142 ;;		_calc_bsoc
 15143 ;;		_efgtoa
 15144 ;; This function uses a reentrant model
 15145 ;;
 15146                           
 15147                           	psect	text56
 15148  018D2A                     __ptext56:
 15149                           	opt callstack 0
 15150  018D2A                     ___flneg:
 15151                           	opt callstack 7
 15152                           
 15153                           ;stkvar	_f1 @ sp[(0)+-4]
 15154                           
 15155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15156                           ;incstack = 0
 15157  018D2A  0EFC               	movlw	-4
 15158  018D2C  50E3               	movf	plusw1,w,c
 15159  018D2E  E10A               	bnz	u8020
 15160  018D30  0EFD               	movlw	-3
 15161  018D32  50E3               	movf	plusw1,w,c
 15162  018D34  E107               	bnz	u8020
 15163  018D36  0EFE               	movlw	-2
 15164  018D38  50E3               	movf	plusw1,w,c
 15165  018D3A  E104               	bnz	u8020
 15166  018D3C  0EFF               	movlw	-1
 15167  018D3E  50E3               	movf	plusw1,w,c
 15168  018D40  B4D8               	btfsc	status,2,c
 15169  018D42  D002               	goto	l8776
 15170  018D44                     u8020:
 15171                           
 15172                           ;stkvar	_f1 @ sp[(0)+-4]
 15173  018D44  0EFF               	movlw	-1
 15174  018D46  7EE3               	btg	plusw1,7,c
 15175  018D48                     l8776:
 15176                           
 15177                           ;stkvar	_f1 @ sp[(0)+-4]
 15178  018D48  0EFC               	movlw	-4
 15179  018D4A  006F FF8C  F001    	movff	plusw1,btemp
 15180  018D50  0EFD               	movlw	-3
 15181  018D52  006F FF8C  F002    	movff	plusw1,btemp+1
 15182  018D58  0EFE               	movlw	-2
 15183  018D5A  006F FF8C  F003    	movff	plusw1,btemp+2
 15184  018D60  0EFF               	movlw	-1
 15185  018D62  006F FF8C  F004    	movff	plusw1,btemp+3
 15186                           
 15187                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15188  018D68  52E5               	movf	postdec1,f,c
 15189  018D6A  52E5               	movf	postdec1,f,c
 15190  018D6C  52E5               	movf	postdec1,f,c
 15191  018D6E  52E5               	movf	postdec1,f,c
 15192  018D70  0012               	return		;funcret
 15193  018D72                     __end_of___flneg:
 15194                           	opt callstack 0
 15195                           
 15196 ;; *************** function ___flge *****************
 15197 ;; Defined at:
 15198 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;  ff1             4  [STACK] long 
 15201 ;;  ff2             4  [STACK] long 
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;		None
 15204 ;; Return value:  Size  Location     Type
 15205 ;;		None               void
 15206 ;; Registers used:
 15207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15208 ;; Tracked objects:
 15209 ;;		On entry : 0/0
 15210 ;;		On exit  : 0/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15217 ;;Total ram usage:        0 bytes
 15218 ;; Hardware stack levels used:    1
 15219 ;; Hardware stack levels required when called:    7
 15220 ;; This function calls:
 15221 ;;		Nothing
 15222 ;; This function is called by:
 15223 ;;		_calc_bsoc
 15224 ;;		_efgtoa
 15225 ;; This function uses a reentrant model
 15226 ;;
 15227                           
 15228                           	psect	text57
 15229  016D84                     __ptext57:
 15230                           	opt callstack 0
 15231  016D84                     ___flge:
 15232                           	opt callstack 7
 15233                           
 15234                           ;stkvar	_ff1 @ sp[(0)+-4]
 15235                           
 15236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15237                           ;incstack = 0
 15238  016D84  50E1               	movf	fsr1l,w,c
 15239  016D86  0FFC               	addlw	-4
 15240  016D88  6ED9               	movwf	fsr2l,c
 15241  016D8A  50E2               	movf	fsr1h,w,c
 15242  016D8C  6EDA               	movwf	fsr2h,c
 15243  016D8E  0EFF               	movlw	255
 15244  016D90  22DA               	addwfc	fsr2h,f,c
 15245  016D92  0E00               	movlw	0
 15246  016D94  14DE               	andwf	postinc2,w,c
 15247  016D96  6E09               	movwf	(btemp+8)^0,c
 15248  016D98  0E00               	movlw	0
 15249  016D9A  14DE               	andwf	postinc2,w,c
 15250  016D9C  6E0A               	movwf	(btemp+9)^0,c
 15251  016D9E  0E80               	movlw	128
 15252  016DA0  14DE               	andwf	postinc2,w,c
 15253  016DA2  6E0B               	movwf	(btemp+10)^0,c
 15254  016DA4  0E7F               	movlw	127
 15255  016DA6  14DE               	andwf	postinc2,w,c
 15256  016DA8  6E0C               	movwf	(btemp+11)^0,c
 15257  016DAA  5009               	movf	(btemp+8)^0,w,c
 15258  016DAC  100A               	iorwf	(btemp+9)^0,w,c
 15259  016DAE  100B               	iorwf	(btemp+10)^0,w,c
 15260  016DB0  100C               	iorwf	(btemp+11)^0,w,c
 15261  016DB2  A4D8               	btfss	status,2,c
 15262  016DB4  D008               	goto	l8750
 15263                           
 15264                           ;stkvar	_ff1 @ sp[(0)+-4]
 15265  016DB6  0EFC               	movlw	-4
 15266  016DB8  6AE3               	clrf	plusw1,c
 15267  016DBA  0EFD               	movlw	-3
 15268  016DBC  6AE3               	clrf	plusw1,c
 15269  016DBE  0EFE               	movlw	-2
 15270  016DC0  6AE3               	clrf	plusw1,c
 15271  016DC2  0EFF               	movlw	-1
 15272  016DC4  6AE3               	clrf	plusw1,c
 15273  016DC6                     l8750:
 15274                           
 15275                           ;stkvar	_ff2 @ sp[(0)+-8]
 15276  016DC6  50E1               	movf	fsr1l,w,c
 15277  016DC8  0FF8               	addlw	-8
 15278  016DCA  6ED9               	movwf	fsr2l,c
 15279  016DCC  50E2               	movf	fsr1h,w,c
 15280  016DCE  6EDA               	movwf	fsr2h,c
 15281  016DD0  0EFF               	movlw	255
 15282  016DD2  22DA               	addwfc	fsr2h,f,c
 15283  016DD4  0E00               	movlw	0
 15284  016DD6  14DE               	andwf	postinc2,w,c
 15285  016DD8  6E09               	movwf	(btemp+8)^0,c
 15286  016DDA  0E00               	movlw	0
 15287  016DDC  14DE               	andwf	postinc2,w,c
 15288  016DDE  6E0A               	movwf	(btemp+9)^0,c
 15289  016DE0  0E80               	movlw	128
 15290  016DE2  14DE               	andwf	postinc2,w,c
 15291  016DE4  6E0B               	movwf	(btemp+10)^0,c
 15292  016DE6  0E7F               	movlw	127
 15293  016DE8  14DE               	andwf	postinc2,w,c
 15294  016DEA  6E0C               	movwf	(btemp+11)^0,c
 15295  016DEC  5009               	movf	(btemp+8)^0,w,c
 15296  016DEE  100A               	iorwf	(btemp+9)^0,w,c
 15297  016DF0  100B               	iorwf	(btemp+10)^0,w,c
 15298  016DF2  100C               	iorwf	(btemp+11)^0,w,c
 15299  016DF4  A4D8               	btfss	status,2,c
 15300  016DF6  D008               	goto	l2516
 15301                           
 15302                           ;stkvar	_ff2 @ sp[(0)+-8]
 15303  016DF8  0EF8               	movlw	-8
 15304  016DFA  6AE3               	clrf	plusw1,c
 15305  016DFC  0EF9               	movlw	-7
 15306  016DFE  6AE3               	clrf	plusw1,c
 15307  016E00  0EFA               	movlw	-6
 15308  016E02  6AE3               	clrf	plusw1,c
 15309  016E04  0EFB               	movlw	-5
 15310  016E06  6AE3               	clrf	plusw1,c
 15311  016E08                     l2516:
 15312                           
 15313                           ;stkvar	_ff1 @ sp[(0)+-4]
 15314  016E08  0EFF               	movlw	-1
 15315  016E0A  AEE3               	btfss	plusw1,7,c
 15316  016E0C  D024               	goto	l8756
 15317                           
 15318                           ;stkvar	_ff1 @ sp[(0)+-4]
 15319  016E0E  0E00               	movlw	0
 15320  016E10  6E09               	movwf	(btemp+8)^0,c
 15321  016E12  0E00               	movlw	0
 15322  016E14  6E0A               	movwf	(btemp+9)^0,c
 15323  016E16  0E00               	movlw	0
 15324  016E18  6E0B               	movwf	(btemp+10)^0,c
 15325  016E1A  0E80               	movlw	128
 15326  016E1C  6E0C               	movwf	(btemp+11)^0,c
 15327  016E1E  0EFC               	movlw	-4
 15328  016E20  50E3               	movf	plusw1,w,c
 15329  016E22  5E09               	subwf	(btemp+8)^0,f,c
 15330  016E24  0EFD               	movlw	-3
 15331  016E26  50E3               	movf	plusw1,w,c
 15332  016E28  5A0A               	subwfb	(btemp+9)^0,f,c
 15333  016E2A  0EFE               	movlw	-2
 15334  016E2C  50E3               	movf	plusw1,w,c
 15335  016E2E  5A0B               	subwfb	(btemp+10)^0,f,c
 15336  016E30  0EFF               	movlw	-1
 15337  016E32  50E3               	movf	plusw1,w,c
 15338  016E34  5A0C               	subwfb	(btemp+11)^0,f,c
 15339                           
 15340                           ;stkvar	_ff1 @ sp[(0)+-4]
 15341  016E36  0EFC               	movlw	-4
 15342  016E38  0060  F027  FFE3   	movff	btemp+8,plusw1
 15343  016E3E  0EFD               	movlw	-3
 15344  016E40  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15345  016E46  0EFE               	movlw	-2
 15346  016E48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15347  016E4E  0EFF               	movlw	-1
 15348  016E50  0060  F033  FFE3   	movff	btemp+11,plusw1
 15349  016E56                     l8756:
 15350                           
 15351                           ;stkvar	_ff2 @ sp[(0)+-8]
 15352  016E56  0EFB               	movlw	-5
 15353  016E58  AEE3               	btfss	plusw1,7,c
 15354  016E5A  D024               	goto	l8760
 15355                           
 15356                           ;stkvar	_ff2 @ sp[(0)+-8]
 15357  016E5C  0E00               	movlw	0
 15358  016E5E  6E09               	movwf	(btemp+8)^0,c
 15359  016E60  0E00               	movlw	0
 15360  016E62  6E0A               	movwf	(btemp+9)^0,c
 15361  016E64  0E00               	movlw	0
 15362  016E66  6E0B               	movwf	(btemp+10)^0,c
 15363  016E68  0E80               	movlw	128
 15364  016E6A  6E0C               	movwf	(btemp+11)^0,c
 15365  016E6C  0EF8               	movlw	-8
 15366  016E6E  50E3               	movf	plusw1,w,c
 15367  016E70  5E09               	subwf	(btemp+8)^0,f,c
 15368  016E72  0EF9               	movlw	-7
 15369  016E74  50E3               	movf	plusw1,w,c
 15370  016E76  5A0A               	subwfb	(btemp+9)^0,f,c
 15371  016E78  0EFA               	movlw	-6
 15372  016E7A  50E3               	movf	plusw1,w,c
 15373  016E7C  5A0B               	subwfb	(btemp+10)^0,f,c
 15374  016E7E  0EFB               	movlw	-5
 15375  016E80  50E3               	movf	plusw1,w,c
 15376  016E82  5A0C               	subwfb	(btemp+11)^0,f,c
 15377                           
 15378                           ;stkvar	_ff2 @ sp[(0)+-8]
 15379  016E84  0EF8               	movlw	-8
 15380  016E86  0060  F027  FFE3   	movff	btemp+8,plusw1
 15381  016E8C  0EF9               	movlw	-7
 15382  016E8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15383  016E94  0EFA               	movlw	-6
 15384  016E96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15385  016E9C  0EFB               	movlw	-5
 15386  016E9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15387  016EA4                     l8760:
 15388                           
 15389                           ;stkvar	_ff1 @ sp[(0)+-4]
 15390  016EA4  0EFF               	movlw	-1
 15391  016EA6  7EE3               	btg	plusw1,7,c
 15392                           
 15393                           ;stkvar	_ff2 @ sp[(0)+-8]
 15394  016EA8  0EFB               	movlw	-5
 15395  016EAA  7EE3               	btg	plusw1,7,c
 15396                           
 15397                           ;stkvar	_ff2 @ sp[(0)+-8]
 15398                           ;stkvar	_ff1 @ sp[(0)+-4]
 15399  016EAC  50E1               	movf	fsr1l,w,c
 15400  016EAE  0FFC               	addlw	-4
 15401  016EB0  6ED9               	movwf	fsr2l,c
 15402  016EB2  50E2               	movf	fsr1h,w,c
 15403  016EB4  6EDA               	movwf	fsr2h,c
 15404  016EB6  0EFF               	movlw	255
 15405  016EB8  22DA               	addwfc	fsr2h,f,c
 15406  016EBA  0EF8               	movlw	-8
 15407  016EBC  50E3               	movf	plusw1,w,c
 15408  016EBE  5CDE               	subwf	postinc2,w,c
 15409  016EC0  0EF9               	movlw	-7
 15410  016EC2  50E3               	movf	plusw1,w,c
 15411  016EC4  58DE               	subwfb	postinc2,w,c
 15412  016EC6  0EFA               	movlw	-6
 15413  016EC8  50E3               	movf	plusw1,w,c
 15414  016ECA  58DE               	subwfb	postinc2,w,c
 15415  016ECC  0EFB               	movlw	-5
 15416  016ECE  50E3               	movf	plusw1,w,c
 15417  016ED0  58DE               	subwfb	postinc2,w,c
 15418  016ED2  B0D8               	btfsc	status,0,c
 15419  016ED4  D002               	goto	l8768
 15420  016ED6  9001               	bcf	btemp& (0+255),0,c
 15421  016ED8  D001               	goto	l2523
 15422  016EDA                     l8768:
 15423  016EDA  8001               	bsf	btemp& (0+255),0,c
 15424  016EDC                     l2523:
 15425                           
 15426                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15427  016EDC  0EF8               	movlw	248
 15428  016EDE  26E1               	addwf	fsr1l,f,c
 15429  016EE0  0EFF               	movlw	255
 15430  016EE2  22E2               	addwfc	fsr1h,f,c
 15431  016EE4  0012               	return		;funcret
 15432  016EE6                     __end_of___flge:
 15433                           	opt callstack 0
 15434                           
 15435 ;; *************** function ___fleq *****************
 15436 ;; Defined at:
 15437 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15438 ;; Parameters:    Size  Location     Type
 15439 ;;  ff1             4  [STACK] long 
 15440 ;;  ff2             4  [STACK] long 
 15441 ;; Auto vars:     Size  Location     Type
 15442 ;;		None
 15443 ;; Return value:  Size  Location     Type
 15444 ;;		None               void
 15445 ;; Registers used:
 15446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15447 ;; Tracked objects:
 15448 ;;		On entry : 0/0
 15449 ;;		On exit  : 0/0
 15450 ;;		Unchanged: 0/0
 15451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15456 ;;Total ram usage:        0 bytes
 15457 ;; Hardware stack levels used:    1
 15458 ;; Hardware stack levels required when called:    7
 15459 ;; This function calls:
 15460 ;;		Nothing
 15461 ;; This function is called by:
 15462 ;;		_efgtoa
 15463 ;; This function uses a reentrant model
 15464 ;;
 15465                           
 15466                           	psect	text58
 15467  017E44                     __ptext58:
 15468                           	opt callstack 0
 15469  017E44                     ___fleq:
 15470                           	opt callstack 16
 15471                           
 15472                           ;stkvar	_ff1 @ sp[(0)+-4]
 15473                           
 15474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15475                           ;incstack = 0
 15476  017E44  50E1               	movf	fsr1l,w,c
 15477  017E46  0FFC               	addlw	-4
 15478  017E48  6ED9               	movwf	fsr2l,c
 15479  017E4A  50E2               	movf	fsr1h,w,c
 15480  017E4C  6EDA               	movwf	fsr2h,c
 15481  017E4E  0EFF               	movlw	255
 15482  017E50  22DA               	addwfc	fsr2h,f,c
 15483  017E52  0E00               	movlw	0
 15484  017E54  14DE               	andwf	postinc2,w,c
 15485  017E56  6E09               	movwf	(btemp+8)^0,c
 15486  017E58  0E00               	movlw	0
 15487  017E5A  14DE               	andwf	postinc2,w,c
 15488  017E5C  6E0A               	movwf	(btemp+9)^0,c
 15489  017E5E  0E80               	movlw	128
 15490  017E60  14DE               	andwf	postinc2,w,c
 15491  017E62  6E0B               	movwf	(btemp+10)^0,c
 15492  017E64  0E7F               	movlw	127
 15493  017E66  14DE               	andwf	postinc2,w,c
 15494  017E68  6E0C               	movwf	(btemp+11)^0,c
 15495  017E6A  5009               	movf	(btemp+8)^0,w,c
 15496  017E6C  100A               	iorwf	(btemp+9)^0,w,c
 15497  017E6E  100B               	iorwf	(btemp+10)^0,w,c
 15498  017E70  100C               	iorwf	(btemp+11)^0,w,c
 15499  017E72  A4D8               	btfss	status,2,c
 15500  017E74  D008               	goto	l7216
 15501                           
 15502                           ;stkvar	_ff1 @ sp[(0)+-4]
 15503  017E76  0EFC               	movlw	-4
 15504  017E78  6AE3               	clrf	plusw1,c
 15505  017E7A  0EFD               	movlw	-3
 15506  017E7C  6AE3               	clrf	plusw1,c
 15507  017E7E  0EFE               	movlw	-2
 15508  017E80  6AE3               	clrf	plusw1,c
 15509  017E82  0EFF               	movlw	-1
 15510  017E84  6AE3               	clrf	plusw1,c
 15511  017E86                     l7216:
 15512                           
 15513                           ;stkvar	_ff2 @ sp[(0)+-8]
 15514  017E86  50E1               	movf	fsr1l,w,c
 15515  017E88  0FF8               	addlw	-8
 15516  017E8A  6ED9               	movwf	fsr2l,c
 15517  017E8C  50E2               	movf	fsr1h,w,c
 15518  017E8E  6EDA               	movwf	fsr2h,c
 15519  017E90  0EFF               	movlw	255
 15520  017E92  22DA               	addwfc	fsr2h,f,c
 15521  017E94  0E00               	movlw	0
 15522  017E96  14DE               	andwf	postinc2,w,c
 15523  017E98  6E09               	movwf	(btemp+8)^0,c
 15524  017E9A  0E00               	movlw	0
 15525  017E9C  14DE               	andwf	postinc2,w,c
 15526  017E9E  6E0A               	movwf	(btemp+9)^0,c
 15527  017EA0  0E80               	movlw	128
 15528  017EA2  14DE               	andwf	postinc2,w,c
 15529  017EA4  6E0B               	movwf	(btemp+10)^0,c
 15530  017EA6  0E7F               	movlw	127
 15531  017EA8  14DE               	andwf	postinc2,w,c
 15532  017EAA  6E0C               	movwf	(btemp+11)^0,c
 15533  017EAC  5009               	movf	(btemp+8)^0,w,c
 15534  017EAE  100A               	iorwf	(btemp+9)^0,w,c
 15535  017EB0  100B               	iorwf	(btemp+10)^0,w,c
 15536  017EB2  100C               	iorwf	(btemp+11)^0,w,c
 15537  017EB4  A4D8               	btfss	status,2,c
 15538  017EB6  D008               	goto	l7220
 15539                           
 15540                           ;stkvar	_ff2 @ sp[(0)+-8]
 15541  017EB8  0EF8               	movlw	-8
 15542  017EBA  6AE3               	clrf	plusw1,c
 15543  017EBC  0EF9               	movlw	-7
 15544  017EBE  6AE3               	clrf	plusw1,c
 15545  017EC0  0EFA               	movlw	-6
 15546  017EC2  6AE3               	clrf	plusw1,c
 15547  017EC4  0EFB               	movlw	-5
 15548  017EC6  6AE3               	clrf	plusw1,c
 15549  017EC8                     l7220:
 15550                           
 15551                           ;stkvar	_ff2 @ sp[(0)+-8]
 15552                           ;stkvar	_ff1 @ sp[(0)+-4]
 15553  017EC8  50E1               	movf	fsr1l,w,c
 15554  017ECA  0FFC               	addlw	-4
 15555  017ECC  6ED9               	movwf	fsr2l,c
 15556  017ECE  50E2               	movf	fsr1h,w,c
 15557  017ED0  6EDA               	movwf	fsr2h,c
 15558  017ED2  0EFF               	movlw	255
 15559  017ED4  22DA               	addwfc	fsr2h,f,c
 15560  017ED6  0EF8               	movlw	-8
 15561  017ED8  50E3               	movf	plusw1,w,c
 15562  017EDA  18DE               	xorwf	postinc2,w,c
 15563  017EDC  E10D               	bnz	u5540
 15564  017EDE  0EF9               	movlw	-7
 15565  017EE0  50E3               	movf	plusw1,w,c
 15566  017EE2  18DE               	xorwf	postinc2,w,c
 15567  017EE4  E109               	bnz	u5540
 15568  017EE6  0EFA               	movlw	-6
 15569  017EE8  50E3               	movf	plusw1,w,c
 15570  017EEA  18DE               	xorwf	postinc2,w,c
 15571  017EEC  E105               	bnz	u5540
 15572  017EEE  0EFB               	movlw	-5
 15573  017EF0  50E3               	movf	plusw1,w,c
 15574  017EF2  18DE               	xorwf	postinc2,w,c
 15575  017EF4  B4D8               	btfsc	status,2,c
 15576  017EF6  D002               	goto	l7224
 15577  017EF8                     u5540:
 15578  017EF8  9001               	bcf	btemp& (0+255),0,c
 15579  017EFA  D001               	goto	l2512
 15580  017EFC                     l7224:
 15581  017EFC  8001               	bsf	btemp& (0+255),0,c
 15582  017EFE                     l2512:
 15583                           
 15584                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15585  017EFE  0EF8               	movlw	248
 15586  017F00  26E1               	addwf	fsr1l,f,c
 15587  017F02  0EFF               	movlw	255
 15588  017F04  22E2               	addwfc	fsr1h,f,c
 15589  017F06  0012               	return		;funcret
 15590  017F08                     __end_of___fleq:
 15591                           	opt callstack 0
 15592                           
 15593 ;; *************** function ___fldiv *****************
 15594 ;; Defined at:
 15595 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;  b               4  [STACK] long 
 15598 ;;  a               4  [STACK] long 
 15599 ;; Auto vars:     Size  Location     Type
 15600 ;;  grs             4  [STACK] unsigned long 
 15601 ;;  rem             4  [STACK] unsigned long 
 15602 ;;  new_exp         2  [STACK] short 
 15603 ;;  aexp            1  [STACK] unsigned char 
 15604 ;;  bexp            1  [STACK] unsigned char 
 15605 ;;  sign            1  [STACK] unsigned char 
 15606 ;; Return value:  Size  Location     Type
 15607 ;;                  4  [STACK] unsigned char 
 15608 ;; Registers used:
 15609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15610 ;; Tracked objects:
 15611 ;;		On entry : 0/1
 15612 ;;		On exit  : 0/0
 15613 ;;		Unchanged: 0/0
 15614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15619 ;;Total ram usage:        0 bytes
 15620 ;; Hardware stack levels used:    1
 15621 ;; Hardware stack levels required when called:    7
 15622 ;; This function calls:
 15623 ;;		Nothing
 15624 ;; This function is called by:
 15625 ;;		_conv_raw_result
 15626 ;;		_calc_bsoc
 15627 ;;		_init_bsoc
 15628 ;;		_efgtoa
 15629 ;; This function uses a reentrant model
 15630 ;;
 15631                           
 15632                           	psect	text59
 15633  013BEA                     __ptext59:
 15634                           	opt callstack 0
 15635  013BEA                     ___fldiv:
 15636                           	opt callstack 0
 15637                           
 15638                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15639  013BEA  0E0D               	movlw	13
 15640  013BEC  26E1               	addwf	fsr1l,f,c
 15641  013BEE  0E00               	movlw	0
 15642  013BF0  22E2               	addwfc	fsr1h,f,c
 15643                           
 15644                           ;stkvar	_b @ sp[(-13)+-4]
 15645                           
 15646                           ;incstack = 0
 15647  013BF2  0EF2               	movlw	242
 15648  013BF4  24E1               	addwf	fsr1l,w,c
 15649  013BF6  6ED9               	movwf	fsr2l,c
 15650  013BF8  0EFF               	movlw	255
 15651  013BFA  20E2               	addwfc	fsr1h,w,c
 15652  013BFC  6EDA               	movwf	fsr2h,c
 15653  013BFE  50DF               	movf	indf2,w,c
 15654  013C00  6E0C               	movwf	(btemp+11)^0,c
 15655  013C02  0E80               	movlw	128
 15656  013C04  160C               	andwf	(btemp+11)^0,f,c
 15657                           
 15658                           ;stkvar	_sign @ sp[(-13)+12]
 15659  013C06  0EFF               	movlw	-1
 15660  013C08  0060  F033  FFE3   	movff	btemp+11,plusw1
 15661                           
 15662                           ;stkvar	_b @ sp[(-13)+-4]
 15663  013C0E  0EF2               	movlw	242
 15664  013C10  24E1               	addwf	fsr1l,w,c
 15665  013C12  6ED9               	movwf	fsr2l,c
 15666  013C14  0EFF               	movlw	255
 15667  013C16  20E2               	addwfc	fsr1h,w,c
 15668  013C18  6EDA               	movwf	fsr2h,c
 15669  013C1A  50DF               	movf	indf2,w,c
 15670  013C1C  6E0C               	movwf	(btemp+11)^0,c
 15671  013C1E  90D8               	bcf	status,0,c
 15672  013C20  340C               	rlcf	(btemp+11)^0,w,c
 15673  013C22  6E0B               	movwf	(btemp+10)^0,c
 15674                           
 15675                           ;stkvar	_bexp @ sp[(-13)+11]
 15676  013C24  0EFE               	movlw	-2
 15677  013C26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15678                           
 15679                           ;stkvar	_b @ sp[(-13)+-4]
 15680  013C2C  0EF1               	movlw	241
 15681  013C2E  24E1               	addwf	fsr1l,w,c
 15682  013C30  6ED9               	movwf	fsr2l,c
 15683  013C32  0EFF               	movlw	255
 15684  013C34  20E2               	addwfc	fsr1h,w,c
 15685  013C36  6EDA               	movwf	fsr2h,c
 15686  013C38  AEDF               	btfss	indf2,7,c
 15687  013C3A  D002               	goto	l8442
 15688                           
 15689                           ;stkvar	_bexp @ sp[(-13)+11]
 15690  013C3C  0EFE               	movlw	-2
 15691  013C3E  80E3               	bsf	plusw1,0,c
 15692  013C40                     l8442:
 15693                           
 15694                           ;stkvar	_bexp @ sp[(-13)+11]
 15695  013C40  0EFE               	movlw	-2
 15696  013C42  50E3               	movf	plusw1,w,c
 15697  013C44  B4D8               	btfsc	status,2,c
 15698  013C46  D027               	goto	l8452
 15699                           
 15700                           ;stkvar	_bexp @ sp[(-13)+11]
 15701  013C48  0EFE               	movlw	-2
 15702  013C4A  28E3               	incf	plusw1,w,c
 15703  013C4C  A4D8               	btfss	status,2,c
 15704  013C4E  D018               	goto	l8448
 15705  013C50  0E00               	movlw	0
 15706  013C52  6E09               	movwf	(btemp+8)^0,c
 15707  013C54  0E00               	movlw	0
 15708  013C56  6E0A               	movwf	(btemp+9)^0,c
 15709  013C58  0E00               	movlw	0
 15710  013C5A  6E0B               	movwf	(btemp+10)^0,c
 15711  013C5C  0E00               	movlw	0
 15712  013C5E  6E0C               	movwf	(btemp+11)^0,c
 15713                           
 15714                           ;stkvar	_b @ sp[(-13)+-4]
 15715  013C60  0EEF               	movlw	-17
 15716  013C62  0060  F027  FFE3   	movff	btemp+8,plusw1
 15717  013C68  0EF0               	movlw	-16
 15718  013C6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15719  013C70  0EF1               	movlw	-15
 15720  013C72  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15721  013C78  0EF2               	movlw	-14
 15722  013C7A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15723  013C80                     l8448:
 15724                           
 15725                           ;stkvar	_b @ sp[(-13)+-4]
 15726  013C80  0EF1               	movlw	-15
 15727  013C82  8EE3               	bsf	plusw1,7,c
 15728                           
 15729                           ;stkvar	_b @ sp[(-13)+-4]
 15730  013C84  0EF2               	movlw	242
 15731  013C86  24E1               	addwf	fsr1l,w,c
 15732  013C88  6ED9               	movwf	fsr2l,c
 15733  013C8A  0EFF               	movlw	255
 15734  013C8C  20E2               	addwfc	fsr1h,w,c
 15735  013C8E  6EDA               	movwf	fsr2h,c
 15736  013C90  0E00               	movlw	0
 15737  013C92  6EDF               	movwf	indf2,c
 15738  013C94  D018               	goto	l8454
 15739  013C96                     l8452:
 15740  013C96  0E00               	movlw	0
 15741  013C98  6E09               	movwf	(btemp+8)^0,c
 15742  013C9A  0E00               	movlw	0
 15743  013C9C  6E0A               	movwf	(btemp+9)^0,c
 15744  013C9E  0E00               	movlw	0
 15745  013CA0  6E0B               	movwf	(btemp+10)^0,c
 15746  013CA2  0E00               	movlw	0
 15747  013CA4  6E0C               	movwf	(btemp+11)^0,c
 15748                           
 15749                           ;stkvar	_b @ sp[(-13)+-4]
 15750  013CA6  0EEF               	movlw	-17
 15751  013CA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 15752  013CAE  0EF0               	movlw	-16
 15753  013CB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15754  013CB6  0EF1               	movlw	-15
 15755  013CB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15756  013CBE  0EF2               	movlw	-14
 15757  013CC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 15758  013CC6                     l8454:
 15759                           
 15760                           ;stkvar	_a @ sp[(-13)+-8]
 15761  013CC6  0EEE               	movlw	238
 15762  013CC8  24E1               	addwf	fsr1l,w,c
 15763  013CCA  6ED9               	movwf	fsr2l,c
 15764  013CCC  0EFF               	movlw	255
 15765  013CCE  20E2               	addwfc	fsr1h,w,c
 15766  013CD0  6EDA               	movwf	fsr2h,c
 15767  013CD2  50DF               	movf	indf2,w,c
 15768  013CD4  6E0C               	movwf	(btemp+11)^0,c
 15769  013CD6  0E80               	movlw	128
 15770  013CD8  160C               	andwf	(btemp+11)^0,f,c
 15771                           
 15772                           ;stkvar	_sign @ sp[(-13)+12]
 15773  013CDA  50E1               	movf	fsr1l,w,c
 15774  013CDC  0FFF               	addlw	-1
 15775  013CDE  6ED9               	movwf	fsr2l,c
 15776  013CE0  50E2               	movf	fsr1h,w,c
 15777  013CE2  6EDA               	movwf	fsr2h,c
 15778  013CE4  0EFF               	movlw	255
 15779  013CE6  22DA               	addwfc	fsr2h,f,c
 15780  013CE8  500C               	movf	(btemp+11)^0,w,c
 15781  013CEA  1ADF               	xorwf	indf2,f,c
 15782                           
 15783                           ;stkvar	_a @ sp[(-13)+-8]
 15784  013CEC  0EEE               	movlw	238
 15785  013CEE  24E1               	addwf	fsr1l,w,c
 15786  013CF0  6ED9               	movwf	fsr2l,c
 15787  013CF2  0EFF               	movlw	255
 15788  013CF4  20E2               	addwfc	fsr1h,w,c
 15789  013CF6  6EDA               	movwf	fsr2h,c
 15790  013CF8  50DF               	movf	indf2,w,c
 15791  013CFA  6E0C               	movwf	(btemp+11)^0,c
 15792  013CFC  90D8               	bcf	status,0,c
 15793  013CFE  340C               	rlcf	(btemp+11)^0,w,c
 15794  013D00  6E0B               	movwf	(btemp+10)^0,c
 15795                           
 15796                           ;stkvar	_aexp @ sp[(-13)+10]
 15797  013D02  0EFD               	movlw	-3
 15798  013D04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15799                           
 15800                           ;stkvar	_a @ sp[(-13)+-8]
 15801  013D0A  0EED               	movlw	237
 15802  013D0C  24E1               	addwf	fsr1l,w,c
 15803  013D0E  6ED9               	movwf	fsr2l,c
 15804  013D10  0EFF               	movlw	255
 15805  013D12  20E2               	addwfc	fsr1h,w,c
 15806  013D14  6EDA               	movwf	fsr2h,c
 15807  013D16  AEDF               	btfss	indf2,7,c
 15808  013D18  D002               	goto	l8462
 15809                           
 15810                           ;stkvar	_aexp @ sp[(-13)+10]
 15811  013D1A  0EFD               	movlw	-3
 15812  013D1C  80E3               	bsf	plusw1,0,c
 15813  013D1E                     l8462:
 15814                           
 15815                           ;stkvar	_aexp @ sp[(-13)+10]
 15816  013D1E  0EFD               	movlw	-3
 15817  013D20  50E3               	movf	plusw1,w,c
 15818  013D22  B4D8               	btfsc	status,2,c
 15819  013D24  D027               	goto	l8472
 15820                           
 15821                           ;stkvar	_aexp @ sp[(-13)+10]
 15822  013D26  0EFD               	movlw	-3
 15823  013D28  28E3               	incf	plusw1,w,c
 15824  013D2A  A4D8               	btfss	status,2,c
 15825  013D2C  D018               	goto	l8468
 15826  013D2E  0E00               	movlw	0
 15827  013D30  6E09               	movwf	(btemp+8)^0,c
 15828  013D32  0E00               	movlw	0
 15829  013D34  6E0A               	movwf	(btemp+9)^0,c
 15830  013D36  0E00               	movlw	0
 15831  013D38  6E0B               	movwf	(btemp+10)^0,c
 15832  013D3A  0E00               	movlw	0
 15833  013D3C  6E0C               	movwf	(btemp+11)^0,c
 15834                           
 15835                           ;stkvar	_a @ sp[(-13)+-8]
 15836  013D3E  0EEB               	movlw	-21
 15837  013D40  0060  F027  FFE3   	movff	btemp+8,plusw1
 15838  013D46  0EEC               	movlw	-20
 15839  013D48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15840  013D4E  0EED               	movlw	-19
 15841  013D50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15842  013D56  0EEE               	movlw	-18
 15843  013D58  0060  F033  FFE3   	movff	btemp+11,plusw1
 15844  013D5E                     l8468:
 15845                           
 15846                           ;stkvar	_a @ sp[(-13)+-8]
 15847  013D5E  0EED               	movlw	-19
 15848  013D60  8EE3               	bsf	plusw1,7,c
 15849                           
 15850                           ;stkvar	_a @ sp[(-13)+-8]
 15851  013D62  0EEE               	movlw	238
 15852  013D64  24E1               	addwf	fsr1l,w,c
 15853  013D66  6ED9               	movwf	fsr2l,c
 15854  013D68  0EFF               	movlw	255
 15855  013D6A  20E2               	addwfc	fsr1h,w,c
 15856  013D6C  6EDA               	movwf	fsr2h,c
 15857  013D6E  0E00               	movlw	0
 15858  013D70  6EDF               	movwf	indf2,c
 15859  013D72  D018               	goto	l8474
 15860  013D74                     l8472:
 15861  013D74  0E00               	movlw	0
 15862  013D76  6E09               	movwf	(btemp+8)^0,c
 15863  013D78  0E00               	movlw	0
 15864  013D7A  6E0A               	movwf	(btemp+9)^0,c
 15865  013D7C  0E00               	movlw	0
 15866  013D7E  6E0B               	movwf	(btemp+10)^0,c
 15867  013D80  0E00               	movlw	0
 15868  013D82  6E0C               	movwf	(btemp+11)^0,c
 15869                           
 15870                           ;stkvar	_a @ sp[(-13)+-8]
 15871  013D84  0EEB               	movlw	-21
 15872  013D86  0060  F027  FFE3   	movff	btemp+8,plusw1
 15873  013D8C  0EEC               	movlw	-20
 15874  013D8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15875  013D94  0EED               	movlw	-19
 15876  013D96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15877  013D9C  0EEE               	movlw	-18
 15878  013D9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15879  013DA4                     l8474:
 15880                           
 15881                           ;stkvar	_a @ sp[(-13)+-8]
 15882  013DA4  0EEB               	movlw	-21
 15883  013DA6  50E3               	movf	plusw1,w,c
 15884  013DA8  E139               	bnz	l8486
 15885  013DAA  0EEC               	movlw	-20
 15886  013DAC  50E3               	movf	plusw1,w,c
 15887  013DAE  E136               	bnz	l8486
 15888  013DB0  0EED               	movlw	-19
 15889  013DB2  50E3               	movf	plusw1,w,c
 15890  013DB4  E133               	bnz	l8486
 15891  013DB6  0EEE               	movlw	-18
 15892  013DB8  50E3               	movf	plusw1,w,c
 15893  013DBA  A4D8               	btfss	status,2,c
 15894  013DBC  D02F               	goto	l8486
 15895                           
 15896                           ;stkvar	_b @ sp[(-13)+-4]
 15897  013DBE  0EEF               	movlw	-17
 15898  013DC0  6AE3               	clrf	plusw1,c
 15899  013DC2  0EF0               	movlw	-16
 15900  013DC4  6AE3               	clrf	plusw1,c
 15901  013DC6  0EF1               	movlw	-15
 15902  013DC8  6AE3               	clrf	plusw1,c
 15903  013DCA  0EF2               	movlw	-14
 15904  013DCC  6AE3               	clrf	plusw1,c
 15905                           
 15906                           ;stkvar	_b @ sp[(-13)+-4]
 15907  013DCE  0EF1               	movlw	241
 15908  013DD0  24E1               	addwf	fsr1l,w,c
 15909  013DD2  6ED9               	movwf	fsr2l,c
 15910  013DD4  0EFF               	movlw	255
 15911  013DD6  20E2               	addwfc	fsr1h,w,c
 15912  013DD8  6EDA               	movwf	fsr2h,c
 15913  013DDA  0E80               	movlw	128
 15914  013DDC  12DE               	iorwf	postinc2,f,c
 15915  013DDE  0E7F               	movlw	127
 15916  013DE0  12DD               	iorwf	postdec2,f,c
 15917  013DE2                     l8480:
 15918                           
 15919                           ;stkvar	_sign @ sp[(-13)+12]
 15920  013DE2  0EFF               	movlw	-1
 15921  013DE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15922                           
 15923                           ;stkvar	_b @ sp[(-13)+-4]
 15924  013DEA  0EF2               	movlw	242
 15925  013DEC  24E1               	addwf	fsr1l,w,c
 15926  013DEE  6ED9               	movwf	fsr2l,c
 15927  013DF0  0EFF               	movlw	255
 15928  013DF2  20E2               	addwfc	fsr1h,w,c
 15929  013DF4  6EDA               	movwf	fsr2h,c
 15930  013DF6  500C               	movf	(btemp+11)^0,w,c
 15931  013DF8  12DF               	iorwf	indf2,f,c
 15932                           
 15933                           ;stkvar	_b @ sp[(-13)+-4]
 15934  013DFA  0EEF               	movlw	-17
 15935  013DFC  006F FF8C  F001    	movff	plusw1,btemp
 15936  013E02  0EF0               	movlw	-16
 15937  013E04  006F FF8C  F002    	movff	plusw1,btemp+1
 15938  013E0A  0EF1               	movlw	-15
 15939  013E0C  006F FF8C  F003    	movff	plusw1,btemp+2
 15940  013E12  0EF2               	movlw	-14
 15941  013E14  006F FF8C  F004    	movff	plusw1,btemp+3
 15942  013E1A  D19F               	goto	l2835
 15943  013E1C                     l8486:
 15944                           
 15945                           ;stkvar	_bexp @ sp[(-13)+11]
 15946  013E1C  0EFE               	movlw	-2
 15947  013E1E  50E3               	movf	plusw1,w,c
 15948  013E20  A4D8               	btfss	status,2,c
 15949  013E22  D009               	goto	l8494
 15950  013E24  0E00               	movlw	0
 15951  013E26  6E01               	movwf	btemp^0,c
 15952  013E28  0E00               	movlw	0
 15953  013E2A  6E02               	movwf	(btemp+1)^0,c
 15954  013E2C  0E00               	movlw	0
 15955  013E2E  6E03               	movwf	(btemp+2)^0,c
 15956  013E30  0E00               	movlw	0
 15957  013E32  6E04               	movwf	(btemp+3)^0,c
 15958  013E34  D192               	goto	l2835
 15959  013E36                     l8494:
 15960                           
 15961                           ;stkvar	_bexp @ sp[(-13)+11]
 15962  013E36  0EFE               	movlw	-2
 15963  013E38  50E3               	movf	plusw1,w,c
 15964  013E3A  6E0B               	movwf	(btemp+10)^0,c
 15965  013E3C  6A0C               	clrf	(btemp+11)^0,c
 15966                           
 15967                           ;stkvar	_aexp @ sp[(-13)+10]
 15968  013E3E  0EFD               	movlw	-3
 15969  013E40  50E3               	movf	plusw1,w,c
 15970  013E42  5E0B               	subwf	(btemp+10)^0,f,c
 15971  013E44  0E00               	movlw	0
 15972  013E46  5A0C               	subwfb	(btemp+11)^0,f,c
 15973  013E48  0E7F               	movlw	127
 15974  013E4A  260B               	addwf	(btemp+10)^0,f,c
 15975  013E4C  0E00               	movlw	0
 15976  013E4E  220C               	addwfc	(btemp+11)^0,f,c
 15977                           
 15978                           ;stkvar	_new_exp @ sp[(-13)+8]
 15979  013E50  0EFB               	movlw	-5
 15980  013E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15981  013E58  0EFC               	movlw	-4
 15982  013E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15983                           
 15984                           ;stkvar	_b @ sp[(-13)+-4]
 15985  013E60  0EEF               	movlw	-17
 15986  013E62  006F FF8C  F009    	movff	plusw1,btemp+8
 15987  013E68  0EF0               	movlw	-16
 15988  013E6A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15989  013E70  0EF1               	movlw	-15
 15990  013E72  006F FF8C  F00B    	movff	plusw1,btemp+10
 15991  013E78  0EF2               	movlw	-14
 15992  013E7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15993                           
 15994                           ;stkvar	_rem @ sp[(-13)+4]
 15995  013E80  0EF7               	movlw	-9
 15996  013E82  0060  F027  FFE3   	movff	btemp+8,plusw1
 15997  013E88  0EF8               	movlw	-8
 15998  013E8A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15999  013E90  0EF9               	movlw	-7
 16000  013E92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16001  013E98  0EFA               	movlw	-6
 16002  013E9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16003                           
 16004                           ;stkvar	_b @ sp[(-13)+-4]
 16005  013EA0  0EEF               	movlw	-17
 16006  013EA2  6AE3               	clrf	plusw1,c
 16007  013EA4  0EF0               	movlw	-16
 16008  013EA6  6AE3               	clrf	plusw1,c
 16009  013EA8  0EF1               	movlw	-15
 16010  013EAA  6AE3               	clrf	plusw1,c
 16011  013EAC  0EF2               	movlw	-14
 16012  013EAE  6AE3               	clrf	plusw1,c
 16013                           
 16014                           ;stkvar	_grs @ sp[(-13)+0]
 16015  013EB0  0EF3               	movlw	-13
 16016  013EB2  6AE3               	clrf	plusw1,c
 16017  013EB4  0EF4               	movlw	-12
 16018  013EB6  6AE3               	clrf	plusw1,c
 16019  013EB8  0EF5               	movlw	-11
 16020  013EBA  6AE3               	clrf	plusw1,c
 16021  013EBC  0EF6               	movlw	-10
 16022  013EBE  6AE3               	clrf	plusw1,c
 16023                           
 16024                           ;stkvar	_aexp @ sp[(-13)+10]
 16025  013EC0  0EFD               	movlw	-3
 16026  013EC2  6AE3               	clrf	plusw1,c
 16027  013EC4  D050               	goto	l8522
 16028  013EC6                     l8504:
 16029                           
 16030                           ;stkvar	_aexp @ sp[(-13)+10]
 16031  013EC6  0EFD               	movlw	-3
 16032  013EC8  50E3               	movf	plusw1,w,c
 16033  013ECA  B4D8               	btfsc	status,2,c
 16034  013ECC  D020               	goto	l8514
 16035                           
 16036                           ;stkvar	_rem @ sp[(-13)+4]
 16037  013ECE  90D8               	bcf	status,0,c
 16038  013ED0  0EF7               	movlw	-9
 16039  013ED2  36E3               	rlcf	plusw1,f,c
 16040  013ED4  0EF8               	movlw	-8
 16041  013ED6  36E3               	rlcf	plusw1,f,c
 16042  013ED8  0EF9               	movlw	-7
 16043  013EDA  36E3               	rlcf	plusw1,f,c
 16044  013EDC  0EFA               	movlw	-6
 16045  013EDE  36E3               	rlcf	plusw1,f,c
 16046                           
 16047                           ;stkvar	_b @ sp[(-13)+-4]
 16048  013EE0  90D8               	bcf	status,0,c
 16049  013EE2  0EEF               	movlw	-17
 16050  013EE4  36E3               	rlcf	plusw1,f,c
 16051  013EE6  0EF0               	movlw	-16
 16052  013EE8  36E3               	rlcf	plusw1,f,c
 16053  013EEA  0EF1               	movlw	-15
 16054  013EEC  36E3               	rlcf	plusw1,f,c
 16055  013EEE  0EF2               	movlw	-14
 16056  013EF0  36E3               	rlcf	plusw1,f,c
 16057                           
 16058                           ;stkvar	_grs @ sp[(-13)+0]
 16059  013EF2  0EF6               	movlw	-10
 16060  013EF4  AEE3               	btfss	plusw1,7,c
 16061  013EF6  D002               	goto	l8512
 16062                           
 16063                           ;stkvar	_b @ sp[(-13)+-4]
 16064  013EF8  0EEF               	movlw	-17
 16065  013EFA  80E3               	bsf	plusw1,0,c
 16066  013EFC                     l8512:
 16067                           
 16068                           ;stkvar	_grs @ sp[(-13)+0]
 16069  013EFC  90D8               	bcf	status,0,c
 16070  013EFE  0EF3               	movlw	-13
 16071  013F00  36E3               	rlcf	plusw1,f,c
 16072  013F02  0EF4               	movlw	-12
 16073  013F04  36E3               	rlcf	plusw1,f,c
 16074  013F06  0EF5               	movlw	-11
 16075  013F08  36E3               	rlcf	plusw1,f,c
 16076  013F0A  0EF6               	movlw	-10
 16077  013F0C  36E3               	rlcf	plusw1,f,c
 16078  013F0E                     l8514:
 16079                           
 16080                           ;stkvar	_a @ sp[(-13)+-8]
 16081                           ;stkvar	_rem @ sp[(-13)+4]
 16082  013F0E  50E1               	movf	fsr1l,w,c
 16083  013F10  0FF7               	addlw	-9
 16084  013F12  6ED9               	movwf	fsr2l,c
 16085  013F14  50E2               	movf	fsr1h,w,c
 16086  013F16  6EDA               	movwf	fsr2h,c
 16087  013F18  0EFF               	movlw	255
 16088  013F1A  22DA               	addwfc	fsr2h,f,c
 16089  013F1C  0EEB               	movlw	-21
 16090  013F1E  50E3               	movf	plusw1,w,c
 16091  013F20  5CDE               	subwf	postinc2,w,c
 16092  013F22  0EEC               	movlw	-20
 16093  013F24  50E3               	movf	plusw1,w,c
 16094  013F26  58DE               	subwfb	postinc2,w,c
 16095  013F28  0EED               	movlw	-19
 16096  013F2A  50E3               	movf	plusw1,w,c
 16097  013F2C  58DE               	subwfb	postinc2,w,c
 16098  013F2E  0EEE               	movlw	-18
 16099  013F30  50E3               	movf	plusw1,w,c
 16100  013F32  58DE               	subwfb	postinc2,w,c
 16101  013F34  A0D8               	btfss	status,0,c
 16102  013F36  D015               	goto	l8520
 16103                           
 16104                           ;stkvar	_grs @ sp[(-13)+0]
 16105  013F38  0EF6               	movlw	-10
 16106  013F3A  8CE3               	bsf	plusw1,6,c
 16107                           
 16108                           ;stkvar	_a @ sp[(-13)+-8]
 16109                           ;stkvar	_rem @ sp[(-13)+4]
 16110  013F3C  50E1               	movf	fsr1l,w,c
 16111  013F3E  0FF7               	addlw	-9
 16112  013F40  6ED9               	movwf	fsr2l,c
 16113  013F42  50E2               	movf	fsr1h,w,c
 16114  013F44  6EDA               	movwf	fsr2h,c
 16115  013F46  0EFF               	movlw	255
 16116  013F48  22DA               	addwfc	fsr2h,f,c
 16117  013F4A  0EEB               	movlw	-21
 16118  013F4C  50E3               	movf	plusw1,w,c
 16119  013F4E  5EDE               	subwf	postinc2,f,c
 16120  013F50  0EEC               	movlw	-20
 16121  013F52  50E3               	movf	plusw1,w,c
 16122  013F54  5ADE               	subwfb	postinc2,f,c
 16123  013F56  0EED               	movlw	-19
 16124  013F58  50E3               	movf	plusw1,w,c
 16125  013F5A  5ADE               	subwfb	postinc2,f,c
 16126  013F5C  0EEE               	movlw	-18
 16127  013F5E  50E3               	movf	plusw1,w,c
 16128  013F60  5ADE               	subwfb	postinc2,f,c
 16129  013F62                     l8520:
 16130                           
 16131                           ;stkvar	_aexp @ sp[(-13)+10]
 16132  013F62  0EFD               	movlw	-3
 16133  013F64  2AE3               	incf	plusw1,f,c
 16134  013F66                     l8522:
 16135                           
 16136                           ;stkvar	_aexp @ sp[(-13)+10]
 16137  013F66  0EFD               	movlw	-3
 16138  013F68  006F FF8C  F001    	movff	plusw1,btemp
 16139  013F6E  0E19               	movlw	25
 16140  013F70  6401               	cpfsgt	btemp^0,c
 16141  013F72  D7A9               	goto	l8504
 16142                           
 16143                           ;stkvar	_rem @ sp[(-13)+4]
 16144  013F74  0EF7               	movlw	-9
 16145  013F76  50E3               	movf	plusw1,w,c
 16146  013F78  E10A               	bnz	u7630
 16147  013F7A  0EF8               	movlw	-8
 16148  013F7C  50E3               	movf	plusw1,w,c
 16149  013F7E  E107               	bnz	u7630
 16150  013F80  0EF9               	movlw	-7
 16151  013F82  50E3               	movf	plusw1,w,c
 16152  013F84  E104               	bnz	u7630
 16153  013F86  0EFA               	movlw	-6
 16154  013F88  50E3               	movf	plusw1,w,c
 16155  013F8A  B4D8               	btfsc	status,2,c
 16156  013F8C  D024               	goto	l8538
 16157  013F8E                     u7630:
 16158                           
 16159                           ;stkvar	_grs @ sp[(-13)+0]
 16160  013F8E  0EF3               	movlw	-13
 16161  013F90  80E3               	bsf	plusw1,0,c
 16162  013F92  D021               	goto	l8538
 16163  013F94                     l8528:
 16164                           
 16165                           ;stkvar	_b @ sp[(-13)+-4]
 16166  013F94  90D8               	bcf	status,0,c
 16167  013F96  0EEF               	movlw	-17
 16168  013F98  36E3               	rlcf	plusw1,f,c
 16169  013F9A  0EF0               	movlw	-16
 16170  013F9C  36E3               	rlcf	plusw1,f,c
 16171  013F9E  0EF1               	movlw	-15
 16172  013FA0  36E3               	rlcf	plusw1,f,c
 16173  013FA2  0EF2               	movlw	-14
 16174  013FA4  36E3               	rlcf	plusw1,f,c
 16175                           
 16176                           ;stkvar	_grs @ sp[(-13)+0]
 16177  013FA6  0EF6               	movlw	-10
 16178  013FA8  AEE3               	btfss	plusw1,7,c
 16179  013FAA  D002               	goto	l8534
 16180                           
 16181                           ;stkvar	_b @ sp[(-13)+-4]
 16182  013FAC  0EEF               	movlw	-17
 16183  013FAE  80E3               	bsf	plusw1,0,c
 16184  013FB0                     l8534:
 16185                           
 16186                           ;stkvar	_grs @ sp[(-13)+0]
 16187  013FB0  90D8               	bcf	status,0,c
 16188  013FB2  0EF3               	movlw	-13
 16189  013FB4  36E3               	rlcf	plusw1,f,c
 16190  013FB6  0EF4               	movlw	-12
 16191  013FB8  36E3               	rlcf	plusw1,f,c
 16192  013FBA  0EF5               	movlw	-11
 16193  013FBC  36E3               	rlcf	plusw1,f,c
 16194  013FBE  0EF6               	movlw	-10
 16195  013FC0  36E3               	rlcf	plusw1,f,c
 16196                           
 16197                           ;stkvar	_new_exp @ sp[(-13)+8]
 16198  013FC2  50E1               	movf	fsr1l,w,c
 16199  013FC4  0FFB               	addlw	-5
 16200  013FC6  6ED9               	movwf	fsr2l,c
 16201  013FC8  50E2               	movf	fsr1h,w,c
 16202  013FCA  6EDA               	movwf	fsr2h,c
 16203  013FCC  0EFF               	movlw	255
 16204  013FCE  22DA               	addwfc	fsr2h,f,c
 16205  013FD0  06DE               	decf	postinc2,f,c
 16206  013FD2  0E00               	movlw	0
 16207  013FD4  5ADD               	subwfb	postdec2,f,c
 16208  013FD6                     l8538:
 16209                           
 16210                           ;stkvar	_b @ sp[(-13)+-4]
 16211  013FD6  0EF1               	movlw	-15
 16212  013FD8  AEE3               	btfss	plusw1,7,c
 16213  013FDA  D7DC               	goto	l8528
 16214                           
 16215                           ;stkvar	_aexp @ sp[(-13)+10]
 16216  013FDC  0EFD               	movlw	-3
 16217  013FDE  6AE3               	clrf	plusw1,c
 16218                           
 16219                           ;stkvar	_grs @ sp[(-13)+0]
 16220  013FE0  0EF6               	movlw	-10
 16221  013FE2  AEE3               	btfss	plusw1,7,c
 16222  013FE4  D020               	goto	l8552
 16223                           
 16224                           ;stkvar	_grs @ sp[(-13)+0]
 16225  013FE6  50E1               	movf	fsr1l,w,c
 16226  013FE8  0FF3               	addlw	-13
 16227  013FEA  6ED9               	movwf	fsr2l,c
 16228  013FEC  50E2               	movf	fsr1h,w,c
 16229  013FEE  6EDA               	movwf	fsr2h,c
 16230  013FF0  0EFF               	movlw	255
 16231  013FF2  22DA               	addwfc	fsr2h,f,c
 16232  013FF4  0EFF               	movlw	255
 16233  013FF6  14DE               	andwf	postinc2,w,c
 16234  013FF8  6E09               	movwf	(btemp+8)^0,c
 16235  013FFA  0EFF               	movlw	255
 16236  013FFC  14DE               	andwf	postinc2,w,c
 16237  013FFE  6E0A               	movwf	(btemp+9)^0,c
 16238  014000  0EFF               	movlw	255
 16239  014002  14DE               	andwf	postinc2,w,c
 16240  014004  6E0B               	movwf	(btemp+10)^0,c
 16241  014006  0E7F               	movlw	127
 16242  014008  14DE               	andwf	postinc2,w,c
 16243  01400A  6E0C               	movwf	(btemp+11)^0,c
 16244  01400C  5009               	movf	(btemp+8)^0,w,c
 16245  01400E  100A               	iorwf	(btemp+9)^0,w,c
 16246  014010  100B               	iorwf	(btemp+10)^0,w,c
 16247  014012  100C               	iorwf	(btemp+11)^0,w,c
 16248  014014  B4D8               	btfsc	status,2,c
 16249  014016  D004               	goto	l8548
 16250  014018                     u7670:
 16251                           
 16252                           ;stkvar	_aexp @ sp[(-13)+10]
 16253  014018  0EFD               	movlw	-3
 16254  01401A  6AE3               	clrf	plusw1,c
 16255  01401C  2AE3               	incf	plusw1,f,c
 16256  01401E  D003               	goto	l8552
 16257  014020                     l8548:
 16258                           
 16259                           ;stkvar	_b @ sp[(-13)+-4]
 16260  014020  0EEF               	movlw	-17
 16261  014022  B0E3               	btfsc	plusw1,0,c
 16262  014024  D7F9               	goto	u7670
 16263  014026                     l8552:
 16264                           
 16265                           ;stkvar	_aexp @ sp[(-13)+10]
 16266  014026  0EFD               	movlw	-3
 16267  014028  50E3               	movf	plusw1,w,c
 16268  01402A  B4D8               	btfsc	status,2,c
 16269  01402C  D036               	goto	l8562
 16270                           
 16271                           ;stkvar	_b @ sp[(-13)+-4]
 16272  01402E  50E1               	movf	fsr1l,w,c
 16273  014030  0FEF               	addlw	-17
 16274  014032  6ED9               	movwf	fsr2l,c
 16275  014034  50E2               	movf	fsr1h,w,c
 16276  014036  6EDA               	movwf	fsr2h,c
 16277  014038  0EFF               	movlw	255
 16278  01403A  22DA               	addwfc	fsr2h,f,c
 16279  01403C  2ADE               	incf	postinc2,f,c
 16280  01403E  0E00               	movlw	0
 16281  014040  22DE               	addwfc	postinc2,f,c
 16282  014042  22DE               	addwfc	postinc2,f,c
 16283  014044  22DE               	addwfc	postinc2,f,c
 16284                           
 16285                           ;stkvar	_b @ sp[(-13)+-4]
 16286  014046  0EF2               	movlw	-14
 16287  014048  A0E3               	btfss	plusw1,0,c
 16288  01404A  D027               	goto	l8562
 16289  01404C  0E01               	movlw	1
 16290  01404E  6E0C               	movwf	(btemp+11)^0,c
 16291                           
 16292                           ;stkvar	_b @ sp[(-13)+-4]
 16293  014050  50E1               	movf	fsr1l,w,c
 16294  014052  0FEF               	addlw	-17
 16295  014054  6ED9               	movwf	fsr2l,c
 16296  014056  50E2               	movf	fsr1h,w,c
 16297  014058  6EDA               	movwf	fsr2h,c
 16298  01405A  0EFF               	movlw	255
 16299  01405C  22DA               	addwfc	fsr2h,f,c
 16300  01405E  280C               	incf	(btemp+11)^0,w,c
 16301  014060  52DE               	movf	postinc2,f,c
 16302  014062  D008               	goto	u7710
 16303  014064                     u7715:
 16304  014064  52DE               	movf	postinc2,f,c
 16305  014066  90D8               	bcf	status,0,c
 16306  014068  BEDC               	btfsc	preinc2,7,c
 16307  01406A  80D8               	bsf	status,0,c
 16308  01406C  32DD               	rrcf	postdec2,f,c
 16309  01406E  32DD               	rrcf	postdec2,f,c
 16310  014070  32DD               	rrcf	postdec2,f,c
 16311  014072  32DE               	rrcf	postinc2,f,c
 16312  014074                     u7710:
 16313  014074  2EE8               	decfsz	wreg,f,c
 16314  014076  D7F6               	goto	u7715
 16315                           
 16316                           ;stkvar	_new_exp @ sp[(-13)+8]
 16317  014078  0EFB               	movlw	-5
 16318  01407A  50E3               	movf	plusw1,w,c
 16319  01407C  0F01               	addlw	1
 16320  01407E  6E01               	movwf	btemp^0,c
 16321  014080  0EFB               	movlw	-5
 16322  014082  0060  F007  FFE3   	movff	btemp,plusw1
 16323  014088  6A01               	clrf	btemp^0,c
 16324  01408A  0EFC               	movlw	-4
 16325  01408C  50E3               	movf	plusw1,w,c
 16326  01408E  2001               	addwfc	btemp^0,w,c
 16327  014090  6E01               	movwf	btemp^0,c
 16328  014092  0EFC               	movlw	-4
 16329  014094  0060  F007  FFE3   	movff	btemp,plusw1
 16330  01409A                     l8562:
 16331                           
 16332                           ;stkvar	_new_exp @ sp[(-13)+8]
 16333  01409A  0EFC               	movlw	-4
 16334  01409C  BEE3               	btfsc	plusw1,7,c
 16335  01409E  D01B               	goto	l8568
 16336  0140A0  0EFC               	movlw	-4
 16337  0140A2  50E3               	movf	plusw1,w,c
 16338  0140A4  E104               	bnz	u7720
 16339  0140A6  0EFB               	movlw	-5
 16340  0140A8  28E3               	incf	plusw1,w,c
 16341  0140AA  A0D8               	btfss	status,0,c
 16342  0140AC  D014               	goto	l8568
 16343  0140AE                     u7720:
 16344  0140AE  0EFF               	movlw	255
 16345  0140B0  6E0B               	movwf	(btemp+10)^0,c
 16346  0140B2  0E00               	movlw	0
 16347  0140B4  6E0C               	movwf	(btemp+11)^0,c
 16348                           
 16349                           ;stkvar	_new_exp @ sp[(-13)+8]
 16350  0140B6  0EFB               	movlw	-5
 16351  0140B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16352  0140BE  0EFC               	movlw	-4
 16353  0140C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16354                           
 16355                           ;stkvar	_b @ sp[(-13)+-4]
 16356  0140C6  0EEF               	movlw	-17
 16357  0140C8  6AE3               	clrf	plusw1,c
 16358  0140CA  0EF0               	movlw	-16
 16359  0140CC  6AE3               	clrf	plusw1,c
 16360  0140CE  0EF1               	movlw	-15
 16361  0140D0  6AE3               	clrf	plusw1,c
 16362  0140D2  0EF2               	movlw	-14
 16363  0140D4  6AE3               	clrf	plusw1,c
 16364  0140D6                     l8568:
 16365                           
 16366                           ;stkvar	_new_exp @ sp[(-13)+8]
 16367  0140D6  0EFC               	movlw	-4
 16368  0140D8  BEE3               	btfsc	plusw1,7,c
 16369  0140DA  D007               	goto	u7730
 16370  0140DC  0EFC               	movlw	-4
 16371  0140DE  50E3               	movf	plusw1,w,c
 16372  0140E0  E112               	bnz	l8574
 16373  0140E2  0EFB               	movlw	-5
 16374  0140E4  04E3               	decf	plusw1,w,c
 16375  0140E6  B0D8               	btfsc	status,0,c
 16376  0140E8  D00E               	goto	l8574
 16377  0140EA                     u7730:
 16378                           
 16379                           ;stkvar	_new_exp @ sp[(-13)+8]
 16380  0140EA  0EFB               	movlw	-5
 16381  0140EC  6AE3               	clrf	plusw1,c
 16382  0140EE  0EFC               	movlw	-4
 16383  0140F0  6AE3               	clrf	plusw1,c
 16384                           
 16385                           ;stkvar	_b @ sp[(-13)+-4]
 16386  0140F2  0EEF               	movlw	-17
 16387  0140F4  6AE3               	clrf	plusw1,c
 16388  0140F6  0EF0               	movlw	-16
 16389  0140F8  6AE3               	clrf	plusw1,c
 16390  0140FA  0EF1               	movlw	-15
 16391  0140FC  6AE3               	clrf	plusw1,c
 16392  0140FE  0EF2               	movlw	-14
 16393  014100  6AE3               	clrf	plusw1,c
 16394                           
 16395                           ;stkvar	_sign @ sp[(-13)+12]
 16396  014102  0EFF               	movlw	-1
 16397  014104  6AE3               	clrf	plusw1,c
 16398  014106                     l8574:
 16399                           
 16400                           ;stkvar	_new_exp @ sp[(-13)+8]
 16401                           ;stkvar	_bexp @ sp[(-13)+11]
 16402  014106  0EFB               	movlw	-5
 16403  014108  006F FF8C  F001    	movff	plusw1,btemp
 16404  01410E  0EFE               	movlw	-2
 16405  014110  0060  F007  FFE3   	movff	btemp,plusw1
 16406                           
 16407                           ;stkvar	_bexp @ sp[(-13)+11]
 16408  014116  0EFE               	movlw	-2
 16409  014118  A0E3               	btfss	plusw1,0,c
 16410  01411A  D009               	goto	l8580
 16411                           
 16412                           ;stkvar	_b @ sp[(-13)+-4]
 16413  01411C  0EF1               	movlw	241
 16414  01411E  24E1               	addwf	fsr1l,w,c
 16415  014120  6ED9               	movwf	fsr2l,c
 16416  014122  0EFF               	movlw	255
 16417  014124  20E2               	addwfc	fsr1h,w,c
 16418  014126  6EDA               	movwf	fsr2h,c
 16419  014128  0E00               	movlw	0
 16420  01412A  8EDB               	bsf	plusw2,7,c
 16421  01412C  D008               	goto	l8582
 16422  01412E                     l8580:
 16423                           
 16424                           ;stkvar	_b @ sp[(-13)+-4]
 16425  01412E  0EF1               	movlw	241
 16426  014130  24E1               	addwf	fsr1l,w,c
 16427  014132  6ED9               	movwf	fsr2l,c
 16428  014134  0EFF               	movlw	255
 16429  014136  20E2               	addwfc	fsr1h,w,c
 16430  014138  6EDA               	movwf	fsr2h,c
 16431  01413A  0E7F               	movlw	127
 16432  01413C  16DF               	andwf	indf2,f,c
 16433  01413E                     l8582:
 16434                           
 16435                           ;stkvar	_b @ sp[(-13)+-4]
 16436  01413E  0EF2               	movlw	242
 16437  014140  24E1               	addwf	fsr1l,w,c
 16438  014142  6ED9               	movwf	fsr2l,c
 16439  014144  0EFF               	movlw	255
 16440  014146  20E2               	addwfc	fsr1h,w,c
 16441  014148  6EDA               	movwf	fsr2h,c
 16442                           
 16443                           ;stkvar	_bexp @ sp[(-13)+11]
 16444  01414A  0EFE               	movlw	-2
 16445  01414C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16446  014152  90D8               	bcf	status,0,c
 16447  014154  300C               	rrcf	(btemp+11)^0,w,c
 16448  014156  6EDF               	movwf	indf2,c
 16449  014158  D644               	goto	l8480
 16450  01415A                     l2835:
 16451                           
 16452                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16453  01415A  0EEB               	movlw	235
 16454  01415C  26E1               	addwf	fsr1l,f,c
 16455  01415E  0EFF               	movlw	255
 16456  014160  22E2               	addwfc	fsr1h,f,c
 16457  014162  0012               	return		;funcret
 16458  014164                     __end_of___fldiv:
 16459                           	opt callstack 0
 16460                           
 16461 ;; *************** function ___awmod *****************
 16462 ;; Defined at:
 16463 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;  dividend        2  [STACK] int 
 16466 ;;  divisor         2  [STACK] int 
 16467 ;; Auto vars:     Size  Location     Type
 16468 ;;  sign            1  [STACK] unsigned char 
 16469 ;;  counter         1  [STACK] unsigned char 
 16470 ;; Return value:  Size  Location     Type
 16471 ;;                  2  [STACK] int 
 16472 ;; Registers used:
 16473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16474 ;; Tracked objects:
 16475 ;;		On entry : 0/0
 16476 ;;		On exit  : 0/0
 16477 ;;		Unchanged: 0/0
 16478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16483 ;;Total ram usage:        0 bytes
 16484 ;; Hardware stack levels used:    1
 16485 ;; Hardware stack levels required when called:    7
 16486 ;; This function calls:
 16487 ;;		Nothing
 16488 ;; This function is called by:
 16489 ;;		_efgtoa
 16490 ;; This function uses a reentrant model
 16491 ;;
 16492                           
 16493                           	psect	text60
 16494  0173AE                     __ptext60:
 16495                           	opt callstack 0
 16496  0173AE                     ___awmod:
 16497                           	opt callstack 0
 16498                           
 16499                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16500  0173AE  52E6               	movf	postinc1,f,c
 16501  0173B0  52E6               	movf	postinc1,f,c
 16502                           
 16503                           ;stkvar	_sign @ sp[(-2)+0]
 16504                           
 16505                           ;incstack = 0
 16506  0173B2  0EFE               	movlw	-2
 16507  0173B4  6AE3               	clrf	plusw1,c
 16508                           
 16509                           ;stkvar	_dividend @ sp[(-2)+-2]
 16510  0173B6  0EFD               	movlw	-3
 16511  0173B8  AEE3               	btfss	plusw1,7,c
 16512  0173BA  D009               	goto	l7182
 16513                           
 16514                           ;stkvar	_dividend @ sp[(-2)+-2]
 16515                           ;stkvar	_dividend @ sp[(-2)+-2]
 16516  0173BC  0EFC               	movlw	-4
 16517  0173BE  6CE3               	negf	plusw1,c
 16518  0173C0  0EFD               	movlw	-3
 16519  0173C2  1EE3               	comf	plusw1,f,c
 16520  0173C4  B0D8               	btfsc	status,0,c
 16521  0173C6  2AE3               	incf	plusw1,f,c
 16522                           
 16523                           ;stkvar	_sign @ sp[(-2)+0]
 16524  0173C8  0EFE               	movlw	-2
 16525  0173CA  6AE3               	clrf	plusw1,c
 16526  0173CC  2AE3               	incf	plusw1,f,c
 16527  0173CE                     l7182:
 16528                           
 16529                           ;stkvar	_divisor @ sp[(-2)+-4]
 16530  0173CE  0EFB               	movlw	-5
 16531  0173D0  AEE3               	btfss	plusw1,7,c
 16532  0173D2  D006               	goto	l7186
 16533                           
 16534                           ;stkvar	_divisor @ sp[(-2)+-4]
 16535                           ;stkvar	_divisor @ sp[(-2)+-4]
 16536  0173D4  0EFA               	movlw	-6
 16537  0173D6  6CE3               	negf	plusw1,c
 16538  0173D8  0EFB               	movlw	-5
 16539  0173DA  1EE3               	comf	plusw1,f,c
 16540  0173DC  B0D8               	btfsc	status,0,c
 16541  0173DE  2AE3               	incf	plusw1,f,c
 16542  0173E0                     l7186:
 16543                           
 16544                           ;stkvar	_divisor @ sp[(-2)+-4]
 16545  0173E0  0EFA               	movlw	-6
 16546  0173E2  006F FF8C  F001    	movff	plusw1,btemp
 16547  0173E8  0EFB               	movlw	-5
 16548  0173EA  50E3               	movf	plusw1,w,c
 16549  0173EC  1001               	iorwf	btemp^0,w,c
 16550  0173EE  B4D8               	btfsc	status,2,c
 16551  0173F0  D053               	goto	u5500
 16552                           
 16553                           ;stkvar	_counter @ sp[(-2)+1]
 16554  0173F2  0EFF               	movlw	-1
 16555  0173F4  6AE3               	clrf	plusw1,c
 16556  0173F6  D012               	goto	L15
 16557  0173F8                     l7190:
 16558                           
 16559                           ;stkvar	_divisor @ sp[(-2)+-4]
 16560  0173F8  0EFA               	movlw	-6
 16561  0173FA  50E3               	movf	plusw1,w,c
 16562  0173FC  90D8               	bcf	status,0,c
 16563  0173FE  34E8               	rlcf	wreg,w,c
 16564  017400  6E01               	movwf	btemp^0,c
 16565  017402  0EFA               	movlw	-6
 16566  017404  0060  F007  FFE3   	movff	btemp,plusw1
 16567  01740A  0EFB               	movlw	-5
 16568  01740C  50E3               	movf	plusw1,w,c
 16569  01740E  34E8               	rlcf	wreg,w,c
 16570  017410  6E01               	movwf	btemp^0,c
 16571  017412  0EFB               	movlw	-5
 16572  017414  0060  F007  FFE3   	movff	btemp,plusw1
 16573                           
 16574                           ;stkvar	_counter @ sp[(-2)+1]
 16575  01741A  0EFF               	movlw	-1
 16576  01741C                     L15:
 16577  01741C  2AE3               	incf	plusw1,f,c
 16578                           
 16579                           ;stkvar	_divisor @ sp[(-2)+-4]
 16580  01741E  0EFB               	movlw	-5
 16581  017420  AEE3               	btfss	plusw1,7,c
 16582  017422  D7EA               	goto	l7190
 16583  017424                     u5480:
 16584                           
 16585                           ;stkvar	_divisor @ sp[(-2)+-4]
 16586  017424  0EFA               	movlw	-6
 16587  017426  006F FF8C  F00B    	movff	plusw1,btemp+10
 16588  01742C  0EFB               	movlw	-5
 16589  01742E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16590                           
 16591                           ;stkvar	_dividend @ sp[(-2)+-2]
 16592  017434  0EFC               	movlw	-4
 16593  017436  006F FF8C  F009    	movff	plusw1,btemp+8
 16594  01743C  0EFD               	movlw	-3
 16595  01743E  006F FF8C  F00A    	movff	plusw1,btemp+9
 16596  017444  500B               	movf	(btemp+10)^0,w,c
 16597  017446  5C09               	subwf	(btemp+8)^0,w,c
 16598  017448  500C               	movf	(btemp+11)^0,w,c
 16599  01744A  580A               	subwfb	(btemp+9)^0,w,c
 16600  01744C  A0D8               	btfss	status,0,c
 16601  01744E  D014               	goto	l7200
 16602                           
 16603                           ;stkvar	_divisor @ sp[(-2)+-4]
 16604                           ;stkvar	_dividend @ sp[(-2)+-2]
 16605  017450  0EFC               	movlw	-4
 16606  017452  50E3               	movf	plusw1,w,c
 16607  017454  6E01               	movwf	btemp^0,c
 16608  017456  0EFA               	movlw	-6
 16609  017458  50E3               	movf	plusw1,w,c
 16610  01745A  5E01               	subwf	btemp^0,f,c
 16611  01745C  0EFC               	movlw	-4
 16612  01745E  0060  F007  FFE3   	movff	btemp,plusw1
 16613  017464  0EFD               	movlw	-3
 16614  017466  50E3               	movf	plusw1,w,c
 16615  017468  6E01               	movwf	btemp^0,c
 16616  01746A  0EFB               	movlw	-5
 16617  01746C  50E3               	movf	plusw1,w,c
 16618  01746E  5A01               	subwfb	btemp^0,f,c
 16619  017470  0EFD               	movlw	-3
 16620  017472  0060  F007  FFE3   	movff	btemp,plusw1
 16621  017478                     l7200:
 16622                           
 16623                           ;stkvar	_divisor @ sp[(-2)+-4]
 16624  017478  90D8               	bcf	status,0,c
 16625  01747A  0EFB               	movlw	-5
 16626  01747C  32E3               	rrcf	plusw1,f,c
 16627  01747E  0EFA               	movlw	-6
 16628  017480  32E3               	rrcf	plusw1,f,c
 16629                           
 16630                           ;stkvar	_counter @ sp[(-2)+1]
 16631  017482  0EFF               	movlw	-1
 16632  017484  50E3               	movf	plusw1,w,c
 16633  017486  6E01               	movwf	btemp^0,c
 16634  017488  0E01               	movlw	1
 16635  01748A  5E01               	subwf	btemp^0,f,c
 16636  01748C  0EFF               	movlw	-1
 16637  01748E  0060  F007  FFE3   	movff	btemp,plusw1
 16638  017494  A4D8               	btfss	status,2,c
 16639  017496  D7C6               	goto	u5480
 16640  017498                     u5500:
 16641                           
 16642                           ;stkvar	_sign @ sp[(-2)+0]
 16643  017498  0EFE               	movlw	-2
 16644  01749A  50E3               	movf	plusw1,w,c
 16645  01749C  B4D8               	btfsc	status,2,c
 16646  01749E  D006               	goto	l7208
 16647                           
 16648                           ;stkvar	_dividend @ sp[(-2)+-2]
 16649                           ;stkvar	_dividend @ sp[(-2)+-2]
 16650  0174A0  0EFC               	movlw	-4
 16651  0174A2  6CE3               	negf	plusw1,c
 16652  0174A4  0EFD               	movlw	-3
 16653  0174A6  1EE3               	comf	plusw1,f,c
 16654  0174A8  B0D8               	btfsc	status,0,c
 16655  0174AA  2AE3               	incf	plusw1,f,c
 16656  0174AC                     l7208:
 16657                           
 16658                           ;stkvar	_dividend @ sp[(-2)+-2]
 16659  0174AC  0EFC               	movlw	-4
 16660  0174AE  006F FF8C  F001    	movff	plusw1,btemp
 16661  0174B4  0EFD               	movlw	-3
 16662  0174B6  006F FF8C  F002    	movff	plusw1,btemp+1
 16663                           
 16664                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16665  0174BC  0EFA               	movlw	250
 16666  0174BE  26E1               	addwf	fsr1l,f,c
 16667  0174C0  0EFF               	movlw	255
 16668  0174C2  22E2               	addwfc	fsr1h,f,c
 16669  0174C4  0012               	return		;funcret
 16670  0174C6                     __end_of___awmod:
 16671                           	opt callstack 0
 16672                           
 16673 ;; *************** function ___awdiv *****************
 16674 ;; Defined at:
 16675 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16676 ;; Parameters:    Size  Location     Type
 16677 ;;  dividend        2  [STACK] int 
 16678 ;;  divisor         2  [STACK] int 
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;  quotient        2  [STACK] int 
 16681 ;;  sign            1  [STACK] unsigned char 
 16682 ;;  counter         1  [STACK] unsigned char 
 16683 ;; Return value:  Size  Location     Type
 16684 ;;                  2  [STACK] int 
 16685 ;; Registers used:
 16686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16687 ;; Tracked objects:
 16688 ;;		On entry : 0/0
 16689 ;;		On exit  : 0/0
 16690 ;;		Unchanged: 0/0
 16691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16696 ;;Total ram usage:        0 bytes
 16697 ;; Hardware stack levels used:    1
 16698 ;; Hardware stack levels required when called:    7
 16699 ;; This function calls:
 16700 ;;		Nothing
 16701 ;; This function is called by:
 16702 ;;		_efgtoa
 16703 ;; This function uses a reentrant model
 16704 ;;
 16705                           
 16706                           	psect	text61
 16707  016EE6                     __ptext61:
 16708                           	opt callstack 0
 16709  016EE6                     ___awdiv:
 16710                           	opt callstack 0
 16711                           
 16712                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16713  016EE6  52E6               	movf	postinc1,f,c
 16714  016EE8  52E6               	movf	postinc1,f,c
 16715  016EEA  52E6               	movf	postinc1,f,c
 16716  016EEC  52E6               	movf	postinc1,f,c
 16717                           
 16718                           ;stkvar	_sign @ sp[(-4)+2]
 16719                           
 16720                           ;incstack = 0
 16721  016EEE  0EFE               	movlw	-2
 16722  016EF0  6AE3               	clrf	plusw1,c
 16723                           
 16724                           ;stkvar	_divisor @ sp[(-4)+-4]
 16725  016EF2  0EF9               	movlw	-7
 16726  016EF4  AEE3               	btfss	plusw1,7,c
 16727  016EF6  D009               	goto	l7136
 16728                           
 16729                           ;stkvar	_divisor @ sp[(-4)+-4]
 16730                           ;stkvar	_divisor @ sp[(-4)+-4]
 16731  016EF8  0EF8               	movlw	-8
 16732  016EFA  6CE3               	negf	plusw1,c
 16733  016EFC  0EF9               	movlw	-7
 16734  016EFE  1EE3               	comf	plusw1,f,c
 16735  016F00  B0D8               	btfsc	status,0,c
 16736  016F02  2AE3               	incf	plusw1,f,c
 16737                           
 16738                           ;stkvar	_sign @ sp[(-4)+2]
 16739  016F04  0EFE               	movlw	-2
 16740  016F06  6AE3               	clrf	plusw1,c
 16741  016F08  2AE3               	incf	plusw1,f,c
 16742  016F0A                     l7136:
 16743                           
 16744                           ;stkvar	_dividend @ sp[(-4)+-2]
 16745  016F0A  0EFB               	movlw	-5
 16746  016F0C  AEE3               	btfss	plusw1,7,c
 16747  016F0E  D008               	goto	l7142
 16748                           
 16749                           ;stkvar	_dividend @ sp[(-4)+-2]
 16750                           ;stkvar	_dividend @ sp[(-4)+-2]
 16751  016F10  0EFA               	movlw	-6
 16752  016F12  6CE3               	negf	plusw1,c
 16753  016F14  0EFB               	movlw	-5
 16754  016F16  1EE3               	comf	plusw1,f,c
 16755  016F18  B0D8               	btfsc	status,0,c
 16756  016F1A  2AE3               	incf	plusw1,f,c
 16757                           
 16758                           ;stkvar	_sign @ sp[(-4)+2]
 16759  016F1C  0EFE               	movlw	-2
 16760  016F1E  70E3               	btg	plusw1,0,c
 16761  016F20                     l7142:
 16762                           
 16763                           ;stkvar	_quotient @ sp[(-4)+0]
 16764  016F20  0EFC               	movlw	-4
 16765  016F22  6AE3               	clrf	plusw1,c
 16766  016F24  0EFD               	movlw	-3
 16767  016F26  6AE3               	clrf	plusw1,c
 16768                           
 16769                           ;stkvar	_divisor @ sp[(-4)+-4]
 16770  016F28  0EF8               	movlw	-8
 16771  016F2A  006F FF8C  F001    	movff	plusw1,btemp
 16772  016F30  0EF9               	movlw	-7
 16773  016F32  50E3               	movf	plusw1,w,c
 16774  016F34  1001               	iorwf	btemp^0,w,c
 16775  016F36  B4D8               	btfsc	status,2,c
 16776  016F38  D066               	goto	u5430
 16777                           
 16778                           ;stkvar	_counter @ sp[(-4)+3]
 16779  016F3A  0EFF               	movlw	-1
 16780  016F3C  6AE3               	clrf	plusw1,c
 16781  016F3E  D012               	goto	L16
 16782  016F40                     l7148:
 16783                           
 16784                           ;stkvar	_divisor @ sp[(-4)+-4]
 16785  016F40  0EF8               	movlw	-8
 16786  016F42  50E3               	movf	plusw1,w,c
 16787  016F44  90D8               	bcf	status,0,c
 16788  016F46  34E8               	rlcf	wreg,w,c
 16789  016F48  6E01               	movwf	btemp^0,c
 16790  016F4A  0EF8               	movlw	-8
 16791  016F4C  0060  F007  FFE3   	movff	btemp,plusw1
 16792  016F52  0EF9               	movlw	-7
 16793  016F54  50E3               	movf	plusw1,w,c
 16794  016F56  34E8               	rlcf	wreg,w,c
 16795  016F58  6E01               	movwf	btemp^0,c
 16796  016F5A  0EF9               	movlw	-7
 16797  016F5C  0060  F007  FFE3   	movff	btemp,plusw1
 16798                           
 16799                           ;stkvar	_counter @ sp[(-4)+3]
 16800  016F62  0EFF               	movlw	-1
 16801  016F64                     L16:
 16802  016F64  2AE3               	incf	plusw1,f,c
 16803                           
 16804                           ;stkvar	_divisor @ sp[(-4)+-4]
 16805  016F66  0EF9               	movlw	-7
 16806  016F68  AEE3               	btfss	plusw1,7,c
 16807  016F6A  D7EA               	goto	l7148
 16808  016F6C                     u5410:
 16809                           
 16810                           ;stkvar	_quotient @ sp[(-4)+0]
 16811  016F6C  0EFC               	movlw	-4
 16812  016F6E  50E3               	movf	plusw1,w,c
 16813  016F70  90D8               	bcf	status,0,c
 16814  016F72  34E8               	rlcf	wreg,w,c
 16815  016F74  6E01               	movwf	btemp^0,c
 16816  016F76  0EFC               	movlw	-4
 16817  016F78  0060  F007  FFE3   	movff	btemp,plusw1
 16818  016F7E  0EFD               	movlw	-3
 16819  016F80  50E3               	movf	plusw1,w,c
 16820  016F82  34E8               	rlcf	wreg,w,c
 16821  016F84  6E01               	movwf	btemp^0,c
 16822  016F86  0EFD               	movlw	-3
 16823  016F88  0060  F007  FFE3   	movff	btemp,plusw1
 16824                           
 16825                           ;stkvar	_divisor @ sp[(-4)+-4]
 16826  016F8E  0EF8               	movlw	-8
 16827  016F90  006F FF8C  F00B    	movff	plusw1,btemp+10
 16828  016F96  0EF9               	movlw	-7
 16829  016F98  006F FF8C  F00C    	movff	plusw1,btemp+11
 16830                           
 16831                           ;stkvar	_dividend @ sp[(-4)+-2]
 16832  016F9E  0EFA               	movlw	-6
 16833  016FA0  006F FF8C  F009    	movff	plusw1,btemp+8
 16834  016FA6  0EFB               	movlw	-5
 16835  016FA8  006F FF8C  F00A    	movff	plusw1,btemp+9
 16836  016FAE  500B               	movf	(btemp+10)^0,w,c
 16837  016FB0  5C09               	subwf	(btemp+8)^0,w,c
 16838  016FB2  500C               	movf	(btemp+11)^0,w,c
 16839  016FB4  580A               	subwfb	(btemp+9)^0,w,c
 16840  016FB6  A0D8               	btfss	status,0,c
 16841  016FB8  D016               	goto	l7162
 16842                           
 16843                           ;stkvar	_divisor @ sp[(-4)+-4]
 16844                           ;stkvar	_dividend @ sp[(-4)+-2]
 16845  016FBA  0EFA               	movlw	-6
 16846  016FBC  50E3               	movf	plusw1,w,c
 16847  016FBE  6E01               	movwf	btemp^0,c
 16848  016FC0  0EF8               	movlw	-8
 16849  016FC2  50E3               	movf	plusw1,w,c
 16850  016FC4  5E01               	subwf	btemp^0,f,c
 16851  016FC6  0EFA               	movlw	-6
 16852  016FC8  0060  F007  FFE3   	movff	btemp,plusw1
 16853  016FCE  0EFB               	movlw	-5
 16854  016FD0  50E3               	movf	plusw1,w,c
 16855  016FD2  6E01               	movwf	btemp^0,c
 16856  016FD4  0EF9               	movlw	-7
 16857  016FD6  50E3               	movf	plusw1,w,c
 16858  016FD8  5A01               	subwfb	btemp^0,f,c
 16859  016FDA  0EFB               	movlw	-5
 16860  016FDC  0060  F007  FFE3   	movff	btemp,plusw1
 16861                           
 16862                           ;stkvar	_quotient @ sp[(-4)+0]
 16863  016FE2  0EFC               	movlw	-4
 16864  016FE4  80E3               	bsf	plusw1,0,c
 16865  016FE6                     l7162:
 16866                           
 16867                           ;stkvar	_divisor @ sp[(-4)+-4]
 16868  016FE6  90D8               	bcf	status,0,c
 16869  016FE8  0EF9               	movlw	-7
 16870  016FEA  32E3               	rrcf	plusw1,f,c
 16871  016FEC  0EF8               	movlw	-8
 16872  016FEE  32E3               	rrcf	plusw1,f,c
 16873                           
 16874                           ;stkvar	_counter @ sp[(-4)+3]
 16875  016FF0  0EFF               	movlw	-1
 16876  016FF2  50E3               	movf	plusw1,w,c
 16877  016FF4  6E01               	movwf	btemp^0,c
 16878  016FF6  0E01               	movlw	1
 16879  016FF8  5E01               	subwf	btemp^0,f,c
 16880  016FFA  0EFF               	movlw	-1
 16881  016FFC  0060  F007  FFE3   	movff	btemp,plusw1
 16882  017002  A4D8               	btfss	status,2,c
 16883  017004  D7B3               	goto	u5410
 16884  017006                     u5430:
 16885                           
 16886                           ;stkvar	_sign @ sp[(-4)+2]
 16887  017006  0EFE               	movlw	-2
 16888  017008  50E3               	movf	plusw1,w,c
 16889  01700A  B4D8               	btfsc	status,2,c
 16890  01700C  D006               	goto	l7170
 16891                           
 16892                           ;stkvar	_quotient @ sp[(-4)+0]
 16893                           ;stkvar	_quotient @ sp[(-4)+0]
 16894  01700E  0EFC               	movlw	-4
 16895  017010  6CE3               	negf	plusw1,c
 16896  017012  0EFD               	movlw	-3
 16897  017014  1EE3               	comf	plusw1,f,c
 16898  017016  B0D8               	btfsc	status,0,c
 16899  017018  2AE3               	incf	plusw1,f,c
 16900  01701A                     l7170:
 16901                           
 16902                           ;stkvar	_quotient @ sp[(-4)+0]
 16903  01701A  0EFC               	movlw	-4
 16904  01701C  006F FF8C  F001    	movff	plusw1,btemp
 16905  017022  0EFD               	movlw	-3
 16906  017024  006F FF8C  F002    	movff	plusw1,btemp+1
 16907                           
 16908                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16909  01702A  0EF8               	movlw	248
 16910  01702C  26E1               	addwf	fsr1l,f,c
 16911  01702E  0EFF               	movlw	255
 16912  017030  22E2               	addwfc	fsr1h,f,c
 16913  017032  0012               	return		;funcret
 16914  017034                     __end_of___awdiv:
 16915                           	opt callstack 0
 16916                           
 16917 ;; *************** function _dtoa *****************
 16918 ;; Defined at:
 16919 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16920 ;; Parameters:    Size  Location     Type
 16921 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16922 ;;		 -> f(6), NULL(0), 
 16923 ;;  d               8  [STACK] long long 
 16924 ;; Auto vars:     Size  Location     Type
 16925 ;;  n               8  [STACK] long long 
 16926 ;;  i               2  [STACK] int 
 16927 ;;  s               2  [STACK] int 
 16928 ;;  w               2  [STACK] int 
 16929 ;;  p               2  [STACK] int 
 16930 ;; Return value:  Size  Location     Type
 16931 ;;                  2  [STACK] int 
 16932 ;; Registers used:
 16933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16934 ;; Tracked objects:
 16935 ;;		On entry : 0/0
 16936 ;;		On exit  : 0/0
 16937 ;;		Unchanged: 0/0
 16938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16943 ;;Total ram usage:        0 bytes
 16944 ;; Hardware stack levels used:    1
 16945 ;; Hardware stack levels required when called:   12
 16946 ;; This function calls:
 16947 ;;		___aodiv
 16948 ;;		___aomod
 16949 ;;		_abs
 16950 ;;		_pad
 16951 ;; This function is called by:
 16952 ;;		_vfpfcnvrt
 16953 ;; This function uses a reentrant model
 16954 ;;
 16955                           
 16956                           	psect	text62
 16957  014610                     __ptext62:
 16958                           	opt callstack 0
 16959  014610                     _dtoa:
 16960                           	opt callstack 0
 16961                           
 16962                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16963  014610  0E12               	movlw	18
 16964  014612  26E1               	addwf	fsr1l,f,c
 16965  014614  0E00               	movlw	0
 16966  014616  22E2               	addwfc	fsr1h,f,c
 16967                           
 16968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16969                           ;stkvar	_d @ sp[(-18)+-10]
 16970                           
 16971                           ;incstack = 0
 16972  014618  0EE4               	movlw	228
 16973  01461A  24E1               	addwf	fsr1l,w,c
 16974  01461C  6ED9               	movwf	fsr2l,c
 16975  01461E  0EFF               	movlw	255
 16976  014620  20E2               	addwfc	fsr1h,w,c
 16977  014622  6EDA               	movwf	fsr2h,c
 16978                           
 16979                           ;stkvar	_n @ sp[(-18)+2]
 16980  014624  0E08               	movlw	8
 16981  014626  6E01               	movwf	btemp^0,c
 16982  014628  0EF0               	movlw	-16
 16983  01462A                     us947999:
 16984  01462A  006F FF7B FFE3     	movff	postinc2,plusw1
 16985  014630  28E8               	incf	wreg,w,c
 16986  014632  2E01               	decfsz	btemp^0,f,c
 16987  014634  D7FA               	bra	us947999
 16988                           
 16989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16990                           ;stkvar	_n @ sp[(-18)+2]
 16991  014636  0EF7               	movlw	-9
 16992  014638  AEE3               	btfss	plusw1,7,c
 16993  01463A  D002               	goto	u9480
 16994  01463C  0E01               	movlw	1
 16995  01463E  D001               	goto	u9490
 16996  014640                     u9480:
 16997  014640  0E00               	movlw	0
 16998  014642                     u9490:
 16999  014642  6E0B               	movwf	(btemp+10)^0,c
 17000  014644  6A0C               	clrf	(btemp+11)^0,c
 17001                           
 17002                           ;stkvar	_s @ sp[(-18)+12]
 17003  014646  0EFA               	movlw	-6
 17004  014648  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17005  01464E  0EFB               	movlw	-5
 17006  014650  0060  F033  FFE3   	movff	btemp+11,plusw1
 17007                           
 17008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17009                           ;stkvar	_s @ sp[(-18)+12]
 17010  014656  0EFA               	movlw	-6
 17011  014658  006F FF8C  F001    	movff	plusw1,btemp
 17012  01465E  0EFB               	movlw	-5
 17013  014660  50E3               	movf	plusw1,w,c
 17014  014662  1001               	iorwf	btemp^0,w,c
 17015  014664  B4D8               	btfsc	status,2,c
 17016  014666  D025               	goto	u9510
 17017                           
 17018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17019                           ;stkvar	_n @ sp[(-18)+2]
 17020                           ;stkvar	_n @ sp[(-18)+2]
 17021  014668  0EF0               	movlw	-16
 17022  01466A  6CE3               	negf	plusw1,c
 17023  01466C  0EF1               	movlw	-15
 17024  01466E  1EE3               	comf	plusw1,f,c
 17025  014670  0EF2               	movlw	-14
 17026  014672  1EE3               	comf	plusw1,f,c
 17027  014674  0EF3               	movlw	-13
 17028  014676  1EE3               	comf	plusw1,f,c
 17029  014678  0EF4               	movlw	-12
 17030  01467A  1EE3               	comf	plusw1,f,c
 17031  01467C  0EF5               	movlw	-11
 17032  01467E  1EE3               	comf	plusw1,f,c
 17033  014680  0EF6               	movlw	-10
 17034  014682  1EE3               	comf	plusw1,f,c
 17035  014684  0EF7               	movlw	-9
 17036  014686  1EE3               	comf	plusw1,f,c
 17037  014688  E314               	bnc	u9510
 17038  01468A  0EF1               	movlw	-15
 17039  01468C  2AE3               	incf	plusw1,f,c
 17040  01468E  E311               	bnc	u9510
 17041  014690  0EF2               	movlw	-14
 17042  014692  2AE3               	incf	plusw1,f,c
 17043  014694  E30E               	bnc	u9510
 17044  014696  0EF3               	movlw	-13
 17045  014698  2AE3               	incf	plusw1,f,c
 17046  01469A  E30B               	bnc	u9510
 17047  01469C  0EF4               	movlw	-12
 17048  01469E  2AE3               	incf	plusw1,f,c
 17049  0146A0  E308               	bnc	u9510
 17050  0146A2  0EF5               	movlw	-11
 17051  0146A4  2AE3               	incf	plusw1,f,c
 17052  0146A6  E305               	bnc	u9510
 17053  0146A8  0EF6               	movlw	-10
 17054  0146AA  2AE3               	incf	plusw1,f,c
 17055  0146AC  E302               	bnc	u9510
 17056  0146AE  0EF7               	movlw	-9
 17057  0146B0  2AE3               	incf	plusw1,f,c
 17058  0146B2                     u9510:
 17059                           
 17060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17061  0146B2  AE27               	btfss	(_prec+1)^0,7,c
 17062                           
 17063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17064  0146B4  9228               	bcf	_flags^0,1,c
 17065                           
 17066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17067  0146B6  BE27               	btfsc	(_prec+1)^0,7,c
 17068  0146B8  D005               	goto	u9530
 17069  0146BA  5027               	movf	(_prec+1)^0,w,c
 17070  0146BC  E110               	bnz	l10440
 17071  0146BE  0426               	decf	_prec^0,w,c
 17072  0146C0  B0D8               	btfsc	status,0,c
 17073  0146C2  D00D               	goto	l10440
 17074  0146C4                     u9530:
 17075  0146C4  0E01               	movlw	1
 17076  0146C6  6E0B               	movwf	(btemp+10)^0,c
 17077  0146C8  0E00               	movlw	0
 17078  0146CA  6E0C               	movwf	(btemp+11)^0,c
 17079                           
 17080                           ;stkvar	_p @ sp[(-18)+16]
 17081  0146CC  0EFE               	movlw	-2
 17082  0146CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17083  0146D4  0EFF               	movlw	-1
 17084  0146D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17085  0146DC  D008               	goto	l2039
 17086  0146DE                     l10440:
 17087                           
 17088                           ;stkvar	_p @ sp[(-18)+16]
 17089  0146DE  0EFE               	movlw	-2
 17090  0146E0  0060  F09B  FFE3   	movff	_prec,plusw1
 17091  0146E6  0EFF               	movlw	-1
 17092  0146E8  0060  F09F  FFE3   	movff	_prec+1,plusw1
 17093  0146EE                     l2039:
 17094                           
 17095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17096                           ;stkvar	_w @ sp[(-18)+14]
 17097  0146EE  0EFC               	movlw	-4
 17098  0146F0  0060  F093  FFE3   	movff	_width,plusw1
 17099  0146F6  0EFD               	movlw	-3
 17100  0146F8  0060  F097  FFE3   	movff	_width+1,plusw1
 17101                           
 17102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17103                           ;stkvar	_s @ sp[(-18)+12]
 17104  0146FE  0EFA               	movlw	-6
 17105  014700  006F FF8C  F001    	movff	plusw1,btemp
 17106  014706  0EFB               	movlw	-5
 17107  014708  50E3               	movf	plusw1,w,c
 17108  01470A  1001               	iorwf	btemp^0,w,c
 17109  01470C  A4D8               	btfss	status,2,c
 17110  01470E  D002               	goto	u9550
 17111  014710  A428               	btfss	_flags^0,2,c
 17112  014712  D00A               	goto	l10448
 17113  014714                     u9550:
 17114                           
 17115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17116                           ;stkvar	_w @ sp[(-18)+14]
 17117  014714  50E1               	movf	fsr1l,w,c
 17118  014716  0FFC               	addlw	-4
 17119  014718  6ED9               	movwf	fsr2l,c
 17120  01471A  50E2               	movf	fsr1h,w,c
 17121  01471C  6EDA               	movwf	fsr2h,c
 17122  01471E  0EFF               	movlw	255
 17123  014720  22DA               	addwfc	fsr2h,f,c
 17124  014722  06DE               	decf	postinc2,f,c
 17125  014724  0E00               	movlw	0
 17126  014726  5ADD               	subwfb	postdec2,f,c
 17127  014728                     l10448:
 17128                           
 17129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17130  014728  0E4F               	movlw	79
 17131  01472A  6E0B               	movwf	(btemp+10)^0,c
 17132  01472C  0E00               	movlw	0
 17133  01472E  6E0C               	movwf	(btemp+11)^0,c
 17134                           
 17135                           ;stkvar	_i @ sp[(-18)+10]
 17136  014730  0EF8               	movlw	-8
 17137  014732  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17138  014738  0EF9               	movlw	-7
 17139  01473A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17140                           
 17141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17142  014740  0103               	movlb	3	; () banked
 17143  014742  6BE3               	clrf	(_dbuf+79)& (0+255),b
 17144                           
 17145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17146  014744  D109               	goto	l10462
 17147  014746                     l10452:
 17148                           
 17149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17150                           ;stkvar	_i @ sp[(-18)+10]
 17151  014746  50E1               	movf	fsr1l,w,c
 17152  014748  0FF8               	addlw	-8
 17153  01474A  6ED9               	movwf	fsr2l,c
 17154  01474C  50E2               	movf	fsr1h,w,c
 17155  01474E  6EDA               	movwf	fsr2h,c
 17156  014750  0EFF               	movlw	255
 17157  014752  22DA               	addwfc	fsr2h,f,c
 17158  014754  06DE               	decf	postinc2,f,c
 17159  014756  0E00               	movlw	0
 17160  014758  5ADD               	subwfb	postdec2,f,c
 17161                           
 17162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17163  01475A  0E0A               	movlw	10
 17164  01475C  6EE6               	movwf	postinc1,c
 17165  01475E  0E00               	movlw	0
 17166  014760  6EE6               	movwf	postinc1,c
 17167  014762  0E00               	movlw	0
 17168  014764  6EE6               	movwf	postinc1,c
 17169  014766  0E00               	movlw	0
 17170  014768  6EE6               	movwf	postinc1,c
 17171  01476A  0E00               	movlw	0
 17172  01476C  6EE6               	movwf	postinc1,c
 17173  01476E  0E00               	movlw	0
 17174  014770  6EE6               	movwf	postinc1,c
 17175  014772  0E00               	movlw	0
 17176  014774  6EE6               	movwf	postinc1,c
 17177  014776  0E00               	movlw	0
 17178  014778  6EE6               	movwf	postinc1,c
 17179                           
 17180                           ;stkvar	_n @ sp[(-26)+2]
 17181  01477A  50E1               	movf	fsr1l,w,c
 17182  01477C  0FE8               	addlw	-24
 17183  01477E  6ED9               	movwf	fsr2l,c
 17184  014780  50E2               	movf	fsr1h,w,c
 17185  014782  6EDA               	movwf	fsr2h,c
 17186  014784  0EFF               	movlw	255
 17187  014786  22DA               	addwfc	fsr2h,f,c
 17188  014788  006F FF7B FFE6     	movff	postinc2,postinc1
 17189  01478E  006F FF7B FFE6     	movff	postinc2,postinc1
 17190  014794  006F FF7B FFE6     	movff	postinc2,postinc1
 17191  01479A  006F FF7B FFE6     	movff	postinc2,postinc1
 17192  0147A0  006F FF7B FFE6     	movff	postinc2,postinc1
 17193  0147A6  006F FF7B FFE6     	movff	postinc2,postinc1
 17194  0147AC  006F FF7B FFE6     	movff	postinc2,postinc1
 17195  0147B2  006F FF7B FFE6     	movff	postinc2,postinc1
 17196  0147B8  EC97  F0AF         	call	___aomod	;wreg free
 17197  0147BC  52E5               	movf	postdec1,f,c
 17198  0147BE  006F FF9C  F018    	movff	indf1,btemp+23
 17199  0147C4  52E5               	movf	postdec1,f,c
 17200  0147C6  006F FF9C  F017    	movff	indf1,btemp+22
 17201  0147CC  52E5               	movf	postdec1,f,c
 17202  0147CE  006F FF9C  F016    	movff	indf1,btemp+21
 17203  0147D4  52E5               	movf	postdec1,f,c
 17204  0147D6  006F FF9C  F015    	movff	indf1,btemp+20
 17205  0147DC  52E5               	movf	postdec1,f,c
 17206  0147DE  006F FF9C  F014    	movff	indf1,btemp+19
 17207  0147E4  52E5               	movf	postdec1,f,c
 17208  0147E6  006F FF9C  F013    	movff	indf1,btemp+18
 17209  0147EC  52E5               	movf	postdec1,f,c
 17210  0147EE  006F FF9C  F012    	movff	indf1,btemp+17
 17211  0147F4  52E5               	movf	postdec1,f,c
 17212  0147F6  006F FF9C  F011    	movff	indf1,btemp+16
 17213  0147FC  0EF8               	movlw	248
 17214  0147FE  26E1               	addwf	fsr1l,f,c
 17215  014800  0EFF               	movlw	255
 17216  014802  22E2               	addwfc	fsr1h,f,c
 17217  014804  0060  F044  F00B   	movff	btemp+16,btemp+10
 17218  01480A  0060  F048  F00C   	movff	btemp+17,btemp+11
 17219  014810  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17220  014816  0060  F033  FFE6   	movff	btemp+11,postinc1
 17221  01481C  ECB9  F0C6         	call	_abs	;wreg free
 17222  014820  0E30               	movlw	48
 17223  014822  2601               	addwf	btemp^0,f,c
 17224                           
 17225                           ;stkvar	_i @ sp[(-18)+10]
 17226  014824  0EF8               	movlw	-8
 17227  014826  006F FF8C  F00B    	movff	plusw1,btemp+10
 17228  01482C  0EF9               	movlw	-7
 17229  01482E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17230  014834  0E94               	movlw	low _dbuf
 17231  014836  240B               	addwf	(btemp+10)^0,w,c
 17232  014838  6ED9               	movwf	fsr2l,c
 17233  01483A  0E03               	movlw	high _dbuf
 17234  01483C  200C               	addwfc	(btemp+11)^0,w,c
 17235  01483E  6EDA               	movwf	fsr2h,c
 17236  014840  0060  F007  FFDF   	movff	btemp,indf2
 17237                           
 17238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17239                           ;stkvar	_p @ sp[(-18)+16]
 17240  014846  50E1               	movf	fsr1l,w,c
 17241  014848  0FFE               	addlw	-2
 17242  01484A  6ED9               	movwf	fsr2l,c
 17243  01484C  50E2               	movf	fsr1h,w,c
 17244  01484E  6EDA               	movwf	fsr2h,c
 17245  014850  0EFF               	movlw	255
 17246  014852  22DA               	addwfc	fsr2h,f,c
 17247  014854  06DE               	decf	postinc2,f,c
 17248  014856  0E00               	movlw	0
 17249  014858  5ADD               	subwfb	postdec2,f,c
 17250                           
 17251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17252                           ;stkvar	_w @ sp[(-18)+14]
 17253  01485A  50E1               	movf	fsr1l,w,c
 17254  01485C  0FFC               	addlw	-4
 17255  01485E  6ED9               	movwf	fsr2l,c
 17256  014860  50E2               	movf	fsr1h,w,c
 17257  014862  6EDA               	movwf	fsr2h,c
 17258  014864  0EFF               	movlw	255
 17259  014866  22DA               	addwfc	fsr2h,f,c
 17260  014868  06DE               	decf	postinc2,f,c
 17261  01486A  0E00               	movlw	0
 17262  01486C  5ADD               	subwfb	postdec2,f,c
 17263                           
 17264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17265  01486E  0E0A               	movlw	10
 17266  014870  6EE6               	movwf	postinc1,c
 17267  014872  0E00               	movlw	0
 17268  014874  6EE6               	movwf	postinc1,c
 17269  014876  0E00               	movlw	0
 17270  014878  6EE6               	movwf	postinc1,c
 17271  01487A  0E00               	movlw	0
 17272  01487C  6EE6               	movwf	postinc1,c
 17273  01487E  0E00               	movlw	0
 17274  014880  6EE6               	movwf	postinc1,c
 17275  014882  0E00               	movlw	0
 17276  014884  6EE6               	movwf	postinc1,c
 17277  014886  0E00               	movlw	0
 17278  014888  6EE6               	movwf	postinc1,c
 17279  01488A  0E00               	movlw	0
 17280  01488C  6EE6               	movwf	postinc1,c
 17281                           
 17282                           ;stkvar	_n @ sp[(-26)+2]
 17283  01488E  50E1               	movf	fsr1l,w,c
 17284  014890  0FE8               	addlw	-24
 17285  014892  6ED9               	movwf	fsr2l,c
 17286  014894  50E2               	movf	fsr1h,w,c
 17287  014896  6EDA               	movwf	fsr2h,c
 17288  014898  0EFF               	movlw	255
 17289  01489A  22DA               	addwfc	fsr2h,f,c
 17290  01489C  006F FF7B FFE6     	movff	postinc2,postinc1
 17291  0148A2  006F FF7B FFE6     	movff	postinc2,postinc1
 17292  0148A8  006F FF7B FFE6     	movff	postinc2,postinc1
 17293  0148AE  006F FF7B FFE6     	movff	postinc2,postinc1
 17294  0148B4  006F FF7B FFE6     	movff	postinc2,postinc1
 17295  0148BA  006F FF7B FFE6     	movff	postinc2,postinc1
 17296  0148C0  006F FF7B FFE6     	movff	postinc2,postinc1
 17297  0148C6  006F FF7B FFE6     	movff	postinc2,postinc1
 17298  0148CC  EC1D  F0AD         	call	___aodiv	;wreg free
 17299  0148D0  52E5               	movf	postdec1,f,c
 17300  0148D2  006F FF9C  F018    	movff	indf1,btemp+23
 17301  0148D8  52E5               	movf	postdec1,f,c
 17302  0148DA  006F FF9C  F017    	movff	indf1,btemp+22
 17303  0148E0  52E5               	movf	postdec1,f,c
 17304  0148E2  006F FF9C  F016    	movff	indf1,btemp+21
 17305  0148E8  52E5               	movf	postdec1,f,c
 17306  0148EA  006F FF9C  F015    	movff	indf1,btemp+20
 17307  0148F0  52E5               	movf	postdec1,f,c
 17308  0148F2  006F FF9C  F014    	movff	indf1,btemp+19
 17309  0148F8  52E5               	movf	postdec1,f,c
 17310  0148FA  006F FF9C  F013    	movff	indf1,btemp+18
 17311  014900  52E5               	movf	postdec1,f,c
 17312  014902  006F FF9C  F012    	movff	indf1,btemp+17
 17313  014908  52E5               	movf	postdec1,f,c
 17314  01490A  006F FF9C  F011    	movff	indf1,btemp+16
 17315  014910  0EF8               	movlw	248
 17316  014912  26E1               	addwf	fsr1l,f,c
 17317  014914  0EFF               	movlw	255
 17318  014916  22E2               	addwfc	fsr1h,f,c
 17319                           
 17320                           ;stkvar	_n @ sp[(-18)+2]
 17321  014918  0EF0               	movlw	-16
 17322  01491A  0060  F047  FFE3   	movff	btemp+16,plusw1
 17323  014920  0EF1               	movlw	-15
 17324  014922  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17325  014928  0EF2               	movlw	-14
 17326  01492A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17327  014930  0EF3               	movlw	-13
 17328  014932  0060  F053  FFE3   	movff	btemp+19,plusw1
 17329  014938  0EF4               	movlw	-12
 17330  01493A  0060  F057  FFE3   	movff	btemp+20,plusw1
 17331  014940  0EF5               	movlw	-11
 17332  014942  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17333  014948  0EF6               	movlw	-10
 17334  01494A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17335  014950  0EF7               	movlw	-9
 17336  014952  0060  F063  FFE3   	movff	btemp+23,plusw1
 17337  014958                     l10462:
 17338                           
 17339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17340                           ;stkvar	_i @ sp[(-18)+10]
 17341  014958  0EF9               	movlw	-7
 17342  01495A  BEE3               	btfsc	plusw1,7,c
 17343  01495C  D036               	goto	u9600
 17344  01495E  0EF9               	movlw	-7
 17345  014960  50E3               	movf	plusw1,w,c
 17346  014962  E104               	bnz	u9560
 17347  014964  0EF8               	movlw	-8
 17348  014966  04E3               	decf	plusw1,w,c
 17349  014968  A0D8               	btfss	status,0,c
 17350  01496A  D02F               	goto	u9600
 17351  01496C                     u9560:
 17352                           
 17353                           ;stkvar	_n @ sp[(-18)+2]
 17354  01496C  0EF0               	movlw	-16
 17355  01496E  50E3               	movf	plusw1,w,c
 17356  014970  E115               	bnz	u9571
 17357  014972  0EF1               	movlw	-15
 17358  014974  50E3               	movf	plusw1,w,c
 17359  014976  E112               	bnz	u9571
 17360  014978  0EF2               	movlw	-14
 17361  01497A  50E3               	movf	plusw1,w,c
 17362  01497C  E10F               	bnz	u9571
 17363  01497E  0EF3               	movlw	-13
 17364  014980  50E3               	movf	plusw1,w,c
 17365  014982  E10C               	bnz	u9571
 17366  014984  0EF4               	movlw	-12
 17367  014986  50E3               	movf	plusw1,w,c
 17368  014988  E109               	bnz	u9571
 17369  01498A  0EF5               	movlw	-11
 17370  01498C  50E3               	movf	plusw1,w,c
 17371  01498E  E106               	bnz	u9571
 17372  014990  0EF6               	movlw	-10
 17373  014992  50E3               	movf	plusw1,w,c
 17374  014994  E103               	bnz	u9571
 17375  014996  0EF7               	movlw	-9
 17376  014998  50E3               	movf	plusw1,w,c
 17377  01499A  A4D8               	btfss	status,2,c
 17378  01499C                     u9571:
 17379  01499C  D6D4               	goto	l10452
 17380                           
 17381                           ;stkvar	_p @ sp[(-18)+16]
 17382  01499E  0EFF               	movlw	-1
 17383  0149A0  BEE3               	btfsc	plusw1,7,c
 17384  0149A2  D007               	goto	u9580
 17385  0149A4  0EFF               	movlw	-1
 17386  0149A6  50E3               	movf	plusw1,w,c
 17387  0149A8  E103               	bnz	u9581
 17388  0149AA  0EFE               	movlw	-2
 17389  0149AC  04E3               	decf	plusw1,w,c
 17390  0149AE  B0D8               	btfsc	status,0,c
 17391  0149B0                     u9581:
 17392  0149B0  D6CA               	goto	l10452
 17393  0149B2                     u9580:
 17394                           
 17395                           ;stkvar	_w @ sp[(-18)+14]
 17396  0149B2  0EFD               	movlw	-3
 17397  0149B4  BEE3               	btfsc	plusw1,7,c
 17398  0149B6  D009               	goto	u9600
 17399  0149B8  0EFD               	movlw	-3
 17400  0149BA  50E3               	movf	plusw1,w,c
 17401  0149BC  E104               	bnz	u9590
 17402  0149BE  0EFC               	movlw	-4
 17403  0149C0  04E3               	decf	plusw1,w,c
 17404  0149C2  A0D8               	btfss	status,0,c
 17405  0149C4  D002               	goto	u9600
 17406  0149C6                     u9590:
 17407  0149C6  B228               	btfsc	_flags^0,1,c
 17408  0149C8  D6BE               	goto	l10452
 17409  0149CA                     u9600:
 17410                           
 17411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17412                           ;stkvar	_s @ sp[(-18)+12]
 17413  0149CA  0EFA               	movlw	-6
 17414  0149CC  006F FF8C  F001    	movff	plusw1,btemp
 17415  0149D2  0EFB               	movlw	-5
 17416  0149D4  50E3               	movf	plusw1,w,c
 17417  0149D6  1001               	iorwf	btemp^0,w,c
 17418  0149D8  A4D8               	btfss	status,2,c
 17419  0149DA  D002               	goto	u9620
 17420  0149DC  A428               	btfss	_flags^0,2,c
 17421  0149DE  D033               	goto	l10486
 17422  0149E0                     u9620:
 17423                           
 17424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17425                           ;stkvar	_i @ sp[(-18)+10]
 17426  0149E0  50E1               	movf	fsr1l,w,c
 17427  0149E2  0FF8               	addlw	-8
 17428  0149E4  6ED9               	movwf	fsr2l,c
 17429  0149E6  50E2               	movf	fsr1h,w,c
 17430  0149E8  6EDA               	movwf	fsr2h,c
 17431  0149EA  0EFF               	movlw	255
 17432  0149EC  22DA               	addwfc	fsr2h,f,c
 17433  0149EE  06DE               	decf	postinc2,f,c
 17434  0149F0  0E00               	movlw	0
 17435  0149F2  5ADD               	subwfb	postdec2,f,c
 17436                           
 17437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17438                           ;stkvar	_s @ sp[(-18)+12]
 17439  0149F4  0EFA               	movlw	-6
 17440  0149F6  006F FF8C  F001    	movff	plusw1,btemp
 17441  0149FC  0EFB               	movlw	-5
 17442  0149FE  50E3               	movf	plusw1,w,c
 17443  014A00  1001               	iorwf	btemp^0,w,c
 17444  014A02  A4D8               	btfss	status,2,c
 17445  014A04  D002               	goto	l10482
 17446  014A06  0E2B               	movlw	43
 17447  014A08  D001               	goto	L17
 17448  014A0A                     l10482:
 17449  014A0A  0E2D               	movlw	45
 17450  014A0C                     L17:
 17451  014A0C  6E0B               	movwf	(btemp+10)^0,c
 17452  014A0E  0E00               	movlw	0
 17453  014A10  6E0C               	movwf	(btemp+11)^0,c
 17454                           
 17455                           ;stkvar	_dtoa$5048 @ sp[(-18)+0]
 17456  014A12  0EEE               	movlw	-18
 17457  014A14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17458  014A1A  0EEF               	movlw	-17
 17459  014A1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17460                           
 17461                           ;stkvar	_dtoa$5048 @ sp[(-18)+0]
 17462                           ;stkvar	_i @ sp[(-18)+10]
 17463  014A22  0EF8               	movlw	-8
 17464  014A24  006F FF8C  F00B    	movff	plusw1,btemp+10
 17465  014A2A  0EF9               	movlw	-7
 17466  014A2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17467  014A32  0E94               	movlw	low _dbuf
 17468  014A34  240B               	addwf	(btemp+10)^0,w,c
 17469  014A36  6ED9               	movwf	fsr2l,c
 17470  014A38  0E03               	movlw	high _dbuf
 17471  014A3A  200C               	addwfc	(btemp+11)^0,w,c
 17472  014A3C  6EDA               	movwf	fsr2h,c
 17473  014A3E  0EEE               	movlw	-18
 17474  014A40  006F FF8F FFDF     	movff	plusw1,indf2
 17475  014A46                     l10486:
 17476                           
 17477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17478                           ;stkvar	_w @ sp[(-18)+14]
 17479  014A46  0EFC               	movlw	-4
 17480  014A48  006F FF8F FFE6     	movff	plusw1,postinc1
 17481  014A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 17482                           
 17483                           ;stkvar	_i @ sp[(-20)+10]
 17484  014A54  0E94               	movlw	low _dbuf
 17485  014A56  6E0B               	movwf	(btemp+10)^0,c
 17486  014A58  0E03               	movlw	high _dbuf
 17487  014A5A  6E0C               	movwf	(btemp+11)^0,c
 17488  014A5C  0EF6               	movlw	-10
 17489  014A5E  50E3               	movf	plusw1,w,c
 17490  014A60  260B               	addwf	(btemp+10)^0,f,c
 17491  014A62  0EF7               	movlw	-9
 17492  014A64  50E3               	movf	plusw1,w,c
 17493  014A66  220C               	addwfc	(btemp+11)^0,f,c
 17494  014A68  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17495  014A6E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17496                           
 17497                           ;stkvar	_fp @ sp[(-22)+-2]
 17498  014A74  0EE8               	movlw	-24
 17499  014A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17500  014A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 17501  014A82  EC63  F0BA         	call	_pad	;wreg free
 17502                           
 17503                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17504  014A86  0EE4               	movlw	228
 17505  014A88  26E1               	addwf	fsr1l,f,c
 17506  014A8A  0EFF               	movlw	255
 17507  014A8C  22E2               	addwfc	fsr1h,f,c
 17508  014A8E  0012               	return		;funcret
 17509  014A90                     __end_of_dtoa:
 17510                           	opt callstack 0
 17511                           
 17512 ;; *************** function _abs *****************
 17513 ;; Defined at:
 17514 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;  a               2  [STACK] int 
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;		None
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  2  [STACK] int 
 17521 ;; Registers used:
 17522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17523 ;; Tracked objects:
 17524 ;;		On entry : 0/3
 17525 ;;		On exit  : 0/0
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17532 ;;Total ram usage:        0 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:    7
 17535 ;; This function calls:
 17536 ;;		Nothing
 17537 ;; This function is called by:
 17538 ;;		_dtoa
 17539 ;; This function uses a reentrant model
 17540 ;;
 17541                           
 17542                           	psect	text63
 17543  018D72                     __ptext63:
 17544                           	opt callstack 0
 17545  018D72                     _abs:
 17546                           	opt callstack 16
 17547                           
 17548                           ;stkvar	_a @ sp[(0)+-2]
 17549                           
 17550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17551                           ;incstack = 0
 17552  018D72  0EFF               	movlw	-1
 17553  018D74  BEE3               	btfsc	plusw1,7,c
 17554  018D76  D007               	goto	u4850
 17555  018D78  0EFF               	movlw	-1
 17556  018D7A  50E3               	movf	plusw1,w,c
 17557  018D7C  E112               	bnz	l6936
 17558  018D7E  0EFE               	movlw	-2
 17559  018D80  04E3               	decf	plusw1,w,c
 17560  018D82  B0D8               	btfsc	status,0,c
 17561  018D84  D00E               	goto	l6936
 17562  018D86                     u4850:
 17563                           
 17564                           ;stkvar	_a @ sp[(0)+-2]
 17565  018D86  0EFE               	movlw	-2
 17566  018D88  006F FF8C  F001    	movff	plusw1,btemp
 17567  018D8E  1E01               	comf	btemp^0,f,c
 17568  018D90  0EFF               	movlw	-1
 17569  018D92  006F FF8C  F002    	movff	plusw1,btemp+1
 17570  018D98  1E02               	comf	(btemp+1)^0,f,c
 17571  018D9A  2A01               	incf	btemp^0,f,c
 17572  018D9C  B4D8               	btfsc	status,2,c
 17573  018D9E  2A02               	incf	(btemp+1)^0,f,c
 17574  018DA0  D008               	goto	l2942
 17575  018DA2                     l6936:
 17576                           
 17577                           ;stkvar	_a @ sp[(0)+-2]
 17578  018DA2  0EFE               	movlw	-2
 17579  018DA4  006F FF8C  F001    	movff	plusw1,btemp
 17580  018DAA  0EFF               	movlw	-1
 17581  018DAC  006F FF8C  F002    	movff	plusw1,btemp+1
 17582  018DB2                     l2942:
 17583                           
 17584                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17585  018DB2  52E5               	movf	postdec1,f,c
 17586  018DB4  52E5               	movf	postdec1,f,c
 17587  018DB6  0012               	return		;funcret
 17588  018DB8                     __end_of_abs:
 17589                           	opt callstack 0
 17590                           
 17591 ;; *************** function ___aomod *****************
 17592 ;; Defined at:
 17593 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;  dividend        8  [STACK] long long 
 17596 ;;  divisor         8  [STACK] long long 
 17597 ;; Auto vars:     Size  Location     Type
 17598 ;;  sign            1  [STACK] unsigned char 
 17599 ;;  counter         1  [STACK] unsigned char 
 17600 ;; Return value:  Size  Location     Type
 17601 ;;                  8  [STACK] long long 
 17602 ;; Registers used:
 17603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17604 ;; Tracked objects:
 17605 ;;		On entry : 0/3
 17606 ;;		On exit  : 0/0
 17607 ;;		Unchanged: 0/0
 17608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17613 ;;Total ram usage:        0 bytes
 17614 ;; Hardware stack levels used:    1
 17615 ;; Hardware stack levels required when called:    7
 17616 ;; This function calls:
 17617 ;;		Nothing
 17618 ;; This function is called by:
 17619 ;;		_dtoa
 17620 ;; This function uses a reentrant model
 17621 ;;
 17622                           
 17623                           	psect	text64
 17624  015F2E                     __ptext64:
 17625                           	opt callstack 0
 17626  015F2E                     ___aomod:
 17627                           	opt callstack 0
 17628                           
 17629                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17630  015F2E  52E6               	movf	postinc1,f,c
 17631  015F30  52E6               	movf	postinc1,f,c
 17632                           
 17633                           ;stkvar	_sign @ sp[(-2)+0]
 17634                           
 17635                           ;incstack = 0
 17636  015F32  0EFE               	movlw	-2
 17637  015F34  6AE3               	clrf	plusw1,c
 17638                           
 17639                           ;stkvar	_dividend @ sp[(-2)+-8]
 17640  015F36  0EFD               	movlw	-3
 17641  015F38  AEE3               	btfss	plusw1,7,c
 17642  015F3A  D028               	goto	l7094
 17643                           
 17644                           ;stkvar	_dividend @ sp[(-2)+-8]
 17645                           ;stkvar	_dividend @ sp[(-2)+-8]
 17646  015F3C  0EF6               	movlw	-10
 17647  015F3E  6CE3               	negf	plusw1,c
 17648  015F40  0EF7               	movlw	-9
 17649  015F42  1EE3               	comf	plusw1,f,c
 17650  015F44  0EF8               	movlw	-8
 17651  015F46  1EE3               	comf	plusw1,f,c
 17652  015F48  0EF9               	movlw	-7
 17653  015F4A  1EE3               	comf	plusw1,f,c
 17654  015F4C  0EFA               	movlw	-6
 17655  015F4E  1EE3               	comf	plusw1,f,c
 17656  015F50  0EFB               	movlw	-5
 17657  015F52  1EE3               	comf	plusw1,f,c
 17658  015F54  0EFC               	movlw	-4
 17659  015F56  1EE3               	comf	plusw1,f,c
 17660  015F58  0EFD               	movlw	-3
 17661  015F5A  1EE3               	comf	plusw1,f,c
 17662  015F5C  E314               	bnc	u5280
 17663  015F5E  0EF7               	movlw	-9
 17664  015F60  2AE3               	incf	plusw1,f,c
 17665  015F62  E311               	bnc	u5280
 17666  015F64  0EF8               	movlw	-8
 17667  015F66  2AE3               	incf	plusw1,f,c
 17668  015F68  E30E               	bnc	u5280
 17669  015F6A  0EF9               	movlw	-7
 17670  015F6C  2AE3               	incf	plusw1,f,c
 17671  015F6E  E30B               	bnc	u5280
 17672  015F70  0EFA               	movlw	-6
 17673  015F72  2AE3               	incf	plusw1,f,c
 17674  015F74  E308               	bnc	u5280
 17675  015F76  0EFB               	movlw	-5
 17676  015F78  2AE3               	incf	plusw1,f,c
 17677  015F7A  E305               	bnc	u5280
 17678  015F7C  0EFC               	movlw	-4
 17679  015F7E  2AE3               	incf	plusw1,f,c
 17680  015F80  E302               	bnc	u5280
 17681  015F82  0EFD               	movlw	-3
 17682  015F84  2AE3               	incf	plusw1,f,c
 17683  015F86                     u5280:
 17684                           
 17685                           ;stkvar	_sign @ sp[(-2)+0]
 17686  015F86  0EFE               	movlw	-2
 17687  015F88  6AE3               	clrf	plusw1,c
 17688  015F8A  2AE3               	incf	plusw1,f,c
 17689  015F8C                     l7094:
 17690                           
 17691                           ;stkvar	_divisor @ sp[(-2)+-16]
 17692  015F8C  0EF5               	movlw	-11
 17693  015F8E  AEE3               	btfss	plusw1,7,c
 17694  015F90  D025               	goto	u5300
 17695                           
 17696                           ;stkvar	_divisor @ sp[(-2)+-16]
 17697                           ;stkvar	_divisor @ sp[(-2)+-16]
 17698  015F92  0EEE               	movlw	-18
 17699  015F94  6CE3               	negf	plusw1,c
 17700  015F96  0EEF               	movlw	-17
 17701  015F98  1EE3               	comf	plusw1,f,c
 17702  015F9A  0EF0               	movlw	-16
 17703  015F9C  1EE3               	comf	plusw1,f,c
 17704  015F9E  0EF1               	movlw	-15
 17705  015FA0  1EE3               	comf	plusw1,f,c
 17706  015FA2  0EF2               	movlw	-14
 17707  015FA4  1EE3               	comf	plusw1,f,c
 17708  015FA6  0EF3               	movlw	-13
 17709  015FA8  1EE3               	comf	plusw1,f,c
 17710  015FAA  0EF4               	movlw	-12
 17711  015FAC  1EE3               	comf	plusw1,f,c
 17712  015FAE  0EF5               	movlw	-11
 17713  015FB0  1EE3               	comf	plusw1,f,c
 17714  015FB2  E314               	bnc	u5300
 17715  015FB4  0EEF               	movlw	-17
 17716  015FB6  2AE3               	incf	plusw1,f,c
 17717  015FB8  E311               	bnc	u5300
 17718  015FBA  0EF0               	movlw	-16
 17719  015FBC  2AE3               	incf	plusw1,f,c
 17720  015FBE  E30E               	bnc	u5300
 17721  015FC0  0EF1               	movlw	-15
 17722  015FC2  2AE3               	incf	plusw1,f,c
 17723  015FC4  E30B               	bnc	u5300
 17724  015FC6  0EF2               	movlw	-14
 17725  015FC8  2AE3               	incf	plusw1,f,c
 17726  015FCA  E308               	bnc	u5300
 17727  015FCC  0EF3               	movlw	-13
 17728  015FCE  2AE3               	incf	plusw1,f,c
 17729  015FD0  E305               	bnc	u5300
 17730  015FD2  0EF4               	movlw	-12
 17731  015FD4  2AE3               	incf	plusw1,f,c
 17732  015FD6  E302               	bnc	u5300
 17733  015FD8  0EF5               	movlw	-11
 17734  015FDA  2AE3               	incf	plusw1,f,c
 17735  015FDC                     u5300:
 17736                           
 17737                           ;stkvar	_divisor @ sp[(-2)+-16]
 17738  015FDC  0EEE               	movlw	-18
 17739  015FDE  50E3               	movf	plusw1,w,c
 17740  015FE0  E116               	bnz	u5310
 17741  015FE2  0EEF               	movlw	-17
 17742  015FE4  50E3               	movf	plusw1,w,c
 17743  015FE6  E113               	bnz	u5310
 17744  015FE8  0EF0               	movlw	-16
 17745  015FEA  50E3               	movf	plusw1,w,c
 17746  015FEC  E110               	bnz	u5310
 17747  015FEE  0EF1               	movlw	-15
 17748  015FF0  50E3               	movf	plusw1,w,c
 17749  015FF2  E10D               	bnz	u5310
 17750  015FF4  0EF2               	movlw	-14
 17751  015FF6  50E3               	movf	plusw1,w,c
 17752  015FF8  E10A               	bnz	u5310
 17753  015FFA  0EF3               	movlw	-13
 17754  015FFC  50E3               	movf	plusw1,w,c
 17755  015FFE  E107               	bnz	u5310
 17756  016000  0EF4               	movlw	-12
 17757  016002  50E3               	movf	plusw1,w,c
 17758  016004  E104               	bnz	u5310
 17759  016006  0EF5               	movlw	-11
 17760  016008  50E3               	movf	plusw1,w,c
 17761  01600A  B4D8               	btfsc	status,2,c
 17762  01600C  D075               	goto	u5340
 17763  01600E                     u5310:
 17764                           
 17765                           ;stkvar	_counter @ sp[(-2)+1]
 17766  01600E  0EFF               	movlw	-1
 17767  016010  6AE3               	clrf	plusw1,c
 17768  016012  D012               	goto	L18
 17769  016014                     l7102:
 17770                           
 17771                           ;stkvar	_divisor @ sp[(-2)+-16]
 17772  016014  90D8               	bcf	status,0,c
 17773  016016  0EEE               	movlw	-18
 17774  016018  36E3               	rlcf	plusw1,f,c
 17775  01601A  0EEF               	movlw	-17
 17776  01601C  36E3               	rlcf	plusw1,f,c
 17777  01601E  0EF0               	movlw	-16
 17778  016020  36E3               	rlcf	plusw1,f,c
 17779  016022  0EF1               	movlw	-15
 17780  016024  36E3               	rlcf	plusw1,f,c
 17781  016026  0EF2               	movlw	-14
 17782  016028  36E3               	rlcf	plusw1,f,c
 17783  01602A  0EF3               	movlw	-13
 17784  01602C  36E3               	rlcf	plusw1,f,c
 17785  01602E  0EF4               	movlw	-12
 17786  016030  36E3               	rlcf	plusw1,f,c
 17787  016032  0EF5               	movlw	-11
 17788  016034  36E3               	rlcf	plusw1,f,c
 17789                           
 17790                           ;stkvar	_counter @ sp[(-2)+1]
 17791  016036  0EFF               	movlw	-1
 17792  016038                     L18:
 17793  016038  2AE3               	incf	plusw1,f,c
 17794                           
 17795                           ;stkvar	_divisor @ sp[(-2)+-16]
 17796  01603A  0EF5               	movlw	-11
 17797  01603C  AEE3               	btfss	plusw1,7,c
 17798  01603E  D7EA               	goto	l7102
 17799  016040                     u5320:
 17800                           
 17801                           ;stkvar	_divisor @ sp[(-2)+-16]
 17802                           ;stkvar	_dividend @ sp[(-2)+-8]
 17803  016040  50E1               	movf	fsr1l,w,c
 17804  016042  0FF6               	addlw	-10
 17805  016044  6ED9               	movwf	fsr2l,c
 17806  016046  50E2               	movf	fsr1h,w,c
 17807  016048  6EDA               	movwf	fsr2h,c
 17808  01604A  0EFF               	movlw	255
 17809  01604C  22DA               	addwfc	fsr2h,f,c
 17810  01604E  0EEE               	movlw	-18
 17811  016050  50E3               	movf	plusw1,w,c
 17812  016052  5CDE               	subwf	postinc2,w,c
 17813  016054  0EEF               	movlw	-17
 17814  016056  50E3               	movf	plusw1,w,c
 17815  016058  58DE               	subwfb	postinc2,w,c
 17816  01605A  0EF0               	movlw	-16
 17817  01605C  50E3               	movf	plusw1,w,c
 17818  01605E  58DE               	subwfb	postinc2,w,c
 17819  016060  0EF1               	movlw	-15
 17820  016062  50E3               	movf	plusw1,w,c
 17821  016064  58DE               	subwfb	postinc2,w,c
 17822  016066  0EF2               	movlw	-14
 17823  016068  50E3               	movf	plusw1,w,c
 17824  01606A  58DE               	subwfb	postinc2,w,c
 17825  01606C  0EF3               	movlw	-13
 17826  01606E  50E3               	movf	plusw1,w,c
 17827  016070  58DE               	subwfb	postinc2,w,c
 17828  016072  0EF4               	movlw	-12
 17829  016074  50E3               	movf	plusw1,w,c
 17830  016076  58DE               	subwfb	postinc2,w,c
 17831  016078  0EF5               	movlw	-11
 17832  01607A  50E3               	movf	plusw1,w,c
 17833  01607C  58DE               	subwfb	postinc2,w,c
 17834  01607E  A0D8               	btfss	status,0,c
 17835  016080  D01F               	goto	l7110
 17836                           
 17837                           ;stkvar	_divisor @ sp[(-2)+-16]
 17838                           ;stkvar	_dividend @ sp[(-2)+-8]
 17839  016082  50E1               	movf	fsr1l,w,c
 17840  016084  0FF6               	addlw	-10
 17841  016086  6ED9               	movwf	fsr2l,c
 17842  016088  50E2               	movf	fsr1h,w,c
 17843  01608A  6EDA               	movwf	fsr2h,c
 17844  01608C  0EFF               	movlw	255
 17845  01608E  22DA               	addwfc	fsr2h,f,c
 17846  016090  0EEE               	movlw	-18
 17847  016092  50E3               	movf	plusw1,w,c
 17848  016094  5EDE               	subwf	postinc2,f,c
 17849  016096  0EEF               	movlw	-17
 17850  016098  50E3               	movf	plusw1,w,c
 17851  01609A  5ADE               	subwfb	postinc2,f,c
 17852  01609C  0EF0               	movlw	-16
 17853  01609E  50E3               	movf	plusw1,w,c
 17854  0160A0  5ADE               	subwfb	postinc2,f,c
 17855  0160A2  0EF1               	movlw	-15
 17856  0160A4  50E3               	movf	plusw1,w,c
 17857  0160A6  5ADE               	subwfb	postinc2,f,c
 17858  0160A8  0EF2               	movlw	-14
 17859  0160AA  50E3               	movf	plusw1,w,c
 17860  0160AC  5ADE               	subwfb	postinc2,f,c
 17861  0160AE  0EF3               	movlw	-13
 17862  0160B0  50E3               	movf	plusw1,w,c
 17863  0160B2  5ADE               	subwfb	postinc2,f,c
 17864  0160B4  0EF4               	movlw	-12
 17865  0160B6  50E3               	movf	plusw1,w,c
 17866  0160B8  5ADE               	subwfb	postinc2,f,c
 17867  0160BA  0EF5               	movlw	-11
 17868  0160BC  50E3               	movf	plusw1,w,c
 17869  0160BE  5ADE               	subwfb	postinc2,f,c
 17870  0160C0                     l7110:
 17871                           
 17872                           ;stkvar	_divisor @ sp[(-2)+-16]
 17873  0160C0  90D8               	bcf	status,0,c
 17874  0160C2  0EF5               	movlw	-11
 17875  0160C4  32E3               	rrcf	plusw1,f,c
 17876  0160C6  0EF4               	movlw	-12
 17877  0160C8  32E3               	rrcf	plusw1,f,c
 17878  0160CA  0EF3               	movlw	-13
 17879  0160CC  32E3               	rrcf	plusw1,f,c
 17880  0160CE  0EF2               	movlw	-14
 17881  0160D0  32E3               	rrcf	plusw1,f,c
 17882  0160D2  0EF1               	movlw	-15
 17883  0160D4  32E3               	rrcf	plusw1,f,c
 17884  0160D6  0EF0               	movlw	-16
 17885  0160D8  32E3               	rrcf	plusw1,f,c
 17886  0160DA  0EEF               	movlw	-17
 17887  0160DC  32E3               	rrcf	plusw1,f,c
 17888  0160DE  0EEE               	movlw	-18
 17889  0160E0  32E3               	rrcf	plusw1,f,c
 17890                           
 17891                           ;stkvar	_counter @ sp[(-2)+1]
 17892  0160E2  0EFF               	movlw	-1
 17893  0160E4  50E3               	movf	plusw1,w,c
 17894  0160E6  6E01               	movwf	btemp^0,c
 17895  0160E8  0E01               	movlw	1
 17896  0160EA  5E01               	subwf	btemp^0,f,c
 17897  0160EC  0EFF               	movlw	-1
 17898  0160EE  0060  F007  FFE3   	movff	btemp,plusw1
 17899  0160F4  A4D8               	btfss	status,2,c
 17900  0160F6  D7A4               	goto	u5320
 17901  0160F8                     u5340:
 17902                           
 17903                           ;stkvar	_sign @ sp[(-2)+0]
 17904  0160F8  0EFE               	movlw	-2
 17905  0160FA  50E3               	movf	plusw1,w,c
 17906  0160FC  B4D8               	btfsc	status,2,c
 17907  0160FE  D025               	goto	u5360
 17908                           
 17909                           ;stkvar	_dividend @ sp[(-2)+-8]
 17910                           ;stkvar	_dividend @ sp[(-2)+-8]
 17911  016100  0EF6               	movlw	-10
 17912  016102  6CE3               	negf	plusw1,c
 17913  016104  0EF7               	movlw	-9
 17914  016106  1EE3               	comf	plusw1,f,c
 17915  016108  0EF8               	movlw	-8
 17916  01610A  1EE3               	comf	plusw1,f,c
 17917  01610C  0EF9               	movlw	-7
 17918  01610E  1EE3               	comf	plusw1,f,c
 17919  016110  0EFA               	movlw	-6
 17920  016112  1EE3               	comf	plusw1,f,c
 17921  016114  0EFB               	movlw	-5
 17922  016116  1EE3               	comf	plusw1,f,c
 17923  016118  0EFC               	movlw	-4
 17924  01611A  1EE3               	comf	plusw1,f,c
 17925  01611C  0EFD               	movlw	-3
 17926  01611E  1EE3               	comf	plusw1,f,c
 17927  016120  E314               	bnc	u5360
 17928  016122  0EF7               	movlw	-9
 17929  016124  2AE3               	incf	plusw1,f,c
 17930  016126  E311               	bnc	u5360
 17931  016128  0EF8               	movlw	-8
 17932  01612A  2AE3               	incf	plusw1,f,c
 17933  01612C  E30E               	bnc	u5360
 17934  01612E  0EF9               	movlw	-7
 17935  016130  2AE3               	incf	plusw1,f,c
 17936  016132  E30B               	bnc	u5360
 17937  016134  0EFA               	movlw	-6
 17938  016136  2AE3               	incf	plusw1,f,c
 17939  016138  E308               	bnc	u5360
 17940  01613A  0EFB               	movlw	-5
 17941  01613C  2AE3               	incf	plusw1,f,c
 17942  01613E  E305               	bnc	u5360
 17943  016140  0EFC               	movlw	-4
 17944  016142  2AE3               	incf	plusw1,f,c
 17945  016144  E302               	bnc	u5360
 17946  016146  0EFD               	movlw	-3
 17947  016148  2AE3               	incf	plusw1,f,c
 17948  01614A                     u5360:
 17949                           
 17950                           ;stkvar	_dividend @ sp[(-2)+-8]
 17951  01614A  0EF6               	movlw	246
 17952  01614C  24E1               	addwf	fsr1l,w,c
 17953  01614E  6ED9               	movwf	fsr2l,c
 17954  016150  0EFF               	movlw	255
 17955  016152  20E2               	addwfc	fsr1h,w,c
 17956  016154  6EDA               	movwf	fsr2h,c
 17957                           
 17958                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17959  016156  0E08               	movlw	8
 17960  016158  6E01               	movwf	btemp^0,c
 17961  01615A  0EF6               	movlw	-10
 17962  01615C                     us537999:
 17963  01615C  006F FF7B FFE3     	movff	postinc2,plusw1
 17964  016162  28E8               	incf	wreg,w,c
 17965  016164  2E01               	decfsz	btemp^0,f,c
 17966  016166  D7FA               	bra	us537999
 17967                           
 17968                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17969  016168  52E5               	movf	postdec1,f,c
 17970  01616A  52E5               	movf	postdec1,f,c
 17971  01616C  0012               	return		;funcret
 17972  01616E                     __end_of___aomod:
 17973                           	opt callstack 0
 17974                           
 17975 ;; *************** function ___aodiv *****************
 17976 ;; Defined at:
 17977 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17978 ;; Parameters:    Size  Location     Type
 17979 ;;  dividend        8  [STACK] long long 
 17980 ;;  divisor         8  [STACK] long long 
 17981 ;; Auto vars:     Size  Location     Type
 17982 ;;  quotient        8  [STACK] long long 
 17983 ;;  sign            1  [STACK] unsigned char 
 17984 ;;  counter         1  [STACK] unsigned char 
 17985 ;; Return value:  Size  Location     Type
 17986 ;;                  8  [STACK] long long 
 17987 ;; Registers used:
 17988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17989 ;; Tracked objects:
 17990 ;;		On entry : 0/3
 17991 ;;		On exit  : 0/0
 17992 ;;		Unchanged: 0/0
 17993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17998 ;;Total ram usage:        0 bytes
 17999 ;; Hardware stack levels used:    1
 18000 ;; Hardware stack levels required when called:    7
 18001 ;; This function calls:
 18002 ;;		Nothing
 18003 ;; This function is called by:
 18004 ;;		_dtoa
 18005 ;; This function uses a reentrant model
 18006 ;;
 18007                           
 18008                           	psect	text65
 18009  015A3A                     __ptext65:
 18010                           	opt callstack 0
 18011  015A3A                     ___aodiv:
 18012                           	opt callstack 0
 18013                           
 18014                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18015  015A3A  0E0A               	movlw	10
 18016  015A3C  26E1               	addwf	fsr1l,f,c
 18017  015A3E  0E00               	movlw	0
 18018  015A40  22E2               	addwfc	fsr1h,f,c
 18019                           
 18020                           ;stkvar	_sign @ sp[(-10)+8]
 18021                           
 18022                           ;incstack = 0
 18023  015A42  0EFE               	movlw	-2
 18024  015A44  6AE3               	clrf	plusw1,c
 18025                           
 18026                           ;stkvar	_divisor @ sp[(-10)+-16]
 18027  015A46  0EED               	movlw	-19
 18028  015A48  AEE3               	btfss	plusw1,7,c
 18029  015A4A  D028               	goto	l7050
 18030                           
 18031                           ;stkvar	_divisor @ sp[(-10)+-16]
 18032                           ;stkvar	_divisor @ sp[(-10)+-16]
 18033  015A4C  0EE6               	movlw	-26
 18034  015A4E  6CE3               	negf	plusw1,c
 18035  015A50  0EE7               	movlw	-25
 18036  015A52  1EE3               	comf	plusw1,f,c
 18037  015A54  0EE8               	movlw	-24
 18038  015A56  1EE3               	comf	plusw1,f,c
 18039  015A58  0EE9               	movlw	-23
 18040  015A5A  1EE3               	comf	plusw1,f,c
 18041  015A5C  0EEA               	movlw	-22
 18042  015A5E  1EE3               	comf	plusw1,f,c
 18043  015A60  0EEB               	movlw	-21
 18044  015A62  1EE3               	comf	plusw1,f,c
 18045  015A64  0EEC               	movlw	-20
 18046  015A66  1EE3               	comf	plusw1,f,c
 18047  015A68  0EED               	movlw	-19
 18048  015A6A  1EE3               	comf	plusw1,f,c
 18049  015A6C  E314               	bnc	u5160
 18050  015A6E  0EE7               	movlw	-25
 18051  015A70  2AE3               	incf	plusw1,f,c
 18052  015A72  E311               	bnc	u5160
 18053  015A74  0EE8               	movlw	-24
 18054  015A76  2AE3               	incf	plusw1,f,c
 18055  015A78  E30E               	bnc	u5160
 18056  015A7A  0EE9               	movlw	-23
 18057  015A7C  2AE3               	incf	plusw1,f,c
 18058  015A7E  E30B               	bnc	u5160
 18059  015A80  0EEA               	movlw	-22
 18060  015A82  2AE3               	incf	plusw1,f,c
 18061  015A84  E308               	bnc	u5160
 18062  015A86  0EEB               	movlw	-21
 18063  015A88  2AE3               	incf	plusw1,f,c
 18064  015A8A  E305               	bnc	u5160
 18065  015A8C  0EEC               	movlw	-20
 18066  015A8E  2AE3               	incf	plusw1,f,c
 18067  015A90  E302               	bnc	u5160
 18068  015A92  0EED               	movlw	-19
 18069  015A94  2AE3               	incf	plusw1,f,c
 18070  015A96                     u5160:
 18071                           
 18072                           ;stkvar	_sign @ sp[(-10)+8]
 18073  015A96  0EFE               	movlw	-2
 18074  015A98  6AE3               	clrf	plusw1,c
 18075  015A9A  2AE3               	incf	plusw1,f,c
 18076  015A9C                     l7050:
 18077                           
 18078                           ;stkvar	_dividend @ sp[(-10)+-8]
 18079  015A9C  0EF5               	movlw	-11
 18080  015A9E  AEE3               	btfss	plusw1,7,c
 18081  015AA0  D027               	goto	l7056
 18082                           
 18083                           ;stkvar	_dividend @ sp[(-10)+-8]
 18084                           ;stkvar	_dividend @ sp[(-10)+-8]
 18085  015AA2  0EEE               	movlw	-18
 18086  015AA4  6CE3               	negf	plusw1,c
 18087  015AA6  0EEF               	movlw	-17
 18088  015AA8  1EE3               	comf	plusw1,f,c
 18089  015AAA  0EF0               	movlw	-16
 18090  015AAC  1EE3               	comf	plusw1,f,c
 18091  015AAE  0EF1               	movlw	-15
 18092  015AB0  1EE3               	comf	plusw1,f,c
 18093  015AB2  0EF2               	movlw	-14
 18094  015AB4  1EE3               	comf	plusw1,f,c
 18095  015AB6  0EF3               	movlw	-13
 18096  015AB8  1EE3               	comf	plusw1,f,c
 18097  015ABA  0EF4               	movlw	-12
 18098  015ABC  1EE3               	comf	plusw1,f,c
 18099  015ABE  0EF5               	movlw	-11
 18100  015AC0  1EE3               	comf	plusw1,f,c
 18101  015AC2  E314               	bnc	u5180
 18102  015AC4  0EEF               	movlw	-17
 18103  015AC6  2AE3               	incf	plusw1,f,c
 18104  015AC8  E311               	bnc	u5180
 18105  015ACA  0EF0               	movlw	-16
 18106  015ACC  2AE3               	incf	plusw1,f,c
 18107  015ACE  E30E               	bnc	u5180
 18108  015AD0  0EF1               	movlw	-15
 18109  015AD2  2AE3               	incf	plusw1,f,c
 18110  015AD4  E30B               	bnc	u5180
 18111  015AD6  0EF2               	movlw	-14
 18112  015AD8  2AE3               	incf	plusw1,f,c
 18113  015ADA  E308               	bnc	u5180
 18114  015ADC  0EF3               	movlw	-13
 18115  015ADE  2AE3               	incf	plusw1,f,c
 18116  015AE0  E305               	bnc	u5180
 18117  015AE2  0EF4               	movlw	-12
 18118  015AE4  2AE3               	incf	plusw1,f,c
 18119  015AE6  E302               	bnc	u5180
 18120  015AE8  0EF5               	movlw	-11
 18121  015AEA  2AE3               	incf	plusw1,f,c
 18122  015AEC                     u5180:
 18123                           
 18124                           ;stkvar	_sign @ sp[(-10)+8]
 18125  015AEC  0EFE               	movlw	-2
 18126  015AEE  70E3               	btg	plusw1,0,c
 18127  015AF0                     l7056:
 18128                           
 18129                           ;stkvar	_quotient @ sp[(-10)+0]
 18130  015AF0  0E07               	movlw	7
 18131  015AF2  6E01               	movwf	btemp^0,c
 18132  015AF4  0EF6               	movlw	-10
 18133  015AF6                     u5191:
 18134  015AF6  6AE3               	clrf	plusw1,c
 18135  015AF8  2AE8               	incf	wreg,f,c
 18136  015AFA  0601               	decf	btemp^0,f,c
 18137  015AFC  E2FC               	bc	u5191
 18138                           
 18139                           ;stkvar	_divisor @ sp[(-10)+-16]
 18140  015AFE  0EE6               	movlw	-26
 18141  015B00  50E3               	movf	plusw1,w,c
 18142  015B02  E116               	bnz	u5200
 18143  015B04  0EE7               	movlw	-25
 18144  015B06  50E3               	movf	plusw1,w,c
 18145  015B08  E113               	bnz	u5200
 18146  015B0A  0EE8               	movlw	-24
 18147  015B0C  50E3               	movf	plusw1,w,c
 18148  015B0E  E110               	bnz	u5200
 18149  015B10  0EE9               	movlw	-23
 18150  015B12  50E3               	movf	plusw1,w,c
 18151  015B14  E10D               	bnz	u5200
 18152  015B16  0EEA               	movlw	-22
 18153  015B18  50E3               	movf	plusw1,w,c
 18154  015B1A  E10A               	bnz	u5200
 18155  015B1C  0EEB               	movlw	-21
 18156  015B1E  50E3               	movf	plusw1,w,c
 18157  015B20  E107               	bnz	u5200
 18158  015B22  0EEC               	movlw	-20
 18159  015B24  50E3               	movf	plusw1,w,c
 18160  015B26  E104               	bnz	u5200
 18161  015B28  0EED               	movlw	-19
 18162  015B2A  50E3               	movf	plusw1,w,c
 18163  015B2C  B4D8               	btfsc	status,2,c
 18164  015B2E  D088               	goto	u5230
 18165  015B30                     u5200:
 18166                           
 18167                           ;stkvar	_counter @ sp[(-10)+9]
 18168  015B30  0EFF               	movlw	-1
 18169  015B32  6AE3               	clrf	plusw1,c
 18170  015B34  D012               	goto	L19
 18171  015B36                     l7062:
 18172                           
 18173                           ;stkvar	_divisor @ sp[(-10)+-16]
 18174  015B36  90D8               	bcf	status,0,c
 18175  015B38  0EE6               	movlw	-26
 18176  015B3A  36E3               	rlcf	plusw1,f,c
 18177  015B3C  0EE7               	movlw	-25
 18178  015B3E  36E3               	rlcf	plusw1,f,c
 18179  015B40  0EE8               	movlw	-24
 18180  015B42  36E3               	rlcf	plusw1,f,c
 18181  015B44  0EE9               	movlw	-23
 18182  015B46  36E3               	rlcf	plusw1,f,c
 18183  015B48  0EEA               	movlw	-22
 18184  015B4A  36E3               	rlcf	plusw1,f,c
 18185  015B4C  0EEB               	movlw	-21
 18186  015B4E  36E3               	rlcf	plusw1,f,c
 18187  015B50  0EEC               	movlw	-20
 18188  015B52  36E3               	rlcf	plusw1,f,c
 18189  015B54  0EED               	movlw	-19
 18190  015B56  36E3               	rlcf	plusw1,f,c
 18191                           
 18192                           ;stkvar	_counter @ sp[(-10)+9]
 18193  015B58  0EFF               	movlw	-1
 18194  015B5A                     L19:
 18195  015B5A  2AE3               	incf	plusw1,f,c
 18196                           
 18197                           ;stkvar	_divisor @ sp[(-10)+-16]
 18198  015B5C  0EED               	movlw	-19
 18199  015B5E  AEE3               	btfss	plusw1,7,c
 18200  015B60  D7EA               	goto	l7062
 18201  015B62                     u5210:
 18202                           
 18203                           ;stkvar	_quotient @ sp[(-10)+0]
 18204  015B62  90D8               	bcf	status,0,c
 18205  015B64  0EF6               	movlw	-10
 18206  015B66  36E3               	rlcf	plusw1,f,c
 18207  015B68  0EF7               	movlw	-9
 18208  015B6A  36E3               	rlcf	plusw1,f,c
 18209  015B6C  0EF8               	movlw	-8
 18210  015B6E  36E3               	rlcf	plusw1,f,c
 18211  015B70  0EF9               	movlw	-7
 18212  015B72  36E3               	rlcf	plusw1,f,c
 18213  015B74  0EFA               	movlw	-6
 18214  015B76  36E3               	rlcf	plusw1,f,c
 18215  015B78  0EFB               	movlw	-5
 18216  015B7A  36E3               	rlcf	plusw1,f,c
 18217  015B7C  0EFC               	movlw	-4
 18218  015B7E  36E3               	rlcf	plusw1,f,c
 18219  015B80  0EFD               	movlw	-3
 18220  015B82  36E3               	rlcf	plusw1,f,c
 18221                           
 18222                           ;stkvar	_divisor @ sp[(-10)+-16]
 18223                           ;stkvar	_dividend @ sp[(-10)+-8]
 18224  015B84  50E1               	movf	fsr1l,w,c
 18225  015B86  0FEE               	addlw	-18
 18226  015B88  6ED9               	movwf	fsr2l,c
 18227  015B8A  50E2               	movf	fsr1h,w,c
 18228  015B8C  6EDA               	movwf	fsr2h,c
 18229  015B8E  0EFF               	movlw	255
 18230  015B90  22DA               	addwfc	fsr2h,f,c
 18231  015B92  0EE6               	movlw	-26
 18232  015B94  50E3               	movf	plusw1,w,c
 18233  015B96  5CDE               	subwf	postinc2,w,c
 18234  015B98  0EE7               	movlw	-25
 18235  015B9A  50E3               	movf	plusw1,w,c
 18236  015B9C  58DE               	subwfb	postinc2,w,c
 18237  015B9E  0EE8               	movlw	-24
 18238  015BA0  50E3               	movf	plusw1,w,c
 18239  015BA2  58DE               	subwfb	postinc2,w,c
 18240  015BA4  0EE9               	movlw	-23
 18241  015BA6  50E3               	movf	plusw1,w,c
 18242  015BA8  58DE               	subwfb	postinc2,w,c
 18243  015BAA  0EEA               	movlw	-22
 18244  015BAC  50E3               	movf	plusw1,w,c
 18245  015BAE  58DE               	subwfb	postinc2,w,c
 18246  015BB0  0EEB               	movlw	-21
 18247  015BB2  50E3               	movf	plusw1,w,c
 18248  015BB4  58DE               	subwfb	postinc2,w,c
 18249  015BB6  0EEC               	movlw	-20
 18250  015BB8  50E3               	movf	plusw1,w,c
 18251  015BBA  58DE               	subwfb	postinc2,w,c
 18252  015BBC  0EED               	movlw	-19
 18253  015BBE  50E3               	movf	plusw1,w,c
 18254  015BC0  58DE               	subwfb	postinc2,w,c
 18255  015BC2  A0D8               	btfss	status,0,c
 18256  015BC4  D021               	goto	l7074
 18257                           
 18258                           ;stkvar	_divisor @ sp[(-10)+-16]
 18259                           ;stkvar	_dividend @ sp[(-10)+-8]
 18260  015BC6  50E1               	movf	fsr1l,w,c
 18261  015BC8  0FEE               	addlw	-18
 18262  015BCA  6ED9               	movwf	fsr2l,c
 18263  015BCC  50E2               	movf	fsr1h,w,c
 18264  015BCE  6EDA               	movwf	fsr2h,c
 18265  015BD0  0EFF               	movlw	255
 18266  015BD2  22DA               	addwfc	fsr2h,f,c
 18267  015BD4  0EE6               	movlw	-26
 18268  015BD6  50E3               	movf	plusw1,w,c
 18269  015BD8  5EDE               	subwf	postinc2,f,c
 18270  015BDA  0EE7               	movlw	-25
 18271  015BDC  50E3               	movf	plusw1,w,c
 18272  015BDE  5ADE               	subwfb	postinc2,f,c
 18273  015BE0  0EE8               	movlw	-24
 18274  015BE2  50E3               	movf	plusw1,w,c
 18275  015BE4  5ADE               	subwfb	postinc2,f,c
 18276  015BE6  0EE9               	movlw	-23
 18277  015BE8  50E3               	movf	plusw1,w,c
 18278  015BEA  5ADE               	subwfb	postinc2,f,c
 18279  015BEC  0EEA               	movlw	-22
 18280  015BEE  50E3               	movf	plusw1,w,c
 18281  015BF0  5ADE               	subwfb	postinc2,f,c
 18282  015BF2  0EEB               	movlw	-21
 18283  015BF4  50E3               	movf	plusw1,w,c
 18284  015BF6  5ADE               	subwfb	postinc2,f,c
 18285  015BF8  0EEC               	movlw	-20
 18286  015BFA  50E3               	movf	plusw1,w,c
 18287  015BFC  5ADE               	subwfb	postinc2,f,c
 18288  015BFE  0EED               	movlw	-19
 18289  015C00  50E3               	movf	plusw1,w,c
 18290  015C02  5ADE               	subwfb	postinc2,f,c
 18291                           
 18292                           ;stkvar	_quotient @ sp[(-10)+0]
 18293  015C04  0EF6               	movlw	-10
 18294  015C06  80E3               	bsf	plusw1,0,c
 18295  015C08                     l7074:
 18296                           
 18297                           ;stkvar	_divisor @ sp[(-10)+-16]
 18298  015C08  90D8               	bcf	status,0,c
 18299  015C0A  0EED               	movlw	-19
 18300  015C0C  32E3               	rrcf	plusw1,f,c
 18301  015C0E  0EEC               	movlw	-20
 18302  015C10  32E3               	rrcf	plusw1,f,c
 18303  015C12  0EEB               	movlw	-21
 18304  015C14  32E3               	rrcf	plusw1,f,c
 18305  015C16  0EEA               	movlw	-22
 18306  015C18  32E3               	rrcf	plusw1,f,c
 18307  015C1A  0EE9               	movlw	-23
 18308  015C1C  32E3               	rrcf	plusw1,f,c
 18309  015C1E  0EE8               	movlw	-24
 18310  015C20  32E3               	rrcf	plusw1,f,c
 18311  015C22  0EE7               	movlw	-25
 18312  015C24  32E3               	rrcf	plusw1,f,c
 18313  015C26  0EE6               	movlw	-26
 18314  015C28  32E3               	rrcf	plusw1,f,c
 18315                           
 18316                           ;stkvar	_counter @ sp[(-10)+9]
 18317  015C2A  0EFF               	movlw	-1
 18318  015C2C  50E3               	movf	plusw1,w,c
 18319  015C2E  6E01               	movwf	btemp^0,c
 18320  015C30  0E01               	movlw	1
 18321  015C32  5E01               	subwf	btemp^0,f,c
 18322  015C34  0EFF               	movlw	-1
 18323  015C36  0060  F007  FFE3   	movff	btemp,plusw1
 18324  015C3C  A4D8               	btfss	status,2,c
 18325  015C3E  D791               	goto	u5210
 18326  015C40                     u5230:
 18327                           
 18328                           ;stkvar	_sign @ sp[(-10)+8]
 18329  015C40  0EFE               	movlw	-2
 18330  015C42  50E3               	movf	plusw1,w,c
 18331  015C44  B4D8               	btfsc	status,2,c
 18332  015C46  D025               	goto	u5250
 18333                           
 18334                           ;stkvar	_quotient @ sp[(-10)+0]
 18335                           ;stkvar	_quotient @ sp[(-10)+0]
 18336  015C48  0EF6               	movlw	-10
 18337  015C4A  6CE3               	negf	plusw1,c
 18338  015C4C  0EF7               	movlw	-9
 18339  015C4E  1EE3               	comf	plusw1,f,c
 18340  015C50  0EF8               	movlw	-8
 18341  015C52  1EE3               	comf	plusw1,f,c
 18342  015C54  0EF9               	movlw	-7
 18343  015C56  1EE3               	comf	plusw1,f,c
 18344  015C58  0EFA               	movlw	-6
 18345  015C5A  1EE3               	comf	plusw1,f,c
 18346  015C5C  0EFB               	movlw	-5
 18347  015C5E  1EE3               	comf	plusw1,f,c
 18348  015C60  0EFC               	movlw	-4
 18349  015C62  1EE3               	comf	plusw1,f,c
 18350  015C64  0EFD               	movlw	-3
 18351  015C66  1EE3               	comf	plusw1,f,c
 18352  015C68  E314               	bnc	u5250
 18353  015C6A  0EF7               	movlw	-9
 18354  015C6C  2AE3               	incf	plusw1,f,c
 18355  015C6E  E311               	bnc	u5250
 18356  015C70  0EF8               	movlw	-8
 18357  015C72  2AE3               	incf	plusw1,f,c
 18358  015C74  E30E               	bnc	u5250
 18359  015C76  0EF9               	movlw	-7
 18360  015C78  2AE3               	incf	plusw1,f,c
 18361  015C7A  E30B               	bnc	u5250
 18362  015C7C  0EFA               	movlw	-6
 18363  015C7E  2AE3               	incf	plusw1,f,c
 18364  015C80  E308               	bnc	u5250
 18365  015C82  0EFB               	movlw	-5
 18366  015C84  2AE3               	incf	plusw1,f,c
 18367  015C86  E305               	bnc	u5250
 18368  015C88  0EFC               	movlw	-4
 18369  015C8A  2AE3               	incf	plusw1,f,c
 18370  015C8C  E302               	bnc	u5250
 18371  015C8E  0EFD               	movlw	-3
 18372  015C90  2AE3               	incf	plusw1,f,c
 18373  015C92                     u5250:
 18374                           
 18375                           ;stkvar	_quotient @ sp[(-10)+0]
 18376  015C92  0EF6               	movlw	246
 18377  015C94  24E1               	addwf	fsr1l,w,c
 18378  015C96  6ED9               	movwf	fsr2l,c
 18379  015C98  0EFF               	movlw	255
 18380  015C9A  20E2               	addwfc	fsr1h,w,c
 18381  015C9C  6EDA               	movwf	fsr2h,c
 18382                           
 18383                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18384  015C9E  0E08               	movlw	8
 18385  015CA0  6E01               	movwf	btemp^0,c
 18386  015CA2  0EEE               	movlw	-18
 18387  015CA4                     us526999:
 18388  015CA4  006F FF7B FFE3     	movff	postinc2,plusw1
 18389  015CAA  28E8               	incf	wreg,w,c
 18390  015CAC  2E01               	decfsz	btemp^0,f,c
 18391  015CAE  D7FA               	bra	us526999
 18392                           
 18393                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18394  015CB0  0EF6               	movlw	246
 18395  015CB2  26E1               	addwf	fsr1l,f,c
 18396  015CB4  0EFF               	movlw	255
 18397  015CB6  22E2               	addwfc	fsr1h,f,c
 18398  015CB8  0012               	return		;funcret
 18399  015CBA                     __end_of___aodiv:
 18400                           	opt callstack 0
 18401                           
 18402 ;; *************** function _ctoa *****************
 18403 ;; Defined at:
 18404 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18405 ;; Parameters:    Size  Location     Type
 18406 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18407 ;;		 -> f(6), NULL(0), 
 18408 ;;  c               1  [STACK] unsigned char 
 18409 ;; Auto vars:     Size  Location     Type
 18410 ;;  w               2  [STACK] int 
 18411 ;;  l               2    0        int 
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  2  [STACK] int 
 18414 ;; Registers used:
 18415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/0
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18425 ;;Total ram usage:        0 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; Hardware stack levels required when called:   12
 18428 ;; This function calls:
 18429 ;;		_pad
 18430 ;; This function is called by:
 18431 ;;		_vfpfcnvrt
 18432 ;; This function uses a reentrant model
 18433 ;;
 18434                           
 18435                           	psect	text66
 18436  018540                     __ptext66:
 18437                           	opt callstack 0
 18438  018540                     _ctoa:
 18439                           	opt callstack 0
 18440                           
 18441                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18442  018540  52E6               	movf	postinc1,f,c
 18443  018542  52E6               	movf	postinc1,f,c
 18444                           
 18445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18446                           
 18447                           ;incstack = 0
 18448  018544  5024               	movf	_width^0,w,c
 18449  018546  1025               	iorwf	(_width+1)^0,w,c
 18450  018548  A4D8               	btfss	status,2,c
 18451  01854A  D009               	goto	l10414
 18452                           
 18453                           ;stkvar	_w @ sp[(-2)+0]
 18454  01854C  0EFE               	movlw	-2
 18455  01854E  0060  F093  FFE3   	movff	_width,plusw1
 18456  018554  0EFF               	movlw	-1
 18457  018556  0060  F097  FFE3   	movff	_width+1,plusw1
 18458  01855C  D016               	goto	l10416
 18459  01855E                     l10414:
 18460  01855E  0EFF               	movlw	255
 18461  018560  6E0B               	movwf	(btemp+10)^0,c
 18462  018562  0EFF               	movlw	255
 18463  018564  6E0C               	movwf	(btemp+11)^0,c
 18464  018566  0060  F090  F009   	movff	_width,btemp+8
 18465  01856C  0060  F094  F00A   	movff	_width+1,btemp+9
 18466  018572  500B               	movf	(btemp+10)^0,w,c
 18467  018574  2609               	addwf	(btemp+8)^0,f,c
 18468  018576  500C               	movf	(btemp+11)^0,w,c
 18469  018578  220A               	addwfc	(btemp+9)^0,f,c
 18470                           
 18471                           ;stkvar	_w @ sp[(-2)+0]
 18472  01857A  0EFE               	movlw	-2
 18473  01857C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18474  018582  0EFF               	movlw	-1
 18475  018584  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18476  01858A                     l10416:
 18477                           
 18478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18479                           ;stkvar	_c @ sp[(-2)+-3]
 18480  01858A  0EFB               	movlw	-5
 18481  01858C  006F FF8C  F394    	movff	plusw1,_dbuf
 18482                           
 18483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18484  018592  0103               	movlb	3	; () banked
 18485  018594  6B95               	clrf	(_dbuf+1)& (0+255),b
 18486                           
 18487                           ; BSR set to: 3
 18488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18489                           ;stkvar	_w @ sp[(-2)+0]
 18490  018596  0EFE               	movlw	-2
 18491  018598  006F FF8F FFE6     	movff	plusw1,postinc1
 18492  01859E  006F FF8F FFE6     	movff	plusw1,postinc1
 18493  0185A4  0E94               	movlw	low _dbuf
 18494  0185A6  6EE6               	movwf	postinc1,c
 18495  0185A8  0E03               	movlw	high _dbuf
 18496  0185AA  6EE6               	movwf	postinc1,c
 18497                           
 18498                           ;stkvar	_fp @ sp[(-6)+-2]
 18499  0185AC  0EF8               	movlw	-8
 18500  0185AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18501  0185B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18502  0185BA  EC63  F0BA         	call	_pad	;wreg free
 18503                           
 18504                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18505  0185BE  0EFB               	movlw	251
 18506  0185C0  26E1               	addwf	fsr1l,f,c
 18507  0185C2  0EFF               	movlw	255
 18508  0185C4  22E2               	addwfc	fsr1h,f,c
 18509  0185C6  0012               	return		;funcret
 18510  0185C8                     __end_of_ctoa:
 18511                           	opt callstack 0
 18512                           
 18513 ;; *************** function _pad *****************
 18514 ;; Defined at:
 18515 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18516 ;; Parameters:    Size  Location     Type
 18517 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18518 ;;		 -> f(6), NULL(0), 
 18519 ;;  buf             2  [STACK] PTR unsigned char 
 18520 ;;		 -> dbuf(80), 
 18521 ;;  p               2  [STACK] int 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;  w               2  [STACK] int 
 18524 ;;  i               2  [STACK] int 
 18525 ;; Return value:  Size  Location     Type
 18526 ;;                  2  [STACK] int 
 18527 ;; Registers used:
 18528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18529 ;; Tracked objects:
 18530 ;;		On entry : 0/3
 18531 ;;		On exit  : 0/0
 18532 ;;		Unchanged: 0/0
 18533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18538 ;;Total ram usage:        0 bytes
 18539 ;; Hardware stack levels used:    1
 18540 ;; Hardware stack levels required when called:   11
 18541 ;; This function calls:
 18542 ;;		_fputc
 18543 ;;		_fputs
 18544 ;;		_strlen
 18545 ;; This function is called by:
 18546 ;;		_ctoa
 18547 ;;		_dtoa
 18548 ;;		_efgtoa
 18549 ;;		_xtoa
 18550 ;; This function uses a reentrant model
 18551 ;;
 18552                           
 18553                           	psect	text67
 18554  0174C6                     __ptext67:
 18555                           	opt callstack 0
 18556  0174C6                     _pad:
 18557                           	opt callstack 0
 18558                           
 18559                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18560  0174C6  52E6               	movf	postinc1,f,c
 18561  0174C8  52E6               	movf	postinc1,f,c
 18562  0174CA  52E6               	movf	postinc1,f,c
 18563  0174CC  52E6               	movf	postinc1,f,c
 18564                           
 18565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18566                           
 18567                           ;incstack = 0
 18568  0174CE  A028               	btfss	_flags^0,0,c
 18569  0174D0  D010               	goto	l10388
 18570                           
 18571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18572                           ;stkvar	_fp @ sp[(-4)+-2]
 18573  0174D2  0EFA               	movlw	-6
 18574  0174D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18575  0174DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18576                           
 18577                           ;stkvar	_buf @ sp[(-6)+-4]
 18578  0174E0  0EF6               	movlw	-10
 18579  0174E2  006F FF8F FFE6     	movff	plusw1,postinc1
 18580  0174E8  006F FF8F FFE6     	movff	plusw1,postinc1
 18581  0174EE  EC2F  F0C1         	call	_fputs	;wreg free
 18582  0174F2                     l10388:
 18583                           
 18584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18585                           ;stkvar	_p @ sp[(-4)+-6]
 18586  0174F2  0EF7               	movlw	-9
 18587  0174F4  BEE3               	btfsc	plusw1,7,c
 18588  0174F6  D011               	goto	l10392
 18589                           
 18590                           ;stkvar	_p @ sp[(-4)+-6]
 18591                           ;stkvar	_w @ sp[(-4)+0]
 18592  0174F8  0EF6               	movlw	-10
 18593  0174FA  006F FF8C  F001    	movff	plusw1,btemp
 18594  017500  0EFC               	movlw	-4
 18595  017502  0060  F007  FFE3   	movff	btemp,plusw1
 18596  017508  0EF7               	movlw	-9
 18597  01750A  006F FF8C  F001    	movff	plusw1,btemp
 18598  017510  0EFD               	movlw	-3
 18599  017512  0060  F007  FFE3   	movff	btemp,plusw1
 18600  017518  D004               	goto	l2019
 18601  01751A                     l10392:
 18602                           
 18603                           ;stkvar	_w @ sp[(-4)+0]
 18604  01751A  0EFC               	movlw	-4
 18605  01751C  6AE3               	clrf	plusw1,c
 18606  01751E  0EFD               	movlw	-3
 18607  017520  6AE3               	clrf	plusw1,c
 18608  017522                     l2019:
 18609                           
 18610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18611                           ;stkvar	_i @ sp[(-4)+2]
 18612  017522  0EFE               	movlw	-2
 18613  017524  6AE3               	clrf	plusw1,c
 18614  017526  0EFF               	movlw	-1
 18615  017528  6AE3               	clrf	plusw1,c
 18616                           
 18617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18618  01752A  D01E               	goto	l10398
 18619  01752C                     l10394:
 18620                           
 18621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18622                           ;stkvar	_fp @ sp[(-4)+-2]
 18623  01752C  0EFA               	movlw	-6
 18624  01752E  006F FF8F FFE6     	movff	plusw1,postinc1
 18625  017534  006F FF8F FFE6     	movff	plusw1,postinc1
 18626  01753A  0E20               	movlw	32
 18627  01753C  6EE6               	movwf	postinc1,c
 18628  01753E  0E00               	movlw	0
 18629  017540  6EE6               	movwf	postinc1,c
 18630  017542  EC45  F0B9         	call	_fputc	;wreg free
 18631                           
 18632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18633                           ;stkvar	_i @ sp[(-4)+2]
 18634  017546  0EFE               	movlw	-2
 18635  017548  50E3               	movf	plusw1,w,c
 18636  01754A  0F01               	addlw	1
 18637  01754C  6E01               	movwf	btemp^0,c
 18638  01754E  0EFE               	movlw	-2
 18639  017550  0060  F007  FFE3   	movff	btemp,plusw1
 18640  017556  6A01               	clrf	btemp^0,c
 18641  017558  0EFF               	movlw	-1
 18642  01755A  50E3               	movf	plusw1,w,c
 18643  01755C  2001               	addwfc	btemp^0,w,c
 18644  01755E  6E01               	movwf	btemp^0,c
 18645  017560  0EFF               	movlw	-1
 18646  017562  0060  F007  FFE3   	movff	btemp,plusw1
 18647  017568                     l10398:
 18648                           
 18649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18650                           ;stkvar	_w @ sp[(-4)+0]
 18651                           ;stkvar	_i @ sp[(-4)+2]
 18652  017568  50E1               	movf	fsr1l,w,c
 18653  01756A  0FFE               	addlw	-2
 18654  01756C  6ED9               	movwf	fsr2l,c
 18655  01756E  50E2               	movf	fsr1h,w,c
 18656  017570  6EDA               	movwf	fsr2h,c
 18657  017572  0EFF               	movlw	255
 18658  017574  22DA               	addwfc	fsr2h,f,c
 18659  017576  0EFC               	movlw	-4
 18660  017578  50E3               	movf	plusw1,w,c
 18661  01757A  5CDE               	subwf	postinc2,w,c
 18662  01757C  50DE               	movf	postinc2,w,c
 18663  01757E  0A80               	xorlw	128
 18664  017580  6E01               	movwf	btemp^0,c
 18665  017582  0EFD               	movlw	-3
 18666  017584  50E3               	movf	plusw1,w,c
 18667  017586  0A80               	xorlw	128
 18668  017588  5801               	subwfb	btemp^0,w,c
 18669  01758A  A0D8               	btfss	status,0,c
 18670  01758C  D7CF               	goto	l10394
 18671                           
 18672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18673  01758E  B028               	btfsc	_flags^0,0,c
 18674  017590  D010               	goto	l10402
 18675                           
 18676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18677                           ;stkvar	_fp @ sp[(-4)+-2]
 18678  017592  0EFA               	movlw	-6
 18679  017594  006F FF8F FFE6     	movff	plusw1,postinc1
 18680  01759A  006F FF8F FFE6     	movff	plusw1,postinc1
 18681                           
 18682                           ;stkvar	_buf @ sp[(-6)+-4]
 18683  0175A0  0EF6               	movlw	-10
 18684  0175A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18685  0175A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18686  0175AE  EC2F  F0C1         	call	_fputs	;wreg free
 18687  0175B2                     l10402:
 18688                           
 18689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18690                           ;stkvar	_w @ sp[(-4)+0]
 18691                           ;stkvar	_buf @ sp[(-4)+-4]
 18692  0175B2  0EF8               	movlw	-8
 18693  0175B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18694  0175BA  006F FF8F FFE6     	movff	plusw1,postinc1
 18695  0175C0  ECDE  F0C0         	call	_strlen	;wreg free
 18696  0175C4  0EFC               	movlw	-4
 18697  0175C6  50E3               	movf	plusw1,w,c
 18698  0175C8  2601               	addwf	btemp^0,f,c
 18699  0175CA  0EFD               	movlw	-3
 18700  0175CC  50E3               	movf	plusw1,w,c
 18701  0175CE  2202               	addwfc	(btemp+1)^0,f,c
 18702                           
 18703                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18704  0175D0  0EF6               	movlw	246
 18705  0175D2  26E1               	addwf	fsr1l,f,c
 18706  0175D4  0EFF               	movlw	255
 18707  0175D6  22E2               	addwfc	fsr1h,f,c
 18708  0175D8  0012               	return		;funcret
 18709  0175DA                     __end_of_pad:
 18710                           	opt callstack 0
 18711                           
 18712 ;; *************** function _strlen *****************
 18713 ;; Defined at:
 18714 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18715 ;; Parameters:    Size  Location     Type
 18716 ;;  s               2  [STACK] PTR const unsigned char 
 18717 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18718 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18719 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18720 ;; Auto vars:     Size  Location     Type
 18721 ;;  a               2  [STACK] PTR const unsigned char 
 18722 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18723 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18724 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18725 ;; Return value:  Size  Location     Type
 18726 ;;                  2  [STACK] unsigned int 
 18727 ;; Registers used:
 18728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18729 ;; Tracked objects:
 18730 ;;		On entry : 0/0
 18731 ;;		On exit  : 0/0
 18732 ;;		Unchanged: 0/0
 18733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18738 ;;Total ram usage:        0 bytes
 18739 ;; Hardware stack levels used:    1
 18740 ;; Hardware stack levels required when called:    7
 18741 ;; This function calls:
 18742 ;;		Nothing
 18743 ;; This function is called by:
 18744 ;;		_eaDogM_WriteString
 18745 ;;		_pad
 18746 ;;		_stoa
 18747 ;; This function uses a reentrant model
 18748 ;;
 18749                           
 18750                           	psect	text68
 18751  0181BC                     __ptext68:
 18752                           	opt callstack 0
 18753  0181BC                     _strlen:
 18754                           	opt callstack 0
 18755                           
 18756                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18757  0181BC  52E6               	movf	postinc1,f,c
 18758  0181BE  52E6               	movf	postinc1,f,c
 18759                           
 18760                           ;stkvar	_s @ sp[(-2)+-2]
 18761                           
 18762                           ;incstack = 0
 18763  0181C0  0EFC               	movlw	-4
 18764  0181C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18765  0181C8  0EFD               	movlw	-3
 18766  0181CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18767                           
 18768                           ;stkvar	_a @ sp[(-2)+0]
 18769  0181D0  0EFF               	movlw	-1
 18770  0181D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18771  0181D8  0EFE               	movlw	-2
 18772  0181DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18773  0181E0  D011               	goto	l6888
 18774  0181E2                     l6886:
 18775                           
 18776                           ;stkvar	_s @ sp[(-2)+-2]
 18777  0181E2  0EFC               	movlw	-4
 18778  0181E4  50E3               	movf	plusw1,w,c
 18779  0181E6  0F01               	addlw	1
 18780  0181E8  6E01               	movwf	btemp^0,c
 18781  0181EA  0EFC               	movlw	-4
 18782  0181EC  0060  F007  FFE3   	movff	btemp,plusw1
 18783  0181F2  6A01               	clrf	btemp^0,c
 18784  0181F4  0EFD               	movlw	-3
 18785  0181F6  50E3               	movf	plusw1,w,c
 18786  0181F8  2001               	addwfc	btemp^0,w,c
 18787  0181FA  6E01               	movwf	btemp^0,c
 18788  0181FC  0EFD               	movlw	-3
 18789  0181FE  0060  F007  FFE3   	movff	btemp,plusw1
 18790  018204                     l6888:
 18791                           
 18792                           ;stkvar	_s @ sp[(-2)+-2]
 18793  018204  0EFC               	movlw	-4
 18794  018206  006F FF8F FFF6     	movff	plusw1,tblptrl
 18795  01820C  0EFD               	movlw	-3
 18796  01820E  006F FF8F FFF7     	movff	plusw1,tblptrh
 18797  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 18798  018216  6EF8               	movwf	tblptru,c
 18799  018218  0E1F               	movlw	(high __ramtop+-1)
 18800  01821A  64F7               	cpfsgt	tblptrh,c
 18801  01821C  D003               	bra	u4747
 18802  01821E  0008               	tblrd		*
 18803  018220  50F5               	movf	tablat,w,c
 18804  018222  D007               	bra	u4740
 18805  018224                     u4747:
 18806  018224  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18807  01822A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18808  018230  50EF               	movf	indf0,w,c
 18809  018232                     u4740:
 18810  018232  0900               	iorlw	0
 18811  018234  A4D8               	btfss	status,2,c
 18812  018236  D7D5               	goto	l6886
 18813                           
 18814                           ;stkvar	_a @ sp[(-2)+0]
 18815                           ;stkvar	_s @ sp[(-2)+-2]
 18816  018238  0EFC               	movlw	-4
 18817  01823A  006F FF8C  F001    	movff	plusw1,btemp
 18818  018240  0EFD               	movlw	-3
 18819  018242  006F FF8C  F002    	movff	plusw1,btemp+1
 18820  018248  0EFE               	movlw	-2
 18821  01824A  50E3               	movf	plusw1,w,c
 18822  01824C  5E01               	subwf	btemp^0,f,c
 18823  01824E  0EFF               	movlw	-1
 18824  018250  50E3               	movf	plusw1,w,c
 18825  018252  5A02               	subwfb	(btemp+1)^0,f,c
 18826                           
 18827                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18828  018254  52E5               	movf	postdec1,f,c
 18829  018256  52E5               	movf	postdec1,f,c
 18830  018258  52E5               	movf	postdec1,f,c
 18831  01825A  52E5               	movf	postdec1,f,c
 18832  01825C  0012               	return		;funcret
 18833  01825E                     __end_of_strlen:
 18834                           	opt callstack 0
 18835                           
 18836 ;; *************** function _fputs *****************
 18837 ;; Defined at:
 18838 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18839 ;; Parameters:    Size  Location     Type
 18840 ;;  s               2  [STACK] PTR const unsigned char 
 18841 ;;		 -> dbuf(80), 
 18842 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18843 ;;		 -> f(6), NULL(0), 
 18844 ;; Auto vars:     Size  Location     Type
 18845 ;;  i               2  [STACK] int 
 18846 ;;  c               1  [STACK] unsigned char 
 18847 ;; Return value:  Size  Location     Type
 18848 ;;                  2  [STACK] int 
 18849 ;; Registers used:
 18850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18851 ;; Tracked objects:
 18852 ;;		On entry : 0/3
 18853 ;;		On exit  : 0/0
 18854 ;;		Unchanged: 0/0
 18855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18860 ;;Total ram usage:        0 bytes
 18861 ;; Hardware stack levels used:    1
 18862 ;; Hardware stack levels required when called:   10
 18863 ;; This function calls:
 18864 ;;		_fputc
 18865 ;; This function is called by:
 18866 ;;		_pad
 18867 ;; This function uses a reentrant model
 18868 ;;
 18869                           
 18870                           	psect	text69
 18871  01825E                     __ptext69:
 18872                           	opt callstack 0
 18873  01825E                     _fputs:
 18874                           	opt callstack 0
 18875                           
 18876                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18877  01825E  52E6               	movf	postinc1,f,c
 18878  018260  52E6               	movf	postinc1,f,c
 18879  018262  52E6               	movf	postinc1,f,c
 18880                           
 18881                           ;stkvar	_i @ sp[(-3)+0]
 18882                           
 18883                           ;incstack = 0
 18884  018264  0EFD               	movlw	-3
 18885  018266  6AE3               	clrf	plusw1,c
 18886  018268  0EFE               	movlw	-2
 18887  01826A  6AE3               	clrf	plusw1,c
 18888  01826C  D01F               	goto	l10382
 18889  01826E                     l10378:
 18890                           
 18891                           ;stkvar	_fp @ sp[(-3)+-4]
 18892  01826E  0EF9               	movlw	-7
 18893  018270  006F FF8F FFE6     	movff	plusw1,postinc1
 18894  018276  006F FF8F FFE6     	movff	plusw1,postinc1
 18895                           
 18896                           ;stkvar	_c @ sp[(-5)+2]
 18897  01827C  0EFD               	movlw	-3
 18898  01827E  50E3               	movf	plusw1,w,c
 18899  018280  6EE6               	movwf	postinc1,c
 18900  018282  0E00               	movlw	0
 18901  018284  6EE6               	movwf	postinc1,c
 18902  018286  EC45  F0B9         	call	_fputc	;wreg free
 18903                           
 18904                           ;stkvar	_i @ sp[(-3)+0]
 18905  01828A  0EFD               	movlw	-3
 18906  01828C  50E3               	movf	plusw1,w,c
 18907  01828E  0F01               	addlw	1
 18908  018290  6E01               	movwf	btemp^0,c
 18909  018292  0EFD               	movlw	-3
 18910  018294  0060  F007  FFE3   	movff	btemp,plusw1
 18911  01829A  6A01               	clrf	btemp^0,c
 18912  01829C  0EFE               	movlw	-2
 18913  01829E  50E3               	movf	plusw1,w,c
 18914  0182A0  2001               	addwfc	btemp^0,w,c
 18915  0182A2  6E01               	movwf	btemp^0,c
 18916  0182A4  0EFE               	movlw	-2
 18917  0182A6  0060  F007  FFE3   	movff	btemp,plusw1
 18918  0182AC                     l10382:
 18919                           
 18920                           ;stkvar	_i @ sp[(-3)+0]
 18921  0182AC  0EFD               	movlw	-3
 18922  0182AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18923  0182B4  0EFE               	movlw	-2
 18924  0182B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18925                           
 18926                           ;stkvar	_s @ sp[(-3)+-2]
 18927  0182BC  0EFB               	movlw	-5
 18928  0182BE  006F FF8C  F009    	movff	plusw1,btemp+8
 18929  0182C4  0EFC               	movlw	-4
 18930  0182C6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18931  0182CC  500B               	movf	(btemp+10)^0,w,c
 18932  0182CE  2409               	addwf	(btemp+8)^0,w,c
 18933  0182D0  6ED9               	movwf	fsr2l,c
 18934  0182D2  500C               	movf	(btemp+11)^0,w,c
 18935  0182D4  200A               	addwfc	(btemp+9)^0,w,c
 18936  0182D6  6EDA               	movwf	fsr2h,c
 18937  0182D8  50DF               	movf	indf2,w,c
 18938  0182DA  6E0C               	movwf	(btemp+11)^0,c
 18939                           
 18940                           ;stkvar	_c @ sp[(-3)+2]
 18941  0182DC  0EFF               	movlw	-1
 18942  0182DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18943  0182E4  0EFF               	movlw	-1
 18944  0182E6  50E3               	movf	plusw1,w,c
 18945  0182E8  A4D8               	btfss	status,2,c
 18946  0182EA  D7C1               	goto	l10378
 18947                           
 18948                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18949  0182EC  0EF9               	movlw	249
 18950  0182EE  26E1               	addwf	fsr1l,f,c
 18951  0182F0  0EFF               	movlw	255
 18952  0182F2  22E2               	addwfc	fsr1h,f,c
 18953  0182F4  0012               	return		;funcret
 18954  0182F6                     __end_of_fputs:
 18955                           	opt callstack 0
 18956                           
 18957 ;; *************** function _fputc *****************
 18958 ;; Defined at:
 18959 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;  c               2  [STACK] int 
 18962 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18963 ;;		 -> f(6), NULL(0), 
 18964 ;; Auto vars:     Size  Location     Type
 18965 ;;		None
 18966 ;; Return value:  Size  Location     Type
 18967 ;;                  2  [STACK] int 
 18968 ;; Registers used:
 18969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18970 ;; Tracked objects:
 18971 ;;		On entry : 0/0
 18972 ;;		On exit  : 0/0
 18973 ;;		Unchanged: 0/0
 18974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18979 ;;Total ram usage:        0 bytes
 18980 ;; Hardware stack levels used:    1
 18981 ;; Hardware stack levels required when called:    9
 18982 ;; This function calls:
 18983 ;;		_putch
 18984 ;; This function is called by:
 18985 ;;		_pad
 18986 ;;		_stoa
 18987 ;;		_vfpfcnvrt
 18988 ;;		_fputs
 18989 ;; This function uses a reentrant model
 18990 ;;
 18991                           
 18992                           	psect	text70
 18993  01728A                     __ptext70:
 18994                           	opt callstack 0
 18995  01728A                     _fputc:
 18996                           	opt callstack 12
 18997                           
 18998                           ;stkvar	_fp @ sp[(0)+-4]
 18999                           
 19000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19001                           ;incstack = 0
 19002  01728A  0EFC               	movlw	-4
 19003  01728C  006F FF8C  F001    	movff	plusw1,btemp
 19004  017292  0EFD               	movlw	-3
 19005  017294  50E3               	movf	plusw1,w,c
 19006  017296  1001               	iorwf	btemp^0,w,c
 19007  017298  B4D8               	btfsc	status,2,c
 19008  01729A  D009               	goto	u9360
 19009                           
 19010                           ;stkvar	_fp @ sp[(0)+-4]
 19011  01729C  0EFC               	movlw	-4
 19012  01729E  006F FF8C  F001    	movff	plusw1,btemp
 19013  0172A4  0EFD               	movlw	-3
 19014  0172A6  50E3               	movf	plusw1,w,c
 19015  0172A8  1001               	iorwf	btemp^0,w,c
 19016  0172AA  A4D8               	btfss	status,2,c
 19017  0172AC  D006               	goto	l10366
 19018  0172AE                     u9360:
 19019                           
 19020                           ;stkvar	_c @ sp[(0)+-2]
 19021  0172AE  0EFE               	movlw	-2
 19022  0172B0  50E3               	movf	plusw1,w,c
 19023  0172B2  6EE6               	movwf	postinc1,c
 19024  0172B4  EC2A  F0CC         	call	_putch	;wreg free
 19025  0172B8  D075               	goto	l3037
 19026  0172BA                     l10366:
 19027                           
 19028                           ;stkvar	_fp @ sp[(0)+-4]
 19029  0172BA  0EFC               	movlw	-4
 19030  0172BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19031  0172C2  0EFD               	movlw	-3
 19032  0172C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19033  0172CA  0E04               	movlw	4
 19034  0172CC  240B               	addwf	(btemp+10)^0,w,c
 19035  0172CE  6ED9               	movwf	fsr2l,c
 19036  0172D0  0E00               	movlw	0
 19037  0172D2  200C               	addwfc	(btemp+11)^0,w,c
 19038  0172D4  6EDA               	movwf	fsr2h,c
 19039  0172D6  50DE               	movf	postinc2,w,c
 19040  0172D8  10DE               	iorwf	postinc2,w,c
 19041  0172DA  B4D8               	btfsc	status,2,c
 19042  0172DC  D026               	goto	u9380
 19043                           
 19044                           ;stkvar	_fp @ sp[(0)+-4]
 19045  0172DE  0EFC               	movlw	-4
 19046  0172E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19047  0172E6  0EFD               	movlw	-3
 19048  0172E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19049  0172EE  0E04               	movlw	4
 19050  0172F0  240B               	addwf	(btemp+10)^0,w,c
 19051  0172F2  6ED9               	movwf	fsr2l,c
 19052  0172F4  0E00               	movlw	0
 19053  0172F6  200C               	addwfc	(btemp+11)^0,w,c
 19054  0172F8  6EDA               	movwf	fsr2h,c
 19055                           
 19056                           ;stkvar	_fp @ sp[(0)+-4]
 19057  0172FA  0EFC               	movlw	-4
 19058  0172FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19059  017302  0EFD               	movlw	-3
 19060  017304  006F FF8C  F00C    	movff	plusw1,btemp+11
 19061  01730A  0E02               	movlw	2
 19062  01730C  240B               	addwf	(btemp+10)^0,w,c
 19063  01730E  6EE9               	movwf	fsr0l,c
 19064  017310  0E00               	movlw	0
 19065  017312  200C               	addwfc	(btemp+11)^0,w,c
 19066  017314  6EEA               	movwf	fsr0h,c
 19067  017316  50DE               	movf	postinc2,w,c
 19068  017318  5CEE               	subwf	postinc0,w,c
 19069  01731A  50EE               	movf	postinc0,w,c
 19070  01731C  0A80               	xorlw	128
 19071  01731E  6E01               	movwf	btemp^0,c
 19072  017320  50DE               	movf	postinc2,w,c
 19073  017322  0A80               	xorlw	128
 19074  017324  5801               	subwfb	btemp^0,w,c
 19075  017326  B0D8               	btfsc	status,0,c
 19076  017328  D03D               	goto	l3037
 19077  01732A                     u9380:
 19078                           
 19079                           ;stkvar	_c @ sp[(0)+-2]
 19080                           ;stkvar	_fp @ sp[(0)+-4]
 19081  01732A  0EFC               	movlw	-4
 19082  01732C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19083  017332  0EFD               	movlw	-3
 19084  017334  006F FF8C  F00C    	movff	plusw1,btemp+11
 19085  01733A  0E02               	movlw	2
 19086  01733C  240B               	addwf	(btemp+10)^0,w,c
 19087  01733E  6ED9               	movwf	fsr2l,c
 19088  017340  0E00               	movlw	0
 19089  017342  200C               	addwfc	(btemp+11)^0,w,c
 19090  017344  6EDA               	movwf	fsr2h,c
 19091  017346  006F FF78  F00B    	movff	postinc2,btemp+10
 19092  01734C  006F FF74  F00C    	movff	postdec2,btemp+11
 19093                           
 19094                           ;stkvar	_fp @ sp[(0)+-4]
 19095  017352  0EFC               	movlw	-4
 19096  017354  006F FF8F FFD9     	movff	plusw1,fsr2l
 19097  01735A  0EFD               	movlw	-3
 19098  01735C  006F FF8F FFDA     	movff	plusw1,fsr2h
 19099  017362  006F FF78  F009    	movff	postinc2,btemp+8
 19100  017368  006F FF74  F00A    	movff	postdec2,btemp+9
 19101  01736E  500B               	movf	(btemp+10)^0,w,c
 19102  017370  2409               	addwf	(btemp+8)^0,w,c
 19103  017372  6ED9               	movwf	fsr2l,c
 19104  017374  500C               	movf	(btemp+11)^0,w,c
 19105  017376  200A               	addwfc	(btemp+9)^0,w,c
 19106  017378  6EDA               	movwf	fsr2h,c
 19107  01737A  0EFE               	movlw	-2
 19108  01737C  006F FF8F FFDF     	movff	plusw1,indf2
 19109                           
 19110                           ;stkvar	_fp @ sp[(0)+-4]
 19111  017382  0EFC               	movlw	-4
 19112  017384  006F FF8C  F00B    	movff	plusw1,btemp+10
 19113  01738A  0EFD               	movlw	-3
 19114  01738C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19115  017392  0E02               	movlw	2
 19116  017394  240B               	addwf	(btemp+10)^0,w,c
 19117  017396  6ED9               	movwf	fsr2l,c
 19118  017398  0E00               	movlw	0
 19119  01739A  200C               	addwfc	(btemp+11)^0,w,c
 19120  01739C  6EDA               	movwf	fsr2h,c
 19121  01739E  2ADE               	incf	postinc2,f,c
 19122  0173A0  0E00               	movlw	0
 19123  0173A2  22DD               	addwfc	postdec2,f,c
 19124  0173A4                     l3037:
 19125                           
 19126                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19127  0173A4  52E5               	movf	postdec1,f,c
 19128  0173A6  52E5               	movf	postdec1,f,c
 19129  0173A8  52E5               	movf	postdec1,f,c
 19130  0173AA  52E5               	movf	postdec1,f,c
 19131  0173AC  0012               	return		;funcret
 19132  0173AE                     __end_of_fputc:
 19133                           	opt callstack 0
 19134                           
 19135 ;; *************** function _putch *****************
 19136 ;; Defined at:
 19137 ;;		line 168 in file "eadog.c"
 19138 ;; Parameters:    Size  Location     Type
 19139 ;;  c               1  [STACK] unsigned char 
 19140 ;; Auto vars:     Size  Location     Type
 19141 ;;		None
 19142 ;; Return value:  Size  Location     Type
 19143 ;;                  1  [STACK] void 
 19144 ;; Registers used:
 19145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19146 ;; Tracked objects:
 19147 ;;		On entry : 0/0
 19148 ;;		On exit  : 0/0
 19149 ;;		Unchanged: 0/0
 19150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19155 ;;Total ram usage:        0 bytes
 19156 ;; Hardware stack levels used:    1
 19157 ;; Hardware stack levels required when called:    8
 19158 ;; This function calls:
 19159 ;;		_ringBufS_put_dma
 19160 ;; This function is called by:
 19161 ;;		_fputc
 19162 ;; This function uses a reentrant model
 19163 ;;
 19164                           
 19165                           	psect	text71
 19166  019854                     __ptext71:
 19167                           	opt callstack 0
 19168  019854                     _putch:
 19169                           	opt callstack 12
 19170                           
 19171                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19172                           ;stkvar	_c @ sp[(0)+-1]
 19173                           
 19174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19175                           ;incstack = 0
 19176  019854  0EFF               	movlw	-1
 19177  019856  50E3               	movf	plusw1,w,c
 19178  019858  6EE6               	movwf	postinc1,c
 19179  01985A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 19180  019860  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 19181  019866  EC36  F0C0         	call	_ringBufS_put_dma	;wreg free
 19182                           
 19183                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19184  01986A  52E5               	movf	postdec1,f,c
 19185  01986C  0012               	return		;funcret
 19186  01986E                     __end_of_putch:
 19187                           	opt callstack 0
 19188                           
 19189 ;; *************** function _ringBufS_put_dma *****************
 19190 ;; Defined at:
 19191 ;;		line 67 in file "ringbufs.c"
 19192 ;; Parameters:    Size  Location     Type
 19193 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19194 ;;		 -> ring_buf1(67), 
 19195 ;;  c               1  [STACK] const unsigned char 
 19196 ;; Auto vars:     Size  Location     Type
 19197 ;;		None
 19198 ;; Return value:  Size  Location     Type
 19199 ;;                  1  [STACK] void 
 19200 ;; Registers used:
 19201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19202 ;; Tracked objects:
 19203 ;;		On entry : 0/0
 19204 ;;		On exit  : 0/0
 19205 ;;		Unchanged: 0/0
 19206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19211 ;;Total ram usage:        0 bytes
 19212 ;; Hardware stack levels used:    1
 19213 ;; Hardware stack levels required when called:    7
 19214 ;; This function calls:
 19215 ;;		Nothing
 19216 ;; This function is called by:
 19217 ;;		_putch
 19218 ;; This function uses a reentrant model
 19219 ;;
 19220                           
 19221                           	psect	text72
 19222  01806C                     __ptext72:
 19223                           	opt callstack 0
 19224  01806C                     _ringBufS_put_dma:
 19225                           	opt callstack 12
 19226                           
 19227                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19228                           ;stkvar	__this @ sp[(0)+-2]
 19229                           
 19230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19231                           ;incstack = 0
 19232  01806C  0EFE               	movlw	-2
 19233  01806E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19234  018074  0EFF               	movlw	-1
 19235  018076  006F FF8C  F00C    	movff	plusw1,btemp+11
 19236  01807C  0E42               	movlw	66
 19237  01807E  240B               	addwf	(btemp+10)^0,w,c
 19238  018080  6ED9               	movwf	fsr2l,c
 19239  018082  0E00               	movlw	0
 19240  018084  200C               	addwfc	(btemp+11)^0,w,c
 19241  018086  6EDA               	movwf	fsr2h,c
 19242  018088  0E40               	movlw	64
 19243  01808A  60DF               	cpfslt	indf2,c
 19244  01808C  D040               	goto	l1580
 19245                           
 19246                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19247                           ;stkvar	_c @ sp[(0)+-3]
 19248                           ;stkvar	__this @ sp[(0)+-2]
 19249  01808E  0EFE               	movlw	-2
 19250  018090  006F FF8C  F00B    	movff	plusw1,btemp+10
 19251  018096  0EFF               	movlw	-1
 19252  018098  006F FF8C  F00C    	movff	plusw1,btemp+11
 19253  01809E  0E40               	movlw	64
 19254  0180A0  240B               	addwf	(btemp+10)^0,w,c
 19255  0180A2  6ED9               	movwf	fsr2l,c
 19256  0180A4  0E00               	movlw	0
 19257  0180A6  200C               	addwfc	(btemp+11)^0,w,c
 19258  0180A8  6EDA               	movwf	fsr2h,c
 19259  0180AA  50DF               	movf	indf2,w,c
 19260  0180AC  6E0C               	movwf	(btemp+11)^0,c
 19261                           
 19262                           ;stkvar	__this @ sp[(0)+-2]
 19263  0180AE  0EFE               	movlw	-2
 19264  0180B0  006F FF8C  F009    	movff	plusw1,btemp+8
 19265  0180B6  0EFF               	movlw	-1
 19266  0180B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 19267  0180BE  500C               	movf	(btemp+11)^0,w,c
 19268  0180C0  2409               	addwf	(btemp+8)^0,w,c
 19269  0180C2  6ED9               	movwf	fsr2l,c
 19270  0180C4  0E00               	movlw	0
 19271  0180C6  200A               	addwfc	(btemp+9)^0,w,c
 19272  0180C8  6EDA               	movwf	fsr2h,c
 19273  0180CA  0EFD               	movlw	-3
 19274  0180CC  006F FF8F FFDF     	movff	plusw1,indf2
 19275                           
 19276                           ;ringbufs.c: 71:   ++_this->head;
 19277                           ;stkvar	__this @ sp[(0)+-2]
 19278  0180D2  0EFE               	movlw	-2
 19279  0180D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19280  0180DA  0EFF               	movlw	-1
 19281  0180DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19282  0180E2  0E40               	movlw	64
 19283  0180E4  240B               	addwf	(btemp+10)^0,w,c
 19284  0180E6  6ED9               	movwf	fsr2l,c
 19285  0180E8  0E00               	movlw	0
 19286  0180EA  200C               	addwfc	(btemp+11)^0,w,c
 19287  0180EC  6EDA               	movwf	fsr2h,c
 19288  0180EE  2ADF               	incf	indf2,f,c
 19289                           
 19290                           ;ringbufs.c: 72:   ++_this->count;
 19291                           ;stkvar	__this @ sp[(0)+-2]
 19292  0180F0  0EFE               	movlw	-2
 19293  0180F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19294  0180F8  0EFF               	movlw	-1
 19295  0180FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19296  018100  0E42               	movlw	66
 19297  018102  240B               	addwf	(btemp+10)^0,w,c
 19298  018104  6ED9               	movwf	fsr2l,c
 19299  018106  0E00               	movlw	0
 19300  018108  200C               	addwfc	(btemp+11)^0,w,c
 19301  01810A  6EDA               	movwf	fsr2h,c
 19302  01810C  2ADF               	incf	indf2,f,c
 19303  01810E                     l1580:
 19304                           
 19305                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19306  01810E  52E5               	movf	postdec1,f,c
 19307  018110  52E5               	movf	postdec1,f,c
 19308  018112  52E5               	movf	postdec1,f,c
 19309  018114  0012               	return		;funcret
 19310  018116                     __end_of_ringBufS_put_dma:
 19311                           	opt callstack 0
 19312                           
 19313 ;; *************** function _atoi *****************
 19314 ;; Defined at:
 19315 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19316 ;; Parameters:    Size  Location     Type
 19317 ;;  s               2  [STACK] PTR const unsigned char 
 19318 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 19319 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 19320 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 19321 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 19322 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 19323 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
 19324 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 19325 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 19326 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 19327 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 19328 ;; Auto vars:     Size  Location     Type
 19329 ;;  n               2  [STACK] int 
 19330 ;;  neg             2  [STACK] int 
 19331 ;; Return value:  Size  Location     Type
 19332 ;;                  2  [STACK] int 
 19333 ;; Registers used:
 19334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19335 ;; Tracked objects:
 19336 ;;		On entry : 0/0
 19337 ;;		On exit  : 0/0
 19338 ;;		Unchanged: 0/0
 19339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19344 ;;Total ram usage:        0 bytes
 19345 ;; Hardware stack levels used:    1
 19346 ;; Hardware stack levels required when called:    8
 19347 ;; This function calls:
 19348 ;;		_isdigit
 19349 ;;		_isspace
 19350 ;; This function is called by:
 19351 ;;		_vfpfcnvrt
 19352 ;; This function uses a reentrant model
 19353 ;;
 19354                           
 19355                           	psect	text73
 19356  015CBA                     __ptext73:
 19357                           	opt callstack 0
 19358  015CBA                     _atoi:
 19359                           	opt callstack 0
 19360                           
 19361                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19362  015CBA  0E09               	movlw	9
 19363  015CBC  26E1               	addwf	fsr1l,f,c
 19364  015CBE  0E00               	movlw	0
 19365  015CC0  22E2               	addwfc	fsr1h,f,c
 19366                           
 19367                           ;stkvar	_n @ sp[(-9)+5]
 19368                           
 19369                           ;incstack = 0
 19370  015CC2  0EFC               	movlw	-4
 19371  015CC4  6AE3               	clrf	plusw1,c
 19372  015CC6  0EFD               	movlw	-3
 19373  015CC8  6AE3               	clrf	plusw1,c
 19374                           
 19375                           ;stkvar	_neg @ sp[(-9)+7]
 19376  015CCA  0EFE               	movlw	-2
 19377  015CCC  6AE3               	clrf	plusw1,c
 19378  015CCE  0EFF               	movlw	-1
 19379  015CD0  6AE3               	clrf	plusw1,c
 19380  015CD2  D011               	goto	l7752
 19381  015CD4                     l7750:
 19382                           
 19383                           ;stkvar	_s @ sp[(-9)+-2]
 19384  015CD4  0EF5               	movlw	-11
 19385  015CD6  50E3               	movf	plusw1,w,c
 19386  015CD8  0F01               	addlw	1
 19387  015CDA  6E01               	movwf	btemp^0,c
 19388  015CDC  0EF5               	movlw	-11
 19389  015CDE  0060  F007  FFE3   	movff	btemp,plusw1
 19390  015CE4  6A01               	clrf	btemp^0,c
 19391  015CE6  0EF6               	movlw	-10
 19392  015CE8  50E3               	movf	plusw1,w,c
 19393  015CEA  2001               	addwfc	btemp^0,w,c
 19394  015CEC  6E01               	movwf	btemp^0,c
 19395  015CEE  0EF6               	movlw	-10
 19396  015CF0  0060  F007  FFE3   	movff	btemp,plusw1
 19397  015CF6                     l7752:
 19398                           
 19399                           ;stkvar	_atoi$5600 @ sp[(-9)+4]
 19400  015CF6  0EFB               	movlw	-5
 19401  015CF8  6AE3               	clrf	plusw1,c
 19402  015CFA  2AE3               	incf	plusw1,f,c
 19403                           
 19404                           ;stkvar	_s @ sp[(-9)+-2]
 19405  015CFC  50E1               	movf	fsr1l,w,c
 19406  015CFE  0FF5               	addlw	-11
 19407  015D00  6ED9               	movwf	fsr2l,c
 19408  015D02  50E2               	movf	fsr1h,w,c
 19409  015D04  6EDA               	movwf	fsr2h,c
 19410  015D06  0EFF               	movlw	255
 19411  015D08  22DA               	addwfc	fsr2h,f,c
 19412  015D0A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19413  015D10  006F FF77 FFF7     	movff	postdec2,tblptrh
 19414  015D16                     	if	0	;tblptru may be non-zero
 19415  015D16                     	endif
 19416  015D16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19417  015D16  0E00               	movlw	low (__mediumconst shr (0+16))
 19418  015D18  6EF8               	movwf	tblptru,c
 19419  015D1A                     	endif
 19420  015D1A  0008               	tblrd		*
 19421  015D1C  50F5               	movf	tablat,w,c
 19422  015D1E  0A20               	xorlw	32
 19423  015D20  B4D8               	btfsc	status,2,c
 19424  015D22  D023               	goto	l7760
 19425  015D24  0EF7               	movlw	247
 19426  015D26  6E0B               	movwf	(btemp+10)^0,c
 19427  015D28  0EFF               	movlw	255
 19428  015D2A  6E0C               	movwf	(btemp+11)^0,c
 19429                           
 19430                           ;stkvar	_s @ sp[(-9)+-2]
 19431  015D2C  50E1               	movf	fsr1l,w,c
 19432  015D2E  0FF5               	addlw	-11
 19433  015D30  6ED9               	movwf	fsr2l,c
 19434  015D32  50E2               	movf	fsr1h,w,c
 19435  015D34  6EDA               	movwf	fsr2h,c
 19436  015D36  0EFF               	movlw	255
 19437  015D38  22DA               	addwfc	fsr2h,f,c
 19438  015D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19439  015D40  006F FF77 FFF7     	movff	postdec2,tblptrh
 19440  015D46                     	if	0	;tblptru may be non-zero
 19441  015D46                     	endif
 19442  015D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19443  015D46  0E00               	movlw	low (__mediumconst shr (0+16))
 19444  015D48  6EF8               	movwf	tblptru,c
 19445  015D4A                     	endif
 19446  015D4A  0008               	tblrd		*
 19447  015D4C  50F5               	movf	tablat,w,c
 19448  015D4E  6E09               	movwf	(btemp+8)^0,c
 19449  015D50  6A0A               	clrf	(btemp+9)^0,c
 19450  015D52  500B               	movf	(btemp+10)^0,w,c
 19451  015D54  2609               	addwf	(btemp+8)^0,f,c
 19452  015D56  500C               	movf	(btemp+11)^0,w,c
 19453  015D58  220A               	addwfc	(btemp+9)^0,f,c
 19454  015D5A  500A               	movf	(btemp+9)^0,w,c
 19455  015D5C  E104               	bnz	u6560
 19456  015D5E  0E05               	movlw	5
 19457  015D60  5C09               	subwf	(btemp+8)^0,w,c
 19458  015D62  A0D8               	btfss	status,0,c
 19459  015D64  D002               	goto	l7760
 19460  015D66                     u6560:
 19461                           
 19462                           ;stkvar	_atoi$5600 @ sp[(-9)+4]
 19463  015D66  0EFB               	movlw	-5
 19464  015D68  6AE3               	clrf	plusw1,c
 19465  015D6A                     l7760:
 19466                           
 19467                           ;stkvar	_atoi$5600 @ sp[(-9)+4]
 19468  015D6A  0EFB               	movlw	-5
 19469  015D6C  50E3               	movf	plusw1,w,c
 19470  015D6E  6E0B               	movwf	(btemp+10)^0,c
 19471  015D70  6A0C               	clrf	(btemp+11)^0,c
 19472                           
 19473                           ;stkvar	_atoi$5599 @ sp[(-9)+2]
 19474  015D72  0EF9               	movlw	-7
 19475  015D74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19476  015D7A  0EFA               	movlw	-6
 19477  015D7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19478                           
 19479                           ;stkvar	_atoi$5599 @ sp[(-9)+2]
 19480  015D82  0EF9               	movlw	-7
 19481  015D84  006F FF8C  F001    	movff	plusw1,btemp
 19482  015D8A  0EFA               	movlw	-6
 19483  015D8C  50E3               	movf	plusw1,w,c
 19484  015D8E  1001               	iorwf	btemp^0,w,c
 19485  015D90  B4D8               	btfsc	status,2,c
 19486  015D92  D01F               	goto	l7770
 19487  015D94  D79F               	goto	l7750
 19488  015D96                     l7766:
 19489  015D96  0E01               	movlw	1
 19490  015D98  6E0B               	movwf	(btemp+10)^0,c
 19491  015D9A  0E00               	movlw	0
 19492  015D9C  6E0C               	movwf	(btemp+11)^0,c
 19493                           
 19494                           ;stkvar	_neg @ sp[(-9)+7]
 19495  015D9E  0EFE               	movlw	-2
 19496  015DA0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19497  015DA6  0EFF               	movlw	-1
 19498  015DA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19499  015DAE                     l7768:
 19500                           
 19501                           ;stkvar	_s @ sp[(-9)+-2]
 19502  015DAE  0EF5               	movlw	-11
 19503  015DB0  50E3               	movf	plusw1,w,c
 19504  015DB2  0F01               	addlw	1
 19505  015DB4  6E01               	movwf	btemp^0,c
 19506  015DB6  0EF5               	movlw	-11
 19507  015DB8  0060  F007  FFE3   	movff	btemp,plusw1
 19508  015DBE  6A01               	clrf	btemp^0,c
 19509  015DC0  0EF6               	movlw	-10
 19510  015DC2  50E3               	movf	plusw1,w,c
 19511  015DC4  2001               	addwfc	btemp^0,w,c
 19512  015DC6  6E01               	movwf	btemp^0,c
 19513  015DC8  0EF6               	movlw	-10
 19514  015DCA  0060  F007  FFE3   	movff	btemp,plusw1
 19515  015DD0  D053               	goto	l7776
 19516  015DD2                     l7770:
 19517                           
 19518                           ;stkvar	_s @ sp[(-9)+-2]
 19519  015DD2  50E1               	movf	fsr1l,w,c
 19520  015DD4  0FF5               	addlw	-11
 19521  015DD6  6ED9               	movwf	fsr2l,c
 19522  015DD8  50E2               	movf	fsr1h,w,c
 19523  015DDA  6EDA               	movwf	fsr2h,c
 19524  015DDC  0EFF               	movlw	255
 19525  015DDE  22DA               	addwfc	fsr2h,f,c
 19526  015DE0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19527  015DE6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19528  015DEC                     	if	0	;tblptru may be non-zero
 19529  015DEC                     	endif
 19530  015DEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19531  015DEC  0E00               	movlw	low (__mediumconst shr (0+16))
 19532  015DEE  6EF8               	movwf	tblptru,c
 19533  015DF0                     	endif
 19534  015DF0  0008               	tblrd		*
 19535  015DF2  50F5               	movf	tablat,w,c
 19536  015DF4  6E0B               	movwf	(btemp+10)^0,c
 19537  015DF6  6A0C               	clrf	(btemp+11)^0,c
 19538                           
 19539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19540                           ; Switch size 1, requested type "simple"
 19541                           ; Number of cases is 1, Range of values is 0 to 0
 19542                           ; switch strategies available:
 19543                           ; Name         Instructions Cycles
 19544                           ; simple_byte            4     3 (average)
 19545                           ;	Chosen strategy is simple_byte
 19546  015DF8  500C               	movf	(btemp+11)^0,w,c
 19547  015DFA  0A00               	xorlw	0	; case 0
 19548  015DFC  A4D8               	btfss	status,2,c
 19549  015DFE  D03C               	goto	l7776
 19550                           
 19551                           ; Switch size 1, requested type "simple"
 19552                           ; Number of cases is 2, Range of values is 43 to 45
 19553                           ; switch strategies available:
 19554                           ; Name         Instructions Cycles
 19555                           ; simple_byte            7     4 (average)
 19556                           ;	Chosen strategy is simple_byte
 19557  015E00  500B               	movf	(btemp+10)^0,w,c
 19558  015E02  0A2B               	xorlw	43	; case 43
 19559  015E04  B4D8               	btfsc	status,2,c
 19560  015E06  D7D3               	goto	l7768
 19561  015E08  0A06               	xorlw	6	; case 45
 19562  015E0A  B4D8               	btfsc	status,2,c
 19563  015E0C  D7C4               	goto	l7766
 19564  015E0E  D034               	goto	l7776
 19565  015E10                     l7772:
 19566                           
 19567                           ;stkvar	_n @ sp[(-9)+5]
 19568  015E10  0EFC               	movlw	-4
 19569  015E12  006F FF8C  F00B    	movff	plusw1,btemp+10
 19570  015E18  0EFD               	movlw	-3
 19571  015E1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19572  015E20  0E0A               	movlw	10
 19573  015E22  020B               	mulwf	(btemp+10)^0,c
 19574  015E24  006F FFCC  F009    	movff	prodl,btemp+8
 19575  015E2A  006F FFD0  F00A    	movff	prodh,btemp+9
 19576  015E30  020C               	mulwf	(btemp+11)^0,c
 19577  015E32  50F3               	movf	prodl,w,c
 19578  015E34  260A               	addwf	(btemp+9)^0,f,c
 19579                           
 19580                           ;stkvar	_s @ sp[(-9)+-2]
 19581  015E36  50E1               	movf	fsr1l,w,c
 19582  015E38  0FF5               	addlw	-11
 19583  015E3A  6ED9               	movwf	fsr2l,c
 19584  015E3C  50E2               	movf	fsr1h,w,c
 19585  015E3E  6EDA               	movwf	fsr2h,c
 19586  015E40  0EFF               	movlw	255
 19587  015E42  22DA               	addwfc	fsr2h,f,c
 19588  015E44  006F FF7B FFF6     	movff	postinc2,tblptrl
 19589  015E4A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19590  015E50                     	if	0	;tblptru may be non-zero
 19591  015E50                     	endif
 19592  015E50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19593  015E50  0E00               	movlw	low (__mediumconst shr (0+16))
 19594  015E52  6EF8               	movwf	tblptru,c
 19595  015E54                     	endif
 19596  015E54  0008               	tblrd		*
 19597  015E56  50F5               	movf	tablat,w,c
 19598  015E58  5E09               	subwf	(btemp+8)^0,f,c
 19599  015E5A  0E00               	movlw	0
 19600  015E5C  5A0A               	subwfb	(btemp+9)^0,f,c
 19601  015E5E  0E30               	movlw	48
 19602  015E60  2609               	addwf	(btemp+8)^0,f,c
 19603  015E62  0E00               	movlw	0
 19604  015E64  220A               	addwfc	(btemp+9)^0,f,c
 19605                           
 19606                           ;stkvar	_n @ sp[(-9)+5]
 19607  015E66  0EFC               	movlw	-4
 19608  015E68  0060  F027  FFE3   	movff	btemp+8,plusw1
 19609  015E6E  0EFD               	movlw	-3
 19610  015E70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19611  015E76  D79B               	goto	l7768
 19612  015E78                     l7776:
 19613  015E78  0ED0               	movlw	208
 19614  015E7A  6E0B               	movwf	(btemp+10)^0,c
 19615  015E7C  0EFF               	movlw	255
 19616  015E7E  6E0C               	movwf	(btemp+11)^0,c
 19617                           
 19618                           ;stkvar	_s @ sp[(-9)+-2]
 19619  015E80  50E1               	movf	fsr1l,w,c
 19620  015E82  0FF5               	addlw	-11
 19621  015E84  6ED9               	movwf	fsr2l,c
 19622  015E86  50E2               	movf	fsr1h,w,c
 19623  015E88  6EDA               	movwf	fsr2h,c
 19624  015E8A  0EFF               	movlw	255
 19625  015E8C  22DA               	addwfc	fsr2h,f,c
 19626  015E8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19627  015E94  006F FF77 FFF7     	movff	postdec2,tblptrh
 19628  015E9A                     	if	0	;tblptru may be non-zero
 19629  015E9A                     	endif
 19630  015E9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19631  015E9A  0E00               	movlw	low (__mediumconst shr (0+16))
 19632  015E9C  6EF8               	movwf	tblptru,c
 19633  015E9E                     	endif
 19634  015E9E  0008               	tblrd		*
 19635  015EA0  50F5               	movf	tablat,w,c
 19636  015EA2  6E09               	movwf	(btemp+8)^0,c
 19637  015EA4  6A0A               	clrf	(btemp+9)^0,c
 19638  015EA6  500B               	movf	(btemp+10)^0,w,c
 19639  015EA8  2609               	addwf	(btemp+8)^0,f,c
 19640  015EAA  500C               	movf	(btemp+11)^0,w,c
 19641  015EAC  220A               	addwfc	(btemp+9)^0,f,c
 19642  015EAE  500A               	movf	(btemp+9)^0,w,c
 19643  015EB0  E106               	bnz	u6580
 19644  015EB2  0E0A               	movlw	10
 19645  015EB4  5C09               	subwf	(btemp+8)^0,w,c
 19646  015EB6  B0D8               	btfsc	status,0,c
 19647  015EB8  D002               	goto	u6580
 19648  015EBA  0E01               	movlw	1
 19649  015EBC  D001               	goto	u6590
 19650  015EBE                     u6580:
 19651  015EBE  0E00               	movlw	0
 19652  015EC0                     u6590:
 19653  015EC0  6E0B               	movwf	(btemp+10)^0,c
 19654  015EC2  6A0C               	clrf	(btemp+11)^0,c
 19655                           
 19656                           ;stkvar	_atoi$5601 @ sp[(-9)+0]
 19657  015EC4  0EF7               	movlw	-9
 19658  015EC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19659  015ECC  0EF8               	movlw	-8
 19660  015ECE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19661                           
 19662                           ;stkvar	_atoi$5601 @ sp[(-9)+0]
 19663  015ED4  0EF7               	movlw	-9
 19664  015ED6  006F FF8C  F001    	movff	plusw1,btemp
 19665  015EDC  0EF8               	movlw	-8
 19666  015EDE  50E3               	movf	plusw1,w,c
 19667  015EE0  1001               	iorwf	btemp^0,w,c
 19668  015EE2  A4D8               	btfss	status,2,c
 19669  015EE4  D795               	goto	l7772
 19670                           
 19671                           ;stkvar	_neg @ sp[(-9)+7]
 19672  015EE6  0EFE               	movlw	-2
 19673  015EE8  006F FF8C  F001    	movff	plusw1,btemp
 19674  015EEE  0EFF               	movlw	-1
 19675  015EF0  50E3               	movf	plusw1,w,c
 19676  015EF2  1001               	iorwf	btemp^0,w,c
 19677  015EF4  A4D8               	btfss	status,2,c
 19678  015EF6  D00E               	goto	l7786
 19679                           
 19680                           ;stkvar	_n @ sp[(-9)+5]
 19681  015EF8  0EFC               	movlw	-4
 19682  015EFA  006F FF8C  F001    	movff	plusw1,btemp
 19683  015F00  1E01               	comf	btemp^0,f,c
 19684  015F02  0EFD               	movlw	-3
 19685  015F04  006F FF8C  F002    	movff	plusw1,btemp+1
 19686  015F0A  1E02               	comf	(btemp+1)^0,f,c
 19687  015F0C  2A01               	incf	btemp^0,f,c
 19688  015F0E  B4D8               	btfsc	status,2,c
 19689  015F10  2A02               	incf	(btemp+1)^0,f,c
 19690  015F12  D008               	goto	l2973
 19691  015F14                     l7786:
 19692                           
 19693                           ;stkvar	_n @ sp[(-9)+5]
 19694  015F14  0EFC               	movlw	-4
 19695  015F16  006F FF8C  F001    	movff	plusw1,btemp
 19696  015F1C  0EFD               	movlw	-3
 19697  015F1E  006F FF8C  F002    	movff	plusw1,btemp+1
 19698  015F24                     l2973:
 19699                           
 19700                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19701  015F24  0EF5               	movlw	245
 19702  015F26  26E1               	addwf	fsr1l,f,c
 19703  015F28  0EFF               	movlw	255
 19704  015F2A  22E2               	addwfc	fsr1h,f,c
 19705  015F2C  0012               	return		;funcret
 19706  015F2E                     __end_of_atoi:
 19707                           	opt callstack 0
 19708                           
 19709 ;; *************** function _isspace *****************
 19710 ;; Defined at:
 19711 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19712 ;; Parameters:    Size  Location     Type
 19713 ;;  c               2  [STACK] int 
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;		None
 19716 ;; Return value:  Size  Location     Type
 19717 ;;                  2  [STACK] int 
 19718 ;; Registers used:
 19719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19720 ;; Tracked objects:
 19721 ;;		On entry : 0/0
 19722 ;;		On exit  : 0/0
 19723 ;;		Unchanged: 0/0
 19724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19729 ;;Total ram usage:        0 bytes
 19730 ;; Hardware stack levels used:    1
 19731 ;; Hardware stack levels required when called:    7
 19732 ;; This function calls:
 19733 ;;		Nothing
 19734 ;; This function is called by:
 19735 ;;		_atoi
 19736 ;; This function uses a reentrant model
 19737 ;;
 19738                           
 19739                           	psect	text74
 19740  018C40                     __ptext74:
 19741                           	opt callstack 0
 19742  018C40                     _isspace:
 19743                           	opt callstack 0
 19744                           
 19745                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19746  018C40  52E6               	movf	postinc1,f,c
 19747                           
 19748                           ;stkvar	_isspace$5639 @ sp[(-1)+0]
 19749                           
 19750                           ;incstack = 0
 19751  018C42  0EFF               	movlw	-1
 19752  018C44  6AE3               	clrf	plusw1,c
 19753  018C46  2AE3               	incf	plusw1,f,c
 19754                           
 19755                           ;stkvar	_c @ sp[(-1)+-2]
 19756  018C48  0EFD               	movlw	-3
 19757  018C4A  006F FF8C  F001    	movff	plusw1,btemp
 19758  018C50  0E20               	movlw	32
 19759  018C52  1801               	xorwf	btemp^0,w,c
 19760  018C54  E104               	bnz	u5550
 19761  018C56  0EFE               	movlw	-2
 19762  018C58  50E3               	movf	plusw1,w,c
 19763  018C5A  B4D8               	btfsc	status,2,c
 19764  018C5C  D012               	goto	l7236
 19765  018C5E                     u5550:
 19766                           
 19767                           ;stkvar	_c @ sp[(-1)+-2]
 19768  018C5E  0EFD               	movlw	-3
 19769  018C60  50E3               	movf	plusw1,w,c
 19770  018C62  0FF7               	addlw	247
 19771  018C64  6E0B               	movwf	(btemp+10)^0,c
 19772  018C66  0EFE               	movlw	-2
 19773  018C68  006F FF8C  F00C    	movff	plusw1,btemp+11
 19774  018C6E  0EFF               	movlw	255
 19775  018C70  220C               	addwfc	(btemp+11)^0,f,c
 19776  018C72  500C               	movf	(btemp+11)^0,w,c
 19777  018C74  E104               	bnz	u5560
 19778  018C76  0E05               	movlw	5
 19779  018C78  5C0B               	subwf	(btemp+10)^0,w,c
 19780  018C7A  A0D8               	btfss	status,0,c
 19781  018C7C  D002               	goto	l7236
 19782  018C7E                     u5560:
 19783                           
 19784                           ;stkvar	_isspace$5639 @ sp[(-1)+0]
 19785  018C7E  0EFF               	movlw	-1
 19786  018C80  6AE3               	clrf	plusw1,c
 19787  018C82                     l7236:
 19788                           
 19789                           ;stkvar	_isspace$5639 @ sp[(-1)+0]
 19790  018C82  0EFF               	movlw	-1
 19791  018C84  50E3               	movf	plusw1,w,c
 19792  018C86  6E01               	movwf	btemp^0,c
 19793  018C88  6A02               	clrf	(btemp+1)^0,c
 19794                           
 19795                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19796  018C8A  52E5               	movf	postdec1,f,c
 19797  018C8C  52E5               	movf	postdec1,f,c
 19798  018C8E  52E5               	movf	postdec1,f,c
 19799  018C90  0012               	return		;funcret
 19800  018C92                     __end_of_isspace:
 19801                           	opt callstack 0
 19802                           
 19803 ;; *************** function _isdigit *****************
 19804 ;; Defined at:
 19805 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;  c               2  [STACK] int 
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;		None
 19810 ;; Return value:  Size  Location     Type
 19811 ;;                  2  [STACK] int 
 19812 ;; Registers used:
 19813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19814 ;; Tracked objects:
 19815 ;;		On entry : 0/0
 19816 ;;		On exit  : 0/0
 19817 ;;		Unchanged: 0/0
 19818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19823 ;;Total ram usage:        0 bytes
 19824 ;; Hardware stack levels used:    1
 19825 ;; Hardware stack levels required when called:    7
 19826 ;; This function calls:
 19827 ;;		Nothing
 19828 ;; This function is called by:
 19829 ;;		_vfpfcnvrt
 19830 ;;		_atoi
 19831 ;; This function uses a reentrant model
 19832 ;;
 19833                           
 19834                           	psect	text75
 19835  0191F0                     __ptext75:
 19836                           	opt callstack 0
 19837  0191F0                     _isdigit:
 19838                           	opt callstack 17
 19839                           
 19840                           ;stkvar	_c @ sp[(0)+-2]
 19841                           
 19842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19843                           ;incstack = 0
 19844  0191F0  0EFE               	movlw	-2
 19845  0191F2  50E3               	movf	plusw1,w,c
 19846  0191F4  0FD0               	addlw	208
 19847  0191F6  6E0B               	movwf	(btemp+10)^0,c
 19848  0191F8  0EFF               	movlw	-1
 19849  0191FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19850  019200  0EFF               	movlw	255
 19851  019202  220C               	addwfc	(btemp+11)^0,f,c
 19852  019204  500C               	movf	(btemp+11)^0,w,c
 19853  019206  E106               	bnz	u5130
 19854  019208  0E0A               	movlw	10
 19855  01920A  5C0B               	subwf	(btemp+10)^0,w,c
 19856  01920C  B0D8               	btfsc	status,0,c
 19857  01920E  D002               	goto	u5130
 19858  019210  0E01               	movlw	1
 19859  019212  D001               	goto	u5140
 19860  019214                     u5130:
 19861  019214  0E00               	movlw	0
 19862  019216                     u5140:
 19863  019216  6E01               	movwf	btemp^0,c
 19864  019218  6A02               	clrf	(btemp+1)^0,c
 19865                           
 19866                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19867  01921A  52E5               	movf	postdec1,f,c
 19868  01921C  52E5               	movf	postdec1,f,c
 19869  01921E  0012               	return		;funcret
 19870  019220                     __end_of_isdigit:
 19871                           	opt callstack 0
 19872                           
 19873 ;; *************** function _set_vterm *****************
 19874 ;; Defined at:
 19875 ;;		line 107 in file "mconfig.c"
 19876 ;; Parameters:    Size  Location     Type
 19877 ;;  vterm           1  [STACK] const unsigned char 
 19878 ;; Auto vars:     Size  Location     Type
 19879 ;;		None
 19880 ;; Return value:  Size  Location     Type
 19881 ;;                  1  [STACK] unsigned char 
 19882 ;; Registers used:
 19883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19884 ;; Tracked objects:
 19885 ;;		On entry : 0/1
 19886 ;;		On exit  : 0/0
 19887 ;;		Unchanged: 0/0
 19888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19893 ;;Total ram usage:        0 bytes
 19894 ;; Hardware stack levels used:    1
 19895 ;; Hardware stack levels required when called:    7
 19896 ;; This function calls:
 19897 ;;		Nothing
 19898 ;; This function is called by:
 19899 ;;		_main
 19900 ;;		_check_help
 19901 ;; This function uses a reentrant model
 19902 ;;
 19903                           
 19904                           	psect	text76
 19905  0197C0                     __ptext76:
 19906                           	opt callstack 0
 19907  0197C0                     _set_vterm:
 19908                           	opt callstack 23
 19909                           
 19910                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19911                           ;stkvar	_vterm @ sp[(0)+-1]
 19912                           
 19913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19914                           ;incstack = 0
 19915  0197C0  0EFF               	movlw	-1
 19916  0197C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19917  0197C8  0E03               	movlw	3
 19918  0197CA  160C               	andwf	(btemp+11)^0,f,c
 19919  0197CC  EE22  F01F         	lfsr	2,_D+288
 19920  0197D0  50DF               	movf	223,w,c
 19921  0197D2  180C               	xorwf	(btemp+11)^0,w,c
 19922  0197D4  0BFE               	andlw	-2
 19923  0197D6  180C               	xorwf	(btemp+11)^0,w,c
 19924  0197D8  6EDF               	movwf	223,c
 19925                           
 19926                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19927  0197DA  52E5               	movf	postdec1,f,c
 19928  0197DC  0012               	return		;funcret
 19929  0197DE                     __end_of_set_vterm:
 19930                           	opt callstack 0
 19931                           
 19932 ;; *************** function _set_temp_display_help *****************
 19933 ;; Defined at:
 19934 ;;		line 211 in file "mconfig.c"
 19935 ;; Parameters:    Size  Location     Type
 19936 ;;  new_response    1  [STACK] const enum E16518
 19937 ;; Auto vars:     Size  Location     Type
 19938 ;;		None
 19939 ;; Return value:  Size  Location     Type
 19940 ;;                  1  [STACK] enum E16518
 19941 ;; Registers used:
 19942 ;;		wreg, fsr1l, fsr1h
 19943 ;; Tracked objects:
 19944 ;;		On entry : 0/2
 19945 ;;		On exit  : 3F/2
 19946 ;;		Unchanged: 0/0
 19947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19952 ;;Total ram usage:        0 bytes
 19953 ;; Hardware stack levels used:    1
 19954 ;; Hardware stack levels required when called:    7
 19955 ;; This function calls:
 19956 ;;		Nothing
 19957 ;; This function is called by:
 19958 ;;		_check_help
 19959 ;; This function uses a reentrant model
 19960 ;;
 19961                           
 19962                           	psect	text77
 19963  019922                     __ptext77:
 19964                           	opt callstack 0
 19965  019922                     _set_temp_display_help:
 19966                           	opt callstack 22
 19967                           
 19968                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19969                           
 19970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19971                           ;incstack = 0
 19972  019922  0102               	movlb	2	; () banked
 19973  019924  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19974                           
 19975                           ; BSR set to: 2
 19976                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19977                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19978  019926  0EFF               	movlw	-1
 19979  019928  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19980                           
 19981                           ; BSR set to: 2
 19982                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19983  01992E  52E5               	movf	postdec1,f,c
 19984  019930  0012               	return		;funcret
 19985  019932                     __end_of_set_temp_display_help:
 19986                           	opt callstack 0
 19987                           
 19988 ;; *************** function _set_display_info *****************
 19989 ;; Defined at:
 19990 ;;		line 200 in file "mconfig.c"
 19991 ;; Parameters:    Size  Location     Type
 19992 ;;  new_response    1  [STACK] const enum E16518
 19993 ;; Auto vars:     Size  Location     Type
 19994 ;;		None
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  1  [STACK] enum E17003
 19997 ;; Registers used:
 19998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/1
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20008 ;;Total ram usage:        0 bytes
 20009 ;; Hardware stack levels used:    1
 20010 ;; Hardware stack levels required when called:    8
 20011 ;; This function calls:
 20012 ;;		_TimerDone
 20013 ;; This function is called by:
 20014 ;;		_main
 20015 ;;		_check_help
 20016 ;; This function uses a reentrant model
 20017 ;;
 20018                           
 20019                           	psect	text78
 20020  0197DE                     __ptext78:
 20021                           	opt callstack 0
 20022  0197DE                     _set_display_info:
 20023                           	opt callstack 22
 20024                           
 20025                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20026                           
 20027                           ; BSR set to: 2
 20028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20029                           ;incstack = 0
 20030  0197DE  0E07               	movlw	7
 20031  0197E0  6EE6               	movwf	postinc1,c
 20032  0197E2  ECCF  F0C9         	call	_TimerDone	;wreg free
 20033  0197E6  5001               	movf	btemp^0,w,c
 20034  0197E8  B4D8               	btfsc	status,2,c
 20035  0197EA  D006               	goto	l1717
 20036                           
 20037                           ;mconfig.c: 205:   old_info = V.response.info;
 20038  0197EC  0102               	movlb	2	; () banked
 20039  0197EE  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20040                           
 20041                           ; BSR set to: 2
 20042                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20043                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20044  0197F0  0EFF               	movlw	-1
 20045  0197F2  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 20046  0197F8                     l1717:
 20047                           
 20048                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20049  0197F8  52E5               	movf	postdec1,f,c
 20050  0197FA  0012               	return		;funcret
 20051  0197FC                     __end_of_set_display_info:
 20052                           	opt callstack 0
 20053                           
 20054 ;; *************** function _mode_lamp_dim *****************
 20055 ;; Defined at:
 20056 ;;		line 13 in file "mconfig.c"
 20057 ;; Parameters:    Size  Location     Type
 20058 ;;  level           2  [STACK] const unsigned short 
 20059 ;; Auto vars:     Size  Location     Type
 20060 ;;		None
 20061 ;; Return value:  Size  Location     Type
 20062 ;;                  1  [STACK] void 
 20063 ;; Registers used:
 20064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20065 ;; Tracked objects:
 20066 ;;		On entry : 0/2
 20067 ;;		On exit  : 0/0
 20068 ;;		Unchanged: 0/0
 20069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20074 ;;Total ram usage:        0 bytes
 20075 ;; Hardware stack levels used:    1
 20076 ;; Hardware stack levels required when called:    8
 20077 ;; This function calls:
 20078 ;;		_PWM8_LoadDutyValue
 20079 ;; This function is called by:
 20080 ;;		_main
 20081 ;;		_check_help
 20082 ;; This function uses a reentrant model
 20083 ;;
 20084                           
 20085                           	psect	text79
 20086  01988A                     __ptext79:
 20087                           	opt callstack 0
 20088  01988A                     _mode_lamp_dim:
 20089                           	opt callstack 22
 20090                           
 20091                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20092                           ;stkvar	_level @ sp[(0)+-2]
 20093                           
 20094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20095                           ;incstack = 0
 20096  01988A  0EFE               	movlw	-2
 20097  01988C  006F FF8F FFE6     	movff	plusw1,postinc1
 20098  019892  006F FF8F FFE6     	movff	plusw1,postinc1
 20099  019898  EC67  F0C7         	call	_PWM8_LoadDutyValue	;wreg free
 20100                           
 20101                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20102  01989C  52E5               	movf	postdec1,f,c
 20103  01989E  52E5               	movf	postdec1,f,c
 20104  0198A0  0012               	return		;funcret
 20105  0198A2                     __end_of_mode_lamp_dim:
 20106                           	opt callstack 0
 20107                           
 20108 ;; *************** function _mode_lamp_bright *****************
 20109 ;; Defined at:
 20110 ;;		line 18 in file "mconfig.c"
 20111 ;; Parameters:    Size  Location     Type
 20112 ;;		None
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;		None
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  1  [STACK] void 
 20117 ;; Registers used:
 20118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20128 ;;Total ram usage:        0 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:    8
 20131 ;; This function calls:
 20132 ;;		_PWM8_LoadDutyValue
 20133 ;; This function is called by:
 20134 ;;		_check_help
 20135 ;; This function uses a reentrant model
 20136 ;;
 20137                           
 20138                           	psect	text80
 20139  019940                     __ptext80:
 20140                           	opt callstack 0
 20141  019940                     _mode_lamp_bright:
 20142                           	opt callstack 21
 20143                           
 20144                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20145                           
 20146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20147                           ;incstack = 0
 20148  019940  0E2C               	movlw	44
 20149  019942  6EE6               	movwf	postinc1,c
 20150  019944  0E01               	movlw	1
 20151  019946  6EE6               	movwf	postinc1,c
 20152  019948  EC67  F0C7         	call	_PWM8_LoadDutyValue	;wreg free
 20153                           
 20154                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20155  01994C  0012               	return		;funcret
 20156  01994E                     __end_of_mode_lamp_bright:
 20157                           	opt callstack 0
 20158                           
 20159 ;; *************** function _PWM8_LoadDutyValue *****************
 20160 ;; Defined at:
 20161 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20162 ;; Parameters:    Size  Location     Type
 20163 ;;  dutyValue       2  [STACK] unsigned short 
 20164 ;; Auto vars:     Size  Location     Type
 20165 ;;		None
 20166 ;; Return value:  Size  Location     Type
 20167 ;;                  1  [STACK] void 
 20168 ;; Registers used:
 20169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20170 ;; Tracked objects:
 20171 ;;		On entry : 0/2
 20172 ;;		On exit  : 0/0
 20173 ;;		Unchanged: 0/0
 20174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20179 ;;Total ram usage:        0 bytes
 20180 ;; Hardware stack levels used:    1
 20181 ;; Hardware stack levels required when called:    7
 20182 ;; This function calls:
 20183 ;;		Nothing
 20184 ;; This function is called by:
 20185 ;;		_mode_lamp_dim
 20186 ;;		_mode_lamp_bright
 20187 ;; This function uses a reentrant model
 20188 ;;
 20189                           
 20190                           	psect	text81
 20191  018ECE                     __ptext81:
 20192                           	opt callstack 0
 20193  018ECE                     _PWM8_LoadDutyValue:
 20194                           	opt callstack 22
 20195                           
 20196                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20197                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20198                           
 20199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20200                           ;incstack = 0
 20201  018ECE  0EFE               	movlw	-2
 20202  018ED0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20203  018ED6  0EFF               	movlw	-1
 20204  018ED8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20205  018EDE  90D8               	bcf	status,0,c
 20206  018EE0  320C               	rrcf	(btemp+11)^0,f,c
 20207  018EE2  320B               	rrcf	(btemp+10)^0,f,c
 20208  018EE4  90D8               	bcf	status,0,c
 20209  018EE6  320C               	rrcf	(btemp+11)^0,f,c
 20210  018EE8  320B               	rrcf	(btemp+10)^0,f,c
 20211  018EEA  500B               	movf	(btemp+10)^0,w,c
 20212  018EEC  6E61               	movwf	97,c	;volatile
 20213                           
 20214                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20215                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20216  018EEE  0EFE               	movlw	-2
 20217  018EF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20218  018EF6  0E03               	movlw	3
 20219  018EF8  160C               	andwf	(btemp+11)^0,f,c
 20220  018EFA  0E06               	movlw	6
 20221  018EFC  6E01               	movwf	btemp^0,c
 20222  018EFE                     u7045:
 20223  018EFE  90D8               	bcf	status,0,c
 20224  018F00  360C               	rlcf	(btemp+11)^0,f,c
 20225  018F02  2E01               	decfsz	btemp^0,f,c
 20226  018F04  D7FC               	goto	u7045
 20227  018F06  500C               	movf	(btemp+11)^0,w,c
 20228  018F08  6E60               	movwf	96,c	;volatile
 20229                           
 20230                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20231  018F0A  52E5               	movf	postdec1,f,c
 20232  018F0C  52E5               	movf	postdec1,f,c
 20233  018F0E  0012               	return		;funcret
 20234  018F10                     __end_of_PWM8_LoadDutyValue:
 20235                           	opt callstack 0
 20236                           
 20237 ;; *************** function _help_button *****************
 20238 ;; Defined at:
 20239 ;;		line 26 in file "mconfig.c"
 20240 ;; Parameters:    Size  Location     Type
 20241 ;;		None
 20242 ;; Auto vars:     Size  Location     Type
 20243 ;;		None
 20244 ;; Return value:  Size  Location     Type
 20245 ;;                  1  [STACK] _Bool 
 20246 ;; Registers used:
 20247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20248 ;; Tracked objects:
 20249 ;;		On entry : 0/2
 20250 ;;		On exit  : 0/0
 20251 ;;		Unchanged: 0/0
 20252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20257 ;;Total ram usage:        0 bytes
 20258 ;; Hardware stack levels used:    1
 20259 ;; Hardware stack levels required when called:    8
 20260 ;; This function calls:
 20261 ;;		_StartTimer
 20262 ;;		_TimerDone
 20263 ;; This function is called by:
 20264 ;;		_check_help
 20265 ;; This function uses a reentrant model
 20266 ;;
 20267                           
 20268                           	psect	text82
 20269  01904E                     __ptext82:
 20270                           	opt callstack 0
 20271  01904E                     _help_button:
 20272                           	opt callstack 21
 20273                           
 20274                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20275                           
 20276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20277                           ;incstack = 0
 20278  01904E  B0CB               	btfsc	203,0,c	;volatile
 20279  019050  D00C               	goto	l1660
 20280                           
 20281                           ;mconfig.c: 29:   V.help = 1;
 20282  019052  0102               	movlb	2	; () banked
 20283  019054  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20284                           
 20285                           ; BSR set to: 2
 20286                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20287  019056  0E08               	movlw	8
 20288  019058  6EE6               	movwf	postinc1,c
 20289  01905A  ECCF  F0C9         	call	_TimerDone	;wreg free
 20290  01905E  5001               	movf	btemp^0,w,c
 20291  019060  B4D8               	btfsc	status,2,c
 20292  019062  D003               	goto	l1660
 20293                           
 20294                           ;mconfig.c: 31:    return 1;
 20295  019064  0E01               	movlw	1
 20296  019066  6E01               	movwf	btemp^0,c
 20297  019068  0012               	return	
 20298  01906A                     l1660:
 20299                           
 20300                           ;mconfig.c: 34:  if (!V.help)
 20301  01906A  0102               	movlb	2	; () banked
 20302  01906C  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20303  01906E  D008               	goto	l9354
 20304                           
 20305                           ; BSR set to: 2
 20306                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20307  019070  0E2C               	movlw	44
 20308  019072  6EE6               	movwf	postinc1,c
 20309  019074  0E01               	movlw	1
 20310  019076  6EE6               	movwf	postinc1,c
 20311  019078  0E08               	movlw	8
 20312  01907A  6EE6               	movwf	postinc1,c
 20313  01907C  EC88  F0C7         	call	_StartTimer	;wreg free
 20314  019080                     l9354:
 20315                           
 20316                           ;mconfig.c: 37:  return 0;
 20317  019080  0E00               	movlw	0
 20318  019082  6E01               	movwf	btemp^0,c
 20319                           
 20320                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20321  019084  0012               	return		;funcret
 20322  019086                     __end_of_help_button:
 20323                           	opt callstack 0
 20324                           
 20325 ;; *************** function _TimerDone *****************
 20326 ;; Defined at:
 20327 ;;		line 20 in file "timers.c"
 20328 ;; Parameters:    Size  Location     Type
 20329 ;;  timer           1  [STACK] const unsigned char 
 20330 ;; Auto vars:     Size  Location     Type
 20331 ;;		None
 20332 ;; Return value:  Size  Location     Type
 20333 ;;                  1  [STACK] _Bool 
 20334 ;; Registers used:
 20335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20336 ;; Tracked objects:
 20337 ;;		On entry : 0/1
 20338 ;;		On exit  : 0/0
 20339 ;;		Unchanged: 0/0
 20340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20345 ;;Total ram usage:        0 bytes
 20346 ;; Hardware stack levels used:    1
 20347 ;; Hardware stack levels required when called:    7
 20348 ;; This function calls:
 20349 ;;		Nothing
 20350 ;; This function is called by:
 20351 ;;		_main
 20352 ;;		_WaitMs
 20353 ;;		_help_button
 20354 ;;		_check_help
 20355 ;;		_set_display_info
 20356 ;; This function uses a reentrant model
 20357 ;;
 20358                           
 20359                           	psect	text83
 20360  01939E                     __ptext83:
 20361                           	opt callstack 0
 20362  01939E                     _TimerDone:
 20363                           	opt callstack 22
 20364                           
 20365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20366                           ;incstack = 0
 20367  01939E  0004               	clrwdt		;# 
 20368                           
 20369                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20370                           ;stkvar	_timer @ sp[(0)+-1]
 20371  0193A0  0EFF               	movlw	-1
 20372  0193A2  50E3               	movf	plusw1,w,c
 20373  0193A4  0D02               	mullw	2
 20374  0193A6  0ED3               	movlw	low _tickCount
 20375  0193A8  24F3               	addwf	243,w,c
 20376  0193AA  6ED9               	movwf	fsr2l,c
 20377  0193AC  0E01               	movlw	high _tickCount
 20378  0193AE  20F4               	addwfc	prodh,w,c
 20379  0193B0  6EDA               	movwf	fsr2h,c
 20380  0193B2  50DE               	movf	postinc2,w,c
 20381  0193B4  10DE               	iorwf	postinc2,w,c
 20382  0193B6  A4D8               	btfss	status,2,c
 20383  0193B8  D002               	goto	l8072
 20384                           
 20385                           ;timers.c: 24:   return 1;
 20386  0193BA  0E01               	movlw	1
 20387  0193BC  D001               	goto	L20
 20388  0193BE                     l8072:
 20389                           
 20390                           ;timers.c: 26:  return 0;
 20391  0193BE  0E00               	movlw	0
 20392  0193C0                     L20:
 20393  0193C0  6E01               	movwf	btemp^0,c
 20394                           
 20395                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20396  0193C2  52E5               	movf	postdec1,f,c
 20397  0193C4  0012               	return		;funcret
 20398  0193C6                     __end_of_TimerDone:
 20399                           	opt callstack 0
 20400                           
 20401 ;; *************** function _StartTimer *****************
 20402 ;; Defined at:
 20403 ;;		line 12 in file "timers.c"
 20404 ;; Parameters:    Size  Location     Type
 20405 ;;  timer           1  [STACK] const unsigned char 
 20406 ;;  count           2  [STACK] const unsigned short 
 20407 ;; Auto vars:     Size  Location     Type
 20408 ;;		None
 20409 ;; Return value:  Size  Location     Type
 20410 ;;                  1  [STACK] void 
 20411 ;; Registers used:
 20412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20413 ;; Tracked objects:
 20414 ;;		On entry : 0/0
 20415 ;;		On exit  : 0/0
 20416 ;;		Unchanged: 0/0
 20417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20422 ;;Total ram usage:        0 bytes
 20423 ;; Hardware stack levels used:    1
 20424 ;; Hardware stack levels required when called:    7
 20425 ;; This function calls:
 20426 ;;		Nothing
 20427 ;; This function is called by:
 20428 ;;		_main
 20429 ;;		_WaitMs
 20430 ;;		_help_button
 20431 ;;		_check_help
 20432 ;; This function uses a reentrant model
 20433 ;;
 20434                           
 20435                           	psect	text84
 20436  018F10                     __ptext84:
 20437                           	opt callstack 0
 20438  018F10                     _StartTimer:
 20439                           	opt callstack 20
 20440                           
 20441                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20442                           ;stkvar	_count @ sp[(0)+-3]
 20443                           
 20444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20445                           ;incstack = 0
 20446  018F10  0EFD               	movlw	-3
 20447  018F12  006F FF8C  F00B    	movff	plusw1,btemp+10
 20448  018F18  0EFE               	movlw	-2
 20449  018F1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20450  018F20  90D8               	bcf	status,0,c
 20451  018F22  340B               	rlcf	(btemp+10)^0,w,c
 20452  018F24  6E09               	movwf	(btemp+8)^0,c
 20453  018F26  340C               	rlcf	(btemp+11)^0,w,c
 20454  018F28  6E0A               	movwf	(btemp+9)^0,c
 20455                           
 20456                           ;stkvar	_timer @ sp[(0)+-1]
 20457  018F2A  0EFF               	movlw	-1
 20458  018F2C  50E3               	movf	plusw1,w,c
 20459  018F2E  0D02               	mullw	2
 20460  018F30  0ED3               	movlw	low _tickCount
 20461  018F32  24F3               	addwf	243,w,c
 20462  018F34  6ED9               	movwf	fsr2l,c
 20463  018F36  0E01               	movlw	high _tickCount
 20464  018F38  20F4               	addwfc	prodh,w,c
 20465  018F3A  6EDA               	movwf	fsr2h,c
 20466  018F3C  0060  F027  FFDE   	movff	btemp+8,postinc2
 20467  018F42  0060  F02B  FFDD   	movff	btemp+9,postdec2
 20468                           
 20469                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20470  018F48  52E5               	movf	postdec1,f,c
 20471  018F4A  52E5               	movf	postdec1,f,c
 20472  018F4C  52E5               	movf	postdec1,f,c
 20473  018F4E  0012               	return		;funcret
 20474  018F50                     __end_of_StartTimer:
 20475                           	opt callstack 0
 20476                           
 20477 ;; *************** function _display_info *****************
 20478 ;; Defined at:
 20479 ;;		line 190 in file "mconfig.c"
 20480 ;; Parameters:    Size  Location     Type
 20481 ;;		None
 20482 ;; Auto vars:     Size  Location     Type
 20483 ;;		None
 20484 ;; Return value:  Size  Location     Type
 20485 ;;                  1  [STACK] enum E16518
 20486 ;; Registers used:
 20487 ;;		btemp
 20488 ;; Tracked objects:
 20489 ;;		On entry : 0/2
 20490 ;;		On exit  : 0/0
 20491 ;;		Unchanged: 0/0
 20492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20497 ;;Total ram usage:        0 bytes
 20498 ;; Hardware stack levels used:    1
 20499 ;; Hardware stack levels required when called:    7
 20500 ;; This function calls:
 20501 ;;		Nothing
 20502 ;; This function is called by:
 20503 ;;		_check_help
 20504 ;; This function uses a reentrant model
 20505 ;;
 20506                           
 20507                           	psect	text85
 20508  0199A2                     __ptext85:
 20509                           	opt callstack 0
 20510  0199A2                     _display_info:
 20511                           	opt callstack 22
 20512                           
 20513                           ;mconfig.c: 192:  return V.response.info;
 20514                           
 20515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20516                           ;incstack = 0
 20517  0199A2  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 20518                           
 20519                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20520  0199A8  0012               	return		;funcret
 20521  0199AA                     __end_of_display_info:
 20522                           	opt callstack 0
 20523                           
 20524 ;; *************** function _display_help *****************
 20525 ;; Defined at:
 20526 ;;		line 195 in file "mconfig.c"
 20527 ;; Parameters:    Size  Location     Type
 20528 ;;		None
 20529 ;; Auto vars:     Size  Location     Type
 20530 ;;		None
 20531 ;; Return value:  Size  Location     Type
 20532 ;;                  1  [STACK] enum E16518
 20533 ;; Registers used:
 20534 ;;		btemp
 20535 ;; Tracked objects:
 20536 ;;		On entry : 3F/2
 20537 ;;		On exit  : 0/0
 20538 ;;		Unchanged: 0/0
 20539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20544 ;;Total ram usage:        0 bytes
 20545 ;; Hardware stack levels used:    1
 20546 ;; Hardware stack levels required when called:    7
 20547 ;; This function calls:
 20548 ;;		Nothing
 20549 ;; This function is called by:
 20550 ;;		_check_help
 20551 ;; This function uses a reentrant model
 20552 ;;
 20553                           
 20554                           	psect	text86
 20555  0199AA                     __ptext86:
 20556                           	opt callstack 0
 20557  0199AA                     _display_help:
 20558                           	opt callstack 22
 20559                           
 20560                           ;mconfig.c: 197:  return V.response.help_temp;
 20561                           
 20562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20563                           ;incstack = 0
 20564  0199AA  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 20565                           
 20566                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20567  0199B0  0012               	return		;funcret
 20568  0199B2                     __end_of_display_help:
 20569                           	opt callstack 0
 20570                           
 20571 ;; *************** function _check_enter_button *****************
 20572 ;; Defined at:
 20573 ;;		line 42 in file "hid.c"
 20574 ;; Parameters:    Size  Location     Type
 20575 ;;  h               1  [STACK] PTR struct H_data
 20576 ;;		 -> H(7), 
 20577 ;; Auto vars:     Size  Location     Type
 20578 ;;		None
 20579 ;; Return value:  Size  Location     Type
 20580 ;;                  1  [STACK] _Bool 
 20581 ;; Registers used:
 20582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20583 ;; Tracked objects:
 20584 ;;		On entry : 0/1
 20585 ;;		On exit  : 0/0
 20586 ;;		Unchanged: 0/0
 20587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20592 ;;Total ram usage:        0 bytes
 20593 ;; Hardware stack levels used:    1
 20594 ;; Hardware stack levels required when called:    7
 20595 ;; This function calls:
 20596 ;;		Nothing
 20597 ;; This function is called by:
 20598 ;;		_main
 20599 ;; This function uses a reentrant model
 20600 ;;
 20601                           
 20602                           	psect	text87
 20603  018F50                     __ptext87:
 20604                           	opt callstack 0
 20605  018F50                     _check_enter_button:
 20606                           	opt callstack 23
 20607                           
 20608                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20609                           ;stkvar	_h @ sp[(0)+-1]
 20610                           
 20611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20612                           ;incstack = 0
 20613  018F50  0EFF               	movlw	-1
 20614  018F52  50E3               	movf	plusw1,w,c
 20615  018F54  6ED9               	movwf	fsr2l,c
 20616  018F56  6ADA               	clrf	fsr2h,c
 20617  018F58  0E04               	movlw	4
 20618  018F5A  26D9               	addwf	fsr2l,f,c
 20619  018F5C  50DF               	movf	indf2,w,c
 20620  018F5E  A4D8               	btfss	status,2,c
 20621  018F60  D013               	goto	l9902
 20622                           
 20623                           ;stkvar	_h @ sp[(0)+-1]
 20624  018F62  0EFF               	movlw	-1
 20625  018F64  50E3               	movf	plusw1,w,c
 20626  018F66  6ED9               	movwf	fsr2l,c
 20627  018F68  6ADA               	clrf	fsr2h,c
 20628  018F6A  0E05               	movlw	5
 20629  018F6C  26D9               	addwf	fsr2l,f,c
 20630  018F6E  50DF               	movf	indf2,w,c
 20631  018F70  A4D8               	btfss	status,2,c
 20632  018F72  D00A               	goto	l9902
 20633                           
 20634                           ;hid.c: 45:   h->wait_enter = 1;
 20635                           ;stkvar	_h @ sp[(0)+-1]
 20636  018F74  0EFF               	movlw	-1
 20637  018F76  50E3               	movf	plusw1,w,c
 20638  018F78  6ED9               	movwf	fsr2l,c
 20639  018F7A  6ADA               	clrf	fsr2h,c
 20640  018F7C  0E04               	movlw	4
 20641  018F7E  26D9               	addwf	fsr2l,f,c
 20642  018F80  0E01               	movlw	1
 20643  018F82  6EDF               	movwf	indf2,c
 20644                           
 20645                           ;hid.c: 46:   return 1;
 20646  018F84  0E01               	movlw	1
 20647  018F86  D001               	goto	L21
 20648  018F88                     l9902:
 20649                           
 20650                           ;hid.c: 48:  return 0;
 20651  018F88  0E00               	movlw	0
 20652  018F8A                     L21:
 20653  018F8A  6E01               	movwf	btemp^0,c
 20654                           
 20655                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20656  018F8C  52E5               	movf	postdec1,f,c
 20657  018F8E  0012               	return		;funcret
 20658  018F90                     __end_of_check_enter_button:
 20659                           	opt callstack 0
 20660                           
 20661 ;; *************** function _check_adc_scan *****************
 20662 ;; Defined at:
 20663 ;;		line 56 in file "daq.c"
 20664 ;; Parameters:    Size  Location     Type
 20665 ;;		None
 20666 ;; Auto vars:     Size  Location     Type
 20667 ;;		None
 20668 ;; Return value:  Size  Location     Type
 20669 ;;                  1  [STACK] _Bool 
 20670 ;; Registers used:
 20671 ;;		btemp
 20672 ;; Tracked objects:
 20673 ;;		On entry : 0/1
 20674 ;;		On exit  : 0/0
 20675 ;;		Unchanged: 0/0
 20676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20681 ;;Total ram usage:        0 bytes
 20682 ;; Hardware stack levels used:    1
 20683 ;; Hardware stack levels required when called:    7
 20684 ;; This function calls:
 20685 ;;		Nothing
 20686 ;; This function is called by:
 20687 ;;		_main
 20688 ;; This function uses a reentrant model
 20689 ;;
 20690                           
 20691                           	psect	text88
 20692  0199B2                     __ptext88:
 20693                           	opt callstack 0
 20694  0199B2                     _check_adc_scan:
 20695                           	opt callstack 23
 20696                           
 20697                           ;daq.c: 58:  return R.done;
 20698                           
 20699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20700                           ;incstack = 0
 20701  0199B2  0060  F3C0  F001   	movff	_R+39,btemp	;volatile
 20702                           
 20703                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20704  0199B8  0012               	return		;funcret
 20705  0199BA                     __end_of_check_adc_scan:
 20706                           	opt callstack 0
 20707                           
 20708 ;; *************** function _calc_model_data *****************
 20709 ;; Defined at:
 20710 ;;		line 56 in file "mbmc.c"
 20711 ;; Parameters:    Size  Location     Type
 20712 ;;		None
 20713 ;; Auto vars:     Size  Location     Type
 20714 ;;		None
 20715 ;; Return value:  Size  Location     Type
 20716 ;;                  1  [STACK] void 
 20717 ;; Registers used:
 20718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20719 ;; Tracked objects:
 20720 ;;		On entry : 0/1
 20721 ;;		On exit  : 3F/1
 20722 ;;		Unchanged: 0/0
 20723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20728 ;;Total ram usage:        0 bytes
 20729 ;; Hardware stack levels used:    1
 20730 ;; Hardware stack levels required when called:   10
 20731 ;; This function calls:
 20732 ;;		___fladd
 20733 ;;		___flmul
 20734 ;;		___flsub
 20735 ;;		_lp_filter
 20736 ;;		_start_bsoc
 20737 ;;		_stop_bsoc
 20738 ;; This function is called by:
 20739 ;;		_main
 20740 ;; This function uses a reentrant model
 20741 ;;
 20742                           
 20743                           	psect	text89
 20744  0154A2                     __ptext89:
 20745                           	opt callstack 0
 20746  0154A2                     _calc_model_data:
 20747                           	opt callstack 20
 20748                           
 20749                           ;mbmc.c: 58:  stop_bsoc();
 20750                           
 20751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20752                           ;incstack = 0
 20753  0154A2  ECEA  F0CC         	call	_stop_bsoc	;wreg free
 20754                           
 20755                           ; BSR set to: 57
 20756                           ;mbmc.c: 60:  if (!V.calib) {
 20757  0154A6  0102               	movlb	2	; () banked
 20758  0154A8  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20759  0154AA  A4D8               	btfss	status,2,c
 20760  0154AC  D161               	goto	l9802
 20761                           
 20762                           ; BSR set to: 2
 20763                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20764  0154AE  C100  F144         	movff	_C,_C+68	;volatile
 20765  0154B2  C101  F145         	movff	_C+1,_C+69	;volatile
 20766  0154B6  C102  F146         	movff	_C+2,_C+70	;volatile
 20767  0154BA  C103  F147         	movff	_C+3,_C+71	;volatile
 20768                           
 20769                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20770  0154BE  C104  F148         	movff	_C+4,_C+72	;volatile
 20771  0154C2  C105  F149         	movff	_C+5,_C+73	;volatile
 20772  0154C6  C106  F14A         	movff	_C+6,_C+74	;volatile
 20773  0154CA  C107  F14B         	movff	_C+7,_C+75	;volatile
 20774                           
 20775                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20776  0154CE  C110  F154         	movff	_C+16,_C+84	;volatile
 20777  0154D2  C111  F155         	movff	_C+17,_C+85	;volatile
 20778  0154D6  C112  F156         	movff	_C+18,_C+86	;volatile
 20779  0154DA  C113  F157         	movff	_C+19,_C+87	;volatile
 20780                           
 20781                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20782  0154DE  C114  F150         	movff	_C+20,_C+80	;volatile
 20783  0154E2  C115  F151         	movff	_C+21,_C+81	;volatile
 20784  0154E6  C116  F152         	movff	_C+22,_C+82	;volatile
 20785  0154EA  C117  F153         	movff	_C+23,_C+83	;volatile
 20786                           
 20787                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20788  0154EE  C130  F164         	movff	_C+48,_C+100	;volatile
 20789  0154F2  C131  F165         	movff	_C+49,_C+101	;volatile
 20790  0154F6  C132  F166         	movff	_C+50,_C+102	;volatile
 20791  0154FA  C133  F167         	movff	_C+51,_C+103	;volatile
 20792                           
 20793                           ; BSR set to: 2
 20794                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20795  0154FE  0E01               	movlw	1
 20796  015500  6EE6               	movwf	postinc1,c
 20797  015502  0E10               	movlw	16
 20798  015504  6EE6               	movwf	postinc1,c
 20799  015506  0060  F403  FFE6   	movff	_C,postinc1
 20800  01550C  0060  F407  FFE6   	movff	_C+1,postinc1
 20801  015512  0060  F40B  FFE6   	movff	_C+2,postinc1
 20802  015518  0060  F40F  FFE6   	movff	_C+3,postinc1
 20803  01551E  0060  F413  FFE6   	movff	_C+4,postinc1
 20804  015524  0060  F417  FFE6   	movff	_C+5,postinc1
 20805  01552A  0060  F41B  FFE6   	movff	_C+6,postinc1
 20806  015530  0060  F41F  FFE6   	movff	_C+7,postinc1
 20807  015536  ECDC  F0C6         	call	___flsub	;wreg free
 20808  01553A  0060  F007  FFE6   	movff	btemp,postinc1
 20809  015540  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20810  015546  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20811  01554C  0060  F013  FFE6   	movff	btemp+3,postinc1
 20812  015552  ECA6  F0B3         	call	_lp_filter	;wreg free
 20813  015556  0060  F004  F140   	movff	btemp,_C+64	;volatile
 20814  01555C  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 20815  015562  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 20816  015568  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 20817                           
 20818                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20819  01556E  0E01               	movlw	1
 20820  015570  6EE6               	movwf	postinc1,c
 20821  015572  0E11               	movlw	17
 20822  015574  6EE6               	movwf	postinc1,c
 20823  015576  0060  F553  FFE6   	movff	_C+84,postinc1
 20824  01557C  0060  F557  FFE6   	movff	_C+85,postinc1
 20825  015582  0060  F55B  FFE6   	movff	_C+86,postinc1
 20826  015588  0060  F55F  FFE6   	movff	_C+87,postinc1
 20827  01558E  0060  F503  FFE6   	movff	_C+64,postinc1
 20828  015594  0060  F507  FFE6   	movff	_C+65,postinc1
 20829  01559A  0060  F50B  FFE6   	movff	_C+66,postinc1
 20830  0155A0  0060  F50F  FFE6   	movff	_C+67,postinc1
 20831  0155A6  EC1A  F093         	call	___flmul	;wreg free
 20832  0155AA  0060  F007  FFE6   	movff	btemp,postinc1
 20833  0155B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20834  0155B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20835  0155BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 20836  0155C2  ECA6  F0B3         	call	_lp_filter	;wreg free
 20837  0155C6  0060  F004  F168   	movff	btemp,_C+104	;volatile
 20838  0155CC  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 20839  0155D2  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 20840  0155D8  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 20841                           
 20842                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20843  0155DE  0E01               	movlw	1
 20844  0155E0  6EE6               	movwf	postinc1,c
 20845  0155E2  0E12               	movlw	18
 20846  0155E4  6EE6               	movwf	postinc1,c
 20847  0155E6  0060  F543  FFE6   	movff	_C+80,postinc1
 20848  0155EC  0060  F547  FFE6   	movff	_C+81,postinc1
 20849  0155F2  0060  F54B  FFE6   	movff	_C+82,postinc1
 20850  0155F8  0060  F54F  FFE6   	movff	_C+83,postinc1
 20851  0155FE  0060  F523  FFE6   	movff	_C+72,postinc1
 20852  015604  0060  F527  FFE6   	movff	_C+73,postinc1
 20853  01560A  0060  F52B  FFE6   	movff	_C+74,postinc1
 20854  015610  0060  F52F  FFE6   	movff	_C+75,postinc1
 20855  015616  EC1A  F093         	call	___flmul	;wreg free
 20856  01561A  0060  F007  FFE6   	movff	btemp,postinc1
 20857  015620  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20858  015626  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20859  01562C  0060  F013  FFE6   	movff	btemp+3,postinc1
 20860  015632  ECA6  F0B3         	call	_lp_filter	;wreg free
 20861  015636  0060  F004  F170   	movff	btemp,_C+112	;volatile
 20862  01563C  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 20863  015642  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 20864  015648  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 20865                           
 20866                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20867  01564E  0E01               	movlw	1
 20868  015650  6EE6               	movwf	postinc1,c
 20869  015652  0E13               	movlw	19
 20870  015654  6EE6               	movwf	postinc1,c
 20871  015656  0E00               	movlw	0
 20872  015658  6EE6               	movwf	postinc1,c
 20873  01565A  0E00               	movlw	0
 20874  01565C  6EE6               	movwf	postinc1,c
 20875  01565E  0E60               	movlw	96
 20876  015660  6EE6               	movwf	postinc1,c
 20877  015662  0EC1               	movlw	193
 20878  015664  6EE6               	movwf	postinc1,c
 20879  015666  0060  F593  FFE6   	movff	_C+100,postinc1
 20880  01566C  0060  F597  FFE6   	movff	_C+101,postinc1
 20881  015672  0060  F59B  FFE6   	movff	_C+102,postinc1
 20882  015678  0060  F59F  FFE6   	movff	_C+103,postinc1
 20883  01567E  0060  F503  FFE6   	movff	_C+64,postinc1
 20884  015684  0060  F507  FFE6   	movff	_C+65,postinc1
 20885  01568A  0060  F50B  FFE6   	movff	_C+66,postinc1
 20886  015690  0060  F50F  FFE6   	movff	_C+67,postinc1
 20887  015696  EC1A  F093         	call	___flmul	;wreg free
 20888  01569A  0060  F007  FFE6   	movff	btemp,postinc1
 20889  0156A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20890  0156A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20891  0156AC  0060  F013  FFE6   	movff	btemp+3,postinc1
 20892  0156B2  EC2F  F097         	call	___fladd	;wreg free
 20893  0156B6  0060  F007  FFE6   	movff	btemp,postinc1
 20894  0156BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20895  0156C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20896  0156C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 20897  0156CE  ECA6  F0B3         	call	_lp_filter	;wreg free
 20898  0156D2  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 20899  0156D8  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 20900  0156DE  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 20901  0156E4  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 20902                           
 20903                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20904  0156EA  0E01               	movlw	1
 20905  0156EC  6EE6               	movwf	postinc1,c
 20906  0156EE  0E14               	movlw	20
 20907  0156F0  6EE6               	movwf	postinc1,c
 20908  0156F2  0060  F553  FFE6   	movff	_C+84,postinc1
 20909  0156F8  0060  F557  FFE6   	movff	_C+85,postinc1
 20910  0156FE  0060  F55B  FFE6   	movff	_C+86,postinc1
 20911  015704  0060  F55F  FFE6   	movff	_C+87,postinc1
 20912  01570A  0060  F513  FFE6   	movff	_C+68,postinc1
 20913  015710  0060  F517  FFE6   	movff	_C+69,postinc1
 20914  015716  0060  F51B  FFE6   	movff	_C+70,postinc1
 20915  01571C  0060  F51F  FFE6   	movff	_C+71,postinc1
 20916  015722  EC1A  F093         	call	___flmul	;wreg free
 20917  015726  0060  F007  FFE6   	movff	btemp,postinc1
 20918  01572C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20919  015732  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20920  015738  0060  F013  FFE6   	movff	btemp+3,postinc1
 20921  01573E  ECA6  F0B3         	call	_lp_filter	;wreg free
 20922  015742  0060  F004  F174   	movff	btemp,_C+116	;volatile
 20923  015748  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 20924  01574E  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 20925  015754  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 20926                           
 20927                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20928  01575A  0101               	movlb	1	; () banked
 20929  01575C  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20930  01575E  D008               	goto	l9802
 20931                           
 20932                           ; BSR set to: 1
 20933                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20934  015760  0E17               	movlw	23
 20935  015762  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20936  015764  0EB7               	movlw	183
 20937  015766  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20938  015768  0ED1               	movlw	209
 20939  01576A  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20940  01576C  0E38               	movlw	56
 20941  01576E  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20942  015770                     l9802:
 20943                           
 20944                           ;mbmc.c: 77:  start_bsoc();
 20945  015770  EC90  F0CB         	call	_start_bsoc	;wreg free
 20946                           
 20947                           ; BSR set to: 57
 20948                           ;mbmc.c: 78:  C.update = 1;
 20949  015774  0E01               	movlw	1
 20950  015776  0101               	movlb	1	; () banked
 20951  015778  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 20952                           
 20953                           ; BSR set to: 1
 20954                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20955  01577A  0012               	return		;funcret
 20956  01577C                     __end_of_calc_model_data:
 20957                           	opt callstack 0
 20958                           
 20959 ;; *************** function _stop_bsoc *****************
 20960 ;; Defined at:
 20961 ;;		line 95 in file "bsoc.c"
 20962 ;; Parameters:    Size  Location     Type
 20963 ;;		None
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;		None
 20966 ;; Return value:  Size  Location     Type
 20967 ;;                  1  [STACK] void 
 20968 ;; Registers used:
 20969 ;;		None
 20970 ;; Tracked objects:
 20971 ;;		On entry : 0/1
 20972 ;;		On exit  : 3F/39
 20973 ;;		Unchanged: 0/0
 20974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20979 ;;Total ram usage:        0 bytes
 20980 ;; Hardware stack levels used:    1
 20981 ;; Hardware stack levels required when called:    7
 20982 ;; This function calls:
 20983 ;;		Nothing
 20984 ;; This function is called by:
 20985 ;;		_calc_model_data
 20986 ;; This function uses a reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text90
 20990  0199D4                     __ptext90:
 20991                           	opt callstack 0
 20992  0199D4                     _stop_bsoc:
 20993                           	opt callstack 22
 20994                           
 20995                           ;bsoc.c: 98:  PIE6bits.TMR3IE = 0;
 20996                           
 20997                           ; BSR set to: 1
 20998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20999                           ;incstack = 0
 21000  0199D4  0139               	movlb	57	; () banked
 21001  0199D6  9D96               	bcf	150,6,b	;volatile
 21002                           
 21003                           ; BSR set to: 57
 21004                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21005  0199D8  0012               	return		;funcret
 21006  0199DA                     __end_of_stop_bsoc:
 21007                           	opt callstack 0
 21008                           
 21009 ;; *************** function _start_bsoc *****************
 21010 ;; Defined at:
 21011 ;;		line 86 in file "bsoc.c"
 21012 ;; Parameters:    Size  Location     Type
 21013 ;;		None
 21014 ;; Auto vars:     Size  Location     Type
 21015 ;;		None
 21016 ;; Return value:  Size  Location     Type
 21017 ;;                  1  [STACK] void 
 21018 ;; Registers used:
 21019 ;;		wreg, status,2, status,0, btemp+11
 21020 ;; Tracked objects:
 21021 ;;		On entry : 3C/2
 21022 ;;		On exit  : 3F/39
 21023 ;;		Unchanged: 0/0
 21024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21029 ;;Total ram usage:        0 bytes
 21030 ;; Hardware stack levels used:    1
 21031 ;; Hardware stack levels required when called:    7
 21032 ;; This function calls:
 21033 ;;		Nothing
 21034 ;; This function is called by:
 21035 ;;		_calc_model_data
 21036 ;; This function uses a reentrant model
 21037 ;;
 21038                           
 21039                           	psect	text91
 21040  019720                     __ptext91:
 21041                           	opt callstack 0
 21042  019720                     _start_bsoc:
 21043                           	opt callstack 22
 21044                           
 21045                           ;bsoc.c: 89:  PIE6bits.TMR3IE = 1;
 21046                           
 21047                           ; BSR set to: 57
 21048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21049                           ;incstack = 0
 21050  019720  0139               	movlb	57	; () banked
 21051  019722  8D96               	bsf	150,6,b	;volatile
 21052                           
 21053                           ; BSR set to: 57
 21054  019724  A4BE               	btfss	190,2,c	;volatile
 21055  019726  D002               	goto	u8510
 21056  019728  0E01               	movlw	1
 21057  01972A  D001               	goto	u8516
 21058  01972C                     u8510:
 21059  01972C  0E00               	movlw	0
 21060  01972E                     u8516:
 21061  01972E  0AFF               	xorlw	255
 21062  019730  6E0C               	movwf	(btemp+11)^0,c
 21063  019732  460C               	rlncf	(btemp+11)^0,f,c
 21064  019734  460C               	rlncf	(btemp+11)^0,f,c
 21065  019736  50BE               	movf	190,w,c	;volatile
 21066  019738  180C               	xorwf	(btemp+11)^0,w,c
 21067  01973A  0BFB               	andlw	-5
 21068  01973C  180C               	xorwf	(btemp+11)^0,w,c
 21069  01973E  6EBE               	movwf	190,c	;volatile
 21070                           
 21071                           ; BSR set to: 57
 21072                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21073  019740  0012               	return		;funcret
 21074  019742                     __end_of_start_bsoc:
 21075                           	opt callstack 0
 21076                           
 21077 ;; *************** function _lp_filter *****************
 21078 ;; Defined at:
 21079 ;;		line 18 in file "mbmc.c"
 21080 ;; Parameters:    Size  Location     Type
 21081 ;;  new             4  [STACK] const float 
 21082 ;;  bn              1  [STACK] const unsigned char 
 21083 ;;  slow            1  [STACK] const char 
 21084 ;; Auto vars:     Size  Location     Type
 21085 ;;  lp_speed        4  [STACK] float 
 21086 ;; Return value:  Size  Location     Type
 21087 ;;                  4  [STACK] float 
 21088 ;; Registers used:
 21089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21090 ;; Tracked objects:
 21091 ;;		On entry : 0/2
 21092 ;;		On exit  : 0/0
 21093 ;;		Unchanged: 0/0
 21094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21099 ;;Total ram usage:        0 bytes
 21100 ;; Hardware stack levels used:    1
 21101 ;; Hardware stack levels required when called:    9
 21102 ;; This function calls:
 21103 ;;		___fladd
 21104 ;;		___flmul
 21105 ;;		___flsub
 21106 ;; This function is called by:
 21107 ;;		_main
 21108 ;;		_convert_adc_data
 21109 ;;		_calc_model_data
 21110 ;; This function uses a reentrant model
 21111 ;;
 21112                           
 21113                           	psect	text92
 21114  01674C                     __ptext92:
 21115                           	opt callstack 0
 21116  01674C                     _lp_filter:
 21117                           	opt callstack 0
 21118                           
 21119                           ; BSR set to: 57
 21120                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21121  01674C  52E6               	movf	postinc1,f,c
 21122  01674E  52E6               	movf	postinc1,f,c
 21123  016750  52E6               	movf	postinc1,f,c
 21124  016752  52E6               	movf	postinc1,f,c
 21125                           
 21126                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 21127                           ;stkvar	_bn @ sp[(-4)+-5]
 21128                           
 21129                           ;incstack = 0
 21130  016754  0EF7               	movlw	-9
 21131  016756  006F FF8C  F001    	movff	plusw1,btemp
 21132  01675C  0E14               	movlw	20
 21133  01675E  6401               	cpfsgt	btemp^0,c
 21134  016760  D011               	goto	l9308
 21135  016762                     u8330:
 21136                           
 21137                           ;mbmc.c: 24:   return new;
 21138                           ;stkvar	_new @ sp[(-4)+-4]
 21139  016762  0EF8               	movlw	-8
 21140  016764  006F FF8C  F001    	movff	plusw1,btemp
 21141  01676A  0EF9               	movlw	-7
 21142  01676C  006F FF8C  F002    	movff	plusw1,btemp+1
 21143  016772  0EFA               	movlw	-6
 21144  016774  006F FF8C  F003    	movff	plusw1,btemp+2
 21145  01677A  0EFB               	movlw	-5
 21146  01677C  006F FF8C  F004    	movff	plusw1,btemp+3
 21147  016782  D0BF               	goto	l1808
 21148  016784                     l9308:
 21149                           
 21150                           ;mbmc.c: 26:  if (slow == (-1)) {
 21151                           ;stkvar	_slow @ sp[(-4)+-6]
 21152  016784  0EF6               	movlw	-10
 21153  016786  28E3               	incf	plusw1,w,c
 21154  016788  A4D8               	btfss	status,2,c
 21155  01678A  D012               	goto	l9316
 21156                           
 21157                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 21158                           ;stkvar	_bn @ sp[(-4)+-5]
 21159  01678C  0EF7               	movlw	-9
 21160  01678E  50E3               	movf	plusw1,w,c
 21161  016790  0D04               	mullw	4
 21162  016792  0E00               	movlw	low lp_filter@smooth
 21163  016794  24F3               	addwf	243,w,c
 21164  016796  6ED9               	movwf	fsr2l,c
 21165  016798  0E03               	movlw	high lp_filter@smooth
 21166  01679A  20F4               	addwfc	prodh,w,c
 21167  01679C  6EDA               	movwf	fsr2h,c
 21168  01679E  0E00               	movlw	0
 21169  0167A0  6EDE               	movwf	postinc2,c
 21170  0167A2  0E00               	movlw	0
 21171  0167A4  6EDE               	movwf	postinc2,c
 21172  0167A6  0E00               	movlw	0
 21173  0167A8  6EDE               	movwf	postinc2,c
 21174  0167AA  0E00               	movlw	0
 21175  0167AC  6EDD               	movwf	postdec2,c
 21176  0167AE  D7D9               	goto	u8330
 21177  0167B0                     l9316:
 21178                           
 21179                           ;mbmc.c: 31:  if (slow) {
 21180                           ;stkvar	_slow @ sp[(-4)+-6]
 21181  0167B0  0EF6               	movlw	-10
 21182  0167B2  50E3               	movf	plusw1,w,c
 21183  0167B4  B4D8               	btfsc	status,2,c
 21184  0167B6  D008               	goto	l9320
 21185                           
 21186                           ;mbmc.c: 32:   lp_speed = 0.033;
 21187  0167B8  0E02               	movlw	2
 21188  0167BA  6E09               	movwf	(btemp+8)^0,c
 21189  0167BC  0E2B               	movlw	43
 21190  0167BE  6E0A               	movwf	(btemp+9)^0,c
 21191  0167C0  0E07               	movlw	7
 21192  0167C2  6E0B               	movwf	(btemp+10)^0,c
 21193  0167C4  0E3D               	movlw	61
 21194  0167C6  D007               	goto	L22
 21195  0167C8                     l9320:
 21196                           
 21197                           ;mbmc.c: 34:   lp_speed = 0.125;
 21198  0167C8  0E00               	movlw	0
 21199  0167CA  6E09               	movwf	(btemp+8)^0,c
 21200  0167CC  0E00               	movlw	0
 21201  0167CE  6E0A               	movwf	(btemp+9)^0,c
 21202  0167D0  0E00               	movlw	0
 21203  0167D2  6E0B               	movwf	(btemp+10)^0,c
 21204  0167D4  0E3E               	movlw	62
 21205  0167D6                     L22:
 21206  0167D6  6E0C               	movwf	(btemp+11)^0,c
 21207                           
 21208                           ;stkvar	_lp_speed @ sp[(-4)+0]
 21209  0167D8  0EFC               	movlw	-4
 21210  0167DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 21211  0167E0  0EFD               	movlw	-3
 21212  0167E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21213  0167E8  0EFE               	movlw	-2
 21214  0167EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21215  0167F0  0EFF               	movlw	-1
 21216  0167F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21217                           
 21218                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 21219                           ;stkvar	_bn @ sp[(-4)+-5]
 21220  0167F8  0EF7               	movlw	-9
 21221  0167FA  50E3               	movf	plusw1,w,c
 21222  0167FC  0D04               	mullw	4
 21223  0167FE  0E00               	movlw	low lp_filter@smooth
 21224  016800  24F3               	addwf	243,w,c
 21225  016802  6ED9               	movwf	fsr2l,c
 21226  016804  0E03               	movlw	high lp_filter@smooth
 21227  016806  20F4               	addwfc	prodh,w,c
 21228  016808  6EDA               	movwf	fsr2h,c
 21229  01680A  006F FF7B FFE6     	movff	postinc2,postinc1
 21230  016810  006F FF7B FFE6     	movff	postinc2,postinc1
 21231  016816  006F FF7B FFE6     	movff	postinc2,postinc1
 21232  01681C  006F FF7B FFE6     	movff	postinc2,postinc1
 21233                           
 21234                           ;stkvar	_lp_speed @ sp[(-8)+0]
 21235  016822  0EF8               	movlw	-8
 21236  016824  006F FF8F FFE6     	movff	plusw1,postinc1
 21237  01682A  006F FF8F FFE6     	movff	plusw1,postinc1
 21238  016830  006F FF8F FFE6     	movff	plusw1,postinc1
 21239  016836  006F FF8F FFE6     	movff	plusw1,postinc1
 21240                           
 21241                           ;stkvar	_bn @ sp[(-12)+-5]
 21242  01683C  0EEF               	movlw	-17
 21243  01683E  50E3               	movf	plusw1,w,c
 21244  016840  0D04               	mullw	4
 21245  016842  0E00               	movlw	low lp_filter@smooth
 21246  016844  24F3               	addwf	243,w,c
 21247  016846  6ED9               	movwf	fsr2l,c
 21248  016848  0E03               	movlw	high lp_filter@smooth
 21249  01684A  20F4               	addwfc	prodh,w,c
 21250  01684C  6EDA               	movwf	fsr2h,c
 21251  01684E  006F FF7B FFE6     	movff	postinc2,postinc1
 21252  016854  006F FF7B FFE6     	movff	postinc2,postinc1
 21253  01685A  006F FF7B FFE6     	movff	postinc2,postinc1
 21254  016860  006F FF7B FFE6     	movff	postinc2,postinc1
 21255                           
 21256                           ;stkvar	_new @ sp[(-16)+-4]
 21257  016866  0EEC               	movlw	-20
 21258  016868  006F FF8F FFE6     	movff	plusw1,postinc1
 21259  01686E  006F FF8F FFE6     	movff	plusw1,postinc1
 21260  016874  006F FF8F FFE6     	movff	plusw1,postinc1
 21261  01687A  006F FF8F FFE6     	movff	plusw1,postinc1
 21262  016880  ECDC  F0C6         	call	___flsub	;wreg free
 21263  016884  0060  F007  FFE6   	movff	btemp,postinc1
 21264  01688A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21265  016890  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21266  016896  0060  F013  FFE6   	movff	btemp+3,postinc1
 21267  01689C  EC1A  F093         	call	___flmul	;wreg free
 21268  0168A0  0060  F007  FFE6   	movff	btemp,postinc1
 21269  0168A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21270  0168AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21271  0168B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 21272  0168B8  EC2F  F097         	call	___fladd	;wreg free
 21273                           
 21274                           ;stkvar	_bn @ sp[(-4)+-5]
 21275  0168BC  0EF7               	movlw	-9
 21276  0168BE  50E3               	movf	plusw1,w,c
 21277  0168C0  0D04               	mullw	4
 21278  0168C2  0E00               	movlw	low lp_filter@smooth
 21279  0168C4  24F3               	addwf	243,w,c
 21280  0168C6  6ED9               	movwf	fsr2l,c
 21281  0168C8  0E03               	movlw	high lp_filter@smooth
 21282  0168CA  20F4               	addwfc	prodh,w,c
 21283  0168CC  6EDA               	movwf	fsr2h,c
 21284  0168CE  0060  F007  FFDE   	movff	btemp,postinc2
 21285  0168D4  0060  F00B  FFDE   	movff	btemp+1,postinc2
 21286  0168DA  0060  F00F  FFDE   	movff	btemp+2,postinc2
 21287  0168E0  0060  F013  FFDD   	movff	btemp+3,postdec2
 21288  0168E6  52DD               	movf	postdec2,f,c
 21289  0168E8  52DD               	movf	postdec2,f,c
 21290  0168EA  006F FF78  F001    	movff	postinc2,btemp
 21291  0168F0  006F FF78  F002    	movff	postinc2,btemp+1
 21292  0168F6  006F FF78  F003    	movff	postinc2,btemp+2
 21293  0168FC  006F FF78  F004    	movff	postinc2,btemp+3
 21294  016902                     l1808:
 21295                           
 21296                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 21297  016902  0EF6               	movlw	246
 21298  016904  26E1               	addwf	fsr1l,f,c
 21299  016906  0EFF               	movlw	255
 21300  016908  22E2               	addwfc	fsr1h,f,c
 21301  01690A  0012               	return		;funcret
 21302  01690C                     __end_of_lp_filter:
 21303                           	opt callstack 0
 21304                           
 21305 ;; *************** function ___flsub *****************
 21306 ;; Defined at:
 21307 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 21308 ;; Parameters:    Size  Location     Type
 21309 ;;  b               4  [STACK] float 
 21310 ;;  a               4  [STACK] float 
 21311 ;; Auto vars:     Size  Location     Type
 21312 ;;		None
 21313 ;; Return value:  Size  Location     Type
 21314 ;;                  4  [STACK] float 
 21315 ;; Registers used:
 21316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21317 ;; Tracked objects:
 21318 ;;		On entry : 0/1
 21319 ;;		On exit  : 0/0
 21320 ;;		Unchanged: 0/0
 21321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21326 ;;Total ram usage:        0 bytes
 21327 ;; Hardware stack levels used:    1
 21328 ;; Hardware stack levels required when called:    8
 21329 ;; This function calls:
 21330 ;;		___fladd
 21331 ;; This function is called by:
 21332 ;;		_conv_raw_result
 21333 ;;		_lp_filter
 21334 ;;		_calc_model_data
 21335 ;;		_efgtoa
 21336 ;; This function uses a reentrant model
 21337 ;;
 21338                           
 21339                           	psect	text93
 21340  018DB8                     __ptext93:
 21341                           	opt callstack 0
 21342  018DB8                     ___flsub:
 21343                           	opt callstack 15
 21344                           
 21345                           ;stkvar	_a @ sp[(0)+-8]
 21346                           
 21347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21348                           ;incstack = 0
 21349  018DB8  0EFB               	movlw	-5
 21350  018DBA  7EE3               	btg	plusw1,7,c
 21351                           
 21352                           ;stkvar	_a @ sp[(0)+-8]
 21353  018DBC  0EF8               	movlw	-8
 21354  018DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 21355  018DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 21356  018DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 21357  018DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 21358                           
 21359                           ;stkvar	_b @ sp[(-4)+-4]
 21360  018DD6  0EF8               	movlw	-8
 21361  018DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 21362  018DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 21363  018DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 21364  018DEA  006F FF8F FFE6     	movff	plusw1,postinc1
 21365  018DF0  EC2F  F097         	call	___fladd	;wreg free
 21366                           
 21367                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21368  018DF4  0EF8               	movlw	248
 21369  018DF6  26E1               	addwf	fsr1l,f,c
 21370  018DF8  0EFF               	movlw	255
 21371  018DFA  22E2               	addwfc	fsr1h,f,c
 21372  018DFC  0012               	return		;funcret
 21373  018DFE                     __end_of___flsub:
 21374                           	opt callstack 0
 21375                           
 21376 ;; *************** function ___fladd *****************
 21377 ;; Defined at:
 21378 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 21379 ;; Parameters:    Size  Location     Type
 21380 ;;  b               4  [STACK] float 
 21381 ;;  a               4  [STACK] float 
 21382 ;; Auto vars:     Size  Location     Type
 21383 ;;  grs             1  [STACK] unsigned char 
 21384 ;;  bexp            1  [STACK] unsigned char 
 21385 ;;  aexp            1  [STACK] unsigned char 
 21386 ;;  signs           1  [STACK] unsigned char 
 21387 ;; Return value:  Size  Location     Type
 21388 ;;                  4  [STACK] unsigned char 
 21389 ;; Registers used:
 21390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21391 ;; Tracked objects:
 21392 ;;		On entry : 0/0
 21393 ;;		On exit  : 0/0
 21394 ;;		Unchanged: 0/0
 21395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21400 ;;Total ram usage:        0 bytes
 21401 ;; Hardware stack levels used:    1
 21402 ;; Hardware stack levels required when called:    7
 21403 ;; This function calls:
 21404 ;;		Nothing
 21405 ;; This function is called by:
 21406 ;;		_lp_filter
 21407 ;;		_calc_model_data
 21408 ;;		_calc_bsoc
 21409 ;;		_efgtoa
 21410 ;;		___flsub
 21411 ;; This function uses a reentrant model
 21412 ;;
 21413                           
 21414                           	psect	text94
 21415  012E5E                     __ptext94:
 21416                           	opt callstack 0
 21417  012E5E                     ___fladd:
 21418                           	opt callstack 0
 21419                           
 21420                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21421  012E5E  52E6               	movf	postinc1,f,c
 21422  012E60  52E6               	movf	postinc1,f,c
 21423  012E62  52E6               	movf	postinc1,f,c
 21424  012E64  52E6               	movf	postinc1,f,c
 21425                           
 21426                           ;stkvar	_b @ sp[(-4)+-4]
 21427                           
 21428                           ;incstack = 0
 21429  012E66  0EFB               	movlw	251
 21430  012E68  24E1               	addwf	fsr1l,w,c
 21431  012E6A  6ED9               	movwf	fsr2l,c
 21432  012E6C  0EFF               	movlw	255
 21433  012E6E  20E2               	addwfc	fsr1h,w,c
 21434  012E70  6EDA               	movwf	fsr2h,c
 21435  012E72  50DF               	movf	indf2,w,c
 21436  012E74  6E0C               	movwf	(btemp+11)^0,c
 21437  012E76  0E80               	movlw	128
 21438  012E78  160C               	andwf	(btemp+11)^0,f,c
 21439                           
 21440                           ;stkvar	_signs @ sp[(-4)+3]
 21441  012E7A  0EFF               	movlw	-1
 21442  012E7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21443                           
 21444                           ;stkvar	_b @ sp[(-4)+-4]
 21445  012E82  0EFB               	movlw	251
 21446  012E84  24E1               	addwf	fsr1l,w,c
 21447  012E86  6ED9               	movwf	fsr2l,c
 21448  012E88  0EFF               	movlw	255
 21449  012E8A  20E2               	addwfc	fsr1h,w,c
 21450  012E8C  6EDA               	movwf	fsr2h,c
 21451  012E8E  50DF               	movf	indf2,w,c
 21452  012E90  6E0C               	movwf	(btemp+11)^0,c
 21453  012E92  90D8               	bcf	status,0,c
 21454  012E94  340C               	rlcf	(btemp+11)^0,w,c
 21455  012E96  6E0B               	movwf	(btemp+10)^0,c
 21456                           
 21457                           ;stkvar	_bexp @ sp[(-4)+1]
 21458  012E98  0EFD               	movlw	-3
 21459  012E9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21460                           
 21461                           ;stkvar	_b @ sp[(-4)+-4]
 21462  012EA0  0EFA               	movlw	250
 21463  012EA2  24E1               	addwf	fsr1l,w,c
 21464  012EA4  6ED9               	movwf	fsr2l,c
 21465  012EA6  0EFF               	movlw	255
 21466  012EA8  20E2               	addwfc	fsr1h,w,c
 21467  012EAA  6EDA               	movwf	fsr2h,c
 21468  012EAC  AEDF               	btfss	indf2,7,c
 21469  012EAE  D002               	goto	l8222
 21470                           
 21471                           ;stkvar	_bexp @ sp[(-4)+1]
 21472  012EB0  0EFD               	movlw	-3
 21473  012EB2  80E3               	bsf	plusw1,0,c
 21474  012EB4                     l8222:
 21475                           
 21476                           ;stkvar	_bexp @ sp[(-4)+1]
 21477  012EB4  0EFD               	movlw	-3
 21478  012EB6  50E3               	movf	plusw1,w,c
 21479  012EB8  B4D8               	btfsc	status,2,c
 21480  012EBA  D027               	goto	l8232
 21481                           
 21482                           ;stkvar	_bexp @ sp[(-4)+1]
 21483  012EBC  0EFD               	movlw	-3
 21484  012EBE  28E3               	incf	plusw1,w,c
 21485  012EC0  A4D8               	btfss	status,2,c
 21486  012EC2  D018               	goto	l8228
 21487  012EC4  0E00               	movlw	0
 21488  012EC6  6E09               	movwf	(btemp+8)^0,c
 21489  012EC8  0E00               	movlw	0
 21490  012ECA  6E0A               	movwf	(btemp+9)^0,c
 21491  012ECC  0E00               	movlw	0
 21492  012ECE  6E0B               	movwf	(btemp+10)^0,c
 21493  012ED0  0E00               	movlw	0
 21494  012ED2  6E0C               	movwf	(btemp+11)^0,c
 21495                           
 21496                           ;stkvar	_b @ sp[(-4)+-4]
 21497  012ED4  0EF8               	movlw	-8
 21498  012ED6  0060  F027  FFE3   	movff	btemp+8,plusw1
 21499  012EDC  0EF9               	movlw	-7
 21500  012EDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21501  012EE4  0EFA               	movlw	-6
 21502  012EE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21503  012EEC  0EFB               	movlw	-5
 21504  012EEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21505  012EF4                     l8228:
 21506                           
 21507                           ;stkvar	_b @ sp[(-4)+-4]
 21508  012EF4  0EFA               	movlw	-6
 21509  012EF6  8EE3               	bsf	plusw1,7,c
 21510                           
 21511                           ;stkvar	_b @ sp[(-4)+-4]
 21512  012EF8  0EFB               	movlw	251
 21513  012EFA  24E1               	addwf	fsr1l,w,c
 21514  012EFC  6ED9               	movwf	fsr2l,c
 21515  012EFE  0EFF               	movlw	255
 21516  012F00  20E2               	addwfc	fsr1h,w,c
 21517  012F02  6EDA               	movwf	fsr2h,c
 21518  012F04  0E00               	movlw	0
 21519  012F06  6EDF               	movwf	indf2,c
 21520  012F08  D018               	goto	l8234
 21521  012F0A                     l8232:
 21522  012F0A  0E00               	movlw	0
 21523  012F0C  6E09               	movwf	(btemp+8)^0,c
 21524  012F0E  0E00               	movlw	0
 21525  012F10  6E0A               	movwf	(btemp+9)^0,c
 21526  012F12  0E00               	movlw	0
 21527  012F14  6E0B               	movwf	(btemp+10)^0,c
 21528  012F16  0E00               	movlw	0
 21529  012F18  6E0C               	movwf	(btemp+11)^0,c
 21530                           
 21531                           ;stkvar	_b @ sp[(-4)+-4]
 21532  012F1A  0EF8               	movlw	-8
 21533  012F1C  0060  F027  FFE3   	movff	btemp+8,plusw1
 21534  012F22  0EF9               	movlw	-7
 21535  012F24  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21536  012F2A  0EFA               	movlw	-6
 21537  012F2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21538  012F32  0EFB               	movlw	-5
 21539  012F34  0060  F033  FFE3   	movff	btemp+11,plusw1
 21540  012F3A                     l8234:
 21541                           
 21542                           ;stkvar	_a @ sp[(-4)+-8]
 21543  012F3A  0EF7               	movlw	247
 21544  012F3C  24E1               	addwf	fsr1l,w,c
 21545  012F3E  6ED9               	movwf	fsr2l,c
 21546  012F40  0EFF               	movlw	255
 21547  012F42  20E2               	addwfc	fsr1h,w,c
 21548  012F44  6EDA               	movwf	fsr2h,c
 21549  012F46  50DF               	movf	indf2,w,c
 21550  012F48  6E0C               	movwf	(btemp+11)^0,c
 21551  012F4A  0E80               	movlw	128
 21552  012F4C  160C               	andwf	(btemp+11)^0,f,c
 21553                           
 21554                           ;stkvar	_aexp @ sp[(-4)+2]
 21555  012F4E  0EFE               	movlw	-2
 21556  012F50  0060  F033  FFE3   	movff	btemp+11,plusw1
 21557                           
 21558                           ;stkvar	_signs @ sp[(-4)+3]
 21559                           ;stkvar	_aexp @ sp[(-4)+2]
 21560  012F56  50E1               	movf	fsr1l,w,c
 21561  012F58  0FFE               	addlw	-2
 21562  012F5A  6ED9               	movwf	fsr2l,c
 21563  012F5C  50E2               	movf	fsr1h,w,c
 21564  012F5E  6EDA               	movwf	fsr2h,c
 21565  012F60  0EFF               	movlw	255
 21566  012F62  22DA               	addwfc	fsr2h,f,c
 21567  012F64  0EFF               	movlw	-1
 21568  012F66  50E3               	movf	plusw1,w,c
 21569  012F68  18DE               	xorwf	postinc2,w,c
 21570  012F6A  B4D8               	btfsc	status,2,c
 21571  012F6C  D002               	goto	l8240
 21572                           
 21573                           ;stkvar	_signs @ sp[(-4)+3]
 21574  012F6E  0EFF               	movlw	-1
 21575  012F70  8CE3               	bsf	plusw1,6,c
 21576  012F72                     l8240:
 21577                           
 21578                           ;stkvar	_a @ sp[(-4)+-8]
 21579  012F72  0EF7               	movlw	247
 21580  012F74  24E1               	addwf	fsr1l,w,c
 21581  012F76  6ED9               	movwf	fsr2l,c
 21582  012F78  0EFF               	movlw	255
 21583  012F7A  20E2               	addwfc	fsr1h,w,c
 21584  012F7C  6EDA               	movwf	fsr2h,c
 21585  012F7E  50DF               	movf	indf2,w,c
 21586  012F80  6E0C               	movwf	(btemp+11)^0,c
 21587  012F82  90D8               	bcf	status,0,c
 21588  012F84  340C               	rlcf	(btemp+11)^0,w,c
 21589  012F86  6E0B               	movwf	(btemp+10)^0,c
 21590                           
 21591                           ;stkvar	_aexp @ sp[(-4)+2]
 21592  012F88  0EFE               	movlw	-2
 21593  012F8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21594                           
 21595                           ;stkvar	_a @ sp[(-4)+-8]
 21596  012F90  0EF6               	movlw	246
 21597  012F92  24E1               	addwf	fsr1l,w,c
 21598  012F94  6ED9               	movwf	fsr2l,c
 21599  012F96  0EFF               	movlw	255
 21600  012F98  20E2               	addwfc	fsr1h,w,c
 21601  012F9A  6EDA               	movwf	fsr2h,c
 21602  012F9C  AEDF               	btfss	indf2,7,c
 21603  012F9E  D002               	goto	l8246
 21604                           
 21605                           ;stkvar	_aexp @ sp[(-4)+2]
 21606  012FA0  0EFE               	movlw	-2
 21607  012FA2  80E3               	bsf	plusw1,0,c
 21608  012FA4                     l8246:
 21609                           
 21610                           ;stkvar	_aexp @ sp[(-4)+2]
 21611  012FA4  0EFE               	movlw	-2
 21612  012FA6  50E3               	movf	plusw1,w,c
 21613  012FA8  B4D8               	btfsc	status,2,c
 21614  012FAA  D027               	goto	l8256
 21615                           
 21616                           ;stkvar	_aexp @ sp[(-4)+2]
 21617  012FAC  0EFE               	movlw	-2
 21618  012FAE  28E3               	incf	plusw1,w,c
 21619  012FB0  A4D8               	btfss	status,2,c
 21620  012FB2  D018               	goto	l8252
 21621  012FB4  0E00               	movlw	0
 21622  012FB6  6E09               	movwf	(btemp+8)^0,c
 21623  012FB8  0E00               	movlw	0
 21624  012FBA  6E0A               	movwf	(btemp+9)^0,c
 21625  012FBC  0E00               	movlw	0
 21626  012FBE  6E0B               	movwf	(btemp+10)^0,c
 21627  012FC0  0E00               	movlw	0
 21628  012FC2  6E0C               	movwf	(btemp+11)^0,c
 21629                           
 21630                           ;stkvar	_a @ sp[(-4)+-8]
 21631  012FC4  0EF4               	movlw	-12
 21632  012FC6  0060  F027  FFE3   	movff	btemp+8,plusw1
 21633  012FCC  0EF5               	movlw	-11
 21634  012FCE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21635  012FD4  0EF6               	movlw	-10
 21636  012FD6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21637  012FDC  0EF7               	movlw	-9
 21638  012FDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21639  012FE4                     l8252:
 21640                           
 21641                           ;stkvar	_a @ sp[(-4)+-8]
 21642  012FE4  0EF6               	movlw	-10
 21643  012FE6  8EE3               	bsf	plusw1,7,c
 21644                           
 21645                           ;stkvar	_a @ sp[(-4)+-8]
 21646  012FE8  0EF7               	movlw	247
 21647  012FEA  24E1               	addwf	fsr1l,w,c
 21648  012FEC  6ED9               	movwf	fsr2l,c
 21649  012FEE  0EFF               	movlw	255
 21650  012FF0  20E2               	addwfc	fsr1h,w,c
 21651  012FF2  6EDA               	movwf	fsr2h,c
 21652  012FF4  0E00               	movlw	0
 21653  012FF6  6EDF               	movwf	indf2,c
 21654  012FF8  D018               	goto	l8258
 21655  012FFA                     l8256:
 21656  012FFA  0E00               	movlw	0
 21657  012FFC  6E09               	movwf	(btemp+8)^0,c
 21658  012FFE  0E00               	movlw	0
 21659  013000  6E0A               	movwf	(btemp+9)^0,c
 21660  013002  0E00               	movlw	0
 21661  013004  6E0B               	movwf	(btemp+10)^0,c
 21662  013006  0E00               	movlw	0
 21663  013008  6E0C               	movwf	(btemp+11)^0,c
 21664                           
 21665                           ;stkvar	_a @ sp[(-4)+-8]
 21666  01300A  0EF4               	movlw	-12
 21667  01300C  0060  F027  FFE3   	movff	btemp+8,plusw1
 21668  013012  0EF5               	movlw	-11
 21669  013014  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21670  01301A  0EF6               	movlw	-10
 21671  01301C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21672  013022  0EF7               	movlw	-9
 21673  013024  0060  F033  FFE3   	movff	btemp+11,plusw1
 21674  01302A                     l8258:
 21675                           
 21676                           ;stkvar	_bexp @ sp[(-4)+1]
 21677                           ;stkvar	_aexp @ sp[(-4)+2]
 21678  01302A  50E1               	movf	fsr1l,w,c
 21679  01302C  0FFE               	addlw	-2
 21680  01302E  6ED9               	movwf	fsr2l,c
 21681  013030  50E2               	movf	fsr1h,w,c
 21682  013032  6EDA               	movwf	fsr2h,c
 21683  013034  0EFF               	movlw	255
 21684  013036  22DA               	addwfc	fsr2h,f,c
 21685  013038  0EFD               	movlw	-3
 21686  01303A  50E3               	movf	plusw1,w,c
 21687  01303C  5CDE               	subwf	postinc2,w,c
 21688  01303E  B0D8               	btfsc	status,0,c
 21689  013040  D0A4               	goto	l8294
 21690                           
 21691                           ;stkvar	_signs @ sp[(-4)+3]
 21692  013042  0EFF               	movlw	-1
 21693  013044  ACE3               	btfss	plusw1,6,c
 21694  013046  D002               	goto	l8264
 21695                           
 21696                           ;stkvar	_signs @ sp[(-4)+3]
 21697  013048  0EFF               	movlw	-1
 21698  01304A  7EE3               	btg	plusw1,7,c
 21699  01304C                     l8264:
 21700                           
 21701                           ;stkvar	_bexp @ sp[(-4)+1]
 21702                           ;stkvar	_grs @ sp[(-4)+0]
 21703  01304C  0EFD               	movlw	-3
 21704  01304E  006F FF8C  F001    	movff	plusw1,btemp
 21705  013054  0EFC               	movlw	-4
 21706  013056  0060  F007  FFE3   	movff	btemp,plusw1
 21707                           
 21708                           ;stkvar	_aexp @ sp[(-4)+2]
 21709                           ;stkvar	_bexp @ sp[(-4)+1]
 21710  01305C  0EFE               	movlw	-2
 21711  01305E  006F FF8C  F001    	movff	plusw1,btemp
 21712  013064  0EFD               	movlw	-3
 21713  013066  0060  F007  FFE3   	movff	btemp,plusw1
 21714                           
 21715                           ;stkvar	_grs @ sp[(-4)+0]
 21716                           ;stkvar	_aexp @ sp[(-4)+2]
 21717  01306C  0EFC               	movlw	-4
 21718  01306E  006F FF8C  F001    	movff	plusw1,btemp
 21719  013074  0EFE               	movlw	-2
 21720  013076  0060  F007  FFE3   	movff	btemp,plusw1
 21721                           
 21722                           ;stkvar	_b @ sp[(-4)+-4]
 21723                           ;stkvar	_grs @ sp[(-4)+0]
 21724  01307C  0EF8               	movlw	-8
 21725  01307E  006F FF8C  F001    	movff	plusw1,btemp
 21726  013084  0EFC               	movlw	-4
 21727  013086  0060  F007  FFE3   	movff	btemp,plusw1
 21728                           
 21729                           ;stkvar	_a @ sp[(-4)+-8]
 21730                           ;stkvar	_b @ sp[(-4)+-4]
 21731  01308C  0EF4               	movlw	-12
 21732  01308E  006F FF8C  F001    	movff	plusw1,btemp
 21733  013094  0EF8               	movlw	-8
 21734  013096  0060  F007  FFE3   	movff	btemp,plusw1
 21735                           
 21736                           ;stkvar	_grs @ sp[(-4)+0]
 21737                           ;stkvar	_a @ sp[(-4)+-8]
 21738  01309C  0EFC               	movlw	-4
 21739  01309E  006F FF8C  F001    	movff	plusw1,btemp
 21740  0130A4  0EF4               	movlw	-12
 21741  0130A6  0060  F007  FFE3   	movff	btemp,plusw1
 21742                           
 21743                           ;stkvar	_b @ sp[(-4)+-4]
 21744  0130AC  0EF9               	movlw	249
 21745  0130AE  24E1               	addwf	fsr1l,w,c
 21746  0130B0  6ED9               	movwf	fsr2l,c
 21747  0130B2  0EFF               	movlw	255
 21748  0130B4  20E2               	addwfc	fsr1h,w,c
 21749  0130B6  6EDA               	movwf	fsr2h,c
 21750  0130B8  50DF               	movf	indf2,w,c
 21751  0130BA  6E0C               	movwf	(btemp+11)^0,c
 21752                           
 21753                           ;stkvar	_grs @ sp[(-4)+0]
 21754  0130BC  0EFC               	movlw	-4
 21755  0130BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21756                           
 21757                           ;stkvar	_a @ sp[(-4)+-8]
 21758  0130C4  0EF5               	movlw	245
 21759  0130C6  24E1               	addwf	fsr1l,w,c
 21760  0130C8  6ED9               	movwf	fsr2l,c
 21761  0130CA  0EFF               	movlw	255
 21762  0130CC  20E2               	addwfc	fsr1h,w,c
 21763  0130CE  6EDA               	movwf	fsr2h,c
 21764                           
 21765                           ;stkvar	_b @ sp[(-4)+-4]
 21766  0130D0  0EF9               	movlw	249
 21767  0130D2  24E1               	addwf	fsr1l,w,c
 21768  0130D4  6EE9               	movwf	fsr0l,c
 21769  0130D6  0EFF               	movlw	255
 21770  0130D8  20E2               	addwfc	fsr1h,w,c
 21771  0130DA  6EEA               	movwf	fsr0h,c
 21772  0130DC  006F FF7F FFEF     	movff	indf2,indf0
 21773                           
 21774                           ;stkvar	_grs @ sp[(-4)+0]
 21775                           ;stkvar	_a @ sp[(-4)+-8]
 21776  0130E2  0EF5               	movlw	245
 21777  0130E4  24E1               	addwf	fsr1l,w,c
 21778  0130E6  6ED9               	movwf	fsr2l,c
 21779  0130E8  0EFF               	movlw	255
 21780  0130EA  20E2               	addwfc	fsr1h,w,c
 21781  0130EC  6EDA               	movwf	fsr2h,c
 21782  0130EE  0EFC               	movlw	-4
 21783  0130F0  006F FF8F FFDF     	movff	plusw1,indf2
 21784                           
 21785                           ;stkvar	_b @ sp[(-4)+-4]
 21786  0130F6  0EFA               	movlw	250
 21787  0130F8  24E1               	addwf	fsr1l,w,c
 21788  0130FA  6ED9               	movwf	fsr2l,c
 21789  0130FC  0EFF               	movlw	255
 21790  0130FE  20E2               	addwfc	fsr1h,w,c
 21791  013100  6EDA               	movwf	fsr2h,c
 21792  013102  50DF               	movf	indf2,w,c
 21793  013104  6E0C               	movwf	(btemp+11)^0,c
 21794                           
 21795                           ;stkvar	_grs @ sp[(-4)+0]
 21796  013106  0EFC               	movlw	-4
 21797  013108  0060  F033  FFE3   	movff	btemp+11,plusw1
 21798                           
 21799                           ;stkvar	_a @ sp[(-4)+-8]
 21800  01310E  0EF6               	movlw	246
 21801  013110  24E1               	addwf	fsr1l,w,c
 21802  013112  6ED9               	movwf	fsr2l,c
 21803  013114  0EFF               	movlw	255
 21804  013116  20E2               	addwfc	fsr1h,w,c
 21805  013118  6EDA               	movwf	fsr2h,c
 21806                           
 21807                           ;stkvar	_b @ sp[(-4)+-4]
 21808  01311A  0EFA               	movlw	250
 21809  01311C  24E1               	addwf	fsr1l,w,c
 21810  01311E  6EE9               	movwf	fsr0l,c
 21811  013120  0EFF               	movlw	255
 21812  013122  20E2               	addwfc	fsr1h,w,c
 21813  013124  6EEA               	movwf	fsr0h,c
 21814  013126  006F FF7F FFEF     	movff	indf2,indf0
 21815                           
 21816                           ;stkvar	_grs @ sp[(-4)+0]
 21817                           ;stkvar	_a @ sp[(-4)+-8]
 21818  01312C  0EF6               	movlw	246
 21819  01312E  24E1               	addwf	fsr1l,w,c
 21820  013130  6ED9               	movwf	fsr2l,c
 21821  013132  0EFF               	movlw	255
 21822  013134  20E2               	addwfc	fsr1h,w,c
 21823  013136  6EDA               	movwf	fsr2h,c
 21824  013138  0EFC               	movlw	-4
 21825  01313A  006F FF8F FFDF     	movff	plusw1,indf2
 21826                           
 21827                           ;stkvar	_b @ sp[(-4)+-4]
 21828  013140  0EFB               	movlw	251
 21829  013142  24E1               	addwf	fsr1l,w,c
 21830  013144  6ED9               	movwf	fsr2l,c
 21831  013146  0EFF               	movlw	255
 21832  013148  20E2               	addwfc	fsr1h,w,c
 21833  01314A  6EDA               	movwf	fsr2h,c
 21834  01314C  50DF               	movf	indf2,w,c
 21835  01314E  6E0C               	movwf	(btemp+11)^0,c
 21836                           
 21837                           ;stkvar	_grs @ sp[(-4)+0]
 21838  013150  0EFC               	movlw	-4
 21839  013152  0060  F033  FFE3   	movff	btemp+11,plusw1
 21840                           
 21841                           ;stkvar	_a @ sp[(-4)+-8]
 21842  013158  0EF7               	movlw	247
 21843  01315A  24E1               	addwf	fsr1l,w,c
 21844  01315C  6ED9               	movwf	fsr2l,c
 21845  01315E  0EFF               	movlw	255
 21846  013160  20E2               	addwfc	fsr1h,w,c
 21847  013162  6EDA               	movwf	fsr2h,c
 21848                           
 21849                           ;stkvar	_b @ sp[(-4)+-4]
 21850  013164  0EFB               	movlw	251
 21851  013166  24E1               	addwf	fsr1l,w,c
 21852  013168  6EE9               	movwf	fsr0l,c
 21853  01316A  0EFF               	movlw	255
 21854  01316C  20E2               	addwfc	fsr1h,w,c
 21855  01316E  6EEA               	movwf	fsr0h,c
 21856  013170  006F FF7F FFEF     	movff	indf2,indf0
 21857                           
 21858                           ;stkvar	_grs @ sp[(-4)+0]
 21859                           ;stkvar	_a @ sp[(-4)+-8]
 21860  013176  0EF7               	movlw	247
 21861  013178  24E1               	addwf	fsr1l,w,c
 21862  01317A  6ED9               	movwf	fsr2l,c
 21863  01317C  0EFF               	movlw	255
 21864  01317E  20E2               	addwfc	fsr1h,w,c
 21865  013180  6EDA               	movwf	fsr2h,c
 21866  013182  0EFC               	movlw	-4
 21867  013184  006F FF8F FFDF     	movff	plusw1,indf2
 21868  01318A                     l8294:
 21869                           
 21870                           ;stkvar	_grs @ sp[(-4)+0]
 21871  01318A  0EFC               	movlw	-4
 21872  01318C  6AE3               	clrf	plusw1,c
 21873                           
 21874                           ;stkvar	_aexp @ sp[(-4)+2]
 21875  01318E  0EFE               	movlw	-2
 21876  013190  50E3               	movf	plusw1,w,c
 21877  013192  6E0B               	movwf	(btemp+10)^0,c
 21878  013194  6A0C               	clrf	(btemp+11)^0,c
 21879                           
 21880                           ;stkvar	_bexp @ sp[(-4)+1]
 21881  013196  0EFD               	movlw	-3
 21882  013198  50E3               	movf	plusw1,w,c
 21883  01319A  5E0B               	subwf	(btemp+10)^0,f,c
 21884  01319C  0E00               	movlw	0
 21885  01319E  5A0C               	subwfb	(btemp+11)^0,f,c
 21886  0131A0  BE0C               	btfsc	(btemp+11)^0,7,c
 21887  0131A2  D062               	goto	l8318
 21888  0131A4  500C               	movf	(btemp+11)^0,w,c
 21889  0131A6  E104               	bnz	u7180
 21890  0131A8  0E1A               	movlw	26
 21891  0131AA  5C0B               	subwf	(btemp+10)^0,w,c
 21892  0131AC  A0D8               	btfss	status,0,c
 21893  0131AE  D05C               	goto	l8318
 21894  0131B0                     u7180:
 21895                           
 21896                           ;stkvar	_b @ sp[(-4)+-4]
 21897  0131B0  0EF8               	movlw	-8
 21898  0131B2  50E3               	movf	plusw1,w,c
 21899  0131B4  E10A               	bnz	u7191
 21900  0131B6  0EF9               	movlw	-7
 21901  0131B8  50E3               	movf	plusw1,w,c
 21902  0131BA  E107               	bnz	u7191
 21903  0131BC  0EFA               	movlw	-6
 21904  0131BE  50E3               	movf	plusw1,w,c
 21905  0131C0  E104               	bnz	u7191
 21906  0131C2  0EFB               	movlw	-5
 21907  0131C4  50E3               	movf	plusw1,w,c
 21908  0131C6  B4D8               	btfsc	status,2,c
 21909  0131C8  D003               	goto	u7190
 21910  0131CA                     u7191:
 21911  0131CA  6A0C               	clrf	(btemp+11)^0,c
 21912  0131CC  2A0C               	incf	(btemp+11)^0,f,c
 21913  0131CE  D001               	goto	u7208
 21914  0131D0                     u7190:
 21915  0131D0  6A0C               	clrf	(btemp+11)^0,c
 21916  0131D2                     u7208:
 21917                           
 21918                           ;stkvar	_grs @ sp[(-4)+0]
 21919  0131D2  0EFC               	movlw	-4
 21920  0131D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21921                           
 21922                           ;stkvar	_b @ sp[(-4)+-4]
 21923  0131DA  0EF8               	movlw	-8
 21924  0131DC  6AE3               	clrf	plusw1,c
 21925  0131DE  0EF9               	movlw	-7
 21926  0131E0  6AE3               	clrf	plusw1,c
 21927  0131E2  0EFA               	movlw	-6
 21928  0131E4  6AE3               	clrf	plusw1,c
 21929  0131E6  0EFB               	movlw	-5
 21930  0131E8  6AE3               	clrf	plusw1,c
 21931                           
 21932                           ;stkvar	_aexp @ sp[(-4)+2]
 21933                           ;stkvar	_bexp @ sp[(-4)+1]
 21934  0131EA  0EFE               	movlw	-2
 21935  0131EC  006F FF8C  F001    	movff	plusw1,btemp
 21936  0131F2  0EFD               	movlw	-3
 21937  0131F4  0060  F007  FFE3   	movff	btemp,plusw1
 21938  0131FA  D042               	goto	u7240
 21939  0131FC                     l8304:
 21940                           
 21941                           ;stkvar	_grs @ sp[(-4)+0]
 21942  0131FC  0EFC               	movlw	-4
 21943  0131FE  A0E3               	btfss	plusw1,0,c
 21944  013200  D00D               	goto	l8308
 21945                           
 21946                           ;stkvar	_grs @ sp[(-4)+0]
 21947  013202  0EFC               	movlw	-4
 21948  013204  006F FF8C  F00C    	movff	plusw1,btemp+11
 21949  01320A  90D8               	bcf	status,0,c
 21950  01320C  320C               	rrcf	(btemp+11)^0,f,c
 21951  01320E  0E01               	movlw	1
 21952  013210  120C               	iorwf	(btemp+11)^0,f,c
 21953                           
 21954                           ;stkvar	_grs @ sp[(-4)+0]
 21955  013212  0EFC               	movlw	-4
 21956  013214  0060  F033  FFE3   	movff	btemp+11,plusw1
 21957  01321A  D009               	goto	l8310
 21958  01321C                     l8308:
 21959                           
 21960                           ;stkvar	_grs @ sp[(-4)+0]
 21961  01321C  50E1               	movf	fsr1l,w,c
 21962  01321E  0FFC               	addlw	-4
 21963  013220  6ED9               	movwf	fsr2l,c
 21964  013222  50E2               	movf	fsr1h,w,c
 21965  013224  6EDA               	movwf	fsr2h,c
 21966  013226  0EFF               	movlw	255
 21967  013228  22DA               	addwfc	fsr2h,f,c
 21968  01322A  90D8               	bcf	status,0,c
 21969  01322C  32DF               	rrcf	indf2,f,c
 21970  01322E                     l8310:
 21971                           
 21972                           ;stkvar	_b @ sp[(-4)+-4]
 21973  01322E  0EF8               	movlw	-8
 21974  013230  A0E3               	btfss	plusw1,0,c
 21975  013232  D002               	goto	l8314
 21976                           
 21977                           ;stkvar	_grs @ sp[(-4)+0]
 21978  013234  0EFC               	movlw	-4
 21979  013236  8EE3               	bsf	plusw1,7,c
 21980  013238                     l8314:
 21981  013238  0E01               	movlw	1
 21982  01323A  6E0C               	movwf	(btemp+11)^0,c
 21983                           
 21984                           ;stkvar	_b @ sp[(-4)+-4]
 21985  01323C  50E1               	movf	fsr1l,w,c
 21986  01323E  0FF8               	addlw	-8
 21987  013240  6ED9               	movwf	fsr2l,c
 21988  013242  50E2               	movf	fsr1h,w,c
 21989  013244  6EDA               	movwf	fsr2h,c
 21990  013246  0EFF               	movlw	255
 21991  013248  22DA               	addwfc	fsr2h,f,c
 21992  01324A  280C               	incf	(btemp+11)^0,w,c
 21993  01324C  52DE               	movf	postinc2,f,c
 21994  01324E  D008               	goto	u7230
 21995  013250                     u7235:
 21996  013250  52DE               	movf	postinc2,f,c
 21997  013252  90D8               	bcf	status,0,c
 21998  013254  BEDC               	btfsc	preinc2,7,c
 21999  013256  80D8               	bsf	status,0,c
 22000  013258  32DD               	rrcf	postdec2,f,c
 22001  01325A  32DD               	rrcf	postdec2,f,c
 22002  01325C  32DD               	rrcf	postdec2,f,c
 22003  01325E  32DE               	rrcf	postinc2,f,c
 22004  013260                     u7230:
 22005  013260  2EE8               	decfsz	wreg,f,c
 22006  013262  D7F6               	goto	u7235
 22007                           
 22008                           ;stkvar	_bexp @ sp[(-4)+1]
 22009  013264  0EFD               	movlw	-3
 22010  013266  2AE3               	incf	plusw1,f,c
 22011  013268                     l8318:
 22012                           
 22013                           ;stkvar	_aexp @ sp[(-4)+2]
 22014                           ;stkvar	_bexp @ sp[(-4)+1]
 22015  013268  50E1               	movf	fsr1l,w,c
 22016  01326A  0FFD               	addlw	-3
 22017  01326C  6ED9               	movwf	fsr2l,c
 22018  01326E  50E2               	movf	fsr1h,w,c
 22019  013270  6EDA               	movwf	fsr2h,c
 22020  013272  0EFF               	movlw	255
 22021  013274  22DA               	addwfc	fsr2h,f,c
 22022  013276  0EFE               	movlw	-2
 22023  013278  50E3               	movf	plusw1,w,c
 22024  01327A  5CDE               	subwf	postinc2,w,c
 22025  01327C  A0D8               	btfss	status,0,c
 22026  01327E  D7BE               	goto	l8304
 22027  013280                     u7240:
 22028                           
 22029                           ;stkvar	_signs @ sp[(-4)+3]
 22030  013280  0EFF               	movlw	-1
 22031  013282  BCE3               	btfsc	plusw1,6,c
 22032  013284  D066               	goto	l8346
 22033                           
 22034                           ;stkvar	_bexp @ sp[(-4)+1]
 22035  013286  0EFD               	movlw	-3
 22036  013288  50E3               	movf	plusw1,w,c
 22037  01328A  B4D8               	btfsc	status,2,c
 22038  01328C  D0F2               	goto	u7340
 22039                           
 22040                           ;stkvar	_a @ sp[(-4)+-8]
 22041                           ;stkvar	_b @ sp[(-4)+-4]
 22042  01328E  0EF8               	movlw	-8
 22043  013290  50E3               	movf	plusw1,w,c
 22044  013292  6E01               	movwf	btemp^0,c
 22045  013294  0EF4               	movlw	-12
 22046  013296  50E3               	movf	plusw1,w,c
 22047  013298  2601               	addwf	btemp^0,f,c
 22048  01329A  0EF8               	movlw	-8
 22049  01329C  0060  F007  FFE3   	movff	btemp,plusw1
 22050  0132A2  0EF9               	movlw	-7
 22051  0132A4  50E3               	movf	plusw1,w,c
 22052  0132A6  6E01               	movwf	btemp^0,c
 22053  0132A8  0EF5               	movlw	-11
 22054  0132AA  50E3               	movf	plusw1,w,c
 22055  0132AC  2201               	addwfc	btemp^0,f,c
 22056  0132AE  0EF9               	movlw	-7
 22057  0132B0  0060  F007  FFE3   	movff	btemp,plusw1
 22058  0132B6  0EFA               	movlw	-6
 22059  0132B8  50E3               	movf	plusw1,w,c
 22060  0132BA  6E01               	movwf	btemp^0,c
 22061  0132BC  0EF6               	movlw	-10
 22062  0132BE  50E3               	movf	plusw1,w,c
 22063  0132C0  2201               	addwfc	btemp^0,f,c
 22064  0132C2  0EFA               	movlw	-6
 22065  0132C4  0060  F007  FFE3   	movff	btemp,plusw1
 22066  0132CA  0EFB               	movlw	-5
 22067  0132CC  50E3               	movf	plusw1,w,c
 22068  0132CE  6E01               	movwf	btemp^0,c
 22069  0132D0  0EF7               	movlw	-9
 22070  0132D2  50E3               	movf	plusw1,w,c
 22071  0132D4  2201               	addwfc	btemp^0,f,c
 22072  0132D6  0EFB               	movlw	-5
 22073  0132D8  0060  F007  FFE3   	movff	btemp,plusw1
 22074                           
 22075                           ;stkvar	_b @ sp[(-4)+-4]
 22076  0132DE  0EFB               	movlw	-5
 22077  0132E0  A0E3               	btfss	plusw1,0,c
 22078  0132E2  D101               	goto	u7380
 22079                           
 22080                           ;stkvar	_grs @ sp[(-4)+0]
 22081  0132E4  0EFC               	movlw	-4
 22082  0132E6  A0E3               	btfss	plusw1,0,c
 22083  0132E8  D00D               	goto	l8336
 22084                           
 22085                           ;stkvar	_grs @ sp[(-4)+0]
 22086  0132EA  0EFC               	movlw	-4
 22087  0132EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22088  0132F2  90D8               	bcf	status,0,c
 22089  0132F4  320C               	rrcf	(btemp+11)^0,f,c
 22090  0132F6  0E01               	movlw	1
 22091  0132F8  120C               	iorwf	(btemp+11)^0,f,c
 22092                           
 22093                           ;stkvar	_grs @ sp[(-4)+0]
 22094  0132FA  0EFC               	movlw	-4
 22095  0132FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22096  013302  D009               	goto	l8338
 22097  013304                     l8336:
 22098                           
 22099                           ;stkvar	_grs @ sp[(-4)+0]
 22100  013304  50E1               	movf	fsr1l,w,c
 22101  013306  0FFC               	addlw	-4
 22102  013308  6ED9               	movwf	fsr2l,c
 22103  01330A  50E2               	movf	fsr1h,w,c
 22104  01330C  6EDA               	movwf	fsr2h,c
 22105  01330E  0EFF               	movlw	255
 22106  013310  22DA               	addwfc	fsr2h,f,c
 22107  013312  90D8               	bcf	status,0,c
 22108  013314  32DF               	rrcf	indf2,f,c
 22109  013316                     l8338:
 22110                           
 22111                           ;stkvar	_b @ sp[(-4)+-4]
 22112  013316  0EF8               	movlw	-8
 22113  013318  A0E3               	btfss	plusw1,0,c
 22114  01331A  D002               	goto	l8342
 22115                           
 22116                           ;stkvar	_grs @ sp[(-4)+0]
 22117  01331C  0EFC               	movlw	-4
 22118  01331E  8EE3               	bsf	plusw1,7,c
 22119  013320                     l8342:
 22120  013320  0E01               	movlw	1
 22121  013322  6E0C               	movwf	(btemp+11)^0,c
 22122                           
 22123                           ;stkvar	_b @ sp[(-4)+-4]
 22124  013324  50E1               	movf	fsr1l,w,c
 22125  013326  0FF8               	addlw	-8
 22126  013328  6ED9               	movwf	fsr2l,c
 22127  01332A  50E2               	movf	fsr1h,w,c
 22128  01332C  6EDA               	movwf	fsr2h,c
 22129  01332E  0EFF               	movlw	255
 22130  013330  22DA               	addwfc	fsr2h,f,c
 22131  013332  280C               	incf	(btemp+11)^0,w,c
 22132  013334  52DE               	movf	postinc2,f,c
 22133  013336  D008               	goto	u7300
 22134  013338                     u7305:
 22135  013338  52DE               	movf	postinc2,f,c
 22136  01333A  90D8               	bcf	status,0,c
 22137  01333C  BEDC               	btfsc	preinc2,7,c
 22138  01333E  80D8               	bsf	status,0,c
 22139  013340  32DD               	rrcf	postdec2,f,c
 22140  013342  32DD               	rrcf	postdec2,f,c
 22141  013344  32DD               	rrcf	postdec2,f,c
 22142  013346  32DE               	rrcf	postinc2,f,c
 22143  013348                     u7300:
 22144  013348  2EE8               	decfsz	wreg,f,c
 22145  01334A  D7F6               	goto	u7305
 22146                           
 22147                           ;stkvar	_bexp @ sp[(-4)+1]
 22148  01334C  0EFD               	movlw	-3
 22149  01334E  2AE3               	incf	plusw1,f,c
 22150  013350  D0CA               	goto	u7380
 22151  013352                     l8346:
 22152                           
 22153                           ;stkvar	_a @ sp[(-4)+-8]
 22154                           ;stkvar	_b @ sp[(-4)+-4]
 22155  013352  50E1               	movf	fsr1l,w,c
 22156  013354  0FF8               	addlw	-8
 22157  013356  6ED9               	movwf	fsr2l,c
 22158  013358  50E2               	movf	fsr1h,w,c
 22159  01335A  6EDA               	movwf	fsr2h,c
 22160  01335C  0EFF               	movlw	255
 22161  01335E  22DA               	addwfc	fsr2h,f,c
 22162  013360  0EF4               	movlw	-12
 22163  013362  50E3               	movf	plusw1,w,c
 22164  013364  5CDE               	subwf	postinc2,w,c
 22165  013366  0EF5               	movlw	-11
 22166  013368  50E3               	movf	plusw1,w,c
 22167  01336A  58DE               	subwfb	postinc2,w,c
 22168  01336C  0EF6               	movlw	-10
 22169  01336E  50E3               	movf	plusw1,w,c
 22170  013370  58DE               	subwfb	postinc2,w,c
 22171  013372  50DE               	movf	postinc2,w,c
 22172  013374  0A80               	xorlw	128
 22173  013376  6E01               	movwf	btemp^0,c
 22174  013378  0EF7               	movlw	-9
 22175  01337A  50E3               	movf	plusw1,w,c
 22176  01337C  0A80               	xorlw	128
 22177  01337E  5801               	subwfb	btemp^0,w,c
 22178  013380  B0D8               	btfsc	status,0,c
 22179  013382  D053               	goto	l8358
 22180                           
 22181                           ;stkvar	_b @ sp[(-4)+-4]
 22182                           ;stkvar	_a @ sp[(-4)+-8]
 22183  013384  0EF4               	movlw	-12
 22184  013386  006F FF8C  F009    	movff	plusw1,btemp+8
 22185  01338C  0EF5               	movlw	-11
 22186  01338E  006F FF8C  F00A    	movff	plusw1,btemp+9
 22187  013394  0EF6               	movlw	-10
 22188  013396  006F FF8C  F00B    	movff	plusw1,btemp+10
 22189  01339C  0EF7               	movlw	-9
 22190  01339E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22191  0133A4  0EF8               	movlw	-8
 22192  0133A6  50E3               	movf	plusw1,w,c
 22193  0133A8  5E09               	subwf	(btemp+8)^0,f,c
 22194  0133AA  0EF9               	movlw	-7
 22195  0133AC  50E3               	movf	plusw1,w,c
 22196  0133AE  5A0A               	subwfb	(btemp+9)^0,f,c
 22197  0133B0  0EFA               	movlw	-6
 22198  0133B2  50E3               	movf	plusw1,w,c
 22199  0133B4  5A0B               	subwfb	(btemp+10)^0,f,c
 22200  0133B6  0EFB               	movlw	-5
 22201  0133B8  50E3               	movf	plusw1,w,c
 22202  0133BA  5A0C               	subwfb	(btemp+11)^0,f,c
 22203  0133BC  0EFF               	movlw	255
 22204  0133BE  2409               	addwf	(btemp+8)^0,w,c
 22205  0133C0  6E05               	movwf	(btemp+4)^0,c
 22206  0133C2  0EFF               	movlw	255
 22207  0133C4  200A               	addwfc	(btemp+9)^0,w,c
 22208  0133C6  6E06               	movwf	(btemp+5)^0,c
 22209  0133C8  0EFF               	movlw	255
 22210  0133CA  200B               	addwfc	(btemp+10)^0,w,c
 22211  0133CC  6E07               	movwf	(btemp+6)^0,c
 22212  0133CE  0EFF               	movlw	255
 22213  0133D0  200C               	addwfc	(btemp+11)^0,w,c
 22214  0133D2  6E08               	movwf	(btemp+7)^0,c
 22215                           
 22216                           ;stkvar	_b @ sp[(-4)+-4]
 22217  0133D4  0EF8               	movlw	-8
 22218  0133D6  0060  F017  FFE3   	movff	btemp+4,plusw1
 22219  0133DC  0EF9               	movlw	-7
 22220  0133DE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22221  0133E4  0EFA               	movlw	-6
 22222  0133E6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22223  0133EC  0EFB               	movlw	-5
 22224  0133EE  0060  F023  FFE3   	movff	btemp+7,plusw1
 22225                           
 22226                           ;stkvar	_signs @ sp[(-4)+3]
 22227  0133F4  0EFF               	movlw	-1
 22228  0133F6  7EE3               	btg	plusw1,7,c
 22229                           
 22230                           ;stkvar	_grs @ sp[(-4)+0]
 22231  0133F8  0EFC               	movlw	-4
 22232  0133FA  50E3               	movf	plusw1,w,c
 22233  0133FC  0800               	sublw	0
 22234  0133FE  6E0C               	movwf	(btemp+11)^0,c
 22235                           
 22236                           ;stkvar	_grs @ sp[(-4)+0]
 22237  013400  0EFC               	movlw	-4
 22238  013402  0060  F033  FFE3   	movff	btemp+11,plusw1
 22239                           
 22240                           ;stkvar	_grs @ sp[(-4)+0]
 22241  013408  0EFC               	movlw	-4
 22242  01340A  50E3               	movf	plusw1,w,c
 22243  01340C  A4D8               	btfss	status,2,c
 22244  01340E  D020               	goto	l8360
 22245                           
 22246                           ;stkvar	_b @ sp[(-4)+-4]
 22247  013410  50E1               	movf	fsr1l,w,c
 22248  013412  0FF8               	addlw	-8
 22249  013414  6ED9               	movwf	fsr2l,c
 22250  013416  50E2               	movf	fsr1h,w,c
 22251  013418  6EDA               	movwf	fsr2h,c
 22252  01341A  0EFF               	movlw	255
 22253  01341C  22DA               	addwfc	fsr2h,f,c
 22254  01341E  2ADE               	incf	postinc2,f,c
 22255  013420  0E00               	movlw	0
 22256  013422  22DE               	addwfc	postinc2,f,c
 22257  013424  22DE               	addwfc	postinc2,f,c
 22258  013426  22DE               	addwfc	postinc2,f,c
 22259  013428  D013               	goto	l8360
 22260  01342A                     l8358:
 22261                           
 22262                           ;stkvar	_a @ sp[(-4)+-8]
 22263                           ;stkvar	_b @ sp[(-4)+-4]
 22264  01342A  50E1               	movf	fsr1l,w,c
 22265  01342C  0FF8               	addlw	-8
 22266  01342E  6ED9               	movwf	fsr2l,c
 22267  013430  50E2               	movf	fsr1h,w,c
 22268  013432  6EDA               	movwf	fsr2h,c
 22269  013434  0EFF               	movlw	255
 22270  013436  22DA               	addwfc	fsr2h,f,c
 22271  013438  0EF4               	movlw	-12
 22272  01343A  50E3               	movf	plusw1,w,c
 22273  01343C  5EDE               	subwf	postinc2,f,c
 22274  01343E  0EF5               	movlw	-11
 22275  013440  50E3               	movf	plusw1,w,c
 22276  013442  5ADE               	subwfb	postinc2,f,c
 22277  013444  0EF6               	movlw	-10
 22278  013446  50E3               	movf	plusw1,w,c
 22279  013448  5ADE               	subwfb	postinc2,f,c
 22280  01344A  0EF7               	movlw	-9
 22281  01344C  50E3               	movf	plusw1,w,c
 22282  01344E  5ADE               	subwfb	postinc2,f,c
 22283  013450                     l8360:
 22284                           
 22285                           ;stkvar	_b @ sp[(-4)+-4]
 22286  013450  0EF8               	movlw	-8
 22287  013452  50E3               	movf	plusw1,w,c
 22288  013454  E145               	bnz	l8382
 22289  013456  0EF9               	movlw	-7
 22290  013458  50E3               	movf	plusw1,w,c
 22291  01345A  E142               	bnz	l8382
 22292  01345C  0EFA               	movlw	-6
 22293  01345E  50E3               	movf	plusw1,w,c
 22294  013460  E13F               	bnz	l8382
 22295  013462  0EFB               	movlw	-5
 22296  013464  50E3               	movf	plusw1,w,c
 22297  013466  A4D8               	btfss	status,2,c
 22298  013468  D03B               	goto	l8382
 22299                           
 22300                           ;stkvar	_grs @ sp[(-4)+0]
 22301  01346A  0EFC               	movlw	-4
 22302  01346C  50E3               	movf	plusw1,w,c
 22303  01346E  A4D8               	btfss	status,2,c
 22304  013470  D037               	goto	l8382
 22305  013472                     u7340:
 22306  013472  0E00               	movlw	0
 22307  013474  6E01               	movwf	btemp^0,c
 22308  013476  0E00               	movlw	0
 22309  013478  6E02               	movwf	(btemp+1)^0,c
 22310  01347A  0E00               	movlw	0
 22311  01347C  6E03               	movwf	(btemp+2)^0,c
 22312  01347E  0E00               	movlw	0
 22313  013480  6E04               	movwf	(btemp+3)^0,c
 22314  013482  D0C6               	goto	l2790
 22315  013484                     l8368:
 22316                           
 22317                           ;stkvar	_b @ sp[(-4)+-4]
 22318  013484  90D8               	bcf	status,0,c
 22319  013486  0EF8               	movlw	-8
 22320  013488  36E3               	rlcf	plusw1,f,c
 22321  01348A  0EF9               	movlw	-7
 22322  01348C  36E3               	rlcf	plusw1,f,c
 22323  01348E  0EFA               	movlw	-6
 22324  013490  36E3               	rlcf	plusw1,f,c
 22325  013492  0EFB               	movlw	-5
 22326  013494  36E3               	rlcf	plusw1,f,c
 22327                           
 22328                           ;stkvar	_grs @ sp[(-4)+0]
 22329  013496  0EFC               	movlw	-4
 22330  013498  AEE3               	btfss	plusw1,7,c
 22331  01349A  D002               	goto	l2802
 22332                           
 22333                           ;stkvar	_b @ sp[(-4)+-4]
 22334  01349C  0EF8               	movlw	-8
 22335  01349E  80E3               	bsf	plusw1,0,c
 22336  0134A0                     l2802:
 22337                           
 22338                           ;stkvar	_grs @ sp[(-4)+0]
 22339  0134A0  0EFC               	movlw	-4
 22340  0134A2  A0E3               	btfss	plusw1,0,c
 22341  0134A4  D00E               	goto	l8376
 22342                           
 22343                           ;stkvar	_grs @ sp[(-4)+0]
 22344  0134A6  0EFC               	movlw	-4
 22345  0134A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22346  0134AE  90D8               	bcf	status,0,c
 22347  0134B0  340C               	rlcf	(btemp+11)^0,w,c
 22348  0134B2  6E0B               	movwf	(btemp+10)^0,c
 22349  0134B4  0E01               	movlw	1
 22350  0134B6  120B               	iorwf	(btemp+10)^0,f,c
 22351                           
 22352                           ;stkvar	_grs @ sp[(-4)+0]
 22353  0134B8  0EFC               	movlw	-4
 22354  0134BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22355  0134C0  D009               	goto	l8378
 22356  0134C2                     l8376:
 22357                           
 22358                           ;stkvar	_grs @ sp[(-4)+0]
 22359  0134C2  50E1               	movf	fsr1l,w,c
 22360  0134C4  0FFC               	addlw	-4
 22361  0134C6  6ED9               	movwf	fsr2l,c
 22362  0134C8  50E2               	movf	fsr1h,w,c
 22363  0134CA  6EDA               	movwf	fsr2h,c
 22364  0134CC  0EFF               	movlw	255
 22365  0134CE  22DA               	addwfc	fsr2h,f,c
 22366  0134D0  90D8               	bcf	status,0,c
 22367  0134D2  36DF               	rlcf	indf2,f,c
 22368  0134D4                     l8378:
 22369                           
 22370                           ;stkvar	_bexp @ sp[(-4)+1]
 22371  0134D4  0EFD               	movlw	-3
 22372  0134D6  50E3               	movf	plusw1,w,c
 22373  0134D8  B4D8               	btfsc	status,2,c
 22374  0134DA  D002               	goto	l8382
 22375                           
 22376                           ;stkvar	_bexp @ sp[(-4)+1]
 22377  0134DC  0EFD               	movlw	-3
 22378  0134DE  06E3               	decf	plusw1,f,c
 22379  0134E0                     l8382:
 22380                           
 22381                           ;stkvar	_b @ sp[(-4)+-4]
 22382  0134E0  0EFA               	movlw	-6
 22383  0134E2  AEE3               	btfss	plusw1,7,c
 22384  0134E4  D7CF               	goto	l8368
 22385  0134E6                     u7380:
 22386                           
 22387                           ;stkvar	_aexp @ sp[(-4)+2]
 22388  0134E6  0EFE               	movlw	-2
 22389  0134E8  6AE3               	clrf	plusw1,c
 22390                           
 22391                           ;stkvar	_grs @ sp[(-4)+0]
 22392  0134EA  0EFC               	movlw	-4
 22393  0134EC  AEE3               	btfss	plusw1,7,c
 22394  0134EE  D00F               	goto	l8396
 22395                           
 22396                           ;stkvar	_grs @ sp[(-4)+0]
 22397  0134F0  0EFC               	movlw	-4
 22398  0134F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22399  0134F8  0E7F               	movlw	127
 22400  0134FA  160C               	andwf	(btemp+11)^0,f,c
 22401  0134FC  B4D8               	btfsc	status,2,c
 22402  0134FE  D004               	goto	l8392
 22403  013500                     u7400:
 22404                           
 22405                           ;stkvar	_aexp @ sp[(-4)+2]
 22406  013500  0EFE               	movlw	-2
 22407  013502  6AE3               	clrf	plusw1,c
 22408  013504  2AE3               	incf	plusw1,f,c
 22409  013506  D003               	goto	l8396
 22410  013508                     l8392:
 22411                           
 22412                           ;stkvar	_b @ sp[(-4)+-4]
 22413  013508  0EF8               	movlw	-8
 22414  01350A  B0E3               	btfsc	plusw1,0,c
 22415  01350C  D7F9               	goto	u7400
 22416  01350E                     l8396:
 22417                           
 22418                           ;stkvar	_aexp @ sp[(-4)+2]
 22419  01350E  0EFE               	movlw	-2
 22420  013510  50E3               	movf	plusw1,w,c
 22421  013512  B4D8               	btfsc	status,2,c
 22422  013514  D02B               	goto	l8408
 22423                           
 22424                           ;stkvar	_b @ sp[(-4)+-4]
 22425  013516  50E1               	movf	fsr1l,w,c
 22426  013518  0FF8               	addlw	-8
 22427  01351A  6ED9               	movwf	fsr2l,c
 22428  01351C  50E2               	movf	fsr1h,w,c
 22429  01351E  6EDA               	movwf	fsr2h,c
 22430  013520  0EFF               	movlw	255
 22431  013522  22DA               	addwfc	fsr2h,f,c
 22432  013524  2ADE               	incf	postinc2,f,c
 22433  013526  0E00               	movlw	0
 22434  013528  22DE               	addwfc	postinc2,f,c
 22435  01352A  22DE               	addwfc	postinc2,f,c
 22436  01352C  22DE               	addwfc	postinc2,f,c
 22437                           
 22438                           ;stkvar	_b @ sp[(-4)+-4]
 22439  01352E  0EFB               	movlw	-5
 22440  013530  A0E3               	btfss	plusw1,0,c
 22441  013532  D01C               	goto	l8408
 22442  013534  0E01               	movlw	1
 22443  013536  6E0C               	movwf	(btemp+11)^0,c
 22444                           
 22445                           ;stkvar	_b @ sp[(-4)+-4]
 22446  013538  50E1               	movf	fsr1l,w,c
 22447  01353A  0FF8               	addlw	-8
 22448  01353C  6ED9               	movwf	fsr2l,c
 22449  01353E  50E2               	movf	fsr1h,w,c
 22450  013540  6EDA               	movwf	fsr2h,c
 22451  013542  0EFF               	movlw	255
 22452  013544  22DA               	addwfc	fsr2h,f,c
 22453  013546  280C               	incf	(btemp+11)^0,w,c
 22454  013548  52DE               	movf	postinc2,f,c
 22455  01354A  D008               	goto	u7440
 22456  01354C                     u7445:
 22457  01354C  52DE               	movf	postinc2,f,c
 22458  01354E  90D8               	bcf	status,0,c
 22459  013550  BEDC               	btfsc	preinc2,7,c
 22460  013552  80D8               	bsf	status,0,c
 22461  013554  32DD               	rrcf	postdec2,f,c
 22462  013556  32DD               	rrcf	postdec2,f,c
 22463  013558  32DD               	rrcf	postdec2,f,c
 22464  01355A  32DE               	rrcf	postinc2,f,c
 22465  01355C                     u7440:
 22466  01355C  2EE8               	decfsz	wreg,f,c
 22467  01355E  D7F6               	goto	u7445
 22468                           
 22469                           ;stkvar	_bexp @ sp[(-4)+1]
 22470  013560  0EFD               	movlw	-3
 22471  013562  28E3               	incf	plusw1,w,c
 22472  013564  B4D8               	btfsc	status,2,c
 22473  013566  D002               	goto	l8408
 22474                           
 22475                           ;stkvar	_bexp @ sp[(-4)+1]
 22476  013568  0EFD               	movlw	-3
 22477  01356A  2AE3               	incf	plusw1,f,c
 22478  01356C                     l8408:
 22479                           
 22480                           ;stkvar	_bexp @ sp[(-4)+1]
 22481  01356C  0EFD               	movlw	-3
 22482  01356E  28E3               	incf	plusw1,w,c
 22483  013570  B4D8               	btfsc	status,2,c
 22484  013572  D004               	goto	u7470
 22485                           
 22486                           ;stkvar	_bexp @ sp[(-4)+1]
 22487  013574  0EFD               	movlw	-3
 22488  013576  50E3               	movf	plusw1,w,c
 22489  013578  A4D8               	btfss	status,2,c
 22490  01357A  D00E               	goto	l8418
 22491  01357C                     u7470:
 22492                           
 22493                           ;stkvar	_b @ sp[(-4)+-4]
 22494  01357C  0EF8               	movlw	-8
 22495  01357E  6AE3               	clrf	plusw1,c
 22496  013580  0EF9               	movlw	-7
 22497  013582  6AE3               	clrf	plusw1,c
 22498  013584  0EFA               	movlw	-6
 22499  013586  6AE3               	clrf	plusw1,c
 22500  013588  0EFB               	movlw	-5
 22501  01358A  6AE3               	clrf	plusw1,c
 22502                           
 22503                           ;stkvar	_bexp @ sp[(-4)+1]
 22504  01358C  0EFD               	movlw	-3
 22505  01358E  50E3               	movf	plusw1,w,c
 22506  013590  A4D8               	btfss	status,2,c
 22507  013592  D002               	goto	l8418
 22508                           
 22509                           ;stkvar	_signs @ sp[(-4)+3]
 22510  013594  0EFF               	movlw	-1
 22511  013596  6AE3               	clrf	plusw1,c
 22512  013598                     l8418:
 22513                           
 22514                           ;stkvar	_bexp @ sp[(-4)+1]
 22515  013598  0EFD               	movlw	-3
 22516  01359A  A0E3               	btfss	plusw1,0,c
 22517  01359C  D009               	goto	l8422
 22518                           
 22519                           ;stkvar	_b @ sp[(-4)+-4]
 22520  01359E  0EFA               	movlw	250
 22521  0135A0  24E1               	addwf	fsr1l,w,c
 22522  0135A2  6ED9               	movwf	fsr2l,c
 22523  0135A4  0EFF               	movlw	255
 22524  0135A6  20E2               	addwfc	fsr1h,w,c
 22525  0135A8  6EDA               	movwf	fsr2h,c
 22526  0135AA  0E00               	movlw	0
 22527  0135AC  8EDB               	bsf	plusw2,7,c
 22528  0135AE  D008               	goto	l8424
 22529  0135B0                     l8422:
 22530                           
 22531                           ;stkvar	_b @ sp[(-4)+-4]
 22532  0135B0  0EFA               	movlw	250
 22533  0135B2  24E1               	addwf	fsr1l,w,c
 22534  0135B4  6ED9               	movwf	fsr2l,c
 22535  0135B6  0EFF               	movlw	255
 22536  0135B8  20E2               	addwfc	fsr1h,w,c
 22537  0135BA  6EDA               	movwf	fsr2h,c
 22538  0135BC  0E7F               	movlw	127
 22539  0135BE  16DF               	andwf	indf2,f,c
 22540  0135C0                     l8424:
 22541                           
 22542                           ;stkvar	_b @ sp[(-4)+-4]
 22543  0135C0  0EFB               	movlw	251
 22544  0135C2  24E1               	addwf	fsr1l,w,c
 22545  0135C4  6ED9               	movwf	fsr2l,c
 22546  0135C6  0EFF               	movlw	255
 22547  0135C8  20E2               	addwfc	fsr1h,w,c
 22548  0135CA  6EDA               	movwf	fsr2h,c
 22549                           
 22550                           ;stkvar	_bexp @ sp[(-4)+1]
 22551  0135CC  0EFD               	movlw	-3
 22552  0135CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22553  0135D4  90D8               	bcf	status,0,c
 22554  0135D6  300C               	rrcf	(btemp+11)^0,w,c
 22555  0135D8  6EDF               	movwf	indf2,c
 22556                           
 22557                           ;stkvar	_signs @ sp[(-4)+3]
 22558  0135DA  0EFF               	movlw	-1
 22559  0135DC  AEE3               	btfss	plusw1,7,c
 22560  0135DE  D008               	goto	l8430
 22561                           
 22562                           ;stkvar	_b @ sp[(-4)+-4]
 22563  0135E0  0EFB               	movlw	251
 22564  0135E2  24E1               	addwf	fsr1l,w,c
 22565  0135E4  6ED9               	movwf	fsr2l,c
 22566  0135E6  0EFF               	movlw	255
 22567  0135E8  20E2               	addwfc	fsr1h,w,c
 22568  0135EA  6EDA               	movwf	fsr2h,c
 22569  0135EC  0E00               	movlw	0
 22570  0135EE  8EDB               	bsf	plusw2,7,c
 22571  0135F0                     l8430:
 22572                           
 22573                           ;stkvar	_b @ sp[(-4)+-4]
 22574  0135F0  0EF8               	movlw	-8
 22575  0135F2  006F FF8C  F001    	movff	plusw1,btemp
 22576  0135F8  0EF9               	movlw	-7
 22577  0135FA  006F FF8C  F002    	movff	plusw1,btemp+1
 22578  013600  0EFA               	movlw	-6
 22579  013602  006F FF8C  F003    	movff	plusw1,btemp+2
 22580  013608  0EFB               	movlw	-5
 22581  01360A  006F FF8C  F004    	movff	plusw1,btemp+3
 22582  013610                     l2790:
 22583                           
 22584                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22585  013610  0EF4               	movlw	244
 22586  013612  26E1               	addwf	fsr1l,f,c
 22587  013614  0EFF               	movlw	255
 22588  013616  22E2               	addwfc	fsr1h,f,c
 22589  013618  0012               	return		;funcret
 22590  01361A                     __end_of___fladd:
 22591                           	opt callstack 0
 22592                           
 22593 ;; *************** function ___flmul *****************
 22594 ;; Defined at:
 22595 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22596 ;; Parameters:    Size  Location     Type
 22597 ;;  b               4  [STACK] unsigned char 
 22598 ;;  a               4  [STACK] unsigned char 
 22599 ;; Auto vars:     Size  Location     Type
 22600 ;;  prod            4  [STACK] struct .
 22601 ;;  grs             4  [STACK] unsigned long 
 22602 ;;  temp            2  [STACK] struct .
 22603 ;;  bexp            1  [STACK] unsigned char 
 22604 ;;  aexp            1  [STACK] unsigned char 
 22605 ;;  sign            1  [STACK] unsigned char 
 22606 ;; Return value:  Size  Location     Type
 22607 ;;                  4  [STACK] unsigned char 
 22608 ;; Registers used:
 22609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22610 ;; Tracked objects:
 22611 ;;		On entry : 0/1
 22612 ;;		On exit  : 0/0
 22613 ;;		Unchanged: 0/0
 22614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22619 ;;Total ram usage:        0 bytes
 22620 ;; Hardware stack levels used:    1
 22621 ;; Hardware stack levels required when called:    7
 22622 ;; This function calls:
 22623 ;;		Nothing
 22624 ;; This function is called by:
 22625 ;;		_conv_raw_result
 22626 ;;		_lp_filter
 22627 ;;		_calc_model_data
 22628 ;;		_calc_bsoc
 22629 ;;		_init_bsoc
 22630 ;;		_efgtoa
 22631 ;; This function uses a reentrant model
 22632 ;;
 22633                           
 22634                           	psect	text95
 22635  012634                     __ptext95:
 22636                           	opt callstack 0
 22637  012634                     ___flmul:
 22638                           	opt callstack 0
 22639                           
 22640                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22641  012634  0E0D               	movlw	13
 22642  012636  26E1               	addwf	fsr1l,f,c
 22643  012638  0E00               	movlw	0
 22644  01263A  22E2               	addwfc	fsr1h,f,c
 22645                           
 22646                           ;stkvar	_b @ sp[(-13)+-4]
 22647                           
 22648                           ;incstack = 0
 22649  01263C  0EF2               	movlw	242
 22650  01263E  24E1               	addwf	fsr1l,w,c
 22651  012640  6ED9               	movwf	fsr2l,c
 22652  012642  0EFF               	movlw	255
 22653  012644  20E2               	addwfc	fsr1h,w,c
 22654  012646  6EDA               	movwf	fsr2h,c
 22655  012648  50DF               	movf	indf2,w,c
 22656  01264A  6E0C               	movwf	(btemp+11)^0,c
 22657  01264C  0E80               	movlw	128
 22658  01264E  160C               	andwf	(btemp+11)^0,f,c
 22659                           
 22660                           ;stkvar	_sign @ sp[(-13)+12]
 22661  012650  0EFF               	movlw	-1
 22662  012652  0060  F033  FFE3   	movff	btemp+11,plusw1
 22663                           
 22664                           ;stkvar	_b @ sp[(-13)+-4]
 22665  012658  0EF2               	movlw	242
 22666  01265A  24E1               	addwf	fsr1l,w,c
 22667  01265C  6ED9               	movwf	fsr2l,c
 22668  01265E  0EFF               	movlw	255
 22669  012660  20E2               	addwfc	fsr1h,w,c
 22670  012662  6EDA               	movwf	fsr2h,c
 22671  012664  50DF               	movf	indf2,w,c
 22672  012666  6E0C               	movwf	(btemp+11)^0,c
 22673  012668  90D8               	bcf	status,0,c
 22674  01266A  340C               	rlcf	(btemp+11)^0,w,c
 22675  01266C  6E0B               	movwf	(btemp+10)^0,c
 22676                           
 22677                           ;stkvar	_bexp @ sp[(-13)+10]
 22678  01266E  0EFD               	movlw	-3
 22679  012670  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22680                           
 22681                           ;stkvar	_b @ sp[(-13)+-4]
 22682  012676  0EF1               	movlw	241
 22683  012678  24E1               	addwf	fsr1l,w,c
 22684  01267A  6ED9               	movwf	fsr2l,c
 22685  01267C  0EFF               	movlw	255
 22686  01267E  20E2               	addwfc	fsr1h,w,c
 22687  012680  6EDA               	movwf	fsr2h,c
 22688  012682  AEDF               	btfss	indf2,7,c
 22689  012684  D002               	goto	l8598
 22690                           
 22691                           ;stkvar	_bexp @ sp[(-13)+10]
 22692  012686  0EFD               	movlw	-3
 22693  012688  80E3               	bsf	plusw1,0,c
 22694  01268A                     l8598:
 22695                           
 22696                           ;stkvar	_bexp @ sp[(-13)+10]
 22697  01268A  0EFD               	movlw	-3
 22698  01268C  50E3               	movf	plusw1,w,c
 22699  01268E  B4D8               	btfsc	status,2,c
 22700  012690  D01F               	goto	l8606
 22701                           
 22702                           ;stkvar	_bexp @ sp[(-13)+10]
 22703  012692  0EFD               	movlw	-3
 22704  012694  28E3               	incf	plusw1,w,c
 22705  012696  A4D8               	btfss	status,2,c
 22706  012698  D018               	goto	l8604
 22707  01269A  0E00               	movlw	0
 22708  01269C  6E09               	movwf	(btemp+8)^0,c
 22709  01269E  0E00               	movlw	0
 22710  0126A0  6E0A               	movwf	(btemp+9)^0,c
 22711  0126A2  0E00               	movlw	0
 22712  0126A4  6E0B               	movwf	(btemp+10)^0,c
 22713  0126A6  0E00               	movlw	0
 22714  0126A8  6E0C               	movwf	(btemp+11)^0,c
 22715                           
 22716                           ;stkvar	_b @ sp[(-13)+-4]
 22717  0126AA  0EEF               	movlw	-17
 22718  0126AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22719  0126B2  0EF0               	movlw	-16
 22720  0126B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22721  0126BA  0EF1               	movlw	-15
 22722  0126BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22723  0126C2  0EF2               	movlw	-14
 22724  0126C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22725  0126CA                     l8604:
 22726                           
 22727                           ;stkvar	_b @ sp[(-13)+-4]
 22728  0126CA  0EF1               	movlw	-15
 22729  0126CC  8EE3               	bsf	plusw1,7,c
 22730  0126CE  D018               	goto	l8608
 22731  0126D0                     l8606:
 22732  0126D0  0E00               	movlw	0
 22733  0126D2  6E09               	movwf	(btemp+8)^0,c
 22734  0126D4  0E00               	movlw	0
 22735  0126D6  6E0A               	movwf	(btemp+9)^0,c
 22736  0126D8  0E00               	movlw	0
 22737  0126DA  6E0B               	movwf	(btemp+10)^0,c
 22738  0126DC  0E00               	movlw	0
 22739  0126DE  6E0C               	movwf	(btemp+11)^0,c
 22740                           
 22741                           ;stkvar	_b @ sp[(-13)+-4]
 22742  0126E0  0EEF               	movlw	-17
 22743  0126E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 22744  0126E8  0EF0               	movlw	-16
 22745  0126EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22746  0126F0  0EF1               	movlw	-15
 22747  0126F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22748  0126F8  0EF2               	movlw	-14
 22749  0126FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 22750  012700                     l8608:
 22751                           
 22752                           ;stkvar	_a @ sp[(-13)+-8]
 22753  012700  0EEE               	movlw	238
 22754  012702  24E1               	addwf	fsr1l,w,c
 22755  012704  6ED9               	movwf	fsr2l,c
 22756  012706  0EFF               	movlw	255
 22757  012708  20E2               	addwfc	fsr1h,w,c
 22758  01270A  6EDA               	movwf	fsr2h,c
 22759  01270C  50DF               	movf	indf2,w,c
 22760  01270E  6E0C               	movwf	(btemp+11)^0,c
 22761  012710  0E80               	movlw	128
 22762  012712  160C               	andwf	(btemp+11)^0,f,c
 22763                           
 22764                           ;stkvar	_sign @ sp[(-13)+12]
 22765  012714  50E1               	movf	fsr1l,w,c
 22766  012716  0FFF               	addlw	-1
 22767  012718  6ED9               	movwf	fsr2l,c
 22768  01271A  50E2               	movf	fsr1h,w,c
 22769  01271C  6EDA               	movwf	fsr2h,c
 22770  01271E  0EFF               	movlw	255
 22771  012720  22DA               	addwfc	fsr2h,f,c
 22772  012722  500C               	movf	(btemp+11)^0,w,c
 22773  012724  1ADF               	xorwf	indf2,f,c
 22774                           
 22775                           ;stkvar	_a @ sp[(-13)+-8]
 22776  012726  0EEE               	movlw	238
 22777  012728  24E1               	addwf	fsr1l,w,c
 22778  01272A  6ED9               	movwf	fsr2l,c
 22779  01272C  0EFF               	movlw	255
 22780  01272E  20E2               	addwfc	fsr1h,w,c
 22781  012730  6EDA               	movwf	fsr2h,c
 22782  012732  50DF               	movf	indf2,w,c
 22783  012734  6E0C               	movwf	(btemp+11)^0,c
 22784  012736  90D8               	bcf	status,0,c
 22785  012738  340C               	rlcf	(btemp+11)^0,w,c
 22786  01273A  6E0B               	movwf	(btemp+10)^0,c
 22787                           
 22788                           ;stkvar	_aexp @ sp[(-13)+11]
 22789  01273C  0EFE               	movlw	-2
 22790  01273E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22791                           
 22792                           ;stkvar	_a @ sp[(-13)+-8]
 22793  012744  0EED               	movlw	237
 22794  012746  24E1               	addwf	fsr1l,w,c
 22795  012748  6ED9               	movwf	fsr2l,c
 22796  01274A  0EFF               	movlw	255
 22797  01274C  20E2               	addwfc	fsr1h,w,c
 22798  01274E  6EDA               	movwf	fsr2h,c
 22799  012750  AEDF               	btfss	indf2,7,c
 22800  012752  D002               	goto	l8616
 22801                           
 22802                           ;stkvar	_aexp @ sp[(-13)+11]
 22803  012754  0EFE               	movlw	-2
 22804  012756  80E3               	bsf	plusw1,0,c
 22805  012758                     l8616:
 22806                           
 22807                           ;stkvar	_aexp @ sp[(-13)+11]
 22808  012758  0EFE               	movlw	-2
 22809  01275A  50E3               	movf	plusw1,w,c
 22810  01275C  B4D8               	btfsc	status,2,c
 22811  01275E  D01F               	goto	l8624
 22812                           
 22813                           ;stkvar	_aexp @ sp[(-13)+11]
 22814  012760  0EFE               	movlw	-2
 22815  012762  28E3               	incf	plusw1,w,c
 22816  012764  A4D8               	btfss	status,2,c
 22817  012766  D018               	goto	l8622
 22818  012768  0E00               	movlw	0
 22819  01276A  6E09               	movwf	(btemp+8)^0,c
 22820  01276C  0E00               	movlw	0
 22821  01276E  6E0A               	movwf	(btemp+9)^0,c
 22822  012770  0E00               	movlw	0
 22823  012772  6E0B               	movwf	(btemp+10)^0,c
 22824  012774  0E00               	movlw	0
 22825  012776  6E0C               	movwf	(btemp+11)^0,c
 22826                           
 22827                           ;stkvar	_a @ sp[(-13)+-8]
 22828  012778  0EEB               	movlw	-21
 22829  01277A  0060  F027  FFE3   	movff	btemp+8,plusw1
 22830  012780  0EEC               	movlw	-20
 22831  012782  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22832  012788  0EED               	movlw	-19
 22833  01278A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22834  012790  0EEE               	movlw	-18
 22835  012792  0060  F033  FFE3   	movff	btemp+11,plusw1
 22836  012798                     l8622:
 22837                           
 22838                           ;stkvar	_a @ sp[(-13)+-8]
 22839  012798  0EED               	movlw	-19
 22840  01279A  8EE3               	bsf	plusw1,7,c
 22841  01279C  D018               	goto	l8626
 22842  01279E                     l8624:
 22843  01279E  0E00               	movlw	0
 22844  0127A0  6E09               	movwf	(btemp+8)^0,c
 22845  0127A2  0E00               	movlw	0
 22846  0127A4  6E0A               	movwf	(btemp+9)^0,c
 22847  0127A6  0E00               	movlw	0
 22848  0127A8  6E0B               	movwf	(btemp+10)^0,c
 22849  0127AA  0E00               	movlw	0
 22850  0127AC  6E0C               	movwf	(btemp+11)^0,c
 22851                           
 22852                           ;stkvar	_a @ sp[(-13)+-8]
 22853  0127AE  0EEB               	movlw	-21
 22854  0127B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 22855  0127B6  0EEC               	movlw	-20
 22856  0127B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22857  0127BE  0EED               	movlw	-19
 22858  0127C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22859  0127C6  0EEE               	movlw	-18
 22860  0127C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22861  0127CE                     l8626:
 22862                           
 22863                           ;stkvar	_aexp @ sp[(-13)+11]
 22864  0127CE  0EFE               	movlw	-2
 22865  0127D0  50E3               	movf	plusw1,w,c
 22866  0127D2  B4D8               	btfsc	status,2,c
 22867  0127D4  D004               	goto	u7820
 22868                           
 22869                           ;stkvar	_bexp @ sp[(-13)+10]
 22870  0127D6  0EFD               	movlw	-3
 22871  0127D8  50E3               	movf	plusw1,w,c
 22872  0127DA  A4D8               	btfss	status,2,c
 22873  0127DC  D009               	goto	l8634
 22874  0127DE                     u7820:
 22875  0127DE  0E00               	movlw	0
 22876  0127E0  6E01               	movwf	btemp^0,c
 22877  0127E2  0E00               	movlw	0
 22878  0127E4  6E02               	movwf	(btemp+1)^0,c
 22879  0127E6  0E00               	movlw	0
 22880  0127E8  6E03               	movwf	(btemp+2)^0,c
 22881  0127EA  0E00               	movlw	0
 22882  0127EC  6E04               	movwf	(btemp+3)^0,c
 22883  0127EE  D332               	goto	l2871
 22884  0127F0                     l8634:
 22885                           
 22886                           ;stkvar	_b @ sp[(-13)+-4]
 22887  0127F0  0EEF               	movlw	-17
 22888  0127F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22889                           
 22890                           ;stkvar	_a @ sp[(-13)+-8]
 22891  0127F8  0EED               	movlw	237
 22892  0127FA  24E1               	addwf	fsr1l,w,c
 22893  0127FC  6ED9               	movwf	fsr2l,c
 22894  0127FE  0EFF               	movlw	255
 22895  012800  20E2               	addwfc	fsr1h,w,c
 22896  012802  6EDA               	movwf	fsr2h,c
 22897  012804  50DF               	movf	indf2,w,c
 22898  012806  020C               	mulwf	(btemp+11)^0,c
 22899                           
 22900                           ;stkvar	_temp @ sp[(-13)+8]
 22901  012808  0EFB               	movlw	-5
 22902  01280A  006F FFCF FFE3     	movff	prodl,plusw1
 22903  012810  0EFC               	movlw	-4
 22904  012812  006F FFD3 FFE3     	movff	prodh,plusw1
 22905                           
 22906                           ;stkvar	_temp @ sp[(-13)+8]
 22907  012818  0EFB               	movlw	-5
 22908  01281A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22909  012820  0060  F030  F005   	movff	btemp+11,btemp+4
 22910  012826  6A06               	clrf	(btemp+5)^0,c
 22911  012828  6A07               	clrf	(btemp+6)^0,c
 22912  01282A  6A08               	clrf	(btemp+7)^0,c
 22913                           
 22914                           ;stkvar	_grs @ sp[(-13)+4]
 22915  01282C  0EF7               	movlw	-9
 22916  01282E  0060  F017  FFE3   	movff	btemp+4,plusw1
 22917  012834  0EF8               	movlw	-8
 22918  012836  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22919  01283C  0EF9               	movlw	-7
 22920  01283E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22921  012844  0EFA               	movlw	-6
 22922  012846  0060  F023  FFE3   	movff	btemp+7,plusw1
 22923                           
 22924                           ;stkvar	_temp @ sp[(-13)+8]
 22925  01284C  0EFC               	movlw	252
 22926  01284E  24E1               	addwf	fsr1l,w,c
 22927  012850  6ED9               	movwf	fsr2l,c
 22928  012852  0EFF               	movlw	255
 22929  012854  20E2               	addwfc	fsr1h,w,c
 22930  012856  6EDA               	movwf	fsr2h,c
 22931  012858  50DF               	movf	indf2,w,c
 22932  01285A  6E0C               	movwf	(btemp+11)^0,c
 22933  01285C  0060  F030  F005   	movff	btemp+11,btemp+4
 22934  012862  6A06               	clrf	(btemp+5)^0,c
 22935  012864  6A07               	clrf	(btemp+6)^0,c
 22936  012866  6A08               	clrf	(btemp+7)^0,c
 22937                           
 22938                           ;stkvar	_prod @ sp[(-13)+0]
 22939  012868  0EF3               	movlw	-13
 22940  01286A  0060  F017  FFE3   	movff	btemp+4,plusw1
 22941  012870  0EF4               	movlw	-12
 22942  012872  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22943  012878  0EF5               	movlw	-11
 22944  01287A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22945  012880  0EF6               	movlw	-10
 22946  012882  0060  F023  FFE3   	movff	btemp+7,plusw1
 22947                           
 22948                           ;stkvar	_b @ sp[(-13)+-4]
 22949  012888  0EF0               	movlw	240
 22950  01288A  24E1               	addwf	fsr1l,w,c
 22951  01288C  6ED9               	movwf	fsr2l,c
 22952  01288E  0EFF               	movlw	255
 22953  012890  20E2               	addwfc	fsr1h,w,c
 22954  012892  6EDA               	movwf	fsr2h,c
 22955  012894  50DF               	movf	indf2,w,c
 22956  012896  6E0C               	movwf	(btemp+11)^0,c
 22957                           
 22958                           ;stkvar	_a @ sp[(-13)+-8]
 22959  012898  0EEC               	movlw	236
 22960  01289A  24E1               	addwf	fsr1l,w,c
 22961  01289C  6ED9               	movwf	fsr2l,c
 22962  01289E  0EFF               	movlw	255
 22963  0128A0  20E2               	addwfc	fsr1h,w,c
 22964  0128A2  6EDA               	movwf	fsr2h,c
 22965  0128A4  50DF               	movf	indf2,w,c
 22966  0128A6  020C               	mulwf	(btemp+11)^0,c
 22967                           
 22968                           ;stkvar	_temp @ sp[(-13)+8]
 22969  0128A8  0EFB               	movlw	-5
 22970  0128AA  006F FFCF FFE3     	movff	prodl,plusw1
 22971  0128B0  0EFC               	movlw	-4
 22972  0128B2  006F FFD3 FFE3     	movff	prodh,plusw1
 22973                           
 22974                           ;stkvar	_grs @ sp[(-13)+4]
 22975  0128B8  50E1               	movf	fsr1l,w,c
 22976  0128BA  0FF7               	addlw	-9
 22977  0128BC  6ED9               	movwf	fsr2l,c
 22978  0128BE  50E2               	movf	fsr1h,w,c
 22979  0128C0  6EDA               	movwf	fsr2h,c
 22980  0128C2  0EFF               	movlw	255
 22981  0128C4  22DA               	addwfc	fsr2h,f,c
 22982                           
 22983                           ;stkvar	_temp @ sp[(-13)+8]
 22984  0128C6  0EFB               	movlw	-5
 22985  0128C8  50E3               	movf	plusw1,w,c
 22986  0128CA  26DE               	addwf	postinc2,f,c
 22987  0128CC  0E00               	movlw	0
 22988  0128CE  22DE               	addwfc	postinc2,f,c
 22989  0128D0  22DE               	addwfc	postinc2,f,c
 22990  0128D2  22DE               	addwfc	postinc2,f,c
 22991                           
 22992                           ;stkvar	_prod @ sp[(-13)+0]
 22993  0128D4  50E1               	movf	fsr1l,w,c
 22994  0128D6  0FF3               	addlw	-13
 22995  0128D8  6ED9               	movwf	fsr2l,c
 22996  0128DA  50E2               	movf	fsr1h,w,c
 22997  0128DC  6EDA               	movwf	fsr2h,c
 22998  0128DE  0EFF               	movlw	255
 22999  0128E0  22DA               	addwfc	fsr2h,f,c
 23000                           
 23001                           ;stkvar	_temp @ sp[(-13)+8]
 23002  0128E2  0EFC               	movlw	252
 23003  0128E4  24E1               	addwf	fsr1l,w,c
 23004  0128E6  6EE9               	movwf	fsr0l,c
 23005  0128E8  0EFF               	movlw	255
 23006  0128EA  20E2               	addwfc	fsr1h,w,c
 23007  0128EC  6EEA               	movwf	fsr0h,c
 23008  0128EE  50EF               	movf	indf0,w,c
 23009  0128F0  26DE               	addwf	postinc2,f,c
 23010  0128F2  0E00               	movlw	0
 23011  0128F4  22DE               	addwfc	postinc2,f,c
 23012  0128F6  22DE               	addwfc	postinc2,f,c
 23013  0128F8  22DE               	addwfc	postinc2,f,c
 23014                           
 23015                           ;stkvar	_b @ sp[(-13)+-4]
 23016  0128FA  0EF1               	movlw	241
 23017  0128FC  24E1               	addwf	fsr1l,w,c
 23018  0128FE  6ED9               	movwf	fsr2l,c
 23019  012900  0EFF               	movlw	255
 23020  012902  20E2               	addwfc	fsr1h,w,c
 23021  012904  6EDA               	movwf	fsr2h,c
 23022  012906  50DF               	movf	indf2,w,c
 23023  012908  6E0C               	movwf	(btemp+11)^0,c
 23024                           
 23025                           ;stkvar	_a @ sp[(-13)+-8]
 23026  01290A  0EEB               	movlw	-21
 23027  01290C  50E3               	movf	plusw1,w,c
 23028  01290E  020C               	mulwf	(btemp+11)^0,c
 23029                           
 23030                           ;stkvar	_temp @ sp[(-13)+8]
 23031  012910  0EFB               	movlw	-5
 23032  012912  006F FFCF FFE3     	movff	prodl,plusw1
 23033  012918  0EFC               	movlw	-4
 23034  01291A  006F FFD3 FFE3     	movff	prodh,plusw1
 23035                           
 23036                           ;stkvar	_grs @ sp[(-13)+4]
 23037  012920  50E1               	movf	fsr1l,w,c
 23038  012922  0FF7               	addlw	-9
 23039  012924  6ED9               	movwf	fsr2l,c
 23040  012926  50E2               	movf	fsr1h,w,c
 23041  012928  6EDA               	movwf	fsr2h,c
 23042  01292A  0EFF               	movlw	255
 23043  01292C  22DA               	addwfc	fsr2h,f,c
 23044                           
 23045                           ;stkvar	_temp @ sp[(-13)+8]
 23046  01292E  0EFB               	movlw	-5
 23047  012930  50E3               	movf	plusw1,w,c
 23048  012932  26DE               	addwf	postinc2,f,c
 23049  012934  0E00               	movlw	0
 23050  012936  22DE               	addwfc	postinc2,f,c
 23051  012938  22DE               	addwfc	postinc2,f,c
 23052  01293A  22DE               	addwfc	postinc2,f,c
 23053                           
 23054                           ;stkvar	_prod @ sp[(-13)+0]
 23055  01293C  50E1               	movf	fsr1l,w,c
 23056  01293E  0FF3               	addlw	-13
 23057  012940  6ED9               	movwf	fsr2l,c
 23058  012942  50E2               	movf	fsr1h,w,c
 23059  012944  6EDA               	movwf	fsr2h,c
 23060  012946  0EFF               	movlw	255
 23061  012948  22DA               	addwfc	fsr2h,f,c
 23062                           
 23063                           ;stkvar	_temp @ sp[(-13)+8]
 23064  01294A  0EFC               	movlw	252
 23065  01294C  24E1               	addwf	fsr1l,w,c
 23066  01294E  6EE9               	movwf	fsr0l,c
 23067  012950  0EFF               	movlw	255
 23068  012952  20E2               	addwfc	fsr1h,w,c
 23069  012954  6EEA               	movwf	fsr0h,c
 23070  012956  50EF               	movf	indf0,w,c
 23071  012958  26DE               	addwf	postinc2,f,c
 23072  01295A  0E00               	movlw	0
 23073  01295C  22DE               	addwfc	postinc2,f,c
 23074  01295E  22DE               	addwfc	postinc2,f,c
 23075  012960  22DE               	addwfc	postinc2,f,c
 23076                           
 23077                           ;stkvar	_grs @ sp[(-13)+4]
 23078  012962  50E1               	movf	fsr1l,w,c
 23079  012964  0FF7               	addlw	-9
 23080  012966  6ED9               	movwf	fsr2l,c
 23081  012968  50E2               	movf	fsr1h,w,c
 23082  01296A  6EDA               	movwf	fsr2h,c
 23083  01296C  0EFF               	movlw	255
 23084  01296E  22DA               	addwfc	fsr2h,f,c
 23085  012970  0E08               	movlw	8
 23086  012972                     u7835:
 23087  012972  90D8               	bcf	status,0,c
 23088  012974  36DE               	rlcf	postinc2,f,c
 23089  012976  36DE               	rlcf	postinc2,f,c
 23090  012978  36DE               	rlcf	postinc2,f,c
 23091  01297A  36DD               	rlcf	postdec2,f,c
 23092  01297C  52DD               	movf	postdec2,f,c
 23093  01297E  52DD               	movf	postdec2,f,c
 23094  012980  2EE8               	decfsz	wreg,f,c
 23095  012982  D7F7               	goto	u7835
 23096                           
 23097                           ;stkvar	_b @ sp[(-13)+-4]
 23098  012984  0EF0               	movlw	240
 23099  012986  24E1               	addwf	fsr1l,w,c
 23100  012988  6ED9               	movwf	fsr2l,c
 23101  01298A  0EFF               	movlw	255
 23102  01298C  20E2               	addwfc	fsr1h,w,c
 23103  01298E  6EDA               	movwf	fsr2h,c
 23104  012990  50DF               	movf	indf2,w,c
 23105  012992  6E0C               	movwf	(btemp+11)^0,c
 23106                           
 23107                           ;stkvar	_a @ sp[(-13)+-8]
 23108  012994  0EEB               	movlw	-21
 23109  012996  50E3               	movf	plusw1,w,c
 23110  012998  020C               	mulwf	(btemp+11)^0,c
 23111                           
 23112                           ;stkvar	_temp @ sp[(-13)+8]
 23113  01299A  0EFB               	movlw	-5
 23114  01299C  006F FFCF FFE3     	movff	prodl,plusw1
 23115  0129A2  0EFC               	movlw	-4
 23116  0129A4  006F FFD3 FFE3     	movff	prodh,plusw1
 23117                           
 23118                           ;stkvar	_temp @ sp[(-13)+8]
 23119  0129AA  0EFB               	movlw	-5
 23120  0129AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23121  0129B2  0EFC               	movlw	-4
 23122  0129B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23123                           
 23124                           ;stkvar	_grs @ sp[(-13)+4]
 23125  0129BA  50E1               	movf	fsr1l,w,c
 23126  0129BC  0FF7               	addlw	-9
 23127  0129BE  6ED9               	movwf	fsr2l,c
 23128  0129C0  50E2               	movf	fsr1h,w,c
 23129  0129C2  6EDA               	movwf	fsr2h,c
 23130  0129C4  0EFF               	movlw	255
 23131  0129C6  22DA               	addwfc	fsr2h,f,c
 23132  0129C8  500B               	movf	(btemp+10)^0,w,c
 23133  0129CA  26DE               	addwf	postinc2,f,c
 23134  0129CC  500C               	movf	(btemp+11)^0,w,c
 23135  0129CE  22DE               	addwfc	postinc2,f,c
 23136  0129D0  0E00               	movlw	0
 23137  0129D2  22DE               	addwfc	postinc2,f,c
 23138  0129D4  22DE               	addwfc	postinc2,f,c
 23139                           
 23140                           ;stkvar	_b @ sp[(-13)+-4]
 23141  0129D6  0EEF               	movlw	-17
 23142  0129D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23143                           
 23144                           ;stkvar	_a @ sp[(-13)+-8]
 23145  0129DE  0EEC               	movlw	236
 23146  0129E0  24E1               	addwf	fsr1l,w,c
 23147  0129E2  6ED9               	movwf	fsr2l,c
 23148  0129E4  0EFF               	movlw	255
 23149  0129E6  20E2               	addwfc	fsr1h,w,c
 23150  0129E8  6EDA               	movwf	fsr2h,c
 23151  0129EA  50DF               	movf	indf2,w,c
 23152  0129EC  020C               	mulwf	(btemp+11)^0,c
 23153                           
 23154                           ;stkvar	_temp @ sp[(-13)+8]
 23155  0129EE  0EFB               	movlw	-5
 23156  0129F0  006F FFCF FFE3     	movff	prodl,plusw1
 23157  0129F6  0EFC               	movlw	-4
 23158  0129F8  006F FFD3 FFE3     	movff	prodh,plusw1
 23159                           
 23160                           ;stkvar	_temp @ sp[(-13)+8]
 23161  0129FE  0EFB               	movlw	-5
 23162  012A00  006F FF8C  F00B    	movff	plusw1,btemp+10
 23163  012A06  0EFC               	movlw	-4
 23164  012A08  006F FF8C  F00C    	movff	plusw1,btemp+11
 23165                           
 23166                           ;stkvar	_grs @ sp[(-13)+4]
 23167  012A0E  50E1               	movf	fsr1l,w,c
 23168  012A10  0FF7               	addlw	-9
 23169  012A12  6ED9               	movwf	fsr2l,c
 23170  012A14  50E2               	movf	fsr1h,w,c
 23171  012A16  6EDA               	movwf	fsr2h,c
 23172  012A18  0EFF               	movlw	255
 23173  012A1A  22DA               	addwfc	fsr2h,f,c
 23174  012A1C  500B               	movf	(btemp+10)^0,w,c
 23175  012A1E  26DE               	addwf	postinc2,f,c
 23176  012A20  500C               	movf	(btemp+11)^0,w,c
 23177  012A22  22DE               	addwfc	postinc2,f,c
 23178  012A24  0E00               	movlw	0
 23179  012A26  22DE               	addwfc	postinc2,f,c
 23180  012A28  22DE               	addwfc	postinc2,f,c
 23181                           
 23182                           ;stkvar	_grs @ sp[(-13)+4]
 23183  012A2A  50E1               	movf	fsr1l,w,c
 23184  012A2C  0FF7               	addlw	-9
 23185  012A2E  6ED9               	movwf	fsr2l,c
 23186  012A30  50E2               	movf	fsr1h,w,c
 23187  012A32  6EDA               	movwf	fsr2h,c
 23188  012A34  0EFF               	movlw	255
 23189  012A36  22DA               	addwfc	fsr2h,f,c
 23190  012A38  0E08               	movlw	8
 23191  012A3A                     u7845:
 23192  012A3A  90D8               	bcf	status,0,c
 23193  012A3C  36DE               	rlcf	postinc2,f,c
 23194  012A3E  36DE               	rlcf	postinc2,f,c
 23195  012A40  36DE               	rlcf	postinc2,f,c
 23196  012A42  36DD               	rlcf	postdec2,f,c
 23197  012A44  52DD               	movf	postdec2,f,c
 23198  012A46  52DD               	movf	postdec2,f,c
 23199  012A48  2EE8               	decfsz	wreg,f,c
 23200  012A4A  D7F7               	goto	u7845
 23201                           
 23202                           ;stkvar	_b @ sp[(-13)+-4]
 23203  012A4C  0EEF               	movlw	-17
 23204  012A4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23205                           
 23206                           ;stkvar	_a @ sp[(-13)+-8]
 23207  012A54  0EEB               	movlw	-21
 23208  012A56  50E3               	movf	plusw1,w,c
 23209  012A58  020C               	mulwf	(btemp+11)^0,c
 23210                           
 23211                           ;stkvar	_temp @ sp[(-13)+8]
 23212  012A5A  0EFB               	movlw	-5
 23213  012A5C  006F FFCF FFE3     	movff	prodl,plusw1
 23214  012A62  0EFC               	movlw	-4
 23215  012A64  006F FFD3 FFE3     	movff	prodh,plusw1
 23216                           
 23217                           ;stkvar	_temp @ sp[(-13)+8]
 23218  012A6A  0EFB               	movlw	-5
 23219  012A6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23220  012A72  0EFC               	movlw	-4
 23221  012A74  006F FF8C  F00C    	movff	plusw1,btemp+11
 23222                           
 23223                           ;stkvar	_grs @ sp[(-13)+4]
 23224  012A7A  50E1               	movf	fsr1l,w,c
 23225  012A7C  0FF7               	addlw	-9
 23226  012A7E  6ED9               	movwf	fsr2l,c
 23227  012A80  50E2               	movf	fsr1h,w,c
 23228  012A82  6EDA               	movwf	fsr2h,c
 23229  012A84  0EFF               	movlw	255
 23230  012A86  22DA               	addwfc	fsr2h,f,c
 23231  012A88  500B               	movf	(btemp+10)^0,w,c
 23232  012A8A  26DE               	addwf	postinc2,f,c
 23233  012A8C  500C               	movf	(btemp+11)^0,w,c
 23234  012A8E  22DE               	addwfc	postinc2,f,c
 23235  012A90  0E00               	movlw	0
 23236  012A92  22DE               	addwfc	postinc2,f,c
 23237  012A94  22DE               	addwfc	postinc2,f,c
 23238                           
 23239                           ;stkvar	_b @ sp[(-13)+-4]
 23240  012A96  0EF0               	movlw	240
 23241  012A98  24E1               	addwf	fsr1l,w,c
 23242  012A9A  6ED9               	movwf	fsr2l,c
 23243  012A9C  0EFF               	movlw	255
 23244  012A9E  20E2               	addwfc	fsr1h,w,c
 23245  012AA0  6EDA               	movwf	fsr2h,c
 23246  012AA2  50DF               	movf	indf2,w,c
 23247  012AA4  6E0C               	movwf	(btemp+11)^0,c
 23248                           
 23249                           ;stkvar	_a @ sp[(-13)+-8]
 23250  012AA6  0EED               	movlw	237
 23251  012AA8  24E1               	addwf	fsr1l,w,c
 23252  012AAA  6ED9               	movwf	fsr2l,c
 23253  012AAC  0EFF               	movlw	255
 23254  012AAE  20E2               	addwfc	fsr1h,w,c
 23255  012AB0  6EDA               	movwf	fsr2h,c
 23256  012AB2  50DF               	movf	indf2,w,c
 23257  012AB4  020C               	mulwf	(btemp+11)^0,c
 23258                           
 23259                           ;stkvar	_temp @ sp[(-13)+8]
 23260  012AB6  0EFB               	movlw	-5
 23261  012AB8  006F FFCF FFE3     	movff	prodl,plusw1
 23262  012ABE  0EFC               	movlw	-4
 23263  012AC0  006F FFD3 FFE3     	movff	prodh,plusw1
 23264                           
 23265                           ;stkvar	_temp @ sp[(-13)+8]
 23266  012AC6  0EFB               	movlw	-5
 23267  012AC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23268  012ACE  0EFC               	movlw	-4
 23269  012AD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23270                           
 23271                           ;stkvar	_prod @ sp[(-13)+0]
 23272  012AD6  50E1               	movf	fsr1l,w,c
 23273  012AD8  0FF3               	addlw	-13
 23274  012ADA  6ED9               	movwf	fsr2l,c
 23275  012ADC  50E2               	movf	fsr1h,w,c
 23276  012ADE  6EDA               	movwf	fsr2h,c
 23277  012AE0  0EFF               	movlw	255
 23278  012AE2  22DA               	addwfc	fsr2h,f,c
 23279  012AE4  500B               	movf	(btemp+10)^0,w,c
 23280  012AE6  26DE               	addwf	postinc2,f,c
 23281  012AE8  500C               	movf	(btemp+11)^0,w,c
 23282  012AEA  22DE               	addwfc	postinc2,f,c
 23283  012AEC  0E00               	movlw	0
 23284  012AEE  22DE               	addwfc	postinc2,f,c
 23285  012AF0  22DE               	addwfc	postinc2,f,c
 23286                           
 23287                           ;stkvar	_b @ sp[(-13)+-4]
 23288  012AF2  0EF1               	movlw	241
 23289  012AF4  24E1               	addwf	fsr1l,w,c
 23290  012AF6  6ED9               	movwf	fsr2l,c
 23291  012AF8  0EFF               	movlw	255
 23292  012AFA  20E2               	addwfc	fsr1h,w,c
 23293  012AFC  6EDA               	movwf	fsr2h,c
 23294  012AFE  50DF               	movf	indf2,w,c
 23295  012B00  6E0C               	movwf	(btemp+11)^0,c
 23296                           
 23297                           ;stkvar	_a @ sp[(-13)+-8]
 23298  012B02  0EEC               	movlw	236
 23299  012B04  24E1               	addwf	fsr1l,w,c
 23300  012B06  6ED9               	movwf	fsr2l,c
 23301  012B08  0EFF               	movlw	255
 23302  012B0A  20E2               	addwfc	fsr1h,w,c
 23303  012B0C  6EDA               	movwf	fsr2h,c
 23304  012B0E  50DF               	movf	indf2,w,c
 23305  012B10  020C               	mulwf	(btemp+11)^0,c
 23306                           
 23307                           ;stkvar	_temp @ sp[(-13)+8]
 23308  012B12  0EFB               	movlw	-5
 23309  012B14  006F FFCF FFE3     	movff	prodl,plusw1
 23310  012B1A  0EFC               	movlw	-4
 23311  012B1C  006F FFD3 FFE3     	movff	prodh,plusw1
 23312                           
 23313                           ;stkvar	_temp @ sp[(-13)+8]
 23314  012B22  0EFB               	movlw	-5
 23315  012B24  006F FF8C  F00B    	movff	plusw1,btemp+10
 23316  012B2A  0EFC               	movlw	-4
 23317  012B2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23318                           
 23319                           ;stkvar	_prod @ sp[(-13)+0]
 23320  012B32  50E1               	movf	fsr1l,w,c
 23321  012B34  0FF3               	addlw	-13
 23322  012B36  6ED9               	movwf	fsr2l,c
 23323  012B38  50E2               	movf	fsr1h,w,c
 23324  012B3A  6EDA               	movwf	fsr2h,c
 23325  012B3C  0EFF               	movlw	255
 23326  012B3E  22DA               	addwfc	fsr2h,f,c
 23327  012B40  500B               	movf	(btemp+10)^0,w,c
 23328  012B42  26DE               	addwf	postinc2,f,c
 23329  012B44  500C               	movf	(btemp+11)^0,w,c
 23330  012B46  22DE               	addwfc	postinc2,f,c
 23331  012B48  0E00               	movlw	0
 23332  012B4A  22DE               	addwfc	postinc2,f,c
 23333  012B4C  22DE               	addwfc	postinc2,f,c
 23334                           
 23335                           ;stkvar	_b @ sp[(-13)+-4]
 23336  012B4E  0EF1               	movlw	241
 23337  012B50  24E1               	addwf	fsr1l,w,c
 23338  012B52  6ED9               	movwf	fsr2l,c
 23339  012B54  0EFF               	movlw	255
 23340  012B56  20E2               	addwfc	fsr1h,w,c
 23341  012B58  6EDA               	movwf	fsr2h,c
 23342  012B5A  50DF               	movf	indf2,w,c
 23343  012B5C  6E0C               	movwf	(btemp+11)^0,c
 23344                           
 23345                           ;stkvar	_a @ sp[(-13)+-8]
 23346  012B5E  0EED               	movlw	237
 23347  012B60  24E1               	addwf	fsr1l,w,c
 23348  012B62  6ED9               	movwf	fsr2l,c
 23349  012B64  0EFF               	movlw	255
 23350  012B66  20E2               	addwfc	fsr1h,w,c
 23351  012B68  6EDA               	movwf	fsr2h,c
 23352  012B6A  50DF               	movf	indf2,w,c
 23353  012B6C  020C               	mulwf	(btemp+11)^0,c
 23354                           
 23355                           ;stkvar	_temp @ sp[(-13)+8]
 23356  012B6E  0EFB               	movlw	-5
 23357  012B70  006F FFCF FFE3     	movff	prodl,plusw1
 23358  012B76  0EFC               	movlw	-4
 23359  012B78  006F FFD3 FFE3     	movff	prodh,plusw1
 23360                           
 23361                           ;stkvar	_temp @ sp[(-13)+8]
 23362  012B7E  0EFB               	movlw	-5
 23363  012B80  006F FF8C  F00B    	movff	plusw1,btemp+10
 23364  012B86  0EFC               	movlw	-4
 23365  012B88  006F FF8C  F00C    	movff	plusw1,btemp+11
 23366  012B8E  500B               	movf	(btemp+10)^0,w,c
 23367  012B90  6E05               	movwf	(btemp+4)^0,c
 23368  012B92  500C               	movf	(btemp+11)^0,w,c
 23369  012B94  6E06               	movwf	(btemp+5)^0,c
 23370  012B96  6A07               	clrf	(btemp+6)^0,c
 23371  012B98  6A08               	clrf	(btemp+7)^0,c
 23372  012B9A  0060  F01C  F008   	movff	btemp+6,btemp+7
 23373  012BA0  0060  F018  F007   	movff	btemp+5,btemp+6
 23374  012BA6  0060  F014  F006   	movff	btemp+4,btemp+5
 23375  012BAC  6A05               	clrf	(btemp+4)^0,c
 23376                           
 23377                           ;stkvar	_prod @ sp[(-13)+0]
 23378  012BAE  50E1               	movf	fsr1l,w,c
 23379  012BB0  0FF3               	addlw	-13
 23380  012BB2  6ED9               	movwf	fsr2l,c
 23381  012BB4  50E2               	movf	fsr1h,w,c
 23382  012BB6  6EDA               	movwf	fsr2h,c
 23383  012BB8  0EFF               	movlw	255
 23384  012BBA  22DA               	addwfc	fsr2h,f,c
 23385  012BBC  5005               	movf	(btemp+4)^0,w,c
 23386  012BBE  26DE               	addwf	postinc2,f,c
 23387  012BC0  5006               	movf	(btemp+5)^0,w,c
 23388  012BC2  22DE               	addwfc	postinc2,f,c
 23389  012BC4  5007               	movf	(btemp+6)^0,w,c
 23390  012BC6  22DE               	addwfc	postinc2,f,c
 23391  012BC8  5008               	movf	(btemp+7)^0,w,c
 23392  012BCA  22DE               	addwfc	postinc2,f,c
 23393                           
 23394                           ;stkvar	_prod @ sp[(-13)+0]
 23395  012BCC  50E1               	movf	fsr1l,w,c
 23396  012BCE  0FF3               	addlw	-13
 23397  012BD0  6ED9               	movwf	fsr2l,c
 23398  012BD2  50E2               	movf	fsr1h,w,c
 23399  012BD4  6EDA               	movwf	fsr2h,c
 23400  012BD6  0EFF               	movlw	255
 23401  012BD8  22DA               	addwfc	fsr2h,f,c
 23402                           
 23403                           ;stkvar	_grs @ sp[(-13)+4]
 23404  012BDA  0EFA               	movlw	250
 23405  012BDC  24E1               	addwf	fsr1l,w,c
 23406  012BDE  6EE9               	movwf	fsr0l,c
 23407  012BE0  0EFF               	movlw	255
 23408  012BE2  20E2               	addwfc	fsr1h,w,c
 23409  012BE4  6EEA               	movwf	fsr0h,c
 23410  012BE6  50EF               	movf	indf0,w,c
 23411  012BE8  26DE               	addwf	postinc2,f,c
 23412  012BEA  0E00               	movlw	0
 23413  012BEC  22DE               	addwfc	postinc2,f,c
 23414  012BEE  22DE               	addwfc	postinc2,f,c
 23415  012BF0  22DE               	addwfc	postinc2,f,c
 23416                           
 23417                           ;stkvar	_grs @ sp[(-13)+4]
 23418  012BF2  50E1               	movf	fsr1l,w,c
 23419  012BF4  0FF7               	addlw	-9
 23420  012BF6  6ED9               	movwf	fsr2l,c
 23421  012BF8  50E2               	movf	fsr1h,w,c
 23422  012BFA  6EDA               	movwf	fsr2h,c
 23423  012BFC  0EFF               	movlw	255
 23424  012BFE  22DA               	addwfc	fsr2h,f,c
 23425  012C00  0E08               	movlw	8
 23426  012C02                     u7855:
 23427  012C02  90D8               	bcf	status,0,c
 23428  012C04  36DE               	rlcf	postinc2,f,c
 23429  012C06  36DE               	rlcf	postinc2,f,c
 23430  012C08  36DE               	rlcf	postinc2,f,c
 23431  012C0A  36DD               	rlcf	postdec2,f,c
 23432  012C0C  52DD               	movf	postdec2,f,c
 23433  012C0E  52DD               	movf	postdec2,f,c
 23434  012C10  2EE8               	decfsz	wreg,f,c
 23435  012C12  D7F7               	goto	u7855
 23436  012C14  0E82               	movlw	130
 23437  012C16  6E0B               	movwf	(btemp+10)^0,c
 23438  012C18  0EFF               	movlw	255
 23439  012C1A  6E0C               	movwf	(btemp+11)^0,c
 23440                           
 23441                           ;stkvar	_bexp @ sp[(-13)+10]
 23442  012C1C  0EFD               	movlw	-3
 23443  012C1E  50E3               	movf	plusw1,w,c
 23444  012C20  6E09               	movwf	(btemp+8)^0,c
 23445  012C22  6A0A               	clrf	(btemp+9)^0,c
 23446                           
 23447                           ;stkvar	_aexp @ sp[(-13)+11]
 23448  012C24  0EFE               	movlw	-2
 23449  012C26  50E3               	movf	plusw1,w,c
 23450  012C28  2609               	addwf	(btemp+8)^0,f,c
 23451  012C2A  0E00               	movlw	0
 23452  012C2C  220A               	addwfc	(btemp+9)^0,f,c
 23453  012C2E  500B               	movf	(btemp+10)^0,w,c
 23454  012C30  2609               	addwf	(btemp+8)^0,f,c
 23455  012C32  500C               	movf	(btemp+11)^0,w,c
 23456  012C34  220A               	addwfc	(btemp+9)^0,f,c
 23457                           
 23458                           ;stkvar	_temp @ sp[(-13)+8]
 23459  012C36  0EFB               	movlw	-5
 23460  012C38  0060  F027  FFE3   	movff	btemp+8,plusw1
 23461  012C3E  0EFC               	movlw	-4
 23462  012C40  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23463  012C46  D021               	goto	l8696
 23464  012C48                     l8686:
 23465                           
 23466                           ;stkvar	_prod @ sp[(-13)+0]
 23467  012C48  90D8               	bcf	status,0,c
 23468  012C4A  0EF3               	movlw	-13
 23469  012C4C  36E3               	rlcf	plusw1,f,c
 23470  012C4E  0EF4               	movlw	-12
 23471  012C50  36E3               	rlcf	plusw1,f,c
 23472  012C52  0EF5               	movlw	-11
 23473  012C54  36E3               	rlcf	plusw1,f,c
 23474  012C56  0EF6               	movlw	-10
 23475  012C58  36E3               	rlcf	plusw1,f,c
 23476                           
 23477                           ;stkvar	_grs @ sp[(-13)+4]
 23478  012C5A  0EFA               	movlw	-6
 23479  012C5C  AEE3               	btfss	plusw1,7,c
 23480  012C5E  D002               	goto	l8692
 23481                           
 23482                           ;stkvar	_prod @ sp[(-13)+0]
 23483  012C60  0EF3               	movlw	-13
 23484  012C62  80E3               	bsf	plusw1,0,c
 23485  012C64                     l8692:
 23486                           
 23487                           ;stkvar	_grs @ sp[(-13)+4]
 23488  012C64  90D8               	bcf	status,0,c
 23489  012C66  0EF7               	movlw	-9
 23490  012C68  36E3               	rlcf	plusw1,f,c
 23491  012C6A  0EF8               	movlw	-8
 23492  012C6C  36E3               	rlcf	plusw1,f,c
 23493  012C6E  0EF9               	movlw	-7
 23494  012C70  36E3               	rlcf	plusw1,f,c
 23495  012C72  0EFA               	movlw	-6
 23496  012C74  36E3               	rlcf	plusw1,f,c
 23497                           
 23498                           ;stkvar	_temp @ sp[(-13)+8]
 23499  012C76  50E1               	movf	fsr1l,w,c
 23500  012C78  0FFB               	addlw	-5
 23501  012C7A  6ED9               	movwf	fsr2l,c
 23502  012C7C  50E2               	movf	fsr1h,w,c
 23503  012C7E  6EDA               	movwf	fsr2h,c
 23504  012C80  0EFF               	movlw	255
 23505  012C82  22DA               	addwfc	fsr2h,f,c
 23506  012C84  06DE               	decf	postinc2,f,c
 23507  012C86  0E00               	movlw	0
 23508  012C88  5ADD               	subwfb	postdec2,f,c
 23509  012C8A                     l8696:
 23510                           
 23511                           ;stkvar	_prod @ sp[(-13)+0]
 23512  012C8A  0EF5               	movlw	-11
 23513  012C8C  AEE3               	btfss	plusw1,7,c
 23514  012C8E  D7DC               	goto	l8686
 23515                           
 23516                           ;stkvar	_aexp @ sp[(-13)+11]
 23517  012C90  0EFE               	movlw	-2
 23518  012C92  6AE3               	clrf	plusw1,c
 23519                           
 23520                           ;stkvar	_grs @ sp[(-13)+4]
 23521  012C94  0EFA               	movlw	-6
 23522  012C96  AEE3               	btfss	plusw1,7,c
 23523  012C98  D020               	goto	l8710
 23524                           
 23525                           ;stkvar	_grs @ sp[(-13)+4]
 23526  012C9A  50E1               	movf	fsr1l,w,c
 23527  012C9C  0FF7               	addlw	-9
 23528  012C9E  6ED9               	movwf	fsr2l,c
 23529  012CA0  50E2               	movf	fsr1h,w,c
 23530  012CA2  6EDA               	movwf	fsr2h,c
 23531  012CA4  0EFF               	movlw	255
 23532  012CA6  22DA               	addwfc	fsr2h,f,c
 23533  012CA8  0EFF               	movlw	255
 23534  012CAA  14DE               	andwf	postinc2,w,c
 23535  012CAC  6E09               	movwf	(btemp+8)^0,c
 23536  012CAE  0EFF               	movlw	255
 23537  012CB0  14DE               	andwf	postinc2,w,c
 23538  012CB2  6E0A               	movwf	(btemp+9)^0,c
 23539  012CB4  0EFF               	movlw	255
 23540  012CB6  14DE               	andwf	postinc2,w,c
 23541  012CB8  6E0B               	movwf	(btemp+10)^0,c
 23542  012CBA  0E7F               	movlw	127
 23543  012CBC  14DE               	andwf	postinc2,w,c
 23544  012CBE  6E0C               	movwf	(btemp+11)^0,c
 23545  012CC0  5009               	movf	(btemp+8)^0,w,c
 23546  012CC2  100A               	iorwf	(btemp+9)^0,w,c
 23547  012CC4  100B               	iorwf	(btemp+10)^0,w,c
 23548  012CC6  100C               	iorwf	(btemp+11)^0,w,c
 23549  012CC8  B4D8               	btfsc	status,2,c
 23550  012CCA  D004               	goto	l8706
 23551  012CCC                     u7890:
 23552                           
 23553                           ;stkvar	_aexp @ sp[(-13)+11]
 23554  012CCC  0EFE               	movlw	-2
 23555  012CCE  6AE3               	clrf	plusw1,c
 23556  012CD0  2AE3               	incf	plusw1,f,c
 23557  012CD2  D003               	goto	l8710
 23558  012CD4                     l8706:
 23559                           
 23560                           ;stkvar	_prod @ sp[(-13)+0]
 23561  012CD4  0EF3               	movlw	-13
 23562  012CD6  B0E3               	btfsc	plusw1,0,c
 23563  012CD8  D7F9               	goto	u7890
 23564  012CDA                     l8710:
 23565                           
 23566                           ;stkvar	_aexp @ sp[(-13)+11]
 23567  012CDA  0EFE               	movlw	-2
 23568  012CDC  50E3               	movf	plusw1,w,c
 23569  012CDE  B4D8               	btfsc	status,2,c
 23570  012CE0  D036               	goto	l8720
 23571                           
 23572                           ;stkvar	_prod @ sp[(-13)+0]
 23573  012CE2  50E1               	movf	fsr1l,w,c
 23574  012CE4  0FF3               	addlw	-13
 23575  012CE6  6ED9               	movwf	fsr2l,c
 23576  012CE8  50E2               	movf	fsr1h,w,c
 23577  012CEA  6EDA               	movwf	fsr2h,c
 23578  012CEC  0EFF               	movlw	255
 23579  012CEE  22DA               	addwfc	fsr2h,f,c
 23580  012CF0  2ADE               	incf	postinc2,f,c
 23581  012CF2  0E00               	movlw	0
 23582  012CF4  22DE               	addwfc	postinc2,f,c
 23583  012CF6  22DE               	addwfc	postinc2,f,c
 23584  012CF8  22DE               	addwfc	postinc2,f,c
 23585                           
 23586                           ;stkvar	_prod @ sp[(-13)+0]
 23587  012CFA  0EF6               	movlw	-10
 23588  012CFC  A0E3               	btfss	plusw1,0,c
 23589  012CFE  D027               	goto	l8720
 23590  012D00  0E01               	movlw	1
 23591  012D02  6E0C               	movwf	(btemp+11)^0,c
 23592                           
 23593                           ;stkvar	_prod @ sp[(-13)+0]
 23594  012D04  50E1               	movf	fsr1l,w,c
 23595  012D06  0FF3               	addlw	-13
 23596  012D08  6ED9               	movwf	fsr2l,c
 23597  012D0A  50E2               	movf	fsr1h,w,c
 23598  012D0C  6EDA               	movwf	fsr2h,c
 23599  012D0E  0EFF               	movlw	255
 23600  012D10  22DA               	addwfc	fsr2h,f,c
 23601  012D12  280C               	incf	(btemp+11)^0,w,c
 23602  012D14  52DE               	movf	postinc2,f,c
 23603  012D16  D008               	goto	u7930
 23604  012D18                     u7935:
 23605  012D18  52DE               	movf	postinc2,f,c
 23606  012D1A  90D8               	bcf	status,0,c
 23607  012D1C  BEDC               	btfsc	preinc2,7,c
 23608  012D1E  80D8               	bsf	status,0,c
 23609  012D20  32DD               	rrcf	postdec2,f,c
 23610  012D22  32DD               	rrcf	postdec2,f,c
 23611  012D24  32DD               	rrcf	postdec2,f,c
 23612  012D26  32DE               	rrcf	postinc2,f,c
 23613  012D28                     u7930:
 23614  012D28  2EE8               	decfsz	wreg,f,c
 23615  012D2A  D7F6               	goto	u7935
 23616                           
 23617                           ;stkvar	_temp @ sp[(-13)+8]
 23618  012D2C  0EFB               	movlw	-5
 23619  012D2E  50E3               	movf	plusw1,w,c
 23620  012D30  0F01               	addlw	1
 23621  012D32  6E01               	movwf	btemp^0,c
 23622  012D34  0EFB               	movlw	-5
 23623  012D36  0060  F007  FFE3   	movff	btemp,plusw1
 23624  012D3C  6A01               	clrf	btemp^0,c
 23625  012D3E  0EFC               	movlw	-4
 23626  012D40  50E3               	movf	plusw1,w,c
 23627  012D42  2001               	addwfc	btemp^0,w,c
 23628  012D44  6E01               	movwf	btemp^0,c
 23629  012D46  0EFC               	movlw	-4
 23630  012D48  0060  F007  FFE3   	movff	btemp,plusw1
 23631  012D4E                     l8720:
 23632                           
 23633                           ;stkvar	_temp @ sp[(-13)+8]
 23634  012D4E  0EFC               	movlw	-4
 23635  012D50  BEE3               	btfsc	plusw1,7,c
 23636  012D52  D020               	goto	l8724
 23637  012D54  0EFC               	movlw	-4
 23638  012D56  50E3               	movf	plusw1,w,c
 23639  012D58  E104               	bnz	u7940
 23640  012D5A  0EFB               	movlw	-5
 23641  012D5C  28E3               	incf	plusw1,w,c
 23642  012D5E  A0D8               	btfss	status,0,c
 23643  012D60  D019               	goto	l8724
 23644  012D62                     u7940:
 23645  012D62  0E00               	movlw	0
 23646  012D64  6E09               	movwf	(btemp+8)^0,c
 23647  012D66  0E00               	movlw	0
 23648  012D68  6E0A               	movwf	(btemp+9)^0,c
 23649  012D6A  0E80               	movlw	128
 23650  012D6C  6E0B               	movwf	(btemp+10)^0,c
 23651  012D6E  0E7F               	movlw	127
 23652  012D70  6E0C               	movwf	(btemp+11)^0,c
 23653                           
 23654                           ;stkvar	_prod @ sp[(-13)+0]
 23655  012D72  0EF3               	movlw	-13
 23656  012D74  0060  F027  FFE3   	movff	btemp+8,plusw1
 23657  012D7A  0EF4               	movlw	-12
 23658  012D7C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23659  012D82  0EF5               	movlw	-11
 23660  012D84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23661  012D8A  0EF6               	movlw	-10
 23662  012D8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23663  012D92  D044               	goto	l8740
 23664  012D94                     l8724:
 23665                           
 23666                           ;stkvar	_temp @ sp[(-13)+8]
 23667  012D94  0EFC               	movlw	-4
 23668  012D96  BEE3               	btfsc	plusw1,7,c
 23669  012D98  D007               	goto	u7950
 23670  012D9A  0EFC               	movlw	-4
 23671  012D9C  50E3               	movf	plusw1,w,c
 23672  012D9E  E10F               	bnz	l8730
 23673  012DA0  0EFB               	movlw	-5
 23674  012DA2  04E3               	decf	plusw1,w,c
 23675  012DA4  B0D8               	btfsc	status,0,c
 23676  012DA6  D00B               	goto	l8730
 23677  012DA8                     u7950:
 23678                           
 23679                           ;stkvar	_prod @ sp[(-13)+0]
 23680  012DA8  0EF3               	movlw	-13
 23681  012DAA  6AE3               	clrf	plusw1,c
 23682  012DAC  0EF4               	movlw	-12
 23683  012DAE  6AE3               	clrf	plusw1,c
 23684  012DB0  0EF5               	movlw	-11
 23685  012DB2  6AE3               	clrf	plusw1,c
 23686  012DB4  0EF6               	movlw	-10
 23687  012DB6  6AE3               	clrf	plusw1,c
 23688                           
 23689                           ;stkvar	_sign @ sp[(-13)+12]
 23690  012DB8  0EFF               	movlw	-1
 23691  012DBA  6AE3               	clrf	plusw1,c
 23692  012DBC  D02F               	goto	l8740
 23693  012DBE                     l8730:
 23694                           
 23695                           ;stkvar	_temp @ sp[(-13)+8]
 23696                           ;stkvar	_bexp @ sp[(-13)+10]
 23697  012DBE  0EFB               	movlw	-5
 23698  012DC0  006F FF8C  F001    	movff	plusw1,btemp
 23699  012DC6  0EFD               	movlw	-3
 23700  012DC8  0060  F007  FFE3   	movff	btemp,plusw1
 23701                           
 23702                           ;stkvar	_prod @ sp[(-13)+0]
 23703  012DCE  50E1               	movf	fsr1l,w,c
 23704  012DD0  0FF3               	addlw	-13
 23705  012DD2  6ED9               	movwf	fsr2l,c
 23706  012DD4  50E2               	movf	fsr1h,w,c
 23707  012DD6  6EDA               	movwf	fsr2h,c
 23708  012DD8  0EFF               	movlw	255
 23709  012DDA  22DA               	addwfc	fsr2h,f,c
 23710  012DDC  0EFF               	movlw	255
 23711  012DDE  16DE               	andwf	postinc2,f,c
 23712  012DE0  0EFF               	movlw	255
 23713  012DE2  16DE               	andwf	postinc2,f,c
 23714  012DE4  0E7F               	movlw	127
 23715  012DE6  16DE               	andwf	postinc2,f,c
 23716  012DE8  0E00               	movlw	0
 23717  012DEA  16DE               	andwf	postinc2,f,c
 23718                           
 23719                           ;stkvar	_bexp @ sp[(-13)+10]
 23720  012DEC  0EFD               	movlw	-3
 23721  012DEE  A0E3               	btfss	plusw1,0,c
 23722  012DF0  D008               	goto	l8738
 23723                           
 23724                           ;stkvar	_prod @ sp[(-13)+0]
 23725  012DF2  0EF5               	movlw	245
 23726  012DF4  24E1               	addwf	fsr1l,w,c
 23727  012DF6  6ED9               	movwf	fsr2l,c
 23728  012DF8  0EFF               	movlw	255
 23729  012DFA  20E2               	addwfc	fsr1h,w,c
 23730  012DFC  6EDA               	movwf	fsr2h,c
 23731  012DFE  0E00               	movlw	0
 23732  012E00  8EDB               	bsf	plusw2,7,c
 23733  012E02                     l8738:
 23734                           
 23735                           ;stkvar	_prod @ sp[(-13)+0]
 23736  012E02  0EF6               	movlw	246
 23737  012E04  24E1               	addwf	fsr1l,w,c
 23738  012E06  6ED9               	movwf	fsr2l,c
 23739  012E08  0EFF               	movlw	255
 23740  012E0A  20E2               	addwfc	fsr1h,w,c
 23741  012E0C  6EDA               	movwf	fsr2h,c
 23742                           
 23743                           ;stkvar	_bexp @ sp[(-13)+10]
 23744  012E0E  0EFD               	movlw	-3
 23745  012E10  006F FF8C  F00C    	movff	plusw1,btemp+11
 23746  012E16  90D8               	bcf	status,0,c
 23747  012E18  300C               	rrcf	(btemp+11)^0,w,c
 23748  012E1A  6EDF               	movwf	indf2,c
 23749  012E1C                     l8740:
 23750                           
 23751                           ;stkvar	_sign @ sp[(-13)+12]
 23752  012E1C  0EFF               	movlw	-1
 23753  012E1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23754                           
 23755                           ;stkvar	_prod @ sp[(-13)+0]
 23756  012E24  0EF6               	movlw	246
 23757  012E26  24E1               	addwf	fsr1l,w,c
 23758  012E28  6ED9               	movwf	fsr2l,c
 23759  012E2A  0EFF               	movlw	255
 23760  012E2C  20E2               	addwfc	fsr1h,w,c
 23761  012E2E  6EDA               	movwf	fsr2h,c
 23762  012E30  500C               	movf	(btemp+11)^0,w,c
 23763  012E32  12DF               	iorwf	indf2,f,c
 23764                           
 23765                           ;stkvar	_prod @ sp[(-13)+0]
 23766  012E34  0EF3               	movlw	-13
 23767  012E36  006F FF8C  F001    	movff	plusw1,btemp
 23768  012E3C  0EF4               	movlw	-12
 23769  012E3E  006F FF8C  F002    	movff	plusw1,btemp+1
 23770  012E44  0EF5               	movlw	-11
 23771  012E46  006F FF8C  F003    	movff	plusw1,btemp+2
 23772  012E4C  0EF6               	movlw	-10
 23773  012E4E  006F FF8C  F004    	movff	plusw1,btemp+3
 23774  012E54                     l2871:
 23775                           
 23776                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23777  012E54  0EEB               	movlw	235
 23778  012E56  26E1               	addwf	fsr1l,f,c
 23779  012E58  0EFF               	movlw	255
 23780  012E5A  22E2               	addwfc	fsr1h,f,c
 23781  012E5C  0012               	return		;funcret
 23782  012E5E                     __end_of___flmul:
 23783                           	opt callstack 0
 23784                           
 23785 ;; *************** function _SYSTEM_Initialize *****************
 23786 ;; Defined at:
 23787 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23788 ;; Parameters:    Size  Location     Type
 23789 ;;		None
 23790 ;; Auto vars:     Size  Location     Type
 23791 ;;		None
 23792 ;; Return value:  Size  Location     Type
 23793 ;;                  1  [STACK] void 
 23794 ;; Registers used:
 23795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23796 ;; Tracked objects:
 23797 ;;		On entry : 0/0
 23798 ;;		On exit  : 3F/3C
 23799 ;;		Unchanged: 0/0
 23800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23805 ;;Total ram usage:        0 bytes
 23806 ;; Hardware stack levels used:    1
 23807 ;; Hardware stack levels required when called:    9
 23808 ;; This function calls:
 23809 ;;		_ADCC_Initialize
 23810 ;;		_CLKREF_Initialize
 23811 ;;		_DMA1_Initialize
 23812 ;;		_DMA2_Initialize
 23813 ;;		_EXT_INT_Initialize
 23814 ;;		_FVR_Initialize
 23815 ;;		_INTERRUPT_Initialize
 23816 ;;		_OSCILLATOR_Initialize
 23817 ;;		_PIN_MANAGER_Initialize
 23818 ;;		_PMD_Initialize
 23819 ;;		_PWM8_Initialize
 23820 ;;		_SPI1_Initialize
 23821 ;;		_TMR2_Initialize
 23822 ;;		_TMR3_Initialize
 23823 ;;		_TMR5_Initialize
 23824 ;;		_TMR6_Initialize
 23825 ;;		_UART1_Initialize
 23826 ;;		_UART2_Initialize
 23827 ;; This function is called by:
 23828 ;;		_main
 23829 ;; This function uses a reentrant model
 23830 ;;
 23831                           
 23832                           	psect	text96
 23833  018CE0                     __ptext96:
 23834                           	opt callstack 0
 23835  018CE0                     _SYSTEM_Initialize:
 23836                           	opt callstack 21
 23837                           
 23838                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23839                           
 23840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23841                           ;incstack = 0
 23842  018CE0  EC47  F0C4         	call	_INTERRUPT_Initialize	;wreg free
 23843                           
 23844                           ; BSR set to: 57
 23845                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23846  018CE4  EC7E  F0CC         	call	_PMD_Initialize	;wreg free
 23847                           
 23848                           ; BSR set to: 57
 23849                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23850  018CE8  EC0F  F0C2         	call	_PIN_MANAGER_Initialize	;wreg free
 23851                           
 23852                           ; BSR set to: 58
 23853                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23854  018CEC  EC73  F0CC         	call	_OSCILLATOR_Initialize	;wreg free
 23855                           
 23856                           ; BSR set to: 57
 23857                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23858  018CF0  ECDD  F0CC         	call	_FVR_Initialize	;wreg free
 23859                           
 23860                           ; BSR set to: 62
 23861                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23862  018CF4  ECDC  F0C3         	call	_ADCC_Initialize	;wreg free
 23863                           
 23864                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23865  018CF8  EC68  F0CC         	call	_PWM8_Initialize	;wreg free
 23866                           
 23867                           ; BSR set to: 63
 23868                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23869  018CFC  EC51  F0CC         	call	_TMR2_Initialize	;wreg free
 23870                           
 23871                           ; BSR set to: 57
 23872                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23873  018D00  ECAE  F0C8         	call	_EXT_INT_Initialize	;wreg free
 23874                           
 23875                           ; BSR set to: 57
 23876                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23877  018D04  EC6A  F0C9         	call	_TMR6_Initialize	;wreg free
 23878                           
 23879                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23880  018D08  EC22  F0C7         	call	_TMR3_Initialize	;wreg free
 23881                           
 23882                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23883  018D0C  ECFF  F0C6         	call	_TMR5_Initialize	;wreg free
 23884                           
 23885                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23886  018D10  ECAD  F0C4         	call	_UART1_Initialize	;wreg free
 23887                           
 23888                           ; BSR set to: 57
 23889                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23890  018D14  EC41  F0C5         	call	_UART2_Initialize	;wreg free
 23891                           
 23892                           ; BSR set to: 57
 23893                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23894  018D18  EC5D  F0CC         	call	_SPI1_Initialize	;wreg free
 23895                           
 23896                           ; BSR set to: 61
 23897                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23898  018D1C  EC9D  F0C5         	call	_DMA2_Initialize	;wreg free
 23899                           
 23900                           ; BSR set to: 59
 23901                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23902  018D20  ECA7  F0C3         	call	_DMA1_Initialize	;wreg free
 23903                           
 23904                           ; BSR set to: 59
 23905                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23906  018D24  ECB7  F0CC         	call	_CLKREF_Initialize	;wreg free
 23907                           
 23908                           ; BSR set to: 60
 23909                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23910  018D28  0012               	return		;funcret
 23911  018D2A                     __end_of_SYSTEM_Initialize:
 23912                           	opt callstack 0
 23913                           
 23914 ;; *************** function _UART2_Initialize *****************
 23915 ;; Defined at:
 23916 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23917 ;; Parameters:    Size  Location     Type
 23918 ;;		None
 23919 ;; Auto vars:     Size  Location     Type
 23920 ;;		None
 23921 ;; Return value:  Size  Location     Type
 23922 ;;                  1  [STACK] void 
 23923 ;; Registers used:
 23924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23925 ;; Tracked objects:
 23926 ;;		On entry : 3F/39
 23927 ;;		On exit  : 3F/39
 23928 ;;		Unchanged: 0/0
 23929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23934 ;;Total ram usage:        0 bytes
 23935 ;; Hardware stack levels used:    1
 23936 ;; Hardware stack levels required when called:    8
 23937 ;; This function calls:
 23938 ;;		_UART2_SetRxInterruptHandler
 23939 ;;		_UART2_SetTxInterruptHandler
 23940 ;; This function is called by:
 23941 ;;		_SYSTEM_Initialize
 23942 ;; This function uses a reentrant model
 23943 ;;
 23944                           
 23945                           	psect	text97
 23946  018A82                     __ptext97:
 23947                           	opt callstack 0
 23948  018A82                     _UART2_Initialize:
 23949                           	opt callstack 21
 23950                           
 23951                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23952                           
 23953                           ; BSR set to: 60
 23954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23955                           ;incstack = 0
 23956  018A82  0139               	movlb	57	; () banked
 23957  018A84  9596               	bcf	150,2,b	;volatile
 23958                           
 23959                           ; BSR set to: 57
 23960                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23961  018A86  0E1A               	movlw	low _UART2_Receive_ISR
 23962  018A88  6EE6               	movwf	postinc1,c
 23963  018A8A  0E98               	movlw	high _UART2_Receive_ISR
 23964  018A8C  6EE6               	movwf	postinc1,c
 23965  018A8E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23966  018A90  6EE6               	movwf	postinc1,c
 23967  018A92  ECF7  F0C9         	call	_UART2_SetRxInterruptHandler	;wreg free
 23968                           
 23969                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23970  018A96  0139               	movlb	57	; () banked
 23971  018A98  9796               	bcf	150,3,b	;volatile
 23972                           
 23973                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23974  018A9A  0EA8               	movlw	low _UART2_Transmit_ISR
 23975  018A9C  6EE6               	movwf	postinc1,c
 23976  018A9E  0E92               	movlw	high _UART2_Transmit_ISR
 23977  018AA0  6EE6               	movwf	postinc1,c
 23978  018AA2  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23979  018AA4  6EE6               	movwf	postinc1,c
 23980  018AA6  ECE3  F0C9         	call	_UART2_SetTxInterruptHandler	;wreg free
 23981                           
 23982                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23983  018AAA  013D               	movlb	61	; () banked
 23984  018AAC  6BD4               	clrf	212,b	;volatile
 23985                           
 23986                           ; BSR set to: 61
 23987                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23988  018AAE  6BD6               	clrf	214,b	;volatile
 23989                           
 23990                           ; BSR set to: 61
 23991                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23992  018AB0  6BD8               	clrf	216,b	;volatile
 23993                           
 23994                           ; BSR set to: 61
 23995                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23996  018AB2  0EB0               	movlw	176
 23997  018AB4  6FDA               	movwf	218,b	;volatile
 23998                           
 23999                           ; BSR set to: 61
 24000                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 24001  018AB6  0E80               	movlw	128
 24002  018AB8  6FDB               	movwf	219,b	;volatile
 24003                           
 24004                           ; BSR set to: 61
 24005                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 24006  018ABA  6BDC               	clrf	220,b	;volatile
 24007                           
 24008                           ; BSR set to: 61
 24009                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 24010  018ABC  0E82               	movlw	130
 24011  018ABE  6FDD               	movwf	221,b	;volatile
 24012                           
 24013                           ; BSR set to: 61
 24014                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 24015  018AC0  0E06               	movlw	6
 24016  018AC2  6FDE               	movwf	222,b	;volatile
 24017                           
 24018                           ; BSR set to: 61
 24019                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 24020  018AC4  6BDF               	clrf	223,b	;volatile
 24021                           
 24022                           ; BSR set to: 61
 24023                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 24024  018AC6  6BE0               	clrf	224,b	;volatile
 24025                           
 24026                           ; BSR set to: 61
 24027                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 24028  018AC8  6BE1               	clrf	225,b	;volatile
 24029                           
 24030                           ; BSR set to: 61
 24031                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 24032  018ACA  6BE2               	clrf	226,b	;volatile
 24033                           
 24034                           ; BSR set to: 61
 24035                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 24036  018ACC  6A39               	clrf	_uart2TxHead^0,c	;volatile
 24037                           
 24038                           ; BSR set to: 61
 24039                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 24040  018ACE  6A38               	clrf	_uart2TxTail^0,c	;volatile
 24041                           
 24042                           ; BSR set to: 61
 24043                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 24044  018AD0  0E40               	movlw	64
 24045  018AD2  6E37               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 24046                           
 24047                           ; BSR set to: 61
 24048                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 24049  018AD4  6A36               	clrf	_uart2RxHead^0,c	;volatile
 24050                           
 24051                           ; BSR set to: 61
 24052                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 24053  018AD6  6A35               	clrf	_uart2RxTail^0,c	;volatile
 24054                           
 24055                           ; BSR set to: 61
 24056                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 24057  018AD8  6A34               	clrf	_uart2RxCount^0,c	;volatile
 24058                           
 24059                           ; BSR set to: 61
 24060                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 24061  018ADA  0139               	movlb	57	; () banked
 24062  018ADC  8596               	bsf	150,2,b	;volatile
 24063                           
 24064                           ; BSR set to: 57
 24065                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24066  018ADE  0012               	return		;funcret
 24067  018AE0                     __end_of_UART2_Initialize:
 24068                           	opt callstack 0
 24069                           
 24070 ;; *************** function _UART2_SetTxInterruptHandler *****************
 24071 ;; Defined at:
 24072 ;;		line 252 in file "mcc_generated_files/uart2.c"
 24073 ;; Parameters:    Size  Location     Type
 24074 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24075 ;;		 -> UART2_Transmit_ISR(1), 
 24076 ;; Auto vars:     Size  Location     Type
 24077 ;;		None
 24078 ;; Return value:  Size  Location     Type
 24079 ;;                  1  [STACK] void 
 24080 ;; Registers used:
 24081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24082 ;; Tracked objects:
 24083 ;;		On entry : 3F/39
 24084 ;;		On exit  : 0/0
 24085 ;;		Unchanged: 0/0
 24086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24091 ;;Total ram usage:        0 bytes
 24092 ;; Hardware stack levels used:    1
 24093 ;; Hardware stack levels required when called:    7
 24094 ;; This function calls:
 24095 ;;		Nothing
 24096 ;; This function is called by:
 24097 ;;		_UART2_Initialize
 24098 ;; This function uses a reentrant model
 24099 ;;
 24100                           
 24101                           	psect	text98
 24102  0193C6                     __ptext98:
 24103                           	opt callstack 0
 24104  0193C6                     _UART2_SetTxInterruptHandler:
 24105                           	opt callstack 21
 24106                           
 24107                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 24108                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24109                           
 24110                           ; BSR set to: 57
 24111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24112                           ;incstack = 0
 24113  0193C6  50E1               	movf	fsr1l,w,c
 24114  0193C8  0FFD               	addlw	-3
 24115  0193CA  6ED9               	movwf	fsr2l,c
 24116  0193CC  50E2               	movf	fsr1h,w,c
 24117  0193CE  6EDA               	movwf	fsr2h,c
 24118  0193D0  0EFF               	movlw	255
 24119  0193D2  22DA               	addwfc	fsr2h,f,c
 24120  0193D4  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 24121  0193DA  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 24122  0193E0  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 24123                           
 24124                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24125  0193E6  52E5               	movf	postdec1,f,c
 24126  0193E8  52E5               	movf	postdec1,f,c
 24127  0193EA  52E5               	movf	postdec1,f,c
 24128  0193EC  0012               	return		;funcret
 24129  0193EE                     __end_of_UART2_SetTxInterruptHandler:
 24130                           	opt callstack 0
 24131                           
 24132 ;; *************** function _UART2_SetRxInterruptHandler *****************
 24133 ;; Defined at:
 24134 ;;		line 248 in file "mcc_generated_files/uart2.c"
 24135 ;; Parameters:    Size  Location     Type
 24136 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24137 ;;		 -> UART2_Receive_ISR(1), 
 24138 ;; Auto vars:     Size  Location     Type
 24139 ;;		None
 24140 ;; Return value:  Size  Location     Type
 24141 ;;                  1  [STACK] void 
 24142 ;; Registers used:
 24143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24144 ;; Tracked objects:
 24145 ;;		On entry : 3F/39
 24146 ;;		On exit  : 0/0
 24147 ;;		Unchanged: 0/0
 24148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24153 ;;Total ram usage:        0 bytes
 24154 ;; Hardware stack levels used:    1
 24155 ;; Hardware stack levels required when called:    7
 24156 ;; This function calls:
 24157 ;;		Nothing
 24158 ;; This function is called by:
 24159 ;;		_UART2_Initialize
 24160 ;; This function uses a reentrant model
 24161 ;;
 24162                           
 24163                           	psect	text99
 24164  0193EE                     __ptext99:
 24165                           	opt callstack 0
 24166  0193EE                     _UART2_SetRxInterruptHandler:
 24167                           	opt callstack 21
 24168                           
 24169                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 24170                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24171                           
 24172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24173                           ;incstack = 0
 24174  0193EE  50E1               	movf	fsr1l,w,c
 24175  0193F0  0FFD               	addlw	-3
 24176  0193F2  6ED9               	movwf	fsr2l,c
 24177  0193F4  50E2               	movf	fsr1h,w,c
 24178  0193F6  6EDA               	movwf	fsr2h,c
 24179  0193F8  0EFF               	movlw	255
 24180  0193FA  22DA               	addwfc	fsr2h,f,c
 24181  0193FC  006F FF78  F0C1    	movff	postinc2,_UART2_RxInterruptHandler
 24182  019402  006F FF78  F0C2    	movff	postinc2,_UART2_RxInterruptHandler+1
 24183  019408  006F FF74  F0C3    	movff	postdec2,_UART2_RxInterruptHandler+2
 24184                           
 24185                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24186  01940E  52E5               	movf	postdec1,f,c
 24187  019410  52E5               	movf	postdec1,f,c
 24188  019412  52E5               	movf	postdec1,f,c
 24189  019414  0012               	return		;funcret
 24190  019416                     __end_of_UART2_SetRxInterruptHandler:
 24191                           	opt callstack 0
 24192                           
 24193 ;; *************** function _UART1_Initialize *****************
 24194 ;; Defined at:
 24195 ;;		line 79 in file "mcc_generated_files/uart1.c"
 24196 ;; Parameters:    Size  Location     Type
 24197 ;;		None
 24198 ;; Auto vars:     Size  Location     Type
 24199 ;;		None
 24200 ;; Return value:  Size  Location     Type
 24201 ;;                  1  [STACK] void 
 24202 ;; Registers used:
 24203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24204 ;; Tracked objects:
 24205 ;;		On entry : 0/39
 24206 ;;		On exit  : 3F/39
 24207 ;;		Unchanged: 0/0
 24208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24213 ;;Total ram usage:        0 bytes
 24214 ;; Hardware stack levels used:    1
 24215 ;; Hardware stack levels required when called:    8
 24216 ;; This function calls:
 24217 ;;		_UART1_SetRxInterruptHandler
 24218 ;;		_UART1_SetTxInterruptHandler
 24219 ;; This function is called by:
 24220 ;;		_SYSTEM_Initialize
 24221 ;; This function uses a reentrant model
 24222 ;;
 24223                           
 24224                           	psect	text100
 24225  01895A                     __ptext100:
 24226                           	opt callstack 0
 24227  01895A                     _UART1_Initialize:
 24228                           	opt callstack 21
 24229                           
 24230                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 24231                           
 24232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24233                           ;incstack = 0
 24234  01895A  0139               	movlb	57	; () banked
 24235  01895C  9793               	bcf	147,3,b	;volatile
 24236                           
 24237                           ; BSR set to: 57
 24238                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 24239  01895E  0EFC               	movlw	low _UART1_Receive_ISR
 24240  018960  6EE6               	movwf	postinc1,c
 24241  018962  0E97               	movlw	high _UART1_Receive_ISR
 24242  018964  6EE6               	movwf	postinc1,c
 24243  018966  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 24244  018968  6EE6               	movwf	postinc1,c
 24245  01896A  EC1F  F0CA         	call	_UART1_SetRxInterruptHandler	;wreg free
 24246                           
 24247                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 24248  01896E  0139               	movlb	57	; () banked
 24249  018970  9993               	bcf	147,4,b	;volatile
 24250                           
 24251                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 24252  018972  0E7C               	movlw	low _UART1_Transmit_ISR
 24253  018974  6EE6               	movwf	postinc1,c
 24254  018976  0E92               	movlw	high _UART1_Transmit_ISR
 24255  018978  6EE6               	movwf	postinc1,c
 24256  01897A  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 24257  01897C  6EE6               	movwf	postinc1,c
 24258  01897E  EC0B  F0CA         	call	_UART1_SetTxInterruptHandler	;wreg free
 24259                           
 24260                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 24261  018982  013D               	movlb	61	; () banked
 24262  018984  6BEC               	clrf	236,b	;volatile
 24263                           
 24264                           ; BSR set to: 61
 24265                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 24266  018986  6BED               	clrf	237,b	;volatile
 24267                           
 24268                           ; BSR set to: 61
 24269                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 24270  018988  6BEE               	clrf	238,b	;volatile
 24271                           
 24272                           ; BSR set to: 61
 24273                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 24274  01898A  6BEF               	clrf	239,b	;volatile
 24275                           
 24276                           ; BSR set to: 61
 24277                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 24278  01898C  6BF0               	clrf	240,b	;volatile
 24279                           
 24280                           ; BSR set to: 61
 24281                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 24282  01898E  6BF1               	clrf	241,b	;volatile
 24283                           
 24284                           ; BSR set to: 61
 24285                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 24286  018990  0EB0               	movlw	176
 24287  018992  6FF2               	movwf	242,b	;volatile
 24288                           
 24289                           ; BSR set to: 61
 24290                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 24291  018994  0E80               	movlw	128
 24292  018996  6FF3               	movwf	243,b	;volatile
 24293                           
 24294                           ; BSR set to: 61
 24295                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 24296  018998  6BF4               	clrf	244,b	;volatile
 24297                           
 24298                           ; BSR set to: 61
 24299                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 24300  01899A  0E82               	movlw	130
 24301  01899C  6FF5               	movwf	245,b	;volatile
 24302                           
 24303                           ; BSR set to: 61
 24304                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 24305  01899E  0E06               	movlw	6
 24306  0189A0  6FF6               	movwf	246,b	;volatile
 24307                           
 24308                           ; BSR set to: 61
 24309                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 24310  0189A2  6BF7               	clrf	247,b	;volatile
 24311                           
 24312                           ; BSR set to: 61
 24313                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 24314  0189A4  6BF8               	clrf	248,b	;volatile
 24315                           
 24316                           ; BSR set to: 61
 24317                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 24318  0189A6  6BF9               	clrf	249,b	;volatile
 24319                           
 24320                           ; BSR set to: 61
 24321                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 24322  0189A8  6BFA               	clrf	250,b	;volatile
 24323                           
 24324                           ; BSR set to: 61
 24325                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 24326  0189AA  6A3F               	clrf	_uart1TxHead^0,c	;volatile
 24327                           
 24328                           ; BSR set to: 61
 24329                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 24330  0189AC  6A3E               	clrf	_uart1TxTail^0,c	;volatile
 24331                           
 24332                           ; BSR set to: 61
 24333                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 24334  0189AE  0E40               	movlw	64
 24335  0189B0  6E3D               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 24336                           
 24337                           ; BSR set to: 61
 24338                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 24339  0189B2  6A3C               	clrf	_uart1RxHead^0,c	;volatile
 24340                           
 24341                           ; BSR set to: 61
 24342                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 24343  0189B4  6A3B               	clrf	_uart1RxTail^0,c	;volatile
 24344                           
 24345                           ; BSR set to: 61
 24346                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 24347  0189B6  6A3A               	clrf	_uart1RxCount^0,c	;volatile
 24348                           
 24349                           ; BSR set to: 61
 24350                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 24351  0189B8  0139               	movlb	57	; () banked
 24352  0189BA  8793               	bsf	147,3,b	;volatile
 24353                           
 24354                           ; BSR set to: 57
 24355                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24356  0189BC  0012               	return		;funcret
 24357  0189BE                     __end_of_UART1_Initialize:
 24358                           	opt callstack 0
 24359                           
 24360 ;; *************** function _UART1_SetTxInterruptHandler *****************
 24361 ;; Defined at:
 24362 ;;		line 246 in file "mcc_generated_files/uart1.c"
 24363 ;; Parameters:    Size  Location     Type
 24364 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24365 ;;		 -> UART1_Transmit_ISR(1), 
 24366 ;; Auto vars:     Size  Location     Type
 24367 ;;		None
 24368 ;; Return value:  Size  Location     Type
 24369 ;;                  1  [STACK] void 
 24370 ;; Registers used:
 24371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24372 ;; Tracked objects:
 24373 ;;		On entry : 3F/39
 24374 ;;		On exit  : 0/0
 24375 ;;		Unchanged: 0/0
 24376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24381 ;;Total ram usage:        0 bytes
 24382 ;; Hardware stack levels used:    1
 24383 ;; Hardware stack levels required when called:    7
 24384 ;; This function calls:
 24385 ;;		Nothing
 24386 ;; This function is called by:
 24387 ;;		_UART1_Initialize
 24388 ;; This function uses a reentrant model
 24389 ;;
 24390                           
 24391                           	psect	text101
 24392  019416                     __ptext101:
 24393                           	opt callstack 0
 24394  019416                     _UART1_SetTxInterruptHandler:
 24395                           	opt callstack 21
 24396                           
 24397                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 24398                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24399                           
 24400                           ; BSR set to: 57
 24401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24402                           ;incstack = 0
 24403  019416  50E1               	movf	fsr1l,w,c
 24404  019418  0FFD               	addlw	-3
 24405  01941A  6ED9               	movwf	fsr2l,c
 24406  01941C  50E2               	movf	fsr1h,w,c
 24407  01941E  6EDA               	movwf	fsr2h,c
 24408  019420  0EFF               	movlw	255
 24409  019422  22DA               	addwfc	fsr2h,f,c
 24410  019424  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 24411  01942A  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 24412  019430  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 24413                           
 24414                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24415  019436  52E5               	movf	postdec1,f,c
 24416  019438  52E5               	movf	postdec1,f,c
 24417  01943A  52E5               	movf	postdec1,f,c
 24418  01943C  0012               	return		;funcret
 24419  01943E                     __end_of_UART1_SetTxInterruptHandler:
 24420                           	opt callstack 0
 24421                           
 24422 ;; *************** function _UART1_SetRxInterruptHandler *****************
 24423 ;; Defined at:
 24424 ;;		line 241 in file "mcc_generated_files/uart1.c"
 24425 ;; Parameters:    Size  Location     Type
 24426 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24427 ;;		 -> UART1_Receive_ISR(1), 
 24428 ;; Auto vars:     Size  Location     Type
 24429 ;;		None
 24430 ;; Return value:  Size  Location     Type
 24431 ;;                  1  [STACK] void 
 24432 ;; Registers used:
 24433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24434 ;; Tracked objects:
 24435 ;;		On entry : 3F/39
 24436 ;;		On exit  : 0/0
 24437 ;;		Unchanged: 0/0
 24438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24443 ;;Total ram usage:        0 bytes
 24444 ;; Hardware stack levels used:    1
 24445 ;; Hardware stack levels required when called:    7
 24446 ;; This function calls:
 24447 ;;		Nothing
 24448 ;; This function is called by:
 24449 ;;		_UART1_Initialize
 24450 ;; This function uses a reentrant model
 24451 ;;
 24452                           
 24453                           	psect	text102
 24454  01943E                     __ptext102:
 24455                           	opt callstack 0
 24456  01943E                     _UART1_SetRxInterruptHandler:
 24457                           	opt callstack 21
 24458                           
 24459                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24460                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24461                           
 24462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24463                           ;incstack = 0
 24464  01943E  50E1               	movf	fsr1l,w,c
 24465  019440  0FFD               	addlw	-3
 24466  019442  6ED9               	movwf	fsr2l,c
 24467  019444  50E2               	movf	fsr1h,w,c
 24468  019446  6EDA               	movwf	fsr2h,c
 24469  019448  0EFF               	movlw	255
 24470  01944A  22DA               	addwfc	fsr2h,f,c
 24471  01944C  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24472  019452  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24473  019458  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24474                           
 24475                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24476  01945E  52E5               	movf	postdec1,f,c
 24477  019460  52E5               	movf	postdec1,f,c
 24478  019462  52E5               	movf	postdec1,f,c
 24479  019464  0012               	return		;funcret
 24480  019466                     __end_of_UART1_SetRxInterruptHandler:
 24481                           	opt callstack 0
 24482                           
 24483 ;; *************** function _TMR6_Initialize *****************
 24484 ;; Defined at:
 24485 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24486 ;; Parameters:    Size  Location     Type
 24487 ;;		None
 24488 ;; Auto vars:     Size  Location     Type
 24489 ;;		None
 24490 ;; Return value:  Size  Location     Type
 24491 ;;                  1  [STACK] void 
 24492 ;; Registers used:
 24493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24494 ;; Tracked objects:
 24495 ;;		On entry : 3F/39
 24496 ;;		On exit  : 0/0
 24497 ;;		Unchanged: 0/0
 24498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24503 ;;Total ram usage:        0 bytes
 24504 ;; Hardware stack levels used:    1
 24505 ;; Hardware stack levels required when called:    8
 24506 ;; This function calls:
 24507 ;;		_TMR6_SetInterruptHandler
 24508 ;; This function is called by:
 24509 ;;		_SYSTEM_Initialize
 24510 ;; This function uses a reentrant model
 24511 ;;
 24512                           
 24513                           	psect	text103
 24514  0192D4                     __ptext103:
 24515                           	opt callstack 0
 24516  0192D4                     _TMR6_Initialize:
 24517                           	opt callstack 21
 24518                           
 24519                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24520                           
 24521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24522                           ;incstack = 0
 24523  0192D4  0E01               	movlw	1
 24524  0192D6  6E96               	movwf	150,c	;volatile
 24525                           
 24526                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24527  0192D8  6A95               	clrf	149,c	;volatile
 24528                           
 24529                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24530  0192DA  6A97               	clrf	151,c	;volatile
 24531                           
 24532                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24533  0192DC  0E7C               	movlw	124
 24534  0192DE  6E93               	movwf	147,c	;volatile
 24535                           
 24536                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24537  0192E0  6A92               	clrf	146,c	;volatile
 24538                           
 24539                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24540  0192E2  0139               	movlb	57	; () banked
 24541  0192E4  91A9               	bcf	169,0,b	;volatile
 24542                           
 24543                           ; BSR set to: 57
 24544                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24545  0192E6  8199               	bsf	153,0,b	;volatile
 24546                           
 24547                           ; BSR set to: 57
 24548                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24549  0192E8  0E92               	movlw	low _TMR6_DefaultInterruptHandler
 24550  0192EA  6EE6               	movwf	postinc1,c
 24551  0192EC  0E8C               	movlw	high _TMR6_DefaultInterruptHandler
 24552  0192EE  6EE6               	movwf	postinc1,c
 24553  0192F0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24554  0192F2  6EE6               	movwf	postinc1,c
 24555  0192F4  EC33  F0CA         	call	_TMR6_SetInterruptHandler	;wreg free
 24556                           
 24557                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24558  0192F8  0EE0               	movlw	224
 24559  0192FA  6E94               	movwf	148,c	;volatile
 24560                           
 24561                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24562  0192FC  0012               	return		;funcret
 24563  0192FE                     __end_of_TMR6_Initialize:
 24564                           	opt callstack 0
 24565                           
 24566 ;; *************** function _TMR6_SetInterruptHandler *****************
 24567 ;; Defined at:
 24568 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24569 ;; Parameters:    Size  Location     Type
 24570 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24571 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;		None
 24574 ;; Return value:  Size  Location     Type
 24575 ;;                  1  [STACK] void 
 24576 ;; Registers used:
 24577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24578 ;; Tracked objects:
 24579 ;;		On entry : 3F/39
 24580 ;;		On exit  : 0/0
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24587 ;;Total ram usage:        0 bytes
 24588 ;; Hardware stack levels used:    1
 24589 ;; Hardware stack levels required when called:    7
 24590 ;; This function calls:
 24591 ;;		Nothing
 24592 ;; This function is called by:
 24593 ;;		_TMR6_Initialize
 24594 ;; This function uses a reentrant model
 24595 ;;
 24596                           
 24597                           	psect	text104
 24598  019466                     __ptext104:
 24599                           	opt callstack 0
 24600  019466                     _TMR6_SetInterruptHandler:
 24601                           	opt callstack 21
 24602                           
 24603                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24604                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24605                           
 24606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24607                           ;incstack = 0
 24608  019466  50E1               	movf	fsr1l,w,c
 24609  019468  0FFD               	addlw	-3
 24610  01946A  6ED9               	movwf	fsr2l,c
 24611  01946C  50E2               	movf	fsr1h,w,c
 24612  01946E  6EDA               	movwf	fsr2h,c
 24613  019470  0EFF               	movlw	255
 24614  019472  22DA               	addwfc	fsr2h,f,c
 24615  019474  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24616  01947A  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24617  019480  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24618                           
 24619                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24620  019486  52E5               	movf	postdec1,f,c
 24621  019488  52E5               	movf	postdec1,f,c
 24622  01948A  52E5               	movf	postdec1,f,c
 24623  01948C  0012               	return		;funcret
 24624  01948E                     __end_of_TMR6_SetInterruptHandler:
 24625                           	opt callstack 0
 24626                           
 24627 ;; *************** function _TMR5_Initialize *****************
 24628 ;; Defined at:
 24629 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24630 ;; Parameters:    Size  Location     Type
 24631 ;;		None
 24632 ;; Auto vars:     Size  Location     Type
 24633 ;;		None
 24634 ;; Return value:  Size  Location     Type
 24635 ;;                  1  [STACK] void 
 24636 ;; Registers used:
 24637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24638 ;; Tracked objects:
 24639 ;;		On entry : 0/39
 24640 ;;		On exit  : 0/0
 24641 ;;		Unchanged: 0/0
 24642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;Total ram usage:        0 bytes
 24648 ;; Hardware stack levels used:    1
 24649 ;; Hardware stack levels required when called:    8
 24650 ;; This function calls:
 24651 ;;		_TMR5_SetInterruptHandler
 24652 ;; This function is called by:
 24653 ;;		_SYSTEM_Initialize
 24654 ;; This function uses a reentrant model
 24655 ;;
 24656                           
 24657                           	psect	text105
 24658  018DFE                     __ptext105:
 24659                           	opt callstack 0
 24660  018DFE                     _TMR5_Initialize:
 24661                           	opt callstack 21
 24662                           
 24663                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24664                           
 24665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24666                           ;incstack = 0
 24667  018DFE  6A9B               	clrf	155,c	;volatile
 24668                           
 24669                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24670  018E00  6A9C               	clrf	156,c	;volatile
 24671                           
 24672                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24673  018E02  0E01               	movlw	1
 24674  018E04  6E9D               	movwf	157,c	;volatile
 24675                           
 24676                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24677  018E06  0E63               	movlw	99
 24678  018E08  6E99               	movwf	153,c	;volatile
 24679                           
 24680                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24681  018E0A  0EC0               	movlw	192
 24682  018E0C  6E98               	movwf	152,c	;volatile
 24683                           
 24684                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24685  018E0E  5098               	movf	152,w,c	;volatile
 24686  018E10  006F FE64  F001    	movff	16281,btemp	;volatile
 24687  018E16  6A02               	clrf	(btemp+1)^0,c
 24688  018E18  0060  F004  F002   	movff	btemp,btemp+1
 24689  018E1E  6A01               	clrf	btemp^0,c
 24690  018E20  1001               	iorwf	btemp^0,w,c
 24691  018E22  6E30               	movwf	_timer5ReloadVal^0,c	;volatile
 24692  018E24  5002               	movf	(btemp+1)^0,w,c
 24693  018E26  6E31               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24694                           
 24695                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24696  018E28  0139               	movlb	57	; () banked
 24697  018E2A  9DA8               	bcf	168,6,b	;volatile
 24698                           
 24699                           ; BSR set to: 57
 24700                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24701  018E2C  8D98               	bsf	152,6,b	;volatile
 24702                           
 24703                           ; BSR set to: 57
 24704                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24705  018E2E  0E7E               	movlw	low _TMR5_DefaultInterruptHandler
 24706  018E30  6EE6               	movwf	postinc1,c
 24707  018E32  0E95               	movlw	high _TMR5_DefaultInterruptHandler
 24708  018E34  6EE6               	movwf	postinc1,c
 24709  018E36  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24710  018E38  6EE6               	movwf	postinc1,c
 24711  018E3A  EC47  F0CA         	call	_TMR5_SetInterruptHandler	;wreg free
 24712                           
 24713                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24714  018E3E  0E31               	movlw	49
 24715  018E40  6E9A               	movwf	154,c	;volatile
 24716                           
 24717                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24718  018E42  0012               	return		;funcret
 24719  018E44                     __end_of_TMR5_Initialize:
 24720                           	opt callstack 0
 24721                           
 24722 ;; *************** function _TMR5_SetInterruptHandler *****************
 24723 ;; Defined at:
 24724 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24725 ;; Parameters:    Size  Location     Type
 24726 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24727 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24728 ;; Auto vars:     Size  Location     Type
 24729 ;;		None
 24730 ;; Return value:  Size  Location     Type
 24731 ;;                  1  [STACK] void 
 24732 ;; Registers used:
 24733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24734 ;; Tracked objects:
 24735 ;;		On entry : 3F/39
 24736 ;;		On exit  : 0/0
 24737 ;;		Unchanged: 0/0
 24738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24743 ;;Total ram usage:        0 bytes
 24744 ;; Hardware stack levels used:    1
 24745 ;; Hardware stack levels required when called:    7
 24746 ;; This function calls:
 24747 ;;		Nothing
 24748 ;; This function is called by:
 24749 ;;		_TMR5_Initialize
 24750 ;; This function uses a reentrant model
 24751 ;;
 24752                           
 24753                           	psect	text106
 24754  01948E                     __ptext106:
 24755                           	opt callstack 0
 24756  01948E                     _TMR5_SetInterruptHandler:
 24757                           	opt callstack 21
 24758                           
 24759                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24760                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24761                           
 24762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24763                           ;incstack = 0
 24764  01948E  50E1               	movf	fsr1l,w,c
 24765  019490  0FFD               	addlw	-3
 24766  019492  6ED9               	movwf	fsr2l,c
 24767  019494  50E2               	movf	fsr1h,w,c
 24768  019496  6EDA               	movwf	fsr2h,c
 24769  019498  0EFF               	movlw	255
 24770  01949A  22DA               	addwfc	fsr2h,f,c
 24771  01949C  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24772  0194A2  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24773  0194A8  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24774                           
 24775                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24776  0194AE  52E5               	movf	postdec1,f,c
 24777  0194B0  52E5               	movf	postdec1,f,c
 24778  0194B2  52E5               	movf	postdec1,f,c
 24779  0194B4  0012               	return		;funcret
 24780  0194B6                     __end_of_TMR5_SetInterruptHandler:
 24781                           	opt callstack 0
 24782                           
 24783 ;; *************** function _TMR3_Initialize *****************
 24784 ;; Defined at:
 24785 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24786 ;; Parameters:    Size  Location     Type
 24787 ;;		None
 24788 ;; Auto vars:     Size  Location     Type
 24789 ;;		None
 24790 ;; Return value:  Size  Location     Type
 24791 ;;                  1  [STACK] void 
 24792 ;; Registers used:
 24793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24794 ;; Tracked objects:
 24795 ;;		On entry : 0/39
 24796 ;;		On exit  : 0/0
 24797 ;;		Unchanged: 0/0
 24798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24803 ;;Total ram usage:        0 bytes
 24804 ;; Hardware stack levels used:    1
 24805 ;; Hardware stack levels required when called:    8
 24806 ;; This function calls:
 24807 ;;		_TMR3_SetInterruptHandler
 24808 ;; This function is called by:
 24809 ;;		_SYSTEM_Initialize
 24810 ;; This function uses a reentrant model
 24811 ;;
 24812                           
 24813                           	psect	text107
 24814  018E44                     __ptext107:
 24815                           	opt callstack 0
 24816  018E44                     _TMR3_Initialize:
 24817                           	opt callstack 21
 24818                           
 24819                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24820                           
 24821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24822                           ;incstack = 0
 24823  018E44  6AA7               	clrf	167,c	;volatile
 24824                           
 24825                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24826  018E46  6AA8               	clrf	168,c	;volatile
 24827                           
 24828                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24829  018E48  0E01               	movlw	1
 24830  018E4A  6EA9               	movwf	169,c	;volatile
 24831                           
 24832                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24833  018E4C  0E3C               	movlw	60
 24834  018E4E  6EA5               	movwf	165,c	;volatile
 24835                           
 24836                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24837  018E50  0EB0               	movlw	176
 24838  018E52  6EA4               	movwf	164,c	;volatile
 24839                           
 24840                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24841  018E54  50A4               	movf	164,w,c	;volatile
 24842  018E56  006F FE94  F001    	movff	16293,btemp	;volatile
 24843  018E5C  6A02               	clrf	(btemp+1)^0,c
 24844  018E5E  0060  F004  F002   	movff	btemp,btemp+1
 24845  018E64  6A01               	clrf	btemp^0,c
 24846  018E66  1001               	iorwf	btemp^0,w,c
 24847  018E68  6E2C               	movwf	_timer3ReloadVal^0,c	;volatile
 24848  018E6A  5002               	movf	(btemp+1)^0,w,c
 24849  018E6C  6E2D               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24850                           
 24851                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24852  018E6E  0139               	movlb	57	; () banked
 24853  018E70  9DA6               	bcf	166,6,b	;volatile
 24854                           
 24855                           ; BSR set to: 57
 24856                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24857  018E72  8D96               	bsf	150,6,b	;volatile
 24858                           
 24859                           ; BSR set to: 57
 24860                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24861  018E74  0EE4               	movlw	low _TMR3_DefaultInterruptHandler
 24862  018E76  6EE6               	movwf	postinc1,c
 24863  018E78  0E99               	movlw	high _TMR3_DefaultInterruptHandler
 24864  018E7A  6EE6               	movwf	postinc1,c
 24865  018E7C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24866  018E7E  6EE6               	movwf	postinc1,c
 24867  018E80  EC5B  F0CA         	call	_TMR3_SetInterruptHandler	;wreg free
 24868                           
 24869                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24870  018E84  0E31               	movlw	49
 24871  018E86  6EA6               	movwf	166,c	;volatile
 24872                           
 24873                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24874  018E88  0012               	return		;funcret
 24875  018E8A                     __end_of_TMR3_Initialize:
 24876                           	opt callstack 0
 24877                           
 24878 ;; *************** function _TMR3_SetInterruptHandler *****************
 24879 ;; Defined at:
 24880 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24881 ;; Parameters:    Size  Location     Type
 24882 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24883 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24884 ;; Auto vars:     Size  Location     Type
 24885 ;;		None
 24886 ;; Return value:  Size  Location     Type
 24887 ;;                  1  [STACK] void 
 24888 ;; Registers used:
 24889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24890 ;; Tracked objects:
 24891 ;;		On entry : 0/1
 24892 ;;		On exit  : 0/0
 24893 ;;		Unchanged: 0/0
 24894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24899 ;;Total ram usage:        0 bytes
 24900 ;; Hardware stack levels used:    1
 24901 ;; Hardware stack levels required when called:    7
 24902 ;; This function calls:
 24903 ;;		Nothing
 24904 ;; This function is called by:
 24905 ;;		_TMR3_Initialize
 24906 ;;		_init_bsoc
 24907 ;; This function uses a reentrant model
 24908 ;;
 24909                           
 24910                           	psect	text108
 24911  0194B6                     __ptext108:
 24912                           	opt callstack 0
 24913  0194B6                     _TMR3_SetInterruptHandler:
 24914                           	opt callstack 22
 24915                           
 24916                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24917                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24918                           
 24919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24920                           ;incstack = 0
 24921  0194B6  50E1               	movf	fsr1l,w,c
 24922  0194B8  0FFD               	addlw	-3
 24923  0194BA  6ED9               	movwf	fsr2l,c
 24924  0194BC  50E2               	movf	fsr1h,w,c
 24925  0194BE  6EDA               	movwf	fsr2h,c
 24926  0194C0  0EFF               	movlw	255
 24927  0194C2  22DA               	addwfc	fsr2h,f,c
 24928  0194C4  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24929  0194CA  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24930  0194D0  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24931                           
 24932                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24933  0194D6  52E5               	movf	postdec1,f,c
 24934  0194D8  52E5               	movf	postdec1,f,c
 24935  0194DA  52E5               	movf	postdec1,f,c
 24936  0194DC  0012               	return		;funcret
 24937  0194DE                     __end_of_TMR3_SetInterruptHandler:
 24938                           	opt callstack 0
 24939                           
 24940 ;; *************** function _TMR2_Initialize *****************
 24941 ;; Defined at:
 24942 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24943 ;; Parameters:    Size  Location     Type
 24944 ;;		None
 24945 ;; Auto vars:     Size  Location     Type
 24946 ;;		None
 24947 ;; Return value:  Size  Location     Type
 24948 ;;                  1  [STACK] void 
 24949 ;; Registers used:
 24950 ;;		wreg, status,2
 24951 ;; Tracked objects:
 24952 ;;		On entry : 3F/3F
 24953 ;;		On exit  : 3F/39
 24954 ;;		Unchanged: 0/0
 24955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24960 ;;Total ram usage:        0 bytes
 24961 ;; Hardware stack levels used:    1
 24962 ;; Hardware stack levels required when called:    7
 24963 ;; This function calls:
 24964 ;;		Nothing
 24965 ;; This function is called by:
 24966 ;;		_SYSTEM_Initialize
 24967 ;; This function uses a reentrant model
 24968 ;;
 24969                           
 24970                           	psect	text109
 24971  0198A2                     __ptext109:
 24972                           	opt callstack 0
 24973  0198A2                     _TMR2_Initialize:
 24974                           	opt callstack 22
 24975                           
 24976                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24977                           
 24978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24979                           ;incstack = 0
 24980  0198A2  0E01               	movlw	1
 24981  0198A4  6EAE               	movwf	174,c	;volatile
 24982                           
 24983                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24984  0198A6  6AAD               	clrf	173,c	;volatile
 24985                           
 24986                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24987  0198A8  6AAF               	clrf	175,c	;volatile
 24988                           
 24989                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24990  0198AA  0E63               	movlw	99
 24991  0198AC  6EAB               	movwf	171,c	;volatile
 24992                           
 24993                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24994  0198AE  6AAA               	clrf	170,c	;volatile
 24995                           
 24996                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24997  0198B0  0139               	movlb	57	; () banked
 24998  0198B2  95A4               	bcf	164,2,b	;volatile
 24999                           
 25000                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 25001  0198B4  0EC0               	movlw	192
 25002  0198B6  6EAC               	movwf	172,c	;volatile
 25003                           
 25004                           ; BSR set to: 57
 25005                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25006  0198B8  0012               	return		;funcret
 25007  0198BA                     __end_of_TMR2_Initialize:
 25008                           	opt callstack 0
 25009                           
 25010 ;; *************** function _SPI1_Initialize *****************
 25011 ;; Defined at:
 25012 ;;		line 64 in file "mcc_generated_files/spi1.c"
 25013 ;; Parameters:    Size  Location     Type
 25014 ;;		None
 25015 ;; Auto vars:     Size  Location     Type
 25016 ;;		None
 25017 ;; Return value:  Size  Location     Type
 25018 ;;                  1  [STACK] void 
 25019 ;; Registers used:
 25020 ;;		wreg, status,2
 25021 ;; Tracked objects:
 25022 ;;		On entry : 3F/39
 25023 ;;		On exit  : 3F/3D
 25024 ;;		Unchanged: 0/0
 25025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25030 ;;Total ram usage:        0 bytes
 25031 ;; Hardware stack levels used:    1
 25032 ;; Hardware stack levels required when called:    7
 25033 ;; This function calls:
 25034 ;;		Nothing
 25035 ;; This function is called by:
 25036 ;;		_SYSTEM_Initialize
 25037 ;; This function uses a reentrant model
 25038 ;;
 25039                           
 25040                           	psect	text110
 25041  0198BA                     __ptext110:
 25042                           	opt callstack 0
 25043  0198BA                     _SPI1_Initialize:
 25044                           	opt callstack 22
 25045                           
 25046                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 25047                           
 25048                           ; BSR set to: 57
 25049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25050                           ;incstack = 0
 25051  0198BA  0E40               	movlw	64
 25052  0198BC  013D               	movlb	61	; () banked
 25053  0198BE  6F15               	movwf	21,b	;volatile
 25054                           
 25055                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 25056  0198C0  0E03               	movlw	3
 25057  0198C2  6F16               	movwf	22,b	;volatile
 25058                           
 25059                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 25060  0198C4  0E4F               	movlw	79
 25061  0198C6  6F19               	movwf	25,b	;volatile
 25062                           
 25063                           ; BSR set to: 61
 25064                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 25065  0198C8  6B1C               	clrf	28,b	;volatile
 25066                           
 25067                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 25068  0198CA  0E83               	movlw	131
 25069  0198CC  6F14               	movwf	20,b	;volatile
 25070                           
 25071                           ; BSR set to: 61
 25072                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25073  0198CE  0012               	return		;funcret
 25074  0198D0                     __end_of_SPI1_Initialize:
 25075                           	opt callstack 0
 25076                           
 25077 ;; *************** function _PWM8_Initialize *****************
 25078 ;; Defined at:
 25079 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 25080 ;; Parameters:    Size  Location     Type
 25081 ;;		None
 25082 ;; Auto vars:     Size  Location     Type
 25083 ;;		None
 25084 ;; Return value:  Size  Location     Type
 25085 ;;                  1  [STACK] void 
 25086 ;; Registers used:
 25087 ;;		wreg, status,2
 25088 ;; Tracked objects:
 25089 ;;		On entry : 0/3E
 25090 ;;		On exit  : 3F/3F
 25091 ;;		Unchanged: 0/0
 25092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25097 ;;Total ram usage:        0 bytes
 25098 ;; Hardware stack levels used:    1
 25099 ;; Hardware stack levels required when called:    7
 25100 ;; This function calls:
 25101 ;;		Nothing
 25102 ;; This function is called by:
 25103 ;;		_SYSTEM_Initialize
 25104 ;; This function uses a reentrant model
 25105 ;;
 25106                           
 25107                           	psect	text111
 25108  0198D0                     __ptext111:
 25109                           	opt callstack 0
 25110  0198D0                     _PWM8_Initialize:
 25111                           	opt callstack 22
 25112                           
 25113                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 25114                           
 25115                           ; BSR set to: 61
 25116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25117                           ;incstack = 0
 25118  0198D0  0E80               	movlw	128
 25119  0198D2  6E62               	movwf	98,c	;volatile
 25120                           
 25121                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 25122  0198D4  6A61               	clrf	97,c	;volatile
 25123                           
 25124                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 25125  0198D6  0E40               	movlw	64
 25126  0198D8  6E60               	movwf	96,c	;volatile
 25127                           
 25128                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 25129  0198DA  013F               	movlb	63	; () banked
 25130  0198DC  515F               	movf	95,w,b	;volatile
 25131  0198DE  0B3F               	andlw	-193
 25132  0198E0  0940               	iorlw	64
 25133  0198E2  6F5F               	movwf	95,b	;volatile
 25134                           
 25135                           ; BSR set to: 63
 25136                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25137  0198E4  0012               	return		;funcret
 25138  0198E6                     __end_of_PWM8_Initialize:
 25139                           	opt callstack 0
 25140                           
 25141 ;; *************** function _PMD_Initialize *****************
 25142 ;; Defined at:
 25143 ;;		line 90 in file "mcc_generated_files/mcc.c"
 25144 ;; Parameters:    Size  Location     Type
 25145 ;;		None
 25146 ;; Auto vars:     Size  Location     Type
 25147 ;;		None
 25148 ;; Return value:  Size  Location     Type
 25149 ;;                  1  [STACK] void 
 25150 ;; Registers used:
 25151 ;;		None
 25152 ;; Tracked objects:
 25153 ;;		On entry : 3F/39
 25154 ;;		On exit  : 3F/39
 25155 ;;		Unchanged: 0/0
 25156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25161 ;;Total ram usage:        0 bytes
 25162 ;; Hardware stack levels used:    1
 25163 ;; Hardware stack levels required when called:    7
 25164 ;; This function calls:
 25165 ;;		Nothing
 25166 ;; This function is called by:
 25167 ;;		_SYSTEM_Initialize
 25168 ;; This function uses a reentrant model
 25169 ;;
 25170                           
 25171                           	psect	text112
 25172  0198FC                     __ptext112:
 25173                           	opt callstack 0
 25174  0198FC                     _PMD_Initialize:
 25175                           	opt callstack 22
 25176                           
 25177                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 25178                           
 25179                           ; BSR set to: 63
 25180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25181                           ;incstack = 0
 25182  0198FC  0139               	movlb	57	; () banked
 25183  0198FE  6BC0               	clrf	192,b	;volatile
 25184                           
 25185                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 25186  019900  6BC1               	clrf	193,b	;volatile
 25187                           
 25188                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 25189  019902  6BC2               	clrf	194,b	;volatile
 25190                           
 25191                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 25192  019904  6BC3               	clrf	195,b	;volatile
 25193                           
 25194                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 25195  019906  6BC4               	clrf	196,b	;volatile
 25196                           
 25197                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 25198  019908  6BC5               	clrf	197,b	;volatile
 25199                           
 25200                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 25201  01990A  6BC6               	clrf	198,b	;volatile
 25202                           
 25203                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 25204  01990C  6BC7               	clrf	199,b	;volatile
 25205                           
 25206                           ; BSR set to: 57
 25207                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25208  01990E  0012               	return		;funcret
 25209  019910                     __end_of_PMD_Initialize:
 25210                           	opt callstack 0
 25211                           
 25212 ;; *************** function _PIN_MANAGER_Initialize *****************
 25213 ;; Defined at:
 25214 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 25215 ;; Parameters:    Size  Location     Type
 25216 ;;		None
 25217 ;; Auto vars:     Size  Location     Type
 25218 ;;		None
 25219 ;; Return value:  Size  Location     Type
 25220 ;;                  1  [STACK] void 
 25221 ;; Registers used:
 25222 ;;		wreg, status,2
 25223 ;; Tracked objects:
 25224 ;;		On entry : 3F/39
 25225 ;;		On exit  : 3F/3A
 25226 ;;		Unchanged: 0/0
 25227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25232 ;;Total ram usage:        0 bytes
 25233 ;; Hardware stack levels used:    1
 25234 ;; Hardware stack levels required when called:    7
 25235 ;; This function calls:
 25236 ;;		Nothing
 25237 ;; This function is called by:
 25238 ;;		_SYSTEM_Initialize
 25239 ;; This function uses a reentrant model
 25240 ;;
 25241                           
 25242                           	psect	text113
 25243  01841E                     __ptext113:
 25244                           	opt callstack 0
 25245  01841E                     _PIN_MANAGER_Initialize:
 25246                           	opt callstack 22
 25247                           
 25248                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 25249                           
 25250                           ; BSR set to: 57
 25251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25252                           ;incstack = 0
 25253  01841E  0E07               	movlw	7
 25254  018420  6EBE               	movwf	190,c	;volatile
 25255                           
 25256                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 25257  018422  0E80               	movlw	128
 25258  018424  6EBD               	movwf	189,c	;volatile
 25259                           
 25260                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 25261  018426  6ABA               	clrf	186,c	;volatile
 25262                           
 25263                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 25264  018428  6ABF               	clrf	191,c	;volatile
 25265                           
 25266                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 25267  01842A  6ABB               	clrf	187,c	;volatile
 25268                           
 25269                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 25270  01842C  0E07               	movlw	7
 25271  01842E  6EBC               	movwf	188,c	;volatile
 25272                           
 25273                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 25274  018430  6AC6               	clrf	198,c	;volatile
 25275                           
 25276                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 25277  018432  0E0F               	movlw	15
 25278  018434  6EC7               	movwf	199,c	;volatile
 25279                           
 25280                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 25281  018436  68C2               	setf	194,c	;volatile
 25282                           
 25283                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 25284  018438  0EBF               	movlw	191
 25285  01843A  6EC3               	movwf	195,c	;volatile
 25286                           
 25287                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 25288  01843C  0E90               	movlw	144
 25289  01843E  6EC4               	movwf	196,c	;volatile
 25290                           
 25291                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 25292  018440  0E0C               	movlw	12
 25293  018442  6EC5               	movwf	197,c	;volatile
 25294                           
 25295                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 25296  018444  013A               	movlb	58	; () banked
 25297  018446  6B70               	clrf	112,b	;volatile
 25298                           
 25299                           ; BSR set to: 58
 25300                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 25301  018448  6B60               	clrf	96,b	;volatile
 25302                           
 25303                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 25304  01844A  0E3C               	movlw	60
 25305  01844C  6F50               	movwf	80,b	;volatile
 25306                           
 25307                           ; BSR set to: 58
 25308                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 25309  01844E  6B80               	clrf	128,b	;volatile
 25310                           
 25311                           ; BSR set to: 58
 25312                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 25313  018450  6B90               	clrf	144,b	;volatile
 25314                           
 25315                           ; BSR set to: 58
 25316                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 25317  018452  6940               	setf	64,b	;volatile
 25318                           
 25319                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 25320  018454  0E0C               	movlw	12
 25321  018456  6F71               	movwf	113,b	;volatile
 25322                           
 25323                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 25324  018458  0E0F               	movlw	15
 25325  01845A  6F91               	movwf	145,b	;volatile
 25326                           
 25327                           ; BSR set to: 58
 25328                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 25329  01845C  6B81               	clrf	129,b	;volatile
 25330                           
 25331                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 25332  01845E  0E83               	movlw	131
 25333  018460  6F51               	movwf	81,b	;volatile
 25334                           
 25335                           ; BSR set to: 58
 25336                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 25337  018462  6B41               	clrf	65,b	;volatile
 25338                           
 25339                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 25340  018464  0E97               	movlw	151
 25341  018466  6F61               	movwf	97,b	;volatile
 25342                           
 25343                           ; BSR set to: 58
 25344                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 25345  018468  6B82               	clrf	130,b	;volatile
 25346                           
 25347                           ; BSR set to: 58
 25348                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 25349  01846A  6B92               	clrf	146,b	;volatile
 25350                           
 25351                           ; BSR set to: 58
 25352                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 25353  01846C  6B42               	clrf	66,b	;volatile
 25354                           
 25355                           ; BSR set to: 58
 25356                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 25357  01846E  6B52               	clrf	82,b	;volatile
 25358                           
 25359                           ; BSR set to: 58
 25360                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 25361  018470  6B62               	clrf	98,b	;volatile
 25362                           
 25363                           ; BSR set to: 58
 25364                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 25365  018472  6B72               	clrf	114,b	;volatile
 25366                           
 25367                           ; BSR set to: 58
 25368                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 25369  018474  6943               	setf	67,b	;volatile
 25370                           
 25371                           ; BSR set to: 58
 25372                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 25373  018476  6953               	setf	83,b	;volatile
 25374                           
 25375                           ; BSR set to: 58
 25376                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 25377  018478  6963               	setf	99,b	;volatile
 25378                           
 25379                           ; BSR set to: 58
 25380                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 25381  01847A  6973               	setf	115,b	;volatile
 25382                           
 25383                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 25384  01847C  0E07               	movlw	7
 25385  01847E  6F83               	movwf	131,b	;volatile
 25386                           
 25387                           ; BSR set to: 58
 25388                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 25389  018480  6993               	setf	147,b	;volatile
 25390                           
 25391                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 25392  018482  0E0F               	movlw	15
 25393  018484  6FE8               	movwf	232,b	;volatile
 25394                           
 25395                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 25396  018486  0E13               	movlw	19
 25397  018488  6FDE               	movwf	222,b	;volatile
 25398                           
 25399                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 25400  01848A  0E16               	movlw	22
 25401  01848C  6F0E               	movwf	14,b	;volatile
 25402                           
 25403                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 25404  01848E  0E1E               	movlw	30
 25405  018490  6F13               	movwf	19,b	;volatile
 25406                           
 25407                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 25408  018492  0E08               	movlw	8
 25409  018494  6FC0               	movwf	192,b	;volatile
 25410                           
 25411                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 25412  018496  0E10               	movlw	16
 25413  018498  6F19               	movwf	25,b	;volatile
 25414                           
 25415                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 25416  01849A  0E09               	movlw	9
 25417  01849C  6FC1               	movwf	193,b	;volatile
 25418                           
 25419                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 25420  01849E  0E1F               	movlw	31
 25421  0184A0  6F15               	movwf	21,b	;volatile
 25422                           
 25423                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 25424  0184A2  0E13               	movlw	19
 25425  0184A4  6F16               	movwf	22,b	;volatile
 25426                           
 25427                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 25428  0184A6  0E17               	movlw	23
 25429  0184A8  6FE5               	movwf	229,b	;volatile
 25430                           
 25431                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 25432  0184AA  0E14               	movlw	20
 25433  0184AC  6FDF               	movwf	223,b	;volatile
 25434                           
 25435                           ; BSR set to: 58
 25436                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 25437  0184AE  0012               	return		;funcret
 25438  0184B0                     __end_of_PIN_MANAGER_Initialize:
 25439                           	opt callstack 0
 25440                           
 25441 ;; *************** function _OSCILLATOR_Initialize *****************
 25442 ;; Defined at:
 25443 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25444 ;; Parameters:    Size  Location     Type
 25445 ;;		None
 25446 ;; Auto vars:     Size  Location     Type
 25447 ;;		None
 25448 ;; Return value:  Size  Location     Type
 25449 ;;                  1  [STACK] void 
 25450 ;; Registers used:
 25451 ;;		wreg, status,2
 25452 ;; Tracked objects:
 25453 ;;		On entry : 3F/3A
 25454 ;;		On exit  : 3F/39
 25455 ;;		Unchanged: 0/0
 25456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25461 ;;Total ram usage:        0 bytes
 25462 ;; Hardware stack levels used:    1
 25463 ;; Hardware stack levels required when called:    7
 25464 ;; This function calls:
 25465 ;;		Nothing
 25466 ;; This function is called by:
 25467 ;;		_SYSTEM_Initialize
 25468 ;; This function uses a reentrant model
 25469 ;;
 25470                           
 25471                           	psect	text114
 25472  0198E6                     __ptext114:
 25473                           	opt callstack 0
 25474  0198E6                     _OSCILLATOR_Initialize:
 25475                           	opt callstack 22
 25476                           
 25477                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25478                           
 25479                           ; BSR set to: 58
 25480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25481                           ;incstack = 0
 25482  0198E6  0E20               	movlw	32
 25483  0198E8  0139               	movlb	57	; () banked
 25484  0198EA  6FD9               	movwf	217,b	;volatile
 25485                           
 25486                           ; BSR set to: 57
 25487                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25488  0198EC  6BDB               	clrf	219,b	;volatile
 25489                           
 25490                           ; BSR set to: 57
 25491                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25492  0198EE  6BDD               	clrf	221,b	;volatile
 25493                           
 25494                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25495  0198F0  0E02               	movlw	2
 25496  0198F2  6FDF               	movwf	223,b	;volatile
 25497                           
 25498                           ; BSR set to: 57
 25499                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25500  0198F4  6BDE               	clrf	222,b	;volatile
 25501  0198F6                     l173:
 25502                           
 25503                           ; BSR set to: 57
 25504                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25505  0198F6  B1DC               	btfsc	220,0,b	;volatile
 25506  0198F8  0012               	return	
 25507  0198FA  D7FD               	goto	l173
 25508  0198FC                     __end_of_OSCILLATOR_Initialize:
 25509                           	opt callstack 0
 25510                           
 25511 ;; *************** function _INTERRUPT_Initialize *****************
 25512 ;; Defined at:
 25513 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25514 ;; Parameters:    Size  Location     Type
 25515 ;;		None
 25516 ;; Auto vars:     Size  Location     Type
 25517 ;;  state           1  [STACK] _Bool 
 25518 ;; Return value:  Size  Location     Type
 25519 ;;                  1  [STACK] void 
 25520 ;; Registers used:
 25521 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25522 ;; Tracked objects:
 25523 ;;		On entry : 0/0
 25524 ;;		On exit  : 3F/39
 25525 ;;		Unchanged: 0/0
 25526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25531 ;;Total ram usage:        0 bytes
 25532 ;; Hardware stack levels used:    1
 25533 ;; Hardware stack levels required when called:    7
 25534 ;; This function calls:
 25535 ;;		Nothing
 25536 ;; This function is called by:
 25537 ;;		_SYSTEM_Initialize
 25538 ;; This function uses a reentrant model
 25539 ;;
 25540                           
 25541                           	psect	text115
 25542  01888E                     __ptext115:
 25543                           	opt callstack 0
 25544  01888E                     _INTERRUPT_Initialize:
 25545                           	opt callstack 0
 25546                           
 25547                           ; BSR set to: 57
 25548                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25549  01888E  52E6               	movf	postinc1,f,c
 25550                           
 25551                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25552                           
 25553                           ;incstack = 0
 25554  018890  8AD2               	bsf	210,5,c	;volatile
 25555                           
 25556                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25557  018892  AED2               	btfss	16338,7,c	;volatile
 25558  018894  D003               	goto	u8230
 25559  018896  6A0C               	clrf	(btemp+11)^0,c
 25560  018898  2A0C               	incf	(btemp+11)^0,f,c
 25561  01889A  D001               	goto	u8248
 25562  01889C                     u8230:
 25563  01889C  6A0C               	clrf	(btemp+11)^0,c
 25564  01889E                     u8248:
 25565                           
 25566                           ;stkvar	_state @ sp[(-1)+0]
 25567  01889E  0EFF               	movlw	-1
 25568  0188A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25569                           
 25570                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25571  0188A6  9ED2               	bcf	16338,7,c	;volatile
 25572                           
 25573                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25574  0188A8  0E55               	movlw	85
 25575  0188AA  6ED4               	movwf	212,c	;volatile
 25576                           
 25577                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25578  0188AC  0EAA               	movlw	170
 25579  0188AE  6ED4               	movwf	212,c	;volatile
 25580                           
 25581                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25582  0188B0  90D4               	bcf	212,0,c	;volatile
 25583                           
 25584                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25585  0188B2  0138               	movlb	56	; () banked
 25586  0188B4  6B9F               	clrf	159,b	;volatile
 25587                           
 25588                           ; BSR set to: 56
 25589                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25590  0188B6  6B9E               	clrf	158,b	;volatile
 25591                           
 25592                           ; BSR set to: 56
 25593                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25594  0188B8  0E08               	movlw	8
 25595  0188BA  6F9D               	movwf	157,b	;volatile
 25596                           
 25597                           ; BSR set to: 56
 25598                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25599  0188BC  0E55               	movlw	85
 25600  0188BE  6ED4               	movwf	212,c	;volatile
 25601                           
 25602                           ; BSR set to: 56
 25603                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25604  0188C0  0EAA               	movlw	170
 25605  0188C2  6ED4               	movwf	212,c	;volatile
 25606                           
 25607                           ; BSR set to: 56
 25608                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25609  0188C4  80D4               	bsf	212,0,c	;volatile
 25610                           
 25611                           ; BSR set to: 56
 25612                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25613                           ;stkvar	_state @ sp[(-1)+0]
 25614  0188C6  0EFF               	movlw	-1
 25615  0188C8  B0E3               	btfsc	plusw1,0,c
 25616  0188CA  D002               	bra	u8255
 25617  0188CC  9ED2               	bcf	16338,7,c	;volatile
 25618  0188CE  D001               	bra	u8256
 25619  0188D0                     u8255:
 25620  0188D0  8ED2               	bsf	16338,7,c	;volatile
 25621  0188D2                     u8256:
 25622                           
 25623                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25624  0188D2  0139               	movlb	57	; () banked
 25625  0188D4  8782               	bsf	130,3,b	;volatile
 25626                           
 25627                           ; BSR set to: 57
 25628                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25629  0188D6  8382               	bsf	130,1,b	;volatile
 25630                           
 25631                           ; BSR set to: 57
 25632                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25633  0188D8  8182               	bsf	130,0,b	;volatile
 25634                           
 25635                           ; BSR set to: 57
 25636                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25637  0188DA  8582               	bsf	130,2,b	;volatile
 25638                           
 25639                           ; BSR set to: 57
 25640                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25641  0188DC  8786               	bsf	134,3,b	;volatile
 25642                           
 25643                           ; BSR set to: 57
 25644                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25645  0188DE  8586               	bsf	134,2,b	;volatile
 25646                           
 25647                           ; BSR set to: 57
 25648                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25649  0188E0  8983               	bsf	131,4,b	;volatile
 25650                           
 25651                           ; BSR set to: 57
 25652                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25653  0188E2  8783               	bsf	131,3,b	;volatile
 25654                           
 25655                           ; BSR set to: 57
 25656                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25657  0188E4  8181               	bsf	129,0,b	;volatile
 25658                           
 25659                           ; BSR set to: 57
 25660                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25661  0188E6  9185               	bcf	133,0,b	;volatile
 25662                           
 25663                           ; BSR set to: 57
 25664                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25665  0188E8  8189               	bsf	137,0,b	;volatile
 25666                           
 25667                           ; BSR set to: 57
 25668                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25669  0188EA  9D88               	bcf	136,6,b	;volatile
 25670                           
 25671                           ; BSR set to: 57
 25672                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25673  0188EC  8581               	bsf	129,2,b	;volatile
 25674                           
 25675                           ; BSR set to: 57
 25676                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25677  0188EE  8781               	bsf	129,3,b	;volatile
 25678                           
 25679                           ; BSR set to: 57
 25680                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25681  0188F0  9D86               	bcf	134,6,b	;volatile
 25682                           
 25683                           ; BSR set to: 57
 25684                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25685  0188F2  52E5               	movf	postdec1,f,c
 25686  0188F4  0012               	return		;funcret
 25687  0188F6                     __end_of_INTERRUPT_Initialize:
 25688                           	opt callstack 0
 25689                           
 25690 ;; *************** function _FVR_Initialize *****************
 25691 ;; Defined at:
 25692 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25693 ;; Parameters:    Size  Location     Type
 25694 ;;		None
 25695 ;; Auto vars:     Size  Location     Type
 25696 ;;		None
 25697 ;; Return value:  Size  Location     Type
 25698 ;;                  1  [STACK] void 
 25699 ;; Registers used:
 25700 ;;		wreg, status,2
 25701 ;; Tracked objects:
 25702 ;;		On entry : 3F/39
 25703 ;;		On exit  : 3F/3E
 25704 ;;		Unchanged: 0/0
 25705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25710 ;;Total ram usage:        0 bytes
 25711 ;; Hardware stack levels used:    1
 25712 ;; Hardware stack levels required when called:    7
 25713 ;; This function calls:
 25714 ;;		Nothing
 25715 ;; This function is called by:
 25716 ;;		_SYSTEM_Initialize
 25717 ;; This function uses a reentrant model
 25718 ;;
 25719                           
 25720                           	psect	text116
 25721  0199BA                     __ptext116:
 25722                           	opt callstack 0
 25723  0199BA                     _FVR_Initialize:
 25724                           	opt callstack 22
 25725                           
 25726                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25727                           
 25728                           ; BSR set to: 57
 25729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25730                           ;incstack = 0
 25731  0199BA  0EAF               	movlw	175
 25732  0199BC  013E               	movlb	62	; () banked
 25733  0199BE  6FC1               	movwf	193,b	;volatile
 25734                           
 25735                           ; BSR set to: 62
 25736                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25737  0199C0  0012               	return		;funcret
 25738  0199C2                     __end_of_FVR_Initialize:
 25739                           	opt callstack 0
 25740                           
 25741 ;; *************** function _EXT_INT_Initialize *****************
 25742 ;; Defined at:
 25743 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25744 ;; Parameters:    Size  Location     Type
 25745 ;;		None
 25746 ;; Auto vars:     Size  Location     Type
 25747 ;;		None
 25748 ;; Return value:  Size  Location     Type
 25749 ;;                  1  [STACK] void 
 25750 ;; Registers used:
 25751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25752 ;; Tracked objects:
 25753 ;;		On entry : 3F/39
 25754 ;;		On exit  : 3F/39
 25755 ;;		Unchanged: 0/0
 25756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25761 ;;Total ram usage:        0 bytes
 25762 ;; Hardware stack levels used:    1
 25763 ;; Hardware stack levels required when called:    8
 25764 ;; This function calls:
 25765 ;;		_INT0_SetInterruptHandler
 25766 ;;		_INT1_SetInterruptHandler
 25767 ;; This function is called by:
 25768 ;;		_SYSTEM_Initialize
 25769 ;; This function uses a reentrant model
 25770 ;;
 25771                           
 25772                           	psect	text117
 25773  01915C                     __ptext117:
 25774                           	opt callstack 0
 25775  01915C                     _EXT_INT_Initialize:
 25776                           	opt callstack 21
 25777                           
 25778                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25779                           
 25780                           ; BSR set to: 62
 25781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25782                           ;incstack = 0
 25783  01915C  0139               	movlb	57	; () banked
 25784  01915E  91A1               	bcf	161,0,b	;volatile
 25785                           
 25786                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25787  019160  90D2               	bcf	210,0,c	;volatile
 25788                           
 25789                           ; BSR set to: 57
 25790                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25791  019162  0EE6               	movlw	low _INT0_DefaultInterruptHandler
 25792  019164  6EE6               	movwf	postinc1,c
 25793  019166  0E99               	movlw	high _INT0_DefaultInterruptHandler
 25794  019168  6EE6               	movwf	postinc1,c
 25795  01916A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25796  01916C  6EE6               	movwf	postinc1,c
 25797  01916E  EC83  F0CA         	call	_INT0_SetInterruptHandler	;wreg free
 25798                           
 25799                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25800  019172  0139               	movlb	57	; () banked
 25801  019174  8191               	bsf	145,0,b	;volatile
 25802                           
 25803                           ; BSR set to: 57
 25804                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25805  019176  91A5               	bcf	165,0,b	;volatile
 25806                           
 25807                           ; BSR set to: 57
 25808                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25809  019178  92D2               	bcf	210,1,c	;volatile
 25810                           
 25811                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25812  01917A  0EE2               	movlw	low _INT1_DefaultInterruptHandler
 25813  01917C  6EE6               	movwf	postinc1,c
 25814  01917E  0E99               	movlw	high _INT1_DefaultInterruptHandler
 25815  019180  6EE6               	movwf	postinc1,c
 25816  019182  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25817  019184  6EE6               	movwf	postinc1,c
 25818  019186  EC6F  F0CA         	call	_INT1_SetInterruptHandler	;wreg free
 25819                           
 25820                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25821  01918A  0139               	movlb	57	; () banked
 25822  01918C  8195               	bsf	149,0,b	;volatile
 25823                           
 25824                           ; BSR set to: 57
 25825                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25826  01918E  0012               	return		;funcret
 25827  019190                     __end_of_EXT_INT_Initialize:
 25828                           	opt callstack 0
 25829                           
 25830 ;; *************** function _INT1_SetInterruptHandler *****************
 25831 ;; Defined at:
 25832 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25833 ;; Parameters:    Size  Location     Type
 25834 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25835 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25836 ;; Auto vars:     Size  Location     Type
 25837 ;;		None
 25838 ;; Return value:  Size  Location     Type
 25839 ;;                  1  [STACK] void 
 25840 ;; Registers used:
 25841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25842 ;; Tracked objects:
 25843 ;;		On entry : 3F/39
 25844 ;;		On exit  : 0/0
 25845 ;;		Unchanged: 0/0
 25846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25851 ;;Total ram usage:        0 bytes
 25852 ;; Hardware stack levels used:    1
 25853 ;; Hardware stack levels required when called:    7
 25854 ;; This function calls:
 25855 ;;		Nothing
 25856 ;; This function is called by:
 25857 ;;		_EXT_INT_Initialize
 25858 ;;		_start_switch_handler
 25859 ;; This function uses a reentrant model
 25860 ;;
 25861                           
 25862                           	psect	text118
 25863  0194DE                     __ptext118:
 25864                           	opt callstack 0
 25865  0194DE                     _INT1_SetInterruptHandler:
 25866                           	opt callstack 22
 25867                           
 25868                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25869                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25870                           
 25871                           ; BSR set to: 57
 25872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25873                           ;incstack = 0
 25874  0194DE  50E1               	movf	fsr1l,w,c
 25875  0194E0  0FFD               	addlw	-3
 25876  0194E2  6ED9               	movwf	fsr2l,c
 25877  0194E4  50E2               	movf	fsr1h,w,c
 25878  0194E6  6EDA               	movwf	fsr2h,c
 25879  0194E8  0EFF               	movlw	255
 25880  0194EA  22DA               	addwfc	fsr2h,f,c
 25881  0194EC  006F FF78  F0C4    	movff	postinc2,_INT1_InterruptHandler
 25882  0194F2  006F FF78  F0C5    	movff	postinc2,_INT1_InterruptHandler+1
 25883  0194F8  006F FF74  F0C6    	movff	postdec2,_INT1_InterruptHandler+2
 25884                           
 25885                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25886  0194FE  52E5               	movf	postdec1,f,c
 25887  019500  52E5               	movf	postdec1,f,c
 25888  019502  52E5               	movf	postdec1,f,c
 25889  019504  0012               	return		;funcret
 25890  019506                     __end_of_INT1_SetInterruptHandler:
 25891                           	opt callstack 0
 25892                           
 25893 ;; *************** function _INT0_SetInterruptHandler *****************
 25894 ;; Defined at:
 25895 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25896 ;; Parameters:    Size  Location     Type
 25897 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25898 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25899 ;; Auto vars:     Size  Location     Type
 25900 ;;		None
 25901 ;; Return value:  Size  Location     Type
 25902 ;;                  1  [STACK] void 
 25903 ;; Registers used:
 25904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25905 ;; Tracked objects:
 25906 ;;		On entry : 3F/39
 25907 ;;		On exit  : 0/0
 25908 ;;		Unchanged: 0/0
 25909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25914 ;;Total ram usage:        0 bytes
 25915 ;; Hardware stack levels used:    1
 25916 ;; Hardware stack levels required when called:    7
 25917 ;; This function calls:
 25918 ;;		Nothing
 25919 ;; This function is called by:
 25920 ;;		_EXT_INT_Initialize
 25921 ;; This function uses a reentrant model
 25922 ;;
 25923                           
 25924                           	psect	text119
 25925  019506                     __ptext119:
 25926                           	opt callstack 0
 25927  019506                     _INT0_SetInterruptHandler:
 25928                           	opt callstack 21
 25929                           
 25930                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25931                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25932                           
 25933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25934                           ;incstack = 0
 25935  019506  50E1               	movf	fsr1l,w,c
 25936  019508  0FFD               	addlw	-3
 25937  01950A  6ED9               	movwf	fsr2l,c
 25938  01950C  50E2               	movf	fsr1h,w,c
 25939  01950E  6EDA               	movwf	fsr2h,c
 25940  019510  0EFF               	movlw	255
 25941  019512  22DA               	addwfc	fsr2h,f,c
 25942  019514  006F FF78  F021    	movff	postinc2,_INT0_InterruptHandler
 25943  01951A  006F FF78  F022    	movff	postinc2,_INT0_InterruptHandler+1
 25944  019520  006F FF74  F023    	movff	postdec2,_INT0_InterruptHandler+2
 25945                           
 25946                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25947  019526  52E5               	movf	postdec1,f,c
 25948  019528  52E5               	movf	postdec1,f,c
 25949  01952A  52E5               	movf	postdec1,f,c
 25950  01952C  0012               	return		;funcret
 25951  01952E                     __end_of_INT0_SetInterruptHandler:
 25952                           	opt callstack 0
 25953                           
 25954 ;; *************** function _DMA2_Initialize *****************
 25955 ;; Defined at:
 25956 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25957 ;; Parameters:    Size  Location     Type
 25958 ;;		None
 25959 ;; Auto vars:     Size  Location     Type
 25960 ;;		None
 25961 ;; Return value:  Size  Location     Type
 25962 ;;                  1  [STACK] void 
 25963 ;; Registers used:
 25964 ;;		wreg, status,2
 25965 ;; Tracked objects:
 25966 ;;		On entry : 3F/3D
 25967 ;;		On exit  : 3F/3B
 25968 ;;		Unchanged: 0/0
 25969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25974 ;;Total ram usage:        0 bytes
 25975 ;; Hardware stack levels used:    1
 25976 ;; Hardware stack levels required when called:    7
 25977 ;; This function calls:
 25978 ;;		Nothing
 25979 ;; This function is called by:
 25980 ;;		_SYSTEM_Initialize
 25981 ;; This function uses a reentrant model
 25982 ;;
 25983                           
 25984                           	psect	text120
 25985  018B3A                     __ptext120:
 25986                           	opt callstack 0
 25987  018B3A                     _DMA2_Initialize:
 25988                           	opt callstack 22
 25989                           
 25990                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25991                           
 25992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25993                           ;incstack = 0
 25994  018B3A  0E00               	movlw	0
 25995  018B3C  013B               	movlb	59	; () banked
 25996  018B3E  6FD9               	movwf	217,b	;volatile
 25997  018B40  0E10               	movlw	16
 25998  018B42  6FDA               	movwf	218,b	;volatile
 25999  018B44  0E00               	movlw	0
 26000  018B46  6FDB               	movwf	219,b	;volatile
 26001                           
 26002                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 26003  018B48  0E3F               	movlw	63
 26004  018B4A  6FD1               	movwf	209,b	;volatile
 26005  018B4C  0EBB               	movlw	187
 26006  018B4E  6FD0               	movwf	208,b	;volatile
 26007                           
 26008                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 26009  018B50  0E03               	movlw	3
 26010  018B52  6FDD               	movwf	221,b	;volatile
 26011                           
 26012                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 26013  018B54  0E00               	movlw	0
 26014  018B56  6FD8               	movwf	216,b	;volatile
 26015  018B58  0E01               	movlw	1
 26016  018B5A  6FD7               	movwf	215,b	;volatile
 26017                           
 26018                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 26019  018B5C  0E00               	movlw	0
 26020  018B5E  6FCF               	movwf	207,b	;volatile
 26021  018B60  0E01               	movlw	1
 26022  018B62  6FCE               	movwf	206,b	;volatile
 26023                           
 26024                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 26025  018B64  0E46               	movlw	70
 26026  018B66  6FDF               	movwf	223,b	;volatile
 26027                           
 26028                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 26029  018B68  0E3D               	movlw	61
 26030  018B6A  6FDE               	movwf	222,b	;volatile
 26031                           
 26032                           ; BSR set to: 59
 26033                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 26034  018B6C  0139               	movlb	57	; () banked
 26035  018B6E  97A5               	bcf	165,3,b	;volatile
 26036                           
 26037                           ; BSR set to: 57
 26038                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 26039  018B70  95A5               	bcf	165,2,b	;volatile
 26040                           
 26041                           ; BSR set to: 57
 26042                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 26043  018B72  9BA5               	bcf	165,5,b	;volatile
 26044                           
 26045                           ; BSR set to: 57
 26046                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 26047  018B74  99A5               	bcf	165,4,b	;volatile
 26048                           
 26049                           ; BSR set to: 57
 26050                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 26051  018B76  9795               	bcf	149,3,b	;volatile
 26052                           
 26053                           ; BSR set to: 57
 26054                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 26055  018B78  9595               	bcf	149,2,b	;volatile
 26056                           
 26057                           ; BSR set to: 57
 26058                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 26059  018B7A  9B95               	bcf	149,5,b	;volatile
 26060                           
 26061                           ; BSR set to: 57
 26062                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 26063  018B7C  9995               	bcf	149,4,b	;volatile
 26064  018B7E  9ED2               	bcf	16338,7,c	;# 
 26065  018B80  0139               	banksel	14831	;# 
 26066  018B82  0E55               	movlw	85	;# 
 26067  018B84  6FEF               	movwf	14831,b	;# 
 26068  018B86  0EAA               	movlw	170	;# 
 26069  018B88  6FEF               	movwf	14831,b	;# 
 26070  018B8A  81EF               	bsf	14831,0,b	;# 
 26071  018B8C  8ED2               	bsf	16338,7,c	;# 
 26072                           
 26073                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 26074  018B8E  013B               	movlb	59	; () banked
 26075  018B90  6BDC               	clrf	220,b	;volatile
 26076                           
 26077                           ; BSR set to: 59
 26078                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26079  018B92  0012               	return		;funcret
 26080  018B94                     __end_of_DMA2_Initialize:
 26081                           	opt callstack 0
 26082                           
 26083 ;; *************** function _DMA1_Initialize *****************
 26084 ;; Defined at:
 26085 ;;		line 86 in file "mcc_generated_files/dma1.c"
 26086 ;; Parameters:    Size  Location     Type
 26087 ;;		None
 26088 ;; Auto vars:     Size  Location     Type
 26089 ;;		None
 26090 ;; Return value:  Size  Location     Type
 26091 ;;                  1  [STACK] void 
 26092 ;; Registers used:
 26093 ;;		wreg, status,2
 26094 ;; Tracked objects:
 26095 ;;		On entry : 3F/3B
 26096 ;;		On exit  : 3F/3B
 26097 ;;		Unchanged: 0/0
 26098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26103 ;;Total ram usage:        0 bytes
 26104 ;; Hardware stack levels used:    1
 26105 ;; Hardware stack levels required when called:    7
 26106 ;; This function calls:
 26107 ;;		Nothing
 26108 ;; This function is called by:
 26109 ;;		_SYSTEM_Initialize
 26110 ;; This function uses a reentrant model
 26111 ;;
 26112                           
 26113                           	psect	text121
 26114  01874E                     __ptext121:
 26115                           	opt callstack 0
 26116  01874E                     _DMA1_Initialize:
 26117                           	opt callstack 22
 26118                           
 26119                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 26120                           
 26121                           ; BSR set to: 59
 26122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26123                           ;incstack = 0
 26124  01874E  0E00               	movlw	0
 26125  018750  013B               	movlb	59	; () banked
 26126  018752  6FF9               	movwf	249,b	;volatile
 26127  018754  0E10               	movlw	16
 26128  018756  6FFA               	movwf	250,b	;volatile
 26129  018758  0E00               	movlw	0
 26130  01875A  6FFB               	movwf	251,b	;volatile
 26131                           
 26132                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 26133  01875C  0E3D               	movlw	61
 26134  01875E  6FF1               	movwf	241,b	;volatile
 26135  018760  0E11               	movlw	17
 26136  018762  6FF0               	movwf	240,b	;volatile
 26137                           
 26138                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 26139  018764  0E03               	movlw	3
 26140  018766  6FFD               	movwf	253,b	;volatile
 26141                           
 26142                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 26143  018768  0E00               	movlw	0
 26144  01876A  6FF8               	movwf	248,b	;volatile
 26145  01876C  0E01               	movlw	1
 26146  01876E  6FF7               	movwf	247,b	;volatile
 26147                           
 26148                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 26149  018770  0E00               	movlw	0
 26150  018772  6FEF               	movwf	239,b	;volatile
 26151  018774  0E01               	movlw	1
 26152  018776  6FEE               	movwf	238,b	;volatile
 26153                           
 26154                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 26155  018778  0E15               	movlw	21
 26156  01877A  6FFF               	movwf	255,b	;volatile
 26157                           
 26158                           ; BSR set to: 59
 26159                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 26160  01877C  6BFE               	clrf	254,b	;volatile
 26161                           
 26162                           ; BSR set to: 59
 26163                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 26164  01877E  0139               	movlb	57	; () banked
 26165  018780  93A2               	bcf	162,1,b	;volatile
 26166                           
 26167                           ; BSR set to: 57
 26168                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 26169  018782  91A2               	bcf	162,0,b	;volatile
 26170                           
 26171                           ; BSR set to: 57
 26172                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 26173  018784  97A2               	bcf	162,3,b	;volatile
 26174                           
 26175                           ; BSR set to: 57
 26176                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 26177  018786  95A2               	bcf	162,2,b	;volatile
 26178                           
 26179                           ; BSR set to: 57
 26180                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 26181  018788  8392               	bsf	146,1,b	;volatile
 26182                           
 26183                           ; BSR set to: 57
 26184                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 26185  01878A  8192               	bsf	146,0,b	;volatile
 26186                           
 26187                           ; BSR set to: 57
 26188                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 26189  01878C  8792               	bsf	146,3,b	;volatile
 26190                           
 26191                           ; BSR set to: 57
 26192                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 26193  01878E  8592               	bsf	146,2,b	;volatile
 26194                           
 26195                           ; BSR set to: 57
 26196                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 26197  018790  6BF1               	clrf	241,b	;volatile
 26198                           
 26199                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 26200  018792  0E01               	movlw	1
 26201  018794  6FF2               	movwf	242,b	;volatile
 26202                           
 26203                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 26204  018796  0E04               	movlw	4
 26205  018798  6FF3               	movwf	243,b	;volatile
 26206                           
 26207                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 26208  01879A  0E02               	movlw	2
 26209  01879C  6FF4               	movwf	244,b	;volatile
 26210                           
 26211                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 26212  01879E  0E03               	movlw	3
 26213  0187A0  6FF7               	movwf	247,b	;volatile
 26214  0187A2  9ED2               	bcf	16338,7,c	;# 
 26215  0187A4  0139               	banksel	14831	;# 
 26216  0187A6  0E55               	movlw	85	;# 
 26217  0187A8  6FEF               	movwf	14831,b	;# 
 26218  0187AA  0EAA               	movlw	170	;# 
 26219  0187AC  6FEF               	movwf	14831,b	;# 
 26220  0187AE  81EF               	bsf	14831,0,b	;# 
 26221  0187B0  8ED2               	bsf	16338,7,c	;# 
 26222                           
 26223                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 26224  0187B2  013B               	movlb	59	; () banked
 26225  0187B4  6BFC               	clrf	252,b	;volatile
 26226                           
 26227                           ; BSR set to: 59
 26228                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26229  0187B6  0012               	return		;funcret
 26230  0187B8                     __end_of_DMA1_Initialize:
 26231                           	opt callstack 0
 26232                           
 26233 ;; *************** function _CLKREF_Initialize *****************
 26234 ;; Defined at:
 26235 ;;		line 58 in file "mcc_generated_files/clkref.c"
 26236 ;; Parameters:    Size  Location     Type
 26237 ;;		None
 26238 ;; Auto vars:     Size  Location     Type
 26239 ;;		None
 26240 ;; Return value:  Size  Location     Type
 26241 ;;                  1  [STACK] void 
 26242 ;; Registers used:
 26243 ;;		wreg, status,2
 26244 ;; Tracked objects:
 26245 ;;		On entry : 3F/3B
 26246 ;;		On exit  : 3F/3C
 26247 ;;		Unchanged: 0/0
 26248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;Total ram usage:        0 bytes
 26254 ;; Hardware stack levels used:    1
 26255 ;; Hardware stack levels required when called:    7
 26256 ;; This function calls:
 26257 ;;		Nothing
 26258 ;; This function is called by:
 26259 ;;		_SYSTEM_Initialize
 26260 ;; This function uses a reentrant model
 26261 ;;
 26262                           
 26263                           	psect	text122
 26264  01996E                     __ptext122:
 26265                           	opt callstack 0
 26266  01996E                     _CLKREF_Initialize:
 26267                           	opt callstack 22
 26268                           
 26269                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 26270                           
 26271                           ; BSR set to: 59
 26272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26273                           ;incstack = 0
 26274  01996E  013C               	movlb	60	; () banked
 26275  019970  6BE6               	clrf	230,b	;volatile
 26276                           
 26277                           ; BSR set to: 60
 26278                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 26279  019972  0E94               	movlw	148
 26280  019974  6FE5               	movwf	229,b	;volatile
 26281                           
 26282                           ; BSR set to: 60
 26283                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26284  019976  0012               	return		;funcret
 26285  019978                     __end_of_CLKREF_Initialize:
 26286                           	opt callstack 0
 26287                           
 26288 ;; *************** function _ADCC_Initialize *****************
 26289 ;; Defined at:
 26290 ;;		line 65 in file "mcc_generated_files/adcc.c"
 26291 ;; Parameters:    Size  Location     Type
 26292 ;;		None
 26293 ;; Auto vars:     Size  Location     Type
 26294 ;;		None
 26295 ;; Return value:  Size  Location     Type
 26296 ;;                  1  [STACK] void 
 26297 ;; Registers used:
 26298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26299 ;; Tracked objects:
 26300 ;;		On entry : 3F/3E
 26301 ;;		On exit  : 0/0
 26302 ;;		Unchanged: 0/0
 26303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26308 ;;Total ram usage:        0 bytes
 26309 ;; Hardware stack levels used:    1
 26310 ;; Hardware stack levels required when called:    8
 26311 ;; This function calls:
 26312 ;;		_ADCC_SetADIInterruptHandler
 26313 ;;		_ADCC_SetADTIInterruptHandler
 26314 ;; This function is called by:
 26315 ;;		_SYSTEM_Initialize
 26316 ;; This function uses a reentrant model
 26317 ;;
 26318                           
 26319                           	psect	text123
 26320  0187B8                     __ptext123:
 26321                           	opt callstack 0
 26322  0187B8                     _ADCC_Initialize:
 26323                           	opt callstack 21
 26324                           
 26325                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 26326                           
 26327                           ; BSR set to: 60
 26328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26329                           ;incstack = 0
 26330  0187B8  013E               	movlb	62	; () banked
 26331  0187BA  6BDE               	clrf	222,b	;volatile
 26332                           
 26333                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 26334  0187BC  6BDF               	clrf	223,b	;volatile
 26335                           
 26336                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 26337  0187BE  6BE0               	clrf	224,b	;volatile
 26338                           
 26339                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 26340  0187C0  6BE1               	clrf	225,b	;volatile
 26341                           
 26342                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 26343  0187C2  6BE4               	clrf	228,b	;volatile
 26344                           
 26345                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 26346  0187C4  6BE5               	clrf	229,b	;volatile
 26347                           
 26348                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 26349  0187C6  6BEA               	clrf	234,b	;volatile
 26350                           
 26351                           ; BSR set to: 62
 26352                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 26353  0187C8  0E40               	movlw	64
 26354  0187CA  6FEC               	movwf	236,b	;volatile
 26355                           
 26356                           ; BSR set to: 62
 26357                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 26358  0187CC  6BF1               	clrf	241,b	;volatile
 26359                           
 26360                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 26361  0187CE  0E20               	movlw	32
 26362  0187D0  6FF3               	movwf	243,b	;volatile
 26363                           
 26364                           ; BSR set to: 62
 26365                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 26366  0187D2  6BF4               	clrf	244,b	;volatile
 26367                           
 26368                           ; BSR set to: 62
 26369                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 26370  0187D4  6BF5               	clrf	245,b	;volatile
 26371                           
 26372                           ; BSR set to: 62
 26373                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 26374  0187D6  6BF6               	clrf	246,b	;volatile
 26375                           
 26376                           ; BSR set to: 62
 26377                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 26378  0187D8  6BF7               	clrf	247,b	;volatile
 26379                           
 26380                           ; BSR set to: 62
 26381                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 26382  0187DA  6BF9               	clrf	249,b	;volatile
 26383                           
 26384                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 26385  0187DC  0E5B               	movlw	91
 26386  0187DE  6FFA               	movwf	250,b	;volatile
 26387                           
 26388                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 26389  0187E0  0E27               	movlw	39
 26390  0187E2  6FFB               	movwf	251,b	;volatile
 26391                           
 26392                           ; BSR set to: 62
 26393                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 26394  0187E4  6BFC               	clrf	252,b	;volatile
 26395                           
 26396                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 26397  0187E6  0E02               	movlw	2
 26398  0187E8  6FFD               	movwf	253,b	;volatile
 26399                           
 26400                           ; BSR set to: 62
 26401                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 26402  0187EA  6BFE               	clrf	254,b	;volatile
 26403                           
 26404                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 26405  0187EC  0E07               	movlw	7
 26406  0187EE  6FFF               	movwf	255,b	;volatile
 26407                           
 26408                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 26409  0187F0  0E84               	movlw	132
 26410  0187F2  6FF8               	movwf	248,b	;volatile
 26411                           
 26412                           ; BSR set to: 62
 26413                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 26414  0187F4  0139               	movlb	57	; () banked
 26415  0187F6  95A1               	bcf	161,2,b	;volatile
 26416                           
 26417                           ; BSR set to: 57
 26418                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 26419  0187F8  8591               	bsf	145,2,b	;volatile
 26420                           
 26421                           ; BSR set to: 57
 26422                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 26423  0187FA  0EE8               	movlw	low _ADCC_DefaultInterruptHandler
 26424  0187FC  6EE6               	movwf	postinc1,c
 26425  0187FE  0E99               	movlw	high _ADCC_DefaultInterruptHandler
 26426  018800  6EE6               	movwf	postinc1,c
 26427  018802  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26428  018804  6EE6               	movwf	postinc1,c
 26429  018806  ECAB  F0CA         	call	_ADCC_SetADIInterruptHandler	;wreg free
 26430                           
 26431                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 26432  01880A  0139               	movlb	57	; () banked
 26433  01880C  97A1               	bcf	161,3,b	;volatile
 26434                           
 26435                           ; BSR set to: 57
 26436                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 26437  01880E  8791               	bsf	145,3,b	;volatile
 26438                           
 26439                           ; BSR set to: 57
 26440                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 26441  018810  0EE8               	movlw	low _ADCC_DefaultInterruptHandler
 26442  018812  6EE6               	movwf	postinc1,c
 26443  018814  0E99               	movlw	high _ADCC_DefaultInterruptHandler
 26444  018816  6EE6               	movwf	postinc1,c
 26445  018818  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26446  01881A  6EE6               	movwf	postinc1,c
 26447  01881C  EC97  F0CA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26448                           
 26449                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26450  018820  0012               	return		;funcret
 26451  018822                     __end_of_ADCC_Initialize:
 26452                           	opt callstack 0
 26453                           
 26454 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26455 ;; Defined at:
 26456 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26457 ;; Parameters:    Size  Location     Type
 26458 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26459 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26460 ;; Auto vars:     Size  Location     Type
 26461 ;;		None
 26462 ;; Return value:  Size  Location     Type
 26463 ;;                  1  [STACK] void 
 26464 ;; Registers used:
 26465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26466 ;; Tracked objects:
 26467 ;;		On entry : 0/0
 26468 ;;		On exit  : 0/0
 26469 ;;		Unchanged: 0/0
 26470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26475 ;;Total ram usage:        0 bytes
 26476 ;; Hardware stack levels used:    1
 26477 ;; Hardware stack levels required when called:    7
 26478 ;; This function calls:
 26479 ;;		Nothing
 26480 ;; This function is called by:
 26481 ;;		_ADCC_Initialize
 26482 ;;		_start_adc_scan
 26483 ;; This function uses a reentrant model
 26484 ;;
 26485                           
 26486                           	psect	text124
 26487  01952E                     __ptext124:
 26488                           	opt callstack 0
 26489  01952E                     _ADCC_SetADTIInterruptHandler:
 26490                           	opt callstack 22
 26491                           
 26492                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26493                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26494                           
 26495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26496                           ;incstack = 0
 26497  01952E  50E1               	movf	fsr1l,w,c
 26498  019530  0FFD               	addlw	-3
 26499  019532  6ED9               	movwf	fsr2l,c
 26500  019534  50E2               	movf	fsr1h,w,c
 26501  019536  6EDA               	movwf	fsr2h,c
 26502  019538  0EFF               	movlw	255
 26503  01953A  22DA               	addwfc	fsr2h,f,c
 26504  01953C  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26505  019542  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26506  019548  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26507                           
 26508                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26509  01954E  52E5               	movf	postdec1,f,c
 26510  019550  52E5               	movf	postdec1,f,c
 26511  019552  52E5               	movf	postdec1,f,c
 26512  019554  0012               	return		;funcret
 26513  019556                     __end_of_ADCC_SetADTIInterruptHandler:
 26514                           	opt callstack 0
 26515                           
 26516 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26517 ;; Defined at:
 26518 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26519 ;; Parameters:    Size  Location     Type
 26520 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26521 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26522 ;; Auto vars:     Size  Location     Type
 26523 ;;		None
 26524 ;; Return value:  Size  Location     Type
 26525 ;;                  1  [STACK] void 
 26526 ;; Registers used:
 26527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26528 ;; Tracked objects:
 26529 ;;		On entry : 6/0
 26530 ;;		On exit  : 0/0
 26531 ;;		Unchanged: 0/0
 26532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26537 ;;Total ram usage:        0 bytes
 26538 ;; Hardware stack levels used:    1
 26539 ;; Hardware stack levels required when called:    7
 26540 ;; This function calls:
 26541 ;;		Nothing
 26542 ;; This function is called by:
 26543 ;;		_ADCC_Initialize
 26544 ;;		_start_adc_scan
 26545 ;; This function uses a reentrant model
 26546 ;;
 26547                           
 26548                           	psect	text125
 26549  019556                     __ptext125:
 26550                           	opt callstack 0
 26551  019556                     _ADCC_SetADIInterruptHandler:
 26552                           	opt callstack 22
 26553                           
 26554                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26555                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26556                           
 26557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26558                           ;incstack = 0
 26559  019556  50E1               	movf	fsr1l,w,c
 26560  019558  0FFD               	addlw	-3
 26561  01955A  6ED9               	movwf	fsr2l,c
 26562  01955C  50E2               	movf	fsr1h,w,c
 26563  01955E  6EDA               	movwf	fsr2h,c
 26564  019560  0EFF               	movlw	255
 26565  019562  22DA               	addwfc	fsr2h,f,c
 26566  019564  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26567  01956A  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26568  019570  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26569                           
 26570                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26571  019576  52E5               	movf	postdec1,f,c
 26572  019578  52E5               	movf	postdec1,f,c
 26573  01957A  52E5               	movf	postdec1,f,c
 26574  01957C  0012               	return		;funcret
 26575  01957E                     __end_of_ADCC_SetADIInterruptHandler:
 26576                           	opt callstack 0
 26577                           
 26578 ;; *************** function _INT1_ISR *****************
 26579 ;; Defined at:
 26580 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26581 ;; Parameters:    Size  Location     Type
 26582 ;;		None
 26583 ;; Auto vars:     Size  Location     Type
 26584 ;;		None
 26585 ;; Return value:  Size  Location     Type
 26586 ;;                  1    wreg      void 
 26587 ;; Registers used:
 26588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26589 ;; Tracked objects:
 26590 ;;		On entry : 0/0
 26591 ;;		On exit  : 0/0
 26592 ;;		Unchanged: 0/0
 26593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26596 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;Total ram usage:        4 bytes
 26599 ;; Hardware stack levels used:    1
 26600 ;; Hardware stack levels required when called:    5
 26601 ;; This function calls:
 26602 ;;		_INT1_CallBack
 26603 ;; This function is called by:
 26604 ;;		Interrupt level 1
 26605 ;; This function uses a non-reentrant model
 26606 ;;
 26607                           
 26608                           	psect	text126
 26609  019010                     __ptext126:
 26610                           	opt callstack 0
 26611  019010                     _INT1_ISR:
 26612                           	opt callstack 12
 26613                           
 26614                           ;incstack = 0
 26615  019010  006F FF60  F046    	movff	status,??_INT1_ISR
 26616  019016  0060  F004  F047   	movff	btemp,??_INT1_ISR+1
 26617  01901C  0060  F02C  F048   	movff	btemp+10,??_INT1_ISR+2
 26618  019022  0060  F030  F049   	movff	btemp+11,??_INT1_ISR+3
 26619  019028  EE16  F00B         	lfsr	1,___intlo_sp
 26620                           
 26621                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26622  01902C  0139               	movlb	57	; () banked
 26623  01902E  91A5               	bcf	165,0,b	;volatile
 26624                           
 26625                           ; BSR set to: 57
 26626                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26627  019030  EC48  F0CB         	call	_INT1_CallBack	;wreg free
 26628  019034  0060  F124  F00C   	movff	??_INT1_ISR+3,btemp+11
 26629  01903A  0060  F120  F00B   	movff	??_INT1_ISR+2,btemp+10
 26630  019040  0060  F11C  F001   	movff	??_INT1_ISR+1,btemp
 26631  019046  0060  F11B  FFD8   	movff	??_INT1_ISR,status
 26632  01904C  0011               	retfie		f
 26633  01904E                     __end_of_INT1_ISR:
 26634                           	opt callstack 0
 26635                           
 26636 ;; *************** function _INT1_CallBack *****************
 26637 ;; Defined at:
 26638 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26639 ;; Parameters:    Size  Location     Type
 26640 ;;		None
 26641 ;; Auto vars:     Size  Location     Type
 26642 ;;		None
 26643 ;; Return value:  Size  Location     Type
 26644 ;;                  1  [STACK] void 
 26645 ;; Registers used:
 26646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26647 ;; Tracked objects:
 26648 ;;		On entry : 3F/39
 26649 ;;		On exit  : 0/0
 26650 ;;		Unchanged: 0/0
 26651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26656 ;;Total ram usage:        0 bytes
 26657 ;; Hardware stack levels used:    1
 26658 ;; Hardware stack levels required when called:    4
 26659 ;; This function calls:
 26660 ;;		Absolute function
 26661 ;;		_INT1_DefaultInterruptHandler
 26662 ;;		_switch_handler
 26663 ;; This function is called by:
 26664 ;;		_INT1_ISR
 26665 ;; This function uses a reentrant model
 26666 ;;
 26667                           
 26668                           	psect	text127
 26669  019690                     __ptext127:
 26670                           	opt callstack 0
 26671  019690                     _INT1_CallBack:
 26672                           	opt callstack 12
 26673                           
 26674                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26675                           
 26676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26677                           ;incstack = 0
 26678  019690  0100               	movlb	0	; () banked
 26679  019692  51C4               	movf	_INT1_InterruptHandler& (0+255),w,b
 26680  019694  11C5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 26681  019696  11C6               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 26682  019698  B4D8               	btfsc	status,2,c
 26683  01969A  0012               	return	
 26684                           
 26685                           ; BSR set to: 0
 26686                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26687  01969C  D801               	call	u875_28
 26688  01969E  0012               	return	
 26689  0196A0                     u875_28:
 26690  0196A0  0005               	push	
 26691  0196A2  6EFA               	movwf	pclath,c
 26692  0196A4  51C4               	movf	_INT1_InterruptHandler& (0+255),w,b
 26693  0196A6  6EFD               	movwf	tosl,c
 26694  0196A8  51C5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 26695  0196AA  6EFE               	movwf	tosh,c
 26696  0196AC  51C6               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 26697  0196AE  6EFF               	movwf	tosu,c
 26698  0196B0  50FA               	movf	pclath,w,c
 26699  0196B2  0012               	return		;indir
 26700  0196B4                     __end_of_INT1_CallBack:
 26701                           	opt callstack 0
 26702                           
 26703 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26704 ;; Defined at:
 26705 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26706 ;; Parameters:    Size  Location     Type
 26707 ;;		None
 26708 ;; Auto vars:     Size  Location     Type
 26709 ;;		None
 26710 ;; Return value:  Size  Location     Type
 26711 ;;                  1  [STACK] void 
 26712 ;; Registers used:
 26713 ;;		None
 26714 ;; Tracked objects:
 26715 ;;		On entry : 3F/0
 26716 ;;		On exit  : 0/0
 26717 ;;		Unchanged: 0/0
 26718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26723 ;;Total ram usage:        0 bytes
 26724 ;; Hardware stack levels used:    1
 26725 ;; Hardware stack levels required when called:    3
 26726 ;; This function calls:
 26727 ;;		Nothing
 26728 ;; This function is called by:
 26729 ;;		_EXT_INT_Initialize
 26730 ;;		_INT1_CallBack
 26731 ;; This function uses a reentrant model
 26732 ;;
 26733                           
 26734                           	psect	text128
 26735  0199E2                     __ptext128:
 26736                           	opt callstack 0
 26737  0199E2                     _INT1_DefaultInterruptHandler:
 26738                           	opt callstack 12
 26739                           
 26740                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26741                           
 26742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26743                           ;incstack = 0
 26744  0199E2  0012               	return		;funcret
 26745  0199E4                     __end_of_INT1_DefaultInterruptHandler:
 26746                           	opt callstack 0
 26747                           
 26748 ;; *************** function _switch_handler *****************
 26749 ;; Defined at:
 26750 ;;		line 58 in file "dio.c"
 26751 ;; Parameters:    Size  Location     Type
 26752 ;;		None
 26753 ;; Auto vars:     Size  Location     Type
 26754 ;;  i               1  [STACK] unsigned char 
 26755 ;;  sw_value        1  [STACK] unsigned char 
 26756 ;; Return value:  Size  Location     Type
 26757 ;;                  1  [STACK] void 
 26758 ;; Registers used:
 26759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26760 ;; Tracked objects:
 26761 ;;		On entry : 3F/0
 26762 ;;		On exit  : 0/0
 26763 ;;		Unchanged: 0/0
 26764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26769 ;;Total ram usage:        0 bytes
 26770 ;; Hardware stack levels used:    1
 26771 ;; Hardware stack levels required when called:    3
 26772 ;; This function calls:
 26773 ;;		Nothing
 26774 ;; This function is called by:
 26775 ;;		_start_switch_handler
 26776 ;;		_INT1_CallBack
 26777 ;; This function uses a reentrant model
 26778 ;;
 26779                           
 26780                           	psect	text129
 26781  017162                     __ptext129:
 26782                           	opt callstack 0
 26783  017162                     _switch_handler:
 26784                           	opt callstack 0
 26785                           
 26786                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26787  017162  52E6               	movf	postinc1,f,c
 26788  017164  52E6               	movf	postinc1,f,c
 26789                           
 26790                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26791                           ;stkvar	_i @ sp[(-2)+0]
 26792                           
 26793                           ;incstack = 0
 26794  017166  0EFE               	movlw	-2
 26795  017168  6AE3               	clrf	plusw1,c
 26796  01716A  9EBD               	bcf	189,7,c	;volatile
 26797                           
 26798                           ;dio.c: 72:  __nop();
 26799  01716C  F000               	nop	
 26800                           
 26801                           ;dio.c: 73:  __nop();
 26802  01716E  F000               	nop	
 26803                           
 26804                           ;dio.c: 74:  __nop();
 26805  017170  F000               	nop	
 26806  017172  D019               	goto	l9482
 26807  017174                     l9470:
 26808                           
 26809                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26810  017174  A6CF               	btfss	207,3,c	;volatile
 26811  017176  D011               	goto	u855_20
 26812  017178  D00D               	goto	u855_21
 26813  01717A                     u852_28:
 26814                           
 26815                           ;stkvar	_sw_value @ sp[(-2)+1]
 26816  01717A  0EFF               	movlw	-1
 26817  01717C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26818                           
 26819                           ;dio.c: 80:    break;
 26820  017182  D027               	goto	l9484
 26821  017184                     l9472:
 26822                           
 26823                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26824  017184  A4CF               	btfss	207,2,c	;volatile
 26825  017186  D009               	goto	u855_20
 26826  017188  D005               	goto	u855_21
 26827  01718A                     l9474:
 26828                           
 26829                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26830  01718A  A2CF               	btfss	207,1,c	;volatile
 26831  01718C  D006               	goto	u855_20
 26832  01718E  D002               	goto	u855_21
 26833  017190                     l9476:
 26834                           
 26835                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26836  017190  A0CF               	btfss	207,0,c	;volatile
 26837  017192  D003               	goto	u855_20
 26838  017194                     u855_21:
 26839  017194  6A0C               	clrf	(btemp+11)^0,c
 26840  017196  2A0C               	incf	(btemp+11)^0,f,c
 26841  017198  D7F0               	goto	u852_28
 26842  01719A                     u855_20:
 26843  01719A  6A0C               	clrf	(btemp+11)^0,c
 26844  01719C  D7EE               	goto	u852_28
 26845  01719E                     l9478:
 26846                           
 26847                           ;dio.c: 91:    sw_value = 1;
 26848                           ;stkvar	_sw_value @ sp[(-2)+1]
 26849  01719E  0EFF               	movlw	-1
 26850  0171A0  6AE3               	clrf	plusw1,c
 26851  0171A2  2AE3               	incf	plusw1,f,c
 26852                           
 26853                           ;dio.c: 92:    break;
 26854  0171A4  D016               	goto	l9484
 26855  0171A6                     l9482:
 26856                           
 26857                           ;stkvar	_i @ sp[(-2)+0]
 26858  0171A6  0EFE               	movlw	-2
 26859  0171A8  50E3               	movf	plusw1,w,c
 26860  0171AA  6E0B               	movwf	(btemp+10)^0,c
 26861  0171AC  6A0C               	clrf	(btemp+11)^0,c
 26862                           
 26863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26864                           ; Switch size 1, requested type "simple"
 26865                           ; Number of cases is 1, Range of values is 0 to 0
 26866                           ; switch strategies available:
 26867                           ; Name         Instructions Cycles
 26868                           ; simple_byte            4     3 (average)
 26869                           ;	Chosen strategy is simple_byte
 26870  0171AE  500C               	movf	(btemp+11)^0,w,c
 26871  0171B0  0A00               	xorlw	0	; case 0
 26872  0171B2  A4D8               	btfss	status,2,c
 26873  0171B4  D7F4               	goto	l9478
 26874                           
 26875                           ; Switch size 1, requested type "simple"
 26876                           ; Number of cases is 4, Range of values is 0 to 3
 26877                           ; switch strategies available:
 26878                           ; Name         Instructions Cycles
 26879                           ; simple_byte           13     7 (average)
 26880                           ;	Chosen strategy is simple_byte
 26881  0171B6  500B               	movf	(btemp+10)^0,w,c
 26882  0171B8  0A00               	xorlw	0	; case 0
 26883  0171BA  B4D8               	btfsc	status,2,c
 26884  0171BC  D7E9               	goto	l9476
 26885  0171BE  0A01               	xorlw	1	; case 1
 26886  0171C0  B4D8               	btfsc	status,2,c
 26887  0171C2  D7E3               	goto	l9474
 26888  0171C4  0A03               	xorlw	3	; case 2
 26889  0171C6  B4D8               	btfsc	status,2,c
 26890  0171C8  D7DD               	goto	l9472
 26891  0171CA  0A01               	xorlw	1	; case 3
 26892  0171CC  B4D8               	btfsc	status,2,c
 26893  0171CE  D7D2               	goto	l9470
 26894  0171D0  D7E6               	goto	l9478
 26895  0171D2                     l9484:
 26896                           
 26897                           ;dio.c: 96:   if (sw_value) {
 26898                           ;stkvar	_sw_value @ sp[(-2)+1]
 26899  0171D2  0EFF               	movlw	-1
 26900  0171D4  50E3               	movf	plusw1,w,c
 26901  0171D6  B4D8               	btfsc	status,2,c
 26902  0171D8  D014               	goto	l9490
 26903                           
 26904                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26905                           ;stkvar	_i @ sp[(-2)+0]
 26906  0171DA  0EFE               	movlw	-2
 26907  0171DC  50E3               	movf	plusw1,w,c
 26908  0171DE  0D05               	mullw	5
 26909  0171E0  50F3               	movf	243,w,c
 26910  0171E2  0F60               	addlw	low _S
 26911  0171E4  6ED9               	movwf	fsr2l,c
 26912  0171E6  6ADA               	clrf	fsr2h,c
 26913  0171E8  04DE               	decf	postinc2,w,c
 26914  0171EA  A4D8               	btfss	status,2,c
 26915  0171EC  D041               	goto	l9498
 26916                           
 26917                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26918                           ;stkvar	_i @ sp[(-2)+0]
 26919  0171EE  0EFE               	movlw	-2
 26920  0171F0  50E3               	movf	plusw1,w,c
 26921  0171F2  0D05               	mullw	5
 26922  0171F4  50F3               	movf	243,w,c
 26923  0171F6  0F60               	addlw	low _S
 26924  0171F8  6ED9               	movwf	fsr2l,c
 26925  0171FA  6ADA               	clrf	fsr2h,c
 26926  0171FC  0E00               	movlw	0
 26927  0171FE  6EDF               	movwf	indf2,c
 26928  017200  D037               	goto	l9498
 26929  017202                     l9490:
 26930                           
 26931                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26932                           ;stkvar	_i @ sp[(-2)+0]
 26933  017202  0EFE               	movlw	-2
 26934  017204  50E3               	movf	plusw1,w,c
 26935  017206  0D05               	mullw	5
 26936  017208  50F3               	movf	243,w,c
 26937  01720A  0F60               	addlw	low _S
 26938  01720C  6ED9               	movwf	fsr2l,c
 26939  01720E  6ADA               	clrf	fsr2h,c
 26940  017210  50DF               	movf	indf2,w,c
 26941  017212  A4D8               	btfss	status,2,c
 26942  017214  D02D               	goto	l9498
 26943                           
 26944                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26945                           ;stkvar	_i @ sp[(-2)+0]
 26946  017216  0EFE               	movlw	-2
 26947  017218  50E3               	movf	plusw1,w,c
 26948  01721A  0D05               	mullw	5
 26949  01721C  50F3               	movf	243,w,c
 26950  01721E  0F60               	addlw	low _S
 26951  017220  6ED9               	movwf	fsr2l,c
 26952  017222  6ADA               	clrf	fsr2h,c
 26953  017224  0E01               	movlw	1
 26954  017226  6EDF               	movwf	indf2,c
 26955                           
 26956                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26957  017228  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26958                           
 26959                           ;stkvar	_i @ sp[(-2)+0]
 26960  01722C  0EFE               	movlw	-2
 26961  01722E  50E3               	movf	plusw1,w,c
 26962  017230  0D05               	mullw	5
 26963  017232  50F3               	movf	243,w,c
 26964  017234  0F61               	addlw	low (_S+1)
 26965  017236  6EE9               	movwf	fsr0l,c
 26966  017238  6AEA               	clrf	fsr0h,c
 26967  01723A  006F FF7B FFEE     	movff	postinc2,postinc0
 26968  017240  006F FF7B FFEE     	movff	postinc2,postinc0
 26969  017246  006F FF7B FFEE     	movff	postinc2,postinc0
 26970  01724C  006F FF7B FFEE     	movff	postinc2,postinc0
 26971                           
 26972                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26973                           ;stkvar	_i @ sp[(-2)+0]
 26974  017252  0EFE               	movlw	-2
 26975  017254  006F FF8C  F00C    	movff	plusw1,btemp+11
 26976  01725A  0E01               	movlw	1
 26977  01725C  6E0B               	movwf	(btemp+10)^0,c
 26978  01725E  2A0C               	incf	(btemp+11)^0,f,c
 26979  017260  D002               	goto	u859_24
 26980  017262                     u859_25:
 26981  017262  90D8               	bcf	status,0,c
 26982  017264  360B               	rlcf	(btemp+10)^0,f,c
 26983  017266                     u859_24:
 26984  017266  2E0C               	decfsz	(btemp+11)^0,f,c
 26985  017268  D7FC               	goto	u859_25
 26986  01726A  500B               	movf	(btemp+10)^0,w,c
 26987  01726C  0100               	movlb	0	; () banked
 26988  01726E  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26989  017270                     l9498:
 26990                           
 26991                           ;dio.c: 107:  } while (++i < 4);
 26992                           ;stkvar	_i @ sp[(-2)+0]
 26993  017270  0EFE               	movlw	-2
 26994  017272  2AE3               	incf	plusw1,f,c
 26995  017274  0EFE               	movlw	-2
 26996  017276  006F FF8C  F001    	movff	plusw1,btemp
 26997  01727C  0E03               	movlw	3
 26998  01727E  6401               	cpfsgt	btemp^0,c
 26999  017280  D792               	goto	l9482
 27000                           
 27001                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 27002  017282  8EBD               	bsf	189,7,c	;volatile
 27003                           
 27004                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27005  017284  52E5               	movf	postdec1,f,c
 27006  017286  52E5               	movf	postdec1,f,c
 27007  017288  0012               	return		;funcret
 27008  01728A                     __end_of_switch_handler:
 27009                           	opt callstack 0
 27010                           
 27011 ;; *************** function _TMR5_ISR *****************
 27012 ;; Defined at:
 27013 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 27014 ;; Parameters:    Size  Location     Type
 27015 ;;		None
 27016 ;; Auto vars:     Size  Location     Type
 27017 ;;		None
 27018 ;; Return value:  Size  Location     Type
 27019 ;;                  1    wreg      void 
 27020 ;; Registers used:
 27021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 27022 ;; Tracked objects:
 27023 ;;		On entry : 0/0
 27024 ;;		On exit  : 0/0
 27025 ;;		Unchanged: 0/0
 27026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27031 ;;Total ram usage:        4 bytes
 27032 ;; Hardware stack levels used:    1
 27033 ;; Hardware stack levels required when called:    5
 27034 ;; This function calls:
 27035 ;;		_TMR5_CallBack
 27036 ;;		_TMR5_WriteTimer
 27037 ;; This function is called by:
 27038 ;;		Interrupt level 1
 27039 ;; This function uses a non-reentrant model
 27040 ;;
 27041                           
 27042                           	psect	text130
 27043  018B94                     __ptext130:
 27044                           	opt callstack 0
 27045  018B94                     _TMR5_ISR:
 27046                           	opt callstack 12
 27047                           
 27048                           ;incstack = 0
 27049  018B94  006F FF60  F04C    	movff	status,??_TMR5_ISR+2
 27050  018B9A  0060  F030  F04D   	movff	btemp+11,??_TMR5_ISR+3
 27051  018BA0  EE16  F00B         	lfsr	1,___intlo_sp
 27052                           
 27053                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 27054  018BA4  0139               	movlb	57	; () banked
 27055  018BA6  9DA8               	bcf	168,6,b	;volatile
 27056                           
 27057                           ; BSR set to: 57
 27058                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 27059  018BA8  0060  F0C3  FFE6   	movff	_timer5ReloadVal,postinc1
 27060  018BAE  0060  F0C7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 27061  018BB4  ECC8  F0C7         	call	_TMR5_WriteTimer	;wreg free
 27062                           
 27063                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 27064  018BB8  0102               	movlb	2	; () banked
 27065  018BBA  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 27066  018BBC  6E4A               	movwf	??_TMR5_ISR^0,c
 27067  018BBE  6A4B               	clrf	(??_TMR5_ISR+1)^0,c
 27068  018BC0  0E05               	movlw	5
 27069  018BC2  264A               	addwf	??_TMR5_ISR^0,f,c
 27070  018BC4  0E00               	movlw	0
 27071  018BC6  224B               	addwfc	(??_TMR5_ISR+1)^0,f,c
 27072  018BC8  4A2E               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 27073  018BCA  2A2F               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 27074  018BCC  504A               	movf	??_TMR5_ISR^0,w,c
 27075  018BCE  5C2E               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 27076  018BD0  504B               	movf	(??_TMR5_ISR+1)^0,w,c
 27077  018BD2  582F               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 27078  018BD4  A0D8               	btfss	status,0,c
 27079  018BD6  D004               	goto	i1l1047
 27080                           
 27081                           ; BSR set to: 2
 27082                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 27083  018BD8  EC5A  F0CB         	call	_TMR5_CallBack	;wreg free
 27084                           
 27085                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 27086  018BDC  6A2E               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 27087  018BDE  6A2F               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 27088  018BE0                     i1l1047:
 27089  018BE0  0060  F134  F00C   	movff	??_TMR5_ISR+3,btemp+11
 27090  018BE6  0060  F133  FFD8   	movff	??_TMR5_ISR+2,status
 27091  018BEC  0011               	retfie		f
 27092  018BEE                     __end_of_TMR5_ISR:
 27093                           	opt callstack 0
 27094                           
 27095 ;; *************** function _TMR5_WriteTimer *****************
 27096 ;; Defined at:
 27097 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 27098 ;; Parameters:    Size  Location     Type
 27099 ;;  timerVal        2  [STACK] unsigned short 
 27100 ;; Auto vars:     Size  Location     Type
 27101 ;;		None
 27102 ;; Return value:  Size  Location     Type
 27103 ;;                  1  [STACK] void 
 27104 ;; Registers used:
 27105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27106 ;; Tracked objects:
 27107 ;;		On entry : 3F/39
 27108 ;;		On exit  : 0/0
 27109 ;;		Unchanged: 0/0
 27110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27115 ;;Total ram usage:        0 bytes
 27116 ;; Hardware stack levels used:    1
 27117 ;; Hardware stack levels required when called:    3
 27118 ;; This function calls:
 27119 ;;		Nothing
 27120 ;; This function is called by:
 27121 ;;		_TMR5_ISR
 27122 ;; This function uses a reentrant model
 27123 ;;
 27124                           
 27125                           	psect	text131
 27126  018F90                     __ptext131:
 27127                           	opt callstack 0
 27128  018F90                     _TMR5_WriteTimer:
 27129                           	opt callstack 13
 27130                           
 27131                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 27132                           
 27133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27134                           ;incstack = 0
 27135  018F90  A49A               	btfss	154,2,c	;volatile
 27136  018F92  D00F               	goto	l9664
 27137                           
 27138                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 27139  018F94  909A               	bcf	154,0,c	;volatile
 27140                           
 27141                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 27142                           ;stkvar	_timerVal @ sp[(0)+-2]
 27143  018F96  0EFF               	movlw	255
 27144  018F98  24E1               	addwf	fsr1l,w,c
 27145  018F9A  6ED9               	movwf	fsr2l,c
 27146  018F9C  0EFF               	movlw	255
 27147  018F9E  20E2               	addwfc	fsr1h,w,c
 27148  018FA0  6EDA               	movwf	fsr2h,c
 27149  018FA2  50DF               	movf	indf2,w,c
 27150  018FA4  6E99               	movwf	153,c	;volatile
 27151                           
 27152                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 27153                           ;stkvar	_timerVal @ sp[(0)+-2]
 27154  018FA6  0EFE               	movlw	-2
 27155  018FA8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27156                           
 27157                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 27158  018FAE  809A               	bsf	154,0,c	;volatile
 27159                           
 27160                           ;mcc_generated_files/tmr5.c: 142:  } else {
 27161  018FB0  D00C               	goto	l1030
 27162  018FB2                     l9664:
 27163                           
 27164                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 27165                           ;stkvar	_timerVal @ sp[(0)+-2]
 27166  018FB2  0EFF               	movlw	255
 27167  018FB4  24E1               	addwf	fsr1l,w,c
 27168  018FB6  6ED9               	movwf	fsr2l,c
 27169  018FB8  0EFF               	movlw	255
 27170  018FBA  20E2               	addwfc	fsr1h,w,c
 27171  018FBC  6EDA               	movwf	fsr2h,c
 27172  018FBE  50DF               	movf	indf2,w,c
 27173  018FC0  6E99               	movwf	153,c	;volatile
 27174                           
 27175                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 27176                           ;stkvar	_timerVal @ sp[(0)+-2]
 27177  018FC2  0EFE               	movlw	-2
 27178  018FC4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27179  018FCA                     l1030:
 27180                           
 27181                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27182  018FCA  52E5               	movf	postdec1,f,c
 27183  018FCC  52E5               	movf	postdec1,f,c
 27184  018FCE  0012               	return		;funcret
 27185  018FD0                     __end_of_TMR5_WriteTimer:
 27186                           	opt callstack 0
 27187                           
 27188 ;; *************** function _TMR5_CallBack *****************
 27189 ;; Defined at:
 27190 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27191 ;; Parameters:    Size  Location     Type
 27192 ;;		None
 27193 ;; Auto vars:     Size  Location     Type
 27194 ;;		None
 27195 ;; Return value:  Size  Location     Type
 27196 ;;                  1  [STACK] void 
 27197 ;; Registers used:
 27198 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 27199 ;; Tracked objects:
 27200 ;;		On entry : 3F/2
 27201 ;;		On exit  : 0/0
 27202 ;;		Unchanged: 0/0
 27203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27208 ;;Total ram usage:        0 bytes
 27209 ;; Hardware stack levels used:    1
 27210 ;; Hardware stack levels required when called:    4
 27211 ;; This function calls:
 27212 ;;		Absolute function
 27213 ;;		_TMR5_DefaultInterruptHandler
 27214 ;; This function is called by:
 27215 ;;		_TMR5_ISR
 27216 ;; This function uses a reentrant model
 27217 ;;
 27218                           
 27219                           	psect	text132
 27220  0196B4                     __ptext132:
 27221                           	opt callstack 0
 27222  0196B4                     _TMR5_CallBack:
 27223                           	opt callstack 12
 27224                           
 27225                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 27226                           
 27227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27228                           ;incstack = 0
 27229  0196B4  0100               	movlb	0	; () banked
 27230  0196B6  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27231  0196B8  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27232  0196BA  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 27233  0196BC  B4D8               	btfsc	status,2,c
 27234  0196BE  0012               	return	
 27235                           
 27236                           ; BSR set to: 0
 27237                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 27238  0196C0  D801               	call	u886_28
 27239  0196C2  0012               	return	
 27240  0196C4                     u886_28:
 27241  0196C4  0005               	push	
 27242  0196C6  6EFA               	movwf	pclath,c
 27243  0196C8  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27244  0196CA  6EFD               	movwf	tosl,c
 27245  0196CC  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27246  0196CE  6EFE               	movwf	tosh,c
 27247  0196D0  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 27248  0196D2  6EFF               	movwf	tosu,c
 27249  0196D4  50FA               	movf	pclath,w,c
 27250  0196D6  0012               	return		;indir
 27251  0196D8                     __end_of_TMR5_CallBack:
 27252                           	opt callstack 0
 27253                           
 27254 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 27255 ;; Defined at:
 27256 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 27257 ;; Parameters:    Size  Location     Type
 27258 ;;		None
 27259 ;; Auto vars:     Size  Location     Type
 27260 ;;		None
 27261 ;; Return value:  Size  Location     Type
 27262 ;;                  1  [STACK] void 
 27263 ;; Registers used:
 27264 ;;		wreg, status,2, status,0, btemp+11
 27265 ;; Tracked objects:
 27266 ;;		On entry : 3F/0
 27267 ;;		On exit  : 3F/2
 27268 ;;		Unchanged: 0/0
 27269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27274 ;;Total ram usage:        0 bytes
 27275 ;; Hardware stack levels used:    1
 27276 ;; Hardware stack levels required when called:    3
 27277 ;; This function calls:
 27278 ;;		Nothing
 27279 ;; This function is called by:
 27280 ;;		_TMR5_Initialize
 27281 ;;		_TMR5_CallBack
 27282 ;; This function uses a reentrant model
 27283 ;;
 27284                           
 27285                           	psect	text133
 27286  01957E                     __ptext133:
 27287                           	opt callstack 0
 27288  01957E                     _TMR5_DefaultInterruptHandler:
 27289                           	opt callstack 12
 27290                           
 27291                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 27292                           
 27293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27294                           ;incstack = 0
 27295  01957E  A0BE               	btfss	190,0,c	;volatile
 27296  019580  D002               	goto	u829_20
 27297  019582  0E01               	movlw	1
 27298  019584  D001               	goto	u829_26
 27299  019586                     u829_20:
 27300  019586  0E00               	movlw	0
 27301  019588                     u829_26:
 27302  019588  0AFF               	xorlw	255
 27303  01958A  6E0C               	movwf	(btemp+11)^0,c
 27304  01958C  50BE               	movf	190,w,c	;volatile
 27305  01958E  180C               	xorwf	(btemp+11)^0,w,c
 27306  019590  0BFE               	andlw	-2
 27307  019592  180C               	xorwf	(btemp+11)^0,w,c
 27308  019594  6EBE               	movwf	190,c	;volatile
 27309                           
 27310                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 27311  019596  0E01               	movlw	1
 27312  019598  0102               	movlb	2	; () banked
 27313  01959A  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 27314  01959C  0E00               	movlw	0
 27315  01959E  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 27316  0195A0  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 27317  0195A2  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 27318                           
 27319                           ; BSR set to: 2
 27320                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27321  0195A4  0012               	return		;funcret
 27322  0195A6                     __end_of_TMR5_DefaultInterruptHandler:
 27323                           	opt callstack 0
 27324                           
 27325 ;; *************** function _TMR3_ISR *****************
 27326 ;; Defined at:
 27327 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 27328 ;; Parameters:    Size  Location     Type
 27329 ;;		None
 27330 ;; Auto vars:     Size  Location     Type
 27331 ;;		None
 27332 ;; Return value:  Size  Location     Type
 27333 ;;                  1    wreg      void 
 27334 ;; Registers used:
 27335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 27336 ;; Tracked objects:
 27337 ;;		On entry : 0/0
 27338 ;;		On exit  : 0/0
 27339 ;;		Unchanged: 0/0
 27340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27343 ;;      Temps:          0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27344 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27345 ;;Total ram usage:       17 bytes
 27346 ;; Hardware stack levels used:    1
 27347 ;; Hardware stack levels required when called:    6
 27348 ;; This function calls:
 27349 ;;		_TMR3_CallBack
 27350 ;;		_TMR3_WriteTimer
 27351 ;; This function is called by:
 27352 ;;		Interrupt level 1
 27353 ;; This function uses a non-reentrant model
 27354 ;;
 27355                           
 27356                           	psect	text134
 27357  0178F8                     __ptext134:
 27358                           	opt callstack 0
 27359  0178F8                     _TMR3_ISR:
 27360                           	opt callstack 11
 27361                           
 27362                           ; BSR set to: 2
 27363                           ;incstack = 0
 27364  0178F8  006F FF60  F2CC    	movff	status,??_TMR3_ISR
 27365  0178FE  006F FFD8  F2CD    	movff	tblptrl,??_TMR3_ISR+1
 27366  017904  006F FFDC  F2CE    	movff	tblptrh,??_TMR3_ISR+2
 27367  01790A  006F FFE0  F2CF    	movff	tblptru,??_TMR3_ISR+3
 27368  017910  006F FFD4  F2D0    	movff	tablat,??_TMR3_ISR+4
 27369  017916  0060  F004  F2D1   	movff	btemp,??_TMR3_ISR+5
 27370  01791C  0060  F008  F2D2   	movff	btemp+1,??_TMR3_ISR+6
 27371  017922  0060  F00C  F2D3   	movff	btemp+2,??_TMR3_ISR+7
 27372  017928  0060  F010  F2D4   	movff	btemp+3,??_TMR3_ISR+8
 27373  01792E  0060  F014  F2D5   	movff	btemp+4,??_TMR3_ISR+9
 27374  017934  0060  F018  F2D6   	movff	btemp+5,??_TMR3_ISR+10
 27375  01793A  0060  F01C  F2D7   	movff	btemp+6,??_TMR3_ISR+11
 27376  017940  0060  F020  F2D8   	movff	btemp+7,??_TMR3_ISR+12
 27377  017946  0060  F024  F2D9   	movff	btemp+8,??_TMR3_ISR+13
 27378  01794C  0060  F028  F2DA   	movff	btemp+9,??_TMR3_ISR+14
 27379  017952  0060  F02C  F2DB   	movff	btemp+10,??_TMR3_ISR+15
 27380  017958  0060  F030  F2DC   	movff	btemp+11,??_TMR3_ISR+16
 27381  01795E  EE16  F00B         	lfsr	1,___intlo_sp
 27382                           
 27383                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 27384  017962  0139               	movlb	57	; () banked
 27385  017964  9DA6               	bcf	166,6,b	;volatile
 27386                           
 27387                           ; BSR set to: 57
 27388                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 27389  017966  0060  F0B3  FFE6   	movff	_timer3ReloadVal,postinc1
 27390  01796C  0060  F0B7  FFE6   	movff	_timer3ReloadVal+1,postinc1
 27391  017972  ECE8  F0C7         	call	_TMR3_WriteTimer	;wreg free
 27392                           
 27393                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 27394  017976  4A2A               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 27395  017978  2A2B               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 27396  01797A  502B               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 27397  01797C  E104               	bnz	i1u1087_20
 27398  01797E  0E28               	movlw	40
 27399  017980  5C2A               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 27400  017982  A0D8               	btfss	status,0,c
 27401  017984  D004               	goto	i1l1235
 27402  017986                     i1u1087_20:
 27403                           
 27404                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 27405  017986  EC6C  F0CB         	call	_TMR3_CallBack	;wreg free
 27406                           
 27407                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 27408  01798A  6A2A               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 27409  01798C  6A2B               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 27410  01798E                     i1l1235:
 27411  01798E  0060  FB70  F00C   	movff	??_TMR3_ISR+16,btemp+11
 27412  017994  0060  FB6C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 27413  01799A  0060  FB68  F00A   	movff	??_TMR3_ISR+14,btemp+9
 27414  0179A0  0060  FB64  F009   	movff	??_TMR3_ISR+13,btemp+8
 27415  0179A6  0060  FB60  F008   	movff	??_TMR3_ISR+12,btemp+7
 27416  0179AC  0060  FB5C  F007   	movff	??_TMR3_ISR+11,btemp+6
 27417  0179B2  0060  FB58  F006   	movff	??_TMR3_ISR+10,btemp+5
 27418  0179B8  0060  FB54  F005   	movff	??_TMR3_ISR+9,btemp+4
 27419  0179BE  0060  FB50  F004   	movff	??_TMR3_ISR+8,btemp+3
 27420  0179C4  0060  FB4C  F003   	movff	??_TMR3_ISR+7,btemp+2
 27421  0179CA  0060  FB48  F002   	movff	??_TMR3_ISR+6,btemp+1
 27422  0179D0  0060  FB44  F001   	movff	??_TMR3_ISR+5,btemp
 27423  0179D6  0060  FB43  FFF5   	movff	??_TMR3_ISR+4,tablat
 27424  0179DC  0060  FB3F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 27425  0179E2  0060  FB3B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 27426  0179E8  0060  FB37  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 27427  0179EE  0060  FB33  FFD8   	movff	??_TMR3_ISR,status
 27428  0179F4  0011               	retfie		f
 27429  0179F6                     __end_of_TMR3_ISR:
 27430                           	opt callstack 0
 27431                           
 27432 ;; *************** function _TMR3_WriteTimer *****************
 27433 ;; Defined at:
 27434 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 27435 ;; Parameters:    Size  Location     Type
 27436 ;;  timerVal        2  [STACK] unsigned short 
 27437 ;; Auto vars:     Size  Location     Type
 27438 ;;		None
 27439 ;; Return value:  Size  Location     Type
 27440 ;;                  1  [STACK] void 
 27441 ;; Registers used:
 27442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27443 ;; Tracked objects:
 27444 ;;		On entry : 3F/39
 27445 ;;		On exit  : 0/0
 27446 ;;		Unchanged: 0/0
 27447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27452 ;;Total ram usage:        0 bytes
 27453 ;; Hardware stack levels used:    1
 27454 ;; Hardware stack levels required when called:    3
 27455 ;; This function calls:
 27456 ;;		Nothing
 27457 ;; This function is called by:
 27458 ;;		_TMR3_ISR
 27459 ;; This function uses a reentrant model
 27460 ;;
 27461                           
 27462                           	psect	text135
 27463  018FD0                     __ptext135:
 27464                           	opt callstack 0
 27465  018FD0                     _TMR3_WriteTimer:
 27466                           	opt callstack 13
 27467                           
 27468                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27469                           
 27470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27471                           ;incstack = 0
 27472  018FD0  A4A6               	btfss	166,2,c	;volatile
 27473  018FD2  D00F               	goto	l6180
 27474                           
 27475                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27476  018FD4  90A6               	bcf	166,0,c	;volatile
 27477                           
 27478                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27479                           ;stkvar	_timerVal @ sp[(0)+-2]
 27480  018FD6  0EFF               	movlw	255
 27481  018FD8  24E1               	addwf	fsr1l,w,c
 27482  018FDA  6ED9               	movwf	fsr2l,c
 27483  018FDC  0EFF               	movlw	255
 27484  018FDE  20E2               	addwfc	fsr1h,w,c
 27485  018FE0  6EDA               	movwf	fsr2h,c
 27486  018FE2  50DF               	movf	indf2,w,c
 27487  018FE4  6EA5               	movwf	165,c	;volatile
 27488                           
 27489                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27490                           ;stkvar	_timerVal @ sp[(0)+-2]
 27491  018FE6  0EFE               	movlw	-2
 27492  018FE8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27493                           
 27494                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27495  018FEE  80A6               	bsf	166,0,c	;volatile
 27496                           
 27497                           ;mcc_generated_files/tmr3.c: 141:     }
 27498  018FF0  D00C               	goto	l1218
 27499  018FF2                     l6180:
 27500                           
 27501                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27502                           ;stkvar	_timerVal @ sp[(0)+-2]
 27503  018FF2  0EFF               	movlw	255
 27504  018FF4  24E1               	addwf	fsr1l,w,c
 27505  018FF6  6ED9               	movwf	fsr2l,c
 27506  018FF8  0EFF               	movlw	255
 27507  018FFA  20E2               	addwfc	fsr1h,w,c
 27508  018FFC  6EDA               	movwf	fsr2h,c
 27509  018FFE  50DF               	movf	indf2,w,c
 27510  019000  6EA5               	movwf	165,c	;volatile
 27511                           
 27512                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27513                           ;stkvar	_timerVal @ sp[(0)+-2]
 27514  019002  0EFE               	movlw	-2
 27515  019004  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27516  01900A                     l1218:
 27517                           
 27518                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27519  01900A  52E5               	movf	postdec1,f,c
 27520  01900C  52E5               	movf	postdec1,f,c
 27521  01900E  0012               	return		;funcret
 27522  019010                     __end_of_TMR3_WriteTimer:
 27523                           	opt callstack 0
 27524                           
 27525 ;; *************** function _TMR3_CallBack *****************
 27526 ;; Defined at:
 27527 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27528 ;; Parameters:    Size  Location     Type
 27529 ;;		None
 27530 ;; Auto vars:     Size  Location     Type
 27531 ;;		None
 27532 ;; Return value:  Size  Location     Type
 27533 ;;                  1  [STACK] void 
 27534 ;; Registers used:
 27535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 27536 ;; Tracked objects:
 27537 ;;		On entry : 0/39
 27538 ;;		On exit  : 0/0
 27539 ;;		Unchanged: 0/0
 27540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27545 ;;Total ram usage:        0 bytes
 27546 ;; Hardware stack levels used:    1
 27547 ;; Hardware stack levels required when called:    5
 27548 ;; This function calls:
 27549 ;;		Absolute function
 27550 ;;		_TMR3_DefaultInterruptHandler
 27551 ;;		_calc_bsoc
 27552 ;; This function is called by:
 27553 ;;		_TMR3_ISR
 27554 ;; This function uses a reentrant model
 27555 ;;
 27556                           
 27557                           	psect	text136
 27558  0196D8                     __ptext136:
 27559                           	opt callstack 0
 27560  0196D8                     _TMR3_CallBack:
 27561                           	opt callstack 11
 27562                           
 27563                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27564                           
 27565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27566                           ;incstack = 0
 27567  0196D8  0100               	movlb	0	; () banked
 27568  0196DA  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27569  0196DC  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27570  0196DE  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27571  0196E0  B4D8               	btfsc	status,2,c
 27572  0196E2  0012               	return	
 27573                           
 27574                           ; BSR set to: 0
 27575                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27576  0196E4  D801               	call	u888_28
 27577  0196E6  0012               	return	
 27578  0196E8                     u888_28:
 27579  0196E8  0005               	push	
 27580  0196EA  6EFA               	movwf	pclath,c
 27581  0196EC  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27582  0196EE  6EFD               	movwf	tosl,c
 27583  0196F0  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27584  0196F2  6EFE               	movwf	tosh,c
 27585  0196F4  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27586  0196F6  6EFF               	movwf	tosu,c
 27587  0196F8  50FA               	movf	pclath,w,c
 27588  0196FA  0012               	return		;indir
 27589  0196FC                     __end_of_TMR3_CallBack:
 27590                           	opt callstack 0
 27591                           
 27592 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27593 ;; Defined at:
 27594 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27595 ;; Parameters:    Size  Location     Type
 27596 ;;		None
 27597 ;; Auto vars:     Size  Location     Type
 27598 ;;		None
 27599 ;; Return value:  Size  Location     Type
 27600 ;;                  1  [STACK] void 
 27601 ;; Registers used:
 27602 ;;		None
 27603 ;; Tracked objects:
 27604 ;;		On entry : 3F/0
 27605 ;;		On exit  : 0/0
 27606 ;;		Unchanged: 0/0
 27607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27612 ;;Total ram usage:        0 bytes
 27613 ;; Hardware stack levels used:    1
 27614 ;; Hardware stack levels required when called:    3
 27615 ;; This function calls:
 27616 ;;		Nothing
 27617 ;; This function is called by:
 27618 ;;		_TMR3_Initialize
 27619 ;;		_TMR3_CallBack
 27620 ;; This function uses a reentrant model
 27621 ;;
 27622                           
 27623                           	psect	text137
 27624  0199E4                     __ptext137:
 27625                           	opt callstack 0
 27626  0199E4                     _TMR3_DefaultInterruptHandler:
 27627                           	opt callstack 12
 27628                           
 27629                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27630                           
 27631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27632                           ;incstack = 0
 27633  0199E4  0012               	return		;funcret
 27634  0199E6                     __end_of_TMR3_DefaultInterruptHandler:
 27635                           	opt callstack 0
 27636                           
 27637 ;; *************** function _calc_bsoc *****************
 27638 ;; Defined at:
 27639 ;;		line 36 in file "bsoc.c"
 27640 ;; Parameters:    Size  Location     Type
 27641 ;;		None
 27642 ;; Auto vars:     Size  Location     Type
 27643 ;;  temp            2  [STACK] unsigned short 
 27644 ;; Return value:  Size  Location     Type
 27645 ;;                  1  [STACK] void 
 27646 ;; Registers used:
 27647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 27648 ;; Tracked objects:
 27649 ;;		On entry : 3F/0
 27650 ;;		On exit  : 3F/1
 27651 ;;		Unchanged: 0/0
 27652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27657 ;;Total ram usage:        0 bytes
 27658 ;; Hardware stack levels used:    1
 27659 ;; Hardware stack levels required when called:    4
 27660 ;; This function calls:
 27661 ;;		_Volts_to_SOC
 27662 ;;		___fladd
 27663 ;;		___fldiv
 27664 ;;		___flge
 27665 ;;		___flmul
 27666 ;;		___flneg
 27667 ;;		___fltol
 27668 ;;		___xxtofl
 27669 ;; This function is called by:
 27670 ;;		_init_bsoc
 27671 ;;		_TMR3_CallBack
 27672 ;; This function uses a reentrant model
 27673 ;;
 27674                           
 27675                           	psect	text138
 27676  01361A                     __ptext138:
 27677                           	opt callstack 0
 27678  01361A                     _calc_bsoc:
 27679                           	opt callstack 0
 27680                           
 27681                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27682  01361A  52E6               	movf	postinc1,f,c
 27683  01361C  52E6               	movf	postinc1,f,c
 27684                           
 27685                           ;incstack = 0
 27686                           ;bsoc.c: 38:  uint16_t temp;;bsoc.c: 40:  do { LATEbits.LATE1 = 1; } while(0);
 27687  01361E  82BE               	bsf	190,1,c	;volatile
 27688                           
 27689                           ;bsoc.c: 42:  C.dynamic_ah += (C.c_bat / 3600.0);
 27690  013620  0E00               	movlw	0
 27691  013622  6EE6               	movwf	postinc1,c
 27692  013624  0E00               	movlw	0
 27693  013626  6EE6               	movwf	postinc1,c
 27694  013628  0E61               	movlw	97
 27695  01362A  6EE6               	movwf	postinc1,c
 27696  01362C  0E45               	movlw	69
 27697  01362E  6EE6               	movwf	postinc1,c
 27698  013630  0060  F513  FFE6   	movff	_C+68,postinc1
 27699  013636  0060  F517  FFE6   	movff	_C+69,postinc1
 27700  01363C  0060  F51B  FFE6   	movff	_C+70,postinc1
 27701  013642  0060  F51F  FFE6   	movff	_C+71,postinc1
 27702  013648  ECF5  F09D         	call	___fldiv	;wreg free
 27703  01364C  0060  F007  FFE6   	movff	btemp,postinc1
 27704  013652  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27705  013658  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27706  01365E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27707  013664  0060  F603  FFE6   	movff	_C+128,postinc1
 27708  01366A  0060  F607  FFE6   	movff	_C+129,postinc1
 27709  013670  0060  F60B  FFE6   	movff	_C+130,postinc1
 27710  013676  0060  F60F  FFE6   	movff	_C+131,postinc1
 27711  01367C  EC2F  F097         	call	___fladd	;wreg free
 27712  013680  0060  F004  F180   	movff	btemp,_C+128	;volatile
 27713  013686  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
 27714  01368C  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
 27715  013692  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
 27716                           
 27717                           ;bsoc.c: 43:  if (C.dynamic_ah > (C.bank_ah))
 27718  013698  0060  F603  FFE6   	movff	_C+128,postinc1
 27719  01369E  0060  F607  FFE6   	movff	_C+129,postinc1
 27720  0136A4  0060  F60B  FFE6   	movff	_C+130,postinc1
 27721  0136AA  0060  F60F  FFE6   	movff	_C+131,postinc1
 27722  0136B0  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27723  0136B6  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27724  0136BC  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27725  0136C2  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27726  0136C8  ECC2  F0B6         	call	___flge	;wreg free
 27727  0136CC  B001               	btfsc	btemp& (0+255),0,c
 27728  0136CE  D008               	goto	l9524
 27729                           
 27730                           ;bsoc.c: 44:   C.dynamic_ah = C.bank_ah;
 27731  0136D0  C17C  F180         	movff	_C+124,_C+128	;volatile
 27732  0136D4  C17D  F181         	movff	_C+125,_C+129	;volatile
 27733  0136D8  C17E  F182         	movff	_C+126,_C+130	;volatile
 27734  0136DC  C17F  F183         	movff	_C+127,_C+131	;volatile
 27735  0136E0                     l9524:
 27736                           
 27737                           ;bsoc.c: 45:  if (C.dynamic_ah < 0.1)
 27738  0136E0  0ECD               	movlw	205
 27739  0136E2  6EE6               	movwf	postinc1,c
 27740  0136E4  0ECC               	movlw	204
 27741  0136E6  6EE6               	movwf	postinc1,c
 27742  0136E8  0ECC               	movlw	204
 27743  0136EA  6EE6               	movwf	postinc1,c
 27744  0136EC  0E3D               	movlw	61
 27745  0136EE  6EE6               	movwf	postinc1,c
 27746  0136F0  0060  F603  FFE6   	movff	_C+128,postinc1
 27747  0136F6  0060  F607  FFE6   	movff	_C+129,postinc1
 27748  0136FC  0060  F60B  FFE6   	movff	_C+130,postinc1
 27749  013702  0060  F60F  FFE6   	movff	_C+131,postinc1
 27750  013708  ECC2  F0B6         	call	___flge	;wreg free
 27751  01370C  B001               	btfsc	btemp& (0+255),0,c
 27752  01370E  D009               	goto	l9528
 27753                           
 27754                           ;bsoc.c: 46:   C.dynamic_ah = 0.1;
 27755  013710  0ECD               	movlw	205
 27756  013712  0101               	movlb	1	; () banked
 27757  013714  6F80               	movwf	(_C+128)& (0+255),b	;volatile
 27758  013716  0ECC               	movlw	204
 27759  013718  6F81               	movwf	(_C+129)& (0+255),b	;volatile
 27760  01371A  0ECC               	movlw	204
 27761  01371C  6F82               	movwf	(_C+130)& (0+255),b	;volatile
 27762  01371E  0E3D               	movlw	61
 27763  013720  6F83               	movwf	(_C+131)& (0+255),b	;volatile
 27764  013722                     l9528:
 27765                           
 27766                           ;bsoc.c: 48:  C.pv_ah += (C.c_pv / 3600.0);
 27767  013722  0E00               	movlw	0
 27768  013724  6EE6               	movwf	postinc1,c
 27769  013726  0E00               	movlw	0
 27770  013728  6EE6               	movwf	postinc1,c
 27771  01372A  0E61               	movlw	97
 27772  01372C  6EE6               	movwf	postinc1,c
 27773  01372E  0E45               	movlw	69
 27774  013730  6EE6               	movwf	postinc1,c
 27775  013732  0060  F523  FFE6   	movff	_C+72,postinc1
 27776  013738  0060  F527  FFE6   	movff	_C+73,postinc1
 27777  01373E  0060  F52B  FFE6   	movff	_C+74,postinc1
 27778  013744  0060  F52F  FFE6   	movff	_C+75,postinc1
 27779  01374A  ECF5  F09D         	call	___fldiv	;wreg free
 27780  01374E  0060  F007  FFE6   	movff	btemp,postinc1
 27781  013754  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27782  01375A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27783  013760  0060  F013  FFE6   	movff	btemp+3,postinc1
 27784  013766  0060  F613  FFE6   	movff	_C+132,postinc1
 27785  01376C  0060  F617  FFE6   	movff	_C+133,postinc1
 27786  013772  0060  F61B  FFE6   	movff	_C+134,postinc1
 27787  013778  0060  F61F  FFE6   	movff	_C+135,postinc1
 27788  01377E  EC2F  F097         	call	___fladd	;wreg free
 27789  013782  0060  F004  F184   	movff	btemp,_C+132	;volatile
 27790  013788  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 27791  01378E  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 27792  013794  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 27793                           
 27794                           ;bsoc.c: 49:  C.pvkw += (C.p_pv / 3600.0);
 27795  01379A  0E00               	movlw	0
 27796  01379C  6EE6               	movwf	postinc1,c
 27797  01379E  0E00               	movlw	0
 27798  0137A0  6EE6               	movwf	postinc1,c
 27799  0137A2  0E61               	movlw	97
 27800  0137A4  6EE6               	movwf	postinc1,c
 27801  0137A6  0E45               	movlw	69
 27802  0137A8  6EE6               	movwf	postinc1,c
 27803  0137AA  0060  F5C3  FFE6   	movff	_C+112,postinc1
 27804  0137B0  0060  F5C7  FFE6   	movff	_C+113,postinc1
 27805  0137B6  0060  F5CB  FFE6   	movff	_C+114,postinc1
 27806  0137BC  0060  F5CF  FFE6   	movff	_C+115,postinc1
 27807  0137C2  ECF5  F09D         	call	___fldiv	;wreg free
 27808  0137C6  0060  F007  FFE6   	movff	btemp,postinc1
 27809  0137CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27810  0137D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27811  0137D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 27812  0137DE  0060  F653  FFE6   	movff	_C+148,postinc1
 27813  0137E4  0060  F657  FFE6   	movff	_C+149,postinc1
 27814  0137EA  0060  F65B  FFE6   	movff	_C+150,postinc1
 27815  0137F0  0060  F65F  FFE6   	movff	_C+151,postinc1
 27816  0137F6  EC2F  F097         	call	___fladd	;wreg free
 27817  0137FA  0060  F004  F194   	movff	btemp,_C+148	;volatile
 27818  013800  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 27819  013806  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 27820  01380C  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 27821                           
 27822                           ;bsoc.c: 50:  C.invkw += (C.p_inverter / 3600.0);
 27823  013812  0E00               	movlw	0
 27824  013814  6EE6               	movwf	postinc1,c
 27825  013816  0E00               	movlw	0
 27826  013818  6EE6               	movwf	postinc1,c
 27827  01381A  0E61               	movlw	97
 27828  01381C  6EE6               	movwf	postinc1,c
 27829  01381E  0E45               	movlw	69
 27830  013820  6EE6               	movwf	postinc1,c
 27831  013822  0060  F5B3  FFE6   	movff	_C+108,postinc1
 27832  013828  0060  F5B7  FFE6   	movff	_C+109,postinc1
 27833  01382E  0060  F5BB  FFE6   	movff	_C+110,postinc1
 27834  013834  0060  F5BF  FFE6   	movff	_C+111,postinc1
 27835  01383A  ECF5  F09D         	call	___fldiv	;wreg free
 27836  01383E  0060  F007  FFE6   	movff	btemp,postinc1
 27837  013844  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27838  01384A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27839  013850  0060  F013  FFE6   	movff	btemp+3,postinc1
 27840  013856  0060  F663  FFE6   	movff	_C+152,postinc1
 27841  01385C  0060  F667  FFE6   	movff	_C+153,postinc1
 27842  013862  0060  F66B  FFE6   	movff	_C+154,postinc1
 27843  013868  0060  F66F  FFE6   	movff	_C+155,postinc1
 27844  01386E  EC2F  F097         	call	___fladd	;wreg free
 27845  013872  0060  F004  F198   	movff	btemp,_C+152	;volatile
 27846  013878  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 27847  01387E  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 27848  013884  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 27849                           
 27850                           ;bsoc.c: 51:  if (C.p_bat > 0.0)
 27851  01388A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27852  013890  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27853  013896  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27854  01389C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27855  0138A2  0E00               	movlw	0
 27856  0138A4  6EE6               	movwf	postinc1,c
 27857  0138A6  0E00               	movlw	0
 27858  0138A8  6EE6               	movwf	postinc1,c
 27859  0138AA  0E00               	movlw	0
 27860  0138AC  6EE6               	movwf	postinc1,c
 27861  0138AE  0E00               	movlw	0
 27862  0138B0  6EE6               	movwf	postinc1,c
 27863  0138B2  ECC2  F0B6         	call	___flge	;wreg free
 27864  0138B6  B001               	btfsc	btemp& (0+255),0,c
 27865  0138B8  D03C               	goto	l9538
 27866                           
 27867                           ;bsoc.c: 52:   C.bkwi += (C.p_bat / 3600.0);
 27868  0138BA  0E00               	movlw	0
 27869  0138BC  6EE6               	movwf	postinc1,c
 27870  0138BE  0E00               	movlw	0
 27871  0138C0  6EE6               	movwf	postinc1,c
 27872  0138C2  0E61               	movlw	97
 27873  0138C4  6EE6               	movwf	postinc1,c
 27874  0138C6  0E45               	movlw	69
 27875  0138C8  6EE6               	movwf	postinc1,c
 27876  0138CA  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27877  0138D0  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27878  0138D6  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27879  0138DC  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27880  0138E2  ECF5  F09D         	call	___fldiv	;wreg free
 27881  0138E6  0060  F007  FFE6   	movff	btemp,postinc1
 27882  0138EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27883  0138F2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27884  0138F8  0060  F013  FFE6   	movff	btemp+3,postinc1
 27885  0138FE  0060  F633  FFE6   	movff	_C+140,postinc1
 27886  013904  0060  F637  FFE6   	movff	_C+141,postinc1
 27887  01390A  0060  F63B  FFE6   	movff	_C+142,postinc1
 27888  013910  0060  F63F  FFE6   	movff	_C+143,postinc1
 27889  013916  EC2F  F097         	call	___fladd	;wreg free
 27890  01391A  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 27891  013920  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 27892  013926  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 27893  01392C  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 27894  013932                     l9538:
 27895                           
 27896                           ;bsoc.c: 53:  if (C.p_bat < 0.0)
 27897  013932  0101               	movlb	1	; () banked
 27898  013934  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 27899  013936  D03C               	goto	l9542
 27900                           
 27901                           ; BSR set to: 1
 27902                           ;bsoc.c: 54:   C.bkwo += (C.p_bat / 3600.0);
 27903  013938  0E00               	movlw	0
 27904  01393A  6EE6               	movwf	postinc1,c
 27905  01393C  0E00               	movlw	0
 27906  01393E  6EE6               	movwf	postinc1,c
 27907  013940  0E61               	movlw	97
 27908  013942  6EE6               	movwf	postinc1,c
 27909  013944  0E45               	movlw	69
 27910  013946  6EE6               	movwf	postinc1,c
 27911  013948  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27912  01394E  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27913  013954  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27914  01395A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27915  013960  ECF5  F09D         	call	___fldiv	;wreg free
 27916  013964  0060  F007  FFE6   	movff	btemp,postinc1
 27917  01396A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27918  013970  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27919  013976  0060  F013  FFE6   	movff	btemp+3,postinc1
 27920  01397C  0060  F643  FFE6   	movff	_C+144,postinc1
 27921  013982  0060  F647  FFE6   	movff	_C+145,postinc1
 27922  013988  0060  F64B  FFE6   	movff	_C+146,postinc1
 27923  01398E  0060  F64F  FFE6   	movff	_C+147,postinc1
 27924  013994  EC2F  F097         	call	___fladd	;wreg free
 27925  013998  0060  F004  F190   	movff	btemp,_C+144	;volatile
 27926  01399E  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 27927  0139A4  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 27928  0139AA  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 27929  0139B0                     l9542:
 27930                           
 27931                           ;bsoc.c: 56:  temp = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 27932  0139B0  0E00               	movlw	0
 27933  0139B2  6EE6               	movwf	postinc1,c
 27934  0139B4  0E00               	movlw	0
 27935  0139B6  6EE6               	movwf	postinc1,c
 27936  0139B8  0EC8               	movlw	200
 27937  0139BA  6EE6               	movwf	postinc1,c
 27938  0139BC  0E42               	movlw	66
 27939  0139BE  6EE6               	movwf	postinc1,c
 27940  0139C0  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27941  0139C6  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27942  0139CC  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27943  0139D2  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27944  0139D8  0060  F603  FFE6   	movff	_C+128,postinc1
 27945  0139DE  0060  F607  FFE6   	movff	_C+129,postinc1
 27946  0139E4  0060  F60B  FFE6   	movff	_C+130,postinc1
 27947  0139EA  0060  F60F  FFE6   	movff	_C+131,postinc1
 27948  0139F0  ECF5  F09D         	call	___fldiv	;wreg free
 27949  0139F4  0060  F007  FFE6   	movff	btemp,postinc1
 27950  0139FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27951  013A00  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27952  013A06  0060  F013  FFE6   	movff	btemp+3,postinc1
 27953  013A0C  EC1A  F093         	call	___flmul	;wreg free
 27954  013A10  0060  F007  FFE6   	movff	btemp,postinc1
 27955  013A16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27956  013A1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27957  013A22  0060  F013  FFE6   	movff	btemp+3,postinc1
 27958  013A28  EC51  F0B5         	call	___fltol	;wreg free
 27959  013A2C  0060  F004  F00B   	movff	btemp,btemp+10
 27960  013A32  0060  F008  F00C   	movff	btemp+1,btemp+11
 27961  013A38  0E01               	movlw	1
 27962  013A3A  260B               	addwf	(btemp+10)^0,f,c
 27963  013A3C  0E00               	movlw	0
 27964  013A3E  220C               	addwfc	(btemp+11)^0,f,c
 27965                           
 27966                           ;stkvar	_temp @ sp[(-2)+0]
 27967  013A40  0EFE               	movlw	-2
 27968  013A42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27969  013A48  0EFF               	movlw	-1
 27970  013A4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27971                           
 27972                           ;bsoc.c: 57:  C.soc = (Volts_to_SOC((uint32_t) C.v_bat * 1000.0) + temp) / 2;
 27973                           ;stkvar	_temp @ sp[(-2)+0]
 27974  013A50  0E00               	movlw	0
 27975  013A52  6EE6               	movwf	postinc1,c
 27976  013A54  0E00               	movlw	0
 27977  013A56  6EE6               	movwf	postinc1,c
 27978  013A58  0E7A               	movlw	122
 27979  013A5A  6EE6               	movwf	postinc1,c
 27980  013A5C  0E44               	movlw	68
 27981  013A5E  6EE6               	movwf	postinc1,c
 27982  013A60  0060  F553  FFE6   	movff	_C+84,postinc1
 27983  013A66  0060  F557  FFE6   	movff	_C+85,postinc1
 27984  013A6C  0060  F55B  FFE6   	movff	_C+86,postinc1
 27985  013A72  0060  F55F  FFE6   	movff	_C+87,postinc1
 27986  013A78  EC51  F0B5         	call	___fltol	;wreg free
 27987  013A7C  0060  F007  FFE6   	movff	btemp,postinc1
 27988  013A82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27989  013A88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27990  013A8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27991  013A94  0E00               	movlw	0
 27992  013A96  6EE6               	movwf	postinc1,c
 27993  013A98  ECC0  F0B1         	call	___xxtofl	;wreg free
 27994  013A9C  0060  F007  FFE6   	movff	btemp,postinc1
 27995  013AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27996  013AA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27997  013AAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 27998  013AB4  EC1A  F093         	call	___flmul	;wreg free
 27999  013AB8  0060  F007  FFE6   	movff	btemp,postinc1
 28000  013ABE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28001  013AC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28002  013ACA  0060  F013  FFE6   	movff	btemp+3,postinc1
 28003  013AD0  EC51  F0B5         	call	___fltol	;wreg free
 28004  013AD4  0060  F007  FFE6   	movff	btemp,postinc1
 28005  013ADA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28006  013AE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28007  013AE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 28008  013AEC  EC7B  F0C1         	call	_Volts_to_SOC	;wreg free
 28009  013AF0  0EFE               	movlw	-2
 28010  013AF2  50E3               	movf	plusw1,w,c
 28011  013AF4  2601               	addwf	btemp^0,f,c
 28012  013AF6  0EFF               	movlw	-1
 28013  013AF8  50E3               	movf	plusw1,w,c
 28014  013AFA  2202               	addwfc	(btemp+1)^0,f,c
 28015  013AFC  90D8               	bcf	status,0,c
 28016  013AFE  3002               	rrcf	(btemp+1)^0,w,c
 28017  013B00  6E0C               	movwf	(btemp+11)^0,c
 28018  013B02  3001               	rrcf	btemp^0,w,c
 28019  013B04  6E0B               	movwf	(btemp+10)^0,c
 28020  013B06  0060  F02C  F19E   	movff	btemp+10,_C+158	;volatile
 28021  013B0C  0060  F030  F19F   	movff	btemp+11,_C+159	;volatile
 28022                           
 28023                           ;bsoc.c: 58:  if (C.soc > 100)
 28024  013B12  0101               	movlb	1	; () banked
 28025  013B14  519F               	movf	(_C+159)& (0+255),w,b	;volatile
 28026  013B16  E104               	bnz	u871_20
 28027  013B18  0E65               	movlw	101
 28028  013B1A  5D9E               	subwf	(_C+158)& (0+255),w,b	;volatile
 28029  013B1C  A0D8               	btfss	status,0,c
 28030  013B1E  D004               	goto	l9550
 28031  013B20                     u871_20:
 28032                           
 28033                           ; BSR set to: 1
 28034                           ;bsoc.c: 59:   C.soc = 100;
 28035  013B20  0E00               	movlw	0
 28036  013B22  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 28037  013B24  0E64               	movlw	100
 28038  013B26  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 28039  013B28                     l9550:
 28040                           
 28041                           ; BSR set to: 1
 28042                           ;bsoc.c: 61:  if (C.c_bat < 0.0) {
 28043  013B28  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 28044  013B2A  D043               	goto	l9554
 28045                           
 28046                           ; BSR set to: 1
 28047                           ;bsoc.c: 62:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 28048  013B2C  0060  F513  FFE6   	movff	_C+68,postinc1
 28049  013B32  0060  F517  FFE6   	movff	_C+69,postinc1
 28050  013B38  0060  F51B  FFE6   	movff	_C+70,postinc1
 28051  013B3E  0060  F51F  FFE6   	movff	_C+71,postinc1
 28052  013B44  0060  F603  FFE6   	movff	_C+128,postinc1
 28053  013B4A  0060  F607  FFE6   	movff	_C+129,postinc1
 28054  013B50  0060  F60B  FFE6   	movff	_C+130,postinc1
 28055  013B56  0060  F60F  FFE6   	movff	_C+131,postinc1
 28056  013B5C  ECF5  F09D         	call	___fldiv	;wreg free
 28057  013B60  0060  F007  FFE6   	movff	btemp,postinc1
 28058  013B66  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28059  013B6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28060  013B72  0060  F013  FFE6   	movff	btemp+3,postinc1
 28061  013B78  EC95  F0C6         	call	___flneg	;wreg free
 28062  013B7C  0060  F007  FFE6   	movff	btemp,postinc1
 28063  013B82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28064  013B88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28065  013B8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28066  013B94  EC51  F0B5         	call	___fltol	;wreg free
 28067  013B98  0060  F004  F00B   	movff	btemp,btemp+10
 28068  013B9E  0060  F008  F00C   	movff	btemp+1,btemp+11
 28069  013BA4  0060  F02C  F19C   	movff	btemp+10,_C+156	;volatile
 28070  013BAA  0060  F030  F19D   	movff	btemp+11,_C+157	;volatile
 28071                           
 28072                           ;bsoc.c: 63:  } else {
 28073  013BB0  D004               	goto	l9556
 28074  013BB2                     l9554:
 28075                           
 28076                           ; BSR set to: 1
 28077                           ;bsoc.c: 64:   C.runtime = 120;
 28078  013BB2  0E00               	movlw	0
 28079  013BB4  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28080  013BB6  0E78               	movlw	120
 28081  013BB8  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28082  013BBA                     l9556:
 28083                           
 28084                           ;bsoc.c: 66:  if (C.runtime > 120)
 28085  013BBA  0101               	movlb	1	; () banked
 28086  013BBC  519D               	movf	(_C+157)& (0+255),w,b	;volatile
 28087  013BBE  E104               	bnz	u873_20
 28088  013BC0  0E79               	movlw	121
 28089  013BC2  5D9C               	subwf	(_C+156)& (0+255),w,b	;volatile
 28090  013BC4  A0D8               	btfss	status,0,c
 28091  013BC6  D004               	goto	l9560
 28092  013BC8                     u873_20:
 28093                           
 28094                           ; BSR set to: 1
 28095                           ;bsoc.c: 67:   C.runtime = 120;
 28096  013BC8  0E00               	movlw	0
 28097  013BCA  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28098  013BCC  0E78               	movlw	120
 28099  013BCE  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28100  013BD0                     l9560:
 28101                           
 28102                           ; BSR set to: 1
 28103                           ;bsoc.c: 69:  V.lowint_count++;
 28104  013BD0  0E01               	movlw	1
 28105  013BD2  0102               	movlb	2	; () banked
 28106  013BD4  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 28107  013BD6  0E00               	movlw	0
 28108  013BD8  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 28109  013BDA  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 28110  013BDC  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 28111                           
 28112                           ; BSR set to: 2
 28113                           ;bsoc.c: 70:  C.update = 0;
 28114  013BDE  0101               	movlb	1	; () banked
 28115  013BE0  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 28116                           
 28117                           ; BSR set to: 1
 28118  013BE2  92BE               	bcf	190,1,c	;volatile
 28119                           
 28120                           ; BSR set to: 1
 28121                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 28122  013BE4  52E5               	movf	postdec1,f,c
 28123  013BE6  52E5               	movf	postdec1,f,c
 28124  013BE8  0012               	return		;funcret
 28125  013BEA                     __end_of_calc_bsoc:
 28126                           	opt callstack 0
 28127                           
 28128 ;; *************** function _INT0_ISR *****************
 28129 ;; Defined at:
 28130 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 28131 ;; Parameters:    Size  Location     Type
 28132 ;;		None
 28133 ;; Auto vars:     Size  Location     Type
 28134 ;;		None
 28135 ;; Return value:  Size  Location     Type
 28136 ;;                  1    wreg      void 
 28137 ;; Registers used:
 28138 ;;		wreg, status,2, status,0, pclath, tosl
 28139 ;; Tracked objects:
 28140 ;;		On entry : 0/0
 28141 ;;		On exit  : 0/0
 28142 ;;		Unchanged: 0/0
 28143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28148 ;;Total ram usage:        0 bytes
 28149 ;; Hardware stack levels used:    1
 28150 ;; Hardware stack levels required when called:    2
 28151 ;; This function calls:
 28152 ;;		_INT0_CallBack
 28153 ;; This function is called by:
 28154 ;;		Interrupt level 2
 28155 ;; This function uses a non-reentrant model
 28156 ;;
 28157                           
 28158                           	psect	text139
 28159  019950                     __ptext139:
 28160                           	opt callstack 0
 28161  019950                     _INT0_ISR:
 28162                           	opt callstack 11
 28163                           
 28164                           ; BSR set to: 1
 28165                           ;incstack = 0
 28166  019950  EE14  F016         	lfsr	1,___inthi_sp
 28167                           
 28168                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 28169  019954  0139               	movlb	57	; () banked
 28170  019956  91A1               	bcf	161,0,b	;volatile
 28171                           
 28172                           ; BSR set to: 57
 28173                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 28174  019958  ECA1  F0CB         	call	_INT0_CallBack	;wreg free
 28175  01995C  0011               	retfie		f
 28176  01995E                     __end_of_INT0_ISR:
 28177                           	opt callstack 0
 28178                           
 28179 ;; *************** function _INT0_CallBack *****************
 28180 ;; Defined at:
 28181 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 28182 ;; Parameters:    Size  Location     Type
 28183 ;;		None
 28184 ;; Auto vars:     Size  Location     Type
 28185 ;;		None
 28186 ;; Return value:  Size  Location     Type
 28187 ;;                  1  [STACK] void 
 28188 ;; Registers used:
 28189 ;;		wreg, status,2, status,0, pclath, tosl
 28190 ;; Tracked objects:
 28191 ;;		On entry : 3F/39
 28192 ;;		On exit  : 0/0
 28193 ;;		Unchanged: 0/0
 28194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28199 ;;Total ram usage:        0 bytes
 28200 ;; Hardware stack levels used:    1
 28201 ;; Hardware stack levels required when called:    1
 28202 ;; This function calls:
 28203 ;;		Absolute function
 28204 ;;		_INT0_DefaultInterruptHandler
 28205 ;; This function is called by:
 28206 ;;		_INT0_ISR
 28207 ;; This function uses a reentrant model
 28208 ;;
 28209                           
 28210                           	psect	text140
 28211  019742                     __ptext140:
 28212                           	opt callstack 0
 28213  019742                     _INT0_CallBack:
 28214                           	opt callstack 11
 28215                           
 28216                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 28217                           
 28218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28219                           ;incstack = 0
 28220  019742  5021               	movf	_INT0_InterruptHandler^0,w,c
 28221  019744  1022               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 28222  019746  1023               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 28223  019748  B4D8               	btfsc	status,2,c
 28224  01974A  0012               	return	
 28225                           
 28226                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 28227  01974C  D801               	call	u407_48
 28228  01974E  0012               	return	
 28229  019750                     u407_48:
 28230  019750  0005               	push	
 28231  019752  6EFA               	movwf	pclath,c
 28232  019754  5021               	movf	_INT0_InterruptHandler^0,w,c
 28233  019756  6EFD               	movwf	tosl,c
 28234  019758  5022               	movf	(_INT0_InterruptHandler+1)^0,w,c
 28235  01975A  6EFE               	movwf	tosh,c
 28236  01975C  5023               	movf	(_INT0_InterruptHandler+2)^0,w,c
 28237  01975E  6EFF               	movwf	tosu,c
 28238  019760  50FA               	movf	pclath,w,c
 28239  019762  0012               	return		;indir
 28240  019764                     __end_of_INT0_CallBack:
 28241                           	opt callstack 0
 28242                           
 28243 ;; *************** function _INT0_DefaultInterruptHandler *****************
 28244 ;; Defined at:
 28245 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 28246 ;; Parameters:    Size  Location     Type
 28247 ;;		None
 28248 ;; Auto vars:     Size  Location     Type
 28249 ;;		None
 28250 ;; Return value:  Size  Location     Type
 28251 ;;                  1  [STACK] void 
 28252 ;; Registers used:
 28253 ;;		None
 28254 ;; Tracked objects:
 28255 ;;		On entry : 0/39
 28256 ;;		On exit  : 0/0
 28257 ;;		Unchanged: 0/0
 28258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28263 ;;Total ram usage:        0 bytes
 28264 ;; Hardware stack levels used:    1
 28265 ;; This function calls:
 28266 ;;		Nothing
 28267 ;; This function is called by:
 28268 ;;		_EXT_INT_Initialize
 28269 ;;		_INT0_CallBack
 28270 ;; This function uses a reentrant model
 28271 ;;
 28272                           
 28273                           	psect	text141
 28274  0199E6                     __ptext141:
 28275                           	opt callstack 0
 28276  0199E6                     _INT0_DefaultInterruptHandler:
 28277                           	opt callstack 11
 28278                           
 28279                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28280                           
 28281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28282                           ;incstack = 0
 28283  0199E6  0012               	return		;funcret
 28284  0199E8                     __end_of_INT0_DefaultInterruptHandler:
 28285                           	opt callstack 0
 28286                           
 28287 ;; *************** function _Default_ISR *****************
 28288 ;; Defined at:
 28289 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 28290 ;; Parameters:    Size  Location     Type
 28291 ;;		None
 28292 ;; Auto vars:     Size  Location     Type
 28293 ;;		None
 28294 ;; Return value:  Size  Location     Type
 28295 ;;                  1    wreg      void 
 28296 ;; Registers used:
 28297 ;;		None
 28298 ;; Tracked objects:
 28299 ;;		On entry : 0/0
 28300 ;;		On exit  : 0/0
 28301 ;;		Unchanged: 0/0
 28302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28307 ;;Total ram usage:        0 bytes
 28308 ;; Hardware stack levels used:    1
 28309 ;; This function calls:
 28310 ;;		Nothing
 28311 ;; This function is called by:
 28312 ;;		Interrupt level 2
 28313 ;; This function uses a non-reentrant model
 28314 ;;
 28315                           
 28316                           	psect	text142
 28317  0199DC                     __ptext142:
 28318                           	opt callstack 0
 28319  0199DC                     _Default_ISR:
 28320                           	opt callstack 13
 28321                           
 28322                           ;incstack = 0
 28323  0199DC  EE14  F016         	lfsr	1,___inthi_sp
 28324  0199E0  0011               	retfie		f
 28325  0199E2                     __end_of_Default_ISR:
 28326                           	opt callstack 0
 28327                           
 28328 ;; *************** function _ADCC_ISR *****************
 28329 ;; Defined at:
 28330 ;;		line 314 in file "mcc_generated_files/adcc.c"
 28331 ;; Parameters:    Size  Location     Type
 28332 ;;		None
 28333 ;; Auto vars:     Size  Location     Type
 28334 ;;		None
 28335 ;; Return value:  Size  Location     Type
 28336 ;;                  1    wreg      void 
 28337 ;; Registers used:
 28338 ;;		wreg, status,2, status,0, pclath, tosl
 28339 ;; Tracked objects:
 28340 ;;		On entry : 0/0
 28341 ;;		On exit  : 0/0
 28342 ;;		Unchanged: 0/0
 28343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28348 ;;Total ram usage:        0 bytes
 28349 ;; Hardware stack levels used:    1
 28350 ;; Hardware stack levels required when called:    1
 28351 ;; This function calls:
 28352 ;;		Absolute function
 28353 ;;		_ADCC_DefaultInterruptHandler
 28354 ;;		_adc_int_handler
 28355 ;; This function is called by:
 28356 ;;		Interrupt level 2
 28357 ;; This function uses a non-reentrant model
 28358 ;;
 28359                           
 28360                           	psect	text143
 28361  019250                     __ptext143:
 28362                           	opt callstack 0
 28363  019250                     _ADCC_ISR:
 28364                           	opt callstack 12
 28365                           
 28366                           ;incstack = 0
 28367  019250  EE14  F016         	lfsr	1,___inthi_sp
 28368                           
 28369                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 28370  019254  0139               	movlb	57	; () banked
 28371  019256  95A1               	bcf	161,2,b	;volatile
 28372                           
 28373                           ; BSR set to: 57
 28374                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 28375  019258  0100               	movlb	0	; () banked
 28376  01925A  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28377  01925C  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28378  01925E  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28379  019260  B4D8               	btfsc	status,2,c
 28380  019262  0011               	retfie		f
 28381                           
 28382                           ; BSR set to: 0
 28383                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 28384  019264  D801               	call	i2u910_48
 28385  019266  0011               	retfie		f
 28386  019268                     i2u910_48:
 28387  019268  0005               	push	
 28388  01926A  6EFA               	movwf	pclath,c
 28389  01926C  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28390  01926E  6EFD               	movwf	tosl,c
 28391  019270  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28392  019272  6EFE               	movwf	tosh,c
 28393  019274  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28394  019276  6EFF               	movwf	tosu,c
 28395  019278  50FA               	movf	pclath,w,c
 28396  01927A  0012               	return		;indir
 28397  01927C                     __end_of_ADCC_ISR:
 28398                           	opt callstack 0
 28399                           
 28400 ;; *************** function _adc_int_t_handler *****************
 28401 ;; Defined at:
 28402 ;;		line 128 in file "daq.c"
 28403 ;; Parameters:    Size  Location     Type
 28404 ;;		None
 28405 ;; Auto vars:     Size  Location     Type
 28406 ;;		None
 28407 ;; Return value:  Size  Location     Type
 28408 ;;                  1  [STACK] void 
 28409 ;; Registers used:
 28410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 28411 ;; Tracked objects:
 28412 ;;		On entry : 3F/0
 28413 ;;		On exit  : 1/0
 28414 ;;		Unchanged: 0/0
 28415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28420 ;;Total ram usage:        0 bytes
 28421 ;; Hardware stack levels used:    1
 28422 ;; Hardware stack levels required when called:    1
 28423 ;; This function calls:
 28424 ;;		_ADCC_DischargeSampleCapacitor
 28425 ;;		_ADCC_StartConversion
 28426 ;; This function is called by:
 28427 ;;		_start_adc_scan
 28428 ;;		_ADCC_ThresholdISR
 28429 ;; This function uses a reentrant model
 28430 ;;
 28431                           
 28432                           	psect	text144
 28433  0186D0                     __ptext144:
 28434                           	opt callstack 0
 28435  0186D0                     _adc_int_t_handler:
 28436                           	opt callstack 11
 28437                           
 28438                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 28439                           
 28440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28441                           ;incstack = 0
 28442  0186D0  013E               	movlb	62	; () banked
 28443  0186D2  51E6               	movf	230,w,b	;volatile
 28444  0186D4  006F FB9C  F001    	movff	16103,btemp	;volatile
 28445  0186DA  6A02               	clrf	(btemp+1)^0,c
 28446  0186DC  0060  F004  F002   	movff	btemp,btemp+1
 28447  0186E2  6A01               	clrf	btemp^0,c
 28448  0186E4  2601               	addwf	btemp^0,f,c
 28449  0186E6  0E00               	movlw	0
 28450  0186E8  2202               	addwfc	(btemp+1)^0,f,c
 28451  0186EA  0100               	movlb	0	; () banked
 28452  0186EC  51ED               	movf	(_R+36)& (0+255),w,b	;volatile
 28453  0186EE  0D02               	mullw	2
 28454  0186F0  50F3               	movf	243,w,c
 28455  0186F2  0FC9               	addlw	low _R
 28456  0186F4  6ED9               	movwf	fsr2l,c
 28457  0186F6  6ADA               	clrf	fsr2h,c
 28458  0186F8  0060  F007  FFDE   	movff	btemp,postinc2
 28459  0186FE  0060  F00B  FFDD   	movff	btemp+1,postdec2
 28460  018704                     l9908:
 28461                           
 28462                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 28463  018704  0100               	movlb	0	; () banked
 28464  018706  2BED               	incf	(_R+36)& (0+255),f,b	;volatile
 28465  018708  0E0D               	movlw	13
 28466  01870A  65ED               	cpfsgt	(_R+36)& (0+255),b	;volatile
 28467  01870C  D003               	goto	l9914
 28468                           
 28469                           ; BSR set to: 0
 28470                           ;daq.c: 136:    R.done = 1;
 28471  01870E  0E01               	movlw	1
 28472  018710  6FF0               	movwf	(_R+39)& (0+255),b	;volatile
 28473  018712  0012               	return	
 28474  018714                     l9914:
 28475                           
 28476                           ; BSR set to: 0
 28477                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 28478  018714  0060  F3B4  F00C   	movff	_R+36,btemp+11	;volatile
 28479  01871A  EE20  F0EE         	lfsr	2,_R+37	;volatile
 28480  01871E  006F FF78  F009    	movff	postinc2,btemp+8
 28481  018724  006F FF74  F00A    	movff	postdec2,btemp+9
 28482  01872A  2A0C               	incf	(btemp+11)^0,f,c
 28483  01872C  D003               	goto	u907_44
 28484  01872E                     u907_45:
 28485  01872E  90D8               	bcf	status,0,c
 28486  018730  320A               	rrcf	(btemp+9)^0,f,c
 28487  018732  3209               	rrcf	(btemp+8)^0,f,c
 28488  018734                     u907_44:
 28489  018734  2E0C               	decfsz	(btemp+11)^0,f,c
 28490  018736  D7FB               	goto	u907_45
 28491  018738  A009               	btfss	(btemp+8)^0,0,c
 28492  01873A  D7E4               	goto	l9908
 28493                           
 28494                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 28495  01873C  ECCD  F0CC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 28496                           
 28497                           ; BSR set to: 62
 28498                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 28499  018740  0100               	movlb	0	; () banked
 28500  018742  51ED               	movf	(_R+36)& (0+255),w,b	;volatile
 28501  018744  0B0F               	andlw	15
 28502  018746  6EE6               	movwf	postinc1,c
 28503  018748  EC88  F0CC         	call	_ADCC_StartConversion	;wreg free
 28504                           
 28505                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28506  01874C  0012               	return		;funcret
 28507  01874E                     __end_of_adc_int_t_handler:
 28508                           	opt callstack 0
 28509                           
 28510 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28511 ;; Defined at:
 28512 ;;		line 339 in file "mcc_generated_files/adcc.c"
 28513 ;; Parameters:    Size  Location     Type
 28514 ;;		None
 28515 ;; Auto vars:     Size  Location     Type
 28516 ;;		None
 28517 ;; Return value:  Size  Location     Type
 28518 ;;                  1  [STACK] void 
 28519 ;; Registers used:
 28520 ;;		None
 28521 ;; Tracked objects:
 28522 ;;		On entry : 3F/0
 28523 ;;		On exit  : 0/0
 28524 ;;		Unchanged: 0/0
 28525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28530 ;;Total ram usage:        0 bytes
 28531 ;; Hardware stack levels used:    1
 28532 ;; This function calls:
 28533 ;;		Nothing
 28534 ;; This function is called by:
 28535 ;;		_ADCC_Initialize
 28536 ;;		_ADCC_ISR
 28537 ;;		_ADCC_ThresholdISR
 28538 ;; This function uses a reentrant model
 28539 ;;
 28540                           
 28541                           	psect	text145
 28542  0199E8                     __ptext145:
 28543                           	opt callstack 0
 28544  0199E8                     _ADCC_DefaultInterruptHandler:
 28545                           	opt callstack 12
 28546                           
 28547                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28548                           
 28549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28550                           ;incstack = 0
 28551  0199E8  0012               	return		;funcret
 28552  0199EA                     __end_of_ADCC_DefaultInterruptHandler:
 28553                           	opt callstack 0
 28554                           
 28555 ;; *************** function _adc_int_handler *****************
 28556 ;; Defined at:
 28557 ;;		line 118 in file "daq.c"
 28558 ;; Parameters:    Size  Location     Type
 28559 ;;		None
 28560 ;; Auto vars:     Size  Location     Type
 28561 ;;		None
 28562 ;; Return value:  Size  Location     Type
 28563 ;;                  1  [STACK] void 
 28564 ;; Registers used:
 28565 ;;		None
 28566 ;; Tracked objects:
 28567 ;;		On entry : 3F/0
 28568 ;;		On exit  : 0/0
 28569 ;;		Unchanged: 0/0
 28570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28575 ;;Total ram usage:        0 bytes
 28576 ;; Hardware stack levels used:    1
 28577 ;; This function calls:
 28578 ;;		Nothing
 28579 ;; This function is called by:
 28580 ;;		_start_adc_scan
 28581 ;;		_ADCC_ISR
 28582 ;; This function uses a reentrant model
 28583 ;;
 28584                           
 28585                           	psect	text146
 28586  0199EA                     __ptext146:
 28587                           	opt callstack 0
 28588  0199EA                     _adc_int_handler:
 28589                           	opt callstack 12
 28590                           
 28591                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28592                           
 28593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28594                           ;incstack = 0
 28595  0199EA  0012               	return		;funcret
 28596  0199EC                     __end_of_adc_int_handler:
 28597                           	opt callstack 0
 28598                           
 28599 ;; *************** function _ADCC_ThresholdISR *****************
 28600 ;; Defined at:
 28601 ;;		line 327 in file "mcc_generated_files/adcc.c"
 28602 ;; Parameters:    Size  Location     Type
 28603 ;;		None
 28604 ;; Auto vars:     Size  Location     Type
 28605 ;;		None
 28606 ;; Return value:  Size  Location     Type
 28607 ;;                  1    wreg      void 
 28608 ;; Registers used:
 28609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 28610 ;; Tracked objects:
 28611 ;;		On entry : 0/0
 28612 ;;		On exit  : 0/0
 28613 ;;		Unchanged: 0/0
 28614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28617 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28618 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28619 ;;Total ram usage:        5 bytes
 28620 ;; Hardware stack levels used:    1
 28621 ;; Hardware stack levels required when called:    2
 28622 ;; This function calls:
 28623 ;;		Absolute function
 28624 ;;		_ADCC_DefaultInterruptHandler
 28625 ;;		_adc_int_t_handler
 28626 ;; This function is called by:
 28627 ;;		Interrupt level 2
 28628 ;; This function uses a non-reentrant model
 28629 ;;
 28630                           
 28631                           	psect	text147
 28632  018824                     __ptext147:
 28633                           	opt callstack 0
 28634  018824                     _ADCC_ThresholdISR:
 28635                           	opt callstack 11
 28636                           
 28637                           ;incstack = 0
 28638  018824  0060  F004  F040   	movff	btemp,??_ADCC_ThresholdISR
 28639  01882A  0060  F008  F041   	movff	btemp+1,??_ADCC_ThresholdISR+1
 28640  018830  0060  F024  F042   	movff	btemp+8,??_ADCC_ThresholdISR+2
 28641  018836  0060  F028  F043   	movff	btemp+9,??_ADCC_ThresholdISR+3
 28642  01883C  0060  F030  F044   	movff	btemp+11,??_ADCC_ThresholdISR+4
 28643  018842  EE14  F016         	lfsr	1,___inthi_sp
 28644                           
 28645                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 28646  018846  0139               	movlb	57	; () banked
 28647  018848  97A1               	bcf	161,3,b	;volatile
 28648                           
 28649                           ; BSR set to: 57
 28650                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 28651  01884A  0100               	movlb	0	; () banked
 28652  01884C  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28653  01884E  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28654  018850  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28655  018852  B4D8               	btfsc	status,2,c
 28656  018854  D00C               	goto	i2u912_49
 28657                           
 28658                           ; BSR set to: 0
 28659                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 28660  018856  D801               	call	i2u912_48
 28661  018858  D00A               	goto	i2u912_49
 28662  01885A                     i2u912_48:
 28663  01885A  0005               	push	
 28664  01885C  6EFA               	movwf	pclath,c
 28665  01885E  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28666  018860  6EFD               	movwf	tosl,c
 28667  018862  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28668  018864  6EFE               	movwf	tosh,c
 28669  018866  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28670  018868  6EFF               	movwf	tosu,c
 28671  01886A  50FA               	movf	pclath,w,c
 28672  01886C  0012               	return		;indir
 28673  01886E                     i2u912_49:
 28674  01886E  0060  F110  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 28675  018874  0060  F10C  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 28676  01887A  0060  F108  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 28677  018880  0060  F104  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 28678  018886  0060  F100  F001   	movff	??_ADCC_ThresholdISR,btemp
 28679  01888C  0011               	retfie		f
 28680  01888E                     __end_of_ADCC_ThresholdISR:
 28681                           	opt callstack 0
 28682                           
 28683 ;; *************** function _UART1_tx_vect_isr *****************
 28684 ;; Defined at:
 28685 ;;		line 199 in file "mcc_generated_files/uart1.c"
 28686 ;; Parameters:    Size  Location     Type
 28687 ;;		None
 28688 ;; Auto vars:     Size  Location     Type
 28689 ;;		None
 28690 ;; Return value:  Size  Location     Type
 28691 ;;                  1    wreg      void 
 28692 ;; Registers used:
 28693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28694 ;; Tracked objects:
 28695 ;;		On entry : 0/0
 28696 ;;		On exit  : 0/0
 28697 ;;		Unchanged: 0/0
 28698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28703 ;;Total ram usage:        0 bytes
 28704 ;; Hardware stack levels used:    1
 28705 ;; Hardware stack levels required when called:    1
 28706 ;; This function calls:
 28707 ;;		Absolute function
 28708 ;;		_UART1_Transmit_ISR
 28709 ;; This function is called by:
 28710 ;;		Interrupt level 2
 28711 ;; This function uses a non-reentrant model
 28712 ;;
 28713                           
 28714                           	psect	text148
 28715  0195A8                     __ptext148:
 28716                           	opt callstack 0
 28717  0195A8                     _UART1_tx_vect_isr:
 28718                           	opt callstack 12
 28719                           
 28720                           ;incstack = 0
 28721  0195A8  EE14  F016         	lfsr	1,___inthi_sp
 28722                           
 28723                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 28724  0195AC  0100               	movlb	0	; () banked
 28725  0195AE  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28726  0195B0  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28727  0195B2  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28728  0195B4  B4D8               	btfsc	status,2,c
 28729  0195B6  0011               	retfie		f
 28730                           
 28731                           ; BSR set to: 0
 28732                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 28733  0195B8  D801               	call	i2u914_48
 28734  0195BA  0011               	retfie		f
 28735  0195BC                     i2u914_48:
 28736  0195BC  0005               	push	
 28737  0195BE  6EFA               	movwf	pclath,c
 28738  0195C0  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28739  0195C2  6EFD               	movwf	tosl,c
 28740  0195C4  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28741  0195C6  6EFE               	movwf	tosh,c
 28742  0195C8  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28743  0195CA  6EFF               	movwf	tosu,c
 28744  0195CC  50FA               	movf	pclath,w,c
 28745  0195CE  0012               	return		;indir
 28746  0195D0                     __end_of_UART1_tx_vect_isr:
 28747                           	opt callstack 0
 28748                           
 28749 ;; *************** function _UART1_Transmit_ISR *****************
 28750 ;; Defined at:
 28751 ;;		line 213 in file "mcc_generated_files/uart1.c"
 28752 ;; Parameters:    Size  Location     Type
 28753 ;;		None
 28754 ;; Auto vars:     Size  Location     Type
 28755 ;;		None
 28756 ;; Return value:  Size  Location     Type
 28757 ;;                  1  [STACK] void 
 28758 ;; Registers used:
 28759 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28760 ;; Tracked objects:
 28761 ;;		On entry : 3F/0
 28762 ;;		On exit  : 3B/39
 28763 ;;		Unchanged: 0/0
 28764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28769 ;;Total ram usage:        0 bytes
 28770 ;; Hardware stack levels used:    1
 28771 ;; This function calls:
 28772 ;;		Nothing
 28773 ;; This function is called by:
 28774 ;;		_UART1_Initialize
 28775 ;;		_UART1_tx_vect_isr
 28776 ;; This function uses a reentrant model
 28777 ;;
 28778                           
 28779                           	psect	text149
 28780  01927C                     __ptext149:
 28781                           	opt callstack 0
 28782  01927C                     _UART1_Transmit_ISR:
 28783                           	opt callstack 12
 28784                           
 28785                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 28786                           
 28787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28788                           ;incstack = 0
 28789  01927C  0E40               	movlw	64
 28790  01927E  603D               	cpfslt	_uart1TxBufferRemaining^0,c
 28791  019280  D010               	goto	l583
 28792                           
 28793                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 28794  019282  0E54               	movlw	low _uart1TxBuffer
 28795  019284  243E               	addwf	_uart1TxTail^0,w,c	;volatile
 28796  019286  6ED9               	movwf	fsr2l,c
 28797  019288  6ADA               	clrf	fsr2h,c
 28798  01928A  0E03               	movlw	high _uart1TxBuffer
 28799  01928C  22DA               	addwfc	fsr2h,f,c
 28800  01928E  50DF               	movf	indf2,w,c
 28801  019290  013D               	movlb	61	; () banked
 28802  019292  6FEA               	movwf	234,b	;volatile
 28803                           
 28804                           ; BSR set to: 61
 28805  019294  2A3E               	incf	_uart1TxTail^0,f,c	;volatile
 28806                           
 28807                           ; BSR set to: 61
 28808                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 28809  019296  0E3F               	movlw	63
 28810  019298  643E               	cpfsgt	_uart1TxTail^0,c
 28811  01929A  D001               	goto	l9616
 28812                           
 28813                           ; BSR set to: 61
 28814                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 28815  01929C  6A3E               	clrf	_uart1TxTail^0,c	;volatile
 28816  01929E                     l9616:
 28817                           
 28818                           ; BSR set to: 61
 28819                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 28820  01929E  2A3D               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 28821                           
 28822                           ;mcc_generated_files/uart1.c: 222:  } else {
 28823  0192A0  0012               	return	
 28824  0192A2                     l583:
 28825                           
 28826                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 28827  0192A2  0139               	movlb	57	; () banked
 28828  0192A4  9993               	bcf	147,4,b	;volatile
 28829                           
 28830                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28831  0192A6  0012               	return		;funcret
 28832  0192A8                     __end_of_UART1_Transmit_ISR:
 28833                           	opt callstack 0
 28834                           
 28835 ;; *************** function _UART1_rx_vect_isr *****************
 28836 ;; Defined at:
 28837 ;;		line 206 in file "mcc_generated_files/uart1.c"
 28838 ;; Parameters:    Size  Location     Type
 28839 ;;		None
 28840 ;; Auto vars:     Size  Location     Type
 28841 ;;		None
 28842 ;; Return value:  Size  Location     Type
 28843 ;;                  1    wreg      void 
 28844 ;; Registers used:
 28845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28846 ;; Tracked objects:
 28847 ;;		On entry : 0/0
 28848 ;;		On exit  : 0/0
 28849 ;;		Unchanged: 0/0
 28850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28855 ;;Total ram usage:        0 bytes
 28856 ;; Hardware stack levels used:    1
 28857 ;; Hardware stack levels required when called:    1
 28858 ;; This function calls:
 28859 ;;		Absolute function
 28860 ;;		_UART1_Receive_ISR
 28861 ;; This function is called by:
 28862 ;;		Interrupt level 2
 28863 ;; This function uses a non-reentrant model
 28864 ;;
 28865                           
 28866                           	psect	text150
 28867  0195D0                     __ptext150:
 28868                           	opt callstack 0
 28869  0195D0                     _UART1_rx_vect_isr:
 28870                           	opt callstack 12
 28871                           
 28872                           ;incstack = 0
 28873  0195D0  EE14  F016         	lfsr	1,___inthi_sp
 28874                           
 28875                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28876  0195D4  0100               	movlb	0	; () banked
 28877  0195D6  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28878  0195D8  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28879  0195DA  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28880  0195DC  B4D8               	btfsc	status,2,c
 28881  0195DE  0011               	retfie		f
 28882                           
 28883                           ; BSR set to: 0
 28884                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28885  0195E0  D801               	call	i2u916_48
 28886  0195E2  0011               	retfie		f
 28887  0195E4                     i2u916_48:
 28888  0195E4  0005               	push	
 28889  0195E6  6EFA               	movwf	pclath,c
 28890  0195E8  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28891  0195EA  6EFD               	movwf	tosl,c
 28892  0195EC  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28893  0195EE  6EFE               	movwf	tosh,c
 28894  0195F0  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28895  0195F2  6EFF               	movwf	tosu,c
 28896  0195F4  50FA               	movf	pclath,w,c
 28897  0195F6  0012               	return		;indir
 28898  0195F8                     __end_of_UART1_rx_vect_isr:
 28899                           	opt callstack 0
 28900                           
 28901 ;; *************** function _UART1_Receive_ISR *****************
 28902 ;; Defined at:
 28903 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28904 ;; Parameters:    Size  Location     Type
 28905 ;;		None
 28906 ;; Auto vars:     Size  Location     Type
 28907 ;;		None
 28908 ;; Return value:  Size  Location     Type
 28909 ;;                  1  [STACK] void 
 28910 ;; Registers used:
 28911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28912 ;; Tracked objects:
 28913 ;;		On entry : 3F/0
 28914 ;;		On exit  : 0/0
 28915 ;;		Unchanged: 0/0
 28916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28921 ;;Total ram usage:        0 bytes
 28922 ;; Hardware stack levels used:    1
 28923 ;; This function calls:
 28924 ;;		Nothing
 28925 ;; This function is called by:
 28926 ;;		_UART1_Initialize
 28927 ;;		_UART1_rx_vect_isr
 28928 ;; This function uses a reentrant model
 28929 ;;
 28930                           
 28931                           	psect	text151
 28932  0197FC                     __ptext151:
 28933                           	opt callstack 0
 28934  0197FC                     _UART1_Receive_ISR:
 28935                           	opt callstack 12
 28936                           
 28937                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28938                           
 28939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28940                           ;incstack = 0
 28941  0197FC  0E00               	movlw	low _uart1RxBuffer
 28942  0197FE  243C               	addwf	_uart1RxHead^0,w,c	;volatile
 28943  019800  6ED9               	movwf	fsr2l,c
 28944  019802  6ADA               	clrf	fsr2h,c
 28945  019804  0E05               	movlw	high _uart1RxBuffer
 28946  019806  22DA               	addwfc	fsr2h,f,c
 28947  019808  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28948  01980E  2A3C               	incf	_uart1RxHead^0,f,c	;volatile
 28949                           
 28950                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28951  019810  283C               	incf	_uart1RxHead^0,w,c
 28952  019812  B4D8               	btfsc	status,2,c
 28953                           
 28954                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28955  019814  6A3C               	clrf	_uart1RxHead^0,c	;volatile
 28956                           
 28957                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28958  019816  2A3A               	incf	_uart1RxCount^0,f,c	;volatile
 28959                           
 28960                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28961  019818  0012               	return		;funcret
 28962  01981A                     __end_of_UART1_Receive_ISR:
 28963                           	opt callstack 0
 28964                           
 28965 ;; *************** function _UART2_tx_vect_isr *****************
 28966 ;; Defined at:
 28967 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28968 ;; Parameters:    Size  Location     Type
 28969 ;;		None
 28970 ;; Auto vars:     Size  Location     Type
 28971 ;;		None
 28972 ;; Return value:  Size  Location     Type
 28973 ;;                  1    wreg      void 
 28974 ;; Registers used:
 28975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28976 ;; Tracked objects:
 28977 ;;		On entry : 0/0
 28978 ;;		On exit  : 0/0
 28979 ;;		Unchanged: 0/0
 28980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28985 ;;Total ram usage:        0 bytes
 28986 ;; Hardware stack levels used:    1
 28987 ;; Hardware stack levels required when called:    1
 28988 ;; This function calls:
 28989 ;;		Absolute function
 28990 ;;		_UART2_Transmit_ISR
 28991 ;; This function is called by:
 28992 ;;		Interrupt level 2
 28993 ;; This function uses a non-reentrant model
 28994 ;;
 28995                           
 28996                           	psect	text152
 28997  0195F8                     __ptext152:
 28998                           	opt callstack 0
 28999  0195F8                     _UART2_tx_vect_isr:
 29000                           	opt callstack 12
 29001                           
 29002                           ;incstack = 0
 29003  0195F8  EE14  F016         	lfsr	1,___inthi_sp
 29004                           
 29005                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 29006  0195FC  0100               	movlb	0	; () banked
 29007  0195FE  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29008  019600  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29009  019602  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29010  019604  B4D8               	btfsc	status,2,c
 29011  019606  0011               	retfie		f
 29012                           
 29013                           ; BSR set to: 0
 29014                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 29015  019608  D801               	call	i2u918_48
 29016  01960A  0011               	retfie		f
 29017  01960C                     i2u918_48:
 29018  01960C  0005               	push	
 29019  01960E  6EFA               	movwf	pclath,c
 29020  019610  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29021  019612  6EFD               	movwf	tosl,c
 29022  019614  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29023  019616  6EFE               	movwf	tosh,c
 29024  019618  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29025  01961A  6EFF               	movwf	tosu,c
 29026  01961C  50FA               	movf	pclath,w,c
 29027  01961E  0012               	return		;indir
 29028  019620                     __end_of_UART2_tx_vect_isr:
 29029                           	opt callstack 0
 29030                           
 29031 ;; *************** function _UART2_Transmit_ISR *****************
 29032 ;; Defined at:
 29033 ;;		line 213 in file "mcc_generated_files/uart2.c"
 29034 ;; Parameters:    Size  Location     Type
 29035 ;;		None
 29036 ;; Auto vars:     Size  Location     Type
 29037 ;;		None
 29038 ;; Return value:  Size  Location     Type
 29039 ;;                  1  [STACK] void 
 29040 ;; Registers used:
 29041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29042 ;; Tracked objects:
 29043 ;;		On entry : 3F/0
 29044 ;;		On exit  : 3B/39
 29045 ;;		Unchanged: 0/0
 29046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29051 ;;Total ram usage:        0 bytes
 29052 ;; Hardware stack levels used:    1
 29053 ;; This function calls:
 29054 ;;		Nothing
 29055 ;; This function is called by:
 29056 ;;		_UART2_Initialize
 29057 ;;		_UART2_tx_vect_isr
 29058 ;; This function uses a reentrant model
 29059 ;;
 29060                           
 29061                           	psect	text153
 29062  0192A8                     __ptext153:
 29063                           	opt callstack 0
 29064  0192A8                     _UART2_Transmit_ISR:
 29065                           	opt callstack 12
 29066                           
 29067                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 29068                           
 29069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29070                           ;incstack = 0
 29071  0192A8  0E40               	movlw	64
 29072  0192AA  6037               	cpfslt	_uart2TxBufferRemaining^0,c
 29073  0192AC  D010               	goto	l703
 29074                           
 29075                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 29076  0192AE  0E00               	movlw	low _uart2TxBuffer
 29077  0192B0  2438               	addwf	_uart2TxTail^0,w,c	;volatile
 29078  0192B2  6ED9               	movwf	fsr2l,c
 29079  0192B4  6ADA               	clrf	fsr2h,c
 29080  0192B6  0E04               	movlw	high _uart2TxBuffer
 29081  0192B8  22DA               	addwfc	fsr2h,f,c
 29082  0192BA  50DF               	movf	indf2,w,c
 29083  0192BC  013D               	movlb	61	; () banked
 29084  0192BE  6FD2               	movwf	210,b	;volatile
 29085                           
 29086                           ; BSR set to: 61
 29087  0192C0  2A38               	incf	_uart2TxTail^0,f,c	;volatile
 29088                           
 29089                           ; BSR set to: 61
 29090                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 29091  0192C2  0E3F               	movlw	63
 29092  0192C4  6438               	cpfsgt	_uart2TxTail^0,c
 29093  0192C6  D001               	goto	l9638
 29094                           
 29095                           ; BSR set to: 61
 29096                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 29097  0192C8  6A38               	clrf	_uart2TxTail^0,c	;volatile
 29098  0192CA                     l9638:
 29099                           
 29100                           ; BSR set to: 61
 29101                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 29102  0192CA  2A37               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 29103                           
 29104                           ;mcc_generated_files/uart2.c: 224:     }
 29105  0192CC  0012               	return	
 29106  0192CE                     l703:
 29107                           
 29108                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 29109  0192CE  0139               	movlb	57	; () banked
 29110  0192D0  9796               	bcf	150,3,b	;volatile
 29111                           
 29112                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 29113  0192D2  0012               	return		;funcret
 29114  0192D4                     __end_of_UART2_Transmit_ISR:
 29115                           	opt callstack 0
 29116                           
 29117 ;; *************** function _UART2_rx_vect_isr *****************
 29118 ;; Defined at:
 29119 ;;		line 203 in file "mcc_generated_files/uart2.c"
 29120 ;; Parameters:    Size  Location     Type
 29121 ;;		None
 29122 ;; Auto vars:     Size  Location     Type
 29123 ;;		None
 29124 ;; Return value:  Size  Location     Type
 29125 ;;                  1    wreg      void 
 29126 ;; Registers used:
 29127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29128 ;; Tracked objects:
 29129 ;;		On entry : 0/0
 29130 ;;		On exit  : 0/0
 29131 ;;		Unchanged: 0/0
 29132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29137 ;;Total ram usage:        0 bytes
 29138 ;; Hardware stack levels used:    1
 29139 ;; Hardware stack levels required when called:    1
 29140 ;; This function calls:
 29141 ;;		Absolute function
 29142 ;;		_UART2_Receive_ISR
 29143 ;; This function is called by:
 29144 ;;		Interrupt level 2
 29145 ;; This function uses a non-reentrant model
 29146 ;;
 29147                           
 29148                           	psect	text154
 29149  019620                     __ptext154:
 29150                           	opt callstack 0
 29151  019620                     _UART2_rx_vect_isr:
 29152                           	opt callstack 12
 29153                           
 29154                           ;incstack = 0
 29155  019620  EE14  F016         	lfsr	1,___inthi_sp
 29156                           
 29157                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 29158  019624  0100               	movlb	0	; () banked
 29159  019626  51C1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 29160  019628  11C2               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 29161  01962A  11C3               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 29162  01962C  B4D8               	btfsc	status,2,c
 29163  01962E  0011               	retfie		f
 29164                           
 29165                           ; BSR set to: 0
 29166                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 29167  019630  D801               	call	i2u920_48
 29168  019632  0011               	retfie		f
 29169  019634                     i2u920_48:
 29170  019634  0005               	push	
 29171  019636  6EFA               	movwf	pclath,c
 29172  019638  51C1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 29173  01963A  6EFD               	movwf	tosl,c
 29174  01963C  51C2               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 29175  01963E  6EFE               	movwf	tosh,c
 29176  019640  51C3               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 29177  019642  6EFF               	movwf	tosu,c
 29178  019644  50FA               	movf	pclath,w,c
 29179  019646  0012               	return		;indir
 29180  019648                     __end_of_UART2_rx_vect_isr:
 29181                           	opt callstack 0
 29182                           
 29183 ;; *************** function _UART2_Receive_ISR *****************
 29184 ;; Defined at:
 29185 ;;		line 233 in file "mcc_generated_files/uart2.c"
 29186 ;; Parameters:    Size  Location     Type
 29187 ;;		None
 29188 ;; Auto vars:     Size  Location     Type
 29189 ;;		None
 29190 ;; Return value:  Size  Location     Type
 29191 ;;                  1  [STACK] void 
 29192 ;; Registers used:
 29193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29194 ;; Tracked objects:
 29195 ;;		On entry : 3F/0
 29196 ;;		On exit  : 0/0
 29197 ;;		Unchanged: 0/0
 29198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29203 ;;Total ram usage:        0 bytes
 29204 ;; Hardware stack levels used:    1
 29205 ;; This function calls:
 29206 ;;		Nothing
 29207 ;; This function is called by:
 29208 ;;		_UART2_Initialize
 29209 ;;		_UART2_rx_vect_isr
 29210 ;; This function uses a reentrant model
 29211 ;;
 29212                           
 29213                           	psect	text155
 29214  01981A                     __ptext155:
 29215                           	opt callstack 0
 29216  01981A                     _UART2_Receive_ISR:
 29217                           	opt callstack 12
 29218                           
 29219                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 29220                           
 29221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29222                           ;incstack = 0
 29223  01981A  0E00               	movlw	low _uart2RxBuffer
 29224  01981C  2436               	addwf	_uart2RxHead^0,w,c	;volatile
 29225  01981E  6ED9               	movwf	fsr2l,c
 29226  019820  6ADA               	clrf	fsr2h,c
 29227  019822  0E06               	movlw	high _uart2RxBuffer
 29228  019824  22DA               	addwfc	fsr2h,f,c
 29229  019826  006F F743 FFDF     	movff	15824,indf2	;volatile
 29230  01982C  2A36               	incf	_uart2RxHead^0,f,c	;volatile
 29231                           
 29232                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 29233  01982E  2836               	incf	_uart2RxHead^0,w,c
 29234  019830  B4D8               	btfsc	status,2,c
 29235                           
 29236                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 29237  019832  6A36               	clrf	_uart2RxHead^0,c	;volatile
 29238                           
 29239                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 29240  019834  2A34               	incf	_uart2RxCount^0,f,c	;volatile
 29241                           
 29242                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29243  019836  0012               	return		;funcret
 29244  019838                     __end_of_UART2_Receive_ISR:
 29245                           	opt callstack 0
 29246                           
 29247 ;; *************** function _TMR6_ISR *****************
 29248 ;; Defined at:
 29249 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 29250 ;; Parameters:    Size  Location     Type
 29251 ;;		None
 29252 ;; Auto vars:     Size  Location     Type
 29253 ;;		None
 29254 ;; Return value:  Size  Location     Type
 29255 ;;                  1    wreg      void 
 29256 ;; Registers used:
 29257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 29258 ;; Tracked objects:
 29259 ;;		On entry : 0/0
 29260 ;;		On exit  : 0/0
 29261 ;;		Unchanged: 0/0
 29262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29267 ;;Total ram usage:        1 bytes
 29268 ;; Hardware stack levels used:    1
 29269 ;; Hardware stack levels required when called:    2
 29270 ;; This function calls:
 29271 ;;		_TMR6_CallBack
 29272 ;; This function is called by:
 29273 ;;		Interrupt level 2
 29274 ;; This function uses a non-reentrant model
 29275 ;;
 29276                           
 29277                           	psect	text156
 29278  019870                     __ptext156:
 29279                           	opt callstack 0
 29280  019870                     _TMR6_ISR:
 29281                           	opt callstack 11
 29282                           
 29283                           ;incstack = 0
 29284  019870  0060  F004  F045   	movff	btemp,??_TMR6_ISR
 29285  019876  EE14  F016         	lfsr	1,___inthi_sp
 29286                           
 29287                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 29288  01987A  0139               	movlb	57	; () banked
 29289  01987C  91A9               	bcf	169,0,b	;volatile
 29290                           
 29291                           ; BSR set to: 57
 29292                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 29293  01987E  EC7E  F0CB         	call	_TMR6_CallBack	;wreg free
 29294  019882  0060  F114  F001   	movff	??_TMR6_ISR,btemp
 29295  019888  0011               	retfie		f
 29296  01988A                     __end_of_TMR6_ISR:
 29297                           	opt callstack 0
 29298                           
 29299 ;; *************** function _TMR6_CallBack *****************
 29300 ;; Defined at:
 29301 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 29302 ;; Parameters:    Size  Location     Type
 29303 ;;		None
 29304 ;; Auto vars:     Size  Location     Type
 29305 ;;		None
 29306 ;; Return value:  Size  Location     Type
 29307 ;;                  1  [STACK] void 
 29308 ;; Registers used:
 29309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 29310 ;; Tracked objects:
 29311 ;;		On entry : 3F/39
 29312 ;;		On exit  : 0/0
 29313 ;;		Unchanged: 0/0
 29314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29319 ;;Total ram usage:        0 bytes
 29320 ;; Hardware stack levels used:    1
 29321 ;; Hardware stack levels required when called:    1
 29322 ;; This function calls:
 29323 ;;		Absolute function
 29324 ;;		_TMR6_DefaultInterruptHandler
 29325 ;; This function is called by:
 29326 ;;		_TMR6_ISR
 29327 ;; This function uses a reentrant model
 29328 ;;
 29329                           
 29330                           	psect	text157
 29331  0196FC                     __ptext157:
 29332                           	opt callstack 0
 29333  0196FC                     _TMR6_CallBack:
 29334                           	opt callstack 11
 29335                           
 29336                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 29337                           
 29338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29339                           ;incstack = 0
 29340  0196FC  0100               	movlb	0	; () banked
 29341  0196FE  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 29342  019700  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 29343  019702  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 29344  019704  B4D8               	btfsc	status,2,c
 29345  019706  0012               	return	
 29346                           
 29347                           ; BSR set to: 0
 29348                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 29349  019708  D801               	call	u883_48
 29350  01970A  0012               	return	
 29351  01970C                     u883_48:
 29352  01970C  0005               	push	
 29353  01970E  6EFA               	movwf	pclath,c
 29354  019710  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 29355  019712  6EFD               	movwf	tosl,c
 29356  019714  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 29357  019716  6EFE               	movwf	tosh,c
 29358  019718  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 29359  01971A  6EFF               	movwf	tosu,c
 29360  01971C  50FA               	movf	pclath,w,c
 29361  01971E  0012               	return		;indir
 29362  019720                     __end_of_TMR6_CallBack:
 29363                           	opt callstack 0
 29364                           
 29365 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 29366 ;; Defined at:
 29367 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 29368 ;; Parameters:    Size  Location     Type
 29369 ;;		None
 29370 ;; Auto vars:     Size  Location     Type
 29371 ;;  i               1  [STACK] unsigned char 
 29372 ;; Return value:  Size  Location     Type
 29373 ;;                  1  [STACK] void 
 29374 ;; Registers used:
 29375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 29376 ;; Tracked objects:
 29377 ;;		On entry : 3F/0
 29378 ;;		On exit  : 0/0
 29379 ;;		Unchanged: 0/0
 29380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29385 ;;Total ram usage:        0 bytes
 29386 ;; Hardware stack levels used:    1
 29387 ;; This function calls:
 29388 ;;		Nothing
 29389 ;; This function is called by:
 29390 ;;		_TMR6_Initialize
 29391 ;;		_TMR6_CallBack
 29392 ;; This function uses a reentrant model
 29393 ;;
 29394                           
 29395                           	psect	text158
 29396  018C92                     __ptext158:
 29397                           	opt callstack 0
 29398  018C92                     _TMR6_DefaultInterruptHandler:
 29399                           	opt callstack 0
 29400                           
 29401                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29402  018C92  52E6               	movf	postinc1,f,c
 29403                           
 29404                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 29405                           ;stkvar	_i @ sp[(-1)+0]
 29406                           
 29407                           ;incstack = 0
 29408  018C94  0EFF               	movlw	-1
 29409  018C96  6AE3               	clrf	plusw1,c
 29410  018C98                     l9252:
 29411                           
 29412                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 29413                           ;stkvar	_i @ sp[(-1)+0]
 29414  018C98  0EFF               	movlw	-1
 29415  018C9A  50E3               	movf	plusw1,w,c
 29416  018C9C  0D02               	mullw	2
 29417  018C9E  0ED3               	movlw	low _tickCount
 29418  018CA0  24F3               	addwf	243,w,c
 29419  018CA2  6ED9               	movwf	fsr2l,c
 29420  018CA4  0E01               	movlw	high _tickCount
 29421  018CA6  20F4               	addwfc	prodh,w,c
 29422  018CA8  6EDA               	movwf	fsr2h,c
 29423  018CAA  50DE               	movf	postinc2,w,c
 29424  018CAC  10DE               	iorwf	postinc2,w,c
 29425  018CAE  B4D8               	btfsc	status,2,c
 29426  018CB0  D00C               	goto	l9256
 29427                           
 29428                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 29429                           ;stkvar	_i @ sp[(-1)+0]
 29430  018CB2  0EFF               	movlw	-1
 29431  018CB4  50E3               	movf	plusw1,w,c
 29432  018CB6  0D02               	mullw	2
 29433  018CB8  0ED3               	movlw	low _tickCount
 29434  018CBA  24F3               	addwf	243,w,c
 29435  018CBC  6ED9               	movwf	fsr2l,c
 29436  018CBE  0E01               	movlw	high _tickCount
 29437  018CC0  20F4               	addwfc	prodh,w,c
 29438  018CC2  6EDA               	movwf	fsr2h,c
 29439  018CC4  06DE               	decf	postinc2,f,c
 29440  018CC6  0E00               	movlw	0
 29441  018CC8  5ADD               	subwfb	postdec2,f,c
 29442  018CCA                     l9256:
 29443                           
 29444                           ;mcc_generated_files/tmr6.c: 207:  }
 29445                           ;stkvar	_i @ sp[(-1)+0]
 29446  018CCA  0EFF               	movlw	-1
 29447  018CCC  2AE3               	incf	plusw1,f,c
 29448                           
 29449                           ;stkvar	_i @ sp[(-1)+0]
 29450  018CCE  0EFF               	movlw	-1
 29451  018CD0  006F FF8C  F001    	movff	plusw1,btemp
 29452  018CD6  0E0B               	movlw	11
 29453  018CD8  6401               	cpfsgt	btemp^0,c
 29454  018CDA  D7DE               	goto	l9252
 29455                           
 29456                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29457  018CDC  52E5               	movf	postdec1,f,c
 29458  018CDE  0012               	return		;funcret
 29459  018CE0                     __end_of_TMR6_DefaultInterruptHandler:
 29460                           	opt callstack 0
 29461                           
 29462 ;; *************** function _DMA1_DMASCNT_ISR *****************
 29463 ;; Defined at:
 29464 ;;		line 126 in file "mcc_generated_files/dma1.c"
 29465 ;; Parameters:    Size  Location     Type
 29466 ;;		None
 29467 ;; Auto vars:     Size  Location     Type
 29468 ;;		None
 29469 ;; Return value:  Size  Location     Type
 29470 ;;                  1    wreg      void 
 29471 ;; Registers used:
 29472 ;;		None
 29473 ;; Tracked objects:
 29474 ;;		On entry : 0/0
 29475 ;;		On exit  : 3F/0
 29476 ;;		Unchanged: 0/0
 29477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29482 ;;Total ram usage:        0 bytes
 29483 ;; Hardware stack levels used:    1
 29484 ;; This function calls:
 29485 ;;		Nothing
 29486 ;; This function is called by:
 29487 ;;		Interrupt level 2
 29488 ;; This function uses a non-reentrant model
 29489 ;;
 29490                           
 29491                           	psect	text159
 29492  019960                     __ptext159:
 29493                           	opt callstack 0
 29494  019960                     _DMA1_DMASCNT_ISR:
 29495                           	opt callstack 13
 29496                           
 29497                           ;incstack = 0
 29498  019960  EE14  F016         	lfsr	1,___inthi_sp
 29499                           
 29500                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 29501  019964  0139               	movlb	57	; () banked
 29502  019966  91A2               	bcf	162,0,b	;volatile
 29503                           
 29504                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 29505  019968  0100               	movlb	0	; () banked
 29506  01996A  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 29507                           
 29508                           ; BSR set to: 0
 29509  01996C  0011               	retfie		f
 29510  01996E                     __end_of_DMA1_DMASCNT_ISR:
 29511                           	opt callstack 0
 29512                           
 29513 ;; *************** function _DMA1_DMADCNT_ISR *****************
 29514 ;; Defined at:
 29515 ;;		line 134 in file "mcc_generated_files/dma1.c"
 29516 ;; Parameters:    Size  Location     Type
 29517 ;;		None
 29518 ;; Auto vars:     Size  Location     Type
 29519 ;;		None
 29520 ;; Return value:  Size  Location     Type
 29521 ;;                  1    wreg      void 
 29522 ;; Registers used:
 29523 ;;		None
 29524 ;; Tracked objects:
 29525 ;;		On entry : 0/0
 29526 ;;		On exit  : 3F/39
 29527 ;;		Unchanged: 0/0
 29528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29533 ;;Total ram usage:        0 bytes
 29534 ;; Hardware stack levels used:    1
 29535 ;; This function calls:
 29536 ;;		Nothing
 29537 ;; This function is called by:
 29538 ;;		Interrupt level 2
 29539 ;; This function uses a non-reentrant model
 29540 ;;
 29541                           
 29542                           	psect	text160
 29543  019978                     __ptext160:
 29544                           	opt callstack 0
 29545  019978                     _DMA1_DMADCNT_ISR:
 29546                           	opt callstack 13
 29547                           
 29548                           ; BSR set to: 0
 29549                           ;incstack = 0
 29550  019978  EE14  F016         	lfsr	1,___inthi_sp
 29551                           
 29552                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 29553  01997C  0139               	movlb	57	; () banked
 29554  01997E  93A2               	bcf	162,1,b	;volatile
 29555                           
 29556                           ; BSR set to: 57
 29557  019980  0011               	retfie		f
 29558  019982                     __end_of_DMA1_DMADCNT_ISR:
 29559                           	opt callstack 0
 29560                           
 29561 ;; *************** function _DMA1_DMAA_ISR *****************
 29562 ;; Defined at:
 29563 ;;		line 144 in file "mcc_generated_files/dma1.c"
 29564 ;; Parameters:    Size  Location     Type
 29565 ;;		None
 29566 ;; Auto vars:     Size  Location     Type
 29567 ;;		None
 29568 ;; Return value:  Size  Location     Type
 29569 ;;                  1    wreg      void 
 29570 ;; Registers used:
 29571 ;;		None
 29572 ;; Tracked objects:
 29573 ;;		On entry : 0/0
 29574 ;;		On exit  : 3F/39
 29575 ;;		Unchanged: 0/0
 29576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29581 ;;Total ram usage:        0 bytes
 29582 ;; Hardware stack levels used:    1
 29583 ;; This function calls:
 29584 ;;		Nothing
 29585 ;; This function is called by:
 29586 ;;		Interrupt level 2
 29587 ;; This function uses a non-reentrant model
 29588 ;;
 29589                           
 29590                           	psect	text161
 29591  019984                     __ptext161:
 29592                           	opt callstack 0
 29593  019984                     _DMA1_DMAA_ISR:
 29594                           	opt callstack 13
 29595                           
 29596                           ; BSR set to: 57
 29597                           ;incstack = 0
 29598  019984  EE14  F016         	lfsr	1,___inthi_sp
 29599                           
 29600                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 29601  019988  0139               	movlb	57	; () banked
 29602  01998A  97A2               	bcf	162,3,b	;volatile
 29603                           
 29604                           ; BSR set to: 57
 29605  01998C  0011               	retfie		f
 29606  01998E                     __end_of_DMA1_DMAA_ISR:
 29607                           	opt callstack 0
 29608                           
 29609 ;; *************** function _DMA1_DMAOR_ISR *****************
 29610 ;; Defined at:
 29611 ;;		line 155 in file "mcc_generated_files/dma1.c"
 29612 ;; Parameters:    Size  Location     Type
 29613 ;;		None
 29614 ;; Auto vars:     Size  Location     Type
 29615 ;;		None
 29616 ;; Return value:  Size  Location     Type
 29617 ;;                  1    wreg      void 
 29618 ;; Registers used:
 29619 ;;		None
 29620 ;; Tracked objects:
 29621 ;;		On entry : 0/0
 29622 ;;		On exit  : 3F/39
 29623 ;;		Unchanged: 0/0
 29624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29629 ;;Total ram usage:        0 bytes
 29630 ;; Hardware stack levels used:    1
 29631 ;; This function calls:
 29632 ;;		Nothing
 29633 ;; This function is called by:
 29634 ;;		Interrupt level 2
 29635 ;; This function uses a non-reentrant model
 29636 ;;
 29637                           
 29638                           	psect	text162
 29639  019990                     __ptext162:
 29640                           	opt callstack 0
 29641  019990                     _DMA1_DMAOR_ISR:
 29642                           	opt callstack 13
 29643                           
 29644                           ; BSR set to: 57
 29645                           ;incstack = 0
 29646  019990  EE14  F016         	lfsr	1,___inthi_sp
 29647                           
 29648                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 29649  019994  0139               	movlb	57	; () banked
 29650  019996  95A2               	bcf	162,2,b	;volatile
 29651                           
 29652                           ; BSR set to: 57
 29653  019998  0011               	retfie		f
 29654  01999A                     __end_of_DMA1_DMAOR_ISR:
 29655                           	opt callstack 0
 29656                           
 29657                           ;
 29658                           ; Interrupt Vector Table @ 0x8
 29659                           ;
 29660                           
 29661                           	psect	ivt0x8
 29662  000008                     __pivt0x8:
 29663                           	opt callstack 0
 29664  000008                     ivt0x8_base:
 29665                           	opt callstack 0
 29666                           
 29667                           ; Vector 0 : SWINT
 29668  000008  6677               	dw	_Default_ISR shr (0+2)
 29669                           
 29670                           ; Vector 1 : HLVD
 29671  00000A  6677               	dw	_Default_ISR shr (0+2)
 29672                           
 29673                           ; Vector 2 : OSF
 29674  00000C  6677               	dw	_Default_ISR shr (0+2)
 29675                           
 29676                           ; Vector 3 : CSW
 29677  00000E  6677               	dw	_Default_ISR shr (0+2)
 29678                           
 29679                           ; Vector 4 : NVM
 29680  000010  6677               	dw	_Default_ISR shr (0+2)
 29681                           
 29682                           ; Vector 5 : SCAN
 29683  000012  6677               	dw	_Default_ISR shr (0+2)
 29684                           
 29685                           ; Vector 6 : CRC
 29686  000014  6677               	dw	_Default_ISR shr (0+2)
 29687                           
 29688                           ; Vector 7 : IOC
 29689  000016  6677               	dw	_Default_ISR shr (0+2)
 29690                           
 29691                           ; Vector 8 : INT0
 29692  000018  6654               	dw	_INT0_ISR shr (0+2)
 29693                           
 29694                           ; Vector 9 : ZCD
 29695  00001A  6677               	dw	_Default_ISR shr (0+2)
 29696                           
 29697                           ; Vector 10 : AD
 29698  00001C  6494               	dw	_ADCC_ISR shr (0+2)
 29699                           
 29700                           ; Vector 11 : ADT
 29701  00001E  6209               	dw	_ADCC_ThresholdISR shr (0+2)
 29702                           
 29703                           ; Vector 12 : CMP1
 29704  000020  6677               	dw	_Default_ISR shr (0+2)
 29705                           
 29706                           ; Vector 13 : SMT1
 29707  000022  6677               	dw	_Default_ISR shr (0+2)
 29708                           
 29709                           ; Vector 14 : SMT1PRA
 29710  000024  6677               	dw	_Default_ISR shr (0+2)
 29711                           
 29712                           ; Vector 15 : SMT1PRW
 29713  000026  6677               	dw	_Default_ISR shr (0+2)
 29714                           
 29715                           ; Vector 16 : DMA1SCNT
 29716  000028  6658               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 29717                           
 29718                           ; Vector 17 : DMA1DCNT
 29719  00002A  665E               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 29720                           
 29721                           ; Vector 18 : DMA1OR
 29722  00002C  6664               	dw	_DMA1_DMAOR_ISR shr (0+2)
 29723                           
 29724                           ; Vector 19 : DMA1A
 29725  00002E  6661               	dw	_DMA1_DMAA_ISR shr (0+2)
 29726                           
 29727                           ; Vector 20 : SPI1RX
 29728  000030  6677               	dw	_Default_ISR shr (0+2)
 29729                           
 29730                           ; Vector 21 : SPI1TX
 29731  000032  6677               	dw	_Default_ISR shr (0+2)
 29732                           
 29733                           ; Vector 22 : SPI1
 29734  000034  6677               	dw	_Default_ISR shr (0+2)
 29735                           
 29736                           ; Vector 23 : I2C1RX
 29737  000036  6677               	dw	_Default_ISR shr (0+2)
 29738                           
 29739                           ; Vector 24 : I2C1TX
 29740  000038  6677               	dw	_Default_ISR shr (0+2)
 29741                           
 29742                           ; Vector 25 : I2C1
 29743  00003A  6677               	dw	_Default_ISR shr (0+2)
 29744                           
 29745                           ; Vector 26 : I2C1E
 29746  00003C  6677               	dw	_Default_ISR shr (0+2)
 29747                           
 29748                           ; Vector 27 : U1RX
 29749  00003E  6574               	dw	_UART1_rx_vect_isr shr (0+2)
 29750                           
 29751                           ; Vector 28 : U1TX
 29752  000040  656A               	dw	_UART1_tx_vect_isr shr (0+2)
 29753                           
 29754                           ; Vector 29 : U1E
 29755  000042  6677               	dw	_Default_ISR shr (0+2)
 29756                           
 29757                           ; Vector 30 : U1
 29758  000044  6677               	dw	_Default_ISR shr (0+2)
 29759                           
 29760                           ; Vector 31 : TMR0
 29761  000046  6677               	dw	_Default_ISR shr (0+2)
 29762                           
 29763                           ; Vector 32 : TMR1
 29764  000048  6677               	dw	_Default_ISR shr (0+2)
 29765                           
 29766                           ; Vector 33 : TMR1G
 29767  00004A  6677               	dw	_Default_ISR shr (0+2)
 29768                           
 29769                           ; Vector 34 : TMR2
 29770  00004C  6677               	dw	_Default_ISR shr (0+2)
 29771                           
 29772                           ; Vector 35 : CCP1
 29773  00004E  6677               	dw	_Default_ISR shr (0+2)
 29774                           
 29775                           ; Vector 36 : Undefined
 29776  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 29777                           
 29778                           ; Vector 37 : NCO1
 29779  000052  6677               	dw	_Default_ISR shr (0+2)
 29780                           
 29781                           ; Vector 38 : CWG1
 29782  000054  6677               	dw	_Default_ISR shr (0+2)
 29783                           
 29784                           ; Vector 39 : CLC1
 29785  000056  6677               	dw	_Default_ISR shr (0+2)
 29786                           
 29787                           ; Vector 40 : INT1
 29788  000058  6404               	dw	_INT1_ISR shr (0+2)
 29789                           
 29790                           ; Vector 41 : CMP2
 29791  00005A  6677               	dw	_Default_ISR shr (0+2)
 29792                           
 29793                           ; Vector 42 : DMA2SCNT
 29794  00005C  6677               	dw	_Default_ISR shr (0+2)
 29795                           
 29796                           ; Vector 43 : DMA2DCNT
 29797  00005E  6677               	dw	_Default_ISR shr (0+2)
 29798                           
 29799                           ; Vector 44 : DMA2OR
 29800  000060  6677               	dw	_Default_ISR shr (0+2)
 29801                           
 29802                           ; Vector 45 : DMA2A
 29803  000062  6677               	dw	_Default_ISR shr (0+2)
 29804                           
 29805                           ; Vector 46 : I2C2RX
 29806  000064  6677               	dw	_Default_ISR shr (0+2)
 29807                           
 29808                           ; Vector 47 : I2C2TX
 29809  000066  6677               	dw	_Default_ISR shr (0+2)
 29810                           
 29811                           ; Vector 48 : I2C2
 29812  000068  6677               	dw	_Default_ISR shr (0+2)
 29813                           
 29814                           ; Vector 49 : I2C2E
 29815  00006A  6677               	dw	_Default_ISR shr (0+2)
 29816                           
 29817                           ; Vector 50 : U2RX
 29818  00006C  6588               	dw	_UART2_rx_vect_isr shr (0+2)
 29819                           
 29820                           ; Vector 51 : U2TX
 29821  00006E  657E               	dw	_UART2_tx_vect_isr shr (0+2)
 29822                           
 29823                           ; Vector 52 : U2E
 29824  000070  6677               	dw	_Default_ISR shr (0+2)
 29825                           
 29826                           ; Vector 53 : U2
 29827  000072  6677               	dw	_Default_ISR shr (0+2)
 29828                           
 29829                           ; Vector 54 : TMR3
 29830  000074  5E3E               	dw	_TMR3_ISR shr (0+2)
 29831                           
 29832                           ; Vector 55 : TMR3G
 29833  000076  6677               	dw	_Default_ISR shr (0+2)
 29834                           
 29835                           ; Vector 56 : TMR4
 29836  000078  6677               	dw	_Default_ISR shr (0+2)
 29837                           
 29838                           ; Vector 57 : CCP2
 29839  00007A  6677               	dw	_Default_ISR shr (0+2)
 29840                           
 29841                           ; Vector 58 : Undefined
 29842  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29843                           
 29844                           ; Vector 59 : CWG2
 29845  00007E  6677               	dw	_Default_ISR shr (0+2)
 29846                           
 29847                           ; Vector 60 : CLC2
 29848  000080  6677               	dw	_Default_ISR shr (0+2)
 29849                           
 29850                           ; Vector 61 : INT2
 29851  000082  6677               	dw	_Default_ISR shr (0+2)
 29852                           
 29853                           ; Vector 62 : Undefined
 29854  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29855                           
 29856                           ; Vector 63 : Undefined
 29857  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29858                           
 29859                           ; Vector 64 : Undefined
 29860  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29861                           
 29862                           ; Vector 65 : Undefined
 29863  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29864                           
 29865                           ; Vector 66 : Undefined
 29866  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29867                           
 29868                           ; Vector 67 : Undefined
 29869  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29870                           
 29871                           ; Vector 68 : Undefined
 29872  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29873                           
 29874                           ; Vector 69 : Undefined
 29875  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29876                           
 29877                           ; Vector 70 : TMR5
 29878  000094  62E5               	dw	_TMR5_ISR shr (0+2)
 29879                           
 29880                           ; Vector 71 : TMR5G
 29881  000096  6677               	dw	_Default_ISR shr (0+2)
 29882                           
 29883                           ; Vector 72 : TMR6
 29884  000098  661C               	dw	_TMR6_ISR shr (0+2)
 29885                           
 29886                           ; Vector 73 : CCP3
 29887  00009A  6677               	dw	_Default_ISR shr (0+2)
 29888                           
 29889                           ; Vector 74 : CWG3
 29890  00009C  6677               	dw	_Default_ISR shr (0+2)
 29891                           
 29892                           ; Vector 75 : CLC3
 29893  00009E  6677               	dw	_Default_ISR shr (0+2)
 29894                           
 29895                           ; Vector 76 : Undefined
 29896  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29897                           
 29898                           ; Vector 77 : Undefined
 29899  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29900                           
 29901                           ; Vector 78 : Undefined
 29902  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29903                           
 29904                           ; Vector 79 : Undefined
 29905  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29906                           
 29907                           ; Vector 80 : CCP4
 29908  0000A8  6677               	dw	_Default_ISR shr (0+2)
 29909                           
 29910                           ; Vector 81 : CLC4
 29911  0000AA  6677               	dw	_Default_ISR shr (0+2)
 29912  0000AC                     ivt0x8_undefint:
 29913                           	opt callstack 0
 29914  0000AC  00FF               	reset	
 29915                           
 29916                           	psect	text163
 29917  000000                     __ptext163:
 29918                           	opt callstack 0
 29919                           
 29920                           	psect	rparam
 29921  0000                     
 29922                           	psect	temp
 29923  000001                     btemp:
 29924                           	opt callstack 0
 29925  000001                     	ds	32
 29926  0000                     wtemp0	set	btemp
 29927  0000                     wtemp1	set	btemp+2
 29928  0000                     wtemp2	set	btemp+4
 29929  0000                     wtemp3	set	btemp+6
 29930  0000                     wtemp4	set	btemp+8
 29931  0000                     wtemp5	set	btemp+10
 29932  0000                     wtemp8	set	btemp+1
 29933  0000                     ttemp0	set	btemp
 29934  0000                     ttemp1	set	btemp+3
 29935  0000                     ttemp2	set	btemp+6
 29936  0000                     ttemp3	set	btemp+9
 29937  0000                     ttemp5	set	btemp+1
 29938  0000                     ttemp6	set	btemp+4
 29939  0000                     ttemp7	set	btemp+8
 29940  0000                     ltemp0	set	btemp
 29941  0000                     ltemp1	set	btemp+4
 29942  0000                     ltemp2	set	btemp+8
 29943  0000                     lltemp0	set	btemp
 29944  0000                     lltemp1	set	btemp+8
 29945  0000                     lltemp2	set	btemp+16
 29946  0000                     lltemp3	set	btemp+24
 29947                           tosu	equ	0x3FFF
 29948                           tosh	equ	0x3FFE
 29949                           tosl	equ	0x3FFD
 29950                           stkptr	equ	0x3FFC
 29951                           pclatu	equ	0x3FFB
 29952                           pclath	equ	0x3FFA
 29953                           pcl	equ	0x3FF9
 29954                           tblptru	equ	0x3FF8
 29955                           tblptrh	equ	0x3FF7
 29956                           tblptrl	equ	0x3FF6
 29957                           tablat	equ	0x3FF5
 29958                           prodh	equ	0x3FF4
 29959                           prodl	equ	0x3FF3
 29960                           indf0	equ	0x3FEF
 29961                           postinc0	equ	0x3FEE
 29962                           postdec0	equ	0x3FED
 29963                           preinc0	equ	0x3FEC
 29964                           plusw0	equ	0x3FEB
 29965                           fsr0h	equ	0x3FEA
 29966                           fsr0l	equ	0x3FE9
 29967                           wreg	equ	0x3FE8
 29968                           indf1	equ	0x3FE7
 29969                           postinc1	equ	0x3FE6
 29970                           postdec1	equ	0x3FE5
 29971                           preinc1	equ	0x3FE4
 29972                           plusw1	equ	0x3FE3
 29973                           fsr1h	equ	0x3FE2
 29974                           fsr1l	equ	0x3FE1
 29975                           bsr	equ	0x3FE0
 29976                           indf2	equ	0x3FDF
 29977                           postinc2	equ	0x3FDE
 29978                           postdec2	equ	0x3FDD
 29979                           preinc2	equ	0x3FDC
 29980                           plusw2	equ	0x3FDB
 29981                           fsr2h	equ	0x3FDA
 29982                           fsr2l	equ	0x3FD9
 29983                           status	equ	0x3FD8


Data Sizes:
    Strings     446
    Constant    372
    Data        469
    BSS         1394
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      45
    BANK0           160      0     159
    BANK1           256      0     243
    BANK2           256     17     221
    BANK3           256      0     228
    BANK4           256      0     198
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_59(CODE[1]), STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5667_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4316tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  317613
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           17    17      0    5389
                                              0 BANK2     17    17      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    5329
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0    5329
                       _Volts_to_SOC
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _Volts_to_SOC
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C6      13       77.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     11      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F3       7       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9F       5       99.4%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      2D       1       71.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     644      58        0.0%
DATA                 0      0     766       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec  6 17:16:31 2019

                     _SPI1_Exchange8bit 9784                __end_of_set_display_info 97FC  
                                     _C 0100                                       _D 06FF  
                                     _H 00F8                                       _P 00A5  
                                     _R 00C9                                       _S 0060  
                                     _T FD9D                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 94B6            __end_of_start_switch_handler 9784  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FE2D                  __end_of_FVR_Initialize 99C2  
                           __CFG_LVP$ON 000000                                     l173 98F6  
                                   l703 92CE                                     l583 92A2  
                                   l837 9792                                     _GIE 01FE97  
                                   _abs 8D72                                     _pad 74C6  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 98A2  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 9742  
                    _UART1_Transmit_ISR 927C                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0096                           _INT1_CallBack 9690  
                          __CFG_ZCD$OFF 000000                                    l1030 8FCA  
                                  l2104 066A                                    l1218 900A  
                                  l2019 7522                                    l2039 46EE  
                                  l2119 0B1A                                    l1346 1FA4  
                                  l1338 1DE0                                    l2075 123A  
                                  l1363 25F8                         _timer3ReloadVal 002C  
                                  l2228 1D78                                    l1444 8AEA  
                                  l1356 2042                                    l1348 1FAA  
                                  l3037 73A4                                    l2157 5866  
                                  l1358 2108                                    l1359 2216  
                                  l2512 7EFE                                    l3304 6742  
                                  l2178 4AD4                                    l2523 6EDC  
                                  l1660 906A                                    l1580 810E  
                                  l2516 6E08                                    l3332 8642  
                                  l1717 97F8                                    l2550 6C0A  
                                  l1670 637C                                    l3319 86C6  
                                  l1808 6902                                    l1584 8416  
                                  l2802 34A0                                    l1677 76E6  
                                  l1669 6220                                    l1765 460A  
                  _ADCC_StartConversion 9910                                    l1599 90D4  
                                  l2911 657A                                    l2835 415A  
                                  l7012 511E                                    l1885 853C  
                                  l2790 3610                                    l7110 60C0  
                                  l7102 6014                                    l2942 8DB2  
                                  l2934 6A98                                    l7006 5086  
                                  l1894 78F2                                    l2871 2E54  
                                  l7200 7478                                    l7016 518C  
                                  l7008 50D6                                    l7050 5A9C  
                                  l7034 8632                                    l6180 8FF2  
                                  l7220 7EC8                                    l2973 5F24  
                                  l7062 5B36                                    l7142 6F20  
                                  l7056 5AF0                                    l7136 6F0A  
                                  l7208 74AC                                    l7224 7EFC  
                                  l7216 7E86                                    l7074 5C08  
                                  l7170 701A                                    l7162 6FE6  
                                  l8210 8372                                    l8202 8306  
                                  l7236 8C82                                    l7148 6F40  
                                  l8310 322E                                    l8222 2EB4  
                                  l7094 5F8C                                    l7190 73F8  
                                  l7182 73CE                                    l8206 836E  
                                  l8304 31FC                                    l8240 2F72  
                                  l8232 2F0A                                    l8072 93BE  
                                  l8314 3238                                    l8234 2F3A  
                                  l7186 73E0                                    l8154 90DE  
                                  l8308 321C                                    l8252 2FE4  
                                  l8228 2EF4                                    l8430 35F0  
                                  l8422 35B0                                    l8342 3320  
                                  l8318 3268                                    l8246 2FA4  
                                  l8424 35C0                                    l8408 356C  
                                  l8360 3450                                    l8336 3304  
                                  l8264 304C                                    l8256 2FFA  
                                  l9320 67C8                                    l8520 3F62  
                                  l8512 3EFC                                    l8504 3EC6  
                                  l8184 9388                                    l8418 3598  
                                  l8338 3316                                    l8346 3352  
                                  l8258 302A                                    l8514 3F0E  
                                  l8522 3F66                                    l8442 3C40  
                                  l7802 660C                                    l9410 438E  
                                  l9252 8C98                                    l8604 26CA  
                                  l9316 67B0                                    l9308 6784  
                                  l8452 3C96                                    l7804 6678  
                                  l8710 2CDA                                    l8622 2798  
                                  l8606 26D0                                    l8382 34E0  
                                  l8358 342A                                    l8294 318A  
                                  l7750 5CD4                                    l8534 3FB0  
                                  l8462 3D1E                                    l8454 3CC6  
                                  l6950 6A36                                    l9430 453C  
                                  l9422 445C                                    l9406 42B4  
                                  l9510 84F6                                    l8198 82FE  
                                  l9256 8CCA                                    l8720 2D4E  
                                  l8624 279E                                    l8616 2758  
                                  l8608 2700                                    l8392 3508  
                                  l8376 34C2                                    l8368 3484  
                                  l7760 5D6A                                    l7752 5CF6  
                                  l6936 8DA2                                    l8552 4026  
                                  l8528 3F94                                    l8480 3DE2  
                                  l8472 3D74                                    l8448 3C80  
                                  l6960 6A90                                    l8730 2DBE  
                                  l8706 2CD4                                    l8634 27F0  
                                  l8626 27CE                                    l8378 34D4  
                                  l9354 9080                                    l7770 5DD2  
                                  l8562 409A                                    l8538 3FD6  
                                  l8474 3DA4                                    l8810 6BA2  
                                  l8802 6B76                                    l6954 6A3A  
                                  l9418 43C0                                    l9524 36E0  
                                  l8740 2E1C                                    l8724 2D94  
                                  l8396 350E                                    l7772 5E10  
                                  l8580 412E                                    l8548 4020  
                                  l8468 3D5E                                    l8812 6BB8  
                                  l8804 6B92                                    l9436 45D8  
                                  l9444 45EA                                    l9550 3B28  
                                  l9542 39B0                                    l9470 7174  
                                  l7766 5D96                                    l6886 81E2  
                                  l8582 413E                                    l8574 4106  
                                  l8494 3E36                                    l8486 3E1C  
                                  l8750 6DC6                                    l9390 4166  
                                  l9616 929E                                    l9560 3BD0  
                                  l9528 3722                                    l9472 7184  
                                  l7776 5E78                                    l7768 5DAE  
                                  l6888 8204                                    l8568 40D6  
                                  l8760 6EA4                                    l6992 4F68  
                                  l8840 645A                                    l9554 3BB2  
                                  l9538 3932                                    l9490 7202  
                                  l9474 718A                                    l9482 71A6  
                                  l8738 2E02                                    l9802 5770  
                                  l7786 5F14                                    l6978 86B6  
                                  l8850 64C4                                    l8842 6478  
                                  l9556 3BBA                                    l9476 7190  
                                  l9484 71D2                                    l8692 2C64  
                                  l8756 6E56                                    l8860 64F8  
                                  l8852 64DA                                    l8836 6436  
                                  l8828 63CA                                    l9396 4196  
                                  l9820 785C                                    l9638 92CA  
                                  l9478 719E                                    l8686 2C48  
                                  l8598 268A                                    l9902 8F88  
                                  l8870 655A                                    l8838 6444  
                                  l9830 78CC                                    l9664 8FB2  
                                  l8696 2C8A                                    l8768 6EDA  
                                  l8776 8D48                                    l8848 64A6  
                                  l9808 7800                                    l9914 8714  
                                  l9498 7270                                    l8786 6AF4  
                                  l9908 8704                                    l9780 7F0E  
                                  STR_1 FF60                                    l9784 7F4C  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  STR_4 FF4F                                    STR_5 FF71  
                                  STR_6 FFB2                                    STR_7 FFE0  
                                  STR_8 FF3E                                    STR_9 FF93  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5100 85F0  
                                  u5030 502C                                    u5110 85F2  
                                  u5015 4F86                                    u5200 5B30  
                                  u5016 4F8C                                    u5017 4F9A  
                                  u5130 9214                                    u5210 5B62  
                                  u5050 5104                                    u5035 5022  
                                  u5140 9216                                    u5300 5FDC  
                                  u5230 5C40                                    u5310 600E  
                                  u5055 50FA                                    u5160 5A96  
                                  u5320 6040                                    u5080 8EC2  
                                  u5250 5C92                                    u5410 6F6C  
                                  u5090 8EC4                                    _T6PR 003F93  
                                  u5180 5AEC                                    u5340 60F8  
                                  u5500 7498                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5430 7006  
                                  _PMD2 0039C2                                    u5191 5AF6  
                                  _PMD3 0039C3                                    u5360 614A  
                                  u5280 5F86                                    u4800 91B6  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u7300 3348                                    u4740 8232  
                                  u5540 7EF8                                    u8020 8D44  
                                  u8100 6BC0                                    u7045 8EFE  
                                  u7230 3260                                    u5550 8C5E  
                                  u8030 6AD4                                    u4910 6A88  
                                  u7400 3500                                    u7240 3280  
                                  u7208 31D2                                    u5560 8C7E  
                                  u5480 7424                                    u8120 6BEA  
                                  u8040 6AE8                                    u4920 6A8A  
                                  u7305 3338                                    u4905 6A6A  
                                  u4850 8D86                                    u8050 6B22  
                                  u4770 91E4                                    u7235 3250  
                                  u4747 8224                                    u8035 6ACA  
                                  u7340 3472                                    u7180 31B0  
                                  u4860 69BA                                    u4780 91E6  
                                  u8230 889C                                    u7190 31D0  
                                  u4950 8674                                    u4790 91B4  
                                  u7191 31CA                                    u8055 6B18  
                                  u7440 355C                                    u6560 5D66  
                                  u4960 8676                                    u4865 69B0  
                                  u8330 6762                                    u7380 34E6  
                                  u6580 5EBE                                    u4980 4F00  
                                  u6660 6704                                    u8500 44A0  
                                  u7445 354C                                    u7470 357C  
                                  u8510 972C                                    u6590 5EC0  
                                  u7710 4074                                    u7630 3F8E  
                                  u4990 4F4C                                    u8190 64EE  
                                  u8414 41B0                                    u8255 88D0  
                                  u8415 41AA                                    u8256 88D2  
                                  u8248 889E                                    u7720 40AE  
                                  u4985 4EF6                                    u7730 40EA  
                                  u8434 41D2                                    u7715 4064  
                                  u8435 41CC                                    u7820 27DE  
                                  u8516 972E                                    u8620 84E2  
                                  u9510 46B2                                    u7670 4018  
                                  u8454 43A8                                    u8455 43A2  
                                  u9360 72AE                                    u9600 49CA  
                                  u9440 7C92                                    u7930 2D28  
                                  u9530 46C4                                    u8474 4476  
                                  u8394 4180                                    u8650 8528  
                                  u7835 2972                                    u8475 4470  
                                  u8395 417A                                    u7940 2D62  
                                  u9380 732A                                    u9620 49E0  
                                  u9700 0196                                    u7845 2A3A  
                                  u7950 2DA8                                    u9550 4714  
                                  u8494 4498                                    u8638 84E4  
                                  u7935 2D18                                    u7855 2C02  
                                  u9447 7C84                                    u8495 4492  
                                  u9560 496C                                    u9480 4640  
                                  u7890 2CCC                                    u9490 4642  
                                  u9810 0562                                    u9730 02A6  
                                  _PLLR 01CEE0                                    u9571 499C  
                                  u9580 49B2                                    u9740 02A8  
                                  u9660 00DA                                    u8668 852A  
                                  u9581 49B0                                    u9590 49C6  
                                  u9840 05C6                                    u9690 0194  
                                  u9780 050E                                    u9950 0A18  
                                  u9880 0648                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 927C  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FE3D                                    _cp_l FE39  
                                  _atoi 5CBA                                    _ctoa 8540  
                                  _main 1D82                                    _dtoa 4610  
                                  _nanf 89BE                                    _seed 01EB  
                                  _prec 0026                                    _nout 00C7  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 577C  
                                  btemp 0001                                    _xtoa 4A90  
                __end_of_check_adc_scan 99BA                           ___fpclassifyf 690C  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0030  
             __end_of_SPI1_Exchange8bit 97A2               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 8E44                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 95D0                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0040                        __end_of_INT0_ISR 995E  
                      __end_of_INT1_ISR 904E          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 8116           __end_of_OSCILLATOR_Initialize 98FC  
                                 l11000 1830                                   l11012 191C  
                                 l11100 530C                                   l11032 1A7C  
                                 l11008 18E8                                   l10402 75B2  
                                 l11042 1B2A                                   l11114 5424  
                                 l11106 5376                                   l10500 00AC  
                                 l11212 75FE                                   l10414 855E  
                                 l11062 1D00                                   l11126 7FEC  
                                 l10416 858A                                   l10440 46DE  
                                 l10408 7C18                                   l10512 00F0  
                                 l10520 0146                                   l11056 1CA6  
                                 l11072 1D24                                   l11128 802E  
                                 l11400 1DFA                                   l10530 01EA  
                                 l11066 1D04                                   l11330 61F0  
                                 l10452 4746                                   l10532 0216  
                                 l10366 72BA                                   l10382 82AC  
                                 l10462 4958                                   l10702 0D24  
                                 l10710 0D90                                   l10606 05F6  
                                 l10534 022C                                   l11094 524E  
                                 l10392 751A                                   l10448 4728  
                                 l10624 06B8                                   l10608 0602  
                                 l11344 6318                                   l11520 2572  
                                 l11504 251C                                   l10378 826E  
                                 l10394 752C                                   l10482 4A0A  
                                 l10730 0F3A                                   l10634 077A  
                                 l10570 0470                                   l10538 0258  
                                 l10802 57E8                                   l11178 816E  
                                 l11522 258A                                   l11514 2560  
                                 l11450 1FDC                                   l10388 74F2  
                                 l10644 0926                                   l10628 06F0  
                                 l10564 0396                                   l10548 02FC  
                                 l10556 032A                                   l11532 25CE  
                                 l10398 7568                                   l10486 4A46  
                                 l10718 0EA2                                   l10590 057C  
                                 l10574 04D2                                   l10822 58D8  
                                 l11542 2622                                   l11470 2034  
                                 l11462 2010                                   l10744 0FD6  
                                 l10592 058E                                   l10568 0406  
                                 l10840 59FA                                   l10832 5992  
                                 l11528 25A8                                   l11448 1FAE  
                                 l11392 1DC2                                   l10746 0FF0  
                                 l10682 0C32                                   l10666 0B12  
                                 l10658 0A48                                   l10586 0554  
                                 l10826 5908                                   l10818 589C  
                                 l10914 4E00                                   l11482 22F4  
                                 l11394 1DCA                                   l10756 1092  
                                 l10668 0B34                                   l10836 59BE  
                                 l10860 4AFE                                   l10940 1376  
                                 PRLOCK 0039EF                                   l10782 119A  
                                 l10766 10E2                                   l10694 0CBA  
                                 l10598 0594                                   l10854 4AC4  
                                 l11486 2356                                   l11398 1DE8  
                                 l10960 14E2                                   l10936 1326  
                                 l11496 24D2                                   l10890 4C90  
                                 l10874 4B9A                                   l10866 4B3A  
                                 l10962 14F8                                   l10938 1360  
                                 l11498 24FC                                   l10958 14A8  
                                 l10898 4D16                                   l10978 165C  
                                 l10988 16F2                         __end_of___aodiv 5CBA  
                          _Volts_to_SOC 82F6                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 361A  
                                 _ADCLK 003EFF                         __end_of___aomod 616E  
                                 _ADPCH 003EF1                         __end_of___fldiv 4164  
                                 _ADREF 003EFD                         __end_of___awdiv 7034  
                       __end_of___flneg 8D72                                   STR_11 FF82  
                                 STR_12 FEB9                                   STR_20 FEA6  
                                 STR_21 FF93                                   STR_13 FEDF  
                                 STR_30 FE80                                   STR_22 FF93  
                                 STR_14 FECC                                   STR_23 FF82  
                                 STR_31 FFCD                                   STR_15 FF2B  
                                 STR_32 FFCD                                   STR_24 FFFC  
                                 STR_16 FF05                                   STR_25 FFF9  
                                 STR_33 FFA3                                   STR_17 FF18  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA3  
                                 STR_50 FFEA                                   STR_18 FEF2  
                                 STR_35 FFA3                                   STR_51 FFF2  
                                 STR_27 FFC1                                   STR_19 FE59  
                                 STR_28 FFD7                                   STR_36 FE41  
                       __end_of___awmod 74C6                                   STR_45 FE7F  
                                 STR_29 FE80                                   STR_54 FFF6  
                                 STR_46 FFE6                                   STR_38 FE93  
                                 STR_47 FFEE                                   STR_39 FE6D  
                                 STR_56 FFF6                                   _ADRPT 003EEC  
                       __end_of___flmul 2E5E                         __end_of___flsub 8DFE  
                       __end_of___fltol 6C14                                   u10110 10B8  
                                 u10130 116E                                   u10050 0EE4  
                                 u10210 58FE                                   u10140 1170  
                                 u10220 5944                                   u10300 4B92  
                                 u10310 4BE6                                   u10400 4D78  
                                 u10320 4BE8                                   u10401 4D76  
                                 u10250 5A20                                   u10410 4D8C  
                                 u10227 5936                                   u10420 4D90  
                                 u10340 4C46                                   u10350 4C48  
                                 u10270 4AAA                                   u10520 1540  
                                 u10370 4D12                                   u10530 1542  
                                 u10380 4D32                                   u10620 19D6  
                                 u10540 1568                                   u10630 19D8  
                                 u10470 13BE                                   u10391 4D62  
                                 u10375 4CF4                                   u10480 13C0  
                                 u10490 13E6                                   u10730 5498  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 u10670 1B7E                                   u10590 1746  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10760 814E  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10850 6368                                   _U1P3L 003DF0  
                                 u10860 636A                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0045                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 99DC  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 95A8  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 79F6  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 8BEE                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 988A                            _DMA1CON1bits 003BFD  
                                 _flags 0028                __size_of_calc_model_data 02DA  
                                 _fputc 728A              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 8ECE                                   _fputs 825E  
                       __end_of_isdigit 9220                         __end_of_ivln2_h FE39  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0040  
                                 _srand 9128                                   _width 0024  
                                 _putch 9854                         __end_of_islower 91C0  
                       __end_of_isspace 8C92                _INT1_SetInterruptHandler 94DE  
                       __end_of_isupper 91F0                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 9466  
           _UART1_SetRxInterruptHandler 943E                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 77F4                         __end_of_tolower 86D0  
                       __end_of_strncmp 674C                         __end_of_toupper 864C  
                   ??_UART1_tx_vect_isr 0045               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 95F8                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8DFE                   __end_of_ringBufS_init 9376  
                       __initialization 79F6                       _UART2_rx_vect_isr 9620  
                          __end_of_cp_h FE41                            __end_of_cp_l FE3D  
                          __end_of_atoi 5F2E                            __end_of_ctoa 85C8  
                          __end_of_main 2634                            __end_of_dtoa 4A90  
                          __end_of_nanf 8A20                            __end_of_stoa 5A3A  
                          __end_of_xtoa 4E4A                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0040                 __end_of_TMR2_Initialize 98BA  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 8F90  
              _TMR5_SetInterruptHandler 948E                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0045  
             __end_of_UART1_tx_vect_isr 95D0                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 92D4                         _PWM8_Initialize 98D0  
                      _UART1_Initialize 895A                       _UART2_tx_vect_isr 95F8  
                    _UART2_Transmit_ISR 92A8                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 88F6                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 8ECE                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0040  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1047 8BE0                    _start_switch_handler 9764  
                                i1l1235 798E                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize 8E8A  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 9940                                  _SCANPR 0039F7  
                                u407_48 9750                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u907_44 8734                                  u907_45 872E  
                                u829_20 9586                                  u852_28 717A  
                                u829_26 9588                                  u871_20 3B20  
                                u855_20 719A                                  u855_21 7194  
                                u873_20 3BC8                                  u859_24 7266  
                                u859_25 7262                                  u875_28 96A0  
                  __size_of_hid_display 0102                                  u883_48 970C  
                                u886_28 96C4                                  u888_28 96E8  
                      __end_of___xxtofl 6584   __end_of_ADCC_DischargeSampleCapacitor 99A2  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 999A  
              __end_of_send_lcd_cmd_dma 8C40                         _TMR3_WriteTimer 8FD0  
                   ??_UART2_tx_vect_isr 0045               __end_of_UART2_rx_vect_isr 9648  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 996E  
                      _UART2_Initialize 8A82                                  _WaitMs 90BC  
                       _conv_raw_result 4164                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6D84  
                                ___fleq 7E44                       _ADCC_ThresholdISR 8824  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 838C  
                                _efgtoa 0000                                  _floorf 4E4A  
                    ?_ADCC_ThresholdISR 0040                                  _memset 51B6  
                  __size_of_help_button 0038                                  clear_0 7A64  
                                clear_1 7A78                                  clear_2 7A8C  
                                clear_3 7A9E                                  clear_4 7AAA  
                                clear_5 7AB6                                  clear_6 7AC2  
                                clear_7 7ACE                                  _printf 8A20  
                    _eaDogM_WriteString 8116                                  _strcpy 7BD0  
                             ?_ADCC_ISR 0040                                  _strlen 81BC  
                    __size_of_TimerDone 0028                         _ADCC_Initialize 87B8  
                        _PMD_Initialize 98FC               __end_of_UART2_tx_vect_isr 9620  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0040                  __end_of_start_adc_scan 895A  
                          __mediumconst FCCC                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 8B3A  
                      __end_of_vfprintf 806C                              _StartTimer 8F10  
         __size_of_INTERRUPT_Initialize 0068                 __end_of_TMR5_Initialize 8E44  
                     _SYSTEM_Initialize 8CE0                              __accesstop 0060  
               __end_of__initialization 7AE0                               ?_INT0_ISR 0040  
                             ?_INT1_ISR 0040                    __end_of_display_help 99B2  
                  __end_of_display_info 99AA               __end_of_CLKREF_Initialize 9978  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer 8F90                   _set_temp_display_help 9922  
                      _clear_hid_pflags 966C                   __end_of_TMR3_CallBack 96FC  
             __end_of_ADCC_ThresholdISR 888E                      __size_of_calc_bsoc 05D0  
                __end_of_ringBufS_flush 841E                          __pcstackCOMRAM 0040  
                            ___inthi_sp 1016                              ___intlo_sp 180B  
                          __pidataBANK0 9086                            __pidataBANK1 7CA4  
                          __pidataBANK2 7D77                               ?_TMR3_ISR 0040  
                             ?_TMR5_ISR 0040                               ?_TMR6_ISR 0040  
                        ivt0x8_undefint 00AC                           __end_of_fputc 73AE  
                         __end_of_fputs 82F6                           __end_of_srand 915C  
                 __end_of_TMR5_CallBack 96D8                           __end_of_putch 986E  
               __end_of_PWM8_Initialize 98E6                 __end_of_TMR6_Initialize 92FE  
                     _adc_int_t_handler 86D0                  __end_of_PMD_Initialize 9910  
                            __end_of_bp FE35                              ??_ADCC_ISR 0040  
                 __end_of_TMR6_CallBack 9720             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0028                           _DMA1_DMAA_ISR 9984  
                 TMR3_ISR@CountCallBack 002A                          _clear_adc_scan 99C2  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00C1               __end_of_SYSTEM_Initialize 8D2A  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer 9010                              __pbssBANK0 0060  
                            __pbssBANK1 01D3                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 616E  
               __end_of_conv_raw_result 4610                   _INT0_InterruptHandler 0021  
                            ??_INT0_ISR 0040                              ??_INT1_ISR 0046  
                     __end_of_TimerDone 93C6                        _DMA1_DMADCNT_ISR 9978  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 9854        __end_of_TMR3_SetInterruptHandler 94DE  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 948E  
                            ??_TMR3_ISR 02CC                 __end_of_ADCC_Initialize 8822  
                            ??_TMR5_ISR 004A               __end_of_adc_int_t_handler 874E  
                            ??_TMR6_ISR 0045                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 9556  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 952E  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 97FC                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 99C8  
                        ?_DMA1_DMAA_ISR 0040                        _DMA1_DMASCNT_ISR 9960  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0040              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3BEA                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 9376                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 8FD0                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 988A                                 __Lparam 0000  
              __end_of_UART1_Initialize 89BE                       __end_of_hid_input 8540  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5A3A  
                               ___fladd 2E5E                                 ___aomod 5F2E  
                               ___fldiv 3BEA                                 ___awdiv 6EE6  
                               ___flneg 8D2A                                 ___awmod 73AE  
                               ___flmul 2634                                 ___flsub 8DB8  
                               ___fltol 6AA2               __end_of_UART1_Receive_ISR 981A  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7BD0                                 __pcinit 79F6  
              __end_of_mode_lamp_bright 994E                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 9932  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 9648  
                               __ptext2 9764                                 __ptext3 88F6  
                               __ptext4 9910                                 __ptext5 999A  
                               __ptext6 9128                                 __ptext7 7AE6  
                               __ptext8 92FE                                 __ptext9 9326  
                     _UART2_Receive_ISR 981A                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 98E6  
                               us526999 5CA4                            __size_of_abs 0046  
                               us537999 615C                            __size_of_pad 0114  
                     __end_of_init_bsoc 6D84                                 _isalpha 8E8A  
                               _isdigit 91F0                                 _ivln2_h FE35  
                             _T3CONbits 003FA6                                 _mode_sw 0033  
                               us947999 462A                       __end_of_lp_filter 690C  
                               _islower 9190                                 _isspace 8C40  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 8AE0                                 _isupper 91C0  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 76EA  
                               _tolower 864C                   __size_of_display_help 0008  
                               _utctime 009D                   __size_of_display_info 0008  
                               _strncmp 6584                                 _toupper 85C8  
                  end_of_initialization 7AE0               __size_of_convert_adc_data 00B8  
                    _check_enter_button 8F50     __end_of_UART1_SetTxInterruptHandler 943E  
           _UART1_SetTxInterruptHandler 9416                               i1u1087_20 7986  
   __end_of_UART2_SetRxInterruptHandler 9416             _UART2_SetRxInterruptHandler 93EE  
                     __end_of_set_vterm 97DE                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd 99D4  
             __end_of_UART2_Receive_ISR 9838                          wdtdelay@dcount 00A1  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0046  
                 _INT1_InterruptHandler 00C4                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc 99DA                _TMR3_SetInterruptHandler 94B6  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 9466  
                          _display_help 99AA                   _TMR5_InterruptHandler 00AC  
                          _display_info 99A2    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags 9690                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler 957E             _ADCC_SetADIInterruptHandler 9556  
                            _update_lcd 75DA                         _calc_model_data 54A2  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc 9648                         _DMA1_Initialize 874E  
                            _start_bsoc 9720                         _SPI1_Initialize 98BA  
                 __end_of_get_vterm_ptr 924E                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 90F2  
          __end_of_INTERRUPT_Initialize 88F6                              _vterm_dump 7034  
                        __end_of___flge 6EE6                          __end_of___fleq 7F08  
  __end_of_INT0_DefaultInterruptHandler 99E8   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 99E6              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 8B3A                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 00FE                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 51B6             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0095                          __end_of_memset 54A2  
                        __end_of_printf 8A82                __end_of_DMA1_DMADCNT_ISR 9982  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 9764  
                        __end_of_strcpy 7CA4                          __end_of_strlen 825E  
                   start_initialization 79F6    __end_of_TMR5_DefaultInterruptHandler 95A6  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 957E  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 8DB8  
                 __end_of_INT1_CallBack 96B4               __size_of_set_display_info 001E  
                           __end_of_pad 75DA                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 934E                          _switch_handler 7162  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0500                   __end_of___fpclassifyf 6AA2  
                         _uart2RxBuffer 0600                           _uart1TxBuffer 0354  
              __end_of_DMA1_DMASCNT_ISR 996E                           _uart2TxBuffer 0400  
                        _DMA1_DMAOR_ISR 9990                     __end_of_hid_display 78F6  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 939E  
                         _ringBufS_init 934E                             __pdataBANK0 00C9  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 9190                 __end_of_calc_model_data 577C  
                   __end_of_help_button 9086         __end_of_eaDogM_WriteStringAtPos 9128  
                   __end_of_BVSOC_TABLE FD9D                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 87B8                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler 952E                           __pcstackBANK2 02CC  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 728A                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 98D0                _UART1_RxInterruptHandler 00BB  
              _UART2_TxInterruptHandler 00BE                               __end_of_T FE2D  
                      _convert_adc_data 7F08                               _calc_bsoc 361A  
             __size_of_ringBufS_put_dma 00AA                            _init_display 7AE6  
                __end_of_DMA1_DMAOR_ISR 999A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8B94                  _PIN_MANAGER_Initialize 841E  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 99CE  
                         __pmediumconst FCCC                               __ptext100 895A  
                             __ptext101 9416                               __ptext110 98BA  
                             __ptext102 943E                               __ptext111 98D0  
                             __ptext103 92D4                               __ptext120 8B3A  
                             __ptext112 98FC                               __ptext104 9466  
                             __ptext121 874E                               __ptext113 841E  
                             __ptext105 8DFE                               __ptext130 8B94  
                             __ptext122 996E                               __ptext114 98E6  
                             __ptext106 948E                               __ptext131 8F90  
                             __ptext123 87B8                               __ptext115 888E  
                             __ptext107 8E44                               __ptext140 9742  
                             __ptext132 96B4                               __ptext124 952E  
                             __ptext116 99BA                               __ptext108 94B6  
                             __ptext141 99E6                               __ptext133 957E  
                             __ptext125 9556                               __ptext117 915C  
                             __ptext109 98A2                               __ptext150 95D0  
                             __ptext142 99DC                               __ptext134 78F8  
                             __ptext126 9010                               __ptext118 94DE  
                             __ptext151 97FC                               __ptext143 9250  
                             __ptext135 8FD0                               __ptext127 9690  
                             __ptext119 9506                               __ptext160 9978  
                             __ptext152 95F8                               __ptext144 86D0  
                             __ptext136 96D8                               __ptext128 99E2  
                             __ptext161 9984                               __ptext153 92A8  
                             __ptext145 99E8                               __ptext137 99E4  
                             __ptext129 7162                               __ptext162 9990  
                             __ptext154 9620                               __ptext146 99EA  
                             __ptext138 361A                               __ptext163 0000  
                             __ptext155 981A                               __ptext147 8824  
                             __ptext139 9950                               __ptext156 9870  
                             __ptext148 95A8                               __ptext157 96FC  
                             __ptext149 927C                               __ptext158 8C92  
                             __ptext159 9960                               _hid_input 84B0  
                    __end_of_StartTimer 8F50                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 9250  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 6C14                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 674C  
                           _hid_display 77F4                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 888E  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0040                                _INT0_ISR 9950  
                              _INT1_ISR 9010                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01D3                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0483  
                             _ring_buf2 0440                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack 96D8                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                i2u910_48 9268  
                              _PIR8bits 0039A8                                i2u920_48 9634  
                              i2u912_48 885A                                i2u912_49 886E  
                              _PIR9bits 0039A9                                i2u914_48 95BC  
                              i2u916_48 95E4                                i2u918_48 960C  
              __size_of_TMR5_Initialize 0046                               _set_vterm 97C0  
                   __size_of_update_lcd 0110                             _help_button 904E  
                              _TMR3_ISR 78F8                             _BVSOC_TABLE FCCD  
            __end_of_UART1_Transmit_ISR 92A8                                _TMR5_ISR 8B94  
                              _TMR6_ISR 9870                               _port_data 02BC  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack 96B4                              _ADCON0bits 003EF8  
                    __end_of_check_help 6380                               _start_lcd 99CE  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 96FC                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 99D4  
                      _set_display_info 97DE                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 7A0A                               copy_data1 7A2C  
                             copy_data2 7A4E                _INT0_SetInterruptHandler 9506  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 003D  
   __end_of_UART2_SetTxInterruptHandler 93EE             _UART2_SetTxInterruptHandler 93C6  
                          _uart1RxCount 003A                            _uart2RxCount 0034  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 9838                            _send_lcd_cmd 9326  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 99EA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 939E  
                 __end_of_DMA1_DMAA_ISR 998E                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 6380                       ?_DMA1_DMADCNT_ISR 0040  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9940                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0046                                __ptext10 9784  
                              __ptext11 934E                                __ptext20 89BE  
                              __ptext12 6C14                                __ptext21 97A2  
                              __ptext13 82F6                                __ptext30 75DA  
                              __ptext22 6380                                __ptext14 77F4  
                              __ptext31 90F2                                __ptext23 966C  
                              __ptext15 84B0                                __ptext40 8A20  
                              __ptext32 8BEE                                __ptext24 99C2  
                              __ptext16 9376                                __ptext41 7FC0  
                              __ptext33 9838                                __ptext25 616E  
                              __ptext17 9932                                __ptext50 864C  
                              __ptext42 1244                                __ptext34 8AE0  
                              __ptext26 7034                                __ptext18 7F08  
                              __ptext51 91C0                                __ptext43 4A90  
                              __ptext35 8116                                __ptext27 76EA  
                              __ptext19 4164                                __ptext60 73AE  
                              __ptext52 7BD0                                __ptext44 85C8  
                              __ptext36 99C8                                __ptext28 9220  
                              __ptext61 6EE6                                __ptext53 4E4A  
                              __ptext45 9190                                __ptext37 99CE  
                              __ptext29 90BC                                __ptext70 728A  
                              __ptext62 4610                                __ptext54 690C  
                              __ptext46 8E8A                                __ptext38 838C  
                              __ptext71 9854                                __ptext63 8D72  
                              __ptext55 6AA2                                __ptext47 6584  
                              __ptext39 51B6                                __ptext80 9940  
                              __ptext72 806C                                __ptext64 5F2E  
                              __ptext56 8D2A                                __ptext48 577C  
                              __ptext81 8ECE                                __ptext73 5CBA  
                              __ptext65 5A3A                                __ptext57 6D84  
                              __ptext49 0000                                __ptext90 99D4  
                              __ptext82 904E                                __ptext74 8C40  
                              __ptext66 8540                                __ptext58 7E44  
                              __ptext91 9720                                __ptext83 939E  
                              __ptext75 91F0                                __ptext67 74C6  
                              __ptext59 3BEA                                __ptext92 674C  
                              __ptext84 8F10                                __ptext76 97C0  
                              __ptext68 81BC                                __ptext93 8DB8  
                              __ptext85 99A2                                __ptext77 9922  
                              __ptext69 825E                                __ptext94 2E5E  
                              __ptext86 99AA                                __ptext78 97DE  
                              __ptext95 2634                                __ptext87 8F50  
                              __ptext79 988A                                __ptext96 8CE0  
                              __ptext88 99B2                                __ptext97 8A82  
                              __ptext89 54A2                                __ptext98 93C6  
                              __ptext99 93EE                        __size_of_isupper 0030  
                              us1016999 578E                                us1029999 4B10  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 806C                    __end_of_Volts_to_SOC 838C  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08B2                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0040  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 00F1  
                    ??_DMA1_DMASCNT_ISR 0046            __end_of_ADCC_StartConversion 9922  
                              _spi_link 0089                                _wdtdelay 8AE0  
            __end_of_UART2_Transmit_ISR 92D4                                _vfprintf 7FC0  
              __end_of_convert_adc_data 7FC0              __end_of_PWM8_LoadDutyValue 8F10  
  __end_of_TMR3_DefaultInterruptHandler 99E6   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler 99E4    __end_of_INT1_DefaultInterruptHandler 99E4  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 99E2  
                         ??_Default_ISR 0040                             _uart1RxHead 003C  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 003F  
                           _uart2RxHead 0036                             _uart1RxTail 003B  
                        _get_raw_result 97A2                             _uart2TxHead 0039  
                           _uart1TxTail 003E                             _uart2RxTail 0035  
                           _uart2TxTail 0038                            _wait_lcd_set 99C8  
                      Volts_to_SOC@slot 0032                      _EXT_INT_Initialize 915C  
  __end_of_TMR6_DefaultInterruptHandler 8CE0   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 8C92    __end_of_ADCC_DefaultInterruptHandler 99EA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 99E8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 92FE          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9932                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 81BC                   __end_of_mode_lamp_dim 98A2  
               __end_of_adc_int_handler 99EC                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 76EA  
                _uart2TxBufferRemaining 0037                      __end_of_static_soc 966C  
                    __end_of_start_bsoc 9742                          _FVR_Initialize 99BA  
                __end_of_get_raw_result 97C0                        _send_lcd_cmd_dma 8BEE  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 002E  
      __end_of_INT1_SetInterruptHandler 9506               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0046                _UART1_TxInterruptHandler 00B8  
             __end_of_send_lcd_cmd_long 9326                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 99E2          __end_of_PIN_MANAGER_Initialize 84B0  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 7162  
               _eaDogM_WriteStringAtPos 90F2                           _get_vterm_ptr 9220  
                        _check_adc_scan 99B2               __size_of_UART2_Initialize 005E  
