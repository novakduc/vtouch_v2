

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 21 17:56:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=4,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=4,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=4,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=4,class=CODE,delta=1
   114                           	psect	text91,global,reloc=4,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=4,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=4,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=4,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=4,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=4,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=4,class=CODE,delta=1
   128                           	psect	text105,global,reloc=4,class=CODE,delta=1
   129                           	psect	text106,global,reloc=4,class=CODE,delta=1
   130                           	psect	text107,global,reloc=4,class=CODE,delta=1
   131                           	psect	text108,global,reloc=4,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   136                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   139                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   140  0000                     
   141                           ; Version 2.05
   142                           ; Generated 20/12/2018 GMT
   143                           ; 
   144                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   145                           ; All rights reserved.
   146                           ; 
   147                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   148                           ; 
   149                           ; Redistribution and use in source and binary forms, with or without modification, are
   150                           ; permitted provided that the following conditions are met:
   151                           ; 
   152                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   153                           ;        conditions and the following disclaimer.
   154                           ; 
   155                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   156                           ;        of conditions and the following disclaimer in the documentation and/or other
   157                           ;        materials provided with the distribution.
   158                           ; 
   159                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   160                           ;        software without specific prior written permission.
   161                           ; 
   162                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   163                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   164                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   165                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   166                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   167                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   168                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   169                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   170                           ; 
   171                           ; 
   172                           ; Code-generator required, PIC18F57K42 Definitions
   173                           ; 
   174                           ; SFR Addresses
   175  0000                     
   176 ;;_mode	offset	0
   177 ;;_rxData	offset	0
   178 ;;_t_link	offset=-1 (param)
   179 ;;_stream	offset=-6 (param)
   180 ;;_function	offset=-7 (param)
   181 ;;_f	offset	0
   182 ;;_ap	offset	5
   183 ;;_s	offset=-2 (param)
   184 ;;_fmt	offset=-3 (param)
   185 ;;_rxData	offset	0
   186 ;;_r_link	offset=-1 (param)
   187 ;;_rxData	offset	0
   188 ;;_m_link	offset=-1 (param)
   189 ;;_k	offset	0
   190 ;;_checksum	offset	2
   191 ;;_i	offset	4
   192 ;;_byte_block	offset=-2 (param)
   193 ;;_length	offset=-3 (param)
   194 ;;_fake	offset=-4 (param)
   195 ;;_s_uart	offset=-5 (param)
   196 ;;_i	offset	0
   197 ;;_sum	offset	2
   198 ;;_byte_block	offset=-2 (param)
   199 ;;_byte_count	offset=-4 (param)
   200 ;;_bufData	offset=-1 (param)
   201 ;;_txData	offset=-1 (param)
   202 ;;_bufData	offset=-1 (param)
   203 ;;_txData	offset=-1 (param)
   204 ;;_stream	offset=-1 (param)
   205 ;;_function	offset=-2 (param)
   206 ;;_byte_block	offset=-1 (param)
   207 ;;_clear	offset=-2 (param)
   208 ;;_numMilliseconds	offset=-2 (param)
   209 ;;_timer	offset=-1 (param)
   210 ;;_timer	offset=-1 (param)
   211 ;;_count	offset=-3 (param)
   212 ;;_readValue	offset	0
   213 ;;_readValue	offset	0
   214 ;;_cmd	offset=-1 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_data	offset=-1 (param)
   217 ;;__this	offset=-2 (param)
   218 ;;_r	offset=-1 (param)
   219 ;;_c	offset=-2 (param)
   220 ;;_strPtr	offset=-3 (param)
   221 ;;_strPtr	offset=-1 (param)
   222 ;;_cmd	offset=-1 (param)
   223 ;;_strPtr	offset=-1 (param)
   224 ;;_delay	offset=-4 (param)
   225 ;;__this	offset=-2 (param)
   226 ;;_clearBuffer	offset=-3 (param)
   227 ;;_s	offset	0
   228 ;;_k	offset	2
   229 ;;_dest	offset=-2 (param)
   230 ;;_c	offset=-4 (param)
   231 ;;_n	offset=-6 (param)
   232 ;;_ap	offset	0
   233 ;;_fmt	offset=-2 (param)
   234 ;;_cfmt	offset	0
   235 ;;_fp	offset=-2 (param)
   236 ;;_fmt	offset=-3 (param)
   237 ;;_ap	offset=-5 (param)
   238 ;;_ll	offset	0
   239 ;;_cp	offset	8
   240 ;;_c	offset	10
   241 ;;_fp	offset=-2 (param)
   242 ;;_fmt	offset=-4 (param)
   243 ;;_ap	offset=-6 (param)
   244 ;;_r	offset	0
   245 ;;_l	offset	1
   246 ;;__l	offset=-1 (param)
   247 ;;__r	offset=-2 (param)
   248 ;;_n	offset=-4 (param)
   249 ;;_nuls	offset	0
   250 ;;_l	offset	7
   251 ;;_p	offset	9
   252 ;;_cp	offset	11
   253 ;;_w	offset	13
   254 ;;_i	offset	15
   255 ;;_fp	offset=-2 (param)
   256 ;;_s	offset=-4 (param)
   257 ;;_dtoa$3935	offset	0
   258 ;;_n	offset	2
   259 ;;_i	offset	10
   260 ;;_s	offset	12
   261 ;;_w	offset	14
   262 ;;_p	offset	16
   263 ;;_fp	offset=-2 (param)
   264 ;;_d	offset=-10 (param)
   265 ;;_a	offset=-2 (param)
   266 ;;_sign	offset	0
   267 ;;_counter	offset	1
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_quotient	offset	0
   271 ;;_sign	offset	8
   272 ;;_counter	offset	9
   273 ;;_dividend	offset=-8 (param)
   274 ;;_divisor	offset=-16 (param)
   275 ;;_w	offset	0
   276 ;;_fp	offset=-2 (param)
   277 ;;_c	offset=-3 (param)
   278 ;;_w	offset	0
   279 ;;_i	offset	2
   280 ;;_fp	offset=-2 (param)
   281 ;;_buf	offset=-4 (param)
   282 ;;_p	offset=-6 (param)
   283 ;;_a	offset	0
   284 ;;_s	offset=-2 (param)
   285 ;;_i	offset	0
   286 ;;_c	offset	2
   287 ;;_s	offset=-2 (param)
   288 ;;_fp	offset=-4 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_fp	offset=-4 (param)
   291 ;;_c	offset=-1 (param)
   292 ;;__this	offset=-2 (param)
   293 ;;_c	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_state	offset	0
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_i	offset	0
   306 ;;_timerVal	offset=-2 (param)
   307                           
   308                           	psect	idataCOMRAM
   309  0064A6                     __pidataCOMRAM:
   310                           	opt callstack 0
   311                           
   312                           ;initializer for r_protocol@retry
   313  0064A6  03                 	db	3
   314                           
   315                           	psect	idataBANK0
   316  00586A                     __pidataBANK0:
   317                           	opt callstack 0
   318                           
   319                           ;initializer for _V
   320  00586A  00                 	db	0
   321  00586B  00                 	db	0
   322  00586C  00                 	db	0
   323  00586D  00                 	db	0
   324  00586E  00                 	db	0
   325  00586F  00                 	db	0
   326  005870  00                 	db	0
   327  005871  00                 	db	0
   328  005872  00                 	db	0
   329  005873  00                 	db	0
   330  005874  00                 	db	0
   331  005875  00                 	db	0
   332  005876  00                 	db	0
   333  005877  00                 	db	0
   334  005878  00                 	db	0
   335  005879  00                 	db	0
   336  00587A  00                 	db	0
   337  00587B  00                 	db	0
   338  00587C  00                 	db	0
   339  00587D  00                 	db	0
   340  00587E  00                 	db	0
   341  00587F  00                 	db	0
   342  005880  00                 	db	0
   343  005881  00                 	db	0
   344  005882  00                 	db	0
   345  005883  00                 	db	0
   346  005884  00                 	db	0
   347  005885  00                 	db	0
   348  005886  00                 	db	0
   349  005887  00                 	db	0
   350  005888  00                 	db	0
   351  005889  00                 	db	0
   352  00588A  00                 	db	0
   353  00588B  00                 	db	0
   354  00588C  00                 	db	0
   355  00588D  00                 	db	0
   356  00588E  00                 	db	0
   357  00588F  00                 	db	0
   358  005890  00                 	db	0
   359  005891  00                 	db	0
   360  005892  00                 	db	0
   361  005893  00                 	db	0
   362  005894  00                 	db	0
   363  005895  00                 	db	0
   364  005896  00                 	db	0
   365  005897  00                 	db	0
   366  005898  00                 	db	0
   367  005899  00                 	db	0
   368  00589A  00                 	db	0
   369  00589B  00                 	db	0
   370  00589C  00                 	db	0
   371  00589D  00                 	db	0
   372  00589E  00                 	db	0
   373  00589F  00                 	db	0
   374  0058A0  00                 	db	0
   375  0058A1  00                 	db	0
   376  0058A2  00                 	db	0
   377  0058A3  00                 	db	0
   378  0058A4  00                 	db	0
   379  0058A5  00                 	db	0
   380  0058A6  00                 	db	0
   381  0058A7  00                 	db	0
   382  0058A8  00                 	db	0
   383  0058A9  00                 	db	0
   384  0058AA  00                 	db	0
   385  0058AB  00                 	db	0
   386  0058AC  00                 	db	0
   387  0058AD  00                 	db	0
   388  0058AE  00                 	db	0
   389  0058AF  00                 	db	0
   390  0058B0  0000               	dw	0
   391  0058B2  0000               	dw	0
   392  0058B4  0000               	dw	0
   393  0058B6  0000               	dw	0
   394  0058B8  00                 	db	0
   395  0058B9  00                 	db	0
   396  0058BA  00                 	db	0
   397  0058BB  00                 	db	0
   398  0058BC  00                 	db	0
   399  0058BD  0000               	dw	0
   400  0058BF  0000               	dw	0
   401  0058C1  00                 	db	0
   402  0058C2  00                 	db	0
   403  0058C3  00                 	db	0
   404  0058C4  00                 	db	0
   405  0058C5  00                 	db	0
   406  0058C6  01                 	db	1
   407  0058C7  2D                 	db	45
   408                           
   409                           	psect	idataBANK1
   410  004F9E                     __pidataBANK1:
   411                           	opt callstack 0
   412                           
   413                           ;initializer for stoa@F1144
   414  004F9E  28                 	db	40
   415  004F9F  6E                 	db	110
   416  004FA0  75                 	db	117
   417  004FA1  6C                 	db	108
   418  004FA2  6C                 	db	108
   419  004FA3  29                 	db	41
   420  004FA4  00                 	db	0
   421                           
   422                           ;initializer for _H10
   423  004FA5  0000               	dw	0
   424  004FA7  0001               	dw	1
   425  004FA9  0000               	dw	0
   426  004FAB  01                 	db	1
   427  004FAC  80                 	db	128
   428  004FAD  01                 	db	1
   429  004FAE  81                 	db	129
   430  004FAF  00                 	db	0
   431  004FB0  00                 	db	0
   432  004FB1  0A                 	db	10
   433  004FB2  0000               	dw	0
   434  004FB4  00                 	db	0
   435  004FB5  00                 	db	0
   436  004FB6  00                 	db	0
   437  004FB7  00                 	db	0
   438  004FB8  00                 	db	0
   439  004FB9  00                 	db	0
   440  004FBA  00                 	db	0
   441  004FBB  00                 	db	0
   442  004FBC  00                 	db	0
   443  004FBD  00                 	db	0
   444  004FBE  0A                 	db	10
   445  004FBF  0000               	dw	0
   446  004FC1  0001               	dw	1
   447  004FC3  0000               	dw	0
   448  004FC5  01                 	db	1
   449  004FC6  80                 	db	128
   450  004FC7  00                 	db	0
   451  004FC8  01                 	db	1
   452  004FC9  00                 	db	0
   453  004FCA  00                 	db	0
   454  004FCB  0A                 	db	10
   455  004FCC  0000               	dw	0
   456  004FCE  0001               	dw	1
   457  004FD0  0000               	dw	0
   458  004FD2  01                 	db	1
   459  004FD3  80                 	db	128
   460  004FD4  01                 	db	1
   461  004FD5  81                 	db	129
   462  004FD6  00                 	db	0
   463  004FD7  80                 	db	128
   464  004FD8  0A                 	db	10
   465  004FD9  0000               	dw	0
   466  004FDB  0001               	dw	1
   467  004FDD  0000               	dw	0
   468  004FDF  01                 	db	1
   469  004FE0  80                 	db	128
   470  004FE1  11                 	db	17
   471  004FE2  82                 	db	130
   472  004FE3  00                 	db	0
   473  004FE4  00                 	db	0
   474  004FE5  0A                 	db	10
   475  004FE6  0000               	dw	0
   476  004FE8  0001               	dw	1
   477  004FEA  0000               	dw	0
   478  004FEC  01                 	db	1
   479  004FED  80                 	db	128
   480  004FEE  0F                 	db	15
   481  004FEF  81                 	db	129
   482  004FF0  00                 	db	0
   483  004FF1  00                 	db	0
   484  004FF2  0A                 	db	10
   485  004FF3  0000               	dw	0
   486  004FF5  0001               	dw	1
   487  004FF7  0000               	dw	0
   488  004FF9  01                 	db	1
   489  004FFA  80                 	db	128
   490  004FFB  11                 	db	17
   491  004FFC  81                 	db	129
   492  004FFD  00                 	db	0
   493  004FFE  00                 	db	0
   494  004FFF  0A                 	db	10
   495                           
   496                           ;initializer for _H12
   497  005000  0000               	dw	0
   498  005002  00                 	db	0
   499  005003  01                 	db	1
   500  005004  0001               	dw	1
   501  005006  0000               	dw	0
   502  005008  01                 	db	1
   503  005009  80                 	db	128
   504  00500A  02                 	db	2
   505  00500B  01                 	db	1
   506  00500C  00                 	db	0
   507  00500D  00                 	db	0
   508  00500E  0C                 	db	12
   509  00500F  0000               	dw	0
   510  005011  00                 	db	0
   511  005012  01                 	db	1
   512  005013  0001               	dw	1
   513  005015  0000               	dw	0
   514  005017  01                 	db	1
   515  005018  80                 	db	128
   516  005019  0D                 	db	13
   517  00501A  81                 	db	129
   518  00501B  00                 	db	0
   519  00501C  00                 	db	0
   520  00501D  0C                 	db	12
   521                           
   522                           ;initializer for _H24
   523  00501E  0000               	dw	0
   524  005020  41                 	db	65
   525  005021  20                 	db	32
   526  005022  30                 	db	48
   527  005023  31                 	db	49
   528  005024  30                 	db	48
   529  005025  39                 	db	57
   530  005026  31                 	db	49
   531  005027  31                 	db	49
   532  005028  30                 	db	48
   533  005029  38                 	db	56
   534  00502A  34                 	db	52
   535  00502B  36                 	db	54
   536  00502C  30                 	db	48
   537  00502D  30                 	db	48
   538  00502E  0001               	dw	1
   539  005030  0000               	dw	0
   540  005032  01                 	db	1
   541  005033  80                 	db	128
   542  005034  12                 	db	18
   543  005035  02                 	db	2
   544  005036  00                 	db	0
   545  005037  00                 	db	0
   546  005038  18                 	db	24
   547                           
   548                           ;initializer for _H17
   549  005039  0000               	dw	0
   550  00503B  00                 	db	0
   551  00503C  01                 	db	1
   552  00503D  00                 	db	0
   553  00503E  01                 	db	1
   554  00503F  21                 	db	33
   555  005040  02                 	db	2
   556  005041  01                 	db	1
   557  005042  0001               	dw	1
   558  005044  0000               	dw	0
   559  005046  01                 	db	1
   560  005047  80                 	db	128
   561  005048  0E                 	db	14
   562  005049  01                 	db	1
   563  00504A  00                 	db	0
   564  00504B  00                 	db	0
   565  00504C  11                 	db	17
   566                           
   567                           ;initializer for _H14
   568  00504D  0000               	dw	0
   569  00504F  00                 	db	0
   570  005050  41                 	db	65
   571  005051  11                 	db	17
   572  005052  01                 	db	1
   573  005053  0001               	dw	1
   574  005055  0000               	dw	0
   575  005057  01                 	db	1
   576  005058  80                 	db	128
   577  005059  04                 	db	4
   578  00505A  01                 	db	1
   579  00505B  00                 	db	0
   580  00505C  00                 	db	0
   581  00505D  0E                 	db	14
   582                           
   583                           ;initializer for _H13
   584  00505E  0000               	dw	0
   585  005060  00                 	db	0
   586  005061  01                 	db	1
   587  005062  21                 	db	33
   588  005063  0001               	dw	1
   589  005065  0000               	dw	0
   590  005067  01                 	db	1
   591  005068  80                 	db	128
   592  005069  0C                 	db	12
   593  00506A  06                 	db	6
   594  00506B  00                 	db	0
   595  00506C  00                 	db	0
   596  00506D  0D                 	db	13
   597                           
   598                           	psect	idataBANK2
   599  0062D0                     __pidataBANK2:
   600                           	opt callstack 0
   601                           
   602                           ;initializer for _H27
   603  0062D0  0000               	dw	0
   604  0062D2  00                 	db	0
   605  0062D3  00                 	db	0
   606  0062D4  00                 	db	0
   607  0062D5  00                 	db	0
   608  0062D6  00                 	db	0
   609  0062D7  00                 	db	0
   610  0062D8  00                 	db	0
   611  0062D9  00                 	db	0
   612  0062DA  00                 	db	0
   613  0062DB  00                 	db	0
   614  0062DC  00                 	db	0
   615  0062DD  00                 	db	0
   616  0062DE  00                 	db	0
   617  0062DF  00                 	db	0
   618  0062E0  00                 	db	0
   619  0062E1  00                 	db	0
   620  0062E2  00                 	db	0
   621  0062E3  0001               	dw	1
   622  0062E5  0000               	dw	0
   623  0062E7  01                 	db	1
   624  0062E8  80                 	db	128
   625  0062E9  0D                 	db	13
   626  0062EA  81                 	db	129
   627  0062EB  00                 	db	0
   628  0062EC  80                 	db	128
   629  0062ED  1B                 	db	27
   630                           
   631                           	psect	idataBANK3
   632  005D3C                     __pidataBANK3:
   633                           	opt callstack 0
   634                           
   635                           ;initializer for _H53
   636  005D3C  0000               	dw	0
   637  005D3E  00                 	db	0
   638  005D3F  00                 	db	0
   639  005D40  00                 	db	0
   640  005D41  00                 	db	0
   641  005D42  00                 	db	0
   642  005D43  00                 	db	0
   643  005D44  00                 	db	0
   644  005D45  00                 	db	0
   645  005D46  00                 	db	0
   646  005D47  00                 	db	0
   647  005D48  00                 	db	0
   648  005D49  00                 	db	0
   649  005D4A  00                 	db	0
   650  005D4B  00                 	db	0
   651  005D4C  00                 	db	0
   652  005D4D  00                 	db	0
   653  005D4E  00                 	db	0
   654  005D4F  00                 	db	0
   655  005D50  00                 	db	0
   656  005D51  00                 	db	0
   657  005D52  00                 	db	0
   658  005D53  00                 	db	0
   659  005D54  00                 	db	0
   660  005D55  00                 	db	0
   661  005D56  00                 	db	0
   662  005D57  00                 	db	0
   663  005D58  00                 	db	0
   664  005D59  00                 	db	0
   665  005D5A  00                 	db	0
   666  005D5B  00                 	db	0
   667  005D5C  00                 	db	0
   668  005D5D  00                 	db	0
   669  005D5E  00                 	db	0
   670  005D5F  00                 	db	0
   671  005D60  00                 	db	0
   672  005D61  00                 	db	0
   673  005D62  00                 	db	0
   674  005D63  00                 	db	0
   675  005D64  00                 	db	0
   676  005D65  46                 	db	70
   677  005D66  01                 	db	1
   678  005D67  41                 	db	65
   679  005D68  00                 	db	0
   680  005D69  0001               	dw	1
   681  005D6B  0000               	dw	0
   682  005D6D  01                 	db	1
   683  005D6E  80                 	db	128
   684  005D6F  03                 	db	3
   685  005D70  8A                 	db	138
   686  005D71  00                 	db	0
   687  005D72  00                 	db	0
   688  005D73  35                 	db	53
   689  0000                     _IVTADL	set	14493
   690  0000                     _IVTADH	set	14494
   691  0000                     _IVTADU	set	14495
   692  0000                     _PIE8bits	set	14744
   693  0000                     _PIR8bits	set	14760
   694  0000                     _SCANPR	set	14839
   695  0000                     _DMA2PR	set	14836
   696  0000                     _DMA1PR	set	14835
   697  0000                     _MAINPR	set	14834
   698  0000                     _ISRPR	set	14833
   699  0000                     _PIE2bits	set	14738
   700  0000                     _PIR2bits	set	14754
   701  0000                     _PIE9bits	set	14745
   702  0000                     _PIR9bits	set	14761
   703  0000                     _PIE6bits	set	14742
   704  0000                     _PIE3bits	set	14739
   705  0000                     _PMD7	set	14791
   706  0000                     _PMD6	set	14790
   707  0000                     _PMD5	set	14789
   708  0000                     _PMD4	set	14788
   709  0000                     _PMD3	set	14787
   710  0000                     _PMD2	set	14786
   711  0000                     _PMD1	set	14785
   712  0000                     _PMD0	set	14784
   713  0000                     _OSCTUNE	set	14814
   714  0000                     _OSCFRQ	set	14815
   715  0000                     _OSCEN	set	14813
   716  0000                     _OSCCON3	set	14811
   717  0000                     _OSCCON1	set	14809
   718  0000                     _IPR8bits	set	14728
   719  0000                     _IPR9bits	set	14729
   720  0000                     _IPR7bits	set	14727
   721  0000                     _IPR5bits	set	14725
   722  0000                     _IPR1bits	set	14721
   723  0000                     _IPR3bits	set	14723
   724  0000                     _IPR6bits	set	14726
   725  0000                     _IPR2bits	set	14722
   726  0000                     _PIE7bits	set	14743
   727  0000                     _PIE5bits	set	14741
   728  0000                     _PIE1bits	set	14737
   729  0000                     _PIR7bits	set	14759
   730  0000                     _PIR5bits	set	14757
   731  0000                     _PIR1bits	set	14753
   732  0000                     _PLLR	set	118496
   733  0000                     _SPI1SDIPPS	set	15071
   734  0000                     _RC6PPS	set	14870
   735  0000                     _RC5PPS	set	14869
   736  0000                     _RA6PPS	set	14854
   737  0000                     _RA5PPS	set	14853
   738  0000                     _RA4PPS	set	14852
   739  0000                     _SPI1SCKPPS	set	15070
   740  0000                     _U1RXPPS	set	15077
   741  0000                     _INT1PPS	set	15041
   742  0000                     _INT2PPS	set	15042
   743  0000                     _INT0PPS	set	15040
   744  0000                     _RC3PPS	set	14867
   745  0000                     _RB6PPS	set	14862
   746  0000                     _U2RXPPS	set	15080
   747  0000                     _SLRCONF	set	14995
   748  0000                     _SLRCONE	set	14979
   749  0000                     _SLRCOND	set	14963
   750  0000                     _SLRCONC	set	14947
   751  0000                     _SLRCONB	set	14931
   752  0000                     _SLRCONA	set	14915
   753  0000                     _ODCOND	set	14962
   754  0000                     _ODCONC	set	14946
   755  0000                     _ODCONB	set	14930
   756  0000                     _ODCONA	set	14914
   757  0000                     _ODCONF	set	14994
   758  0000                     _ODCONE	set	14978
   759  0000                     _WPUC	set	14945
   760  0000                     _WPUA	set	14913
   761  0000                     _WPUB	set	14929
   762  0000                     _WPUE	set	14977
   763  0000                     _WPUF	set	14993
   764  0000                     _WPUD	set	14961
   765  0000                     _ANSELA	set	14912
   766  0000                     _ANSELF	set	14992
   767  0000                     _ANSELE	set	14976
   768  0000                     _ANSELB	set	14928
   769  0000                     _ANSELC	set	14944
   770  0000                     _ANSELD	set	14960
   771  0000                     _DMA1SSA	set	15353
   772  0000                     _DMA1DSZ	set	15342
   773  0000                     _DMA1SSZ	set	15351
   774  0000                     _DMA1DSA	set	15344
   775  0000                     _DMA1CON0bits	set	15356
   776  0000                     _DMA1CON1bits	set	15357
   777  0000                     _DMA1CON0	set	15356
   778  0000                     _DMA1AIRQ	set	15358
   779  0000                     _DMA1SIRQ	set	15359
   780  0000                     _DMA1CON1	set	15357
   781  0000                     _CLC1CON	set	15476
   782  0000                     _CLC1GLS3	set	15485
   783  0000                     _CLC1GLS2	set	15484
   784  0000                     _CLC1GLS1	set	15483
   785  0000                     _CLC1GLS0	set	15482
   786  0000                     _CLC1SEL3	set	15481
   787  0000                     _CLC1SEL2	set	15480
   788  0000                     _CLC1SEL1	set	15479
   789  0000                     _CLC1SEL0	set	15478
   790  0000                     _CLC1POL	set	15477
   791  0000                     _CLKRCON	set	15589
   792  0000                     _CLKRCLK	set	15590
   793  0000                     _MD1CARL	set	15613
   794  0000                     _MD1CARH	set	15614
   795  0000                     _MD1SRC	set	15612
   796  0000                     _MD1CON1bits	set	15611
   797  0000                     _MD1CON0bits	set	15610
   798  0000                     _SPI1INTFbits	set	15642
   799  0000                     _SPI1RXB	set	15632
   800  0000                     _SPI1TXB	set	15633
   801  0000                     _SPI1TCNTL	set	15634
   802  0000                     _SPI1CON0	set	15636
   803  0000                     _SPI1CLK	set	15644
   804  0000                     _SPI1BAUD	set	15641
   805  0000                     _SPI1CON2	set	15638
   806  0000                     _SPI1CON1	set	15637
   807  0000                     _U2RXB	set	15824
   808  0000                     _U2TXB	set	15826
   809  0000                     _U2ERRIE	set	15842
   810  0000                     _U2ERRIR	set	15841
   811  0000                     _U2UIR	set	15840
   812  0000                     _U2FIFO	set	15839
   813  0000                     _U2BRGH	set	15838
   814  0000                     _U2BRGL	set	15837
   815  0000                     _U2CON2	set	15836
   816  0000                     _U2CON1	set	15835
   817  0000                     _U2CON0	set	15834
   818  0000                     _U2P3L	set	15832
   819  0000                     _U2P2L	set	15830
   820  0000                     _U2P1L	set	15828
   821  0000                     _U1RXB	set	15848
   822  0000                     _U1TXB	set	15850
   823  0000                     _U1ERRIE	set	15866
   824  0000                     _U1ERRIR	set	15865
   825  0000                     _U1UIR	set	15864
   826  0000                     _U1FIFO	set	15863
   827  0000                     _U1BRGH	set	15862
   828  0000                     _U1BRGL	set	15861
   829  0000                     _U1CON2	set	15860
   830  0000                     _U1CON1	set	15859
   831  0000                     _U1CON0	set	15858
   832  0000                     _U1P3H	set	15857
   833  0000                     _U1P3L	set	15856
   834  0000                     _U1P2H	set	15855
   835  0000                     _U1P2L	set	15854
   836  0000                     _U1P1H	set	15853
   837  0000                     _U1P1L	set	15852
   838  0000                     _ADCON0	set	16120
   839  0000                     _ADCLK	set	16127
   840  0000                     _ADACT	set	16126
   841  0000                     _ADREF	set	16125
   842  0000                     _ADSTAT	set	16124
   843  0000                     _ADCON3	set	16123
   844  0000                     _ADCON2	set	16122
   845  0000                     _ADCON1	set	16121
   846  0000                     _ADPREH	set	16119
   847  0000                     _ADPREL	set	16118
   848  0000                     _ADCAP	set	16117
   849  0000                     _ADACQH	set	16116
   850  0000                     _ADACQL	set	16115
   851  0000                     _ADPCH	set	16113
   852  0000                     _ADRPT	set	16108
   853  0000                     _ADACCU	set	16106
   854  0000                     _ADSTPTH	set	16101
   855  0000                     _ADSTPTL	set	16100
   856  0000                     _ADUTHH	set	16097
   857  0000                     _ADUTHL	set	16096
   858  0000                     _ADLTHH	set	16095
   859  0000                     _ADLTHL	set	16094
   860  0000                     _NCO1CONbits	set	16190
   861  0000                     _NCO1INCL	set	16187
   862  0000                     _NCO1INCH	set	16188
   863  0000                     _NCO1INCU	set	16189
   864  0000                     _NCO1ACCL	set	16184
   865  0000                     _NCO1ACCH	set	16185
   866  0000                     _NCO1ACCU	set	16186
   867  0000                     _NCO1CLK	set	16191
   868  0000                     _NCO1CON	set	16190
   869  0000                     _LATCbits	set	16316
   870  0000                     _LATDbits	set	16317
   871  0000                     _PORTBbits	set	16331
   872  0000                     _LATEbits	set	16318
   873  0000                     _T5CONbits	set	16282
   874  0000                     _T5CON	set	16282
   875  0000                     _TMR5L	set	16280
   876  0000                     _TMR5H	set	16281
   877  0000                     _T5CLK	set	16285
   878  0000                     _T5GATE	set	16284
   879  0000                     _T5GCON	set	16283
   880  0000                     _T6CON	set	16276
   881  0000                     _T6TMR	set	16274
   882  0000                     _T6PR	set	16275
   883  0000                     _T6RST	set	16279
   884  0000                     _T6HLT	set	16277
   885  0000                     _T6CLKCON	set	16278
   886  0000                     _TRISD	set	16325
   887  0000                     _TRISC	set	16324
   888  0000                     _TRISB	set	16323
   889  0000                     _TRISA	set	16322
   890  0000                     _TRISF	set	16327
   891  0000                     _TRISE	set	16326
   892  0000                     _LATC	set	16316
   893  0000                     _LATB	set	16315
   894  0000                     _LATF	set	16319
   895  0000                     _LATA	set	16314
   896  0000                     _LATD	set	16317
   897  0000                     _LATE	set	16318
   898  0000                     _IVTLOCKbits	set	16340
   899  0000                     _IVTLOCK	set	16340
   900  0000                     _INTCON0bits	set	16338
   901  0000                     _GIE	set	130711
   902                           
   903                           	psect	smallconst
   904  002000                     __psmallconst:
   905                           	opt callstack 0
   906  002000  00                 	db	0
   907  002001                     STR_9:
   908  002001  45                 	db	69	;'E'
   909  002002  20                 	db	32
   910  002003  52                 	db	82	;'R'
   911  002004  25                 	db	37
   912  002005  64                 	db	100	;'d'
   913  002006  20                 	db	32
   914  002007  54                 	db	84	;'T'
   915  002008  25                 	db	37
   916  002009  64                 	db	100	;'d'
   917  00200A  20                 	db	32
   918  00200B  45                 	db	69	;'E'
   919  00200C  25                 	db	37
   920  00200D  64                 	db	100	;'d'
   921  00200E  20                 	db	32
   922  00200F  41                 	db	65	;'A'
   923  002010  25                 	db	37
   924  002011  64                 	db	100	;'d'
   925  002012  20                 	db	32
   926  002013  47                 	db	71	;'G'
   927  002014  25                 	db	37
   928  002015  64                 	db	100	;'d'
   929  002016  23                 	db	35
   930  002017  00                 	db	0
   931  002018                     STR_11:
   932  002018  4C                 	db	76	;'L'
   933  002019  4F                 	db	79	;'O'
   934  00201A  47                 	db	71	;'G'
   935  00201B  20                 	db	32
   936  00201C  4D                 	db	77	;'M'
   937  00201D  4F                 	db	79	;'O'
   938  00201E  44                 	db	68	;'D'
   939  00201F  45                 	db	69	;'E'
   940  002020  20                 	db	32
   941  002021  25                 	db	37
   942  002022  64                 	db	100	;'d'
   943  002023  20                 	db	32
   944  002024  25                 	db	37
   945  002025  64                 	db	100	;'d'
   946  002026  20                 	db	32
   947  002027  20                 	db	32
   948  002028  20                 	db	32
   949  002029  20                 	db	32
   950  00202A  20                 	db	32
   951  00202B  23                 	db	35
   952  00202C  00                 	db	0
   953  00202D                     STR_15:
   954  00202D  20                 	db	32
   955  00202E  52                 	db	82	;'R'
   956  00202F  25                 	db	37
   957  002030  64                 	db	100	;'d'
   958  002031  20                 	db	32
   959  002032  54                 	db	84	;'T'
   960  002033  25                 	db	37
   961  002034  64                 	db	100	;'d'
   962  002035  20                 	db	32
   963  002036  46                 	db	70	;'F'
   964  002037  52                 	db	82	;'R'
   965  002038  25                 	db	37
   966  002039  64                 	db	100	;'d'
   967  00203A  20                 	db	32
   968  00203B  46                 	db	70	;'F'
   969  00203C  53                 	db	83	;'S'
   970  00203D  25                 	db	37
   971  00203E  64                 	db	100	;'d'
   972  00203F  20                 	db	32
   973  002040  23                 	db	35
   974  002041  00                 	db	0
   975  002042                     STR_5:
   976  002042  48                 	db	72	;'H'
   977  002043  4F                 	db	79	;'O'
   978  002044  53                 	db	83	;'S'
   979  002045  54                 	db	84	;'T'
   980  002046  20                 	db	32
   981  002047  4D                 	db	77	;'M'
   982  002048  4F                 	db	79	;'O'
   983  002049  44                 	db	68	;'D'
   984  00204A  45                 	db	69	;'E'
   985  00204B  20                 	db	32
   986  00204C  25                 	db	37
   987  00204D  6C                 	db	108	;'l'
   988  00204E  64                 	db	100	;'d'
   989  00204F  20                 	db	32
   990  002050  25                 	db	37
   991  002051  64                 	db	100	;'d'
   992  002052  20                 	db	32
   993  002053  20                 	db	32
   994  002054  23                 	db	35
   995  002055  00                 	db	0
   996  002056                     STR_12:
   997  002056  20                 	db	32
   998  002057  53                 	db	83	;'S'
   999  002058  25                 	db	37
  1000  002059  64                 	db	100	;'d'
  1001  00205A  46                 	db	70	;'F'
  1002  00205B  25                 	db	37
  1003  00205C  64                 	db	100	;'d'
  1004  00205D  20                 	db	32
  1005  00205E  23                 	db	35
  1006  00205F  25                 	db	37
  1007  002060  6C                 	db	108	;'l'
  1008  002061  64                 	db	100	;'d'
  1009  002062  20                 	db	32
  1010  002063  20                 	db	32
  1011  002064  20                 	db	32
  1012  002065  20                 	db	32
  1013  002066  20                 	db	32
  1014  002067  20                 	db	32
  1015  002068  00                 	db	0
  1016  002069                     STR_1:
  1017  002069  20                 	db	32
  1018  00206A  52                 	db	82	;'R'
  1019  00206B  56                 	db	86	;'V'
  1020  00206C  49                 	db	73	;'I'
  1021  00206D  20                 	db	32
  1022  00206E  48                 	db	72	;'H'
  1023  00206F  4F                 	db	79	;'O'
  1024  002070  53                 	db	83	;'S'
  1025  002071  54                 	db	84	;'T'
  1026  002072  20                 	db	32
  1027  002073  54                 	db	84	;'T'
  1028  002074  45                 	db	69	;'E'
  1029  002075  53                 	db	83	;'S'
  1030  002076  54                 	db	84	;'T'
  1031  002077  45                 	db	69	;'E'
  1032  002078  52                 	db	82	;'R'
  1033  002079  00                 	db	0
  1034  00207A                     STR_4:
  1035  00207A  20                 	db	32
  1036  00207B  46                 	db	70	;'F'
  1037  00207C  47                 	db	71	;'G'
  1038  00207D  42                 	db	66	;'B'
  1039  00207E  40                 	db	64	;'@'
  1040  00207F  4D                 	db	77	;'M'
  1041  002080  43                 	db	67	;'C'
  1042  002081  48                 	db	72	;'H'
  1043  002082  50                 	db	80	;'P'
  1044  002083  20                 	db	32
  1045  002084  46                 	db	70	;'F'
  1046  002085  41                 	db	65	;'A'
  1047  002086  42                 	db	66	;'B'
  1048  002087  34                 	db	52	;'4'
  1049  002088  00                 	db	0
  1050  002089                     STR_6:
  1051  002089  20                 	db	32
  1052  00208A  53                 	db	83	;'S'
  1053  00208B  25                 	db	37
  1054  00208C  64                 	db	100	;'d'
  1055  00208D  46                 	db	70	;'F'
  1056  00208E  25                 	db	37
  1057  00208F  64                 	db	100	;'d'
  1058  002090  20                 	db	32
  1059  002091  23                 	db	35
  1060  002092  20                 	db	32
  1061  002093  20                 	db	32
  1062  002094  20                 	db	32
  1063  002095  20                 	db	32
  1064  002096  00                 	db	0
  1065  002097                     STR_2:
  1066  002097  20                 	db	32
  1067  002098  56                 	db	86	;'V'
  1068  002099  65                 	db	101	;'e'
  1069  00209A  72                 	db	114	;'r'
  1070  00209B  73                 	db	115	;'s'
  1071  00209C  69                 	db	105	;'i'
  1072  00209D  6F                 	db	111	;'o'
  1073  00209E  6E                 	db	110	;'n'
  1074  00209F  20                 	db	32
  1075  0020A0  25                 	db	37
  1076  0020A1  73                 	db	115	;'s'
  1077  0020A2  00                 	db	0
  1078  0020A3                     STR_8:
  1079  0020A3  20                 	db	32
  1080  0020A4  4F                 	db	79	;'O'
  1081  0020A5  4B                 	db	75	;'K'
  1082  0020A6  20                 	db	32
  1083  0020A7  23                 	db	35
  1084  0020A8  00                 	db	0
  1085  0020A9                     STR_7:
  1086  0020A9  20                 	db	32
  1087  0020AA  4F                 	db	79	;'O'
  1088  0020AB  4B                 	db	75	;'K'
  1089  0020AC  51                 	db	81	;'Q'
  1090  0020AD  23                 	db	35
  1091  0020AE  00                 	db	0
  1092  0020AF                     STR_3:
  1093  0020AF  30                 	db	48	;'0'
  1094  0020B0  2E                 	db	46
  1095  0020B1  38                 	db	56	;'8'
  1096  0020B2  31                 	db	49	;'1'
  1097  0020B3  42                 	db	66	;'B'
  1098  0020B4  00                 	db	0
  1099  0020B5                     STR_19:
  1100  0020B5  6C                 	db	108	;'l'
  1101  0020B6  64                 	db	100	;'d'
  1102  0020B7  00                 	db	0
  1103  0020B8                     STR_23:
  1104  0020B8  6C                 	db	108	;'l'
  1105  0020B9  69                 	db	105	;'i'
  1106  0020BA  00                 	db	0
  1107  0020BB                     STR_17:
  1108  0020BB  25                 	db	37
  1109  0020BC  63                 	db	99	;'c'
  1110  0020BD  00                 	db	0
  1111  0000                     
  1112                           ; #config settings
  1113  0020BE  00                 	db	0	; dummy byte at the end
  1114  0000                     
  1115                           	psect	cinit
  1116  004CF8                     __pcinit:
  1117                           	opt callstack 0
  1118  004CF8                     start_initialization:
  1119                           	opt callstack 0
  1120  004CF8                     __initialization:
  1121                           	opt callstack 0
  1122                           
  1123                           ; Initialize objects allocated to BANK3 (56 bytes)
  1124                           ; load TBLPTR registers with __pidataBANK3
  1125  004CF8  0E3C               	movlw	low __pidataBANK3
  1126  004CFA  6EF6               	movwf	tblptrl,c
  1127  004CFC  0E5D               	movlw	high __pidataBANK3
  1128  004CFE  6EF7               	movwf	tblptrh,c
  1129  004D00  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1130  004D02  6EF8               	movwf	tblptru,c
  1131  004D04  EE00  F3C6         	lfsr	0,__pdataBANK3
  1132  004D08  EE20 F038          	lfsr	2,56
  1133  004D0C                     copy_data0:
  1134  004D0C  0009               	tblrd		*+
  1135  004D0E  006F FFD7 FFEE     	movff	tablat,postinc0
  1136  004D14  50DD               	movf	postdec2,w,c
  1137  004D16  50D9               	movf	fsr2l,w,c
  1138  004D18  E1F9               	bnz	copy_data0
  1139                           
  1140                           ; Initialize objects allocated to BANK2 (30 bytes)
  1141                           ; load TBLPTR registers with __pidataBANK2
  1142  004D1A  0ED0               	movlw	low __pidataBANK2
  1143  004D1C  6EF6               	movwf	tblptrl,c
  1144  004D1E  0E62               	movlw	high __pidataBANK2
  1145  004D20  6EF7               	movwf	tblptrh,c
  1146  004D22  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1147  004D24  6EF8               	movwf	tblptru,c
  1148  004D26  EE00  F2C0         	lfsr	0,__pdataBANK2
  1149  004D2A  EE20 F01E          	lfsr	2,30
  1150  004D2E                     copy_data1:
  1151  004D2E  0009               	tblrd		*+
  1152  004D30  006F FFD7 FFEE     	movff	tablat,postinc0
  1153  004D36  50DD               	movf	postdec2,w,c
  1154  004D38  50D9               	movf	fsr2l,w,c
  1155  004D3A  E1F9               	bnz	copy_data1
  1156                           
  1157                           ; Initialize objects allocated to BANK1 (208 bytes)
  1158                           ; load TBLPTR registers with __pidataBANK1
  1159  004D3C  0E9E               	movlw	low __pidataBANK1
  1160  004D3E  6EF6               	movwf	tblptrl,c
  1161  004D40  0E4F               	movlw	high __pidataBANK1
  1162  004D42  6EF7               	movwf	tblptrh,c
  1163  004D44  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1164  004D46  6EF8               	movwf	tblptru,c
  1165  004D48  EE00  F100         	lfsr	0,__pdataBANK1
  1166  004D4C  EE20 F0D0          	lfsr	2,208
  1167  004D50                     copy_data2:
  1168  004D50  0009               	tblrd		*+
  1169  004D52  006F FFD7 FFEE     	movff	tablat,postinc0
  1170  004D58  50DD               	movf	postdec2,w,c
  1171  004D5A  50D9               	movf	fsr2l,w,c
  1172  004D5C  E1F9               	bnz	copy_data2
  1173                           
  1174                           ; Initialize objects allocated to BANK0 (94 bytes)
  1175                           ; load TBLPTR registers with __pidataBANK0
  1176  004D5E  0E6A               	movlw	low __pidataBANK0
  1177  004D60  6EF6               	movwf	tblptrl,c
  1178  004D62  0E58               	movlw	high __pidataBANK0
  1179  004D64  6EF7               	movwf	tblptrh,c
  1180  004D66  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1181  004D68  6EF8               	movwf	tblptru,c
  1182  004D6A  EE00  F060         	lfsr	0,__pdataBANK0
  1183  004D6E  EE20 F05E          	lfsr	2,94
  1184  004D72                     copy_data3:
  1185  004D72  0009               	tblrd		*+
  1186  004D74  006F FFD7 FFEE     	movff	tablat,postinc0
  1187  004D7A  50DD               	movf	postdec2,w,c
  1188  004D7C  50D9               	movf	fsr2l,w,c
  1189  004D7E  E1F9               	bnz	copy_data3
  1190                           
  1191                           ; Initialize objects allocated to COMRAM (1 bytes)
  1192                           ; load TBLPTR registers with __pidataCOMRAM
  1193  004D80  0EA6               	movlw	low __pidataCOMRAM
  1194  004D82  6EF6               	movwf	tblptrl,c
  1195  004D84  0E64               	movlw	high __pidataCOMRAM
  1196  004D86  6EF7               	movwf	tblptrh,c
  1197  004D88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1198  004D8A  6EF8               	movwf	tblptru,c
  1199  004D8C  0009               	tblrd		*+	;fetch initializer
  1200  004D8E  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1201                           
  1202                           ; Clear objects allocated to BANK3 (198 bytes)
  1203  004D94  EE00  F300         	lfsr	0,__pbssBANK3
  1204  004D98  0EC6               	movlw	198
  1205  004D9A                     clear_0:
  1206  004D9A  6AEE               	clrf	postinc0,c
  1207  004D9C  06E8               	decf	wreg,f,c
  1208  004D9E  E1FD               	bnz	clear_0
  1209                           
  1210                           ; Clear objects allocated to BANK2 (192 bytes)
  1211  004DA0  EE00  F200         	lfsr	0,__pbssBANK2
  1212  004DA4  0EC0               	movlw	192
  1213  004DA6                     clear_1:
  1214  004DA6  6AEE               	clrf	postinc0,c
  1215  004DA8  06E8               	decf	wreg,f,c
  1216  004DAA  E1FD               	bnz	clear_1
  1217                           
  1218                           ; Clear objects allocated to BANK1 (32 bytes)
  1219  004DAC  EE00  F1D0         	lfsr	0,__pbssBANK1
  1220  004DB0  0E20               	movlw	32
  1221  004DB2                     clear_2:
  1222  004DB2  6AEE               	clrf	postinc0,c
  1223  004DB4  06E8               	decf	wreg,f,c
  1224  004DB6  E1FD               	bnz	clear_2
  1225                           
  1226                           ; Clear objects allocated to BANK0 (61 bytes)
  1227  004DB8  EE00  F0BE         	lfsr	0,__pbssBANK0
  1228  004DBC  0E3D               	movlw	61
  1229  004DBE                     clear_3:
  1230  004DBE  6AEE               	clrf	postinc0,c
  1231  004DC0  06E8               	decf	wreg,f,c
  1232  004DC2  E1FD               	bnz	clear_3
  1233                           
  1234                           ; Clear objects allocated to COMRAM (56 bytes)
  1235  004DC4  EE00  F001         	lfsr	0,__pbssCOMRAM
  1236  004DC8  0E38               	movlw	56
  1237  004DCA                     clear_4:
  1238  004DCA  6AEE               	clrf	postinc0,c
  1239  004DCC  06E8               	decf	wreg,f,c
  1240  004DCE  E1FD               	bnz	clear_4
  1241                           
  1242                           ;
  1243                           ; Setup IVTBASE
  1244                           ;
  1245  004DD0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1246  004DD2  6ED5               	movwf	213,c
  1247  004DD4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1248  004DD6  6ED6               	movwf	214,c
  1249  004DD8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1250  004DDA  6ED7               	movwf	215,c
  1251  004DDC                     end_of_initialization:
  1252                           	opt callstack 0
  1253  004DDC                     __end_of__initialization:
  1254                           	opt callstack 0
  1255  004DDC  0100               	movlb	0
  1256  004DDE  EF60  F010         	goto	_main	;jump to C main() function
  1257                           
  1258                           	psect	bssCOMRAM
  1259  000001                     __pbssCOMRAM:
  1260                           	opt callstack 0
  1261  000001                     secs_II_message@block:
  1262                           	opt callstack 0
  1263  000001                     	ds	7
  1264  000008                     _UART1_TxInterruptHandler:
  1265                           	opt callstack 0
  1266  000008                     	ds	3
  1267  00000B                     _UART1_RxInterruptHandler:
  1268                           	opt callstack 0
  1269  00000B                     	ds	3
  1270  00000E                     _UART2_TxInterruptHandler:
  1271                           	opt callstack 0
  1272  00000E                     	ds	3
  1273  000011                     _UART2_RxInterruptHandler:
  1274                           	opt callstack 0
  1275  000011                     	ds	3
  1276  000014                     _INT2_InterruptHandler:
  1277                           	opt callstack 0
  1278  000014                     	ds	3
  1279  000017                     _INT1_InterruptHandler:
  1280                           	opt callstack 0
  1281  000017                     	ds	3
  1282  00001A                     _INT0_InterruptHandler:
  1283                           	opt callstack 0
  1284  00001A                     	ds	3
  1285  00001D                     _width:
  1286                           	opt callstack 0
  1287  00001D                     	ds	2
  1288  00001F                     _prec:
  1289                           	opt callstack 0
  1290  00001F                     	ds	2
  1291  000021                     _flags:
  1292                           	opt callstack 0
  1293  000021                     	ds	2
  1294  000023                     TMR5_ISR@CountCallBack:
  1295                           	opt callstack 0
  1296  000023                     	ds	2
  1297  000025                     _timer5ReloadVal:
  1298                           	opt callstack 0
  1299  000025                     	ds	2
  1300  000027                     secs_gem_state@block:
  1301                           	opt callstack 0
  1302  000027                     	ds	1
  1303  000028                     t_protocol@requeue:
  1304                           	opt callstack 0
  1305  000028                     	ds	1
  1306  000029                     t_protocol@retry:
  1307                           	opt callstack 0
  1308  000029                     	ds	1
  1309  00002A                     r_protocol@rxData_l:
  1310                           	opt callstack 0
  1311  00002A                     	ds	1
  1312  00002B                     m_protocol@rxData_l:
  1313                           	opt callstack 0
  1314  00002B                     	ds	1
  1315  00002C                     _mode_sw:
  1316                           	opt callstack 0
  1317  00002C                     	ds	1
  1318  00002D                     _uart2RxCount:
  1319                           	opt callstack 0
  1320  00002D                     	ds	1
  1321  00002E                     _uart2RxTail:
  1322                           	opt callstack 0
  1323  00002E                     	ds	1
  1324  00002F                     _uart2RxHead:
  1325                           	opt callstack 0
  1326  00002F                     	ds	1
  1327  000030                     _uart2TxBufferRemaining:
  1328                           	opt callstack 0
  1329  000030                     	ds	1
  1330  000031                     _uart2TxTail:
  1331                           	opt callstack 0
  1332  000031                     	ds	1
  1333  000032                     _uart2TxHead:
  1334                           	opt callstack 0
  1335  000032                     	ds	1
  1336  000033                     _uart1RxCount:
  1337                           	opt callstack 0
  1338  000033                     	ds	1
  1339  000034                     _uart1RxTail:
  1340                           	opt callstack 0
  1341  000034                     	ds	1
  1342  000035                     _uart1RxHead:
  1343                           	opt callstack 0
  1344  000035                     	ds	1
  1345  000036                     _uart1TxBufferRemaining:
  1346                           	opt callstack 0
  1347  000036                     	ds	1
  1348  000037                     _uart1TxTail:
  1349                           	opt callstack 0
  1350  000037                     	ds	1
  1351  000038                     _uart1TxHead:
  1352                           	opt callstack 0
  1353  000038                     	ds	1
  1354                           
  1355                           	psect	dataCOMRAM
  1356  00005D                     __pdataCOMRAM:
  1357                           	opt callstack 0
  1358  00005D                     r_protocol@retry:
  1359                           	opt callstack 0
  1360  00005D                     	ds	1
  1361                           
  1362                           	psect	bssBANK0
  1363  0000BE                     __pbssBANK0:
  1364                           	opt callstack 0
  1365  0000BE                     _r_block:
  1366                           	opt callstack 0
  1367  0000BE                     	ds	13
  1368  0000CB                     _spi_link:
  1369                           	opt callstack 0
  1370  0000CB                     	ds	12
  1371  0000D7                     _tickCount:
  1372                           	opt callstack 0
  1373  0000D7                     	ds	12
  1374  0000E3                     t_protocol@block:
  1375                           	opt callstack 0
  1376  0000E3                     	ds	7
  1377  0000EA                     wdtdelay@dcount:
  1378                           	opt callstack 0
  1379  0000EA                     	ds	4
  1380  0000EE                     _TMR5_InterruptHandler:
  1381                           	opt callstack 0
  1382  0000EE                     	ds	3
  1383  0000F1                     _TMR6_InterruptHandler:
  1384                           	opt callstack 0
  1385  0000F1                     	ds	3
  1386  0000F4                     _ADCC_ADI_InterruptHandler:
  1387                           	opt callstack 0
  1388  0000F4                     	ds	3
  1389  0000F7                     _nout:
  1390                           	opt callstack 0
  1391  0000F7                     	ds	2
  1392  0000F9                     run_checksum@sum:
  1393                           	opt callstack 0
  1394  0000F9                     	ds	2
  1395                           
  1396                           	psect	dataBANK0
  1397  000060                     __pdataBANK0:
  1398                           	opt callstack 0
  1399  000060                     _V:
  1400                           	opt callstack 0
  1401  000060                     	ds	94
  1402                           
  1403                           	psect	bssBANK1
  1404  0001D0                     __pbssBANK1:
  1405                           	opt callstack 0
  1406  0001D0                     _dbuf:
  1407                           	opt callstack 0
  1408  0001D0                     	ds	32
  1409                           
  1410                           	psect	dataBANK1
  1411  000100                     __pdataBANK1:
  1412                           	opt callstack 0
  1413  000100                     stoa@F1144:
  1414                           	opt callstack 0
  1415  000100                     	ds	7
  1416  000107                     _H10:
  1417                           	opt callstack 0
  1418  000107                     	ds	91
  1419  000162                     _H12:
  1420                           	opt callstack 0
  1421  000162                     	ds	30
  1422  000180                     _H24:
  1423                           	opt callstack 0
  1424  000180                     	ds	27
  1425  00019B                     _H17:
  1426                           	opt callstack 0
  1427  00019B                     	ds	20
  1428  0001AF                     _H14:
  1429                           	opt callstack 0
  1430  0001AF                     	ds	17
  1431  0001C0                     _H13:
  1432                           	opt callstack 0
  1433  0001C0                     	ds	16
  1434                           
  1435                           	psect	bssBANK2
  1436  000200                     __pbssBANK2:
  1437                           	opt callstack 0
  1438  000200                     _uart2RxBuffer:
  1439                           	opt callstack 0
  1440  000200                     	ds	64
  1441  000240                     _uart1RxBuffer:
  1442                           	opt callstack 0
  1443  000240                     	ds	64
  1444  000280                     _uart1TxBuffer:
  1445                           	opt callstack 0
  1446  000280                     	ds	64
  1447                           
  1448                           	psect	dataBANK2
  1449  0002C0                     __pdataBANK2:
  1450                           	opt callstack 0
  1451  0002C0                     _H27:
  1452                           	opt callstack 0
  1453  0002C0                     	ds	30
  1454                           
  1455                           	psect	bssBANK3
  1456  000300                     __pbssBANK3:
  1457                           	opt callstack 0
  1458  000300                     _uart2TxBuffer:
  1459                           	opt callstack 0
  1460  000300                     	ds	64
  1461  000340                     _ring_buf2:
  1462                           	opt callstack 0
  1463  000340                     	ds	67
  1464  000383                     _ring_buf1:
  1465                           	opt callstack 0
  1466  000383                     	ds	67
  1467                           
  1468                           	psect	dataBANK3
  1469  0003C6                     __pdataBANK3:
  1470                           	opt callstack 0
  1471  0003C6                     _H53:
  1472                           	opt callstack 0
  1473  0003C6                     	ds	56
  1474                           
  1475                           	psect	cstackCOMRAM
  1476  000059                     __pcstackCOMRAM:
  1477                           	opt callstack 0
  1478  000059                     ??_TMR6_ISR:
  1479  000059                     
  1480                           ; 1 bytes @ 0x0
  1481  000059                     	ds	1
  1482  00005A                     ??_TMR5_ISR:
  1483                           
  1484                           ; 1 bytes @ 0x1
  1485  00005A                     	ds	3
  1486                           
  1487 ;;
  1488 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1489 ;;
  1490 ;; *************** function _main *****************
  1491 ;; Defined at:
  1492 ;;		line 311 in file "main.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  mode            1  [STACK] enum E16897
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1  [STACK] void 
  1499 ;; Registers used:
  1500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 4/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels required when called:   14
  1512 ;; This function calls:
  1513 ;;		_SYSTEM_Initialize
  1514 ;;		_UART1_put_buffer
  1515 ;;		_UART2_put_buffer
  1516 ;;		_WaitMs
  1517 ;;		_eaDogM_WriteCommand
  1518 ;;		_eaDogM_WriteStringAtPos
  1519 ;;		_init_display
  1520 ;;		_m_protocol
  1521 ;;		_r_protocol
  1522 ;;		_sprintf
  1523 ;;		_t_protocol
  1524 ;;		_wait_lcd_done
  1525 ;; This function is called by:
  1526 ;;		Startup code after reset
  1527 ;; This function uses a reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text0
  1531  0020C0                     __ptext0:
  1532                           	opt callstack 0
  1533  0020C0                     _main:
  1534                           	opt callstack 0
  1535                           
  1536                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1537  0020C0  52E6               	movf	postinc1,f,c
  1538                           
  1539                           ;main.c: 313:  UI_STATES mode;;main.c: 316:  SYSTEM_Initialize();
  1540                           
  1541                           ;incstack = 0
  1542  0020C2  ECC3  F02D         	call	_SYSTEM_Initialize	;wreg free
  1543                           
  1544                           ; BSR set to: 60
  1545                           ;main.c: 319:  (INTCON0bits.GIEH = 1);
  1546  0020C6  8ED2               	bsf	16338,7,c	;volatile
  1547                           
  1548                           ; BSR set to: 60
  1549                           ;main.c: 322:  (INTCON0bits.GIEL = 1);
  1550  0020C8  8CD2               	bsf	16338,6,c	;volatile
  1551                           
  1552                           ; BSR set to: 60
  1553                           ;main.c: 324:  V.ui_state = UI_STATE_INIT;
  1554  0020CA  0100               	movlb	0	; () banked
  1555  0020CC  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;main.c: 329:  WaitMs(300);
  1559  0020CE  0E2C               	movlw	44
  1560  0020D0  6EE6               	movwf	postinc1,c
  1561  0020D2  0E01               	movlw	1
  1562  0020D4  6EE6               	movwf	postinc1,c
  1563  0020D6  EC52  F02F         	call	_WaitMs	;wreg free
  1564                           
  1565                           ;main.c: 330:  if (PORTBbits.RB0) {
  1566  0020DA  A0CB               	btfss	16331,0,c	;volatile
  1567  0020DC  D004               	goto	l9125
  1568                           
  1569                           ;main.c: 331:   mode = UI_STATE_HOST;
  1570                           ;stkvar	_mode @ sp[(-1)+0]
  1571  0020DE  0EFF               	movlw	-1
  1572  0020E0  6AE3               	clrf	plusw1,c
  1573  0020E2  2AE3               	incf	plusw1,f,c
  1574                           
  1575                           ;main.c: 332:  } else {
  1576  0020E4  D004               	goto	l9127
  1577  0020E6                     l9125:
  1578                           
  1579                           ;main.c: 333:   mode = UI_STATE_LOG;
  1580                           ;stkvar	_mode @ sp[(-1)+0]
  1581  0020E6  0EFF               	movlw	-1
  1582  0020E8  6AE3               	clrf	plusw1,c
  1583  0020EA  80E3               	bsf	plusw1,0,c
  1584  0020EC  82E3               	bsf	plusw1,1,c	;indir
  1585  0020EE                     l9127:
  1586                           
  1587                           ;main.c: 336:  if (mode == UI_STATE_HOST) {
  1588                           ;stkvar	_mode @ sp[(-1)+0]
  1589  0020EE  0EFF               	movlw	-1
  1590  0020F0  04E3               	decf	plusw1,w,c
  1591  0020F2  A4D8               	btfss	status,2,c
  1592  0020F4  D003               	goto	l1228
  1593                           
  1594                           ;main.c: 337:   do { LATDbits.LATD0 = 1; } while(0);
  1595  0020F6  80BD               	bsf	16317,0,c	;volatile
  1596                           
  1597                           ;main.c: 338:   do { LATDbits.LATD1 = 1; } while(0);
  1598  0020F8  82BD               	bsf	16317,1,c	;volatile
  1599  0020FA  D238               	goto	l9301
  1600  0020FC                     l1228:
  1601  0020FC  90BD               	bcf	16317,0,c	;volatile
  1602                           
  1603                           ;main.c: 341:   do { LATDbits.LATD1 = 0; } while(0);
  1604  0020FE  92BD               	bcf	16317,1,c	;volatile
  1605  002100  D235               	goto	l9301
  1606  002102                     l9129:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;main.c: 347:    init_display();
  1610  002102  ECF1  F026         	call	_init_display	;wreg free
  1611                           
  1612                           ; BSR set to: 61
  1613                           ;main.c: 348:    eaDogM_WriteCommand(0b00001100);
  1614  002106  0E0C               	movlw	12
  1615  002108  6EE6               	movwf	postinc1,c
  1616  00210A  ECF8  F031         	call	_eaDogM_WriteCommand	;wreg free
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;main.c: 350:    V.ui_state = mode;
  1620                           ;stkvar	_mode @ sp[(-1)+0]
  1621  00210E  0EFF               	movlw	-1
  1622  002110  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 351:    V.s_state = SEQ_STATE_INIT;
  1626  002116  6B60               	clrf	_V& (0+255),b	;volatile
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;main.c: 352:    sprintf(V.buf, " RVI HOST TESTER");
  1630  002118  0E69               	movlw	STR_1& (0+255)
  1631  00211A  6EE6               	movwf	postinc1,c
  1632  00211C  0E60               	movlw	_V& (0+255)
  1633  00211E  0F06               	addlw	6
  1634  002120  6EE6               	movwf	postinc1,c
  1635  002122  0E02               	movlw	2
  1636  002124  6EE6               	movwf	postinc1,c
  1637  002126  EC9E  F028         	call	_sprintf	;wreg free
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 353:    wait_lcd_done();
  1641  00212A  EC86  F031         	call	_wait_lcd_done	;wreg free
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 354:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1645  00212E  0E60               	movlw	_V& (0+255)
  1646  002130  0F06               	addlw	6
  1647  002132  6EE6               	movwf	postinc1,c
  1648  002134  0E00               	movlw	0
  1649  002136  6EE6               	movwf	postinc1,c
  1650  002138  0E00               	movlw	0
  1651  00213A  6EE6               	movwf	postinc1,c
  1652  00213C  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1653                           
  1654                           ; BSR set to: 59
  1655                           ;main.c: 355:    sprintf(V.buf, " Version %s", "0.81B");
  1656  002140  0EAF               	movlw	STR_3& (0+255)
  1657  002142  6E44               	movwf	btemp+11,c
  1658  002144  0060  F113  FFE6   	movff	btemp+11,postinc1
  1659  00214A  0E20               	movlw	high __smallconst
  1660  00214C  6EE6               	movwf	postinc1,c
  1661  00214E  0E97               	movlw	STR_2& (0+255)
  1662  002150  6EE6               	movwf	postinc1,c
  1663  002152  0E60               	movlw	_V& (0+255)
  1664  002154  0F06               	addlw	6
  1665  002156  6EE6               	movwf	postinc1,c
  1666  002158  0E04               	movlw	4
  1667  00215A  6EE6               	movwf	postinc1,c
  1668  00215C  EC9E  F028         	call	_sprintf	;wreg free
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;main.c: 356:    wait_lcd_done();
  1672  002160  EC86  F031         	call	_wait_lcd_done	;wreg free
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 357:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1676  002164  0E60               	movlw	_V& (0+255)
  1677  002166  0F06               	addlw	6
  1678  002168  6EE6               	movwf	postinc1,c
  1679  00216A  0E00               	movlw	0
  1680  00216C  6EE6               	movwf	postinc1,c
  1681  00216E  0E01               	movlw	1
  1682  002170  6EE6               	movwf	postinc1,c
  1683  002172  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1684                           
  1685                           ; BSR set to: 59
  1686                           ;main.c: 358:    sprintf(V.buf, " FGB@MCHP FAB4");
  1687  002176  0E7A               	movlw	STR_4& (0+255)
  1688  002178  6EE6               	movwf	postinc1,c
  1689  00217A  0E60               	movlw	_V& (0+255)
  1690  00217C  0F06               	addlw	6
  1691  00217E  6EE6               	movwf	postinc1,c
  1692  002180  0E02               	movlw	2
  1693  002182  6EE6               	movwf	postinc1,c
  1694  002184  EC9E  F028         	call	_sprintf	;wreg free
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;main.c: 359:    wait_lcd_done();
  1698  002188  EC86  F031         	call	_wait_lcd_done	;wreg free
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 360:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1702  00218C  0E60               	movlw	_V& (0+255)
  1703  00218E  0F06               	addlw	6
  1704  002190  6EE6               	movwf	postinc1,c
  1705  002192  0E00               	movlw	0
  1706  002194  6EE6               	movwf	postinc1,c
  1707  002196  0E02               	movlw	2
  1708  002198  6EE6               	movwf	postinc1,c
  1709  00219A  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1710                           
  1711                           ; BSR set to: 59
  1712                           ;main.c: 361:    WaitMs(3000);
  1713  00219E  0EB8               	movlw	184
  1714  0021A0  6EE6               	movwf	postinc1,c
  1715  0021A2  0E0B               	movlw	11
  1716  0021A4  6EE6               	movwf	postinc1,c
  1717  0021A6  EC52  F02F         	call	_WaitMs	;wreg free
  1718                           
  1719                           ;main.c: 362:    break;
  1720  0021AA  D1F4               	goto	l1273
  1721  0021AC                     l1238:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 366:     V.r_l_state = LINK_STATE_IDLE;
  1725  0021AC  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1726                           
  1727                           ;main.c: 367:     V.t_l_state = LINK_STATE_IDLE;
  1728  0021AE  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 368:     V.s_state = SEQ_STATE_RX;
  1732  0021B0  0E01               	movlw	1
  1733  0021B2  6F60               	movwf	_V& (0+255),b	;volatile
  1734                           
  1735                           ;main.c: 369:     if (!V.error && !V.abort) {
  1736  0021B4  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  1737  0021B6  A4D8               	btfss	status,2,c
  1738  0021B8  D028               	goto	l9169
  1739                           
  1740                           ; BSR set to: 0
  1741  0021BA  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  1742  0021BC  A4D8               	btfss	status,2,c
  1743  0021BE  D025               	goto	l9169
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;main.c: 370:      sprintf(V.buf, "HOST MODE %ld %d  #", V.ticks, V.g_state);
  1747  0021C0  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  1748  0021C2  6EE6               	movwf	postinc1,c
  1749  0021C4  0E00               	movlw	0
  1750  0021C6  6EE6               	movwf	postinc1,c
  1751  0021C8  0060  F29B  FFE6   	movff	_V+70,postinc1
  1752  0021CE  0060  F29F  FFE6   	movff	_V+71,postinc1
  1753  0021D4  0060  F2A3  FFE6   	movff	_V+72,postinc1
  1754  0021DA  0060  F2A7  FFE6   	movff	_V+73,postinc1
  1755  0021E0  0E42               	movlw	STR_5& (0+255)
  1756  0021E2  6EE6               	movwf	postinc1,c
  1757  0021E4  0E60               	movlw	_V& (0+255)
  1758  0021E6  0F06               	addlw	6
  1759  0021E8  6EE6               	movwf	postinc1,c
  1760  0021EA  0E08               	movlw	8
  1761  0021EC  6EE6               	movwf	postinc1,c
  1762  0021EE  EC9E  F028         	call	_sprintf	;wreg free
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;main.c: 371:      V.buf[16] = 0;
  1766  0021F2  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;main.c: 372:      wait_lcd_done();
  1770  0021F4  EC86  F031         	call	_wait_lcd_done	;wreg free
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main.c: 373:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1774  0021F8  0E60               	movlw	_V& (0+255)
  1775  0021FA  0F06               	addlw	6
  1776  0021FC  6EE6               	movwf	postinc1,c
  1777  0021FE  0E00               	movlw	0
  1778  002200  6EE6               	movwf	postinc1,c
  1779  002202  0E02               	movlw	2
  1780  002204  6EE6               	movwf	postinc1,c
  1781  002206  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1782  00220A                     l9169:
  1783                           
  1784                           ;main.c: 376:     WaitMs(50);
  1785  00220A  0E32               	movlw	50
  1786  00220C  6EE6               	movwf	postinc1,c
  1787  00220E  0E00               	movlw	0
  1788  002210  6EE6               	movwf	postinc1,c
  1789  002212  EC52  F02F         	call	_WaitMs	;wreg free
  1790                           
  1791                           ;main.c: 377:     UART1_put_buffer(0x05);
  1792  002216  0E05               	movlw	5
  1793  002218  6EE6               	movwf	postinc1,c
  1794  00221A  EC3D  F02F         	call	_UART1_put_buffer	;wreg free
  1795                           
  1796                           ;main.c: 379:     break;
  1797  00221E  D0CB               	goto	l9235
  1798  002220                     l9173:
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;main.c: 384:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1802  002220  0E60               	movlw	_V& (0+255)
  1803  002222  0F04               	addlw	4
  1804  002224  6EE6               	movwf	postinc1,c
  1805  002226  EC26  F01A         	call	_r_protocol	;wreg free
  1806  00222A  0E04               	movlw	4
  1807  00222C  1839               	xorwf	btemp,w,c
  1808  00222E  A4D8               	btfss	status,2,c
  1809  002230  D02F               	goto	l9193
  1810                           
  1811                           ;main.c: 385:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1812  002232  0100               	movlb	0	; () banked
  1813  002234  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  1814  002236  6EE6               	movwf	postinc1,c
  1815  002238  0E00               	movlw	0
  1816  00223A  6EE6               	movwf	postinc1,c
  1817  00223C  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  1818  00223E  6EE6               	movwf	postinc1,c
  1819  002240  0E00               	movlw	0
  1820  002242  6EE6               	movwf	postinc1,c
  1821  002244  0E89               	movlw	STR_6& (0+255)
  1822  002246  6EE6               	movwf	postinc1,c
  1823  002248  0E60               	movlw	_V& (0+255)
  1824  00224A  0F06               	addlw	6
  1825  00224C  6EE6               	movwf	postinc1,c
  1826  00224E  0E06               	movlw	6
  1827  002250  6EE6               	movwf	postinc1,c
  1828  002252  EC9E  F028         	call	_sprintf	;wreg free
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 386:      V.buf[11] = 0;
  1832  002256  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 387:      wait_lcd_done();
  1836  002258  EC86  F031         	call	_wait_lcd_done	;wreg free
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;main.c: 388:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1840  00225C  0E60               	movlw	_V& (0+255)
  1841  00225E  0F06               	addlw	6
  1842  002260  6EE6               	movwf	postinc1,c
  1843  002262  0E00               	movlw	0
  1844  002264  6EE6               	movwf	postinc1,c
  1845  002266  0E00               	movlw	0
  1846  002268  6EE6               	movwf	postinc1,c
  1847  00226A  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1848                           
  1849                           ; BSR set to: 59
  1850                           ;main.c: 390:      WaitMs(5);
  1851  00226E  0E05               	movlw	5
  1852  002270  6EE6               	movwf	postinc1,c
  1853  002272  0E00               	movlw	0
  1854  002274  6EE6               	movwf	postinc1,c
  1855  002276  EC52  F02F         	call	_WaitMs	;wreg free
  1856                           
  1857                           ;main.c: 392:      if (V.wbit) {
  1858  00227A  0100               	movlb	0	; () banked
  1859  00227C  A3B7               	btfss	(_V+87)& (0+255),1,b	;volatile
  1860  00227E  D006               	goto	l9191
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 393:       V.s_state = SEQ_STATE_TX;
  1864  002280  0E02               	movlw	2
  1865  002282  6F60               	movwf	_V& (0+255),b	;volatile
  1866                           
  1867                           ;main.c: 394:       V.failed_send = 0;
  1868  002284  0E87               	movlw	-121
  1869  002286  17B7               	andwf	(_V+87)& (0+255),f,b	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 395:       V.t_l_state = LINK_STATE_IDLE;
  1873  002288  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1874                           
  1875                           ;main.c: 396:      } else {
  1876  00228A  D002               	goto	l9193
  1877  00228C                     l9191:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 397:       V.s_state = SEQ_STATE_TRIGGER;
  1881  00228C  0E03               	movlw	3
  1882  00228E  6F60               	movwf	_V& (0+255),b	;volatile
  1883  002290                     l9193:
  1884                           
  1885                           ;main.c: 400:     if (V.r_l_state == LINK_STATE_ERROR)
  1886  002290  0E06               	movlw	6
  1887  002292  0100               	movlb	0	; () banked
  1888  002294  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  1889  002296  D00F               	goto	L28
  1890  002298                     l9197:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 407:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1894  002298  0E60               	movlw	_V& (0+255)
  1895  00229A  0F05               	addlw	5
  1896  00229C  6EE6               	movwf	postinc1,c
  1897  00229E  EC9F  F01E         	call	_t_protocol	;wreg free
  1898  0022A2  0E04               	movlw	4
  1899  0022A4  1839               	xorwf	btemp,w,c
  1900  0022A6  A4D8               	btfss	status,2,c
  1901  0022A8  D003               	goto	l9201
  1902                           
  1903                           ;main.c: 408:      V.s_state = SEQ_STATE_TRIGGER;
  1904  0022AA  0E03               	movlw	3
  1905  0022AC  0100               	movlb	0	; () banked
  1906  0022AE  6F60               	movwf	_V& (0+255),b	;volatile
  1907  0022B0                     l9201:
  1908                           
  1909                           ;main.c: 410:     if (V.t_l_state == LINK_STATE_ERROR)
  1910  0022B0  0E06               	movlw	6
  1911  0022B2  0100               	movlb	0	; () banked
  1912  0022B4  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  1913  0022B6                     L28:
  1914  0022B6  A4D8               	btfss	status,2,c
  1915  0022B8  D07E               	goto	l9235
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 411:      V.s_state = SEQ_STATE_ERROR;
  1919  0022BA  0E06               	movlw	6
  1920  0022BC  6F60               	movwf	_V& (0+255),b	;volatile
  1921  0022BE  D07B               	goto	l9235
  1922  0022C0                     l1249:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 414:     if (V.queue) {
  1926  0022C0  A9B8               	btfss	(_V+88)& (0+255),4,b	;volatile
  1927  0022C2  D01C               	goto	l9215
  1928                           
  1929                           ; BSR set to: 0
  1930  0022C4  A4BE               	btfss	16318,2,c	;volatile
  1931  0022C6  D002               	goto	u6060
  1932  0022C8  0E01               	movlw	1
  1933  0022CA  D001               	goto	u6066
  1934  0022CC                     u6060:
  1935  0022CC  0E00               	movlw	0
  1936  0022CE                     u6066:
  1937  0022CE  0AFF               	xorlw	255
  1938  0022D0  6E44               	movwf	btemp+11,c
  1939  0022D2  4644               	rlncf	btemp+11,f,c
  1940  0022D4  4644               	rlncf	btemp+11,f,c
  1941  0022D6  50BE               	movf	16318,w,c	;volatile
  1942  0022D8  1844               	xorwf	btemp+11,w,c
  1943  0022DA  0BFB               	andlw	-5
  1944  0022DC  1844               	xorwf	btemp+11,w,c
  1945  0022DE  6EBE               	movwf	16318,c	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main.c: 416:      V.r_l_state = LINK_STATE_IDLE;
  1949  0022E0  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;main.c: 417:      V.t_l_state = LINK_STATE_IDLE;
  1953  0022E2  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 418:      V.s_state = SEQ_STATE_TX;
  1957  0022E4  0E02               	movlw	2
  1958  0022E6  6F60               	movwf	_V& (0+255),b	;volatile
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;main.c: 419:      sprintf(V.buf, " OKQ#");
  1962  0022E8  0EA9               	movlw	STR_7& (0+255)
  1963  0022EA  6EE6               	movwf	postinc1,c
  1964  0022EC  0E60               	movlw	_V& (0+255)
  1965  0022EE  0F06               	addlw	6
  1966  0022F0  6EE6               	movwf	postinc1,c
  1967  0022F2  0E02               	movlw	2
  1968  0022F4  6EE6               	movwf	postinc1,c
  1969  0022F6  EC9E  F028         	call	_sprintf	;wreg free
  1970                           
  1971                           ;main.c: 420:     } else {
  1972  0022FA  D00B               	goto	l9219
  1973  0022FC                     l9215:
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;main.c: 421:      V.s_state = SEQ_STATE_DONE;
  1977  0022FC  0E05               	movlw	5
  1978  0022FE  6F60               	movwf	_V& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;main.c: 422:      sprintf(V.buf, " OK #");
  1982  002300  0EA3               	movlw	STR_8& (0+255)
  1983  002302  6EE6               	movwf	postinc1,c
  1984  002304  0E60               	movlw	_V& (0+255)
  1985  002306  0F06               	addlw	6
  1986  002308  6EE6               	movwf	postinc1,c
  1987  00230A  0E02               	movlw	2
  1988  00230C  6EE6               	movwf	postinc1,c
  1989  00230E  EC9E  F028         	call	_sprintf	;wreg free
  1990  002312                     l9219:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;main.c: 424:     wait_lcd_done();
  1994  002312  EC86  F031         	call	_wait_lcd_done	;wreg free
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;main.c: 425:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1998  002316  0E60               	movlw	_V& (0+255)
  1999  002318  0F06               	addlw	6
  2000  00231A  6EE6               	movwf	postinc1,c
  2001  00231C  0E0B               	movlw	11
  2002  00231E  6EE6               	movwf	postinc1,c
  2003  002320  0E00               	movlw	0
  2004  002322  6EE6               	movwf	postinc1,c
  2005  002324  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2006                           
  2007                           ;main.c: 426:     break;
  2008  002328  D046               	goto	l9235
  2009  00232A                     l1254:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;main.c: 428:     V.s_state = SEQ_STATE_INIT;
  2013  00232A  6B60               	clrf	_V& (0+255),b	;volatile
  2014                           
  2015                           ;main.c: 429:     break;
  2016  00232C  D044               	goto	l9235
  2017  00232E                     l1256:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;main.c: 432:     V.s_state = SEQ_STATE_INIT;
  2021  00232E  6B60               	clrf	_V& (0+255),b	;volatile
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;main.c: 433:     sprintf(V.buf, "E R%d T%d E%d A%d G%d#", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort, V.g_state);
  2025  002330  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2026  002332  6EE6               	movwf	postinc1,c
  2027  002334  0E00               	movlw	0
  2028  002336  6EE6               	movwf	postinc1,c
  2029  002338  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2030  00233A  6EE6               	movwf	postinc1,c
  2031  00233C  0E00               	movlw	0
  2032  00233E  6EE6               	movwf	postinc1,c
  2033  002340  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2034  002342  6EE6               	movwf	postinc1,c
  2035  002344  0E00               	movlw	0
  2036  002346  6EE6               	movwf	postinc1,c
  2037  002348  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2038  00234A  6EE6               	movwf	postinc1,c
  2039  00234C  0E00               	movlw	0
  2040  00234E  6EE6               	movwf	postinc1,c
  2041  002350  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2042  002352  6EE6               	movwf	postinc1,c
  2043  002354  0E00               	movlw	0
  2044  002356  6EE6               	movwf	postinc1,c
  2045  002358  0E01               	movlw	STR_9& (0+255)
  2046  00235A  6EE6               	movwf	postinc1,c
  2047  00235C  0E60               	movlw	_V& (0+255)
  2048  00235E  0F06               	addlw	6
  2049  002360  6EE6               	movwf	postinc1,c
  2050  002362  0E0C               	movlw	12
  2051  002364  6EE6               	movwf	postinc1,c
  2052  002366  EC9E  F028         	call	_sprintf	;wreg free
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;main.c: 434:     V.buf[16] = 0;
  2056  00236A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 435:     wait_lcd_done();
  2060  00236C  EC86  F031         	call	_wait_lcd_done	;wreg free
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;main.c: 436:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2064  002370  0E60               	movlw	_V& (0+255)
  2065  002372  0F06               	addlw	6
  2066  002374  6EE6               	movwf	postinc1,c
  2067  002376  0E00               	movlw	0
  2068  002378  6EE6               	movwf	postinc1,c
  2069  00237A  0E02               	movlw	2
  2070  00237C  6EE6               	movwf	postinc1,c
  2071  00237E  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2072                           
  2073                           ;main.c: 437:     break;
  2074  002382  D019               	goto	l9235
  2075  002384                     l9233:
  2076                           
  2077                           ; BSR set to: 0
  2078  002384  5160               	movf	_V& (0+255),w,b	;volatile
  2079  002386  6E43               	movwf	btemp+10,c
  2080  002388  6A44               	clrf	btemp+11,c
  2081                           
  2082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 1, Range of values is 0 to 0
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte            4     3 (average)
  2088                           ;	Chosen strategy is simple_byte
  2089  00238A  5044               	movf	btemp+11,w,c
  2090  00238C  0A00               	xorlw	0	; case 0
  2091  00238E  A4D8               	btfss	status,2,c
  2092  002390  D7CE               	goto	l1256
  2093                           
  2094                           ; BSR set to: 0
  2095                           ; Switch size 1, requested type "simple"
  2096                           ; Number of cases is 6, Range of values is 0 to 6
  2097                           ; switch strategies available:
  2098                           ; Name         Instructions Cycles
  2099                           ; simple_byte           19    10 (average)
  2100                           ;	Chosen strategy is simple_byte
  2101  002392  5043               	movf	btemp+10,w,c
  2102  002394  0A00               	xorlw	0	; case 0
  2103  002396  B4D8               	btfsc	status,2,c
  2104  002398  D709               	goto	l1238
  2105  00239A  0A01               	xorlw	1	; case 1
  2106  00239C  B4D8               	btfsc	status,2,c
  2107  00239E  D740               	goto	l9173
  2108  0023A0  0A03               	xorlw	3	; case 2
  2109  0023A2  B4D8               	btfsc	status,2,c
  2110  0023A4  D779               	goto	l9197
  2111  0023A6  0A01               	xorlw	1	; case 3
  2112  0023A8  B4D8               	btfsc	status,2,c
  2113  0023AA  D78A               	goto	l1249
  2114  0023AC  0A06               	xorlw	6	; case 5
  2115  0023AE  B4D8               	btfsc	status,2,c
  2116  0023B0  D7BC               	goto	l1254
  2117  0023B2  0A03               	xorlw	3	; case 6
  2118  0023B4  D7BC               	goto	l1256
  2119  0023B6                     l9235:
  2120                           
  2121                           ;main.c: 439:    if (!V.error && !V.abort) {
  2122  0023B6  0100               	movlb	0	; () banked
  2123  0023B8  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2124  0023BA  A4D8               	btfss	status,2,c
  2125  0023BC  D0EB               	goto	l1273
  2126                           
  2127                           ; BSR set to: 0
  2128  0023BE  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2129  0023C0  A4D8               	btfss	status,2,c
  2130  0023C2  D0E8               	goto	l1273
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;main.c: 440:     sprintf(V.buf, "HOST MODE %ld %d  #", V.ticks, V.g_state);
  2134  0023C4  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2135  0023C6  6EE6               	movwf	postinc1,c
  2136  0023C8  0E00               	movlw	0
  2137  0023CA  6EE6               	movwf	postinc1,c
  2138  0023CC  0060  F29B  FFE6   	movff	_V+70,postinc1
  2139  0023D2  0060  F29F  FFE6   	movff	_V+71,postinc1
  2140  0023D8  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2141  0023DE  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2142  0023E4  0E42               	movlw	STR_5& (0+255)
  2143  0023E6  6EE6               	movwf	postinc1,c
  2144  0023E8  0E60               	movlw	_V& (0+255)
  2145  0023EA  0F06               	addlw	6
  2146  0023EC  6EE6               	movwf	postinc1,c
  2147  0023EE  0E08               	movlw	8
  2148  0023F0  6EE6               	movwf	postinc1,c
  2149  0023F2  EC9E  F028         	call	_sprintf	;wreg free
  2150  0023F6                     l9241:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;main.c: 441:     V.buf[16] = 0;
  2154  0023F6  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;main.c: 442:     wait_lcd_done();
  2158  0023F8  EC86  F031         	call	_wait_lcd_done	;wreg free
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;main.c: 443:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2162  0023FC  0E60               	movlw	_V& (0+255)
  2163  0023FE  0F06               	addlw	6
  2164  002400  6EE6               	movwf	postinc1,c
  2165  002402  0E00               	movlw	0
  2166  002404  6EE6               	movwf	postinc1,c
  2167  002406  0E02               	movlw	2
  2168  002408  6EE6               	movwf	postinc1,c
  2169  00240A  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2170  00240E  D0C2               	goto	l1273
  2171  002410                     l1260:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;main.c: 449:     V.m_l_state = LINK_STATE_IDLE;
  2175  002410  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;main.c: 450:     V.s_state = SEQ_STATE_RX;
  2179  002412  0E01               	movlw	1
  2180  002414  6F60               	movwf	_V& (0+255),b	;volatile
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;main.c: 451:     sprintf(V.buf, "LOG MODE %d %d     #", V.uart, V.g_state);
  2184  002416  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2185  002418  6EE6               	movwf	postinc1,c
  2186  00241A  0E00               	movlw	0
  2187  00241C  6EE6               	movwf	postinc1,c
  2188  00241E  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2189  002420  6EE6               	movwf	postinc1,c
  2190  002422  0E00               	movlw	0
  2191  002424  6EE6               	movwf	postinc1,c
  2192  002426  0E18               	movlw	STR_11& (0+255)
  2193  002428  6EE6               	movwf	postinc1,c
  2194  00242A  0E60               	movlw	_V& (0+255)
  2195  00242C  0F06               	addlw	6
  2196  00242E  6EE6               	movwf	postinc1,c
  2197  002430  0E06               	movlw	6
  2198  002432  6EE6               	movwf	postinc1,c
  2199  002434  EC9E  F028         	call	_sprintf	;wreg free
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;main.c: 452:     V.buf[16] = 0;
  2203  002438  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;main.c: 453:     wait_lcd_done();
  2207  00243A  EC86  F031         	call	_wait_lcd_done	;wreg free
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;main.c: 454:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2211  00243E  0E60               	movlw	_V& (0+255)
  2212  002440  0F06               	addlw	6
  2213  002442  6EE6               	movwf	postinc1,c
  2214  002444  0E00               	movlw	0
  2215  002446  6EE6               	movwf	postinc1,c
  2216  002448  0E02               	movlw	2
  2217  00244A  6EE6               	movwf	postinc1,c
  2218  00244C  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2219                           
  2220                           ; BSR set to: 59
  2221                           ;main.c: 456:     if (LATEbits.LATE0) {
  2222  002450  A0BE               	btfss	16318,0,c	;volatile
  2223  002452  D005               	goto	l9261
  2224                           
  2225                           ; BSR set to: 59
  2226                           ;main.c: 457:      UART2_put_buffer(0x05);
  2227  002454  0E05               	movlw	5
  2228  002456  6EE6               	movwf	postinc1,c
  2229  002458  EC28  F02F         	call	_UART2_put_buffer	;wreg free
  2230                           
  2231                           ;main.c: 458:     } else {
  2232  00245C  D072               	goto	l9291
  2233  00245E                     l9261:
  2234                           
  2235                           ; BSR set to: 59
  2236                           ;main.c: 459:      UART1_put_buffer(0x05);
  2237  00245E  0E05               	movlw	5
  2238  002460  6EE6               	movwf	postinc1,c
  2239  002462  EC3D  F02F         	call	_UART1_put_buffer	;wreg free
  2240  002466  D06D               	goto	l9291
  2241  002468                     l9263:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;main.c: 467:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2245  002468  0E60               	movlw	_V& (0+255)
  2246  00246A  0F03               	addlw	3
  2247  00246C  6EE6               	movwf	postinc1,c
  2248  00246E  EC1B  F013         	call	_m_protocol	;wreg free
  2249  002472  0E04               	movlw	4
  2250  002474  1839               	xorwf	btemp,w,c
  2251  002476  A4D8               	btfss	status,2,c
  2252  002478  D02D               	goto	l9275
  2253                           
  2254                           ;main.c: 468:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  2255  00247A  0060  F29B  FFE6   	movff	_V+70,postinc1
  2256  002480  0060  F29F  FFE6   	movff	_V+71,postinc1
  2257  002486  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2258  00248C  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2259  002492  0100               	movlb	0	; () banked
  2260  002494  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2261  002496  6EE6               	movwf	postinc1,c
  2262  002498  0E00               	movlw	0
  2263  00249A  6EE6               	movwf	postinc1,c
  2264  00249C  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2265  00249E  6EE6               	movwf	postinc1,c
  2266  0024A0  0E00               	movlw	0
  2267  0024A2  6EE6               	movwf	postinc1,c
  2268  0024A4  0E56               	movlw	STR_12& (0+255)
  2269  0024A6  6EE6               	movwf	postinc1,c
  2270  0024A8  0E60               	movlw	_V& (0+255)
  2271  0024AA  0F06               	addlw	6
  2272  0024AC  6EE6               	movwf	postinc1,c
  2273  0024AE  0E0A               	movlw	10
  2274  0024B0  6EE6               	movwf	postinc1,c
  2275  0024B2  EC9E  F028         	call	_sprintf	;wreg free
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;main.c: 469:      V.buf[13] = 0;
  2279  0024B6  6B73               	clrf	(_V+19)& (0+255),b	;volatile
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;main.c: 470:      wait_lcd_done();
  2283  0024B8  EC86  F031         	call	_wait_lcd_done	;wreg free
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;main.c: 471:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2287  0024BC  0E60               	movlw	_V& (0+255)
  2288  0024BE  0F06               	addlw	6
  2289  0024C0  6EE6               	movwf	postinc1,c
  2290  0024C2  0E00               	movlw	0
  2291  0024C4  6EE6               	movwf	postinc1,c
  2292  0024C6  05BC               	decf	(_V+92)& (0+255),w,b	;volatile
  2293  0024C8  6EE6               	movwf	postinc1,c
  2294  0024CA  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2295                           
  2296                           ; BSR set to: 59
  2297                           ;main.c: 472:      V.s_state = SEQ_STATE_TRIGGER;
  2298  0024CE  0E03               	movlw	3
  2299  0024D0  0100               	movlb	0	; () banked
  2300  0024D2  6F60               	movwf	_V& (0+255),b	;volatile
  2301  0024D4                     l9275:
  2302                           
  2303                           ;main.c: 474:     if (V.m_l_state == LINK_STATE_ERROR)
  2304  0024D4  0E06               	movlw	6
  2305  0024D6  0100               	movlb	0	; () banked
  2306  0024D8  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2307  0024DA  A4D8               	btfss	status,2,c
  2308  0024DC  D032               	goto	l9291
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;main.c: 475:      V.s_state = SEQ_STATE_ERROR;
  2312  0024DE  0E06               	movlw	6
  2313  0024E0  6F60               	movwf	_V& (0+255),b	;volatile
  2314  0024E2  D02F               	goto	l9291
  2315  0024E4                     l9279:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;main.c: 478:     V.s_state = SEQ_STATE_DONE;
  2319  0024E4  0E05               	movlw	5
  2320  0024E6  6F60               	movwf	_V& (0+255),b	;volatile
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;main.c: 479:     sprintf(V.buf, " OK #");
  2324  0024E8  0EA3               	movlw	STR_8& (0+255)
  2325  0024EA  6EE6               	movwf	postinc1,c
  2326  0024EC  0E60               	movlw	_V& (0+255)
  2327  0024EE  0F06               	addlw	6
  2328  0024F0  6EE6               	movwf	postinc1,c
  2329  0024F2  0E02               	movlw	2
  2330  0024F4  6EE6               	movwf	postinc1,c
  2331  0024F6  EC9E  F028         	call	_sprintf	;wreg free
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;main.c: 480:     wait_lcd_done();
  2335  0024FA  EC86  F031         	call	_wait_lcd_done	;wreg free
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;main.c: 481:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  2339  0024FE  0E60               	movlw	_V& (0+255)
  2340  002500  0F06               	addlw	6
  2341  002502  6EE6               	movwf	postinc1,c
  2342  002504  0E0D               	movlw	13
  2343  002506  6EE6               	movwf	postinc1,c
  2344  002508  05BC               	decf	(_V+92)& (0+255),w,b	;volatile
  2345  00250A  6EE6               	movwf	postinc1,c
  2346  00250C  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2347                           
  2348                           ;main.c: 482:     break;
  2349  002510  D018               	goto	l9291
  2350  002512                     l1268:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;main.c: 488:     V.s_state = SEQ_STATE_INIT;
  2354                           
  2355                           ;main.c: 487:    default:
  2356                           
  2357                           ;main.c: 485:     break;
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;main.c: 484:     V.s_state = SEQ_STATE_INIT;
  2361  002512  6B60               	clrf	_V& (0+255),b	;volatile
  2362                           
  2363                           ;main.c: 489:     break;
  2364  002514  D016               	goto	l9291
  2365  002516                     l9289:
  2366                           
  2367                           ; BSR set to: 0
  2368  002516  5160               	movf	_V& (0+255),w,b	;volatile
  2369  002518  6E43               	movwf	btemp+10,c
  2370  00251A  6A44               	clrf	btemp+11,c
  2371                           
  2372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2373                           ; Switch size 1, requested type "simple"
  2374                           ; Number of cases is 1, Range of values is 0 to 0
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte            4     3 (average)
  2378                           ;	Chosen strategy is simple_byte
  2379  00251C  5044               	movf	btemp+11,w,c
  2380  00251E  0A00               	xorlw	0	; case 0
  2381  002520  A4D8               	btfss	status,2,c
  2382  002522  D7F7               	goto	l1268
  2383                           
  2384                           ; BSR set to: 0
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 5, Range of values is 0 to 6
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte           16     9 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391  002524  5043               	movf	btemp+10,w,c
  2392  002526  0A00               	xorlw	0	; case 0
  2393  002528  B4D8               	btfsc	status,2,c
  2394  00252A  D772               	goto	l1260
  2395  00252C  0A01               	xorlw	1	; case 1
  2396  00252E  B4D8               	btfsc	status,2,c
  2397  002530  D79B               	goto	l9263
  2398  002532  0A02               	xorlw	2	; case 3
  2399  002534  B4D8               	btfsc	status,2,c
  2400  002536  D7D6               	goto	l9279
  2401  002538  0A06               	xorlw	6	; case 5
  2402  00253A  B4D8               	btfsc	status,2,c
  2403  00253C  D7EA               	goto	l1268
  2404  00253E  0A03               	xorlw	3	; case 6
  2405  002540  D7E8               	goto	l1268
  2406  002542                     l9291:
  2407                           
  2408                           ;main.c: 491:    sprintf(V.buf, "LOG MODE %d %d     #", V.uart, V.g_state);
  2409  002542  0100               	movlb	0	; () banked
  2410  002544  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2411  002546  6EE6               	movwf	postinc1,c
  2412  002548  0E00               	movlw	0
  2413  00254A  6EE6               	movwf	postinc1,c
  2414  00254C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2415  00254E  6EE6               	movwf	postinc1,c
  2416  002550  0E00               	movlw	0
  2417  002552  6EE6               	movwf	postinc1,c
  2418  002554  0E18               	movlw	STR_11& (0+255)
  2419  002556  6EE6               	movwf	postinc1,c
  2420  002558  0E60               	movlw	_V& (0+255)
  2421  00255A  0F06               	addlw	6
  2422  00255C  6EE6               	movwf	postinc1,c
  2423  00255E  0E06               	movlw	6
  2424  002560  6EE6               	movwf	postinc1,c
  2425  002562  EC9E  F028         	call	_sprintf	;wreg free
  2426  002566  D747               	goto	l9241
  2427  002568                     l1272:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 498:    V.ui_state = UI_STATE_INIT;
  2431  002568  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2432                           
  2433                           ;main.c: 499:    break;
  2434  00256A  D014               	goto	l1273
  2435  00256C                     l9301:
  2436  00256C  0100               	movlb	0	; () banked
  2437  00256E  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2438  002570  6E43               	movwf	btemp+10,c
  2439  002572  6A44               	clrf	btemp+11,c
  2440                           
  2441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2442                           ; Switch size 1, requested type "simple"
  2443                           ; Number of cases is 1, Range of values is 0 to 0
  2444                           ; switch strategies available:
  2445                           ; Name         Instructions Cycles
  2446                           ; simple_byte            4     3 (average)
  2447                           ;	Chosen strategy is simple_byte
  2448  002574  5044               	movf	btemp+11,w,c
  2449  002576  0A00               	xorlw	0	; case 0
  2450  002578  A4D8               	btfss	status,2,c
  2451  00257A  D7F6               	goto	l1272
  2452                           
  2453                           ; BSR set to: 0
  2454                           ; Switch size 1, requested type "simple"
  2455                           ; Number of cases is 4, Range of values is 0 to 4
  2456                           ; switch strategies available:
  2457                           ; Name         Instructions Cycles
  2458                           ; simple_byte           13     7 (average)
  2459                           ;	Chosen strategy is simple_byte
  2460  00257C  5043               	movf	btemp+10,w,c
  2461  00257E  0A00               	xorlw	0	; case 0
  2462  002580  B4D8               	btfsc	status,2,c
  2463  002582  D5BF               	goto	l9129
  2464  002584  0A01               	xorlw	1	; case 1
  2465  002586  B4D8               	btfsc	status,2,c
  2466  002588  D6FD               	goto	l9233
  2467  00258A  0A02               	xorlw	2	; case 3
  2468  00258C  B4D8               	btfsc	status,2,c
  2469  00258E  D7C3               	goto	l9289
  2470  002590  0A07               	xorlw	7	; case 4
  2471  002592  D7EA               	goto	l1272
  2472  002594                     l1273:
  2473  002594  82BE               	bsf	16318,1,c	;volatile
  2474                           
  2475                           ;main.c: 502:   if (V.ticks) {
  2476  002596  0100               	movlb	0	; () banked
  2477  002598  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2478  00259A  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2479  00259C  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2480  00259E  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2481  0025A0  B4D8               	btfsc	status,2,c
  2482  0025A2  D016               	goto	l9309
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;main.c: 503:    if (V.failed_receive) {
  2486  0025A4  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  2487  0025A6  0B0F               	andlw	15
  2488  0025A8  0900               	iorlw	0
  2489  0025AA  B4D8               	btfsc	status,2,c
  2490  0025AC  D003               	goto	l1282
  2491                           
  2492                           ; BSR set to: 0
  2493                           
  2494                           ;main.c: 504:     do { LATDbits.LATD4 = 0; } while(0);
  2495  0025AE  98BD               	bcf	16317,4,c	;volatile
  2496                           
  2497                           ; BSR set to: 0
  2498                           
  2499                           ;main.c: 505:     do { LATDbits.LATD5 = 1; } while(0);
  2500  0025B0  8ABD               	bsf	16317,5,c	;volatile
  2501  0025B2  D002               	goto	l9307
  2502  0025B4                     l1282:
  2503                           
  2504                           ; BSR set to: 0
  2505  0025B4  88BD               	bsf	16317,4,c	;volatile
  2506                           
  2507                           ; BSR set to: 0
  2508                           
  2509                           ;main.c: 508:     do { LATDbits.LATD5 = 0; } while(0);
  2510  0025B6  9ABD               	bcf	16317,5,c	;volatile
  2511  0025B8                     l9307:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 510:    if (V.failed_send) {
  2515  0025B8  31B7               	rrcf	(_V+87)& (0+255),w,b	;volatile
  2516  0025BA  32E8               	rrcf	wreg,f,c
  2517  0025BC  32E8               	rrcf	wreg,f,c
  2518  0025BE  0B0F               	andlw	15
  2519  0025C0  0900               	iorlw	0
  2520  0025C2  B4D8               	btfsc	status,2,c
  2521  0025C4  D003               	goto	l1292
  2522                           
  2523                           ; BSR set to: 0
  2524                           
  2525                           ;main.c: 511:     do { LATDbits.LATD6 = 0; } while(0);
  2526  0025C6  9CBD               	bcf	16317,6,c	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           
  2530                           ;main.c: 512:     do { LATDbits.LATD7 = 1; } while(0);
  2531  0025C8  8EBD               	bsf	16317,7,c	;volatile
  2532  0025CA  D002               	goto	l9309
  2533  0025CC                     l1292:
  2534                           
  2535                           ; BSR set to: 0
  2536  0025CC  8CBD               	bsf	16317,6,c	;volatile
  2537                           
  2538                           ; BSR set to: 0
  2539                           
  2540                           ;main.c: 515:     do { LATDbits.LATD7 = 0; } while(0);
  2541  0025CE  9EBD               	bcf	16317,7,c	;volatile
  2542  0025D0                     l9309:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;main.c: 518:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2546  0025D0  31B7               	rrcf	(_V+87)& (0+255),w,b	;volatile
  2547  0025D2  32E8               	rrcf	wreg,f,c
  2548  0025D4  32E8               	rrcf	wreg,f,c
  2549  0025D6  0B0F               	andlw	15
  2550  0025D8  6EE6               	movwf	postinc1,c
  2551  0025DA  0E00               	movlw	0
  2552  0025DC  6EE6               	movwf	postinc1,c
  2553  0025DE  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  2554  0025E0  0B0F               	andlw	15
  2555  0025E2  6EE6               	movwf	postinc1,c
  2556  0025E4  0E00               	movlw	0
  2557  0025E6  6EE6               	movwf	postinc1,c
  2558  0025E8  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2559  0025EA  6EE6               	movwf	postinc1,c
  2560  0025EC  0E00               	movlw	0
  2561  0025EE  6EE6               	movwf	postinc1,c
  2562  0025F0  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2563  0025F2  6EE6               	movwf	postinc1,c
  2564  0025F4  0E00               	movlw	0
  2565  0025F6  6EE6               	movwf	postinc1,c
  2566  0025F8  0E2D               	movlw	STR_15& (0+255)
  2567  0025FA  6EE6               	movwf	postinc1,c
  2568  0025FC  0E60               	movlw	_V& (0+255)
  2569  0025FE  0F06               	addlw	6
  2570  002600  6EE6               	movwf	postinc1,c
  2571  002602  0E0A               	movlw	10
  2572  002604  6EE6               	movwf	postinc1,c
  2573  002606  EC9E  F028         	call	_sprintf	;wreg free
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;main.c: 519:   V.buf[16] = 0;
  2577  00260A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;main.c: 520:   wait_lcd_done();
  2581  00260C  EC86  F031         	call	_wait_lcd_done	;wreg free
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;main.c: 521:   if (mode != UI_STATE_LOG)
  2585                           ;stkvar	_mode @ sp[(-1)+0]
  2586  002610  0EFF               	movlw	-1
  2587  002612  006F FF8C  F039    	movff	plusw1,btemp
  2588  002618  0E03               	movlw	3
  2589  00261A  1839               	xorwf	btemp,w,c
  2590  00261C  B4D8               	btfsc	status,2,c
  2591  00261E  D009               	goto	l9319
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;main.c: 522:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2595  002620  0E60               	movlw	_V& (0+255)
  2596  002622  0F06               	addlw	6
  2597  002624  6EE6               	movwf	postinc1,c
  2598  002626  0E00               	movlw	0
  2599  002628  6EE6               	movwf	postinc1,c
  2600  00262A  0E01               	movlw	1
  2601  00262C  6EE6               	movwf	postinc1,c
  2602  00262E  ECD0  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2603  002632                     l9319:
  2604  002632  92BE               	bcf	16318,1,c	;volatile
  2605  002634  D79B               	goto	l9301
  2606  002636                     __end_of_main:
  2607                           	opt callstack 0
  2608                           
  2609 ;; *************** function _t_protocol *****************
  2610 ;; Defined at:
  2611 ;;		line 315 in file "gemsecs.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  t_link          1  [STACK] PTR enum E16173
  2614 ;;		 -> V(94), 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  rxData          1  [STACK] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1  [STACK] enum E16913
  2619 ;; Registers used:
  2620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    5
  2633 ;; This function calls:
  2634 ;;		_StartTimer
  2635 ;;		_TimerDone
  2636 ;;		_UART1_Read
  2637 ;;		_UART1_Write
  2638 ;;		_UART1_is_rx_ready
  2639 ;;		_UART1_put_buffer
  2640 ;;		_WaitMs
  2641 ;;		_secs_II_message
  2642 ;;		_secs_send
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;; This function uses a reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text1
  2649  003D3E                     __ptext1:
  2650                           	opt callstack 0
  2651  003D3E                     _t_protocol:
  2652                           	opt callstack 0
  2653                           
  2654                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2655  003D3E  52E6               	movf	postinc1,f,c
  2656                           
  2657                           ;gemsecs.c: 315: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 316: {;gemsecs.
      +                          c: 317:  uint8_t rxData;;gemsecs.c: 318:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          319:  static response_type block;;gemsecs.c: 321:  switch (*t_link) {
  2658                           
  2659                           ;incstack = 0
  2660  003D40  D124               	goto	l8895
  2661  003D42                     l1674:
  2662                           
  2663                           ;gemsecs.c: 323:   V.error = LINK_ERROR_NONE;
  2664  003D42  0100               	movlb	0	; () banked
  2665  003D44  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;gemsecs.c: 324:   retry = 3;
  2669  003D46  0E03               	movlw	3
  2670  003D48  6E29               	movwf	t_protocol@retry,c
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;gemsecs.c: 325:   UART1_Write(0x05);
  2674  003D4A  0E05               	movlw	5
  2675  003D4C  6EE6               	movwf	postinc1,c
  2676  003D4E  EC23  F02E         	call	_UART1_Write	;wreg free
  2677                           
  2678                           ; BSR set to: 57
  2679                           ;gemsecs.c: 326:   StartTimer(TMR_T2, 2000);
  2680  003D52  0ED0               	movlw	208
  2681  003D54  6EE6               	movwf	postinc1,c
  2682  003D56  0E07               	movlw	7
  2683  003D58  6EE6               	movwf	postinc1,c
  2684  003D5A  0E02               	movlw	2
  2685  003D5C  6EE6               	movwf	postinc1,c
  2686  003D5E  EC80  F02E         	call	_StartTimer	;wreg free
  2687                           
  2688                           ;gemsecs.c: 327:   *t_link = LINK_STATE_ENQ;
  2689                           ;stkvar	_t_link @ sp[(-1)+-1]
  2690  003D62  0EFE               	movlw	-2
  2691  003D64  50E3               	movf	plusw1,w,c
  2692  003D66  6ED9               	movwf	fsr2l,c
  2693  003D68  6ADA               	clrf	fsr2h,c
  2694  003D6A  0E01               	movlw	1
  2695  003D6C  6EDF               	movwf	indf2,c
  2696                           
  2697                           ;gemsecs.c: 329:   WaitMs(5);
  2698  003D6E  0E05               	movlw	5
  2699  003D70  6EE6               	movwf	postinc1,c
  2700  003D72  0E00               	movlw	0
  2701  003D74  6EE6               	movwf	postinc1,c
  2702  003D76  EC52  F02F         	call	_WaitMs	;wreg free
  2703                           
  2704                           ;gemsecs.c: 330:   UART1_put_buffer(0x04);
  2705  003D7A  0E04               	movlw	4
  2706  003D7C  6EE6               	movwf	postinc1,c
  2707  003D7E  EC3D  F02F         	call	_UART1_put_buffer	;wreg free
  2708                           
  2709                           ;gemsecs.c: 332:   break;
  2710  003D82  D124               	goto	l8897
  2711  003D84                     l8807:
  2712                           
  2713                           ;gemsecs.c: 334:   if (TimerDone(TMR_T2)) {
  2714  003D84  0E02               	movlw	2
  2715  003D86  6EE6               	movwf	postinc1,c
  2716  003D88  ECF3  F030         	call	_TimerDone	;wreg free
  2717  003D8C  5039               	movf	btemp,w,c
  2718  003D8E  B4D8               	btfsc	status,2,c
  2719  003D90  D01A               	goto	l8817
  2720                           
  2721                           ;gemsecs.c: 335:    if (!retry--) {
  2722  003D92  0629               	decf	t_protocol@retry,f,c
  2723  003D94  2829               	incf	t_protocol@retry,w,c
  2724  003D96  A4D8               	btfss	status,2,c
  2725  003D98  D00D               	goto	l8815
  2726                           
  2727                           ;gemsecs.c: 336:     V.error = LINK_ERROR_T2;
  2728  003D9A  0E02               	movlw	2
  2729  003D9C  0100               	movlb	0	; () banked
  2730  003D9E  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2731                           
  2732                           ;gemsecs.c: 337:     V.failed_send = 1;
  2733  003DA0  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  2734  003DA2  0B87               	andlw	-121
  2735  003DA4  0908               	iorlw	8
  2736  003DA6  6FB7               	movwf	(_V+87)& (0+255),b	;volatile
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;gemsecs.c: 338:     *t_link = LINK_STATE_NAK;
  2740                           ;stkvar	_t_link @ sp[(-1)+-1]
  2741  003DA8  0EFE               	movlw	-2
  2742  003DAA  50E3               	movf	plusw1,w,c
  2743  003DAC  6ED9               	movwf	fsr2l,c
  2744  003DAE  6ADA               	clrf	fsr2h,c
  2745  003DB0  0E05               	movlw	5
  2746  003DB2  D0E9               	goto	L2
  2747  003DB4                     l8815:
  2748                           
  2749                           ;gemsecs.c: 340:     StartTimer(TMR_T2, 2000);
  2750  003DB4  0ED0               	movlw	208
  2751  003DB6  6EE6               	movwf	postinc1,c
  2752  003DB8  0E07               	movlw	7
  2753  003DBA  6EE6               	movwf	postinc1,c
  2754  003DBC  0E02               	movlw	2
  2755  003DBE  6EE6               	movwf	postinc1,c
  2756  003DC0  EC80  F02E         	call	_StartTimer	;wreg free
  2757  003DC4  D103               	goto	l8897
  2758  003DC6                     l8817:
  2759                           
  2760                           ;gemsecs.c: 343:    if (UART1_is_rx_ready()) {
  2761  003DC6  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  2762  003DCA  5039               	movf	btemp,w,c
  2763  003DCC  B4D8               	btfsc	status,2,c
  2764  003DCE  D0FE               	goto	l8897
  2765                           
  2766                           ;gemsecs.c: 344:     rxData = UART1_Read();
  2767  003DD0  EC61  F02E         	call	_UART1_Read	;wreg free
  2768                           
  2769                           ;stkvar	_rxData @ sp[(-1)+0]
  2770  003DD4  0EFF               	movlw	-1
  2771  003DD6  0060  F0E7  FFE3   	movff	btemp,plusw1
  2772                           
  2773                           ; BSR set to: 57
  2774                           ;gemsecs.c: 345:     if (rxData == 0x04) {
  2775                           ;stkvar	_rxData @ sp[(-1)+0]
  2776  003DDC  0EFF               	movlw	-1
  2777  003DDE  006F FF8C  F039    	movff	plusw1,btemp
  2778  003DE4  0E04               	movlw	4
  2779  003DE6  1839               	xorwf	btemp,w,c
  2780  003DE8  A4D8               	btfss	status,2,c
  2781  003DEA  D00E               	goto	l8827
  2782                           
  2783                           ; BSR set to: 57
  2784                           ;gemsecs.c: 346:      StartTimer(TMR_T3, 5000);
  2785  003DEC  0E88               	movlw	136
  2786  003DEE  6EE6               	movwf	postinc1,c
  2787  003DF0  0E13               	movlw	19
  2788  003DF2  6EE6               	movwf	postinc1,c
  2789  003DF4  0E03               	movlw	3
  2790  003DF6  6EE6               	movwf	postinc1,c
  2791  003DF8  EC80  F02E         	call	_StartTimer	;wreg free
  2792                           
  2793                           ;gemsecs.c: 347:      *t_link = LINK_STATE_EOT;
  2794                           ;stkvar	_t_link @ sp[(-1)+-1]
  2795  003DFC  0EFE               	movlw	-2
  2796  003DFE  50E3               	movf	plusw1,w,c
  2797  003E00  6ED9               	movwf	fsr2l,c
  2798  003E02  6ADA               	clrf	fsr2h,c
  2799  003E04  0E02               	movlw	2
  2800  003E06  6EDF               	movwf	indf2,c
  2801  003E08                     l8827:
  2802                           
  2803                           ;gemsecs.c: 349:     if (rxData == 0x05) {
  2804                           ;stkvar	_rxData @ sp[(-1)+0]
  2805  003E08  0EFF               	movlw	-1
  2806  003E0A  006F FF8C  F039    	movff	plusw1,btemp
  2807  003E10  0E05               	movlw	5
  2808  003E12  1839               	xorwf	btemp,w,c
  2809  003E14  A4D8               	btfss	status,2,c
  2810  003E16  D0DA               	goto	l8897
  2811                           
  2812                           ;gemsecs.c: 350:      UART1_put_buffer(0x04);
  2813  003E18  0E04               	movlw	4
  2814  003E1A  6EE6               	movwf	postinc1,c
  2815  003E1C  EC3D  F02F         	call	_UART1_put_buffer	;wreg free
  2816  003E20                     l8831:
  2817                           
  2818                           ;gemsecs.c: 351:      *t_link = LINK_STATE_DONE;
  2819                           ;stkvar	_t_link @ sp[(-1)+-1]
  2820  003E20  0EFE               	movlw	-2
  2821  003E22  50E3               	movf	plusw1,w,c
  2822  003E24  6ED9               	movwf	fsr2l,c
  2823  003E26  6ADA               	clrf	fsr2h,c
  2824  003E28  0E04               	movlw	4
  2825  003E2A  D0AD               	goto	L2
  2826  003E2C                     l8833:
  2827                           
  2828                           ;gemsecs.c: 357:   if (!requeue)
  2829  003E2C  5028               	movf	t_protocol@requeue,w,c
  2830  003E2E  A4D8               	btfss	status,2,c
  2831  003E30  D010               	goto	l8837
  2832                           
  2833                           ;gemsecs.c: 358:    block = secs_II_message(V.stream, V.function);
  2834  003E32  0100               	movlb	0	; () banked
  2835  003E34  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2836  003E36  6EE6               	movwf	postinc1,c
  2837  003E38  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2838  003E3A  6EE6               	movwf	postinc1,c
  2839  003E3C  EC63  F022         	call	_secs_II_message	;wreg free
  2840  003E40  EE20  F0E3         	lfsr	2,t_protocol@block
  2841  003E44  0E06               	movlw	6
  2842  003E46                     u5551:
  2843  003E46  52E5               	movf	postdec1,f,c
  2844  003E48  006F FF9F FFDB     	movff	indf1,plusw2
  2845  003E4E  06E8               	decf	wreg,f,c
  2846  003E50  E2FA               	bc	u5551
  2847  003E52                     l8837:
  2848                           
  2849                           ;gemsecs.c: 360:   if (V.abort == LINK_ERROR_ABORT) {
  2850  003E52  0E07               	movlw	7
  2851  003E54  0100               	movlb	0	; () banked
  2852  003E56  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2853  003E58  A4D8               	btfss	status,2,c
  2854  003E5A  D019               	goto	l8845
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;gemsecs.c: 361:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2858  003E5C  0E01               	movlw	1
  2859  003E5E  6EE6               	movwf	postinc1,c
  2860  003E60  0E00               	movlw	0
  2861  003E62  6EE6               	movwf	postinc1,c
  2862  003E64  51E5               	movf	(t_protocol@block+2)& (0+255),w,b
  2863  003E66  6EE6               	movwf	postinc1,c
  2864  003E68  0060  F38F  FFE6   	movff	t_protocol@block,postinc1
  2865  003E6E  0060  F393  FFE6   	movff	t_protocol@block+1,postinc1
  2866  003E74  EC2F  F021         	call	_secs_send	;wreg free
  2867                           
  2868                           ;gemsecs.c: 362:    V.failed_send = 2;
  2869  003E78  0100               	movlb	0	; () banked
  2870  003E7A  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  2871  003E7C  0B87               	andlw	-121
  2872  003E7E  0910               	iorlw	16
  2873  003E80  6FB7               	movwf	(_V+87)& (0+255),b	;volatile
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;gemsecs.c: 363:    *t_link = LINK_STATE_ERROR;
  2877                           ;stkvar	_t_link @ sp[(-1)+-1]
  2878  003E82  0EFE               	movlw	-2
  2879  003E84  50E3               	movf	plusw1,w,c
  2880  003E86  6ED9               	movwf	fsr2l,c
  2881  003E88  6ADA               	clrf	fsr2h,c
  2882  003E8A  0E06               	movlw	6
  2883  003E8C  D030               	goto	L3
  2884  003E8E                     l8845:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;gemsecs.c: 365:    if (!requeue) {
  2888  003E8E  5028               	movf	t_protocol@requeue,w,c
  2889  003E90  A4D8               	btfss	status,2,c
  2890  003E92  D014               	goto	l1688
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;gemsecs.c: 366:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2894  003E94  0E01               	movlw	1
  2895  003E96  6EE6               	movwf	postinc1,c
  2896  003E98  0E00               	movlw	0
  2897  003E9A  6EE6               	movwf	postinc1,c
  2898  003E9C  51E5               	movf	(t_protocol@block+2)& (0+255),w,b
  2899  003E9E  6EE6               	movwf	postinc1,c
  2900  003EA0  0060  F38F  FFE6   	movff	t_protocol@block,postinc1
  2901  003EA6  0060  F393  FFE6   	movff	t_protocol@block+1,postinc1
  2902  003EAC  EC2F  F021         	call	_secs_send	;wreg free
  2903                           
  2904                           ;gemsecs.c: 367:     if (V.queue)
  2905  003EB0  0100               	movlb	0	; () banked
  2906  003EB2  A9B8               	btfss	(_V+88)& (0+255),4,b	;volatile
  2907  003EB4  D013               	goto	l8855
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;gemsecs.c: 368:      requeue = 1;
  2911  003EB6  0E01               	movlw	1
  2912  003EB8  6E28               	movwf	t_protocol@requeue,c
  2913  003EBA  D010               	goto	l8855
  2914  003EBC                     l1688:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;gemsecs.c: 370:     requeue = 0;
  2918  003EBC  6A28               	clrf	t_protocol@requeue,c
  2919                           
  2920                           ;gemsecs.c: 371:     V.queue = 0;
  2921  003EBE  99B8               	bcf	(_V+88)& (0+255),4,b	;volatile
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;gemsecs.c: 372:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2925  003EC0  0E01               	movlw	1
  2926  003EC2  6EE6               	movwf	postinc1,c
  2927  003EC4  0E00               	movlw	0
  2928  003EC6  6EE6               	movwf	postinc1,c
  2929  003EC8  51E8               	movf	(t_protocol@block+5)& (0+255),w,b
  2930  003ECA  6EE6               	movwf	postinc1,c
  2931  003ECC  0060  F39B  FFE6   	movff	t_protocol@block+3,postinc1
  2932  003ED2  0060  F39F  FFE6   	movff	t_protocol@block+4,postinc1
  2933  003ED8  EC2F  F021         	call	_secs_send	;wreg free
  2934  003EDC                     l8855:
  2935                           
  2936                           ;gemsecs.c: 374:    if (V.error == LINK_ERROR_NONE) {
  2937  003EDC  0100               	movlb	0	; () banked
  2938  003EDE  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2939  003EE0  A4D8               	btfss	status,2,c
  2940  003EE2  D007               	goto	l8859
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;gemsecs.c: 375:     *t_link = LINK_STATE_ACK;
  2944                           ;stkvar	_t_link @ sp[(-1)+-1]
  2945  003EE4  0EFE               	movlw	-2
  2946  003EE6  50E3               	movf	plusw1,w,c
  2947  003EE8  6ED9               	movwf	fsr2l,c
  2948  003EEA  6ADA               	clrf	fsr2h,c
  2949  003EEC  0E03               	movlw	3
  2950  003EEE                     L3:
  2951  003EEE  6EDF               	movwf	indf2,c
  2952                           
  2953                           ;gemsecs.c: 376:    } else {
  2954  003EF0  D004               	goto	l8863
  2955  003EF2                     l8859:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;gemsecs.c: 377:     V.failed_send = 3;
  2959  003EF2  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  2960  003EF4  0B87               	andlw	-121
  2961  003EF6  0918               	iorlw	24
  2962  003EF8  D7C3               	goto	L4
  2963  003EFA                     l8863:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;gemsecs.c: 382:   WaitMs(5);
  2967  003EFA  0E05               	movlw	5
  2968  003EFC  6EE6               	movwf	postinc1,c
  2969  003EFE  0E00               	movlw	0
  2970  003F00  6EE6               	movwf	postinc1,c
  2971  003F02  EC52  F02F         	call	_WaitMs	;wreg free
  2972                           
  2973                           ;gemsecs.c: 383:   UART1_put_buffer(0x06);
  2974  003F06  0E06               	movlw	6
  2975  003F08  6EE6               	movwf	postinc1,c
  2976  003F0A  EC3D  F02F         	call	_UART1_put_buffer	;wreg free
  2977                           
  2978                           ;gemsecs.c: 385:   break;
  2979  003F0E  D05E               	goto	l8897
  2980  003F10                     l8867:
  2981                           
  2982                           ;gemsecs.c: 387:   if (TimerDone(TMR_T3)) {
  2983  003F10  0E03               	movlw	3
  2984  003F12  6EE6               	movwf	postinc1,c
  2985  003F14  ECF3  F030         	call	_TimerDone	;wreg free
  2986  003F18  5039               	movf	btemp,w,c
  2987  003F1A  B4D8               	btfsc	status,2,c
  2988  003F1C  D007               	goto	l8873
  2989                           
  2990                           ;gemsecs.c: 388:    V.error = LINK_ERROR_T3;
  2991  003F1E  0E03               	movlw	3
  2992  003F20  0100               	movlb	0	; () banked
  2993  003F22  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2994                           
  2995                           ;gemsecs.c: 389:    V.failed_send = 4;
  2996  003F24  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  2997  003F26  0B87               	andlw	-121
  2998  003F28  0920               	iorlw	32
  2999  003F2A  D73D               	goto	L5
  3000  003F2C                     l8873:
  3001                           
  3002                           ;gemsecs.c: 392:    if (UART1_is_rx_ready()) {
  3003  003F2C  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  3004  003F30  5039               	movf	btemp,w,c
  3005  003F32  B4D8               	btfsc	status,2,c
  3006  003F34  D04B               	goto	l8897
  3007                           
  3008                           ;gemsecs.c: 393:     rxData = UART1_Read();
  3009  003F36  EC61  F02E         	call	_UART1_Read	;wreg free
  3010                           
  3011                           ;stkvar	_rxData @ sp[(-1)+0]
  3012  003F3A  0EFF               	movlw	-1
  3013  003F3C  0060  F0E7  FFE3   	movff	btemp,plusw1
  3014                           
  3015                           ; BSR set to: 57
  3016                           ;gemsecs.c: 394:     if (rxData == 0x06) {
  3017                           ;stkvar	_rxData @ sp[(-1)+0]
  3018  003F42  0EFF               	movlw	-1
  3019  003F44  006F FF8C  F039    	movff	plusw1,btemp
  3020  003F4A  0E06               	movlw	6
  3021  003F4C  1839               	xorwf	btemp,w,c
  3022  003F4E  A4D8               	btfss	status,2,c
  3023  003F50  D03D               	goto	l8897
  3024                           
  3025                           ; BSR set to: 57
  3026                           ;gemsecs.c: 395:      V.failed_send = 0;
  3027  003F52  0E87               	movlw	-121
  3028  003F54  0100               	movlb	0	; () banked
  3029  003F56  17B7               	andwf	(_V+87)& (0+255),f,b	;volatile
  3030  003F58  D763               	goto	l8831
  3031  003F5A                     l8883:
  3032                           
  3033                           ;gemsecs.c: 402:   *t_link = LINK_STATE_ERROR;
  3034                           ;stkvar	_t_link @ sp[(-1)+-1]
  3035  003F5A  0EFE               	movlw	-2
  3036  003F5C  50E3               	movf	plusw1,w,c
  3037  003F5E  6ED9               	movwf	fsr2l,c
  3038  003F60  6ADA               	clrf	fsr2h,c
  3039  003F62  0E06               	movlw	6
  3040  003F64  6EDF               	movwf	indf2,c
  3041                           
  3042                           ;gemsecs.c: 403:   while ((uart1RxCount)) {
  3043  003F66  D002               	goto	l8887
  3044  003F68                     l8885:
  3045                           
  3046                           ;gemsecs.c: 404:    UART1_Read();
  3047  003F68  EC61  F02E         	call	_UART1_Read	;wreg free
  3048  003F6C                     l8887:
  3049                           
  3050                           ;gemsecs.c: 403:   while ((uart1RxCount)) {
  3051  003F6C  5033               	movf	_uart1RxCount,w,c	;volatile
  3052  003F6E  B4D8               	btfsc	status,2,c
  3053  003F70  D02D               	goto	l8897
  3054  003F72  D7FA               	goto	l8885
  3055  003F74                     l8889:
  3056                           
  3057                           ;gemsecs.c: 410:   V.failed_send = 0;
  3058  003F74  0E87               	movlw	-121
  3059  003F76  0100               	movlb	0	; () banked
  3060  003F78  17B7               	andwf	(_V+87)& (0+255),f,b	;volatile
  3061                           
  3062                           ;gemsecs.c: 411:   break;
  3063  003F7A  D028               	goto	l8897
  3064  003F7C                     l8891:
  3065                           
  3066                           ;gemsecs.c: 413:   *t_link = LINK_STATE_IDLE;
  3067                           ;stkvar	_t_link @ sp[(-1)+-1]
  3068  003F7C  0EFE               	movlw	-2
  3069  003F7E  50E3               	movf	plusw1,w,c
  3070  003F80  6ED9               	movwf	fsr2l,c
  3071  003F82  6ADA               	clrf	fsr2h,c
  3072  003F84  0E00               	movlw	0
  3073  003F86                     L2:
  3074  003F86  6EDF               	movwf	indf2,c
  3075                           
  3076                           ;gemsecs.c: 415:   break;
  3077  003F88  D021               	goto	l8897
  3078  003F8A                     l8895:
  3079                           
  3080                           ;stkvar	_t_link @ sp[(-1)+-1]
  3081  003F8A  0EFE               	movlw	-2
  3082  003F8C  50E3               	movf	plusw1,w,c
  3083  003F8E  6ED9               	movwf	fsr2l,c
  3084  003F90  6ADA               	clrf	fsr2h,c
  3085  003F92  50DF               	movf	indf2,w,c
  3086  003F94  6E43               	movwf	btemp+10,c
  3087  003F96  6A44               	clrf	btemp+11,c
  3088                           
  3089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3090                           ; Switch size 1, requested type "simple"
  3091                           ; Number of cases is 1, Range of values is 0 to 0
  3092                           ; switch strategies available:
  3093                           ; Name         Instructions Cycles
  3094                           ; simple_byte            4     3 (average)
  3095                           ;	Chosen strategy is simple_byte
  3096  003F98  5044               	movf	btemp+11,w,c
  3097  003F9A  0A00               	xorlw	0	; case 0
  3098  003F9C  A4D8               	btfss	status,2,c
  3099  003F9E  D7EE               	goto	l8891
  3100                           
  3101                           ; Switch size 1, requested type "simple"
  3102                           ; Number of cases is 7, Range of values is 0 to 6
  3103                           ; switch strategies available:
  3104                           ; Name         Instructions Cycles
  3105                           ; simple_byte           22    12 (average)
  3106                           ;	Chosen strategy is simple_byte
  3107  003FA0  5043               	movf	btemp+10,w,c
  3108  003FA2  0A00               	xorlw	0	; case 0
  3109  003FA4  B4D8               	btfsc	status,2,c
  3110  003FA6  D6CD               	goto	l1674
  3111  003FA8  0A01               	xorlw	1	; case 1
  3112  003FAA  B4D8               	btfsc	status,2,c
  3113  003FAC  D6EB               	goto	l8807
  3114  003FAE  0A03               	xorlw	3	; case 2
  3115  003FB0  B4D8               	btfsc	status,2,c
  3116  003FB2  D73C               	goto	l8833
  3117  003FB4  0A01               	xorlw	1	; case 3
  3118  003FB6  B4D8               	btfsc	status,2,c
  3119  003FB8  D7AB               	goto	l8867
  3120  003FBA  0A07               	xorlw	7	; case 4
  3121  003FBC  B4D8               	btfsc	status,2,c
  3122  003FBE  D7DA               	goto	l8889
  3123  003FC0  0A01               	xorlw	1	; case 5
  3124  003FC2  B4D8               	btfsc	status,2,c
  3125  003FC4  D7CA               	goto	l8883
  3126  003FC6  0A03               	xorlw	3	; case 6
  3127  003FC8  A4D8               	btfss	status,2,c
  3128  003FCA  D7D8               	goto	l8891
  3129  003FCC                     l8897:
  3130                           
  3131                           ;gemsecs.c: 418:  return *t_link;
  3132                           ;stkvar	_t_link @ sp[(-1)+-1]
  3133  003FCC  0EFE               	movlw	-2
  3134  003FCE  50E3               	movf	plusw1,w,c
  3135  003FD0  6ED9               	movwf	fsr2l,c
  3136  003FD2  6ADA               	clrf	fsr2h,c
  3137  003FD4  50DF               	movf	indf2,w,c
  3138  003FD6  6E39               	movwf	btemp,c
  3139                           
  3140                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3141  003FD8  52E5               	movf	postdec1,f,c
  3142  003FDA  52E5               	movf	postdec1,f,c
  3143  003FDC  0012               	return		;funcret
  3144  003FDE                     __end_of_t_protocol:
  3145                           	opt callstack 0
  3146                           
  3147 ;; *************** function _secs_II_message *****************
  3148 ;; Defined at:
  3149 ;;		line 478 in file "gemsecs.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  stream          1  [STACK] unsigned char 
  3152 ;;  function        1  [STACK] unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  7  [STACK] struct response_type
  3157 ;; Registers used:
  3158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3159 ;; Tracked objects:
  3160 ;;		On entry : 3F/0
  3161 ;;		On exit  : 3E/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_t_protocol
  3175 ;; This function uses a reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text2
  3179  0044C6                     __ptext2:
  3180                           	opt callstack 0
  3181  0044C6                     _secs_II_message:
  3182                           	opt callstack 0
  3183                           
  3184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3185  0044C6  0E05               	movlw	5
  3186  0044C8  26E1               	addwf	fsr1l,f,c
  3187  0044CA  0E00               	movlw	0
  3188  0044CC  22E2               	addwfc	fsr1h,f,c
  3189                           
  3190                           ;gemsecs.c: 478: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 479: {;gemsecs.c: 480:  static response_type block;;gemsecs.c: 482:  V.abort = LINK_
      +                          ERROR_NONE;
  3191                           
  3192                           ;incstack = 0
  3193  0044CE  0100               	movlb	0	; () banked
  3194  0044D0  6BB1               	clrf	(_V+81)& (0+255),b	;volatile
  3195                           
  3196                           ;gemsecs.c: 483:  V.queue = 0;
  3197  0044D2  99B8               	bcf	(_V+88)& (0+255),4,b	;volatile
  3198                           
  3199                           ;gemsecs.c: 484:  block.respond = 0;
  3200  0044D4  9007               	bcf	secs_II_message@block+6,0,c
  3201                           
  3202                           ;gemsecs.c: 486:  switch (stream) {
  3203  0044D6  D0F3               	goto	l6615
  3204  0044D8                     l6483:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;gemsecs.c: 490:    block.header = (uint8_t*) & H12[0];
  3208  0044D8  0E62               	movlw	low _H12
  3209  0044DA  6E01               	movwf	secs_II_message@block,c
  3210  0044DC  0E01               	movlw	high _H12
  3211  0044DE  6E02               	movwf	secs_II_message@block+1,c
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;gemsecs.c: 491:    block.length = sizeof(header12);
  3215  0044E0  0E0F               	movlw	15
  3216  0044E2  6E03               	movwf	secs_II_message@block+2,c
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;gemsecs.c: 492:    H12[0].block.block.systemb = V.systemb;
  3220  0044E4  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3221  0044E8  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3222  0044EC  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3223  0044F0  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;gemsecs.c: 493:    H10[0].block.block.systemb = V.systemb;
  3227  0044F4  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  3228  0044F8  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  3229  0044FC  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  3230  004500  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;gemsecs.c: 494:    block.respond = 1;
  3234  004504  8007               	bsf	secs_II_message@block+6,0,c
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;gemsecs.c: 495:    block.reply = (uint8_t*) & H10[0];
  3238  004506  0E07               	movlw	low _H10
  3239  004508  6E04               	movwf	secs_II_message@block+3,c
  3240  00450A  0E01               	movlw	high _H10
  3241  00450C  6E05               	movwf	secs_II_message@block+4,c
  3242                           
  3243                           ;gemsecs.c: 496:    block.reply_length = sizeof(header10);
  3244  00450E  0E0D               	movlw	13
  3245  004510                     L6:
  3246  004510  6E06               	movwf	secs_II_message@block+5,c
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;gemsecs.c: 497:    V.queue = 1;
  3250  004512  89B8               	bsf	(_V+88)& (0+255),4,b	;volatile
  3251                           
  3252                           ;gemsecs.c: 498:    break;
  3253  004514  D0ED               	goto	l6617
  3254  004516                     l6497:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;gemsecs.c: 500:    block.header = (uint8_t*) & H14[0];
  3258  004516  0EAF               	movlw	low _H14
  3259  004518  6E01               	movwf	secs_II_message@block,c
  3260  00451A  0E01               	movlw	high _H14
  3261  00451C  6E02               	movwf	secs_II_message@block+1,c
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;gemsecs.c: 501:    block.length = sizeof(header14);
  3265  00451E  0E11               	movlw	17
  3266  004520  6E03               	movwf	secs_II_message@block+2,c
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;gemsecs.c: 502:    H14[0].block.block.systemb = V.systemb;
  3270  004522  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  3271  004526  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  3272  00452A  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  3273  00452E  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  3274                           
  3275                           ;gemsecs.c: 503:    break;
  3276  004532  D0DE               	goto	l6617
  3277  004534                     l6503:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;gemsecs.c: 505:    block.header = (uint8_t*) & H17[0];
  3281  004534  0E9B               	movlw	low _H17
  3282  004536  6E01               	movwf	secs_II_message@block,c
  3283  004538  0E01               	movlw	high _H17
  3284  00453A  6E02               	movwf	secs_II_message@block+1,c
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;gemsecs.c: 506:    block.length = sizeof(header17);
  3288  00453C  0E14               	movlw	20
  3289  00453E  6E03               	movwf	secs_II_message@block+2,c
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;gemsecs.c: 507:    H17[0].block.block.systemb = V.systemb;
  3293  004540  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  3294  004544  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  3295  004548  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  3296  00454C  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;gemsecs.c: 508:    H12[1].block.block.systemb = V.systemb;
  3300  004550  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  3301  004554  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  3302  004558  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  3303  00455C  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;gemsecs.c: 509:    block.respond = 1;
  3307  004560  8007               	bsf	secs_II_message@block+6,0,c
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;gemsecs.c: 510:    block.reply = (uint8_t*) & H12[1];
  3311  004562  0E71               	movlw	low (_H12+15)
  3312  004564  6E04               	movwf	secs_II_message@block+3,c
  3313  004566  0E01               	movlw	high (_H12+15)
  3314  004568  6E05               	movwf	secs_II_message@block+4,c
  3315                           
  3316                           ;gemsecs.c: 511:    block.reply_length = sizeof(header12);
  3317  00456A  0E0F               	movlw	15
  3318  00456C  D7D1               	goto	L6
  3319  00456E                     l6517:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;gemsecs.c: 515:    block.header = (uint8_t*) & H10[2];
  3323  00456E  0E21               	movlw	low (_H10+26)
  3324  004570  6E01               	movwf	secs_II_message@block,c
  3325  004572  0E01               	movlw	high (_H10+26)
  3326  004574  6E02               	movwf	secs_II_message@block+1,c
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;gemsecs.c: 516:    block.length = sizeof(header10);
  3330  004576  0E0D               	movlw	13
  3331  004578  6E03               	movwf	secs_II_message@block+2,c
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;gemsecs.c: 517:    H10[2].block.block.systemb = V.systemb;
  3335  00457A  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  3336  00457E  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  3337  004582  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  3338  004586  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;gemsecs.c: 518:    V.abort = LINK_ERROR_ABORT;
  3342  00458A  0E07               	movlw	7
  3343  00458C  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3344                           
  3345                           ;gemsecs.c: 519:    break;
  3346  00458E  D0B0               	goto	l6617
  3347  004590                     l6527:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;stkvar	_function @ sp[(0)+-7]
  3351  004590  0EF9               	movlw	-7
  3352  004592  50E3               	movf	plusw1,w,c
  3353  004594  6E43               	movwf	btemp+10,c
  3354  004596  6A44               	clrf	btemp+11,c
  3355                           
  3356                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3357                           ; Switch size 1, requested type "simple"
  3358                           ; Number of cases is 1, Range of values is 0 to 0
  3359                           ; switch strategies available:
  3360                           ; Name         Instructions Cycles
  3361                           ; simple_byte            4     3 (average)
  3362                           ;	Chosen strategy is simple_byte
  3363  004598  5044               	movf	btemp+11,w,c
  3364  00459A  0A00               	xorlw	0	; case 0
  3365  00459C  A4D8               	btfss	status,2,c
  3366  00459E  D7E7               	goto	l6517
  3367                           
  3368                           ; BSR set to: 0
  3369                           ; Switch size 1, requested type "simple"
  3370                           ; Number of cases is 3, Range of values is 1 to 13
  3371                           ; switch strategies available:
  3372                           ; Name         Instructions Cycles
  3373                           ; simple_byte           10     6 (average)
  3374                           ;	Chosen strategy is simple_byte
  3375  0045A0  5043               	movf	btemp+10,w,c
  3376  0045A2  0A01               	xorlw	1	; case 1
  3377  0045A4  B4D8               	btfsc	status,2,c
  3378  0045A6  D798               	goto	l6483
  3379  0045A8  0A02               	xorlw	2	; case 3
  3380  0045AA  B4D8               	btfsc	status,2,c
  3381  0045AC  D7B4               	goto	l6497
  3382  0045AE  0A0E               	xorlw	14	; case 13
  3383  0045B0  B4D8               	btfsc	status,2,c
  3384  0045B2  D7C0               	goto	l6503
  3385  0045B4  D7DC               	goto	l6517
  3386  0045B6                     l6529:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;gemsecs.c: 525:    block.header = (uint8_t*) & H24[0];
  3390  0045B6  0E80               	movlw	low _H24
  3391  0045B8  6E01               	movwf	secs_II_message@block,c
  3392  0045BA  0E01               	movlw	high _H24
  3393  0045BC  6E02               	movwf	secs_II_message@block+1,c
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;gemsecs.c: 526:    block.length = sizeof(header24);
  3397  0045BE  0E1B               	movlw	27
  3398  0045C0  6E03               	movwf	secs_II_message@block+2,c
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;gemsecs.c: 527:    H24[0].block.block.systemb = V.systemb;
  3402  0045C2  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  3403  0045C6  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  3404  0045CA  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  3405  0045CE  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;gemsecs.c: 528:    H24[0].data[12] = 12;
  3409  0045D2  0E0C               	movlw	12
  3410  0045D4  0101               	movlb	1	; () banked
  3411  0045D6  6F8E               	movwf	(_H24+14)& (0+255),b
  3412                           
  3413                           ;gemsecs.c: 529:    break;
  3414  0045D8  D08B               	goto	l6617
  3415  0045DA                     l6547:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;stkvar	_function @ sp[(0)+-7]
  3419  0045DA  0EF9               	movlw	-7
  3420  0045DC  50E3               	movf	plusw1,w,c
  3421  0045DE  6E43               	movwf	btemp+10,c
  3422  0045E0  6A44               	clrf	btemp+11,c
  3423                           
  3424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3425                           ; Switch size 1, requested type "simple"
  3426                           ; Number of cases is 1, Range of values is 0 to 0
  3427                           ; switch strategies available:
  3428                           ; Name         Instructions Cycles
  3429                           ; simple_byte            4     3 (average)
  3430                           ;	Chosen strategy is simple_byte
  3431  0045E2  5044               	movf	btemp+11,w,c
  3432  0045E4  0A00               	xorlw	0	; case 0
  3433  0045E6  A4D8               	btfss	status,2,c
  3434  0045E8  D7C2               	goto	l6517
  3435                           
  3436                           ; BSR set to: 0
  3437                           ; Switch size 1, requested type "simple"
  3438                           ; Number of cases is 1, Range of values is 17 to 17
  3439                           ; switch strategies available:
  3440                           ; Name         Instructions Cycles
  3441                           ; simple_byte            4     3 (average)
  3442                           ;	Chosen strategy is simple_byte
  3443  0045EA  5043               	movf	btemp+10,w,c
  3444  0045EC  0A11               	xorlw	17	; case 17
  3445  0045EE  B4D8               	btfsc	status,2,c
  3446  0045F0  D7E2               	goto	l6529
  3447  0045F2  D7BD               	goto	l6517
  3448  0045F4                     l6549:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;gemsecs.c: 541:    block.header = (uint8_t*) & H13[0];
  3452  0045F4  0EC0               	movlw	low _H13
  3453  0045F6  6E01               	movwf	secs_II_message@block,c
  3454  0045F8  0E01               	movlw	high _H13
  3455  0045FA  6E02               	movwf	secs_II_message@block+1,c
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;gemsecs.c: 542:    block.length = sizeof(header13);
  3459  0045FC  0E10               	movlw	16
  3460  0045FE  6E03               	movwf	secs_II_message@block+2,c
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;gemsecs.c: 543:    H13[0].block.block.systemb = V.systemb;
  3464  004600  C0AA  F1C5         	movff	_V+74,_H13+5	;volatile
  3465  004604  C0AB  F1C6         	movff	_V+75,_H13+6	;volatile
  3466  004608  C0AC  F1C7         	movff	_V+76,_H13+7	;volatile
  3467  00460C  C0AD  F1C8         	movff	_V+77,_H13+8	;volatile
  3468                           
  3469                           ;gemsecs.c: 544:    break;
  3470  004610  D06F               	goto	l6617
  3471  004612                     l6565:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;stkvar	_function @ sp[(0)+-7]
  3475  004612  0EF9               	movlw	-7
  3476  004614  50E3               	movf	plusw1,w,c
  3477  004616  6E43               	movwf	btemp+10,c
  3478  004618  6A44               	clrf	btemp+11,c
  3479                           
  3480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3481                           ; Switch size 1, requested type "simple"
  3482                           ; Number of cases is 1, Range of values is 0 to 0
  3483                           ; switch strategies available:
  3484                           ; Name         Instructions Cycles
  3485                           ; simple_byte            4     3 (average)
  3486                           ;	Chosen strategy is simple_byte
  3487  00461A  5044               	movf	btemp+11,w,c
  3488  00461C  0A00               	xorlw	0	; case 0
  3489  00461E  A4D8               	btfss	status,2,c
  3490  004620  D7A6               	goto	l6517
  3491                           
  3492                           ; BSR set to: 0
  3493                           ; Switch size 1, requested type "simple"
  3494                           ; Number of cases is 1, Range of values is 11 to 11
  3495                           ; switch strategies available:
  3496                           ; Name         Instructions Cycles
  3497                           ; simple_byte            4     3 (average)
  3498                           ;	Chosen strategy is simple_byte
  3499  004622  5043               	movf	btemp+10,w,c
  3500  004624  0A0B               	xorlw	11	; case 11
  3501  004626  B4D8               	btfsc	status,2,c
  3502  004628  D7E5               	goto	l6549
  3503  00462A  D7A1               	goto	l6517
  3504  00462C                     l6577:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;stkvar	_function @ sp[(0)+-7]
  3508  00462C  0EF9               	movlw	-7
  3509  00462E  50E3               	movf	plusw1,w,c
  3510  004630  6E43               	movwf	btemp+10,c
  3511  004632  6A44               	clrf	btemp+11,c
  3512                           
  3513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3514                           ; Switch size 1, requested type "simple"
  3515                           ; Number of cases is 1, Range of values is 0 to 0
  3516                           ; switch strategies available:
  3517                           ; Name         Instructions Cycles
  3518                           ; simple_byte            4     3 (average)
  3519                           ;	Chosen strategy is simple_byte
  3520  004634  5044               	movf	btemp+11,w,c
  3521  004636  0A00               	xorlw	0	; case 0
  3522  004638  A4D8               	btfss	status,2,c
  3523  00463A  D799               	goto	l6517
  3524                           
  3525                           ; BSR set to: 0
  3526                           ; Switch size 1, requested type "simple"
  3527                           ; Number of cases is 7, Range of values is 1 to 13
  3528                           ; switch strategies available:
  3529                           ; Name         Instructions Cycles
  3530                           ; simple_byte           22    12 (average)
  3531                           ;	Chosen strategy is simple_byte
  3532  00463C  5043               	movf	btemp+10,w,c
  3533  00463E  0A01               	xorlw	1	; case 1
  3534  004640  B4D8               	btfsc	status,2,c
  3535  004642  D056               	goto	l6617
  3536  004644  0A02               	xorlw	2	; case 3
  3537  004646  B4D8               	btfsc	status,2,c
  3538  004648  D053               	goto	l6617
  3539  00464A  0A06               	xorlw	6	; case 5
  3540  00464C  B4D8               	btfsc	status,2,c
  3541  00464E  D050               	goto	l6617
  3542  004650  0A02               	xorlw	2	; case 7
  3543  004652  B4D8               	btfsc	status,2,c
  3544  004654  D04D               	goto	l6617
  3545  004656  0A0E               	xorlw	14	; case 9
  3546  004658  B4D8               	btfsc	status,2,c
  3547  00465A  D04A               	goto	l6617
  3548  00465C  0A02               	xorlw	2	; case 11
  3549  00465E  B4D8               	btfsc	status,2,c
  3550  004660  D047               	goto	l6617
  3551  004662  0A06               	xorlw	6	; case 13
  3552  004664  B4D8               	btfsc	status,2,c
  3553  004666  D044               	goto	l6617
  3554  004668  D782               	goto	l6517
  3555  00466A                     l6579:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;gemsecs.c: 580:    block.header = (uint8_t*) & H12[0];
  3559  00466A  0E62               	movlw	low _H12
  3560  00466C  6E01               	movwf	secs_II_message@block,c
  3561  00466E  0E01               	movlw	high _H12
  3562  004670  6E02               	movwf	secs_II_message@block+1,c
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;gemsecs.c: 581:    block.length = sizeof(header12);
  3566  004672  0E0F               	movlw	15
  3567  004674  6E03               	movwf	secs_II_message@block+2,c
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;gemsecs.c: 582:    H12[0].block.block.systemb = V.systemb;
  3571  004676  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3572  00467A  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3573  00467E  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3574  004682  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;gemsecs.c: 583:    H53[0].block.block.systemb = V.systemb;
  3578  004686  C0AA  F3F3         	movff	_V+74,_H53+45	;volatile
  3579  00468A  C0AB  F3F4         	movff	_V+75,_H53+46	;volatile
  3580  00468E  C0AC  F3F5         	movff	_V+76,_H53+47	;volatile
  3581  004692  C0AD  F3F6         	movff	_V+77,_H53+48	;volatile
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;gemsecs.c: 584:    block.respond = 1;
  3585  004696  8007               	bsf	secs_II_message@block+6,0,c
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;gemsecs.c: 585:    block.reply = (uint8_t*) & H53[0];
  3589  004698  0EC6               	movlw	low _H53
  3590  00469A  6E04               	movwf	secs_II_message@block+3,c
  3591  00469C  0E03               	movlw	high _H53
  3592  00469E  6E05               	movwf	secs_II_message@block+4,c
  3593                           
  3594                           ;gemsecs.c: 586:    block.reply_length = sizeof(header53);
  3595  0046A0  0E38               	movlw	56
  3596  0046A2  D736               	goto	L6
  3597  0046A4                     l6603:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;stkvar	_function @ sp[(0)+-7]
  3601  0046A4  0EF9               	movlw	-7
  3602  0046A6  50E3               	movf	plusw1,w,c
  3603  0046A8  6E43               	movwf	btemp+10,c
  3604  0046AA  6A44               	clrf	btemp+11,c
  3605                           
  3606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3607                           ; Switch size 1, requested type "simple"
  3608                           ; Number of cases is 1, Range of values is 0 to 0
  3609                           ; switch strategies available:
  3610                           ; Name         Instructions Cycles
  3611                           ; simple_byte            4     3 (average)
  3612                           ;	Chosen strategy is simple_byte
  3613  0046AC  5044               	movf	btemp+11,w,c
  3614  0046AE  0A00               	xorlw	0	; case 0
  3615  0046B0  A4D8               	btfss	status,2,c
  3616  0046B2  D75D               	goto	l6517
  3617                           
  3618                           ; BSR set to: 0
  3619                           ; Switch size 1, requested type "simple"
  3620                           ; Number of cases is 1, Range of values is 1 to 1
  3621                           ; switch strategies available:
  3622                           ; Name         Instructions Cycles
  3623                           ; simple_byte            4     3 (average)
  3624                           ;	Chosen strategy is simple_byte
  3625  0046B4  5043               	movf	btemp+10,w,c
  3626  0046B6  0A01               	xorlw	1	; case 1
  3627  0046B8  B4D8               	btfsc	status,2,c
  3628  0046BA  D7D7               	goto	l6579
  3629  0046BC  D758               	goto	l6517
  3630  0046BE                     l6615:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;stkvar	_stream @ sp[(0)+-6]
  3634  0046BE  0EFA               	movlw	-6
  3635  0046C0  50E3               	movf	plusw1,w,c
  3636  0046C2  6E43               	movwf	btemp+10,c
  3637  0046C4  6A44               	clrf	btemp+11,c
  3638                           
  3639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3640                           ; Switch size 1, requested type "simple"
  3641                           ; Number of cases is 1, Range of values is 0 to 0
  3642                           ; switch strategies available:
  3643                           ; Name         Instructions Cycles
  3644                           ; simple_byte            4     3 (average)
  3645                           ;	Chosen strategy is simple_byte
  3646  0046C6  5044               	movf	btemp+11,w,c
  3647  0046C8  0A00               	xorlw	0	; case 0
  3648  0046CA  A4D8               	btfss	status,2,c
  3649  0046CC  D750               	goto	l6517
  3650                           
  3651                           ; BSR set to: 0
  3652                           ; Switch size 1, requested type "simple"
  3653                           ; Number of cases is 5, Range of values is 1 to 10
  3654                           ; switch strategies available:
  3655                           ; Name         Instructions Cycles
  3656                           ; simple_byte           16     9 (average)
  3657                           ;	Chosen strategy is simple_byte
  3658  0046CE  5043               	movf	btemp+10,w,c
  3659  0046D0  0A01               	xorlw	1	; case 1
  3660  0046D2  B4D8               	btfsc	status,2,c
  3661  0046D4  D75D               	goto	l6527
  3662  0046D6  0A03               	xorlw	3	; case 2
  3663  0046D8  B4D8               	btfsc	status,2,c
  3664  0046DA  D77F               	goto	l6547
  3665  0046DC  0A04               	xorlw	4	; case 6
  3666  0046DE  B4D8               	btfsc	status,2,c
  3667  0046E0  D798               	goto	l6565
  3668  0046E2  0A0F               	xorlw	15	; case 9
  3669  0046E4  B4D8               	btfsc	status,2,c
  3670  0046E6  D7A2               	goto	l6577
  3671  0046E8  0A03               	xorlw	3	; case 10
  3672  0046EA  B4D8               	btfsc	status,2,c
  3673  0046EC  D7DB               	goto	l6603
  3674  0046EE  D73F               	goto	l6517
  3675  0046F0                     l6617:
  3676                           
  3677                           ;gemsecs.c: 605:  return(block);
  3678  0046F0  EE20  F001         	lfsr	2,secs_II_message@block
  3679                           
  3680                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3681  0046F4  0E07               	movlw	7
  3682  0046F6  6E39               	movwf	btemp,c
  3683  0046F8  0EF9               	movlw	-7
  3684  0046FA                     us359999:
  3685  0046FA  006F FF7B FFE3     	movff	postinc2,plusw1
  3686  004700  28E8               	incf	wreg,w,c
  3687  004702  2E39               	decfsz	btemp,f,c
  3688  004704  D7FA               	bra	us359999
  3689                           
  3690                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3691  004706  0012               	return		;funcret
  3692  004708                     __end_of_secs_II_message:
  3693                           	opt callstack 0
  3694                           
  3695 ;; *************** function _sprintf *****************
  3696 ;; Defined at:
  3697 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  s               1  [STACK] PTR unsigned char 
  3700 ;;		 -> V(94), 
  3701 ;;  fmt             1  [STACK] PTR const unsigned char 
  3702 ;;		 -> STR_15(21), STR_14(21), STR_13(6), STR_12(19), 
  3703 ;;		 -> STR_11(21), STR_10(20), STR_9(23), STR_8(6), 
  3704 ;;		 -> STR_7(6), STR_6(14), STR_5(20), STR_4(15), 
  3705 ;;		 -> STR_2(12), STR_1(17), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  f               5  [STACK] struct _IO_FILE
  3708 ;;  ap              2  [STACK] PTR void [1]
  3709 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3710 ;;  ret             2    0        int 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  2  [STACK] int 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3715 ;; Tracked objects:
  3716 ;;		On entry : 4/0
  3717 ;;		On exit  : 3F/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3724 ;;Total ram usage:        0 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:   11
  3727 ;; This function calls:
  3728 ;;		_vfprintf
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text3
  3735  00513C                     __ptext3:
  3736                           	opt callstack 0
  3737  00513C                     _sprintf:
  3738                           	opt callstack 0
  3739                           
  3740                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3741  00513C  0E07               	movlw	7
  3742  00513E  26E1               	addwf	fsr1l,f,c
  3743  005140  0E00               	movlw	0
  3744  005142  22E2               	addwfc	fsr1h,f,c
  3745                           
  3746                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3747                           
  3748                           ;incstack = 0
  3749  005144  0EF6               	movlw	246
  3750  005146  24E1               	addwf	fsr1l,w,c
  3751  005148  6E43               	movwf	btemp+10,c
  3752  00514A  0EFF               	movlw	255
  3753  00514C  20E2               	addwfc	fsr1h,w,c
  3754  00514E  6E44               	movwf	btemp+11,c
  3755                           
  3756                           ;stkvar	_ap @ sp[(-7)+5]
  3757  005150  0EFF               	movlw	-1
  3758  005152  0060  F113  FFE3   	movff	btemp+11,plusw1
  3759  005158  0EFE               	movlw	-2
  3760  00515A  0060  F10F  FFE3   	movff	btemp+10,plusw1
  3761                           
  3762                           ;stkvar	_s @ sp[(-7)+-2]
  3763  005160  0EF7               	movlw	-9
  3764  005162  006F FF8C  F044    	movff	plusw1,btemp+11
  3765                           
  3766                           ;stkvar	_f @ sp[(-7)+0]
  3767  005168  0EF9               	movlw	-7
  3768  00516A  0060  F113  FFE3   	movff	btemp+11,plusw1
  3769                           
  3770                           ;stkvar	_f @ sp[(-7)+0]
  3771  005170  0EFA               	movlw	250
  3772  005172  24E1               	addwf	fsr1l,w,c
  3773  005174  6ED9               	movwf	fsr2l,c
  3774  005176  0EFF               	movlw	255
  3775  005178  20E2               	addwfc	fsr1h,w,c
  3776  00517A  6EDA               	movwf	fsr2h,c
  3777  00517C  0E00               	movlw	0
  3778  00517E  6EDE               	movwf	postinc2,c
  3779  005180  0E00               	movlw	0
  3780  005182  6EDD               	movwf	postdec2,c
  3781                           
  3782                           ;stkvar	_f @ sp[(-7)+0]
  3783  005184  0EFC               	movlw	252
  3784  005186  24E1               	addwf	fsr1l,w,c
  3785  005188  6ED9               	movwf	fsr2l,c
  3786  00518A  0EFF               	movlw	255
  3787  00518C  20E2               	addwfc	fsr1h,w,c
  3788  00518E  6EDA               	movwf	fsr2h,c
  3789  005190  0E00               	movlw	0
  3790  005192  6EDE               	movwf	postinc2,c
  3791  005194  0E00               	movlw	0
  3792  005196  6EDD               	movwf	postdec2,c
  3793                           
  3794                           ;stkvar	_ap @ sp[(-7)+5]
  3795  005198  0EFE               	movlw	254
  3796  00519A  24E1               	addwf	fsr1l,w,c
  3797  00519C  6E39               	movwf	btemp,c
  3798  00519E  0EFF               	movlw	255
  3799  0051A0  20E2               	addwfc	fsr1h,w,c
  3800  0051A2  6E3A               	movwf	btemp+1,c
  3801  0051A4  0060  F0E7  FFE6   	movff	btemp,postinc1
  3802  0051AA  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3803                           
  3804                           ;stkvar	_fmt @ sp[(-9)+-3]
  3805  0051B0  0EF4               	movlw	-12
  3806  0051B2  50E3               	movf	plusw1,w,c
  3807  0051B4  6EE6               	movwf	postinc1,c
  3808                           
  3809                           ;stkvar	_f @ sp[(-10)+0]
  3810  0051B6  0EF6               	movlw	246
  3811  0051B8  24E1               	addwf	fsr1l,w,c
  3812  0051BA  6E39               	movwf	btemp,c
  3813  0051BC  0EFF               	movlw	255
  3814  0051BE  20E2               	addwfc	fsr1h,w,c
  3815  0051C0  6E3A               	movwf	btemp+1,c
  3816  0051C2  0060  F0E7  FFE6   	movff	btemp,postinc1
  3817  0051C8  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3818  0051CE  EC45  F02A         	call	_vfprintf	;wreg free
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;stkvar	_f @ sp[(-7)+0]
  3822  0051D2  0EFA               	movlw	250
  3823  0051D4  24E1               	addwf	fsr1l,w,c
  3824  0051D6  6ED9               	movwf	fsr2l,c
  3825  0051D8  0EFF               	movlw	255
  3826  0051DA  20E2               	addwfc	fsr1h,w,c
  3827  0051DC  6EDA               	movwf	fsr2h,c
  3828  0051DE  50DF               	movf	indf2,w,c
  3829  0051E0  6E44               	movwf	btemp+11,c
  3830                           
  3831                           ;stkvar	_s @ sp[(-7)+-2]
  3832  0051E2  0EF7               	movlw	-9
  3833  0051E4  50E3               	movf	plusw1,w,c
  3834  0051E6  2444               	addwf	btemp+11,w,c
  3835  0051E8  6ED9               	movwf	fsr2l,c
  3836  0051EA  6ADA               	clrf	fsr2h,c
  3837  0051EC  0E00               	movlw	0
  3838  0051EE  6EDF               	movwf	indf2,c
  3839                           
  3840                           ; BSR set to: 0
  3841                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  3842  0051F0  0EF9               	movlw	249
  3843  0051F2  26E1               	addwf	fsr1l,f,c
  3844  0051F4  0EFF               	movlw	255
  3845  0051F6  22E2               	addwfc	fsr1h,f,c
  3846  0051F8  52E5               	movf	postdec1,f,c
  3847  0051FA  50E7               	movf	indf1,w,c
  3848  0051FC  5EE1               	subwf	fsr1l,f,c
  3849  0051FE  0E00               	movlw	0
  3850  005200  5AE2               	subwfb	fsr1h,f,c
  3851  005202  0012               	return		;funcret
  3852  005204                     __end_of_sprintf:
  3853                           	opt callstack 0
  3854                           
  3855 ;; *************** function _r_protocol *****************
  3856 ;; Defined at:
  3857 ;;		line 199 in file "gemsecs.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  r_link          1  [STACK] PTR enum E16173
  3860 ;;		 -> V(94), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  rxData          1  [STACK] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1  [STACK] enum E16913
  3865 ;; Registers used:
  3866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3876 ;;Total ram usage:        0 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    5
  3879 ;; This function calls:
  3880 ;;		_StartTimer
  3881 ;;		_TimerDone
  3882 ;;		_UART1_Read
  3883 ;;		_UART1_Write
  3884 ;;		_UART1_is_rx_ready
  3885 ;;		_WaitMs
  3886 ;;		_run_checksum
  3887 ;;		_secs_gem_state
  3888 ;;		_secs_send
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text4
  3895  00344C                     __ptext4:
  3896                           	opt callstack 0
  3897  00344C                     _r_protocol:
  3898                           	opt callstack 0
  3899                           
  3900                           ; BSR set to: 0
  3901                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3902  00344C  52E6               	movf	postinc1,f,c
  3903                           
  3904                           ;gemsecs.c: 199: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 200: {;gemsecs.
      +                          c: 201:  uint8_t rxData;;gemsecs.c: 202:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 204:  switch (*r_link) {
  3905                           
  3906                           ;incstack = 0
  3907  00344E  D178               	goto	l8781
  3908  003450                     l8653:
  3909                           
  3910                           ;gemsecs.c: 206:   if (UART1_is_rx_ready()) {
  3911  003450  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  3912  003454  5039               	movf	btemp,w,c
  3913  003456  B4D8               	btfsc	status,2,c
  3914  003458  D194               	goto	l8783
  3915                           
  3916                           ;gemsecs.c: 207:    rxData = UART1_Read();
  3917  00345A  EC61  F02E         	call	_UART1_Read	;wreg free
  3918                           
  3919                           ;stkvar	_rxData @ sp[(-1)+0]
  3920  00345E  0EFF               	movlw	-1
  3921  003460  0060  F0E7  FFE3   	movff	btemp,plusw1
  3922                           
  3923                           ; BSR set to: 57
  3924                           ;gemsecs.c: 208:    if (rxData == 0x05) {
  3925                           ;stkvar	_rxData @ sp[(-1)+0]
  3926  003466  0EFF               	movlw	-1
  3927  003468  006F FF8C  F039    	movff	plusw1,btemp
  3928  00346E  0E05               	movlw	5
  3929  003470  1839               	xorwf	btemp,w,c
  3930  003472  A4D8               	btfss	status,2,c
  3931  003474  D186               	goto	l8783
  3932                           
  3933                           ; BSR set to: 57
  3934                           ;gemsecs.c: 209:     V.error = LINK_ERROR_NONE;
  3935  003476  0100               	movlb	0	; () banked
  3936  003478  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;gemsecs.c: 210:     *r_link = LINK_STATE_ENQ;
  3940                           ;stkvar	_r_link @ sp[(-1)+-1]
  3941  00347A  0EFE               	movlw	-2
  3942  00347C  50E3               	movf	plusw1,w,c
  3943  00347E  6ED9               	movwf	fsr2l,c
  3944  003480  6ADA               	clrf	fsr2h,c
  3945  003482  0E01               	movlw	1
  3946  003484  D144               	goto	L10
  3947  003486                     l1634:
  3948                           
  3949                           ;gemsecs.c: 215:   rxData_l = 0;
  3950  003486  6A2A               	clrf	r_protocol@rxData_l,c
  3951                           
  3952                           ;gemsecs.c: 216:   UART1_Write(0x04);
  3953  003488  0E04               	movlw	4
  3954  00348A  6EE6               	movwf	postinc1,c
  3955  00348C  EC23  F02E         	call	_UART1_Write	;wreg free
  3956                           
  3957                           ; BSR set to: 57
  3958                           ;gemsecs.c: 217:   StartTimer(TMR_T2, 2000);
  3959  003490  0ED0               	movlw	208
  3960  003492  6EE6               	movwf	postinc1,c
  3961  003494  0E07               	movlw	7
  3962  003496  6EE6               	movwf	postinc1,c
  3963  003498  0E02               	movlw	2
  3964  00349A  6EE6               	movwf	postinc1,c
  3965  00349C  EC80  F02E         	call	_StartTimer	;wreg free
  3966                           
  3967                           ;gemsecs.c: 218:   *r_link = LINK_STATE_EOT;
  3968                           ;stkvar	_r_link @ sp[(-1)+-1]
  3969  0034A0  0EFE               	movlw	-2
  3970  0034A2  50E3               	movf	plusw1,w,c
  3971  0034A4  6ED9               	movwf	fsr2l,c
  3972  0034A6  6ADA               	clrf	fsr2h,c
  3973  0034A8  0E02               	movlw	2
  3974  0034AA  6EDF               	movwf	indf2,c
  3975                           
  3976                           ;gemsecs.c: 220:   WaitMs(5);
  3977  0034AC  0E05               	movlw	5
  3978  0034AE  6EE6               	movwf	postinc1,c
  3979  0034B0  0E00               	movlw	0
  3980  0034B2  6EE6               	movwf	postinc1,c
  3981  0034B4  EC52  F02F         	call	_WaitMs	;wreg free
  3982                           
  3983                           ;gemsecs.c: 221:   H27[0].block.block.systemb = V.ticks;
  3984  0034B8  C0A6  F2D3         	movff	_V+70,_H27+19	;volatile
  3985  0034BC  C0A7  F2D4         	movff	_V+71,_H27+20	;volatile
  3986  0034C0  C0A8  F2D5         	movff	_V+72,_H27+21	;volatile
  3987  0034C4  C0A9  F2D6         	movff	_V+73,_H27+22	;volatile
  3988                           
  3989                           ;gemsecs.c: 222:   secs_send((uint8_t*) & H27[0], sizeof(header27), 1, 1);
  3990  0034C8  0E01               	movlw	1
  3991  0034CA  6EE6               	movwf	postinc1,c
  3992  0034CC  0E01               	movlw	1
  3993  0034CE  6EE6               	movwf	postinc1,c
  3994  0034D0  0E1E               	movlw	30
  3995  0034D2  6EE6               	movwf	postinc1,c
  3996  0034D4  0EC0               	movlw	low _H27
  3997  0034D6  6EE6               	movwf	postinc1,c
  3998  0034D8  0E02               	movlw	high _H27
  3999  0034DA  6EE6               	movwf	postinc1,c
  4000  0034DC  EC2F  F021         	call	_secs_send	;wreg free
  4001                           
  4002                           ;gemsecs.c: 226:   break;
  4003  0034E0  D150               	goto	l8783
  4004  0034E2                     l8675:
  4005                           
  4006                           ;gemsecs.c: 228:   if (TimerDone(TMR_T2)) {
  4007  0034E2  0E02               	movlw	2
  4008  0034E4  6EE6               	movwf	postinc1,c
  4009  0034E6  ECF3  F030         	call	_TimerDone	;wreg free
  4010  0034EA  5039               	movf	btemp,w,c
  4011  0034EC  B4D8               	btfsc	status,2,c
  4012  0034EE  D017               	goto	l8685
  4013                           
  4014                           ;gemsecs.c: 229:    if (!retry--) {
  4015  0034F0  065D               	decf	r_protocol@retry,f,c
  4016  0034F2  285D               	incf	r_protocol@retry,w,c
  4017  0034F4  A4D8               	btfss	status,2,c
  4018  0034F6  D00D               	goto	l8683
  4019                           
  4020                           ;gemsecs.c: 230:     V.error = LINK_ERROR_T2;
  4021  0034F8  0E02               	movlw	2
  4022  0034FA  0100               	movlb	0	; () banked
  4023  0034FC  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4024                           
  4025                           ;gemsecs.c: 231:     V.failed_receive = 1;
  4026  0034FE  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  4027  003500  0BF0               	andlw	-16
  4028  003502  0901               	iorlw	1
  4029  003504  6FB8               	movwf	(_V+88)& (0+255),b	;volatile
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;gemsecs.c: 232:     *r_link = LINK_STATE_NAK;
  4033                           ;stkvar	_r_link @ sp[(-1)+-1]
  4034  003506  0EFE               	movlw	-2
  4035  003508  50E3               	movf	plusw1,w,c
  4036  00350A  6ED9               	movwf	fsr2l,c
  4037  00350C  6ADA               	clrf	fsr2h,c
  4038  00350E  0E05               	movlw	5
  4039  003510  D0FE               	goto	L10
  4040  003512                     l8683:
  4041                           
  4042                           ;gemsecs.c: 234:     *r_link = LINK_STATE_IDLE;
  4043                           ;stkvar	_r_link @ sp[(-1)+-1]
  4044  003512  0EFE               	movlw	-2
  4045  003514  50E3               	movf	plusw1,w,c
  4046  003516  6ED9               	movwf	fsr2l,c
  4047  003518  6ADA               	clrf	fsr2h,c
  4048  00351A  0E00               	movlw	0
  4049  00351C  D0F8               	goto	L10
  4050  00351E                     l8685:
  4051                           
  4052                           ;gemsecs.c: 237:    if (UART1_is_rx_ready()) {
  4053  00351E  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  4054  003522  5039               	movf	btemp,w,c
  4055  003524  B4D8               	btfsc	status,2,c
  4056  003526  D12D               	goto	l8783
  4057                           
  4058                           ;gemsecs.c: 238:     rxData = UART1_Read();
  4059  003528  EC61  F02E         	call	_UART1_Read	;wreg free
  4060                           
  4061                           ;stkvar	_rxData @ sp[(-1)+0]
  4062  00352C  0EFF               	movlw	-1
  4063  00352E  0060  F0E7  FFE3   	movff	btemp,plusw1
  4064                           
  4065                           ; BSR set to: 57
  4066                           ;gemsecs.c: 239:     if (rxData_l == 0) {
  4067  003534  502A               	movf	r_protocol@rxData_l,w,c
  4068  003536  A4D8               	btfss	status,2,c
  4069  003538  D00C               	goto	l8697
  4070                           
  4071                           ; BSR set to: 57
  4072                           ;gemsecs.c: 240:      r_block.length = rxData;
  4073                           ;stkvar	_rxData @ sp[(-1)+0]
  4074  00353A  0EFF               	movlw	-1
  4075  00353C  006F FF8C  F0CA    	movff	plusw1,_r_block+12
  4076                           
  4077                           ; BSR set to: 57
  4078                           ;gemsecs.c: 241:      run_checksum(0, 1);
  4079  003542  0E01               	movlw	1
  4080  003544  6EE6               	movwf	postinc1,c
  4081  003546  0E00               	movlw	0
  4082  003548  6EE6               	movwf	postinc1,c
  4083  00354A  ECBA  F02E         	call	_run_checksum	;wreg free
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;gemsecs.c: 242:      rxData_l++;
  4087  00354E  2A2A               	incf	r_protocol@rxData_l,f,c
  4088                           
  4089                           ;gemsecs.c: 243:     } else {
  4090  003550  D118               	goto	l8783
  4091  003552                     l8697:
  4092                           
  4093                           ; BSR set to: 57
  4094                           ;gemsecs.c: 247:      if (rxData_l <= sizeof(block10))
  4095  003552  0E0B               	movlw	11
  4096  003554  602A               	cpfslt	r_protocol@rxData_l,c
  4097  003556  D00C               	goto	l8701
  4098                           
  4099                           ; BSR set to: 57
  4100                           ;gemsecs.c: 248:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4101                           ;stkvar	_rxData @ sp[(-1)+0]
  4102  003558  502A               	movf	r_protocol@rxData_l,w,c
  4103  00355A  0820               	sublw	low (_H10+25)
  4104  00355C  6ED9               	movwf	fsr2l,c
  4105  00355E  0E00               	movlw	0
  4106  003560  A0D8               	btfss	status,0,c
  4107  003562  2AE8               	incf	wreg,f,c
  4108  003564  0801               	sublw	high (_H10+25)
  4109  003566  6EDA               	movwf	fsr2h,c
  4110  003568  0EFF               	movlw	-1
  4111  00356A  006F FF8F FFDF     	movff	plusw1,indf2
  4112  003570                     l8701:
  4113                           
  4114                           ; BSR set to: 57
  4115                           ;gemsecs.c: 250:      if (rxData_l == sizeof(block10) + 1)
  4116  003570  0E0B               	movlw	11
  4117  003572  182A               	xorwf	r_protocol@rxData_l,w,c
  4118  003574  A4D8               	btfss	status,2,c
  4119  003576  D004               	goto	l8705
  4120                           
  4121                           ; BSR set to: 57
  4122                           ;gemsecs.c: 251:       V.ack[2] = rxData;
  4123                           ;stkvar	_rxData @ sp[(-1)+0]
  4124  003578  0EFF               	movlw	-1
  4125  00357A  006F FF8C  F0BB    	movff	plusw1,_V+91	;volatile
  4126  003580                     l8705:
  4127                           
  4128                           ; BSR set to: 57
  4129                           ;gemsecs.c: 252:      if (rxData_l == sizeof(block10) + 2)
  4130  003580  0E0C               	movlw	12
  4131  003582  182A               	xorwf	r_protocol@rxData_l,w,c
  4132  003584  A4D8               	btfss	status,2,c
  4133  003586  D004               	goto	l8709
  4134                           
  4135                           ; BSR set to: 57
  4136                           ;gemsecs.c: 253:       V.ack[1] = rxData;
  4137                           ;stkvar	_rxData @ sp[(-1)+0]
  4138  003588  0EFF               	movlw	-1
  4139  00358A  006F FF8C  F0BA    	movff	plusw1,_V+90	;volatile
  4140  003590                     l8709:
  4141                           
  4142                           ; BSR set to: 57
  4143                           ;gemsecs.c: 254:      if (rxData_l == sizeof(block10) + 3)
  4144  003590  0E0D               	movlw	13
  4145  003592  182A               	xorwf	r_protocol@rxData_l,w,c
  4146  003594  A4D8               	btfss	status,2,c
  4147  003596  D004               	goto	l8713
  4148                           
  4149                           ; BSR set to: 57
  4150                           ;gemsecs.c: 255:       V.ack[0] = rxData;
  4151                           ;stkvar	_rxData @ sp[(-1)+0]
  4152  003598  0EFF               	movlw	-1
  4153  00359A  006F FF8C  F0B9    	movff	plusw1,_V+89	;volatile
  4154  0035A0                     l8713:
  4155                           
  4156                           ; BSR set to: 57
  4157                           ;gemsecs.c: 257:      if (rxData_l <= r_block.length)
  4158  0035A0  502A               	movf	r_protocol@rxData_l,w,c
  4159  0035A2  0100               	movlb	0	; () banked
  4160  0035A4  5DCA               	subwf	(_r_block+12)& (0+255),w,b
  4161  0035A6  A0D8               	btfss	status,0,c
  4162  0035A8  D00D               	goto	l8717
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;gemsecs.c: 258:       V.r_checksum = run_checksum(rxData, 0);
  4166  0035AA  0E00               	movlw	0
  4167  0035AC  6EE6               	movwf	postinc1,c
  4168                           
  4169                           ;stkvar	_rxData @ sp[(-2)+0]
  4170  0035AE  0EFE               	movlw	-2
  4171  0035B0  50E3               	movf	plusw1,w,c
  4172  0035B2  6EE6               	movwf	postinc1,c
  4173  0035B4  ECBA  F02E         	call	_run_checksum	;wreg free
  4174  0035B8  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  4175  0035BE  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  4176  0035C4                     l8717:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;gemsecs.c: 260:      if (rxData_l == r_block.length + 1)
  4180  0035C4  502A               	movf	r_protocol@rxData_l,w,c
  4181  0035C6  6E43               	movwf	btemp+10,c
  4182  0035C8  6A44               	clrf	btemp+11,c
  4183  0035CA  51CA               	movf	(_r_block+12)& (0+255),w,b
  4184  0035CC  6E41               	movwf	btemp+8,c
  4185  0035CE  6A42               	clrf	btemp+9,c
  4186  0035D0  0E01               	movlw	1
  4187  0035D2  2641               	addwf	btemp+8,f,c
  4188  0035D4  0E00               	movlw	0
  4189  0035D6  2242               	addwfc	btemp+9,f,c
  4190  0035D8  5043               	movf	btemp+10,w,c
  4191  0035DA  1841               	xorwf	btemp+8,w,c
  4192  0035DC  E109               	bnz	l8721
  4193  0035DE  5044               	movf	btemp+11,w,c
  4194  0035E0  1842               	xorwf	btemp+9,w,c
  4195  0035E2  A4D8               	btfss	status,2,c
  4196  0035E4  D005               	goto	l8721
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;gemsecs.c: 261:       H10[1].checksum = (uint16_t) rxData << 8;
  4200                           ;stkvar	_rxData @ sp[(-1)+0]
  4201  0035E6  0EFF               	movlw	-1
  4202  0035E8  50E3               	movf	plusw1,w,c
  4203  0035EA  0101               	movlb	1	; () banked
  4204  0035EC  6F15               	movwf	(_H10+14)& (0+255),b
  4205  0035EE  6B14               	clrf	(_H10+13)& (0+255),b
  4206  0035F0                     l8721:
  4207                           
  4208                           ;gemsecs.c: 262:      if (rxData_l == r_block.length + 2)
  4209  0035F0  502A               	movf	r_protocol@rxData_l,w,c
  4210  0035F2  6E43               	movwf	btemp+10,c
  4211  0035F4  6A44               	clrf	btemp+11,c
  4212  0035F6  0100               	movlb	0	; () banked
  4213  0035F8  51CA               	movf	(_r_block+12)& (0+255),w,b
  4214  0035FA  6E41               	movwf	btemp+8,c
  4215  0035FC  6A42               	clrf	btemp+9,c
  4216  0035FE  0E02               	movlw	2
  4217  003600  2641               	addwf	btemp+8,f,c
  4218  003602  0E00               	movlw	0
  4219  003604  2242               	addwfc	btemp+9,f,c
  4220  003606  5043               	movf	btemp+10,w,c
  4221  003608  1841               	xorwf	btemp+8,w,c
  4222  00360A  E10A               	bnz	l8725
  4223  00360C  5044               	movf	btemp+11,w,c
  4224  00360E  1842               	xorwf	btemp+9,w,c
  4225  003610  A4D8               	btfss	status,2,c
  4226  003612  D006               	goto	l8725
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;gemsecs.c: 263:       H10[1].checksum += rxData;
  4230                           ;stkvar	_rxData @ sp[(-1)+0]
  4231  003614  0EFF               	movlw	-1
  4232  003616  50E3               	movf	plusw1,w,c
  4233  003618  0101               	movlb	1	; () banked
  4234  00361A  2714               	addwf	(_H10+13)& (0+255),f,b
  4235  00361C  0E00               	movlw	0
  4236  00361E  2315               	addwfc	(_H10+14)& (0+255),f,b
  4237  003620                     l8725:
  4238                           
  4239                           ;gemsecs.c: 265:      rxData_l++;
  4240  003620  2A2A               	incf	r_protocol@rxData_l,f,c
  4241                           
  4242                           ;gemsecs.c: 266:      if (rxData_l > (r_block.length + 2)) {
  4243  003622  502A               	movf	r_protocol@rxData_l,w,c
  4244  003624  6E43               	movwf	btemp+10,c
  4245  003626  6A44               	clrf	btemp+11,c
  4246  003628  0100               	movlb	0	; () banked
  4247  00362A  51CA               	movf	(_r_block+12)& (0+255),w,b
  4248  00362C  6E41               	movwf	btemp+8,c
  4249  00362E  6A42               	clrf	btemp+9,c
  4250  003630  0E02               	movlw	2
  4251  003632  2641               	addwf	btemp+8,f,c
  4252  003634  0E00               	movlw	0
  4253  003636  2242               	addwfc	btemp+9,f,c
  4254  003638  5043               	movf	btemp+10,w,c
  4255  00363A  5C41               	subwf	btemp+8,w,c
  4256  00363C  5042               	movf	btemp+9,w,c
  4257  00363E  0A80               	xorlw	128
  4258  003640  6E39               	movwf	btemp,c
  4259  003642  5044               	movf	btemp+11,w,c
  4260  003644  0A80               	xorlw	128
  4261  003646  5839               	subwfb	btemp,w,c
  4262  003648  B0D8               	btfsc	status,0,c
  4263  00364A  D09B               	goto	l8783
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;gemsecs.c: 267:       if (V.r_checksum == H10[1].checksum) {
  4267  00364C  0101               	movlb	1	; () banked
  4268  00364E  5114               	movf	(_H10+13)& (0+255),w,b
  4269  003650  0100               	movlb	0	; () banked
  4270  003652  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  4271  003654  E10E               	bnz	l8735
  4272  003656  0101               	movlb	1	; () banked
  4273  003658  5115               	movf	(_H10+14)& (0+255),w,b
  4274  00365A  0100               	movlb	0	; () banked
  4275  00365C  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  4276  00365E  A4D8               	btfss	status,2,c
  4277  003660  D008               	goto	l8735
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;gemsecs.c: 268:        *r_link = LINK_STATE_ACK;
  4281                           ;stkvar	_r_link @ sp[(-1)+-1]
  4282  003662  0EFE               	movlw	-2
  4283  003664  50E3               	movf	plusw1,w,c
  4284  003666  6ED9               	movwf	fsr2l,c
  4285  003668  6ADA               	clrf	fsr2h,c
  4286  00366A  0E03               	movlw	3
  4287  00366C  D050               	goto	L10
  4288  00366E                     l8733:
  4289  00366E  EC61  F02E         	call	_UART1_Read	;wreg free
  4290  003672                     l8735:
  4291                           
  4292                           ;gemsecs.c: 270:        while (UART1_is_rx_ready())
  4293  003672  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  4294  003676  5039               	movf	btemp,w,c
  4295  003678  A4D8               	btfss	status,2,c
  4296  00367A  D7F9               	goto	l8733
  4297                           
  4298                           ;gemsecs.c: 272:        WaitMs(500);
  4299  00367C  0EF4               	movlw	244
  4300  00367E  6EE6               	movwf	postinc1,c
  4301  003680  0E01               	movlw	1
  4302  003682  6EE6               	movwf	postinc1,c
  4303  003684  EC52  F02F         	call	_WaitMs	;wreg free
  4304                           
  4305                           ;gemsecs.c: 273:        V.error = LINK_ERROR_CHECKSUM;
  4306  003688  0E05               	movlw	5
  4307  00368A  0100               	movlb	0	; () banked
  4308  00368C  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;gemsecs.c: 274:        V.failed_receive = 2;
  4312  00368E  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  4313  003690  0BF0               	andlw	-16
  4314  003692  0902               	iorlw	2
  4315  003694  D737               	goto	L11
  4316  003696                     l8745:
  4317                           
  4318                           ;gemsecs.c: 283:   V.stream = H10[1].block.block.stream;
  4319  003696  0101               	movlb	1	; () banked
  4320  003698  511D               	movf	(_H10+22)& (0+255),w,b
  4321  00369A  0B7F               	andlw	127
  4322  00369C  0100               	movlb	0	; () banked
  4323  00369E  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;gemsecs.c: 284:   V.function = H10[1].block.block.function;
  4327  0036A0  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;gemsecs.c: 285:   V.systemb = H10[1].block.block.systemb;
  4331  0036A4  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  4332  0036A8  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  4333  0036AC  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  4334  0036B0  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;gemsecs.c: 286:   V.rbit = H10[1].block.block.rbit;
  4338  0036B4  0101               	movlb	1	; () banked
  4339  0036B6  AF1F               	btfss	(_H10+24)& (0+255),7,b
  4340  0036B8  D003               	bra	u5455
  4341  0036BA  0100               	movlb	0	; () banked
  4342  0036BC  81B7               	bsf	(_V+87)& (0+255),0,b	;volatile
  4343  0036BE  D002               	bra	u5457
  4344  0036C0                     u5455:
  4345  0036C0  0100               	movlb	0	; () banked
  4346  0036C2  91B7               	bcf	(_V+87)& (0+255),0,b	;volatile
  4347  0036C4                     u5457:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;gemsecs.c: 287:   V.wbit = H10[1].block.block.wbit;
  4351  0036C4  0101               	movlb	1	; () banked
  4352  0036C6  AF1D               	btfss	(_H10+22)& (0+255),7,b
  4353  0036C8  D003               	bra	u5465
  4354  0036CA  0100               	movlb	0	; () banked
  4355  0036CC  83B7               	bsf	(_V+87)& (0+255),1,b	;volatile
  4356  0036CE  D002               	bra	u5467
  4357  0036D0                     u5465:
  4358  0036D0  0100               	movlb	0	; () banked
  4359  0036D2  93B7               	bcf	(_V+87)& (0+255),1,b	;volatile
  4360  0036D4                     u5467:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;gemsecs.c: 288:   V.ebit = H10[1].block.block.ebit;
  4364  0036D4  0101               	movlb	1	; () banked
  4365  0036D6  AF1B               	btfss	(_H10+20)& (0+255),7,b
  4366  0036D8  D003               	bra	u5475
  4367  0036DA  0100               	movlb	0	; () banked
  4368  0036DC  85B7               	bsf	(_V+87)& (0+255),2,b	;volatile
  4369  0036DE  D002               	bra	u5477
  4370  0036E0                     u5475:
  4371  0036E0  0100               	movlb	0	; () banked
  4372  0036E2  95B7               	bcf	(_V+87)& (0+255),2,b	;volatile
  4373  0036E4                     u5477:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;gemsecs.c: 289:   V.g_state = secs_gem_state(V.stream, V.function);
  4377  0036E4  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  4378  0036E6  6EE6               	movwf	postinc1,c
  4379  0036E8  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  4380  0036EA  6EE6               	movwf	postinc1,c
  4381  0036EC  EC37  F028         	call	_secs_gem_state	;wreg free
  4382  0036F0  5039               	movf	btemp,w,c
  4383  0036F2  0100               	movlb	0	; () banked
  4384  0036F4  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;gemsecs.c: 290:   UART1_Write(0x06);
  4388  0036F6  0E06               	movlw	6
  4389  0036F8  6EE6               	movwf	postinc1,c
  4390  0036FA  EC23  F02E         	call	_UART1_Write	;wreg free
  4391                           
  4392                           ; BSR set to: 57
  4393                           ;gemsecs.c: 291:   V.failed_receive = 0;
  4394  0036FE  0EF0               	movlw	-16
  4395  003700  0100               	movlb	0	; () banked
  4396  003702  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;gemsecs.c: 292:   *r_link = LINK_STATE_DONE;
  4400                           ;stkvar	_r_link @ sp[(-1)+-1]
  4401  003704  0EFE               	movlw	-2
  4402  003706  50E3               	movf	plusw1,w,c
  4403  003708  6ED9               	movwf	fsr2l,c
  4404  00370A  6ADA               	clrf	fsr2h,c
  4405  00370C  0E04               	movlw	4
  4406  00370E                     L10:
  4407  00370E  6EDF               	movwf	indf2,c
  4408                           
  4409                           ;gemsecs.c: 293:   break;
  4410  003710  D038               	goto	l8783
  4411  003712                     l8765:
  4412                           
  4413                           ;gemsecs.c: 295:   UART1_Write(0x15);
  4414  003712  0E15               	movlw	21
  4415  003714  6EE6               	movwf	postinc1,c
  4416  003716  EC23  F02E         	call	_UART1_Write	;wreg free
  4417                           
  4418                           ; BSR set to: 57
  4419                           ;gemsecs.c: 296:   *r_link = LINK_STATE_ERROR;
  4420                           ;stkvar	_r_link @ sp[(-1)+-1]
  4421  00371A  0EFE               	movlw	-2
  4422  00371C  50E3               	movf	plusw1,w,c
  4423  00371E  6ED9               	movwf	fsr2l,c
  4424  003720  6ADA               	clrf	fsr2h,c
  4425  003722  0E06               	movlw	6
  4426  003724  6EDF               	movwf	indf2,c
  4427                           
  4428                           ;gemsecs.c: 297:   while ((uart1RxCount)) {
  4429  003726  D002               	goto	l8771
  4430  003728                     l8769:
  4431                           
  4432                           ; BSR set to: 57
  4433                           ;gemsecs.c: 298:    UART1_Read();
  4434  003728  EC61  F02E         	call	_UART1_Read	;wreg free
  4435  00372C                     l8771:
  4436                           
  4437                           ; BSR set to: 57
  4438                           ;gemsecs.c: 297:   while ((uart1RxCount)) {
  4439  00372C  5033               	movf	_uart1RxCount,w,c	;volatile
  4440  00372E  A4D8               	btfss	status,2,c
  4441  003730  D7FB               	goto	l8769
  4442                           
  4443                           ; BSR set to: 57
  4444                           ;gemsecs.c: 300:   retry = 3;
  4445  003732  0E03               	movlw	3
  4446  003734  6E5D               	movwf	r_protocol@retry,c
  4447                           
  4448                           ;gemsecs.c: 301:   break;
  4449  003736  D025               	goto	l8783
  4450  003738                     l8775:
  4451                           
  4452                           ;gemsecs.c: 305:   V.failed_receive = 0;
  4453  003738  0EF0               	movlw	-16
  4454  00373A  0100               	movlb	0	; () banked
  4455  00373C  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  4456  00373E  D6E9               	goto	l8683
  4457  003740                     l8781:
  4458                           
  4459                           ;stkvar	_r_link @ sp[(-1)+-1]
  4460  003740  0EFE               	movlw	-2
  4461  003742  50E3               	movf	plusw1,w,c
  4462  003744  6ED9               	movwf	fsr2l,c
  4463  003746  6ADA               	clrf	fsr2h,c
  4464  003748  50DF               	movf	indf2,w,c
  4465  00374A  6E43               	movwf	btemp+10,c
  4466  00374C  6A44               	clrf	btemp+11,c
  4467                           
  4468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4469                           ; Switch size 1, requested type "simple"
  4470                           ; Number of cases is 1, Range of values is 0 to 0
  4471                           ; switch strategies available:
  4472                           ; Name         Instructions Cycles
  4473                           ; simple_byte            4     3 (average)
  4474                           ;	Chosen strategy is simple_byte
  4475  00374E  5044               	movf	btemp+11,w,c
  4476  003750  0A00               	xorlw	0	; case 0
  4477  003752  A4D8               	btfss	status,2,c
  4478  003754  D6DE               	goto	l8683
  4479                           
  4480                           ; Switch size 1, requested type "simple"
  4481                           ; Number of cases is 7, Range of values is 0 to 6
  4482                           ; switch strategies available:
  4483                           ; Name         Instructions Cycles
  4484                           ; simple_byte           22    12 (average)
  4485                           ;	Chosen strategy is simple_byte
  4486  003756  5043               	movf	btemp+10,w,c
  4487  003758  0A00               	xorlw	0	; case 0
  4488  00375A  B4D8               	btfsc	status,2,c
  4489  00375C  D679               	goto	l8653
  4490  00375E  0A01               	xorlw	1	; case 1
  4491  003760  B4D8               	btfsc	status,2,c
  4492  003762  D691               	goto	l1634
  4493  003764  0A03               	xorlw	3	; case 2
  4494  003766  B4D8               	btfsc	status,2,c
  4495  003768  D6BC               	goto	l8675
  4496  00376A  0A01               	xorlw	1	; case 3
  4497  00376C  B4D8               	btfsc	status,2,c
  4498  00376E  D793               	goto	l8745
  4499  003770  0A07               	xorlw	7	; case 4
  4500  003772  B4D8               	btfsc	status,2,c
  4501  003774  D7E1               	goto	l8775
  4502  003776  0A01               	xorlw	1	; case 5
  4503  003778  B4D8               	btfsc	status,2,c
  4504  00377A  D7CB               	goto	l8765
  4505  00377C  0A03               	xorlw	3	; case 6
  4506  00377E  A4D8               	btfss	status,2,c
  4507  003780  D6C8               	goto	l8683
  4508  003782                     l8783:
  4509                           
  4510                           ;gemsecs.c: 312:  return *r_link;
  4511                           ;stkvar	_r_link @ sp[(-1)+-1]
  4512  003782  0EFE               	movlw	-2
  4513  003784  50E3               	movf	plusw1,w,c
  4514  003786  6ED9               	movwf	fsr2l,c
  4515  003788  6ADA               	clrf	fsr2h,c
  4516  00378A  50DF               	movf	indf2,w,c
  4517  00378C  6E39               	movwf	btemp,c
  4518                           
  4519                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4520  00378E  52E5               	movf	postdec1,f,c
  4521  003790  52E5               	movf	postdec1,f,c
  4522  003792  0012               	return		;funcret
  4523  003794                     __end_of_r_protocol:
  4524                           	opt callstack 0
  4525                           
  4526 ;; *************** function _m_protocol *****************
  4527 ;; Defined at:
  4528 ;;		line 42 in file "gemsecs.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  m_link          1  [STACK] PTR enum E16173
  4531 ;;		 -> V(94), 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  rxData          1  [STACK] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1  [STACK] enum E16913
  4536 ;; Registers used:
  4537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    5
  4550 ;; This function calls:
  4551 ;;		_StartTimer
  4552 ;;		_TimerDone
  4553 ;;		_UART1_Read
  4554 ;;		_UART1_is_rx_ready
  4555 ;;		_UART2_Read
  4556 ;;		_UART2_is_rx_ready
  4557 ;;		_WaitMs
  4558 ;;		_run_checksum
  4559 ;;		_secs_gem_state
  4560 ;;		_secs_send
  4561 ;; This function is called by:
  4562 ;;		_main
  4563 ;; This function uses a reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text5
  4567  002636                     __ptext5:
  4568                           	opt callstack 0
  4569  002636                     _m_protocol:
  4570                           	opt callstack 0
  4571                           
  4572                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4573  002636  52E6               	movf	postinc1,f,c
  4574                           
  4575                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  4576                           
  4577                           ;incstack = 0
  4578  002638  D248               	goto	l9093
  4579  00263A                     l8909:
  4580                           
  4581                           ;gemsecs.c: 50:   WaitMs(50);
  4582  00263A  0E32               	movlw	50
  4583  00263C  6EE6               	movwf	postinc1,c
  4584  00263E  0E00               	movlw	0
  4585  002640  6EE6               	movwf	postinc1,c
  4586  002642  EC52  F02F         	call	_WaitMs	;wreg free
  4587                           
  4588                           ;gemsecs.c: 52:   if (UART1_is_rx_ready()) {
  4589  002646  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  4590  00264A  5039               	movf	btemp,w,c
  4591  00264C  B4D8               	btfsc	status,2,c
  4592  00264E  D021               	goto	l8925
  4593                           
  4594                           ;gemsecs.c: 53:    rxData = UART1_Read();
  4595  002650  EC61  F02E         	call	_UART1_Read	;wreg free
  4596                           
  4597                           ;stkvar	_rxData @ sp[(-1)+0]
  4598  002654  0EFF               	movlw	-1
  4599  002656  0060  F0E7  FFE3   	movff	btemp,plusw1
  4600                           
  4601                           ; BSR set to: 57
  4602                           ;gemsecs.c: 54:    if (rxData == 0x05) {
  4603                           ;stkvar	_rxData @ sp[(-1)+0]
  4604  00265C  0EFF               	movlw	-1
  4605  00265E  006F FF8C  F039    	movff	plusw1,btemp
  4606  002664  0E05               	movlw	5
  4607  002666  1839               	xorwf	btemp,w,c
  4608  002668  A4D8               	btfss	status,2,c
  4609  00266A  D013               	goto	l8925
  4610                           
  4611                           ; BSR set to: 57
  4612                           ;gemsecs.c: 55:     V.uart = 1;
  4613  00266C  0E01               	movlw	1
  4614  00266E  0100               	movlb	0	; () banked
  4615  002670  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;gemsecs.c: 56:     StartTimer(TMR_T2, 2000);
  4619  002672  0ED0               	movlw	208
  4620  002674  6EE6               	movwf	postinc1,c
  4621  002676  0E07               	movlw	7
  4622  002678  6EE6               	movwf	postinc1,c
  4623  00267A  0E02               	movlw	2
  4624  00267C  6EE6               	movwf	postinc1,c
  4625  00267E  EC80  F02E         	call	_StartTimer	;wreg free
  4626                           
  4627                           ;gemsecs.c: 57:     V.error = LINK_ERROR_NONE;
  4628  002682  0100               	movlb	0	; () banked
  4629  002684  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;gemsecs.c: 58:     *m_link = LINK_STATE_ENQ;
  4633                           ;stkvar	_m_link @ sp[(-1)+-1]
  4634  002686  0EFE               	movlw	-2
  4635  002688  50E3               	movf	plusw1,w,c
  4636  00268A  6ED9               	movwf	fsr2l,c
  4637  00268C  6ADA               	clrf	fsr2h,c
  4638  00268E  0E01               	movlw	1
  4639  002690  6EDF               	movwf	indf2,c
  4640  002692                     l8925:
  4641                           
  4642                           ;gemsecs.c: 61:   if (UART2_is_rx_ready()) {
  4643  002692  EC3D  F032         	call	_UART2_is_rx_ready	;wreg free
  4644  002696  5039               	movf	btemp,w,c
  4645  002698  B4D8               	btfsc	status,2,c
  4646  00269A  D238               	goto	l9095
  4647                           
  4648                           ;gemsecs.c: 62:    rxData = UART2_Read();
  4649  00269C  EC42  F02E         	call	_UART2_Read	;wreg free
  4650                           
  4651                           ;stkvar	_rxData @ sp[(-1)+0]
  4652  0026A0  0EFF               	movlw	-1
  4653  0026A2  0060  F0E7  FFE3   	movff	btemp,plusw1
  4654                           
  4655                           ; BSR set to: 57
  4656                           ;gemsecs.c: 63:    if (rxData == 0x05) {
  4657                           ;stkvar	_rxData @ sp[(-1)+0]
  4658  0026A8  0EFF               	movlw	-1
  4659  0026AA  006F FF8C  F039    	movff	plusw1,btemp
  4660  0026B0  0E05               	movlw	5
  4661  0026B2  1839               	xorwf	btemp,w,c
  4662  0026B4  A4D8               	btfss	status,2,c
  4663  0026B6  D22A               	goto	l9095
  4664                           
  4665                           ; BSR set to: 57
  4666                           ;gemsecs.c: 64:     V.uart = 2;
  4667  0026B8  0E02               	movlw	2
  4668  0026BA  0100               	movlb	0	; () banked
  4669  0026BC  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 2000);
  4673  0026BE  0ED0               	movlw	208
  4674  0026C0  6EE6               	movwf	postinc1,c
  4675  0026C2  0E07               	movlw	7
  4676  0026C4  6EE6               	movwf	postinc1,c
  4677  0026C6  0E02               	movlw	2
  4678  0026C8  6EE6               	movwf	postinc1,c
  4679  0026CA  EC80  F02E         	call	_StartTimer	;wreg free
  4680                           
  4681                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
  4682  0026CE  0100               	movlb	0	; () banked
  4683  0026D0  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
  4687                           ;stkvar	_m_link @ sp[(-1)+-1]
  4688  0026D2  0EFE               	movlw	-2
  4689  0026D4  50E3               	movf	plusw1,w,c
  4690  0026D6  6ED9               	movwf	fsr2l,c
  4691  0026D8  6ADA               	clrf	fsr2h,c
  4692  0026DA  0E01               	movlw	1
  4693  0026DC  D1F4               	goto	L17
  4694  0026DE                     l1579:
  4695                           
  4696                           ;gemsecs.c: 72:   rxData_l = 0;
  4697  0026DE  6A2B               	clrf	m_protocol@rxData_l,c
  4698                           
  4699                           ;gemsecs.c: 74:   WaitMs(50);
  4700  0026E0  0E32               	movlw	50
  4701  0026E2  6EE6               	movwf	postinc1,c
  4702  0026E4  0E00               	movlw	0
  4703  0026E6  6EE6               	movwf	postinc1,c
  4704  0026E8  EC52  F02F         	call	_WaitMs	;wreg free
  4705                           
  4706                           ;gemsecs.c: 75:   if (V.uart == 1)
  4707  0026EC  0100               	movlb	0	; () banked
  4708  0026EE  05BC               	decf	(_V+92)& (0+255),w,b	;volatile
  4709  0026F0  A4D8               	btfss	status,2,c
  4710  0026F2  D00C               	goto	l8945
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;gemsecs.c: 76:    secs_send((uint8_t*) & H27[0], sizeof(header27), 1, V.uart);
  4714  0026F4  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4715  0026F6  6EE6               	movwf	postinc1,c
  4716  0026F8  0E01               	movlw	1
  4717  0026FA  6EE6               	movwf	postinc1,c
  4718  0026FC  0E1E               	movlw	30
  4719  0026FE  6EE6               	movwf	postinc1,c
  4720  002700  0EC0               	movlw	low _H27
  4721  002702  6EE6               	movwf	postinc1,c
  4722  002704  0E02               	movlw	high _H27
  4723  002706  6EE6               	movwf	postinc1,c
  4724  002708  EC2F  F021         	call	_secs_send	;wreg free
  4725  00270C                     l8945:
  4726                           
  4727                           ;gemsecs.c: 77:   if (V.uart == 2)
  4728  00270C  0E02               	movlw	2
  4729  00270E  0100               	movlb	0	; () banked
  4730  002710  19BC               	xorwf	(_V+92)& (0+255),w,b	;volatile
  4731  002712  A4D8               	btfss	status,2,c
  4732  002714  D00C               	goto	l8949
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;gemsecs.c: 78:    secs_send((uint8_t*) & H10[0], sizeof(header10), 1, V.uart);
  4736  002716  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4737  002718  6EE6               	movwf	postinc1,c
  4738  00271A  0E01               	movlw	1
  4739  00271C  6EE6               	movwf	postinc1,c
  4740  00271E  0E0D               	movlw	13
  4741  002720  6EE6               	movwf	postinc1,c
  4742  002722  0E07               	movlw	low _H10
  4743  002724  6EE6               	movwf	postinc1,c
  4744  002726  0E01               	movlw	high _H10
  4745  002728  6EE6               	movwf	postinc1,c
  4746  00272A  EC2F  F021         	call	_secs_send	;wreg free
  4747  00272E                     l8949:
  4748                           
  4749                           ;gemsecs.c: 80:   V.error = LINK_ERROR_NONE;
  4750  00272E  0100               	movlb	0	; () banked
  4751  002730  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;gemsecs.c: 81:   *m_link = LINK_STATE_EOT;
  4755                           ;stkvar	_m_link @ sp[(-1)+-1]
  4756  002732  0EFE               	movlw	-2
  4757  002734  50E3               	movf	plusw1,w,c
  4758  002736  6ED9               	movwf	fsr2l,c
  4759  002738  6ADA               	clrf	fsr2h,c
  4760  00273A  0E02               	movlw	2
  4761  00273C  6EDF               	movwf	indf2,c
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;gemsecs.c: 82:   StartTimer(TMR_T2, 2000);
  4765  00273E  0ED0               	movlw	208
  4766  002740  6EE6               	movwf	postinc1,c
  4767  002742  0E07               	movlw	7
  4768  002744  6EE6               	movwf	postinc1,c
  4769  002746  0E02               	movlw	2
  4770  002748  6EE6               	movwf	postinc1,c
  4771  00274A  EC80  F02E         	call	_StartTimer	;wreg free
  4772                           
  4773                           ;gemsecs.c: 83:   break;
  4774  00274E  D1DE               	goto	l9095
  4775  002750                     l8955:
  4776                           
  4777                           ;gemsecs.c: 85:   if (TimerDone(TMR_T2)) {
  4778  002750  0E02               	movlw	2
  4779  002752  6EE6               	movwf	postinc1,c
  4780  002754  ECF3  F030         	call	_TimerDone	;wreg free
  4781  002758  5039               	movf	btemp,w,c
  4782  00275A  B4D8               	btfsc	status,2,c
  4783  00275C  D00D               	goto	l8961
  4784                           
  4785                           ;gemsecs.c: 86:    V.error = LINK_ERROR_T2;
  4786  00275E  0E02               	movlw	2
  4787  002760  0100               	movlb	0	; () banked
  4788  002762  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4789                           
  4790                           ;gemsecs.c: 87:    V.failed_receive = 2;
  4791  002764  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  4792  002766  0BF0               	andlw	-16
  4793  002768  0902               	iorlw	2
  4794  00276A  6FB8               	movwf	(_V+88)& (0+255),b	;volatile
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;gemsecs.c: 88:    *m_link = LINK_STATE_NAK;
  4798                           ;stkvar	_m_link @ sp[(-1)+-1]
  4799  00276C  0EFE               	movlw	-2
  4800  00276E  50E3               	movf	plusw1,w,c
  4801  002770  6ED9               	movwf	fsr2l,c
  4802  002772  6ADA               	clrf	fsr2h,c
  4803  002774  0E05               	movlw	5
  4804  002776  D1A7               	goto	L17
  4805  002778                     l8961:
  4806                           
  4807                           ;gemsecs.c: 90:    if (UART1_is_rx_ready()) {
  4808  002778  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  4809  00277C  5039               	movf	btemp,w,c
  4810  00277E  B4D8               	btfsc	status,2,c
  4811  002780  D0A5               	goto	l9009
  4812                           
  4813                           ;gemsecs.c: 91:     rxData = UART1_Read();
  4814  002782  EC61  F02E         	call	_UART1_Read	;wreg free
  4815                           
  4816                           ;stkvar	_rxData @ sp[(-1)+0]
  4817  002786  0EFF               	movlw	-1
  4818  002788  0060  F0E7  FFE3   	movff	btemp,plusw1
  4819                           
  4820                           ; BSR set to: 57
  4821                           ;gemsecs.c: 92:     if (rxData_l == 0) {
  4822  00278E  502B               	movf	m_protocol@rxData_l,w,c
  4823  002790  A4D8               	btfss	status,2,c
  4824  002792  D00C               	goto	l8973
  4825                           
  4826                           ; BSR set to: 57
  4827                           ;gemsecs.c: 93:      r_block.length = rxData;
  4828                           ;stkvar	_rxData @ sp[(-1)+0]
  4829  002794  0EFF               	movlw	-1
  4830  002796  006F FF8C  F0CA    	movff	plusw1,_r_block+12
  4831                           
  4832                           ; BSR set to: 57
  4833                           ;gemsecs.c: 94:      run_checksum(0, 1);
  4834  00279C  0E01               	movlw	1
  4835  00279E  6EE6               	movwf	postinc1,c
  4836  0027A0  0E00               	movlw	0
  4837  0027A2  6EE6               	movwf	postinc1,c
  4838  0027A4  ECBA  F02E         	call	_run_checksum	;wreg free
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;gemsecs.c: 95:      rxData_l++;
  4842  0027A8  2A2B               	incf	m_protocol@rxData_l,f,c
  4843                           
  4844                           ;gemsecs.c: 96:     } else {
  4845  0027AA  D090               	goto	l9009
  4846  0027AC                     l8973:
  4847                           
  4848                           ; BSR set to: 57
  4849                           ;gemsecs.c: 100:      if (rxData_l <= sizeof(block10))
  4850  0027AC  0E0B               	movlw	11
  4851  0027AE  602B               	cpfslt	m_protocol@rxData_l,c
  4852  0027B0  D00C               	goto	l8977
  4853                           
  4854                           ; BSR set to: 57
  4855                           ;gemsecs.c: 101:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4856                           ;stkvar	_rxData @ sp[(-1)+0]
  4857  0027B2  502B               	movf	m_protocol@rxData_l,w,c
  4858  0027B4  0820               	sublw	low (_H10+25)
  4859  0027B6  6ED9               	movwf	fsr2l,c
  4860  0027B8  0E00               	movlw	0
  4861  0027BA  A0D8               	btfss	status,0,c
  4862  0027BC  2AE8               	incf	wreg,f,c
  4863  0027BE  0801               	sublw	high (_H10+25)
  4864  0027C0  6EDA               	movwf	fsr2h,c
  4865  0027C2  0EFF               	movlw	-1
  4866  0027C4  006F FF8F FFDF     	movff	plusw1,indf2
  4867  0027CA                     l8977:
  4868                           
  4869                           ; BSR set to: 57
  4870                           ;gemsecs.c: 102:      if (rxData_l <= r_block.length)
  4871  0027CA  502B               	movf	m_protocol@rxData_l,w,c
  4872  0027CC  0100               	movlb	0	; () banked
  4873  0027CE  5DCA               	subwf	(_r_block+12)& (0+255),w,b
  4874  0027D0  A0D8               	btfss	status,0,c
  4875  0027D2  D00D               	goto	l8981
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;gemsecs.c: 103:       V.r_checksum = run_checksum(rxData, 0);
  4879  0027D4  0E00               	movlw	0
  4880  0027D6  6EE6               	movwf	postinc1,c
  4881                           
  4882                           ;stkvar	_rxData @ sp[(-2)+0]
  4883  0027D8  0EFE               	movlw	-2
  4884  0027DA  50E3               	movf	plusw1,w,c
  4885  0027DC  6EE6               	movwf	postinc1,c
  4886  0027DE  ECBA  F02E         	call	_run_checksum	;wreg free
  4887  0027E2  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  4888  0027E8  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  4889  0027EE                     l8981:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;gemsecs.c: 105:      if (rxData_l == r_block.length + 1)
  4893  0027EE  502B               	movf	m_protocol@rxData_l,w,c
  4894  0027F0  6E43               	movwf	btemp+10,c
  4895  0027F2  6A44               	clrf	btemp+11,c
  4896  0027F4  51CA               	movf	(_r_block+12)& (0+255),w,b
  4897  0027F6  6E41               	movwf	btemp+8,c
  4898  0027F8  6A42               	clrf	btemp+9,c
  4899  0027FA  0E01               	movlw	1
  4900  0027FC  2641               	addwf	btemp+8,f,c
  4901  0027FE  0E00               	movlw	0
  4902  002800  2242               	addwfc	btemp+9,f,c
  4903  002802  5043               	movf	btemp+10,w,c
  4904  002804  1841               	xorwf	btemp+8,w,c
  4905  002806  E109               	bnz	l8985
  4906  002808  5044               	movf	btemp+11,w,c
  4907  00280A  1842               	xorwf	btemp+9,w,c
  4908  00280C  A4D8               	btfss	status,2,c
  4909  00280E  D005               	goto	l8985
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;gemsecs.c: 106:       H10[1].checksum = (uint16_t) rxData << 8;
  4913                           ;stkvar	_rxData @ sp[(-1)+0]
  4914  002810  0EFF               	movlw	-1
  4915  002812  50E3               	movf	plusw1,w,c
  4916  002814  0101               	movlb	1	; () banked
  4917  002816  6F15               	movwf	(_H10+14)& (0+255),b
  4918  002818  6B14               	clrf	(_H10+13)& (0+255),b
  4919  00281A                     l8985:
  4920                           
  4921                           ;gemsecs.c: 107:      if (rxData_l == r_block.length + 2)
  4922  00281A  502B               	movf	m_protocol@rxData_l,w,c
  4923  00281C  6E43               	movwf	btemp+10,c
  4924  00281E  6A44               	clrf	btemp+11,c
  4925  002820  0100               	movlb	0	; () banked
  4926  002822  51CA               	movf	(_r_block+12)& (0+255),w,b
  4927  002824  6E41               	movwf	btemp+8,c
  4928  002826  6A42               	clrf	btemp+9,c
  4929  002828  0E02               	movlw	2
  4930  00282A  2641               	addwf	btemp+8,f,c
  4931  00282C  0E00               	movlw	0
  4932  00282E  2242               	addwfc	btemp+9,f,c
  4933  002830  5043               	movf	btemp+10,w,c
  4934  002832  1841               	xorwf	btemp+8,w,c
  4935  002834  E10A               	bnz	l8989
  4936  002836  5044               	movf	btemp+11,w,c
  4937  002838  1842               	xorwf	btemp+9,w,c
  4938  00283A  A4D8               	btfss	status,2,c
  4939  00283C  D006               	goto	l8989
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;gemsecs.c: 108:       H10[1].checksum += rxData;
  4943                           ;stkvar	_rxData @ sp[(-1)+0]
  4944  00283E  0EFF               	movlw	-1
  4945  002840  50E3               	movf	plusw1,w,c
  4946  002842  0101               	movlb	1	; () banked
  4947  002844  2714               	addwf	(_H10+13)& (0+255),f,b
  4948  002846  0E00               	movlw	0
  4949  002848  2315               	addwfc	(_H10+14)& (0+255),f,b
  4950  00284A                     l8989:
  4951                           
  4952                           ;gemsecs.c: 110:      rxData_l++;
  4953  00284A  2A2B               	incf	m_protocol@rxData_l,f,c
  4954                           
  4955                           ;gemsecs.c: 111:      if (rxData_l > (r_block.length + 2)) {
  4956  00284C  502B               	movf	m_protocol@rxData_l,w,c
  4957  00284E  6E43               	movwf	btemp+10,c
  4958  002850  6A44               	clrf	btemp+11,c
  4959  002852  0100               	movlb	0	; () banked
  4960  002854  51CA               	movf	(_r_block+12)& (0+255),w,b
  4961  002856  6E41               	movwf	btemp+8,c
  4962  002858  6A42               	clrf	btemp+9,c
  4963  00285A  0E02               	movlw	2
  4964  00285C  2641               	addwf	btemp+8,f,c
  4965  00285E  0E00               	movlw	0
  4966  002860  2242               	addwfc	btemp+9,f,c
  4967  002862  5043               	movf	btemp+10,w,c
  4968  002864  5C41               	subwf	btemp+8,w,c
  4969  002866  5042               	movf	btemp+9,w,c
  4970  002868  0A80               	xorlw	128
  4971  00286A  6E39               	movwf	btemp,c
  4972  00286C  5044               	movf	btemp+11,w,c
  4973  00286E  0A80               	xorlw	128
  4974  002870  5839               	subwfb	btemp,w,c
  4975  002872  B0D8               	btfsc	status,0,c
  4976  002874  D02B               	goto	l9009
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;gemsecs.c: 112:       if (V.r_checksum == H10[1].checksum) {
  4980  002876  0101               	movlb	1	; () banked
  4981  002878  5114               	movf	(_H10+13)& (0+255),w,b
  4982  00287A  0100               	movlb	0	; () banked
  4983  00287C  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  4984  00287E  E10E               	bnz	l8999
  4985  002880  0101               	movlb	1	; () banked
  4986  002882  5115               	movf	(_H10+14)& (0+255),w,b
  4987  002884  0100               	movlb	0	; () banked
  4988  002886  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  4989  002888  A4D8               	btfss	status,2,c
  4990  00288A  D008               	goto	l8999
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;gemsecs.c: 113:        *m_link = LINK_STATE_ACK;
  4994                           ;stkvar	_m_link @ sp[(-1)+-1]
  4995  00288C  0EFE               	movlw	-2
  4996  00288E  50E3               	movf	plusw1,w,c
  4997  002890  6ED9               	movwf	fsr2l,c
  4998  002892  6ADA               	clrf	fsr2h,c
  4999  002894  0E03               	movlw	3
  5000  002896  D019               	goto	L14
  5001  002898                     l8997:
  5002  002898  EC61  F02E         	call	_UART1_Read	;wreg free
  5003  00289C                     l8999:
  5004                           
  5005                           ;gemsecs.c: 115:        while (UART1_is_rx_ready())
  5006  00289C  EC41  F032         	call	_UART1_is_rx_ready	;wreg free
  5007  0028A0  5039               	movf	btemp,w,c
  5008  0028A2  A4D8               	btfss	status,2,c
  5009  0028A4  D7F9               	goto	l8997
  5010                           
  5011                           ;gemsecs.c: 117:        WaitMs(500);
  5012  0028A6  0EF4               	movlw	244
  5013  0028A8  6EE6               	movwf	postinc1,c
  5014  0028AA  0E01               	movlw	1
  5015  0028AC  6EE6               	movwf	postinc1,c
  5016  0028AE  EC52  F02F         	call	_WaitMs	;wreg free
  5017                           
  5018                           ;gemsecs.c: 118:        V.error = LINK_ERROR_CHECKSUM;
  5019  0028B2  0E05               	movlw	5
  5020  0028B4  0100               	movlb	0	; () banked
  5021  0028B6  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;gemsecs.c: 119:        V.failed_receive = 3;
  5025  0028B8  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  5026  0028BA  0BF0               	andlw	-16
  5027  0028BC  0903               	iorlw	3
  5028  0028BE  6FB8               	movwf	(_V+88)& (0+255),b	;volatile
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;gemsecs.c: 120:        *m_link = LINK_STATE_NAK;
  5032                           ;stkvar	_m_link @ sp[(-1)+-1]
  5033  0028C0  0EFE               	movlw	-2
  5034  0028C2  50E3               	movf	plusw1,w,c
  5035  0028C4  6ED9               	movwf	fsr2l,c
  5036  0028C6  6ADA               	clrf	fsr2h,c
  5037  0028C8  0E05               	movlw	5
  5038  0028CA                     L14:
  5039  0028CA  6EDF               	movwf	indf2,c
  5040  0028CC                     l9009:
  5041                           
  5042                           ;gemsecs.c: 126:    if (UART2_is_rx_ready()) {
  5043  0028CC  EC3D  F032         	call	_UART2_is_rx_ready	;wreg free
  5044  0028D0  5039               	movf	btemp,w,c
  5045  0028D2  B4D8               	btfsc	status,2,c
  5046  0028D4  D11B               	goto	l9095
  5047                           
  5048                           ;gemsecs.c: 127:     rxData = UART2_Read();
  5049  0028D6  EC42  F02E         	call	_UART2_Read	;wreg free
  5050                           
  5051                           ;stkvar	_rxData @ sp[(-1)+0]
  5052  0028DA  0EFF               	movlw	-1
  5053  0028DC  0060  F0E7  FFE3   	movff	btemp,plusw1
  5054                           
  5055                           ; BSR set to: 57
  5056                           ;gemsecs.c: 128:     if (rxData_l == 0) {
  5057  0028E2  502B               	movf	m_protocol@rxData_l,w,c
  5058  0028E4  A4D8               	btfss	status,2,c
  5059  0028E6  D00C               	goto	l9021
  5060                           
  5061                           ; BSR set to: 57
  5062                           ;gemsecs.c: 129:      r_block.length = rxData;
  5063                           ;stkvar	_rxData @ sp[(-1)+0]
  5064  0028E8  0EFF               	movlw	-1
  5065  0028EA  006F FF8C  F0CA    	movff	plusw1,_r_block+12
  5066                           
  5067                           ; BSR set to: 57
  5068                           ;gemsecs.c: 130:      run_checksum(0, 1);
  5069  0028F0  0E01               	movlw	1
  5070  0028F2  6EE6               	movwf	postinc1,c
  5071  0028F4  0E00               	movlw	0
  5072  0028F6  6EE6               	movwf	postinc1,c
  5073  0028F8  ECBA  F02E         	call	_run_checksum	;wreg free
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;gemsecs.c: 131:      rxData_l++;
  5077  0028FC  2A2B               	incf	m_protocol@rxData_l,f,c
  5078                           
  5079                           ;gemsecs.c: 132:     } else {
  5080  0028FE  D106               	goto	l9095
  5081  002900                     l9021:
  5082                           
  5083                           ; BSR set to: 57
  5084                           ;gemsecs.c: 136:      if (rxData_l <= sizeof(block10))
  5085  002900  0E0B               	movlw	11
  5086  002902  602B               	cpfslt	m_protocol@rxData_l,c
  5087  002904  D00C               	goto	l9025
  5088                           
  5089                           ; BSR set to: 57
  5090                           ;gemsecs.c: 137:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5091                           ;stkvar	_rxData @ sp[(-1)+0]
  5092  002906  502B               	movf	m_protocol@rxData_l,w,c
  5093  002908  0820               	sublw	low (_H10+25)
  5094  00290A  6ED9               	movwf	fsr2l,c
  5095  00290C  0E00               	movlw	0
  5096  00290E  A0D8               	btfss	status,0,c
  5097  002910  2AE8               	incf	wreg,f,c
  5098  002912  0801               	sublw	high (_H10+25)
  5099  002914  6EDA               	movwf	fsr2h,c
  5100  002916  0EFF               	movlw	-1
  5101  002918  006F FF8F FFDF     	movff	plusw1,indf2
  5102  00291E                     l9025:
  5103                           
  5104                           ; BSR set to: 57
  5105                           ;gemsecs.c: 138:      if (rxData_l <= r_block.length)
  5106  00291E  502B               	movf	m_protocol@rxData_l,w,c
  5107  002920  0100               	movlb	0	; () banked
  5108  002922  5DCA               	subwf	(_r_block+12)& (0+255),w,b
  5109  002924  A0D8               	btfss	status,0,c
  5110  002926  D00D               	goto	l9029
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;gemsecs.c: 139:       V.r_checksum = run_checksum(rxData, 0);
  5114  002928  0E00               	movlw	0
  5115  00292A  6EE6               	movwf	postinc1,c
  5116                           
  5117                           ;stkvar	_rxData @ sp[(-2)+0]
  5118  00292C  0EFE               	movlw	-2
  5119  00292E  50E3               	movf	plusw1,w,c
  5120  002930  6EE6               	movwf	postinc1,c
  5121  002932  ECBA  F02E         	call	_run_checksum	;wreg free
  5122  002936  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  5123  00293C  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  5124  002942                     l9029:
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;gemsecs.c: 141:      if (rxData_l == r_block.length + 1)
  5128  002942  502B               	movf	m_protocol@rxData_l,w,c
  5129  002944  6E43               	movwf	btemp+10,c
  5130  002946  6A44               	clrf	btemp+11,c
  5131  002948  51CA               	movf	(_r_block+12)& (0+255),w,b
  5132  00294A  6E41               	movwf	btemp+8,c
  5133  00294C  6A42               	clrf	btemp+9,c
  5134  00294E  0E01               	movlw	1
  5135  002950  2641               	addwf	btemp+8,f,c
  5136  002952  0E00               	movlw	0
  5137  002954  2242               	addwfc	btemp+9,f,c
  5138  002956  5043               	movf	btemp+10,w,c
  5139  002958  1841               	xorwf	btemp+8,w,c
  5140  00295A  E109               	bnz	l9033
  5141  00295C  5044               	movf	btemp+11,w,c
  5142  00295E  1842               	xorwf	btemp+9,w,c
  5143  002960  A4D8               	btfss	status,2,c
  5144  002962  D005               	goto	l9033
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;gemsecs.c: 142:       H10[1].checksum = (uint16_t) rxData << 8;
  5148                           ;stkvar	_rxData @ sp[(-1)+0]
  5149  002964  0EFF               	movlw	-1
  5150  002966  50E3               	movf	plusw1,w,c
  5151  002968  0101               	movlb	1	; () banked
  5152  00296A  6F15               	movwf	(_H10+14)& (0+255),b
  5153  00296C  6B14               	clrf	(_H10+13)& (0+255),b
  5154  00296E                     l9033:
  5155                           
  5156                           ;gemsecs.c: 143:      if (rxData_l == r_block.length + 2)
  5157  00296E  502B               	movf	m_protocol@rxData_l,w,c
  5158  002970  6E43               	movwf	btemp+10,c
  5159  002972  6A44               	clrf	btemp+11,c
  5160  002974  0100               	movlb	0	; () banked
  5161  002976  51CA               	movf	(_r_block+12)& (0+255),w,b
  5162  002978  6E41               	movwf	btemp+8,c
  5163  00297A  6A42               	clrf	btemp+9,c
  5164  00297C  0E02               	movlw	2
  5165  00297E  2641               	addwf	btemp+8,f,c
  5166  002980  0E00               	movlw	0
  5167  002982  2242               	addwfc	btemp+9,f,c
  5168  002984  5043               	movf	btemp+10,w,c
  5169  002986  1841               	xorwf	btemp+8,w,c
  5170  002988  E10A               	bnz	l9037
  5171  00298A  5044               	movf	btemp+11,w,c
  5172  00298C  1842               	xorwf	btemp+9,w,c
  5173  00298E  A4D8               	btfss	status,2,c
  5174  002990  D006               	goto	l9037
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;gemsecs.c: 144:       H10[1].checksum += rxData;
  5178                           ;stkvar	_rxData @ sp[(-1)+0]
  5179  002992  0EFF               	movlw	-1
  5180  002994  50E3               	movf	plusw1,w,c
  5181  002996  0101               	movlb	1	; () banked
  5182  002998  2714               	addwf	(_H10+13)& (0+255),f,b
  5183  00299A  0E00               	movlw	0
  5184  00299C  2315               	addwfc	(_H10+14)& (0+255),f,b
  5185  00299E                     l9037:
  5186                           
  5187                           ;gemsecs.c: 146:      rxData_l++;
  5188  00299E  2A2B               	incf	m_protocol@rxData_l,f,c
  5189                           
  5190                           ;gemsecs.c: 147:      if (rxData_l > (r_block.length + 2)) {
  5191  0029A0  502B               	movf	m_protocol@rxData_l,w,c
  5192  0029A2  6E43               	movwf	btemp+10,c
  5193  0029A4  6A44               	clrf	btemp+11,c
  5194  0029A6  0100               	movlb	0	; () banked
  5195  0029A8  51CA               	movf	(_r_block+12)& (0+255),w,b
  5196  0029AA  6E41               	movwf	btemp+8,c
  5197  0029AC  6A42               	clrf	btemp+9,c
  5198  0029AE  0E02               	movlw	2
  5199  0029B0  2641               	addwf	btemp+8,f,c
  5200  0029B2  0E00               	movlw	0
  5201  0029B4  2242               	addwfc	btemp+9,f,c
  5202  0029B6  5043               	movf	btemp+10,w,c
  5203  0029B8  5C41               	subwf	btemp+8,w,c
  5204  0029BA  5042               	movf	btemp+9,w,c
  5205  0029BC  0A80               	xorlw	128
  5206  0029BE  6E39               	movwf	btemp,c
  5207  0029C0  5044               	movf	btemp+11,w,c
  5208  0029C2  0A80               	xorlw	128
  5209  0029C4  5839               	subwfb	btemp,w,c
  5210  0029C6  B0D8               	btfsc	status,0,c
  5211  0029C8  D0A1               	goto	l9095
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;gemsecs.c: 148:       if (V.r_checksum == H10[1].checksum) {
  5215  0029CA  0101               	movlb	1	; () banked
  5216  0029CC  5114               	movf	(_H10+13)& (0+255),w,b
  5217  0029CE  0100               	movlb	0	; () banked
  5218  0029D0  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5219  0029D2  E10E               	bnz	l9047
  5220  0029D4  0101               	movlb	1	; () banked
  5221  0029D6  5115               	movf	(_H10+14)& (0+255),w,b
  5222  0029D8  0100               	movlb	0	; () banked
  5223  0029DA  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5224  0029DC  A4D8               	btfss	status,2,c
  5225  0029DE  D008               	goto	l9047
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;gemsecs.c: 149:        *m_link = LINK_STATE_ACK;
  5229                           ;stkvar	_m_link @ sp[(-1)+-1]
  5230  0029E0  0EFE               	movlw	-2
  5231  0029E2  50E3               	movf	plusw1,w,c
  5232  0029E4  6ED9               	movwf	fsr2l,c
  5233  0029E6  6ADA               	clrf	fsr2h,c
  5234  0029E8  0E03               	movlw	3
  5235  0029EA  D06D               	goto	L17
  5236  0029EC                     l9045:
  5237  0029EC  EC42  F02E         	call	_UART2_Read	;wreg free
  5238  0029F0                     l9047:
  5239                           
  5240                           ;gemsecs.c: 151:        while (UART2_is_rx_ready())
  5241  0029F0  EC3D  F032         	call	_UART2_is_rx_ready	;wreg free
  5242  0029F4  5039               	movf	btemp,w,c
  5243  0029F6  A4D8               	btfss	status,2,c
  5244  0029F8  D7F9               	goto	l9045
  5245                           
  5246                           ;gemsecs.c: 153:        WaitMs(500);
  5247  0029FA  0EF4               	movlw	244
  5248  0029FC  6EE6               	movwf	postinc1,c
  5249  0029FE  0E01               	movlw	1
  5250  002A00  6EE6               	movwf	postinc1,c
  5251  002A02  EC52  F02F         	call	_WaitMs	;wreg free
  5252                           
  5253                           ;gemsecs.c: 154:        V.error = LINK_ERROR_CHECKSUM;
  5254  002A06  0E05               	movlw	5
  5255  002A08  0100               	movlb	0	; () banked
  5256  002A0A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;gemsecs.c: 155:        V.failed_receive = 4;
  5260  002A0C  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  5261  002A0E  0BF0               	andlw	-16
  5262  002A10  0904               	iorlw	4
  5263  002A12  D6AB               	goto	L16
  5264  002A14                     l9057:
  5265                           
  5266                           ;gemsecs.c: 165:   WaitMs(50);
  5267  002A14  0E32               	movlw	50
  5268  002A16  6EE6               	movwf	postinc1,c
  5269  002A18  0E00               	movlw	0
  5270  002A1A  6EE6               	movwf	postinc1,c
  5271  002A1C  EC52  F02F         	call	_WaitMs	;wreg free
  5272                           
  5273                           ;gemsecs.c: 167:   V.stream = H10[1].block.block.stream;
  5274  002A20  0101               	movlb	1	; () banked
  5275  002A22  511D               	movf	(_H10+22)& (0+255),w,b
  5276  002A24  0B7F               	andlw	127
  5277  002A26  0100               	movlb	0	; () banked
  5278  002A28  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;gemsecs.c: 168:   V.function = H10[1].block.block.function;
  5282  002A2A  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;gemsecs.c: 169:   V.systemb = H10[1].block.block.systemb;
  5286  002A2E  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5287  002A32  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5288  002A36  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5289  002A3A  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;gemsecs.c: 170:   V.rbit = H10[1].block.block.rbit;
  5293  002A3E  0101               	movlb	1	; () banked
  5294  002A40  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5295  002A42  D003               	bra	u5895
  5296  002A44  0100               	movlb	0	; () banked
  5297  002A46  81B7               	bsf	(_V+87)& (0+255),0,b	;volatile
  5298  002A48  D002               	bra	u5897
  5299  002A4A                     u5895:
  5300  002A4A  0100               	movlb	0	; () banked
  5301  002A4C  91B7               	bcf	(_V+87)& (0+255),0,b	;volatile
  5302  002A4E                     u5897:
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;gemsecs.c: 171:   V.wbit = H10[1].block.block.wbit;
  5306  002A4E  0101               	movlb	1	; () banked
  5307  002A50  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5308  002A52  D003               	bra	u5905
  5309  002A54  0100               	movlb	0	; () banked
  5310  002A56  83B7               	bsf	(_V+87)& (0+255),1,b	;volatile
  5311  002A58  D002               	bra	u5907
  5312  002A5A                     u5905:
  5313  002A5A  0100               	movlb	0	; () banked
  5314  002A5C  93B7               	bcf	(_V+87)& (0+255),1,b	;volatile
  5315  002A5E                     u5907:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;gemsecs.c: 172:   V.ebit = H10[1].block.block.ebit;
  5319  002A5E  0101               	movlb	1	; () banked
  5320  002A60  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5321  002A62  D003               	bra	u5915
  5322  002A64  0100               	movlb	0	; () banked
  5323  002A66  85B7               	bsf	(_V+87)& (0+255),2,b	;volatile
  5324  002A68  D002               	bra	u5917
  5325  002A6A                     u5915:
  5326  002A6A  0100               	movlb	0	; () banked
  5327  002A6C  95B7               	bcf	(_V+87)& (0+255),2,b	;volatile
  5328  002A6E                     u5917:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;gemsecs.c: 173:   V.failed_receive = 0;
  5332  002A6E  0EF0               	movlw	-16
  5333  002A70  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;gemsecs.c: 174:   V.g_state = secs_gem_state(V.stream, V.function);
  5337  002A72  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5338  002A74  6EE6               	movwf	postinc1,c
  5339  002A76  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5340  002A78  6EE6               	movwf	postinc1,c
  5341  002A7A  EC37  F028         	call	_secs_gem_state	;wreg free
  5342  002A7E  5039               	movf	btemp,w,c
  5343  002A80  0100               	movlb	0	; () banked
  5344  002A82  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;gemsecs.c: 175:   *m_link = LINK_STATE_DONE;
  5348                           ;stkvar	_m_link @ sp[(-1)+-1]
  5349  002A84  0EFE               	movlw	-2
  5350  002A86  50E3               	movf	plusw1,w,c
  5351  002A88  6ED9               	movwf	fsr2l,c
  5352  002A8A  6ADA               	clrf	fsr2h,c
  5353  002A8C  0E04               	movlw	4
  5354  002A8E  D01B               	goto	L17
  5355  002A90                     l9077:
  5356                           
  5357                           ;gemsecs.c: 178:   *m_link = LINK_STATE_ERROR;
  5358                           ;stkvar	_m_link @ sp[(-1)+-1]
  5359  002A90  0EFE               	movlw	-2
  5360  002A92  50E3               	movf	plusw1,w,c
  5361  002A94  6ED9               	movwf	fsr2l,c
  5362  002A96  6ADA               	clrf	fsr2h,c
  5363  002A98  0E06               	movlw	6
  5364  002A9A  6EDF               	movwf	indf2,c
  5365                           
  5366                           ;gemsecs.c: 179:   while ((uart1RxCount)) {
  5367  002A9C  D002               	goto	l9081
  5368  002A9E                     l9079:
  5369                           
  5370                           ;gemsecs.c: 180:    UART1_Read();
  5371  002A9E  EC61  F02E         	call	_UART1_Read	;wreg free
  5372  002AA2                     l9081:
  5373                           
  5374                           ;gemsecs.c: 179:   while ((uart1RxCount)) {
  5375  002AA2  5033               	movf	_uart1RxCount,w,c	;volatile
  5376  002AA4  B4D8               	btfsc	status,2,c
  5377  002AA6  D003               	goto	l9085
  5378  002AA8  D7FA               	goto	l9079
  5379  002AAA                     l9083:
  5380                           
  5381                           ;gemsecs.c: 183:    UART2_Read();
  5382  002AAA  EC42  F02E         	call	_UART2_Read	;wreg free
  5383  002AAE                     l9085:
  5384                           
  5385                           ;gemsecs.c: 182:   while ((uart2RxCount)) {
  5386  002AAE  502D               	movf	_uart2RxCount,w,c	;volatile
  5387  002AB0  B4D8               	btfsc	status,2,c
  5388  002AB2  D02C               	goto	l9095
  5389  002AB4  D7FA               	goto	l9083
  5390  002AB6                     l9087:
  5391                           
  5392                           ;gemsecs.c: 189:   V.failed_receive = 0;
  5393  002AB6  0EF0               	movlw	-16
  5394  002AB8  0100               	movlb	0	; () banked
  5395  002ABA  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  5396  002ABC                     l9089:
  5397                           
  5398                           ;gemsecs.c: 191:   *m_link = LINK_STATE_IDLE;
  5399                           ;stkvar	_m_link @ sp[(-1)+-1]
  5400  002ABC  0EFE               	movlw	-2
  5401  002ABE  50E3               	movf	plusw1,w,c
  5402  002AC0  6ED9               	movwf	fsr2l,c
  5403  002AC2  6ADA               	clrf	fsr2h,c
  5404  002AC4  0E00               	movlw	0
  5405  002AC6                     L17:
  5406  002AC6  6EDF               	movwf	indf2,c
  5407                           
  5408                           ;gemsecs.c: 193:   break;
  5409  002AC8  D021               	goto	l9095
  5410  002ACA                     l9093:
  5411                           
  5412                           ;stkvar	_m_link @ sp[(-1)+-1]
  5413  002ACA  0EFE               	movlw	-2
  5414  002ACC  50E3               	movf	plusw1,w,c
  5415  002ACE  6ED9               	movwf	fsr2l,c
  5416  002AD0  6ADA               	clrf	fsr2h,c
  5417  002AD2  50DF               	movf	indf2,w,c
  5418  002AD4  6E43               	movwf	btemp+10,c
  5419  002AD6  6A44               	clrf	btemp+11,c
  5420                           
  5421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5422                           ; Switch size 1, requested type "simple"
  5423                           ; Number of cases is 1, Range of values is 0 to 0
  5424                           ; switch strategies available:
  5425                           ; Name         Instructions Cycles
  5426                           ; simple_byte            4     3 (average)
  5427                           ;	Chosen strategy is simple_byte
  5428  002AD8  5044               	movf	btemp+11,w,c
  5429  002ADA  0A00               	xorlw	0	; case 0
  5430  002ADC  A4D8               	btfss	status,2,c
  5431  002ADE  D7EE               	goto	l9089
  5432                           
  5433                           ; Switch size 1, requested type "simple"
  5434                           ; Number of cases is 7, Range of values is 0 to 6
  5435                           ; switch strategies available:
  5436                           ; Name         Instructions Cycles
  5437                           ; simple_byte           22    12 (average)
  5438                           ;	Chosen strategy is simple_byte
  5439  002AE0  5043               	movf	btemp+10,w,c
  5440  002AE2  0A00               	xorlw	0	; case 0
  5441  002AE4  B4D8               	btfsc	status,2,c
  5442  002AE6  D5A9               	goto	l8909
  5443  002AE8  0A01               	xorlw	1	; case 1
  5444  002AEA  B4D8               	btfsc	status,2,c
  5445  002AEC  D5F8               	goto	l1579
  5446  002AEE  0A03               	xorlw	3	; case 2
  5447  002AF0  B4D8               	btfsc	status,2,c
  5448  002AF2  D62E               	goto	l8955
  5449  002AF4  0A01               	xorlw	1	; case 3
  5450  002AF6  B4D8               	btfsc	status,2,c
  5451  002AF8  D78D               	goto	l9057
  5452  002AFA  0A07               	xorlw	7	; case 4
  5453  002AFC  B4D8               	btfsc	status,2,c
  5454  002AFE  D7DB               	goto	l9087
  5455  002B00  0A01               	xorlw	1	; case 5
  5456  002B02  B4D8               	btfsc	status,2,c
  5457  002B04  D7C5               	goto	l9077
  5458  002B06  0A03               	xorlw	3	; case 6
  5459  002B08  A4D8               	btfss	status,2,c
  5460  002B0A  D7D8               	goto	l9089
  5461  002B0C                     l9095:
  5462                           
  5463                           ;gemsecs.c: 196:  return *m_link;
  5464                           ;stkvar	_m_link @ sp[(-1)+-1]
  5465  002B0C  0EFE               	movlw	-2
  5466  002B0E  50E3               	movf	plusw1,w,c
  5467  002B10  6ED9               	movwf	fsr2l,c
  5468  002B12  6ADA               	clrf	fsr2h,c
  5469  002B14  50DF               	movf	indf2,w,c
  5470  002B16  6E39               	movwf	btemp,c
  5471                           
  5472                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5473  002B18  52E5               	movf	postdec1,f,c
  5474  002B1A  52E5               	movf	postdec1,f,c
  5475  002B1C  0012               	return		;funcret
  5476  002B1E                     __end_of_m_protocol:
  5477                           	opt callstack 0
  5478                           
  5479 ;; *************** function _secs_send *****************
  5480 ;; Defined at:
  5481 ;;		line 422 in file "gemsecs.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  byte_block      2  [STACK] PTR unsigned char 
  5484 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5485 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5486 ;;  length          1  [STACK] unsigned char 
  5487 ;;  fake            1  [STACK] _Bool 
  5488 ;;  s_uart          1  [STACK] unsigned char 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  k               2  [STACK] PTR unsigned char 
  5491 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5492 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5493 ;;  checksum        2  [STACK] unsigned short 
  5494 ;;  i               1  [STACK] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1  [STACK] _Bool 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    4
  5511 ;; This function calls:
  5512 ;;		_UART1_Write
  5513 ;;		_UART1_is_tx_ready
  5514 ;;		_UART1_put_buffer
  5515 ;;		_UART2_Write
  5516 ;;		_UART2_is_tx_ready
  5517 ;;		_UART2_put_buffer
  5518 ;;		_block_checksum
  5519 ;; This function is called by:
  5520 ;;		_m_protocol
  5521 ;;		_r_protocol
  5522 ;;		_t_protocol
  5523 ;; This function uses a reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text6
  5527  00425E                     __ptext6:
  5528                           	opt callstack 0
  5529  00425E                     _secs_send:
  5530                           	opt callstack 0
  5531                           
  5532                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5533  00425E  0E05               	movlw	5
  5534  004260  26E1               	addwf	fsr1l,f,c
  5535  004262  0E00               	movlw	0
  5536  004264  22E2               	addwfc	fsr1h,f,c
  5537                           
  5538                           ;gemsecs.c: 422: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 423: {;gemsecs.c: 424:  uint8_t i, *k;;gemsecs.c: 425:  uint16_t ch
      +                          ecksum;;gemsecs.c: 427:  k = (uint8_t *) byte_block;
  5539                           ;stkvar	_byte_block @ sp[(-5)+-2]
  5540                           
  5541                           ;incstack = 0
  5542  004266  0EF9               	movlw	-7
  5543  004268  006F FF8C  F043    	movff	plusw1,btemp+10
  5544  00426E  0EFA               	movlw	-6
  5545  004270  006F FF8C  F044    	movff	plusw1,btemp+11
  5546                           
  5547                           ;stkvar	_k @ sp[(-5)+0]
  5548  004276  0EFC               	movlw	-4
  5549  004278  0060  F113  FFE3   	movff	btemp+11,plusw1
  5550  00427E  0EFB               	movlw	-5
  5551  004280  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5552                           
  5553                           ;gemsecs.c: 429:  ++V.ticks;
  5554  004286  0E01               	movlw	1
  5555  004288  0100               	movlb	0	; () banked
  5556  00428A  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  5557  00428C  0E00               	movlw	0
  5558  00428E  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  5559  004290  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  5560  004292  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;gemsecs.c: 430:  V.error = LINK_ERROR_NONE;
  5564  004294  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;gemsecs.c: 431:  if ((length - 3) != k[length - 1]) {
  5568                           ;stkvar	_length @ sp[(-5)+-3]
  5569  004296  0EF8               	movlw	-8
  5570  004298  50E3               	movf	plusw1,w,c
  5571  00429A  6E43               	movwf	btemp+10,c
  5572  00429C  6A44               	clrf	btemp+11,c
  5573                           
  5574                           ;stkvar	_k @ sp[(-5)+0]
  5575  00429E  0EFB               	movlw	-5
  5576  0042A0  50E3               	movf	plusw1,w,c
  5577  0042A2  2643               	addwf	btemp+10,f,c
  5578  0042A4  0EFC               	movlw	-4
  5579  0042A6  50E3               	movf	plusw1,w,c
  5580  0042A8  2244               	addwfc	btemp+11,f,c
  5581  0042AA  0EFF               	movlw	255
  5582  0042AC  2443               	addwf	btemp+10,w,c
  5583  0042AE  6ED9               	movwf	fsr2l,c
  5584  0042B0  0EFF               	movlw	255
  5585  0042B2  2044               	addwfc	btemp+11,w,c
  5586  0042B4  6EDA               	movwf	fsr2h,c
  5587  0042B6  50DF               	movf	indf2,w,c
  5588  0042B8  6E43               	movwf	btemp+10,c
  5589  0042BA  6A44               	clrf	btemp+11,c
  5590  0042BC  0EFD               	movlw	253
  5591  0042BE  6E41               	movwf	btemp+8,c
  5592  0042C0  0EFF               	movlw	255
  5593  0042C2  6E42               	movwf	btemp+9,c
  5594                           
  5595                           ;stkvar	_length @ sp[(-5)+-3]
  5596  0042C4  0EF8               	movlw	-8
  5597  0042C6  50E3               	movf	plusw1,w,c
  5598  0042C8  6E3F               	movwf	btemp+6,c
  5599  0042CA  6A40               	clrf	btemp+7,c
  5600  0042CC  5041               	movf	btemp+8,w,c
  5601  0042CE  263F               	addwf	btemp+6,f,c
  5602  0042D0  5042               	movf	btemp+9,w,c
  5603  0042D2  2240               	addwfc	btemp+7,f,c
  5604  0042D4  5043               	movf	btemp+10,w,c
  5605  0042D6  183F               	xorwf	btemp+6,w,c
  5606  0042D8  E104               	bnz	u5220
  5607  0042DA  5044               	movf	btemp+11,w,c
  5608  0042DC  1840               	xorwf	btemp+7,w,c
  5609  0042DE  B4D8               	btfsc	status,2,c
  5610  0042E0  D003               	goto	l8487
  5611  0042E2                     u5220:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;gemsecs.c: 432:   V.error = LINK_ERROR_SEND;
  5615  0042E2  0E08               	movlw	8
  5616  0042E4  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5617  0042E6  D0EA               	goto	l1709
  5618  0042E8                     l8487:
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;gemsecs.c: 441:  checksum = block_checksum(&k[2], length - 3);
  5622  0042E8  0EFD               	movlw	253
  5623  0042EA  6E43               	movwf	btemp+10,c
  5624  0042EC  0EFF               	movlw	255
  5625  0042EE  6E44               	movwf	btemp+11,c
  5626                           
  5627                           ;stkvar	_length @ sp[(-5)+-3]
  5628  0042F0  0EF8               	movlw	-8
  5629  0042F2  50E3               	movf	plusw1,w,c
  5630  0042F4  6E41               	movwf	btemp+8,c
  5631  0042F6  6A42               	clrf	btemp+9,c
  5632  0042F8  5043               	movf	btemp+10,w,c
  5633  0042FA  2641               	addwf	btemp+8,f,c
  5634  0042FC  5044               	movf	btemp+11,w,c
  5635  0042FE  2242               	addwfc	btemp+9,f,c
  5636  004300  0060  F107  FFE6   	movff	btemp+8,postinc1
  5637  004306  0060  F10B  FFE6   	movff	btemp+9,postinc1
  5638                           
  5639                           ;stkvar	_k @ sp[(-7)+0]
  5640  00430C  0EF9               	movlw	-7
  5641  00430E  50E3               	movf	plusw1,w,c
  5642  004310  0F02               	addlw	2
  5643  004312  6E43               	movwf	btemp+10,c
  5644  004314  0EFA               	movlw	-6
  5645  004316  006F FF8C  F044    	movff	plusw1,btemp+11
  5646  00431C  0E00               	movlw	0
  5647  00431E  2244               	addwfc	btemp+11,f,c
  5648  004320  0060  F10F  FFE6   	movff	btemp+10,postinc1
  5649  004326  0060  F113  FFE6   	movff	btemp+11,postinc1
  5650  00432C  EC66  F027         	call	_block_checksum	;wreg free
  5651                           
  5652                           ;stkvar	_checksum @ sp[(-5)+2]
  5653  004330  0EFD               	movlw	-3
  5654  004332  0060  F0E7  FFE3   	movff	btemp,plusw1
  5655  004338  0EFE               	movlw	-2
  5656  00433A  0060  F0EB  FFE3   	movff	btemp+1,plusw1
  5657                           
  5658                           ;gemsecs.c: 442:  k[0] = checksum & 0xff;
  5659                           ;stkvar	_checksum @ sp[(-5)+2]
  5660                           ;stkvar	_k @ sp[(-5)+0]
  5661  004340  0EFB               	movlw	-5
  5662  004342  006F FF8F FFD9     	movff	plusw1,fsr2l
  5663  004348  0EFC               	movlw	-4
  5664  00434A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5665  004350  0EFD               	movlw	-3
  5666  004352  006F FF8F FFDF     	movff	plusw1,indf2
  5667                           
  5668                           ;gemsecs.c: 443:  k[1] = (checksum >> 8)&0xff;
  5669                           ;stkvar	_checksum @ sp[(-5)+2]
  5670  004358  0EFE               	movlw	254
  5671  00435A  24E1               	addwf	fsr1l,w,c
  5672  00435C  6ED9               	movwf	fsr2l,c
  5673  00435E  0EFF               	movlw	255
  5674  004360  20E2               	addwfc	fsr1h,w,c
  5675  004362  6EDA               	movwf	fsr2h,c
  5676                           
  5677                           ;stkvar	_k @ sp[(-5)+0]
  5678  004364  0EFB               	movlw	-5
  5679  004366  006F FF8C  F043    	movff	plusw1,btemp+10
  5680  00436C  0EFC               	movlw	-4
  5681  00436E  006F FF8C  F044    	movff	plusw1,btemp+11
  5682  004374  0E01               	movlw	1
  5683  004376  2443               	addwf	btemp+10,w,c
  5684  004378  6EE9               	movwf	fsr0l,c
  5685  00437A  0E00               	movlw	0
  5686  00437C  2044               	addwfc	btemp+11,w,c
  5687  00437E  6EEA               	movwf	fsr0h,c
  5688  004380  006F FF7F FFEF     	movff	indf2,indf0
  5689                           
  5690                           ;gemsecs.c: 444:  V.t_checksum = checksum;
  5691                           ;stkvar	_checksum @ sp[(-5)+2]
  5692  004386  0EFD               	movlw	-3
  5693  004388  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  5694  00438E  0EFE               	movlw	-2
  5695  004390  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  5696                           
  5697                           ;gemsecs.c: 446:  switch (s_uart) {
  5698  004396  D082               	goto	l8533
  5699  004398                     l8495:
  5700  004398  EC35  F032         	call	_UART2_is_tx_ready	;wreg free
  5701  00439C  0E3F               	movlw	63
  5702  00439E  6439               	cpfsgt	btemp,c
  5703  0043A0  D7FB               	goto	l8495
  5704                           
  5705                           ;gemsecs.c: 449:   for (i = length; i > 0; i--) {
  5706                           ;stkvar	_length @ sp[(-5)+-3]
  5707                           ;stkvar	_i @ sp[(-5)+4]
  5708  0043A2  0EF8               	movlw	-8
  5709  0043A4  006F FF8C  F039    	movff	plusw1,btemp
  5710  0043AA  0EFF               	movlw	-1
  5711  0043AC  0060  F0E7  FFE3   	movff	btemp,plusw1
  5712  0043B2                     l8499:
  5713                           
  5714                           ;stkvar	_i @ sp[(-5)+4]
  5715  0043B2  0EFF               	movlw	-1
  5716  0043B4  50E3               	movf	plusw1,w,c
  5717  0043B6  B4D8               	btfsc	status,2,c
  5718  0043B8  D081               	goto	l1709
  5719                           
  5720                           ;gemsecs.c: 450:    if (fake) {
  5721                           ;stkvar	_fake @ sp[(-5)+-4]
  5722  0043BA  0EF7               	movlw	-9
  5723  0043BC  50E3               	movf	plusw1,w,c
  5724  0043BE  B4D8               	btfsc	status,2,c
  5725  0043C0  D015               	goto	l8507
  5726                           
  5727                           ;gemsecs.c: 451:     UART2_put_buffer(k[i - 1]);
  5728                           ;stkvar	_i @ sp[(-5)+4]
  5729  0043C2  0EFF               	movlw	-1
  5730  0043C4  50E3               	movf	plusw1,w,c
  5731  0043C6  6E43               	movwf	btemp+10,c
  5732  0043C8  6A44               	clrf	btemp+11,c
  5733                           
  5734                           ;stkvar	_k @ sp[(-5)+0]
  5735  0043CA  0EFB               	movlw	-5
  5736  0043CC  50E3               	movf	plusw1,w,c
  5737  0043CE  2643               	addwf	btemp+10,f,c
  5738  0043D0  0EFC               	movlw	-4
  5739  0043D2  50E3               	movf	plusw1,w,c
  5740  0043D4  2244               	addwfc	btemp+11,f,c
  5741  0043D6  0EFF               	movlw	255
  5742  0043D8  2443               	addwf	btemp+10,w,c
  5743  0043DA  6ED9               	movwf	fsr2l,c
  5744  0043DC  0EFF               	movlw	255
  5745  0043DE  2044               	addwfc	btemp+11,w,c
  5746  0043E0  6EDA               	movwf	fsr2h,c
  5747  0043E2  50DF               	movf	indf2,w,c
  5748  0043E4  6EE6               	movwf	postinc1,c
  5749  0043E6  EC28  F02F         	call	_UART2_put_buffer	;wreg free
  5750                           
  5751                           ;gemsecs.c: 452:    } else {
  5752  0043EA  D014               	goto	l8509
  5753  0043EC                     l8507:
  5754                           
  5755                           ;gemsecs.c: 454:     UART2_Write(k[i - 1]);
  5756                           ;stkvar	_i @ sp[(-5)+4]
  5757  0043EC  0EFF               	movlw	-1
  5758  0043EE  50E3               	movf	plusw1,w,c
  5759  0043F0  6E43               	movwf	btemp+10,c
  5760  0043F2  6A44               	clrf	btemp+11,c
  5761                           
  5762                           ;stkvar	_k @ sp[(-5)+0]
  5763  0043F4  0EFB               	movlw	-5
  5764  0043F6  50E3               	movf	plusw1,w,c
  5765  0043F8  2643               	addwf	btemp+10,f,c
  5766  0043FA  0EFC               	movlw	-4
  5767  0043FC  50E3               	movf	plusw1,w,c
  5768  0043FE  2244               	addwfc	btemp+11,f,c
  5769  004400  0EFF               	movlw	255
  5770  004402  2443               	addwf	btemp+10,w,c
  5771  004404  6ED9               	movwf	fsr2l,c
  5772  004406  0EFF               	movlw	255
  5773  004408  2044               	addwfc	btemp+11,w,c
  5774  00440A  6EDA               	movwf	fsr2h,c
  5775  00440C  50DF               	movf	indf2,w,c
  5776  00440E  6EE6               	movwf	postinc1,c
  5777  004410  EC04  F02E         	call	_UART2_Write	;wreg free
  5778  004414                     l8509:
  5779                           
  5780                           ; BSR set to: 57
  5781                           ;gemsecs.c: 456:   }
  5782                           ;stkvar	_i @ sp[(-5)+4]
  5783  004414  0EFF               	movlw	-1
  5784  004416  06E3               	decf	plusw1,f,c
  5785  004418  D7CC               	goto	l8499
  5786  00441A                     l8513:
  5787  00441A  EC39  F032         	call	_UART1_is_tx_ready	;wreg free
  5788  00441E  0E3F               	movlw	63
  5789  004420  6439               	cpfsgt	btemp,c
  5790  004422  D7FB               	goto	l8513
  5791                           
  5792                           ;gemsecs.c: 461:   for (i = length; i > 0; i--) {
  5793                           ;stkvar	_length @ sp[(-5)+-3]
  5794                           ;stkvar	_i @ sp[(-5)+4]
  5795  004424  0EF8               	movlw	-8
  5796  004426  006F FF8C  F039    	movff	plusw1,btemp
  5797  00442C  0EFF               	movlw	-1
  5798  00442E  0060  F0E7  FFE3   	movff	btemp,plusw1
  5799  004434                     l8517:
  5800                           
  5801                           ;stkvar	_i @ sp[(-5)+4]
  5802  004434  0EFF               	movlw	-1
  5803  004436  50E3               	movf	plusw1,w,c
  5804  004438  B4D8               	btfsc	status,2,c
  5805  00443A  D040               	goto	l1709
  5806                           
  5807                           ;gemsecs.c: 462:    if (fake) {
  5808                           ;stkvar	_fake @ sp[(-5)+-4]
  5809  00443C  0EF7               	movlw	-9
  5810  00443E  50E3               	movf	plusw1,w,c
  5811  004440  B4D8               	btfsc	status,2,c
  5812  004442  D015               	goto	l8525
  5813                           
  5814                           ;gemsecs.c: 463:     UART1_put_buffer(k[i - 1]);
  5815                           ;stkvar	_i @ sp[(-5)+4]
  5816  004444  0EFF               	movlw	-1
  5817  004446  50E3               	movf	plusw1,w,c
  5818  004448  6E43               	movwf	btemp+10,c
  5819  00444A  6A44               	clrf	btemp+11,c
  5820                           
  5821                           ;stkvar	_k @ sp[(-5)+0]
  5822  00444C  0EFB               	movlw	-5
  5823  00444E  50E3               	movf	plusw1,w,c
  5824  004450  2643               	addwf	btemp+10,f,c
  5825  004452  0EFC               	movlw	-4
  5826  004454  50E3               	movf	plusw1,w,c
  5827  004456  2244               	addwfc	btemp+11,f,c
  5828  004458  0EFF               	movlw	255
  5829  00445A  2443               	addwf	btemp+10,w,c
  5830  00445C  6ED9               	movwf	fsr2l,c
  5831  00445E  0EFF               	movlw	255
  5832  004460  2044               	addwfc	btemp+11,w,c
  5833  004462  6EDA               	movwf	fsr2h,c
  5834  004464  50DF               	movf	indf2,w,c
  5835  004466  6EE6               	movwf	postinc1,c
  5836  004468  EC3D  F02F         	call	_UART1_put_buffer	;wreg free
  5837                           
  5838                           ;gemsecs.c: 464:    } else {
  5839  00446C  D014               	goto	l8527
  5840  00446E                     l8525:
  5841                           
  5842                           ;gemsecs.c: 466:     UART1_Write(k[i - 1]);
  5843                           ;stkvar	_i @ sp[(-5)+4]
  5844  00446E  0EFF               	movlw	-1
  5845  004470  50E3               	movf	plusw1,w,c
  5846  004472  6E43               	movwf	btemp+10,c
  5847  004474  6A44               	clrf	btemp+11,c
  5848                           
  5849                           ;stkvar	_k @ sp[(-5)+0]
  5850  004476  0EFB               	movlw	-5
  5851  004478  50E3               	movf	plusw1,w,c
  5852  00447A  2643               	addwf	btemp+10,f,c
  5853  00447C  0EFC               	movlw	-4
  5854  00447E  50E3               	movf	plusw1,w,c
  5855  004480  2244               	addwfc	btemp+11,f,c
  5856  004482  0EFF               	movlw	255
  5857  004484  2443               	addwf	btemp+10,w,c
  5858  004486  6ED9               	movwf	fsr2l,c
  5859  004488  0EFF               	movlw	255
  5860  00448A  2044               	addwfc	btemp+11,w,c
  5861  00448C  6EDA               	movwf	fsr2h,c
  5862  00448E  50DF               	movf	indf2,w,c
  5863  004490  6EE6               	movwf	postinc1,c
  5864  004492  EC23  F02E         	call	_UART1_Write	;wreg free
  5865  004496                     l8527:
  5866                           
  5867                           ; BSR set to: 57
  5868                           ;gemsecs.c: 468:   }
  5869                           ;stkvar	_i @ sp[(-5)+4]
  5870  004496  0EFF               	movlw	-1
  5871  004498  06E3               	decf	plusw1,f,c
  5872  00449A  D7CC               	goto	l8517
  5873  00449C                     l8533:
  5874                           
  5875                           ;stkvar	_s_uart @ sp[(-5)+-5]
  5876  00449C  0EF6               	movlw	-10
  5877  00449E  50E3               	movf	plusw1,w,c
  5878  0044A0  6E43               	movwf	btemp+10,c
  5879  0044A2  6A44               	clrf	btemp+11,c
  5880                           
  5881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5882                           ; Switch size 1, requested type "simple"
  5883                           ; Number of cases is 1, Range of values is 0 to 0
  5884                           ; switch strategies available:
  5885                           ; Name         Instructions Cycles
  5886                           ; simple_byte            4     3 (average)
  5887                           ;	Chosen strategy is simple_byte
  5888  0044A4  5044               	movf	btemp+11,w,c
  5889  0044A6  0A00               	xorlw	0	; case 0
  5890  0044A8  A4D8               	btfss	status,2,c
  5891  0044AA  D7B7               	goto	l8513
  5892                           
  5893                           ; Switch size 1, requested type "simple"
  5894                           ; Number of cases is 2, Range of values is 1 to 2
  5895                           ; switch strategies available:
  5896                           ; Name         Instructions Cycles
  5897                           ; simple_byte            7     4 (average)
  5898                           ;	Chosen strategy is simple_byte
  5899  0044AC  5043               	movf	btemp+10,w,c
  5900  0044AE  0A01               	xorlw	1	; case 1
  5901  0044B0  B4D8               	btfsc	status,2,c
  5902  0044B2  D7B3               	goto	l8513
  5903  0044B4  0A03               	xorlw	3	; case 2
  5904  0044B6  B4D8               	btfsc	status,2,c
  5905  0044B8  D76F               	goto	l8495
  5906  0044BA  D7AF               	goto	l8513
  5907  0044BC                     l1709:
  5908                           
  5909                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  5910  0044BC  0EF6               	movlw	246
  5911  0044BE  26E1               	addwf	fsr1l,f,c
  5912  0044C0  0EFF               	movlw	255
  5913  0044C2  22E2               	addwfc	fsr1h,f,c
  5914  0044C4  0012               	return		;funcret
  5915  0044C6                     __end_of_secs_send:
  5916                           	opt callstack 0
  5917                           
  5918 ;; *************** function _block_checksum *****************
  5919 ;; Defined at:
  5920 ;;		line 18 in file "gemsecs.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  byte_block      2  [STACK] PTR unsigned char 
  5923 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5924 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5925 ;;  byte_count      2  [STACK] unsigned short 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  i               2  [STACK] unsigned short 
  5928 ;;  sum             2  [STACK] unsigned short 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  2  [STACK] unsigned short 
  5931 ;; Registers used:
  5932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  5933 ;; Tracked objects:
  5934 ;;		On entry : 3F/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5942 ;;Total ram usage:        0 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    3
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_secs_send
  5949 ;; This function uses a reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text7
  5953  004ECC                     __ptext7:
  5954                           	opt callstack 0
  5955  004ECC                     _block_checksum:
  5956                           	opt callstack 0
  5957                           
  5958                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5959  004ECC  52E6               	movf	postinc1,f,c
  5960  004ECE  52E6               	movf	postinc1,f,c
  5961  004ED0  52E6               	movf	postinc1,f,c
  5962  004ED2  52E6               	movf	postinc1,f,c
  5963                           
  5964                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  5965                           ;stkvar	_sum @ sp[(-4)+2]
  5966                           
  5967                           ;incstack = 0
  5968  004ED4  0EFE               	movlw	-2
  5969  004ED6  6AE3               	clrf	plusw1,c
  5970  004ED8  0EFF               	movlw	-1
  5971  004EDA  6AE3               	clrf	plusw1,c
  5972                           
  5973                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  5974                           ;stkvar	_i @ sp[(-4)+0]
  5975  004EDC  0EFC               	movlw	-4
  5976  004EDE  6AE3               	clrf	plusw1,c
  5977  004EE0  0EFD               	movlw	-3
  5978  004EE2  6AE3               	clrf	plusw1,c
  5979  004EE4  D039               	goto	l8411
  5980  004EE6                     l8407:
  5981                           
  5982                           ;gemsecs.c: 23:   sum += byte_block[i];
  5983                           ;stkvar	_i @ sp[(-4)+0]
  5984  004EE6  0EFC               	movlw	-4
  5985  004EE8  006F FF8C  F043    	movff	plusw1,btemp+10
  5986  004EEE  0EFD               	movlw	-3
  5987  004EF0  006F FF8C  F044    	movff	plusw1,btemp+11
  5988                           
  5989                           ;stkvar	_byte_block @ sp[(-4)+-2]
  5990  004EF6  0EFA               	movlw	-6
  5991  004EF8  006F FF8C  F041    	movff	plusw1,btemp+8
  5992  004EFE  0EFB               	movlw	-5
  5993  004F00  006F FF8C  F042    	movff	plusw1,btemp+9
  5994  004F06  5043               	movf	btemp+10,w,c
  5995  004F08  2441               	addwf	btemp+8,w,c
  5996  004F0A  6ED9               	movwf	fsr2l,c
  5997  004F0C  5044               	movf	btemp+11,w,c
  5998  004F0E  2042               	addwfc	btemp+9,w,c
  5999  004F10  6EDA               	movwf	fsr2h,c
  6000  004F12  50DF               	movf	indf2,w,c
  6001  004F14  6E44               	movwf	btemp+11,c
  6002                           
  6003                           ;stkvar	_sum @ sp[(-4)+2]
  6004  004F16  0EFE               	movlw	-2
  6005  004F18  50E3               	movf	plusw1,w,c
  6006  004F1A  2444               	addwf	btemp+11,w,c
  6007  004F1C  6E39               	movwf	btemp,c
  6008  004F1E  0EFE               	movlw	-2
  6009  004F20  0060  F0E7  FFE3   	movff	btemp,plusw1
  6010  004F26  6A39               	clrf	btemp,c
  6011  004F28  0EFF               	movlw	-1
  6012  004F2A  50E3               	movf	plusw1,w,c
  6013  004F2C  2239               	addwfc	btemp,f,c
  6014  004F2E  0EFF               	movlw	-1
  6015  004F30  0060  F0E7  FFE3   	movff	btemp,plusw1
  6016                           
  6017                           ;gemsecs.c: 24:  }
  6018                           ;stkvar	_i @ sp[(-4)+0]
  6019  004F36  0EFC               	movlw	-4
  6020  004F38  50E3               	movf	plusw1,w,c
  6021  004F3A  0F01               	addlw	1
  6022  004F3C  6E39               	movwf	btemp,c
  6023  004F3E  0EFC               	movlw	-4
  6024  004F40  0060  F0E7  FFE3   	movff	btemp,plusw1
  6025  004F46  6A39               	clrf	btemp,c
  6026  004F48  0EFD               	movlw	-3
  6027  004F4A  50E3               	movf	plusw1,w,c
  6028  004F4C  2039               	addwfc	btemp,w,c
  6029  004F4E  6E39               	movwf	btemp,c
  6030  004F50  0EFD               	movlw	-3
  6031  004F52  0060  F0E7  FFE3   	movff	btemp,plusw1
  6032  004F58                     l8411:
  6033                           
  6034                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6035  004F58  0EF8               	movlw	-8
  6036  004F5A  006F FF8C  F043    	movff	plusw1,btemp+10
  6037  004F60  0EF9               	movlw	-7
  6038  004F62  006F FF8C  F044    	movff	plusw1,btemp+11
  6039                           
  6040                           ;stkvar	_i @ sp[(-4)+0]
  6041  004F68  0EFC               	movlw	-4
  6042  004F6A  006F FF8C  F041    	movff	plusw1,btemp+8
  6043  004F70  0EFD               	movlw	-3
  6044  004F72  006F FF8C  F042    	movff	plusw1,btemp+9
  6045  004F78  5043               	movf	btemp+10,w,c
  6046  004F7A  5C41               	subwf	btemp+8,w,c
  6047  004F7C  5044               	movf	btemp+11,w,c
  6048  004F7E  5842               	subwfb	btemp+9,w,c
  6049  004F80  A0D8               	btfss	status,0,c
  6050  004F82  D7B1               	goto	l8407
  6051                           
  6052                           ;gemsecs.c: 25:  return sum;
  6053                           ;stkvar	_sum @ sp[(-4)+2]
  6054  004F84  0EFE               	movlw	-2
  6055  004F86  006F FF8C  F039    	movff	plusw1,btemp
  6056  004F8C  0EFF               	movlw	-1
  6057  004F8E  006F FF8C  F03A    	movff	plusw1,btemp+1
  6058                           
  6059                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6060  004F94  0EF8               	movlw	248
  6061  004F96  26E1               	addwf	fsr1l,f,c
  6062  004F98  0EFF               	movlw	255
  6063  004F9A  22E2               	addwfc	fsr1h,f,c
  6064  004F9C  0012               	return		;funcret
  6065  004F9E                     __end_of_block_checksum:
  6066                           	opt callstack 0
  6067                           
  6068 ;; *************** function _UART2_put_buffer *****************
  6069 ;; Defined at:
  6070 ;;		line 257 in file "mcc_generated_files/uart2.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  bufData         1  [STACK] unsigned char 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1  [STACK] void 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/3B
  6081 ;;		On exit  : 3F/39
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    3
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_main
  6095 ;;		_secs_send
  6096 ;; This function uses a reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text8
  6100  005E50                     __ptext8:
  6101                           	opt callstack 0
  6102  005E50                     _UART2_put_buffer:
  6103                           	opt callstack 25
  6104                           
  6105                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  6106                           
  6107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6108                           ;incstack = 0
  6109  005E50  0139               	movlb	57	; () banked
  6110  005E52  9596               	bcf	150,2,b	;volatile
  6111                           
  6112                           ; BSR set to: 57
  6113                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  6114                           ;stkvar	_bufData @ sp[(0)+-1]
  6115  005E54  0E00               	movlw	low _uart2RxBuffer
  6116  005E56  242F               	addwf	_uart2RxHead,w,c	;volatile
  6117  005E58  6ED9               	movwf	fsr2l,c
  6118  005E5A  6ADA               	clrf	fsr2h,c
  6119  005E5C  0E02               	movlw	high _uart2RxBuffer
  6120  005E5E  22DA               	addwfc	fsr2h,f,c
  6121  005E60  0EFF               	movlw	-1
  6122  005E62  006F FF8F FFDF     	movff	plusw1,indf2
  6123                           
  6124                           ; BSR set to: 57
  6125  005E68  2A2F               	incf	_uart2RxHead,f,c	;volatile
  6126                           
  6127                           ; BSR set to: 57
  6128                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  6129  005E6A  0E3F               	movlw	63
  6130  005E6C  642F               	cpfsgt	_uart2RxHead,c
  6131  005E6E  D001               	goto	l5837
  6132                           
  6133                           ; BSR set to: 57
  6134                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  6135  005E70  6A2F               	clrf	_uart2RxHead,c	;volatile
  6136  005E72                     l5837:
  6137                           
  6138                           ; BSR set to: 57
  6139                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  6140  005E72  2A2D               	incf	_uart2RxCount,f,c	;volatile
  6141                           
  6142                           ; BSR set to: 57
  6143                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  6144  005E74  8596               	bsf	150,2,b	;volatile
  6145                           
  6146                           ; BSR set to: 57
  6147                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6148  005E76  52E5               	movf	postdec1,f,c
  6149  005E78  0012               	return		;funcret
  6150  005E7A                     __end_of_UART2_put_buffer:
  6151                           	opt callstack 0
  6152                           
  6153 ;; *************** function _UART2_is_tx_ready *****************
  6154 ;; Defined at:
  6155 ;;		line 142 in file "mcc_generated_files/uart2.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1  [STACK] unsigned char 
  6162 ;; Registers used:
  6163 ;;		btemp
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    3
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_secs_send
  6180 ;; This function uses a reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text9
  6184  00646A                     __ptext9:
  6185                           	opt callstack 0
  6186  00646A                     _UART2_is_tx_ready:
  6187                           	opt callstack 25
  6188                           
  6189                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  6190                           
  6191                           ; BSR set to: 57
  6192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6193                           ;incstack = 0
  6194  00646A  0060  F0C0  F039   	movff	_uart2TxBufferRemaining,btemp	;volatile
  6195                           
  6196                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6197  006470  0012               	return		;funcret
  6198  006472                     __end_of_UART2_is_tx_ready:
  6199                           	opt callstack 0
  6200                           
  6201 ;; *************** function _UART2_Write *****************
  6202 ;; Defined at:
  6203 ;;		line 172 in file "mcc_generated_files/uart2.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  txData          1  [STACK] unsigned char 
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;		None
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1  [STACK] void 
  6210 ;; Registers used:
  6211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 3F/39
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6221 ;;Total ram usage:        0 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    3
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_secs_send
  6228 ;; This function uses a reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text10
  6232  005C08                     __ptext10:
  6233                           	opt callstack 0
  6234  005C08                     _UART2_Write:
  6235                           	opt callstack 25
  6236                           
  6237                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6238                           
  6239                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6240                           
  6241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6242                           ;incstack = 0
  6243  005C08  5030               	movf	_uart2TxBufferRemaining,w,c	;volatile
  6244  005C0A  B4D8               	btfsc	status,2,c
  6245  005C0C  D7FD               	goto	_UART2_Write
  6246                           
  6247                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  6248  005C0E  0139               	movlb	57	; () banked
  6249  005C10  B796               	btfsc	150,3,b	;volatile
  6250  005C12  D005               	goto	l699
  6251                           
  6252                           ; BSR set to: 57
  6253                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  6254                           ;stkvar	_txData @ sp[(0)+-1]
  6255  005C14  0EFF               	movlw	-1
  6256  005C16  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  6257                           
  6258                           ;mcc_generated_files/uart2.c: 181:     }
  6259  005C1C  D011               	goto	l5825
  6260  005C1E                     l699:
  6261                           
  6262                           ; BSR set to: 57
  6263                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  6264  005C1E  9796               	bcf	150,3,b	;volatile
  6265                           
  6266                           ; BSR set to: 57
  6267                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  6268                           ;stkvar	_txData @ sp[(0)+-1]
  6269  005C20  0E00               	movlw	low _uart2TxBuffer
  6270  005C22  2432               	addwf	_uart2TxHead,w,c	;volatile
  6271  005C24  6ED9               	movwf	fsr2l,c
  6272  005C26  6ADA               	clrf	fsr2h,c
  6273  005C28  0E03               	movlw	high _uart2TxBuffer
  6274  005C2A  22DA               	addwfc	fsr2h,f,c
  6275  005C2C  0EFF               	movlw	-1
  6276  005C2E  006F FF8F FFDF     	movff	plusw1,indf2
  6277                           
  6278                           ; BSR set to: 57
  6279  005C34  2A32               	incf	_uart2TxHead,f,c	;volatile
  6280                           
  6281                           ; BSR set to: 57
  6282                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  6283  005C36  0E3F               	movlw	63
  6284  005C38  6432               	cpfsgt	_uart2TxHead,c
  6285  005C3A  D001               	goto	l5823
  6286                           
  6287                           ; BSR set to: 57
  6288                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  6289  005C3C  6A32               	clrf	_uart2TxHead,c	;volatile
  6290  005C3E                     l5823:
  6291                           
  6292                           ; BSR set to: 57
  6293                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  6294  005C3E  0630               	decf	_uart2TxBufferRemaining,f,c	;volatile
  6295  005C40                     l5825:
  6296                           
  6297                           ; BSR set to: 57
  6298                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  6299  005C40  8796               	bsf	150,3,b	;volatile
  6300                           
  6301                           ; BSR set to: 57
  6302                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6303  005C42  52E5               	movf	postdec1,f,c
  6304  005C44  0012               	return		;funcret
  6305  005C46                     __end_of_UART2_Write:
  6306                           	opt callstack 0
  6307                           
  6308 ;; *************** function _UART1_put_buffer *****************
  6309 ;; Defined at:
  6310 ;;		line 250 in file "mcc_generated_files/uart1.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  bufData         1  [STACK] unsigned char 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  1  [STACK] void 
  6317 ;; Registers used:
  6318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 3F/39
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6328 ;;Total ram usage:        0 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    3
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_main
  6335 ;;		_t_protocol
  6336 ;;		_secs_send
  6337 ;; This function uses a reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text11
  6341  005E7A                     __ptext11:
  6342                           	opt callstack 0
  6343  005E7A                     _UART1_put_buffer:
  6344                           	opt callstack 25
  6345                           
  6346                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  6347                           
  6348                           ; BSR set to: 57
  6349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6350                           ;incstack = 0
  6351  005E7A  0139               	movlb	57	; () banked
  6352  005E7C  9793               	bcf	147,3,b	;volatile
  6353                           
  6354                           ; BSR set to: 57
  6355                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  6356                           ;stkvar	_bufData @ sp[(0)+-1]
  6357  005E7E  0E40               	movlw	low _uart1RxBuffer
  6358  005E80  2435               	addwf	_uart1RxHead,w,c	;volatile
  6359  005E82  6ED9               	movwf	fsr2l,c
  6360  005E84  6ADA               	clrf	fsr2h,c
  6361  005E86  0E02               	movlw	high _uart1RxBuffer
  6362  005E88  22DA               	addwfc	fsr2h,f,c
  6363  005E8A  0EFF               	movlw	-1
  6364  005E8C  006F FF8F FFDF     	movff	plusw1,indf2
  6365                           
  6366                           ; BSR set to: 57
  6367  005E92  2A35               	incf	_uart1RxHead,f,c	;volatile
  6368                           
  6369                           ; BSR set to: 57
  6370                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  6371  005E94  0E3F               	movlw	63
  6372  005E96  6435               	cpfsgt	_uart1RxHead,c
  6373  005E98  D001               	goto	l5797
  6374                           
  6375                           ; BSR set to: 57
  6376                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  6377  005E9A  6A35               	clrf	_uart1RxHead,c	;volatile
  6378  005E9C                     l5797:
  6379                           
  6380                           ; BSR set to: 57
  6381                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  6382  005E9C  2A33               	incf	_uart1RxCount,f,c	;volatile
  6383                           
  6384                           ; BSR set to: 57
  6385                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  6386  005E9E  8793               	bsf	147,3,b	;volatile
  6387                           
  6388                           ; BSR set to: 57
  6389                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6390  005EA0  52E5               	movf	postdec1,f,c
  6391  005EA2  0012               	return		;funcret
  6392  005EA4                     __end_of_UART1_put_buffer:
  6393                           	opt callstack 0
  6394                           
  6395 ;; *************** function _UART1_is_tx_ready *****************
  6396 ;; Defined at:
  6397 ;;		line 151 in file "mcc_generated_files/uart1.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1  [STACK] unsigned char 
  6404 ;; Registers used:
  6405 ;;		btemp
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6415 ;;Total ram usage:        0 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    3
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_secs_send
  6422 ;; This function uses a reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text12
  6426  006472                     __ptext12:
  6427                           	opt callstack 0
  6428  006472                     _UART1_is_tx_ready:
  6429                           	opt callstack 25
  6430                           
  6431                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  6432                           
  6433                           ; BSR set to: 57
  6434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6435                           ;incstack = 0
  6436  006472  0060  F0D8  F039   	movff	_uart1TxBufferRemaining,btemp	;volatile
  6437                           
  6438                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6439  006478  0012               	return		;funcret
  6440  00647A                     __end_of_UART1_is_tx_ready:
  6441                           	opt callstack 0
  6442                           
  6443 ;; *************** function _UART1_Write *****************
  6444 ;; Defined at:
  6445 ;;		line 179 in file "mcc_generated_files/uart1.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  txData          1  [STACK] unsigned char 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1  [STACK] void 
  6452 ;; Registers used:
  6453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 3F/39
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6463 ;;Total ram usage:        0 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    3
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_r_protocol
  6470 ;;		_t_protocol
  6471 ;;		_secs_send
  6472 ;; This function uses a reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text13
  6476  005C46                     __ptext13:
  6477                           	opt callstack 0
  6478  005C46                     _UART1_Write:
  6479                           	opt callstack 25
  6480                           
  6481                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6482                           
  6483                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6484                           
  6485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6486                           ;incstack = 0
  6487  005C46  5036               	movf	_uart1TxBufferRemaining,w,c	;volatile
  6488  005C48  B4D8               	btfsc	status,2,c
  6489  005C4A  D7FD               	goto	_UART1_Write
  6490                           
  6491                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  6492  005C4C  0139               	movlb	57	; () banked
  6493  005C4E  B993               	btfsc	147,4,b	;volatile
  6494  005C50  D005               	goto	l579
  6495                           
  6496                           ; BSR set to: 57
  6497                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  6498                           ;stkvar	_txData @ sp[(0)+-1]
  6499  005C52  0EFF               	movlw	-1
  6500  005C54  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  6501                           
  6502                           ;mcc_generated_files/uart1.c: 186:  } else {
  6503  005C5A  D011               	goto	l5785
  6504  005C5C                     l579:
  6505                           
  6506                           ; BSR set to: 57
  6507                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  6508  005C5C  9993               	bcf	147,4,b	;volatile
  6509                           
  6510                           ; BSR set to: 57
  6511                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  6512                           ;stkvar	_txData @ sp[(0)+-1]
  6513  005C5E  0E80               	movlw	low _uart1TxBuffer
  6514  005C60  2438               	addwf	_uart1TxHead,w,c	;volatile
  6515  005C62  6ED9               	movwf	fsr2l,c
  6516  005C64  6ADA               	clrf	fsr2h,c
  6517  005C66  0E02               	movlw	high _uart1TxBuffer
  6518  005C68  22DA               	addwfc	fsr2h,f,c
  6519  005C6A  0EFF               	movlw	-1
  6520  005C6C  006F FF8F FFDF     	movff	plusw1,indf2
  6521                           
  6522                           ; BSR set to: 57
  6523  005C72  2A38               	incf	_uart1TxHead,f,c	;volatile
  6524                           
  6525                           ; BSR set to: 57
  6526                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  6527  005C74  0E3F               	movlw	63
  6528  005C76  6438               	cpfsgt	_uart1TxHead,c
  6529  005C78  D001               	goto	l5783
  6530                           
  6531                           ; BSR set to: 57
  6532                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  6533  005C7A  6A38               	clrf	_uart1TxHead,c	;volatile
  6534  005C7C                     l5783:
  6535                           
  6536                           ; BSR set to: 57
  6537                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  6538  005C7C  0636               	decf	_uart1TxBufferRemaining,f,c	;volatile
  6539  005C7E                     l5785:
  6540                           
  6541                           ; BSR set to: 57
  6542                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  6543  005C7E  8993               	bsf	147,4,b	;volatile
  6544                           
  6545                           ; BSR set to: 57
  6546                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6547  005C80  52E5               	movf	postdec1,f,c
  6548  005C82  0012               	return		;funcret
  6549  005C84                     __end_of_UART1_Write:
  6550                           	opt callstack 0
  6551                           
  6552 ;; *************** function _secs_gem_state *****************
  6553 ;; Defined at:
  6554 ;;		line 611 in file "gemsecs.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  stream          1  [STACK] unsigned char 
  6557 ;;  function        1  [STACK] unsigned char 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1  [STACK] enum E16164
  6562 ;; Registers used:
  6563 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  6564 ;; Tracked objects:
  6565 ;;		On entry : 3F/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    3
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_m_protocol
  6580 ;;		_r_protocol
  6581 ;; This function uses a reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text14
  6585  00506E                     __ptext14:
  6586                           	opt callstack 0
  6587  00506E                     _secs_gem_state:
  6588                           	opt callstack 26
  6589                           
  6590                           ;gemsecs.c: 611: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          612: {;gemsecs.c: 613:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 615:  sw
      +                          itch (stream) {
  6591                           
  6592                           ; BSR set to: 57
  6593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6594                           ;incstack = 0
  6595  00506E  D04D               	goto	l6467
  6596  005070                     l6423:
  6597                           
  6598                           ;gemsecs.c: 622:    block = GEM_STATE_REMOTE;
  6599  005070  0E04               	movlw	4
  6600  005072                     L19:
  6601  005072  6E27               	movwf	secs_gem_state@block,c
  6602                           
  6603                           ;gemsecs.c: 623:    V.ticker = 0;
  6604  005074  0100               	movlb	0	; () banked
  6605  005076  6BBD               	clrf	(_V+93)& (0+255),b	;volatile
  6606                           
  6607                           ;gemsecs.c: 624:    break;
  6608  005078  D05B               	goto	l6469
  6609  00507A                     l6427:
  6610                           
  6611                           ;gemsecs.c: 629:    block = GEM_STATE_COMM;
  6612  00507A  0E01               	movlw	1
  6613  00507C  6E27               	movwf	secs_gem_state@block,c
  6614                           
  6615                           ;gemsecs.c: 630:    V.ticker = 15;
  6616  00507E  0E0F               	movlw	15
  6617  005080  D041               	goto	L21
  6618  005082                     l6429:
  6619                           
  6620                           ;gemsecs.c: 636:    block = GEM_STATE_OFFLINE;
  6621  005082  0E02               	movlw	2
  6622  005084  D7F6               	goto	L19
  6623  005086                     l6433:
  6624                           
  6625                           ;gemsecs.c: 643:    block = GEM_STATE_ONLINE;
  6626  005086  0E03               	movlw	3
  6627  005088  D7F4               	goto	L19
  6628  00508A                     l6437:
  6629                           
  6630                           ;gemsecs.c: 647:    if (block == GEM_STATE_DISABLE) {
  6631  00508A  5027               	movf	secs_gem_state@block,w,c
  6632  00508C  B4D8               	btfsc	status,2,c
  6633  00508E  D7F5               	goto	l6427
  6634  005090  D04F               	goto	l6469
  6635  005092                     l6443:
  6636                           
  6637                           ;stkvar	_function @ sp[(0)+-2]
  6638  005092  0EFE               	movlw	-2
  6639  005094  50E3               	movf	plusw1,w,c
  6640  005096  6E43               	movwf	btemp+10,c
  6641  005098  6A44               	clrf	btemp+11,c
  6642                           
  6643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6644                           ; Switch size 1, requested type "simple"
  6645                           ; Number of cases is 1, Range of values is 0 to 0
  6646                           ; switch strategies available:
  6647                           ; Name         Instructions Cycles
  6648                           ; simple_byte            4     3 (average)
  6649                           ;	Chosen strategy is simple_byte
  6650  00509A  5044               	movf	btemp+11,w,c
  6651  00509C  0A00               	xorlw	0	; case 0
  6652  00509E  A4D8               	btfss	status,2,c
  6653  0050A0  D7F4               	goto	l6437
  6654                           
  6655                           ; Switch size 1, requested type "simple"
  6656                           ; Number of cases is 8, Range of values is 1 to 18
  6657                           ; switch strategies available:
  6658                           ; Name         Instructions Cycles
  6659                           ; simple_byte           25    13 (average)
  6660                           ;	Chosen strategy is simple_byte
  6661  0050A2  5043               	movf	btemp+10,w,c
  6662  0050A4  0A01               	xorlw	1	; case 1
  6663  0050A6  B4D8               	btfsc	status,2,c
  6664  0050A8  D7E3               	goto	l6423
  6665  0050AA  0A03               	xorlw	3	; case 2
  6666  0050AC  B4D8               	btfsc	status,2,c
  6667  0050AE  D7E0               	goto	l6423
  6668  0050B0  0A0F               	xorlw	15	; case 13
  6669  0050B2  B4D8               	btfsc	status,2,c
  6670  0050B4  D7E2               	goto	l6427
  6671  0050B6  0A03               	xorlw	3	; case 14
  6672  0050B8  B4D8               	btfsc	status,2,c
  6673  0050BA  D7DF               	goto	l6427
  6674  0050BC  0A01               	xorlw	1	; case 15
  6675  0050BE  B4D8               	btfsc	status,2,c
  6676  0050C0  D7E0               	goto	l6429
  6677  0050C2  0A1F               	xorlw	31	; case 16
  6678  0050C4  B4D8               	btfsc	status,2,c
  6679  0050C6  D7DD               	goto	l6429
  6680  0050C8  0A01               	xorlw	1	; case 17
  6681  0050CA  B4D8               	btfsc	status,2,c
  6682  0050CC  D7DC               	goto	l6433
  6683  0050CE  0A03               	xorlw	3	; case 18
  6684  0050D0  B4D8               	btfsc	status,2,c
  6685  0050D2  D7D9               	goto	l6433
  6686  0050D4  D7DA               	goto	l6437
  6687  0050D6                     l6445:
  6688                           
  6689                           ;gemsecs.c: 657:    block = GEM_STATE_ALARM;
  6690  0050D6  0E05               	movlw	5
  6691  0050D8  6E27               	movwf	secs_gem_state@block,c
  6692                           
  6693                           ;gemsecs.c: 658:    if (V.ticker != 45)
  6694  0050DA  0E2D               	movlw	45
  6695  0050DC  0100               	movlb	0	; () banked
  6696  0050DE  19BD               	xorwf	(_V+93)& (0+255),w,b	;volatile
  6697  0050E0  B4D8               	btfsc	status,2,c
  6698  0050E2  D026               	goto	l6469
  6699  0050E4                     u3560:
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;gemsecs.c: 659:     V.ticker = 15;
  6703  0050E4  0E0F               	movlw	15
  6704  0050E6  D00F               	goto	L20
  6705  0050E8                     l6453:
  6706                           
  6707                           ;gemsecs.c: 666:    block = GEM_STATE_ERROR;
  6708  0050E8  0E06               	movlw	6
  6709  0050EA  6E27               	movwf	secs_gem_state@block,c
  6710                           
  6711                           ;gemsecs.c: 667:    if (V.ticker != 45)
  6712  0050EC  0E2D               	movlw	45
  6713  0050EE  0100               	movlb	0	; () banked
  6714  0050F0  19BD               	xorwf	(_V+93)& (0+255),w,b	;volatile
  6715  0050F2  A4D8               	btfss	status,2,c
  6716  0050F4  D7F7               	goto	u3560
  6717  0050F6  D01C               	goto	l6469
  6718  0050F8                     l6461:
  6719                           
  6720                           ;gemsecs.c: 673:   if (block == GEM_STATE_DISABLE) {
  6721  0050F8  5027               	movf	secs_gem_state@block,w,c
  6722  0050FA  A4D8               	btfss	status,2,c
  6723  0050FC  D019               	goto	l6469
  6724                           
  6725                           ;gemsecs.c: 674:    block = GEM_STATE_COMM;
  6726  0050FE  0E01               	movlw	1
  6727  005100  6E27               	movwf	secs_gem_state@block,c
  6728                           
  6729                           ;gemsecs.c: 675:    V.ticker = 45;
  6730  005102  0E2D               	movlw	45
  6731  005104                     L21:
  6732  005104  0100               	movlb	0	; () banked
  6733  005106                     L20:
  6734  005106  6FBD               	movwf	(_V+93)& (0+255),b	;volatile
  6735  005108  D013               	goto	l6469
  6736  00510A                     l6467:
  6737                           
  6738                           ;stkvar	_stream @ sp[(0)+-1]
  6739  00510A  0EFF               	movlw	-1
  6740  00510C  50E3               	movf	plusw1,w,c
  6741  00510E  6E43               	movwf	btemp+10,c
  6742  005110  6A44               	clrf	btemp+11,c
  6743                           
  6744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6745                           ; Switch size 1, requested type "simple"
  6746                           ; Number of cases is 1, Range of values is 0 to 0
  6747                           ; switch strategies available:
  6748                           ; Name         Instructions Cycles
  6749                           ; simple_byte            4     3 (average)
  6750                           ;	Chosen strategy is simple_byte
  6751  005112  5044               	movf	btemp+11,w,c
  6752  005114  0A00               	xorlw	0	; case 0
  6753  005116  A4D8               	btfss	status,2,c
  6754  005118  D7EF               	goto	l6461
  6755                           
  6756                           ; Switch size 1, requested type "simple"
  6757                           ; Number of cases is 3, Range of values is 1 to 9
  6758                           ; switch strategies available:
  6759                           ; Name         Instructions Cycles
  6760                           ; simple_byte           10     6 (average)
  6761                           ;	Chosen strategy is simple_byte
  6762  00511A  5043               	movf	btemp+10,w,c
  6763  00511C  0A01               	xorlw	1	; case 1
  6764  00511E  B4D8               	btfsc	status,2,c
  6765  005120  D7B8               	goto	l6443
  6766  005122  0A04               	xorlw	4	; case 5
  6767  005124  B4D8               	btfsc	status,2,c
  6768  005126  D7D7               	goto	l6445
  6769  005128  0A0C               	xorlw	12	; case 9
  6770  00512A  B4D8               	btfsc	status,2,c
  6771  00512C  D7DD               	goto	l6453
  6772  00512E  D7E4               	goto	l6461
  6773  005130                     l6469:
  6774                           
  6775                           ;gemsecs.c: 680:  return(block);
  6776  005130  0060  F09C  F039   	movff	secs_gem_state@block,btemp
  6777                           
  6778                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  6779  005136  52E5               	movf	postdec1,f,c
  6780  005138  52E5               	movf	postdec1,f,c
  6781  00513A  0012               	return		;funcret
  6782  00513C                     __end_of_secs_gem_state:
  6783                           	opt callstack 0
  6784                           
  6785 ;; *************** function _run_checksum *****************
  6786 ;; Defined at:
  6787 ;;		line 31 in file "gemsecs.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  byte_block      1  [STACK] unsigned char 
  6790 ;;  clear           1  [STACK] _Bool 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  2  [STACK] unsigned short 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6797 ;; Tracked objects:
  6798 ;;		On entry : 6/39
  6799 ;;		On exit  : 3F/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    3
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_m_protocol
  6813 ;;		_r_protocol
  6814 ;; This function uses a reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text15
  6818  005D74                     __ptext15:
  6819                           	opt callstack 0
  6820  005D74                     _run_checksum:
  6821                           	opt callstack 26
  6822                           
  6823                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  6824                           ;stkvar	_clear @ sp[(0)+-2]
  6825                           
  6826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6827                           ;incstack = 0
  6828  005D74  0EFE               	movlw	-2
  6829  005D76  50E3               	movf	plusw1,w,c
  6830  005D78  B4D8               	btfsc	status,2,c
  6831  005D7A  D003               	goto	l6349
  6832                           
  6833                           ;gemsecs.c: 36:   sum = 0;
  6834  005D7C  0100               	movlb	0	; () banked
  6835  005D7E  6BF9               	clrf	run_checksum@sum& (0+255),b
  6836  005D80  6BFA               	clrf	(run_checksum@sum+1)& (0+255),b
  6837  005D82                     l6349:
  6838                           
  6839                           ;gemsecs.c: 38:  sum += byte_block;
  6840                           ;stkvar	_byte_block @ sp[(0)+-1]
  6841  005D82  0EFF               	movlw	-1
  6842  005D84  50E3               	movf	plusw1,w,c
  6843  005D86  0100               	movlb	0	; () banked
  6844  005D88  27F9               	addwf	run_checksum@sum& (0+255),f,b
  6845  005D8A  0E00               	movlw	0
  6846  005D8C  23FA               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;gemsecs.c: 39:  return sum;
  6850  005D8E  0060  F3E4  F039   	movff	run_checksum@sum,btemp
  6851  005D94  0060  F3E8  F03A   	movff	run_checksum@sum+1,btemp+1
  6852                           
  6853                           ; BSR set to: 0
  6854                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6855  005D9A  52E5               	movf	postdec1,f,c
  6856  005D9C  52E5               	movf	postdec1,f,c
  6857  005D9E  0012               	return		;funcret
  6858  005DA0                     __end_of_run_checksum:
  6859                           	opt callstack 0
  6860                           
  6861 ;; *************** function _WaitMs *****************
  6862 ;; Defined at:
  6863 ;;		line 31 in file "timers.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  numMilliseco    2  [STACK] unsigned short 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1  [STACK] void 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6881 ;;Total ram usage:        0 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    4
  6884 ;; This function calls:
  6885 ;;		_StartTimer
  6886 ;;		_TimerDone
  6887 ;; This function is called by:
  6888 ;;		_main
  6889 ;;		_m_protocol
  6890 ;;		_r_protocol
  6891 ;;		_t_protocol
  6892 ;; This function uses a reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text16
  6896  005EA4                     __ptext16:
  6897                           	opt callstack 0
  6898  005EA4                     _WaitMs:
  6899                           	opt callstack 25
  6900                           
  6901                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6902                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6903                           
  6904                           ; BSR set to: 0
  6905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6906                           ;incstack = 0
  6907  005EA4  0EFE               	movlw	-2
  6908  005EA6  006F FF8F FFE6     	movff	plusw1,postinc1
  6909  005EAC  006F FF8F FFE6     	movff	plusw1,postinc1
  6910  005EB2  0E00               	movlw	0
  6911  005EB4  6EE6               	movwf	postinc1,c
  6912  005EB6  EC80  F02E         	call	_StartTimer	;wreg free
  6913  005EBA                     l6287:
  6914                           
  6915                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6916  005EBA  0E00               	movlw	0
  6917  005EBC  6EE6               	movwf	postinc1,c
  6918  005EBE  ECF3  F030         	call	_TimerDone	;wreg free
  6919  005EC2  5039               	movf	btemp,w,c
  6920  005EC4  B4D8               	btfsc	status,2,c
  6921  005EC6  D7F9               	goto	l6287
  6922                           
  6923                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6924  005EC8  52E5               	movf	postdec1,f,c
  6925  005ECA  52E5               	movf	postdec1,f,c
  6926  005ECC  0012               	return		;funcret
  6927  005ECE                     __end_of_WaitMs:
  6928                           	opt callstack 0
  6929                           
  6930 ;; *************** function _TimerDone *****************
  6931 ;; Defined at:
  6932 ;;		line 20 in file "timers.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  timer           1  [STACK] unsigned char 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1  [STACK] _Bool 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6950 ;;Total ram usage:        0 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    3
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_m_protocol
  6957 ;;		_r_protocol
  6958 ;;		_t_protocol
  6959 ;;		_WaitMs
  6960 ;; This function uses a reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text17
  6964  0061E6                     __ptext17:
  6965                           	opt callstack 0
  6966  0061E6                     _TimerDone:
  6967                           	opt callstack 25
  6968                           
  6969                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6970                           ;stkvar	_timer @ sp[(0)+-1]
  6971                           
  6972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6973                           ;incstack = 0
  6974  0061E6  0EFF               	movlw	-1
  6975  0061E8  50E3               	movf	plusw1,w,c
  6976  0061EA  0D02               	mullw	2
  6977  0061EC  50F3               	movf	prodl,w,c
  6978  0061EE  0FD7               	addlw	low _tickCount
  6979  0061F0  6ED9               	movwf	fsr2l,c
  6980  0061F2  6ADA               	clrf	fsr2h,c
  6981  0061F4  50DE               	movf	postinc2,w,c
  6982  0061F6  10DE               	iorwf	postinc2,w,c
  6983  0061F8  A4D8               	btfss	status,2,c
  6984  0061FA  D002               	goto	l5893
  6985                           
  6986                           ;timers.c: 23:   return 1;
  6987  0061FC  0E01               	movlw	1
  6988  0061FE  D001               	goto	L22
  6989  006200                     l5893:
  6990                           
  6991                           ;timers.c: 25:  return 0;
  6992  006200  0E00               	movlw	0
  6993  006202                     L22:
  6994  006202  6E39               	movwf	btemp,c
  6995                           
  6996                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6997  006204  52E5               	movf	postdec1,f,c
  6998  006206  0012               	return		;funcret
  6999  006208                     __end_of_TimerDone:
  7000                           	opt callstack 0
  7001                           
  7002 ;; *************** function _StartTimer *****************
  7003 ;; Defined at:
  7004 ;;		line 12 in file "timers.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  timer           1  [STACK] unsigned char 
  7007 ;;  count           2  [STACK] unsigned short 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1  [STACK] void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/39
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    3
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_m_protocol
  7030 ;;		_r_protocol
  7031 ;;		_t_protocol
  7032 ;;		_WaitMs
  7033 ;; This function uses a reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text18
  7037  005D00                     __ptext18:
  7038                           	opt callstack 0
  7039  005D00                     _StartTimer:
  7040                           	opt callstack 25
  7041                           
  7042                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  7043                           ;stkvar	_count @ sp[(0)+-3]
  7044                           
  7045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7046                           ;incstack = 0
  7047  005D00  0EFD               	movlw	-3
  7048  005D02  006F FF8C  F043    	movff	plusw1,btemp+10
  7049  005D08  0EFE               	movlw	-2
  7050  005D0A  006F FF8C  F044    	movff	plusw1,btemp+11
  7051  005D10  90D8               	bcf	status,0,c
  7052  005D12  3443               	rlcf	btemp+10,w,c
  7053  005D14  6E41               	movwf	btemp+8,c
  7054  005D16  3444               	rlcf	btemp+11,w,c
  7055  005D18  6E42               	movwf	btemp+9,c
  7056                           
  7057                           ;stkvar	_timer @ sp[(0)+-1]
  7058  005D1A  0EFF               	movlw	-1
  7059  005D1C  50E3               	movf	plusw1,w,c
  7060  005D1E  0D02               	mullw	2
  7061  005D20  50F3               	movf	prodl,w,c
  7062  005D22  0FD7               	addlw	low _tickCount
  7063  005D24  6ED9               	movwf	fsr2l,c
  7064  005D26  6ADA               	clrf	fsr2h,c
  7065  005D28  0060  F107  FFDE   	movff	btemp+8,postinc2
  7066  005D2E  0060  F10B  FFDD   	movff	btemp+9,postdec2
  7067                           
  7068                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  7069  005D34  52E5               	movf	postdec1,f,c
  7070  005D36  52E5               	movf	postdec1,f,c
  7071  005D38  52E5               	movf	postdec1,f,c
  7072  005D3A  0012               	return		;funcret
  7073  005D3C                     __end_of_StartTimer:
  7074                           	opt callstack 0
  7075                           
  7076 ;; *************** function _UART2_is_rx_ready *****************
  7077 ;; Defined at:
  7078 ;;		line 137 in file "mcc_generated_files/uart2.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1  [STACK] unsigned char 
  7085 ;; Registers used:
  7086 ;;		btemp
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7096 ;;Total ram usage:        0 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    3
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_m_protocol
  7103 ;; This function uses a reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text19
  7107  00647A                     __ptext19:
  7108                           	opt callstack 0
  7109  00647A                     _UART2_is_rx_ready:
  7110                           	opt callstack 26
  7111                           
  7112                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7113                           
  7114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7115                           ;incstack = 0
  7116  00647A  0060  F0B4  F039   	movff	_uart2RxCount,btemp	;volatile
  7117                           
  7118                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7119  006480  0012               	return		;funcret
  7120  006482                     __end_of_UART2_is_rx_ready:
  7121                           	opt callstack 0
  7122                           
  7123 ;; *************** function _UART2_Read *****************
  7124 ;; Defined at:
  7125 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  readValue       1  [STACK] unsigned char 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1  [STACK] unsigned char 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 3F/39
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7143 ;;Total ram usage:        0 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    3
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_m_protocol
  7150 ;; This function uses a reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text20
  7154  005C84                     __ptext20:
  7155                           	opt callstack 0
  7156  005C84                     _UART2_Read:
  7157                           	opt callstack 0
  7158                           
  7159                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7160  005C84  52E6               	movf	postinc1,f,c
  7161  005C86                     
  7162                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7163                           
  7164                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7165  005C86  502D               	movf	_uart2RxCount,w,c	;volatile
  7166  005C88  B4D8               	btfsc	status,2,c
  7167  005C8A  D7FD               	goto	l6249
  7168                           
  7169                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  7170  005C8C  0E00               	movlw	low _uart2RxBuffer
  7171  005C8E  242E               	addwf	_uart2RxTail,w,c	;volatile
  7172  005C90  6ED9               	movwf	fsr2l,c
  7173  005C92  6ADA               	clrf	fsr2h,c
  7174  005C94  0E02               	movlw	high _uart2RxBuffer
  7175  005C96  22DA               	addwfc	fsr2h,f,c
  7176  005C98  50DF               	movf	indf2,w,c
  7177  005C9A  6E44               	movwf	btemp+11,c
  7178                           
  7179                           ;stkvar	_readValue @ sp[(-1)+0]
  7180  005C9C  0EFF               	movlw	-1
  7181  005C9E  0060  F113  FFE3   	movff	btemp+11,plusw1
  7182  005CA4  2A2E               	incf	_uart2RxTail,f,c	;volatile
  7183                           
  7184                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  7185  005CA6  0E3F               	movlw	63
  7186  005CA8  642E               	cpfsgt	_uart2RxTail,c
  7187  005CAA  D001               	goto	l692
  7188                           
  7189                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  7190  005CAC  6A2E               	clrf	_uart2RxTail,c	;volatile
  7191  005CAE                     l692:
  7192                           
  7193                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  7194  005CAE  0139               	movlb	57	; () banked
  7195  005CB0  9596               	bcf	150,2,b	;volatile
  7196                           
  7197                           ; BSR set to: 57
  7198                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  7199  005CB2  062D               	decf	_uart2RxCount,f,c	;volatile
  7200                           
  7201                           ; BSR set to: 57
  7202                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  7203  005CB4  8596               	bsf	150,2,b	;volatile
  7204                           
  7205                           ; BSR set to: 57
  7206                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  7207                           ;stkvar	_readValue @ sp[(-1)+0]
  7208  005CB6  0EFF               	movlw	-1
  7209  005CB8  006F FF8C  F039    	movff	plusw1,btemp
  7210                           
  7211                           ; BSR set to: 57
  7212                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7213  005CBE  52E5               	movf	postdec1,f,c
  7214  005CC0  0012               	return		;funcret
  7215  005CC2                     __end_of_UART2_Read:
  7216                           	opt callstack 0
  7217                           
  7218 ;; *************** function _UART1_is_rx_ready *****************
  7219 ;; Defined at:
  7220 ;;		line 146 in file "mcc_generated_files/uart1.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;		None
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;		None
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1  [STACK] unsigned char 
  7227 ;; Registers used:
  7228 ;;		btemp
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7238 ;;Total ram usage:        0 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    3
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_m_protocol
  7245 ;;		_r_protocol
  7246 ;;		_t_protocol
  7247 ;; This function uses a reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text21
  7251  006482                     __ptext21:
  7252                           	opt callstack 0
  7253  006482                     _UART1_is_rx_ready:
  7254                           	opt callstack 26
  7255                           
  7256                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  7257                           
  7258                           ; BSR set to: 57
  7259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7260                           ;incstack = 0
  7261  006482  0060  F0CC  F039   	movff	_uart1RxCount,btemp	;volatile
  7262                           
  7263                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7264  006488  0012               	return		;funcret
  7265  00648A                     __end_of_UART1_is_rx_ready:
  7266                           	opt callstack 0
  7267                           
  7268 ;; *************** function _UART1_Read *****************
  7269 ;; Defined at:
  7270 ;;		line 161 in file "mcc_generated_files/uart1.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  readValue       1  [STACK] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1  [STACK] unsigned char 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 3F/39
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    3
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_m_protocol
  7295 ;;		_r_protocol
  7296 ;;		_t_protocol
  7297 ;; This function uses a reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text22
  7301  005CC2                     __ptext22:
  7302                           	opt callstack 0
  7303  005CC2                     _UART1_Read:
  7304                           	opt callstack 0
  7305                           
  7306                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7307  005CC2  52E6               	movf	postinc1,f,c
  7308  005CC4                     
  7309                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7310                           
  7311                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7312  005CC4  5033               	movf	_uart1RxCount,w,c	;volatile
  7313  005CC6  B4D8               	btfsc	status,2,c
  7314  005CC8  D7FD               	goto	l6225
  7315                           
  7316                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  7317  005CCA  0E40               	movlw	low _uart1RxBuffer
  7318  005CCC  2434               	addwf	_uart1RxTail,w,c	;volatile
  7319  005CCE  6ED9               	movwf	fsr2l,c
  7320  005CD0  6ADA               	clrf	fsr2h,c
  7321  005CD2  0E02               	movlw	high _uart1RxBuffer
  7322  005CD4  22DA               	addwfc	fsr2h,f,c
  7323  005CD6  50DF               	movf	indf2,w,c
  7324  005CD8  6E44               	movwf	btemp+11,c
  7325                           
  7326                           ;stkvar	_readValue @ sp[(-1)+0]
  7327  005CDA  0EFF               	movlw	-1
  7328  005CDC  0060  F113  FFE3   	movff	btemp+11,plusw1
  7329  005CE2  2A34               	incf	_uart1RxTail,f,c	;volatile
  7330                           
  7331                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  7332  005CE4  0E3F               	movlw	63
  7333  005CE6  6434               	cpfsgt	_uart1RxTail,c
  7334  005CE8  D001               	goto	l572
  7335                           
  7336                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  7337  005CEA  6A34               	clrf	_uart1RxTail,c	;volatile
  7338  005CEC                     l572:
  7339                           
  7340                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  7341  005CEC  0139               	movlb	57	; () banked
  7342  005CEE  9793               	bcf	147,3,b	;volatile
  7343                           
  7344                           ; BSR set to: 57
  7345                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  7346  005CF0  0633               	decf	_uart1RxCount,f,c	;volatile
  7347                           
  7348                           ; BSR set to: 57
  7349                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  7350  005CF2  8793               	bsf	147,3,b	;volatile
  7351                           
  7352                           ; BSR set to: 57
  7353                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  7354                           ;stkvar	_readValue @ sp[(-1)+0]
  7355  005CF4  0EFF               	movlw	-1
  7356  005CF6  006F FF8C  F039    	movff	plusw1,btemp
  7357                           
  7358                           ; BSR set to: 57
  7359                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7360  005CFC  52E5               	movf	postdec1,f,c
  7361  005CFE  0012               	return		;funcret
  7362  005D00                     __end_of_UART1_Read:
  7363                           	opt callstack 0
  7364                           
  7365 ;; *************** function _init_display *****************
  7366 ;; Defined at:
  7367 ;;		line 35 in file "eadog.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;		None
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;		None
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1  [STACK] void 
  7374 ;; Registers used:
  7375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 3F/3D
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7385 ;;Total ram usage:        0 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    5
  7388 ;; This function calls:
  7389 ;;		_ringBufS_init
  7390 ;;		_send_lcd_cmd
  7391 ;;		_send_lcd_cmd_long
  7392 ;;		_wdtdelay
  7393 ;; This function is called by:
  7394 ;;		_main
  7395 ;; This function uses a reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text23
  7399  004DE2                     __ptext23:
  7400                           	opt callstack 0
  7401  004DE2                     _init_display:
  7402                           	opt callstack 25
  7403                           
  7404                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  7405                           
  7406                           ; BSR set to: 57
  7407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7408                           ;incstack = 0
  7409  004DE2  0E83               	movlw	low _ring_buf1
  7410  004DE4  0100               	movlb	0	; () banked
  7411  004DE6  6FD1               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7412  004DE8  0E03               	movlw	high _ring_buf1
  7413  004DEA  6FD2               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7414                           
  7415                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  7416  004DEC  0E40               	movlw	low _ring_buf2
  7417  004DEE  6FCF               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7418  004DF0  0E03               	movlw	high _ring_buf2
  7419  004DF2  6FD0               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  7423  004DF4  0060  F347  FFE6   	movff	_spi_link+6,postinc1
  7424  004DFA  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
  7425  004E00  EC8F  F02F         	call	_ringBufS_init	;wreg free
  7426                           
  7427                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  7428  004E04  0060  F33F  FFE6   	movff	_spi_link+4,postinc1
  7429  004E0A  0060  F343  FFE6   	movff	_spi_link+5,postinc1
  7430  004E10  EC8F  F02F         	call	_ringBufS_init	;wreg free
  7431                           
  7432                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  7433  004E14  80BE               	bsf	16318,0,c	;volatile
  7434  004E16  84BC               	bsf	16316,2,c	;volatile
  7435                           
  7436                           ;eadog.c: 44:  wdtdelay(350000);
  7437  004E18  0E30               	movlw	48
  7438  004E1A  6EE6               	movwf	postinc1,c
  7439  004E1C  0E57               	movlw	87
  7440  004E1E  6EE6               	movwf	postinc1,c
  7441  004E20  0E05               	movlw	5
  7442  004E22  6EE6               	movwf	postinc1,c
  7443  004E24  0E00               	movlw	0
  7444  004E26  6EE6               	movwf	postinc1,c
  7445  004E28  EC93  F02C         	call	_wdtdelay	;wreg free
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  7449  004E2C  0E39               	movlw	57
  7450  004E2E  6EE6               	movwf	postinc1,c
  7451  004E30  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  7455  004E34  0E1D               	movlw	29
  7456  004E36  6EE6               	movwf	postinc1,c
  7457  004E38  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  7461  004E3C  0E50               	movlw	80
  7462  004E3E  6EE6               	movwf	postinc1,c
  7463  004E40  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  7467  004E44  0E6C               	movlw	108
  7468  004E46  6EE6               	movwf	postinc1,c
  7469  004E48  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  7473  004E4C  0E76               	movlw	118
  7474  004E4E  6EE6               	movwf	postinc1,c
  7475  004E50  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  7479  004E54  0E38               	movlw	56
  7480  004E56  6EE6               	movwf	postinc1,c
  7481  004E58  EC67  F02F         	call	_send_lcd_cmd_long	;wreg free
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  7485  004E5C  0E0F               	movlw	15
  7486  004E5E  6EE6               	movwf	postinc1,c
  7487  004E60  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  7491  004E64  0E01               	movlw	1
  7492  004E66  6EE6               	movwf	postinc1,c
  7493  004E68  EC67  F02F         	call	_send_lcd_cmd_long	;wreg free
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  7497  004E6C  0E02               	movlw	2
  7498  004E6E  6EE6               	movwf	postinc1,c
  7499  004E70  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  7503  004E74  0E06               	movlw	6
  7504  004E76  6EE6               	movwf	postinc1,c
  7505  004E78  EC7B  F02F         	call	_send_lcd_cmd	;wreg free
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;eadog.c: 55:  wdtdelay(30);
  7509  004E7C  0E1E               	movlw	30
  7510  004E7E  6EE6               	movwf	postinc1,c
  7511  004E80  0E00               	movlw	0
  7512  004E82  6EE6               	movwf	postinc1,c
  7513  004E84  0E00               	movlw	0
  7514  004E86  6EE6               	movwf	postinc1,c
  7515  004E88  0E00               	movlw	0
  7516  004E8A  6EE6               	movwf	postinc1,c
  7517  004E8C  EC93  F02C         	call	_wdtdelay	;wreg free
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  7521  004E90  0E02               	movlw	2
  7522  004E92  013D               	movlb	61	; () banked
  7523  004E94  6F16               	movwf	22,b	;volatile
  7524                           
  7525                           ; BSR set to: 61
  7526                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  7527  004E96  0E40               	movlw	64
  7528  004E98  6F15               	movwf	21,b	;volatile
  7529                           
  7530                           ; BSR set to: 61
  7531                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  7532  004E9A  0E83               	movlw	131
  7533  004E9C  6F14               	movwf	20,b	;volatile
  7534                           
  7535                           ; BSR set to: 61
  7536                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  7537  004E9E  931A               	bcf	26,1,b	;volatile
  7538                           
  7539                           ; BSR set to: 61
  7540                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  7541  004EA0  0E3F               	movlw	-193
  7542  004EA2  013B               	movlb	59	; () banked
  7543  004EA4  17FD               	andwf	253,f,b	;volatile
  7544                           
  7545                           ; BSR set to: 59
  7546                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  7547  004EA6  9BFD               	bcf	253,5,b	;volatile
  7548                           
  7549                           ; BSR set to: 59
  7550                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  7551  004EA8  51FD               	movf	253,w,b	;volatile
  7552  004EAA  0BF9               	andlw	-7
  7553  004EAC  0902               	iorlw	2
  7554  004EAE  6FFD               	movwf	253,b	;volatile
  7555                           
  7556                           ; BSR set to: 59
  7557                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  7558  004EB0  0EE7               	movlw	-25
  7559  004EB2  17FD               	andwf	253,f,b	;volatile
  7560                           
  7561                           ; BSR set to: 59
  7562                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  7563  004EB4  81FD               	bsf	253,0,b	;volatile
  7564                           
  7565                           ; BSR set to: 59
  7566                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  7567  004EB6  0E83               	movlw	low _ring_buf1
  7568  004EB8  6FF9               	movwf	249,b	;volatile
  7569  004EBA  0E03               	movlw	high _ring_buf1
  7570  004EBC  6FFA               	movwf	250,b	;volatile
  7571  004EBE  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7572  004EC0  6FFB               	movwf	251,b	;volatile
  7573                           
  7574                           ; BSR set to: 59
  7575                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  7576  004EC2  9BFC               	bcf	252,5,b	;volatile
  7577                           
  7578                           ; BSR set to: 59
  7579                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  7580  004EC4  013D               	movlb	61	; () banked
  7581  004EC6  831A               	bsf	26,1,b	;volatile
  7582                           
  7583                           ; BSR set to: 61
  7584                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  7585  004EC8  90BE               	bcf	16318,0,c	;volatile
  7586                           
  7587                           ; BSR set to: 61
  7588                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7589  004ECA  0012               	return		;funcret
  7590  004ECC                     __end_of_init_display:
  7591                           	opt callstack 0
  7592                           
  7593 ;; *************** function _send_lcd_cmd_long *****************
  7594 ;; Defined at:
  7595 ;;		line 97 in file "eadog.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  cmd             1  [STACK] unsigned char 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1  [STACK] void 
  7602 ;; Registers used:
  7603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7604 ;; Tracked objects:
  7605 ;;		On entry : 3F/0
  7606 ;;		On exit  : 3F/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    4
  7616 ;; This function calls:
  7617 ;;		_SPI1_Exchange8bit
  7618 ;;		_wdtdelay
  7619 ;; This function is called by:
  7620 ;;		_init_display
  7621 ;; This function uses a reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text24
  7625  005ECE                     __ptext24:
  7626                           	opt callstack 0
  7627  005ECE                     _send_lcd_cmd_long:
  7628                           	opt callstack 25
  7629                           
  7630                           ; BSR set to: 61
  7631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7632                           ;incstack = 0
  7633                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7634  005ECE  92BC               	bcf	16316,1,c	;volatile
  7635                           
  7636                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7637  005ED0  94BC               	bcf	16316,2,c	;volatile
  7638                           
  7639                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7640                           ;stkvar	_cmd @ sp[(0)+-1]
  7641  005ED2  0EFF               	movlw	-1
  7642  005ED4  50E3               	movf	plusw1,w,c
  7643  005ED6  6EE6               	movwf	postinc1,c
  7644  005ED8  EC77  F031         	call	_SPI1_Exchange8bit	;wreg free
  7645                           
  7646                           ; BSR set to: 57
  7647                           ;eadog.c: 102:  wdtdelay(800);
  7648  005EDC  0E20               	movlw	32
  7649  005EDE  6EE6               	movwf	postinc1,c
  7650  005EE0  0E03               	movlw	3
  7651  005EE2  6EE6               	movwf	postinc1,c
  7652  005EE4  0E00               	movlw	0
  7653  005EE6  6EE6               	movwf	postinc1,c
  7654  005EE8  0E00               	movlw	0
  7655  005EEA  6EE6               	movwf	postinc1,c
  7656  005EEC  EC93  F02C         	call	_wdtdelay	;wreg free
  7657                           
  7658                           ; BSR set to: 0
  7659  005EF0  82BC               	bsf	16316,1,c	;volatile
  7660                           
  7661                           ; BSR set to: 0
  7662                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7663  005EF2  52E5               	movf	postdec1,f,c
  7664  005EF4  0012               	return		;funcret
  7665  005EF6                     __end_of_send_lcd_cmd_long:
  7666                           	opt callstack 0
  7667                           
  7668 ;; *************** function _send_lcd_cmd *****************
  7669 ;; Defined at:
  7670 ;;		line 85 in file "eadog.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;  cmd             1  [STACK] unsigned char 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1  [STACK] void 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7679 ;; Tracked objects:
  7680 ;;		On entry : 3F/0
  7681 ;;		On exit  : 3F/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    4
  7691 ;; This function calls:
  7692 ;;		_SPI1_Exchange8bit
  7693 ;;		_wdtdelay
  7694 ;; This function is called by:
  7695 ;;		_init_display
  7696 ;; This function uses a reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text25
  7700  005EF6                     __ptext25:
  7701                           	opt callstack 0
  7702  005EF6                     _send_lcd_cmd:
  7703                           	opt callstack 25
  7704                           
  7705                           ; BSR set to: 0
  7706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7707                           ;incstack = 0
  7708                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7709  005EF6  92BC               	bcf	16316,1,c	;volatile
  7710                           
  7711                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7712  005EF8  94BC               	bcf	16316,2,c	;volatile
  7713                           
  7714                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7715                           ;stkvar	_cmd @ sp[(0)+-1]
  7716  005EFA  0EFF               	movlw	-1
  7717  005EFC  50E3               	movf	plusw1,w,c
  7718  005EFE  6EE6               	movwf	postinc1,c
  7719  005F00  EC77  F031         	call	_SPI1_Exchange8bit	;wreg free
  7720                           
  7721                           ; BSR set to: 57
  7722                           ;eadog.c: 90:  wdtdelay(30);
  7723  005F04  0E1E               	movlw	30
  7724  005F06  6EE6               	movwf	postinc1,c
  7725  005F08  0E00               	movlw	0
  7726  005F0A  6EE6               	movwf	postinc1,c
  7727  005F0C  0E00               	movlw	0
  7728  005F0E  6EE6               	movwf	postinc1,c
  7729  005F10  0E00               	movlw	0
  7730  005F12  6EE6               	movwf	postinc1,c
  7731  005F14  EC93  F02C         	call	_wdtdelay	;wreg free
  7732                           
  7733                           ; BSR set to: 0
  7734  005F18  82BC               	bsf	16316,1,c	;volatile
  7735                           
  7736                           ; BSR set to: 0
  7737                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7738  005F1A  52E5               	movf	postdec1,f,c
  7739  005F1C  0012               	return		;funcret
  7740  005F1E                     __end_of_send_lcd_cmd:
  7741                           	opt callstack 0
  7742                           
  7743 ;; *************** function _SPI1_Exchange8bit *****************
  7744 ;; Defined at:
  7745 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  data            1  [STACK] unsigned char 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1  [STACK] unsigned char 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 3F/39
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7763 ;;Total ram usage:        0 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    3
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_send_lcd_cmd
  7770 ;;		_send_lcd_cmd_long
  7771 ;; This function uses a reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text26
  7775  0062EE                     __ptext26:
  7776                           	opt callstack 0
  7777  0062EE                     _SPI1_Exchange8bit:
  7778                           	opt callstack 25
  7779                           
  7780                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7781                           
  7782                           ; BSR set to: 0
  7783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7784                           ;incstack = 0
  7785  0062EE  0E01               	movlw	1
  7786  0062F0  013D               	movlb	61	; () banked
  7787  0062F2  6F12               	movwf	18,b	;volatile
  7788                           
  7789                           ; BSR set to: 61
  7790                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7791                           ;stkvar	_data @ sp[(0)+-1]
  7792  0062F4  0EFF               	movlw	-1
  7793  0062F6  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7794  0062FC                     l851:
  7795                           
  7796                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7797  0062FC  0139               	movlb	57	; () banked
  7798  0062FE  A9A2               	btfss	162,4,b	;volatile
  7799  006300  D7FD               	goto	l851
  7800                           
  7801                           ; BSR set to: 57
  7802                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7803  006302  006F F440  F039    	movff	15632,btemp	;volatile
  7804                           
  7805                           ; BSR set to: 57
  7806                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7807  006308  52E5               	movf	postdec1,f,c
  7808  00630A  0012               	return		;funcret
  7809  00630C                     __end_of_SPI1_Exchange8bit:
  7810                           	opt callstack 0
  7811                           
  7812 ;; *************** function _ringBufS_init *****************
  7813 ;; Defined at:
  7814 ;;		line 22 in file "ringbufs.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  _this           2  [STACK] PTR volatile struct ring
  7817 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1  [STACK] void 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    4
  7836 ;; This function calls:
  7837 ;;		_memset
  7838 ;; This function is called by:
  7839 ;;		_init_display
  7840 ;; This function uses a reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text27
  7844  005F1E                     __ptext27:
  7845                           	opt callstack 0
  7846  005F1E                     _ringBufS_init:
  7847                           	opt callstack 25
  7848                           
  7849                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7850                           
  7851                           ; BSR set to: 57
  7852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7853                           ;incstack = 0
  7854  005F1E  0E43               	movlw	67
  7855  005F20  6EE6               	movwf	postinc1,c
  7856  005F22  0E00               	movlw	0
  7857  005F24  6EE6               	movwf	postinc1,c
  7858  005F26  0E00               	movlw	0
  7859  005F28  6EE6               	movwf	postinc1,c
  7860  005F2A  0E00               	movlw	0
  7861  005F2C  6EE6               	movwf	postinc1,c
  7862                           
  7863                           ;stkvar	__this @ sp[(-4)+-2]
  7864  005F2E  0EFA               	movlw	-6
  7865  005F30  006F FF8F FFE6     	movff	plusw1,postinc1
  7866  005F36  006F FF8F FFE6     	movff	plusw1,postinc1
  7867  005F3C  ECCA  F01B         	call	_memset	;wreg free
  7868                           
  7869                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7870  005F40  52E5               	movf	postdec1,f,c
  7871  005F42  52E5               	movf	postdec1,f,c
  7872  005F44  0012               	return		;funcret
  7873  005F46                     __end_of_ringBufS_init:
  7874                           	opt callstack 0
  7875                           
  7876 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7877 ;; Defined at:
  7878 ;;		line 221 in file "eadog.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  r               1  [STACK] unsigned char 
  7881 ;;  c               1  [STACK] unsigned char 
  7882 ;;  strPtr          1  [STACK] PTR unsigned char 
  7883 ;;		 -> V(94), 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1  [STACK] void 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7890 ;; Tracked objects:
  7891 ;;		On entry : 3F/0
  7892 ;;		On exit  : 3F/3B
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:   13
  7902 ;; This function calls:
  7903 ;;		_eaDogM_WriteString
  7904 ;;		_send_lcd_cmd_dma
  7905 ;; This function is called by:
  7906 ;;		_main
  7907 ;; This function uses a reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text28
  7911  005DA0                     __ptext28:
  7912                           	opt callstack 0
  7913  005DA0                     _eaDogM_WriteStringAtPos:
  7914                           	opt callstack 17
  7915                           
  7916                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7917                           ;stkvar	_c @ sp[(0)+-2]
  7918                           
  7919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7920                           ;incstack = 0
  7921  005DA0  0EFE               	movlw	-2
  7922  005DA2  006F FF8C  F044    	movff	plusw1,btemp+11
  7923                           
  7924                           ;stkvar	_r @ sp[(0)+-1]
  7925  005DA8  0EFF               	movlw	-1
  7926  005DAA  50E3               	movf	plusw1,w,c
  7927  005DAC  0D10               	mullw	16
  7928  005DAE  50F3               	movf	prodl,w,c
  7929  005DB0  2444               	addwf	btemp+11,w,c
  7930  005DB2  0F80               	addlw	128
  7931  005DB4  6EE6               	movwf	postinc1,c
  7932  005DB6  ECC1  F02C         	call	_send_lcd_cmd_dma	;wreg free
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7936                           ;stkvar	_strPtr @ sp[(0)+-3]
  7937  005DBA  0EFD               	movlw	-3
  7938  005DBC  50E3               	movf	plusw1,w,c
  7939  005DBE  6EE6               	movwf	postinc1,c
  7940  005DC0  ECF7  F029         	call	_eaDogM_WriteString	;wreg free
  7941                           
  7942                           ; BSR set to: 59
  7943                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7944  005DC4  52E5               	movf	postdec1,f,c
  7945  005DC6  52E5               	movf	postdec1,f,c
  7946  005DC8  52E5               	movf	postdec1,f,c
  7947  005DCA  0012               	return		;funcret
  7948  005DCC                     __end_of_eaDogM_WriteStringAtPos:
  7949                           	opt callstack 0
  7950                           
  7951 ;; *************** function _eaDogM_WriteString *****************
  7952 ;; Defined at:
  7953 ;;		line 167 in file "eadog.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  strPtr          1  [STACK] PTR unsigned char 
  7956 ;;		 -> V(94), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1  [STACK] void 
  7961 ;; Registers used:
  7962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7963 ;; Tracked objects:
  7964 ;;		On entry : 3F/0
  7965 ;;		On exit  : 3F/3B
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7972 ;;Total ram usage:        0 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:   12
  7975 ;; This function calls:
  7976 ;;		_printf
  7977 ;;		_ringBufS_flush
  7978 ;;		_start_lcd
  7979 ;;		_strlen
  7980 ;;		_wait_lcd_set
  7981 ;; This function is called by:
  7982 ;;		_eaDogM_WriteStringAtPos
  7983 ;; This function uses a reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text29
  7987  0053EE                     __ptext29:
  7988                           	opt callstack 0
  7989  0053EE                     _eaDogM_WriteString:
  7990                           	opt callstack 17
  7991                           
  7992                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  7993                           
  7994                           ; BSR set to: 59
  7995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7996                           ;incstack = 0
  7997  0053EE  EC45  F032         	call	_wait_lcd_set	;wreg free
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  8001  0053F2  0E00               	movlw	0
  8002  0053F4  6EE6               	movwf	postinc1,c
  8003  0053F6  0060  F347  FFE6   	movff	_spi_link+6,postinc1
  8004  0053FC  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
  8005  005402  ECDD  F02A         	call	_ringBufS_flush	;wreg free
  8006  005406  94BC               	bcf	16316,2,c	;volatile
  8007                           
  8008                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8009                           ;stkvar	_strPtr @ sp[(0)+-1]
  8010  005408  0EFF               	movlw	-1
  8011  00540A  006F FF8C  F044    	movff	plusw1,btemp+11
  8012  005410  0060  F113  FFE6   	movff	btemp+11,postinc1
  8013  005416  0E00               	movlw	0
  8014  005418  6EE6               	movwf	postinc1,c
  8015  00541A  EC57  F029         	call	_strlen	;wreg free
  8016  00541E  503A               	movf	btemp+1,w,c
  8017  005420  E104               	bnz	u5210
  8018  005422  0E41               	movlw	65
  8019  005424  5C39               	subwf	btemp,w,c
  8020  005426  A0D8               	btfss	status,0,c
  8021  005428  D008               	goto	l8465
  8022  00542A                     u5210:
  8023                           
  8024                           ;stkvar	_strPtr @ sp[(0)+-1]
  8025  00542A  0EFF               	movlw	-1
  8026  00542C  50E3               	movf	plusw1,w,c
  8027  00542E  6ED9               	movwf	fsr2l,c
  8028  005430  6ADA               	clrf	fsr2h,c
  8029  005432  0E40               	movlw	64
  8030  005434  26D9               	addwf	fsr2l,f,c
  8031  005436  0E00               	movlw	0
  8032  005438  6EDF               	movwf	indf2,c
  8033  00543A                     l8465:
  8034                           
  8035                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  8036  00543A  013B               	movlb	59	; () banked
  8037  00543C  9FFC               	bcf	252,7,b	;volatile
  8038                           
  8039                           ; BSR set to: 59
  8040                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  8041                           ;stkvar	_strPtr @ sp[(0)+-1]
  8042  00543E  0EFF               	movlw	-1
  8043  005440  006F FF8C  F044    	movff	plusw1,btemp+11
  8044  005446  0060  F113  FFE6   	movff	btemp+11,postinc1
  8045  00544C  0E00               	movlw	0
  8046  00544E  6EE6               	movwf	postinc1,c
  8047  005450  EC57  F029         	call	_strlen	;wreg free
  8048  005454  0060  F0E7  FBF7   	movff	btemp,15351	;volatile
  8049  00545A  0060  F0EB  FBF8   	movff	btemp+1,15352	;volatile
  8050                           
  8051                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  8052  005460  013B               	movlb	59	; () banked
  8053  005462  8FFC               	bsf	252,7,b	;volatile
  8054                           
  8055                           ; BSR set to: 59
  8056                           ;eadog.c: 177:  printf("%s", strPtr);
  8057                           ;stkvar	_strPtr @ sp[(0)+-1]
  8058  005464  0EFF               	movlw	-1
  8059  005466  006F FF8C  F044    	movff	plusw1,btemp+11
  8060  00546C  0060  F113  FFE6   	movff	btemp+11,postinc1
  8061  005472  0E00               	movlw	0
  8062  005474  6EE6               	movwf	postinc1,c
  8063  005476  0EA0               	movlw	(STR_2+9)& (0+255)
  8064  005478  6EE6               	movwf	postinc1,c
  8065  00547A  0E03               	movlw	3
  8066  00547C  6EE6               	movwf	postinc1,c
  8067  00547E  EC04  F02C         	call	_printf	;wreg free
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;eadog.c: 178:  start_lcd();
  8071  005482  EC48  F032         	call	_start_lcd	;wreg free
  8072                           
  8073                           ; BSR set to: 59
  8074                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8075  005486  52E5               	movf	postdec1,f,c
  8076  005488  0012               	return		;funcret
  8077  00548A                     __end_of_eaDogM_WriteString:
  8078                           	opt callstack 0
  8079                           
  8080 ;; *************** function _eaDogM_WriteCommand *****************
  8081 ;; Defined at:
  8082 ;;		line 143 in file "eadog.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  cmd             1  [STACK] unsigned char 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1  [STACK] void 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8091 ;; Tracked objects:
  8092 ;;		On entry : 3F/3D
  8093 ;;		On exit  : 3F/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8100 ;;Total ram usage:        0 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:   13
  8103 ;; This function calls:
  8104 ;;		_send_lcd_cmd_dma
  8105 ;; This function is called by:
  8106 ;;		_main
  8107 ;; This function uses a reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text30
  8111  0063F0                     __ptext30:
  8112                           	opt callstack 0
  8113  0063F0                     _eaDogM_WriteCommand:
  8114                           	opt callstack 17
  8115                           
  8116                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  8117                           ;stkvar	_cmd @ sp[(0)+-1]
  8118                           
  8119                           ; BSR set to: 59
  8120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8121                           ;incstack = 0
  8122  0063F0  0EFF               	movlw	-1
  8123  0063F2  50E3               	movf	plusw1,w,c
  8124  0063F4  6EE6               	movwf	postinc1,c
  8125  0063F6  ECC1  F02C         	call	_send_lcd_cmd_dma	;wreg free
  8126                           
  8127                           ; BSR set to: 0
  8128                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8129  0063FA  52E5               	movf	postdec1,f,c
  8130  0063FC  0012               	return		;funcret
  8131  0063FE                     __end_of_eaDogM_WriteCommand:
  8132                           	opt callstack 0
  8133                           
  8134 ;; *************** function _send_lcd_cmd_dma *****************
  8135 ;; Defined at:
  8136 ;;		line 187 in file "eadog.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  strPtr          1  [STACK] unsigned char 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1  [STACK] void 
  8143 ;; Registers used:
  8144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 3F/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8154 ;;Total ram usage:        0 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:   12
  8157 ;; This function calls:
  8158 ;;		_printf
  8159 ;;		_ringBufS_flush
  8160 ;;		_start_lcd
  8161 ;;		_wait_lcd_done
  8162 ;;		_wait_lcd_set
  8163 ;; This function is called by:
  8164 ;;		_eaDogM_WriteCommand
  8165 ;;		_eaDogM_WriteStringAtPos
  8166 ;; This function uses a reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text31
  8170  005982                     __ptext31:
  8171                           	opt callstack 0
  8172  005982                     _send_lcd_cmd_dma:
  8173                           	opt callstack 17
  8174                           
  8175                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  8176                           
  8177                           ; BSR set to: 0
  8178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8179                           ;incstack = 0
  8180  005982  EC45  F032         	call	_wait_lcd_set	;wreg free
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  8184  005986  0E00               	movlw	0
  8185  005988  6EE6               	movwf	postinc1,c
  8186  00598A  0060  F347  FFE6   	movff	_spi_link+6,postinc1
  8187  005990  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
  8188  005996  ECDD  F02A         	call	_ringBufS_flush	;wreg free
  8189  00599A  92BC               	bcf	16316,1,c	;volatile
  8190  00599C  94BC               	bcf	16316,2,c	;volatile
  8191                           
  8192                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  8193  00599E  013B               	movlb	59	; () banked
  8194  0059A0  9FFC               	bcf	252,7,b	;volatile
  8195                           
  8196                           ; BSR set to: 59
  8197                           ;eadog.c: 195:  DMA1SSZ = 1;
  8198  0059A2  0E00               	movlw	0
  8199  0059A4  6FF8               	movwf	248,b	;volatile
  8200  0059A6  0E01               	movlw	1
  8201  0059A8  6FF7               	movwf	247,b	;volatile
  8202                           
  8203                           ; BSR set to: 59
  8204                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  8205  0059AA  8FFC               	bsf	252,7,b	;volatile
  8206                           
  8207                           ; BSR set to: 59
  8208                           ;eadog.c: 197:  printf("%c", strPtr);
  8209                           ;stkvar	_strPtr @ sp[(0)+-1]
  8210  0059AC  0EFF               	movlw	-1
  8211  0059AE  50E3               	movf	plusw1,w,c
  8212  0059B0  6EE6               	movwf	postinc1,c
  8213  0059B2  0E00               	movlw	0
  8214  0059B4  6EE6               	movwf	postinc1,c
  8215  0059B6  0EBB               	movlw	STR_17& (0+255)
  8216  0059B8  6EE6               	movwf	postinc1,c
  8217  0059BA  0E03               	movlw	3
  8218  0059BC  6EE6               	movwf	postinc1,c
  8219  0059BE  EC04  F02C         	call	_printf	;wreg free
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;eadog.c: 198:  start_lcd();
  8223  0059C2  EC48  F032         	call	_start_lcd	;wreg free
  8224                           
  8225                           ; BSR set to: 59
  8226                           ;eadog.c: 199:  wait_lcd_done();
  8227  0059C6  EC86  F031         	call	_wait_lcd_done	;wreg free
  8228                           
  8229                           ; BSR set to: 0
  8230  0059CA  82BC               	bsf	16316,1,c	;volatile
  8231                           
  8232                           ; BSR set to: 0
  8233                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8234  0059CC  52E5               	movf	postdec1,f,c
  8235  0059CE  0012               	return		;funcret
  8236  0059D0                     __end_of_send_lcd_cmd_dma:
  8237                           	opt callstack 0
  8238                           
  8239 ;; *************** function _wait_lcd_set *****************
  8240 ;; Defined at:
  8241 ;;		line 114 in file "eadog.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;		None
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1  [STACK] void 
  8248 ;; Registers used:
  8249 ;;		None
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 3F/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:    3
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		_eaDogM_WriteString
  8266 ;;		_send_lcd_cmd_dma
  8267 ;; This function uses a reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text32
  8271  00648A                     __ptext32:
  8272                           	opt callstack 0
  8273  00648A                     _wait_lcd_set:
  8274                           	opt callstack 25
  8275                           
  8276                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  8277                           
  8278                           ; BSR set to: 0
  8279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8280                           ;incstack = 0
  8281  00648A  0100               	movlb	0	; () banked
  8282  00648C  87CB               	bsf	_spi_link& (0+255),3,b	;volatile
  8283                           
  8284                           ; BSR set to: 0
  8285                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8286  00648E  0012               	return		;funcret
  8287  006490                     __end_of_wait_lcd_set:
  8288                           	opt callstack 0
  8289                           
  8290 ;; *************** function _wait_lcd_done *****************
  8291 ;; Defined at:
  8292 ;;		line 124 in file "eadog.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;		None
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1  [STACK] void 
  8299 ;; Registers used:
  8300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8301 ;; Tracked objects:
  8302 ;;		On entry : 4/0
  8303 ;;		On exit  : 3F/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    4
  8313 ;; This function calls:
  8314 ;;		_wdtdelay
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;;		_send_lcd_cmd_dma
  8318 ;; This function uses a reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text33
  8322  00630C                     __ptext33:
  8323                           	opt callstack 0
  8324  00630C                     _wait_lcd_done:
  8325                           	opt callstack 26
  8326                           
  8327                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  8328                           
  8329                           ; BSR set to: 0
  8330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8331                           ;incstack = 0
  8332  00630C  0100               	movlb	0	; () banked
  8333  00630E  B7CB               	btfsc	_spi_link& (0+255),3,b	;volatile
  8334  006310  D7FD               	goto	_wait_lcd_done
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;eadog.c: 127:  wdtdelay(50);
  8338  006312  0E32               	movlw	50
  8339  006314  6EE6               	movwf	postinc1,c
  8340  006316  0E00               	movlw	0
  8341  006318  6EE6               	movwf	postinc1,c
  8342  00631A  0E00               	movlw	0
  8343  00631C  6EE6               	movwf	postinc1,c
  8344  00631E  0E00               	movlw	0
  8345  006320  6EE6               	movwf	postinc1,c
  8346  006322  EC93  F02C         	call	_wdtdelay	;wreg free
  8347                           
  8348                           ; BSR set to: 0
  8349                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8350  006326  0012               	return		;funcret
  8351  006328                     __end_of_wait_lcd_done:
  8352                           	opt callstack 0
  8353                           
  8354 ;; *************** function _wdtdelay *****************
  8355 ;; Defined at:
  8356 ;;		line 21 in file "eadog.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  delay           4  [STACK] unsigned long 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1  [STACK] void 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 3F/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8374 ;;Total ram usage:        0 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    3
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_init_display
  8381 ;;		_send_lcd_cmd
  8382 ;;		_send_lcd_cmd_long
  8383 ;;		_wait_lcd_done
  8384 ;; This function uses a reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text34
  8388  005926                     __ptext34:
  8389                           	opt callstack 0
  8390  005926                     _wdtdelay:
  8391                           	opt callstack 26
  8392                           
  8393                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  8394                           
  8395                           ; BSR set to: 0
  8396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8397                           ;incstack = 0
  8398  005926  0100               	movlb	0	; () banked
  8399  005928  6BEA               	clrf	wdtdelay@dcount& (0+255),b
  8400  00592A  6BEB               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8401  00592C  6BEC               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8402  00592E  6BED               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8403  005930  D009               	goto	l5697
  8404  005932                     l1355:
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;eadog.c: 26:   __nop();
  8408  005932  F000               	nop	
  8409  005934  0004               	clrwdt		;# 
  8410                           
  8411                           ;eadog.c: 28:  };
  8412  005936  0E01               	movlw	1
  8413  005938  0100               	movlb	0	; () banked
  8414  00593A  27EA               	addwf	wdtdelay@dcount& (0+255),f,b
  8415  00593C  0E00               	movlw	0
  8416  00593E  23EB               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8417  005940  23EC               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8418  005942  23ED               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8419  005944                     l5697:
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;stkvar	_delay @ sp[(0)+-4]
  8423  005944  0EFC               	movlw	-4
  8424  005946  006F FF8C  F039    	movff	plusw1,btemp
  8425  00594C  51EA               	movf	wdtdelay@dcount& (0+255),w,b
  8426  00594E  5C39               	subwf	btemp,w,c
  8427  005950  0EFD               	movlw	-3
  8428  005952  006F FF8C  F039    	movff	plusw1,btemp
  8429  005958  51EB               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8430  00595A  5839               	subwfb	btemp,w,c
  8431  00595C  0EFE               	movlw	-2
  8432  00595E  006F FF8C  F039    	movff	plusw1,btemp
  8433  005964  51EC               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8434  005966  5839               	subwfb	btemp,w,c
  8435  005968  0EFF               	movlw	-1
  8436  00596A  006F FF8C  F039    	movff	plusw1,btemp
  8437  005970  51ED               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8438  005972  5839               	subwfb	btemp,w,c
  8439  005974  B0D8               	btfsc	status,0,c
  8440  005976  D7DD               	goto	l1355
  8441                           
  8442                           ; BSR set to: 0
  8443                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8444  005978  52E5               	movf	postdec1,f,c
  8445  00597A  52E5               	movf	postdec1,f,c
  8446  00597C  52E5               	movf	postdec1,f,c
  8447  00597E  52E5               	movf	postdec1,f,c
  8448  005980  0012               	return		;funcret
  8449  005982                     __end_of_wdtdelay:
  8450                           	opt callstack 0
  8451                           
  8452 ;; *************** function _start_lcd *****************
  8453 ;; Defined at:
  8454 ;;		line 109 in file "eadog.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1  [STACK] void 
  8461 ;; Registers used:
  8462 ;;		None
  8463 ;; Tracked objects:
  8464 ;;		On entry : 3F/0
  8465 ;;		On exit  : 3F/3B
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8472 ;;Total ram usage:        0 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; Hardware stack levels required when called:    3
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_eaDogM_WriteString
  8479 ;;		_send_lcd_cmd_dma
  8480 ;; This function uses a reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text35
  8484  006490                     __ptext35:
  8485                           	opt callstack 0
  8486  006490                     _start_lcd:
  8487                           	opt callstack 25
  8488                           
  8489                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  8490                           
  8491                           ; BSR set to: 0
  8492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8493                           ;incstack = 0
  8494  006490  013B               	movlb	59	; () banked
  8495  006492  8DFC               	bsf	252,6,b	;volatile
  8496                           
  8497                           ; BSR set to: 59
  8498                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8499  006494  0012               	return		;funcret
  8500  006496                     __end_of_start_lcd:
  8501                           	opt callstack 0
  8502                           
  8503 ;; *************** function _ringBufS_flush *****************
  8504 ;; Defined at:
  8505 ;;		line 76 in file "ringbufs.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8508 ;;		 -> ring_buf1(67), 
  8509 ;;  clearBuffer     1  [STACK] const char 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1  [STACK] void 
  8514 ;; Registers used:
  8515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8516 ;; Tracked objects:
  8517 ;;		On entry : 3F/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:    4
  8528 ;; This function calls:
  8529 ;;		_memset
  8530 ;; This function is called by:
  8531 ;;		_eaDogM_WriteString
  8532 ;;		_send_lcd_cmd_dma
  8533 ;; This function uses a reentrant model
  8534 ;;
  8535                           
  8536                           	psect	text36
  8537  0055BA                     __ptext36:
  8538                           	opt callstack 0
  8539  0055BA                     _ringBufS_flush:
  8540                           	opt callstack 24
  8541                           
  8542                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8543                           ;stkvar	__this @ sp[(0)+-2]
  8544                           
  8545                           ; BSR set to: 59
  8546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8547                           ;incstack = 0
  8548  0055BA  0EFE               	movlw	-2
  8549  0055BC  006F FF8C  F043    	movff	plusw1,btemp+10
  8550  0055C2  0EFF               	movlw	-1
  8551  0055C4  006F FF8C  F044    	movff	plusw1,btemp+11
  8552  0055CA  0E42               	movlw	66
  8553  0055CC  2443               	addwf	btemp+10,w,c
  8554  0055CE  6ED9               	movwf	fsr2l,c
  8555  0055D0  0E00               	movlw	0
  8556  0055D2  2044               	addwfc	btemp+11,w,c
  8557  0055D4  6EDA               	movwf	fsr2h,c
  8558  0055D6  0E00               	movlw	0
  8559  0055D8  6EDF               	movwf	indf2,c
  8560                           
  8561                           ;ringbufs.c: 79:  _this->head = 0;
  8562                           ;stkvar	__this @ sp[(0)+-2]
  8563  0055DA  0EFE               	movlw	-2
  8564  0055DC  006F FF8C  F043    	movff	plusw1,btemp+10
  8565  0055E2  0EFF               	movlw	-1
  8566  0055E4  006F FF8C  F044    	movff	plusw1,btemp+11
  8567  0055EA  0E40               	movlw	64
  8568  0055EC  2443               	addwf	btemp+10,w,c
  8569  0055EE  6ED9               	movwf	fsr2l,c
  8570  0055F0  0E00               	movlw	0
  8571  0055F2  2044               	addwfc	btemp+11,w,c
  8572  0055F4  6EDA               	movwf	fsr2h,c
  8573  0055F6  0E00               	movlw	0
  8574  0055F8  6EDF               	movwf	indf2,c
  8575                           
  8576                           ;ringbufs.c: 80:  _this->tail = 0;
  8577                           ;stkvar	__this @ sp[(0)+-2]
  8578  0055FA  0EFE               	movlw	-2
  8579  0055FC  006F FF8C  F043    	movff	plusw1,btemp+10
  8580  005602  0EFF               	movlw	-1
  8581  005604  006F FF8C  F044    	movff	plusw1,btemp+11
  8582  00560A  0E41               	movlw	65
  8583  00560C  2443               	addwf	btemp+10,w,c
  8584  00560E  6ED9               	movwf	fsr2l,c
  8585  005610  0E00               	movlw	0
  8586  005612  2044               	addwfc	btemp+11,w,c
  8587  005614  6EDA               	movwf	fsr2h,c
  8588  005616  0E00               	movlw	0
  8589  005618  6EDF               	movwf	indf2,c
  8590                           
  8591                           ;ringbufs.c: 81:  if (clearBuffer) {
  8592                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8593  00561A  0EFD               	movlw	-3
  8594  00561C  50E3               	movf	plusw1,w,c
  8595  00561E  B4D8               	btfsc	status,2,c
  8596  005620  D011               	goto	l1491
  8597                           
  8598                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8599  005622  0E40               	movlw	64
  8600  005624  6EE6               	movwf	postinc1,c
  8601  005626  0E00               	movlw	0
  8602  005628  6EE6               	movwf	postinc1,c
  8603  00562A  0E00               	movlw	0
  8604  00562C  6EE6               	movwf	postinc1,c
  8605  00562E  0E00               	movlw	0
  8606  005630  6EE6               	movwf	postinc1,c
  8607                           
  8608                           ;stkvar	__this @ sp[(-4)+-2]
  8609  005632  0EFA               	movlw	-6
  8610  005634  006F FF8F FFE6     	movff	plusw1,postinc1
  8611  00563A  006F FF8F FFE6     	movff	plusw1,postinc1
  8612  005640  ECCA  F01B         	call	_memset	;wreg free
  8613  005644                     l1491:
  8614                           
  8615                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8616  005644  52E5               	movf	postdec1,f,c
  8617  005646  52E5               	movf	postdec1,f,c
  8618  005648  52E5               	movf	postdec1,f,c
  8619  00564A  0012               	return		;funcret
  8620  00564C                     __end_of_ringBufS_flush:
  8621                           	opt callstack 0
  8622                           
  8623 ;; *************** function _memset *****************
  8624 ;; Defined at:
  8625 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  dest            2  [STACK] PTR void 
  8628 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8629 ;;  c               2  [STACK] int 
  8630 ;;  n               2  [STACK] unsigned int 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  s               2  [STACK] PTR unsigned char 
  8633 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8634 ;;  k               2  [STACK] unsigned int 
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  2  [STACK] PTR void 
  8637 ;; Registers used:
  8638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8648 ;;Total ram usage:        0 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    3
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_ringBufS_init
  8655 ;;		_ringBufS_flush
  8656 ;; This function uses a reentrant model
  8657 ;;
  8658                           
  8659                           	psect	text37
  8660  003794                     __ptext37:
  8661                           	opt callstack 0
  8662  003794                     _memset:
  8663                           	opt callstack 0
  8664                           
  8665                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8666  003794  52E6               	movf	postinc1,f,c
  8667  003796  52E6               	movf	postinc1,f,c
  8668  003798  52E6               	movf	postinc1,f,c
  8669  00379A  52E6               	movf	postinc1,f,c
  8670                           
  8671                           ;stkvar	_dest @ sp[(-4)+-2]
  8672                           
  8673                           ;incstack = 0
  8674  00379C  0EFA               	movlw	-6
  8675  00379E  006F FF8C  F043    	movff	plusw1,btemp+10
  8676  0037A4  0EFB               	movlw	-5
  8677  0037A6  006F FF8C  F044    	movff	plusw1,btemp+11
  8678                           
  8679                           ;stkvar	_s @ sp[(-4)+0]
  8680  0037AC  0EFD               	movlw	-3
  8681  0037AE  0060  F113  FFE3   	movff	btemp+11,plusw1
  8682  0037B4  0EFC               	movlw	-4
  8683  0037B6  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8684                           
  8685                           ;stkvar	_n @ sp[(-4)+-6]
  8686  0037BC  0EF6               	movlw	-10
  8687  0037BE  006F FF8C  F039    	movff	plusw1,btemp
  8688  0037C4  0EF7               	movlw	-9
  8689  0037C6  50E3               	movf	plusw1,w,c
  8690  0037C8  1039               	iorwf	btemp,w,c
  8691  0037CA  B4D8               	btfsc	status,2,c
  8692  0037CC  D154               	goto	u5170
  8693                           
  8694                           ;stkvar	_c @ sp[(-4)+-4]
  8695                           ;stkvar	_s @ sp[(-4)+0]
  8696  0037CE  0EFC               	movlw	-4
  8697  0037D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8698  0037D6  0EFD               	movlw	-3
  8699  0037D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8700  0037DE  0EF8               	movlw	-8
  8701  0037E0  006F FF8F FFDF     	movff	plusw1,indf2
  8702                           
  8703                           ;stkvar	_c @ sp[(-4)+-4]
  8704                           ;stkvar	_n @ sp[(-4)+-6]
  8705                           ;stkvar	_s @ sp[(-4)+0]
  8706  0037E6  0EFC               	movlw	-4
  8707  0037E8  006F FF8C  F043    	movff	plusw1,btemp+10
  8708  0037EE  0EFD               	movlw	-3
  8709  0037F0  006F FF8C  F044    	movff	plusw1,btemp+11
  8710  0037F6  0EF6               	movlw	-10
  8711  0037F8  50E3               	movf	plusw1,w,c
  8712  0037FA  2643               	addwf	btemp+10,f,c
  8713  0037FC  0EF7               	movlw	-9
  8714  0037FE  50E3               	movf	plusw1,w,c
  8715  003800  2244               	addwfc	btemp+11,f,c
  8716  003802  0EFF               	movlw	255
  8717  003804  2443               	addwf	btemp+10,w,c
  8718  003806  6ED9               	movwf	fsr2l,c
  8719  003808  0EFF               	movlw	255
  8720  00380A  2044               	addwfc	btemp+11,w,c
  8721  00380C  6EDA               	movwf	fsr2h,c
  8722  00380E  0EF8               	movlw	-8
  8723  003810  006F FF8F FFDF     	movff	plusw1,indf2
  8724                           
  8725                           ;stkvar	_n @ sp[(-4)+-6]
  8726  003816  0EF7               	movlw	-9
  8727  003818  50E3               	movf	plusw1,w,c
  8728  00381A  E108               	bnz	l8351
  8729  00381C  0EF6               	movlw	-10
  8730  00381E  006F FF8C  F039    	movff	plusw1,btemp
  8731  003824  0E03               	movlw	3
  8732  003826  5E39               	subwf	btemp,f,c
  8733  003828  A0D8               	btfss	status,0,c
  8734  00382A  D125               	goto	u5170
  8735  00382C                     l8351:
  8736                           
  8737                           ;stkvar	_c @ sp[(-4)+-4]
  8738                           ;stkvar	_s @ sp[(-4)+0]
  8739  00382C  0EFC               	movlw	-4
  8740  00382E  006F FF8C  F043    	movff	plusw1,btemp+10
  8741  003834  0EFD               	movlw	-3
  8742  003836  006F FF8C  F044    	movff	plusw1,btemp+11
  8743  00383C  0E01               	movlw	1
  8744  00383E  2443               	addwf	btemp+10,w,c
  8745  003840  6ED9               	movwf	fsr2l,c
  8746  003842  0E00               	movlw	0
  8747  003844  2044               	addwfc	btemp+11,w,c
  8748  003846  6EDA               	movwf	fsr2h,c
  8749  003848  0EF8               	movlw	-8
  8750  00384A  006F FF8F FFDF     	movff	plusw1,indf2
  8751                           
  8752                           ;stkvar	_c @ sp[(-4)+-4]
  8753                           ;stkvar	_s @ sp[(-4)+0]
  8754  003850  0EFC               	movlw	-4
  8755  003852  006F FF8C  F043    	movff	plusw1,btemp+10
  8756  003858  0EFD               	movlw	-3
  8757  00385A  006F FF8C  F044    	movff	plusw1,btemp+11
  8758  003860  0E02               	movlw	2
  8759  003862  2443               	addwf	btemp+10,w,c
  8760  003864  6ED9               	movwf	fsr2l,c
  8761  003866  0E00               	movlw	0
  8762  003868  2044               	addwfc	btemp+11,w,c
  8763  00386A  6EDA               	movwf	fsr2h,c
  8764  00386C  0EF8               	movlw	-8
  8765  00386E  006F FF8F FFDF     	movff	plusw1,indf2
  8766                           
  8767                           ;stkvar	_c @ sp[(-4)+-4]
  8768                           ;stkvar	_n @ sp[(-4)+-6]
  8769                           ;stkvar	_s @ sp[(-4)+0]
  8770  003874  0EFC               	movlw	-4
  8771  003876  006F FF8C  F043    	movff	plusw1,btemp+10
  8772  00387C  0EFD               	movlw	-3
  8773  00387E  006F FF8C  F044    	movff	plusw1,btemp+11
  8774  003884  0EF6               	movlw	-10
  8775  003886  50E3               	movf	plusw1,w,c
  8776  003888  2643               	addwf	btemp+10,f,c
  8777  00388A  0EF7               	movlw	-9
  8778  00388C  50E3               	movf	plusw1,w,c
  8779  00388E  2244               	addwfc	btemp+11,f,c
  8780  003890  0EFE               	movlw	254
  8781  003892  2443               	addwf	btemp+10,w,c
  8782  003894  6ED9               	movwf	fsr2l,c
  8783  003896  0EFF               	movlw	255
  8784  003898  2044               	addwfc	btemp+11,w,c
  8785  00389A  6EDA               	movwf	fsr2h,c
  8786  00389C  0EF8               	movlw	-8
  8787  00389E  006F FF8F FFDF     	movff	plusw1,indf2
  8788                           
  8789                           ;stkvar	_c @ sp[(-4)+-4]
  8790                           ;stkvar	_n @ sp[(-4)+-6]
  8791                           ;stkvar	_s @ sp[(-4)+0]
  8792  0038A4  0EFC               	movlw	-4
  8793  0038A6  006F FF8C  F043    	movff	plusw1,btemp+10
  8794  0038AC  0EFD               	movlw	-3
  8795  0038AE  006F FF8C  F044    	movff	plusw1,btemp+11
  8796  0038B4  0EF6               	movlw	-10
  8797  0038B6  50E3               	movf	plusw1,w,c
  8798  0038B8  2643               	addwf	btemp+10,f,c
  8799  0038BA  0EF7               	movlw	-9
  8800  0038BC  50E3               	movf	plusw1,w,c
  8801  0038BE  2244               	addwfc	btemp+11,f,c
  8802  0038C0  0EFD               	movlw	253
  8803  0038C2  2443               	addwf	btemp+10,w,c
  8804  0038C4  6ED9               	movwf	fsr2l,c
  8805  0038C6  0EFF               	movlw	255
  8806  0038C8  2044               	addwfc	btemp+11,w,c
  8807  0038CA  6EDA               	movwf	fsr2h,c
  8808  0038CC  0EF8               	movlw	-8
  8809  0038CE  006F FF8F FFDF     	movff	plusw1,indf2
  8810                           
  8811                           ;stkvar	_n @ sp[(-4)+-6]
  8812  0038D4  0EF7               	movlw	-9
  8813  0038D6  50E3               	movf	plusw1,w,c
  8814  0038D8  E108               	bnz	l8357
  8815  0038DA  0EF6               	movlw	-10
  8816  0038DC  006F FF8C  F039    	movff	plusw1,btemp
  8817  0038E2  0E07               	movlw	7
  8818  0038E4  5E39               	subwf	btemp,f,c
  8819  0038E6  A0D8               	btfss	status,0,c
  8820  0038E8  D0C6               	goto	u5170
  8821  0038EA                     l8357:
  8822                           
  8823                           ;stkvar	_c @ sp[(-4)+-4]
  8824                           ;stkvar	_s @ sp[(-4)+0]
  8825  0038EA  0EFC               	movlw	-4
  8826  0038EC  006F FF8C  F043    	movff	plusw1,btemp+10
  8827  0038F2  0EFD               	movlw	-3
  8828  0038F4  006F FF8C  F044    	movff	plusw1,btemp+11
  8829  0038FA  0E03               	movlw	3
  8830  0038FC  2443               	addwf	btemp+10,w,c
  8831  0038FE  6ED9               	movwf	fsr2l,c
  8832  003900  0E00               	movlw	0
  8833  003902  2044               	addwfc	btemp+11,w,c
  8834  003904  6EDA               	movwf	fsr2h,c
  8835  003906  0EF8               	movlw	-8
  8836  003908  006F FF8F FFDF     	movff	plusw1,indf2
  8837                           
  8838                           ;stkvar	_c @ sp[(-4)+-4]
  8839                           ;stkvar	_n @ sp[(-4)+-6]
  8840                           ;stkvar	_s @ sp[(-4)+0]
  8841  00390E  0EFC               	movlw	-4
  8842  003910  006F FF8C  F043    	movff	plusw1,btemp+10
  8843  003916  0EFD               	movlw	-3
  8844  003918  006F FF8C  F044    	movff	plusw1,btemp+11
  8845  00391E  0EF6               	movlw	-10
  8846  003920  50E3               	movf	plusw1,w,c
  8847  003922  2643               	addwf	btemp+10,f,c
  8848  003924  0EF7               	movlw	-9
  8849  003926  50E3               	movf	plusw1,w,c
  8850  003928  2244               	addwfc	btemp+11,f,c
  8851  00392A  0EFC               	movlw	252
  8852  00392C  2443               	addwf	btemp+10,w,c
  8853  00392E  6ED9               	movwf	fsr2l,c
  8854  003930  0EFF               	movlw	255
  8855  003932  2044               	addwfc	btemp+11,w,c
  8856  003934  6EDA               	movwf	fsr2h,c
  8857  003936  0EF8               	movlw	-8
  8858  003938  006F FF8F FFDF     	movff	plusw1,indf2
  8859                           
  8860                           ;stkvar	_n @ sp[(-4)+-6]
  8861  00393E  0EF7               	movlw	-9
  8862  003940  50E3               	movf	plusw1,w,c
  8863  003942  E108               	bnz	l8363
  8864  003944  0EF6               	movlw	-10
  8865  003946  006F FF8C  F039    	movff	plusw1,btemp
  8866  00394C  0E09               	movlw	9
  8867  00394E  5E39               	subwf	btemp,f,c
  8868  003950  A0D8               	btfss	status,0,c
  8869  003952  D091               	goto	u5170
  8870  003954                     l8363:
  8871                           
  8872                           ;stkvar	_s @ sp[(-4)+0]
  8873  003954  0EFC               	movlw	-4
  8874  003956  006F FF8C  F043    	movff	plusw1,btemp+10
  8875  00395C  1E43               	comf	btemp+10,f,c
  8876  00395E  0EFD               	movlw	-3
  8877  003960  006F FF8C  F044    	movff	plusw1,btemp+11
  8878  003966  1E44               	comf	btemp+11,f,c
  8879  003968  2A43               	incf	btemp+10,f,c
  8880  00396A  B4D8               	btfsc	status,2,c
  8881  00396C  2A44               	incf	btemp+11,f,c
  8882  00396E  0E03               	movlw	3
  8883  003970  1643               	andwf	btemp+10,f,c
  8884  003972  0E00               	movlw	0
  8885  003974  1644               	andwf	btemp+11,f,c
  8886                           
  8887                           ;stkvar	_k @ sp[(-4)+2]
  8888  003976  0EFE               	movlw	-2
  8889  003978  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8890  00397E  0EFF               	movlw	-1
  8891  003980  0060  F113  FFE3   	movff	btemp+11,plusw1
  8892                           
  8893                           ;stkvar	_k @ sp[(-4)+2]
  8894                           ;stkvar	_s @ sp[(-4)+0]
  8895  003986  0EFC               	movlw	-4
  8896  003988  50E3               	movf	plusw1,w,c
  8897  00398A  6E39               	movwf	btemp,c
  8898  00398C  0EFE               	movlw	-2
  8899  00398E  50E3               	movf	plusw1,w,c
  8900  003990  2639               	addwf	btemp,f,c
  8901  003992  0EFC               	movlw	-4
  8902  003994  0060  F0E7  FFE3   	movff	btemp,plusw1
  8903  00399A  0EFD               	movlw	-3
  8904  00399C  50E3               	movf	plusw1,w,c
  8905  00399E  6E39               	movwf	btemp,c
  8906  0039A0  0EFF               	movlw	-1
  8907  0039A2  50E3               	movf	plusw1,w,c
  8908  0039A4  2239               	addwfc	btemp,f,c
  8909  0039A6  0EFD               	movlw	-3
  8910  0039A8  0060  F0E7  FFE3   	movff	btemp,plusw1
  8911                           
  8912                           ;stkvar	_k @ sp[(-4)+2]
  8913                           ;stkvar	_n @ sp[(-4)+-6]
  8914  0039AE  0EF6               	movlw	-10
  8915  0039B0  50E3               	movf	plusw1,w,c
  8916  0039B2  6E39               	movwf	btemp,c
  8917  0039B4  0EFE               	movlw	-2
  8918  0039B6  50E3               	movf	plusw1,w,c
  8919  0039B8  5E39               	subwf	btemp,f,c
  8920  0039BA  0EF6               	movlw	-10
  8921  0039BC  0060  F0E7  FFE3   	movff	btemp,plusw1
  8922  0039C2  0EF7               	movlw	-9
  8923  0039C4  50E3               	movf	plusw1,w,c
  8924  0039C6  6E39               	movwf	btemp,c
  8925  0039C8  0EFF               	movlw	-1
  8926  0039CA  50E3               	movf	plusw1,w,c
  8927  0039CC  5A39               	subwfb	btemp,f,c
  8928  0039CE  0EF7               	movlw	-9
  8929  0039D0  0060  F0E7  FFE3   	movff	btemp,plusw1
  8930  0039D6  0EFC               	movlw	252
  8931  0039D8  6E43               	movwf	btemp+10,c
  8932  0039DA  0EFF               	movlw	255
  8933  0039DC  6E44               	movwf	btemp+11,c
  8934                           
  8935                           ;stkvar	_n @ sp[(-4)+-6]
  8936  0039DE  0EF6               	movlw	-10
  8937  0039E0  006F FF8C  F039    	movff	plusw1,btemp
  8938  0039E6  5043               	movf	btemp+10,w,c
  8939  0039E8  1639               	andwf	btemp,f,c
  8940  0039EA  0EF6               	movlw	-10
  8941  0039EC  0060  F0E7  FFE3   	movff	btemp,plusw1
  8942  0039F2  0EF7               	movlw	-9
  8943  0039F4  006F FF8C  F039    	movff	plusw1,btemp
  8944  0039FA  5044               	movf	btemp+11,w,c
  8945  0039FC  1639               	andwf	btemp,f,c
  8946  0039FE  0EF7               	movlw	-9
  8947  003A00  D02E               	goto	L23
  8948  003A02                     l8371:
  8949                           
  8950                           ;stkvar	_c @ sp[(-4)+-4]
  8951                           ;stkvar	_s @ sp[(-4)+0]
  8952  003A02  0EFC               	movlw	-4
  8953  003A04  006F FF8F FFD9     	movff	plusw1,fsr2l
  8954  003A0A  0EFD               	movlw	-3
  8955  003A0C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8956  003A12  0EF8               	movlw	-8
  8957  003A14  006F FF8F FFDF     	movff	plusw1,indf2
  8958                           
  8959                           ;stkvar	_n @ sp[(-4)+-6]
  8960  003A1A  0EF6               	movlw	-10
  8961  003A1C  006F FF8C  F039    	movff	plusw1,btemp
  8962  003A22  0E01               	movlw	1
  8963  003A24  5E39               	subwf	btemp,f,c
  8964  003A26  0EF6               	movlw	-10
  8965  003A28  0060  F0E7  FFE3   	movff	btemp,plusw1
  8966  003A2E  0EF7               	movlw	-9
  8967  003A30  006F FF8C  F039    	movff	plusw1,btemp
  8968  003A36  0E00               	movlw	0
  8969  003A38  5A39               	subwfb	btemp,f,c
  8970  003A3A  0EF7               	movlw	-9
  8971  003A3C  0060  F0E7  FFE3   	movff	btemp,plusw1
  8972                           
  8973                           ;stkvar	_s @ sp[(-4)+0]
  8974  003A42  0EFC               	movlw	-4
  8975  003A44  50E3               	movf	plusw1,w,c
  8976  003A46  0F01               	addlw	1
  8977  003A48  6E39               	movwf	btemp,c
  8978  003A4A  0EFC               	movlw	-4
  8979  003A4C  0060  F0E7  FFE3   	movff	btemp,plusw1
  8980  003A52  6A39               	clrf	btemp,c
  8981  003A54  0EFD               	movlw	-3
  8982  003A56  50E3               	movf	plusw1,w,c
  8983  003A58  2039               	addwfc	btemp,w,c
  8984  003A5A  6E39               	movwf	btemp,c
  8985  003A5C  0EFD               	movlw	-3
  8986  003A5E                     L23:
  8987  003A5E  0060  F0E7  FFE3   	movff	btemp,plusw1
  8988                           
  8989                           ;stkvar	_n @ sp[(-4)+-6]
  8990  003A64  0EF6               	movlw	-10
  8991  003A66  006F FF8C  F039    	movff	plusw1,btemp
  8992  003A6C  0EF7               	movlw	-9
  8993  003A6E  50E3               	movf	plusw1,w,c
  8994  003A70  1039               	iorwf	btemp,w,c
  8995  003A72  A4D8               	btfss	status,2,c
  8996  003A74  D7C6               	goto	l8371
  8997  003A76                     u5170:
  8998                           
  8999                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9000  003A76  0EF6               	movlw	246
  9001  003A78  26E1               	addwf	fsr1l,f,c
  9002  003A7A  0EFF               	movlw	255
  9003  003A7C  22E2               	addwfc	fsr1h,f,c
  9004  003A7E  0012               	return		;funcret
  9005  003A80                     __end_of_memset:
  9006                           	opt callstack 0
  9007                           
  9008 ;; *************** function _printf *****************
  9009 ;; Defined at:
  9010 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  fmt             1  [STACK] PTR const unsigned char 
  9013 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  ap              2  [STACK] PTR void [1]
  9016 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9017 ;;  ret             2    0        int 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  2  [STACK] int 
  9020 ;; Registers used:
  9021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9022 ;; Tracked objects:
  9023 ;;		On entry : 3F/3B
  9024 ;;		On exit  : 3F/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9031 ;;Total ram usage:        0 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:   11
  9034 ;; This function calls:
  9035 ;;		_vfprintf
  9036 ;; This function is called by:
  9037 ;;		_eaDogM_WriteString
  9038 ;;		_send_lcd_cmd_dma
  9039 ;; This function uses a reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text38
  9043  005808                     __ptext38:
  9044                           	opt callstack 0
  9045  005808                     _printf:
  9046                           	opt callstack 0
  9047                           
  9048                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9049  005808  52E6               	movf	postinc1,f,c
  9050  00580A  52E6               	movf	postinc1,f,c
  9051                           
  9052                           ;stkvar	?_printf @ sp[(-2)+-3]
  9053                           
  9054                           ;incstack = 0
  9055  00580C  0EFB               	movlw	251
  9056  00580E  24E1               	addwf	fsr1l,w,c
  9057  005810  6E43               	movwf	btemp+10,c
  9058  005812  0EFF               	movlw	255
  9059  005814  20E2               	addwfc	fsr1h,w,c
  9060  005816  6E44               	movwf	btemp+11,c
  9061  005818  0E01               	movlw	1
  9062  00581A  2643               	addwf	btemp+10,f,c
  9063  00581C  0E00               	movlw	0
  9064  00581E  2244               	addwfc	btemp+11,f,c
  9065                           
  9066                           ;stkvar	_ap @ sp[(-2)+0]
  9067  005820  0EFF               	movlw	-1
  9068  005822  0060  F113  FFE3   	movff	btemp+11,plusw1
  9069  005828  0EFE               	movlw	-2
  9070  00582A  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9071                           
  9072                           ;stkvar	_ap @ sp[(-2)+0]
  9073  005830  0EFE               	movlw	254
  9074  005832  24E1               	addwf	fsr1l,w,c
  9075  005834  6E39               	movwf	btemp,c
  9076  005836  0EFF               	movlw	255
  9077  005838  20E2               	addwfc	fsr1h,w,c
  9078  00583A  6E3A               	movwf	btemp+1,c
  9079  00583C  0060  F0E7  FFE6   	movff	btemp,postinc1
  9080  005842  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  9081                           
  9082                           ;stkvar	_fmt @ sp[(-4)+-2]
  9083  005848  0EFA               	movlw	-6
  9084  00584A  50E3               	movf	plusw1,w,c
  9085  00584C  6EE6               	movwf	postinc1,c
  9086  00584E  0E00               	movlw	0
  9087  005850  6EE6               	movwf	postinc1,c
  9088  005852  0E00               	movlw	0
  9089  005854  6EE6               	movwf	postinc1,c
  9090  005856  EC45  F02A         	call	_vfprintf	;wreg free
  9091                           
  9092                           ; BSR set to: 0
  9093                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  9094  00585A  52E5               	movf	postdec1,f,c
  9095  00585C  52E5               	movf	postdec1,f,c
  9096  00585E  52E5               	movf	postdec1,f,c
  9097  005860  50E7               	movf	indf1,w,c
  9098  005862  5EE1               	subwf	fsr1l,f,c
  9099  005864  0E00               	movlw	0
  9100  005866  5AE2               	subwfb	fsr1h,f,c
  9101  005868  0012               	return		;funcret
  9102  00586A                     __end_of_printf:
  9103                           	opt callstack 0
  9104                           
  9105 ;; *************** function _vfprintf *****************
  9106 ;; Defined at:
  9107 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9110 ;;		 -> f(5), NULL(0), 
  9111 ;;  fmt             1  [STACK] PTR const unsigned char 
  9112 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9113 ;;		 -> STR_14(21), STR_13(6), STR_12(19), STR_11(21), 
  9114 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9115 ;;		 -> STR_6(14), STR_5(20), STR_4(15), STR_2(12), 
  9116 ;;		 -> STR_1(17), 
  9117 ;;  ap              2  [STACK] PTR PTR void 
  9118 ;;		 -> ap(2), ap(2), 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;  cfmt            1  [STACK] PTR unsigned char 
  9121 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9122 ;;		 -> STR_14(21), STR_13(6), STR_12(19), STR_11(21), 
  9123 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9124 ;;		 -> STR_6(14), STR_5(20), STR_4(15), STR_2(12), 
  9125 ;;		 -> STR_1(17), 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  2  [STACK] int 
  9128 ;; Registers used:
  9129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 3F/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9139 ;;Total ram usage:        0 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:   10
  9142 ;; This function calls:
  9143 ;;		_vfpfcnvrt
  9144 ;; This function is called by:
  9145 ;;		_sprintf
  9146 ;;		_printf
  9147 ;; This function uses a reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text39
  9151  00548A                     __ptext39:
  9152                           	opt callstack 0
  9153  00548A                     _vfprintf:
  9154                           	opt callstack 0
  9155                           
  9156                           ; BSR set to: 0
  9157                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9158  00548A  52E6               	movf	postinc1,f,c
  9159                           
  9160                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9161                           ;stkvar	_fmt @ sp[(-1)+-3]
  9162                           
  9163                           ;incstack = 0
  9164  00548C  0EFC               	movlw	-4
  9165  00548E  006F FF8C  F044    	movff	plusw1,btemp+11
  9166                           
  9167                           ;stkvar	_cfmt @ sp[(-1)+0]
  9168  005494  0EFF               	movlw	-1
  9169  005496  0060  F113  FFE3   	movff	btemp+11,plusw1
  9170                           
  9171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9172  00549C  0100               	movlb	0	; () banked
  9173  00549E  6BF7               	clrf	_nout& (0+255),b
  9174  0054A0  6BF8               	clrf	(_nout+1)& (0+255),b
  9175                           
  9176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9177  0054A2  D021               	goto	l8385
  9178  0054A4                     l8383:
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9182                           ;stkvar	_ap @ sp[(-1)+-5]
  9183  0054A4  0EFA               	movlw	-6
  9184  0054A6  006F FF8F FFE6     	movff	plusw1,postinc1
  9185  0054AC  006F FF8F FFE6     	movff	plusw1,postinc1
  9186                           
  9187                           ;stkvar	_cfmt @ sp[(-3)+0]
  9188  0054B2  0EFD               	movlw	253
  9189  0054B4  24E1               	addwf	fsr1l,w,c
  9190  0054B6  6E39               	movwf	btemp,c
  9191  0054B8  0EFF               	movlw	255
  9192  0054BA  20E2               	addwfc	fsr1h,w,c
  9193  0054BC  6E3A               	movwf	btemp+1,c
  9194  0054BE  0060  F0E7  FFE6   	movff	btemp,postinc1
  9195  0054C4  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  9196                           
  9197                           ;stkvar	_fp @ sp[(-5)+-2]
  9198  0054CA  0EF9               	movlw	-7
  9199  0054CC  006F FF8F FFE6     	movff	plusw1,postinc1
  9200  0054D2  006F FF8F FFE6     	movff	plusw1,postinc1
  9201  0054D8  EC8F  F015         	call	_vfpfcnvrt	;wreg free
  9202  0054DC  5039               	movf	btemp,w,c
  9203  0054DE  0100               	movlb	0	; () banked
  9204  0054E0  27F7               	addwf	_nout& (0+255),f,b
  9205  0054E2  503A               	movf	btemp+1,w,c
  9206  0054E4  23F8               	addwfc	(_nout+1)& (0+255),f,b
  9207  0054E6                     l8385:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9211                           ;stkvar	_cfmt @ sp[(-1)+0]
  9212  0054E6  50E1               	movf	fsr1l,w,c
  9213  0054E8  0FFF               	addlw	-1
  9214  0054EA  6ED9               	movwf	fsr2l,c
  9215  0054EC  50E2               	movf	fsr1h,w,c
  9216  0054EE  6EDA               	movwf	fsr2h,c
  9217  0054F0  0EFF               	movlw	255
  9218  0054F2  22DA               	addwfc	fsr2h,f,c
  9219  0054F4  006F FF7F FFF6     	movff	indf2,tblptrl
  9220  0054FA                     	if	1	;There is more than 1 active tblptr byte
  9221  0054FA  0E20               	movlw	high __smallconst
  9222  0054FC  6EF7               	movwf	tblptrh,c
  9223  0054FE                     	endif
  9224  0054FE                     	if	0	;tblptru may be non-zero
  9225  0054FE                     	endif
  9226  0054FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9227  0054FE  0E00               	movlw	low (__smallconst shr (0+16))
  9228  005500  6EF8               	movwf	tblptru,c
  9229  005502                     	endif
  9230  005502  0008               	tblrd		*
  9231  005504  50F5               	movf	tablat,w,c
  9232  005506  0900               	iorlw	0
  9233  005508  A4D8               	btfss	status,2,c
  9234  00550A  D7CC               	goto	l8383
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9238  00550C  0060  F3DC  F039   	movff	_nout,btemp
  9239  005512  0060  F3E0  F03A   	movff	_nout+1,btemp+1
  9240                           
  9241                           ; BSR set to: 0
  9242                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9243  005518  0EFA               	movlw	250
  9244  00551A  26E1               	addwf	fsr1l,f,c
  9245  00551C  0EFF               	movlw	255
  9246  00551E  22E2               	addwfc	fsr1h,f,c
  9247  005520  0012               	return		;funcret
  9248  005522                     __end_of_vfprintf:
  9249                           	opt callstack 0
  9250                           
  9251 ;; *************** function _vfpfcnvrt *****************
  9252 ;; Defined at:
  9253 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9256 ;;		 -> f(5), NULL(0), 
  9257 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9258 ;;		 -> cfmt(1), 
  9259 ;;  ap              2  [STACK] PTR PTR void 
  9260 ;;		 -> ap(2), ap(2), 
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;  ll              8  [STACK] long long 
  9263 ;;  llu             8    0        unsigned long long 
  9264 ;;  f               4    0        unsigned long long 
  9265 ;;  vp              3    0        PTR void 
  9266 ;;  ct              3    0        unsigned char [3]
  9267 ;;  cp              2  [STACK] PTR unsigned char 
  9268 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(94), 
  9269 ;;  i               2    0        int 
  9270 ;;  done            2    0        int 
  9271 ;;  c               1  [STACK] unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  2  [STACK] int 
  9274 ;; Registers used:
  9275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9285 ;;Total ram usage:        0 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    9
  9288 ;; This function calls:
  9289 ;;		_ctoa
  9290 ;;		_dtoa
  9291 ;;		_fputc
  9292 ;;		_stoa
  9293 ;;		_strncmp
  9294 ;; This function is called by:
  9295 ;;		_vfprintf
  9296 ;; This function uses a reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text40
  9300  002B1E                     __ptext40:
  9301                           	opt callstack 0
  9302  002B1E                     _vfpfcnvrt:
  9303                           	opt callstack 0
  9304                           
  9305                           ; BSR set to: 0
  9306                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9307  002B1E  0E0B               	movlw	11
  9308  002B20  26E1               	addwf	fsr1l,f,c
  9309  002B22  0E00               	movlw	0
  9310  002B24  22E2               	addwfc	fsr1h,f,c
  9311                           
  9312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9313                           ;stkvar	_fmt @ sp[(-11)+-4]
  9314                           
  9315                           ;incstack = 0
  9316  002B26  0EF1               	movlw	-15
  9317  002B28  006F FF8F FFD9     	movff	plusw1,fsr2l
  9318  002B2E  0EF2               	movlw	-14
  9319  002B30  006F FF8F FFDA     	movff	plusw1,fsr2h
  9320  002B36  006F FF7F FFF6     	movff	indf2,tblptrl
  9321  002B3C                     	if	1	;There is more than 1 active tblptr byte
  9322  002B3C  0E20               	movlw	high __smallconst
  9323  002B3E  6EF7               	movwf	tblptrh,c
  9324  002B40                     	endif
  9325  002B40                     	if	0	;tblptru may be non-zero
  9326  002B40                     	endif
  9327  002B40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9328  002B40  0E00               	movlw	low (__smallconst shr (0+16))
  9329  002B42  6EF8               	movwf	tblptru,c
  9330  002B44                     	endif
  9331  002B44  0008               	tblrd		*
  9332  002B46  50F5               	movf	tablat,w,c
  9333  002B48  0A25               	xorlw	37
  9334  002B4A  A4D8               	btfss	status,2,c
  9335  002B4C  D213               	goto	l8329
  9336                           
  9337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9338                           ;stkvar	_fmt @ sp[(-11)+-4]
  9339  002B4E  0EF1               	movlw	-15
  9340  002B50  006F FF8F FFD9     	movff	plusw1,fsr2l
  9341  002B56  0EF2               	movlw	-14
  9342  002B58  006F FF8F FFDA     	movff	plusw1,fsr2h
  9343  002B5E  2ADF               	incf	indf2,f,c
  9344                           
  9345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9346  002B60  6A1D               	clrf	_width,c
  9347  002B62  6A1E               	clrf	_width+1,c
  9348  002B64  6A21               	clrf	_flags,c
  9349  002B66  6A22               	clrf	_flags+1,c
  9350                           
  9351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9352  002B68  681F               	setf	_prec,c
  9353  002B6A  6820               	setf	_prec+1,c
  9354                           
  9355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9356                           ;stkvar	_fmt @ sp[(-11)+-4]
  9357  002B6C  0EF1               	movlw	-15
  9358  002B6E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9359  002B74  0EF2               	movlw	-14
  9360  002B76  006F FF8F FFDA     	movff	plusw1,fsr2h
  9361  002B7C  006F FF7F FFF6     	movff	indf2,tblptrl
  9362  002B82                     	if	1	;There is more than 1 active tblptr byte
  9363  002B82  0E20               	movlw	high __smallconst
  9364  002B84  6EF7               	movwf	tblptrh,c
  9365  002B86                     	endif
  9366  002B86                     	if	0	;tblptru may be non-zero
  9367  002B86                     	endif
  9368  002B86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9369  002B86  0E00               	movlw	low (__smallconst shr (0+16))
  9370  002B88  6EF8               	movwf	tblptru,c
  9371  002B8A                     	endif
  9372  002B8A  0008               	tblrd		*
  9373  002B8C  50F5               	movf	tablat,w,c
  9374  002B8E  0A63               	xorlw	99
  9375  002B90  A4D8               	btfss	status,2,c
  9376  002B92  D034               	goto	l8279
  9377                           
  9378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9379                           ;stkvar	_fmt @ sp[(-11)+-4]
  9380  002B94  0EF1               	movlw	-15
  9381  002B96  006F FF8F FFD9     	movff	plusw1,fsr2l
  9382  002B9C  0EF2               	movlw	-14
  9383  002B9E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9384  002BA4  2ADF               	incf	indf2,f,c
  9385                           
  9386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9387                           ;stkvar	_ap @ sp[(-11)+-6]
  9388  002BA6  0EEF               	movlw	-17
  9389  002BA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9390  002BAE  0EF0               	movlw	-16
  9391  002BB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9392  002BB6  0E02               	movlw	2
  9393  002BB8  5EDE               	subwf	postinc2,f,c
  9394  002BBA  0E00               	movlw	0
  9395  002BBC  5ADD               	subwfb	postdec2,f,c
  9396  002BBE  006F FF78  F043    	movff	postinc2,btemp+10
  9397  002BC4  006F FF74  F044    	movff	postdec2,btemp+11
  9398  002BCA  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9399  002BD0  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9400  002BD6  50DF               	movf	indf2,w,c
  9401  002BD8  6E44               	movwf	btemp+11,c
  9402                           
  9403                           ;stkvar	_c @ sp[(-11)+10]
  9404  002BDA  0EFF               	movlw	-1
  9405  002BDC  0060  F113  FFE3   	movff	btemp+11,plusw1
  9406                           
  9407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9408                           ;stkvar	_c @ sp[(-11)+10]
  9409  002BE2  0EFF               	movlw	-1
  9410  002BE4  50E3               	movf	plusw1,w,c
  9411  002BE6  6EE6               	movwf	postinc1,c
  9412                           
  9413                           ;stkvar	_fp @ sp[(-12)+-2]
  9414  002BE8  0EF2               	movlw	-14
  9415  002BEA  006F FF8F FFE6     	movff	plusw1,postinc1
  9416  002BF0  006F FF8F FFE6     	movff	plusw1,postinc1
  9417  002BF6  EC26  F02B         	call	_ctoa	;wreg free
  9418  002BFA  D1E3               	goto	l1911
  9419  002BFC                     l8279:
  9420                           
  9421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9422                           ;stkvar	_fmt @ sp[(-11)+-4]
  9423  002BFC  0EF1               	movlw	-15
  9424  002BFE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9425  002C04  0EF2               	movlw	-14
  9426  002C06  006F FF8F FFDA     	movff	plusw1,fsr2h
  9427  002C0C  006F FF7F FFF6     	movff	indf2,tblptrl
  9428  002C12                     	if	1	;There is more than 1 active tblptr byte
  9429  002C12  0E20               	movlw	high __smallconst
  9430  002C14  6EF7               	movwf	tblptrh,c
  9431  002C16                     	endif
  9432  002C16                     	if	0	;tblptru may be non-zero
  9433  002C16                     	endif
  9434  002C16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9435  002C16  0E00               	movlw	low (__smallconst shr (0+16))
  9436  002C18  6EF8               	movwf	tblptru,c
  9437  002C1A                     	endif
  9438  002C1A  0008               	tblrd		*
  9439  002C1C  50F5               	movf	tablat,w,c
  9440  002C1E  0A64               	xorlw	100
  9441  002C20  B4D8               	btfsc	status,2,c
  9442  002C22  D014               	goto	u5080
  9443                           
  9444                           ;stkvar	_fmt @ sp[(-11)+-4]
  9445  002C24  0EF1               	movlw	-15
  9446  002C26  006F FF8F FFD9     	movff	plusw1,fsr2l
  9447  002C2C  0EF2               	movlw	-14
  9448  002C2E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9449  002C34  006F FF7F FFF6     	movff	indf2,tblptrl
  9450  002C3A                     	if	1	;There is more than 1 active tblptr byte
  9451  002C3A  0E20               	movlw	high __smallconst
  9452  002C3C  6EF7               	movwf	tblptrh,c
  9453  002C3E                     	endif
  9454  002C3E                     	if	0	;tblptru may be non-zero
  9455  002C3E                     	endif
  9456  002C3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9457  002C3E  0E00               	movlw	low (__smallconst shr (0+16))
  9458  002C40  6EF8               	movwf	tblptru,c
  9459  002C42                     	endif
  9460  002C42  0008               	tblrd		*
  9461  002C44  50F5               	movf	tablat,w,c
  9462  002C46  0A69               	xorlw	105
  9463  002C48  A4D8               	btfss	status,2,c
  9464  002C4A  D073               	goto	l8291
  9465  002C4C                     u5080:
  9466                           
  9467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9468                           ;stkvar	_fmt @ sp[(-11)+-4]
  9469  002C4C  0EF1               	movlw	-15
  9470  002C4E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9471  002C54  0EF2               	movlw	-14
  9472  002C56  006F FF8F FFDA     	movff	plusw1,fsr2h
  9473  002C5C  2ADF               	incf	indf2,f,c
  9474                           
  9475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9476                           ;stkvar	_ap @ sp[(-11)+-6]
  9477  002C5E  0EEF               	movlw	-17
  9478  002C60  006F FF8F FFD9     	movff	plusw1,fsr2l
  9479  002C66  0EF0               	movlw	-16
  9480  002C68  006F FF8F FFDA     	movff	plusw1,fsr2h
  9481  002C6E  0E02               	movlw	2
  9482  002C70  5EDE               	subwf	postinc2,f,c
  9483  002C72  0E00               	movlw	0
  9484  002C74  5ADD               	subwfb	postdec2,f,c
  9485  002C76  006F FF78  F043    	movff	postinc2,btemp+10
  9486  002C7C  006F FF74  F044    	movff	postdec2,btemp+11
  9487  002C82  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9488  002C88  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9489  002C8E  006F FF78  F043    	movff	postinc2,btemp+10
  9490  002C94  006F FF74  F044    	movff	postdec2,btemp+11
  9491                           
  9492                           ;stkvar	_ll @ sp[(-11)+0]
  9493  002C9A  0EF5               	movlw	-11
  9494  002C9C  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9495  002CA2  0EF6               	movlw	-10
  9496  002CA4  0060  F113  FFE3   	movff	btemp+11,plusw1
  9497  002CAA  6A39               	clrf	btemp,c
  9498  002CAC  BEE3               	btfsc	plusw1,7,c
  9499  002CAE  6839               	setf	btemp,c
  9500  002CB0  0EF7               	movlw	-9
  9501  002CB2  0060  F0E7  FFE3   	movff	btemp,plusw1
  9502  002CB8  0EF8               	movlw	-8
  9503  002CBA  0060  F0E7  FFE3   	movff	btemp,plusw1
  9504  002CC0  0EF9               	movlw	-7
  9505  002CC2  0060  F0E7  FFE3   	movff	btemp,plusw1
  9506  002CC8  0EFA               	movlw	-6
  9507  002CCA  0060  F0E7  FFE3   	movff	btemp,plusw1
  9508  002CD0  0EFB               	movlw	-5
  9509  002CD2  0060  F0E7  FFE3   	movff	btemp,plusw1
  9510  002CD8  0EFC               	movlw	-4
  9511  002CDA  0060  F0E7  FFE3   	movff	btemp,plusw1
  9512  002CE0                     l8287:
  9513                           
  9514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9515                           ;stkvar	_ll @ sp[(-11)+0]
  9516  002CE0  50E1               	movf	fsr1l,w,c
  9517  002CE2  0FF5               	addlw	-11
  9518  002CE4  6ED9               	movwf	fsr2l,c
  9519  002CE6  50E2               	movf	fsr1h,w,c
  9520  002CE8  6EDA               	movwf	fsr2h,c
  9521  002CEA  0EFF               	movlw	255
  9522  002CEC  22DA               	addwfc	fsr2h,f,c
  9523  002CEE  006F FF7B FFE6     	movff	postinc2,postinc1
  9524  002CF4  006F FF7B FFE6     	movff	postinc2,postinc1
  9525  002CFA  006F FF7B FFE6     	movff	postinc2,postinc1
  9526  002D00  006F FF7B FFE6     	movff	postinc2,postinc1
  9527  002D06  006F FF7B FFE6     	movff	postinc2,postinc1
  9528  002D0C  006F FF7B FFE6     	movff	postinc2,postinc1
  9529  002D12  006F FF7B FFE6     	movff	postinc2,postinc1
  9530  002D18  006F FF7B FFE6     	movff	postinc2,postinc1
  9531                           
  9532                           ;stkvar	_fp @ sp[(-19)+-2]
  9533  002D1E  0EEB               	movlw	-21
  9534  002D20  006F FF8F FFE6     	movff	plusw1,postinc1
  9535  002D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9536  002D2C  ECE6  F017         	call	_dtoa	;wreg free
  9537  002D30  D148               	goto	l1911
  9538  002D32                     l8291:
  9539                           
  9540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9541  002D32  0E02               	movlw	2
  9542  002D34  6EE6               	movwf	postinc1,c
  9543  002D36  0E00               	movlw	0
  9544  002D38  6EE6               	movwf	postinc1,c
  9545  002D3A  0EB5               	movlw	STR_19& (0+255)
  9546  002D3C  6EE6               	movwf	postinc1,c
  9547                           
  9548                           ;stkvar	_fmt @ sp[(-14)+-4]
  9549  002D3E  0EEE               	movlw	-18
  9550  002D40  006F FF8F FFD9     	movff	plusw1,fsr2l
  9551  002D46  0EEF               	movlw	-17
  9552  002D48  006F FF8F FFDA     	movff	plusw1,fsr2h
  9553  002D4E  50DF               	movf	indf2,w,c
  9554  002D50  6EE6               	movwf	postinc1,c
  9555  002D52  ECA4  F024         	call	_strncmp	;wreg free
  9556  002D56  5039               	movf	btemp,w,c
  9557  002D58  103A               	iorwf	btemp+1,w,c
  9558  002D5A  B4D8               	btfsc	status,2,c
  9559  002D5C  D016               	goto	u5100
  9560  002D5E  0E02               	movlw	2
  9561  002D60  6EE6               	movwf	postinc1,c
  9562  002D62  0E00               	movlw	0
  9563  002D64  6EE6               	movwf	postinc1,c
  9564  002D66  0EB8               	movlw	STR_23& (0+255)
  9565  002D68  6EE6               	movwf	postinc1,c
  9566                           
  9567                           ;stkvar	_fmt @ sp[(-14)+-4]
  9568  002D6A  0EEE               	movlw	-18
  9569  002D6C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9570  002D72  0EEF               	movlw	-17
  9571  002D74  006F FF8F FFDA     	movff	plusw1,fsr2h
  9572  002D7A  50DF               	movf	indf2,w,c
  9573  002D7C  6EE6               	movwf	postinc1,c
  9574  002D7E  ECA4  F024         	call	_strncmp	;wreg free
  9575  002D82  5039               	movf	btemp,w,c
  9576  002D84  103A               	iorwf	btemp+1,w,c
  9577  002D86  A4D8               	btfss	status,2,c
  9578  002D88  D067               	goto	l8303
  9579  002D8A                     u5100:
  9580                           
  9581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9582                           ;stkvar	_fmt @ sp[(-11)+-4]
  9583  002D8A  0EF1               	movlw	-15
  9584  002D8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9585  002D92  0EF2               	movlw	-14
  9586  002D94  006F FF8F FFDA     	movff	plusw1,fsr2h
  9587  002D9A  0E02               	movlw	2
  9588  002D9C  26DF               	addwf	indf2,f,c
  9589                           
  9590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9591                           ;stkvar	_ap @ sp[(-11)+-6]
  9592  002D9E  0EEF               	movlw	-17
  9593  002DA0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9594  002DA6  0EF0               	movlw	-16
  9595  002DA8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9596  002DAE  0E04               	movlw	4
  9597  002DB0  5EDE               	subwf	postinc2,f,c
  9598  002DB2  0E00               	movlw	0
  9599  002DB4  5ADD               	subwfb	postdec2,f,c
  9600  002DB6  006F FF78  F043    	movff	postinc2,btemp+10
  9601  002DBC  006F FF74  F044    	movff	postdec2,btemp+11
  9602  002DC2  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9603  002DC8  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9604  002DCE  006F FF78  F041    	movff	postinc2,btemp+8
  9605  002DD4  006F FF78  F042    	movff	postinc2,btemp+9
  9606  002DDA  006F FF78  F043    	movff	postinc2,btemp+10
  9607  002DE0  006F FF78  F044    	movff	postinc2,btemp+11
  9608  002DE6  0060  F104  F049   	movff	btemp+8,btemp+16
  9609  002DEC  0060  F108  F04A   	movff	btemp+9,btemp+17
  9610  002DF2  0060  F10C  F04B   	movff	btemp+10,btemp+18
  9611  002DF8  0060  F110  F04C   	movff	btemp+11,btemp+19
  9612  002DFE  6A4D               	clrf	btemp+20,c
  9613  002E00  BE4C               	btfsc	btemp+19,7,c
  9614  002E02  684D               	setf	btemp+20,c
  9615  002E04  0060  F134  F04E   	movff	btemp+20,btemp+21
  9616  002E0A  0060  F134  F04F   	movff	btemp+20,btemp+22
  9617  002E10  0060  F134  F050   	movff	btemp+20,btemp+23
  9618                           
  9619                           ;stkvar	_ll @ sp[(-11)+0]
  9620  002E16  0EF5               	movlw	-11
  9621  002E18  0060  F127  FFE3   	movff	btemp+16,plusw1
  9622  002E1E  0EF6               	movlw	-10
  9623  002E20  0060  F12B  FFE3   	movff	btemp+17,plusw1
  9624  002E26  0EF7               	movlw	-9
  9625  002E28  0060  F12F  FFE3   	movff	btemp+18,plusw1
  9626  002E2E  0EF8               	movlw	-8
  9627  002E30  0060  F133  FFE3   	movff	btemp+19,plusw1
  9628  002E36  0EF9               	movlw	-7
  9629  002E38  0060  F137  FFE3   	movff	btemp+20,plusw1
  9630  002E3E  0EFA               	movlw	-6
  9631  002E40  0060  F13B  FFE3   	movff	btemp+21,plusw1
  9632  002E46  0EFB               	movlw	-5
  9633  002E48  0060  F13F  FFE3   	movff	btemp+22,plusw1
  9634  002E4E  0EFC               	movlw	-4
  9635  002E50  0060  F143  FFE3   	movff	btemp+23,plusw1
  9636  002E56  D744               	goto	l8287
  9637  002E58                     l8303:
  9638                           
  9639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9640                           ;stkvar	_fmt @ sp[(-11)+-4]
  9641  002E58  0EF1               	movlw	-15
  9642  002E5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9643  002E60  0EF2               	movlw	-14
  9644  002E62  006F FF8F FFDA     	movff	plusw1,fsr2h
  9645  002E68  006F FF7F FFF6     	movff	indf2,tblptrl
  9646  002E6E                     	if	1	;There is more than 1 active tblptr byte
  9647  002E6E  0E20               	movlw	high __smallconst
  9648  002E70  6EF7               	movwf	tblptrh,c
  9649  002E72                     	endif
  9650  002E72                     	if	0	;tblptru may be non-zero
  9651  002E72                     	endif
  9652  002E72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9653  002E72  0E00               	movlw	low (__smallconst shr (0+16))
  9654  002E74  6EF8               	movwf	tblptru,c
  9655  002E76                     	endif
  9656  002E76  0008               	tblrd		*
  9657  002E78  50F5               	movf	tablat,w,c
  9658  002E7A  0A73               	xorlw	115
  9659  002E7C  A4D8               	btfss	status,2,c
  9660  002E7E  D040               	goto	l8313
  9661                           
  9662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9663                           ;stkvar	_fmt @ sp[(-11)+-4]
  9664  002E80  0EF1               	movlw	-15
  9665  002E82  006F FF8F FFD9     	movff	plusw1,fsr2l
  9666  002E88  0EF2               	movlw	-14
  9667  002E8A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9668  002E90  2ADF               	incf	indf2,f,c
  9669                           
  9670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9671                           ;stkvar	_ap @ sp[(-11)+-6]
  9672  002E92  0EEF               	movlw	-17
  9673  002E94  006F FF8F FFD9     	movff	plusw1,fsr2l
  9674  002E9A  0EF0               	movlw	-16
  9675  002E9C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9676  002EA2  0E02               	movlw	2
  9677  002EA4  5EDE               	subwf	postinc2,f,c
  9678  002EA6  0E00               	movlw	0
  9679  002EA8  5ADD               	subwfb	postdec2,f,c
  9680  002EAA  006F FF78  F043    	movff	postinc2,btemp+10
  9681  002EB0  006F FF74  F044    	movff	postdec2,btemp+11
  9682  002EB6  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9683  002EBC  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9684  002EC2  006F FF78  F043    	movff	postinc2,btemp+10
  9685  002EC8  006F FF74  F044    	movff	postdec2,btemp+11
  9686                           
  9687                           ;stkvar	_cp @ sp[(-11)+8]
  9688  002ECE  0EFE               	movlw	-2
  9689  002ED0  0060  F113  FFE3   	movff	btemp+11,plusw1
  9690  002ED6  0EFD               	movlw	-3
  9691  002ED8  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9692                           
  9693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9694                           ;stkvar	_cp @ sp[(-11)+8]
  9695  002EDE  0EFD               	movlw	-3
  9696  002EE0  006F FF8F FFE6     	movff	plusw1,postinc1
  9697  002EE6  006F FF8F FFE6     	movff	plusw1,postinc1
  9698                           
  9699                           ;stkvar	_fp @ sp[(-13)+-2]
  9700  002EEC  0EF1               	movlw	-15
  9701  002EEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9702  002EF4  006F FF8F FFE6     	movff	plusw1,postinc1
  9703  002EFA  EC40  F01D         	call	_stoa	;wreg free
  9704  002EFE  D061               	goto	l1911
  9705  002F00                     l8313:
  9706                           
  9707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9708                           ;stkvar	_fmt @ sp[(-11)+-4]
  9709  002F00  0EF1               	movlw	-15
  9710  002F02  006F FF8F FFD9     	movff	plusw1,fsr2l
  9711  002F08  0EF2               	movlw	-14
  9712  002F0A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9713  002F10  006F FF7F FFF6     	movff	indf2,tblptrl
  9714  002F16                     	if	1	;There is more than 1 active tblptr byte
  9715  002F16  0E20               	movlw	high __smallconst
  9716  002F18  6EF7               	movwf	tblptrh,c
  9717  002F1A                     	endif
  9718  002F1A                     	if	0	;tblptru may be non-zero
  9719  002F1A                     	endif
  9720  002F1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9721  002F1A  0E00               	movlw	low (__smallconst shr (0+16))
  9722  002F1C  6EF8               	movwf	tblptru,c
  9723  002F1E                     	endif
  9724  002F1E  0008               	tblrd		*
  9725  002F20  50F5               	movf	tablat,w,c
  9726  002F22  0A25               	xorlw	37
  9727  002F24  A4D8               	btfss	status,2,c
  9728  002F26  D018               	goto	l8323
  9729                           
  9730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9731                           ;stkvar	_fmt @ sp[(-11)+-4]
  9732  002F28  0EF1               	movlw	-15
  9733  002F2A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9734  002F30  0EF2               	movlw	-14
  9735  002F32  006F FF8F FFDA     	movff	plusw1,fsr2h
  9736  002F38  2ADF               	incf	indf2,f,c
  9737                           
  9738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9739                           ;stkvar	_fp @ sp[(-11)+-2]
  9740  002F3A  0EF3               	movlw	-13
  9741  002F3C  006F FF8F FFE6     	movff	plusw1,postinc1
  9742  002F42  006F FF8F FFE6     	movff	plusw1,postinc1
  9743  002F48  0E25               	movlw	37
  9744  002F4A  6EE6               	movwf	postinc1,c
  9745  002F4C  0E00               	movlw	0
  9746  002F4E  6EE6               	movwf	postinc1,c
  9747  002F50  ECF6  F025         	call	_fputc	;wreg free
  9748  002F54                     l8319:
  9749                           
  9750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9751  002F54  0E01               	movlw	1
  9752  002F56  D00A               	goto	L24
  9753  002F58                     l8323:
  9754                           
  9755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9756                           ;stkvar	_fmt @ sp[(-11)+-4]
  9757  002F58  0EF1               	movlw	-15
  9758  002F5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9759  002F60  0EF2               	movlw	-14
  9760  002F62  006F FF8F FFDA     	movff	plusw1,fsr2h
  9761  002F68  2ADF               	incf	indf2,f,c
  9762                           
  9763                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9764  002F6A  0E00               	movlw	0
  9765  002F6C                     L24:
  9766  002F6C  6E39               	movwf	btemp,c
  9767  002F6E  0E00               	movlw	0
  9768  002F70  6E3A               	movwf	btemp+1,c
  9769  002F72  D027               	goto	l1911
  9770  002F74                     l8329:
  9771                           
  9772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9773                           ;stkvar	_fp @ sp[(-11)+-2]
  9774  002F74  0EF3               	movlw	-13
  9775  002F76  006F FF8F FFE6     	movff	plusw1,postinc1
  9776  002F7C  006F FF8F FFE6     	movff	plusw1,postinc1
  9777                           
  9778                           ;stkvar	_fmt @ sp[(-13)+-4]
  9779  002F82  0EEF               	movlw	-17
  9780  002F84  006F FF8F FFD9     	movff	plusw1,fsr2l
  9781  002F8A  0EF0               	movlw	-16
  9782  002F8C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9783  002F92  006F FF7F FFF6     	movff	indf2,tblptrl
  9784  002F98                     	if	1	;There is more than 1 active tblptr byte
  9785  002F98  0E20               	movlw	high __smallconst
  9786  002F9A  6EF7               	movwf	tblptrh,c
  9787  002F9C                     	endif
  9788  002F9C                     	if	0	;tblptru may be non-zero
  9789  002F9C                     	endif
  9790  002F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9791  002F9C  0E00               	movlw	low (__smallconst shr (0+16))
  9792  002F9E  6EF8               	movwf	tblptru,c
  9793  002FA0                     	endif
  9794  002FA0  0008               	tblrd		*
  9795  002FA2  50F5               	movf	tablat,w,c
  9796  002FA4  6EE6               	movwf	postinc1,c
  9797  002FA6  0E00               	movlw	0
  9798  002FA8  6EE6               	movwf	postinc1,c
  9799  002FAA  ECF6  F025         	call	_fputc	;wreg free
  9800                           
  9801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9802                           ;stkvar	_fmt @ sp[(-11)+-4]
  9803  002FAE  0EF1               	movlw	-15
  9804  002FB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9805  002FB6  0EF2               	movlw	-14
  9806  002FB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9807  002FBE  2ADF               	incf	indf2,f,c
  9808  002FC0  D7C9               	goto	l8319
  9809  002FC2                     l1911:
  9810                           
  9811                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9812  002FC2  0EEF               	movlw	239
  9813  002FC4  26E1               	addwf	fsr1l,f,c
  9814  002FC6  0EFF               	movlw	255
  9815  002FC8  22E2               	addwfc	fsr1h,f,c
  9816  002FCA  0012               	return		;funcret
  9817  002FCC                     __end_of_vfpfcnvrt:
  9818                           	opt callstack 0
  9819                           
  9820 ;; *************** function _strncmp *****************
  9821 ;; Defined at:
  9822 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  _l              1  [STACK] PTR const unsigned char 
  9825 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9826 ;;		 -> STR_14(21), STR_13(6), STR_12(19), STR_11(21), 
  9827 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9828 ;;		 -> STR_6(14), STR_5(20), STR_4(15), STR_2(12), 
  9829 ;;		 -> STR_1(17), 
  9830 ;;  _r              1  [STACK] PTR const unsigned char 
  9831 ;;		 -> STR_25(3), STR_21(3), 
  9832 ;;  n               2  [STACK] unsigned int 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  r               1  [STACK] PTR const unsigned char 
  9835 ;;		 -> STR_25(3), STR_21(3), 
  9836 ;;  l               1  [STACK] PTR const unsigned char 
  9837 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9838 ;;		 -> STR_14(21), STR_13(6), STR_12(19), STR_11(21), 
  9839 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9840 ;;		 -> STR_6(14), STR_5(20), STR_4(15), STR_2(12), 
  9841 ;;		 -> STR_1(17), 
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  2  [STACK] int 
  9844 ;; Registers used:
  9845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9855 ;;Total ram usage:        0 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:    3
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		_vfpfcnvrt
  9862 ;; This function uses a reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text41
  9866  004948                     __ptext41:
  9867                           	opt callstack 0
  9868  004948                     _strncmp:
  9869                           	opt callstack 0
  9870                           
  9871                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9872  004948  52E6               	movf	postinc1,f,c
  9873  00494A  52E6               	movf	postinc1,f,c
  9874                           
  9875                           ;stkvar	__l @ sp[(-2)+-1]
  9876                           
  9877                           ;incstack = 0
  9878  00494C  0EFD               	movlw	-3
  9879  00494E  006F FF8C  F044    	movff	plusw1,btemp+11
  9880                           
  9881                           ;stkvar	_l @ sp[(-2)+1]
  9882  004954  0EFF               	movlw	-1
  9883  004956  0060  F113  FFE3   	movff	btemp+11,plusw1
  9884                           
  9885                           ;stkvar	__r @ sp[(-2)+-2]
  9886  00495C  0EFC               	movlw	-4
  9887  00495E  006F FF8C  F044    	movff	plusw1,btemp+11
  9888                           
  9889                           ;stkvar	_r @ sp[(-2)+0]
  9890  004964  0EFE               	movlw	-2
  9891  004966  0060  F113  FFE3   	movff	btemp+11,plusw1
  9892                           
  9893                           ;stkvar	_n @ sp[(-2)+-4]
  9894  00496C  0EFA               	movlw	-6
  9895  00496E  006F FF8C  F039    	movff	plusw1,btemp
  9896  004974  0E01               	movlw	1
  9897  004976  5E39               	subwf	btemp,f,c
  9898  004978  0EFA               	movlw	-6
  9899  00497A  0060  F0E7  FFE3   	movff	btemp,plusw1
  9900  004980  0EFB               	movlw	-5
  9901  004982  006F FF8C  F039    	movff	plusw1,btemp
  9902  004988  0E00               	movlw	0
  9903  00498A  5A39               	subwfb	btemp,f,c
  9904  00498C  0EFB               	movlw	-5
  9905  00498E  0060  F0E7  FFE3   	movff	btemp,plusw1
  9906  004994  0EFA               	movlw	-6
  9907  004996  28E3               	incf	plusw1,w,c
  9908  004998  E121               	bnz	l5605
  9909  00499A  0EFB               	movlw	-5
  9910  00499C  28E3               	incf	plusw1,w,c
  9911  00499E  A4D8               	btfss	status,2,c
  9912  0049A0  D01D               	goto	l5605
  9913  0049A2  0E00               	movlw	0
  9914  0049A4  6E39               	movwf	btemp,c
  9915  0049A6  0E00               	movlw	0
  9916  0049A8  6E3A               	movwf	btemp+1,c
  9917  0049AA  D091               	goto	l2660
  9918  0049AC                     l5601:
  9919                           
  9920                           ;stkvar	_l @ sp[(-2)+1]
  9921  0049AC  0EFF               	movlw	-1
  9922  0049AE  2AE3               	incf	plusw1,f,c
  9923                           
  9924                           ;stkvar	_r @ sp[(-2)+0]
  9925  0049B0  0EFE               	movlw	-2
  9926  0049B2  2AE3               	incf	plusw1,f,c
  9927                           
  9928                           ;stkvar	_n @ sp[(-2)+-4]
  9929  0049B4  0EFA               	movlw	-6
  9930  0049B6  006F FF8C  F039    	movff	plusw1,btemp
  9931  0049BC  0E01               	movlw	1
  9932  0049BE  5E39               	subwf	btemp,f,c
  9933  0049C0  0EFA               	movlw	-6
  9934  0049C2  0060  F0E7  FFE3   	movff	btemp,plusw1
  9935  0049C8  0EFB               	movlw	-5
  9936  0049CA  006F FF8C  F039    	movff	plusw1,btemp
  9937  0049D0  0E00               	movlw	0
  9938  0049D2  5A39               	subwfb	btemp,f,c
  9939  0049D4  0EFB               	movlw	-5
  9940  0049D6  0060  F0E7  FFE3   	movff	btemp,plusw1
  9941  0049DC                     l5605:
  9942                           
  9943                           ;stkvar	_l @ sp[(-2)+1]
  9944  0049DC  50E1               	movf	fsr1l,w,c
  9945  0049DE  0FFF               	addlw	-1
  9946  0049E0  6ED9               	movwf	fsr2l,c
  9947  0049E2  50E2               	movf	fsr1h,w,c
  9948  0049E4  6EDA               	movwf	fsr2h,c
  9949  0049E6  0EFF               	movlw	255
  9950  0049E8  22DA               	addwfc	fsr2h,f,c
  9951  0049EA  006F FF7F FFF6     	movff	indf2,tblptrl
  9952  0049F0                     	if	1	;There is more than 1 active tblptr byte
  9953  0049F0  0E20               	movlw	high __smallconst
  9954  0049F2  6EF7               	movwf	tblptrh,c
  9955  0049F4                     	endif
  9956  0049F4                     	if	0	;tblptru may be non-zero
  9957  0049F4                     	endif
  9958  0049F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9959  0049F4  0E00               	movlw	low (__smallconst shr (0+16))
  9960  0049F6  6EF8               	movwf	tblptru,c
  9961  0049F8                     	endif
  9962  0049F8  0008               	tblrd		*
  9963  0049FA  50F5               	movf	tablat,w,c
  9964  0049FC  0900               	iorlw	0
  9965  0049FE  B4D8               	btfsc	status,2,c
  9966  004A00  D041               	goto	u3050
  9967                           
  9968                           ;stkvar	_r @ sp[(-2)+0]
  9969  004A02  50E1               	movf	fsr1l,w,c
  9970  004A04  0FFE               	addlw	-2
  9971  004A06  6ED9               	movwf	fsr2l,c
  9972  004A08  50E2               	movf	fsr1h,w,c
  9973  004A0A  6EDA               	movwf	fsr2h,c
  9974  004A0C  0EFF               	movlw	255
  9975  004A0E  22DA               	addwfc	fsr2h,f,c
  9976  004A10  006F FF7F FFF6     	movff	indf2,tblptrl
  9977  004A16                     	if	1	;There is more than 1 active tblptr byte
  9978  004A16  0E20               	movlw	high __smallconst
  9979  004A18  6EF7               	movwf	tblptrh,c
  9980  004A1A                     	endif
  9981  004A1A                     	if	0	;tblptru may be non-zero
  9982  004A1A                     	endif
  9983  004A1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9984  004A1A  0E00               	movlw	low (__smallconst shr (0+16))
  9985  004A1C  6EF8               	movwf	tblptru,c
  9986  004A1E                     	endif
  9987  004A1E  0008               	tblrd		*
  9988  004A20  50F5               	movf	tablat,w,c
  9989  004A22  0900               	iorlw	0
  9990  004A24  B4D8               	btfsc	status,2,c
  9991  004A26  D02E               	goto	u3050
  9992                           
  9993                           ;stkvar	_n @ sp[(-2)+-4]
  9994  004A28  0EFA               	movlw	-6
  9995  004A2A  006F FF8C  F039    	movff	plusw1,btemp
  9996  004A30  0EFB               	movlw	-5
  9997  004A32  50E3               	movf	plusw1,w,c
  9998  004A34  1039               	iorwf	btemp,w,c
  9999  004A36  B4D8               	btfsc	status,2,c
 10000  004A38  D025               	goto	u3050
 10001                           
 10002                           ;stkvar	_l @ sp[(-2)+1]
 10003  004A3A  50E1               	movf	fsr1l,w,c
 10004  004A3C  0FFF               	addlw	-1
 10005  004A3E  6ED9               	movwf	fsr2l,c
 10006  004A40  50E2               	movf	fsr1h,w,c
 10007  004A42  6EDA               	movwf	fsr2h,c
 10008  004A44  0EFF               	movlw	255
 10009  004A46  22DA               	addwfc	fsr2h,f,c
 10010  004A48  006F FF7F FFF6     	movff	indf2,tblptrl
 10011  004A4E                     	if	1	;There is more than 1 active tblptr byte
 10012  004A4E  0E20               	movlw	high __smallconst
 10013  004A50  6EF7               	movwf	tblptrh,c
 10014  004A52                     	endif
 10015  004A52                     	if	0	;tblptru may be non-zero
 10016  004A52                     	endif
 10017  004A52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10018  004A52  0E00               	movlw	low (__smallconst shr (0+16))
 10019  004A54  6EF8               	movwf	tblptru,c
 10020  004A56                     	endif
 10021  004A56  0008               	tblrd		*
 10022  004A58  006F FFD4  F044    	movff	tablat,btemp+11
 10023                           
 10024                           ;stkvar	_r @ sp[(-2)+0]
 10025  004A5E  50E1               	movf	fsr1l,w,c
 10026  004A60  0FFE               	addlw	-2
 10027  004A62  6ED9               	movwf	fsr2l,c
 10028  004A64  50E2               	movf	fsr1h,w,c
 10029  004A66  6EDA               	movwf	fsr2h,c
 10030  004A68  0EFF               	movlw	255
 10031  004A6A  22DA               	addwfc	fsr2h,f,c
 10032  004A6C  006F FF7F FFF6     	movff	indf2,tblptrl
 10033  004A72                     	if	1	;There is more than 1 active tblptr byte
 10034  004A72  0E20               	movlw	high __smallconst
 10035  004A74  6EF7               	movwf	tblptrh,c
 10036  004A76                     	endif
 10037  004A76                     	if	0	;tblptru may be non-zero
 10038  004A76                     	endif
 10039  004A76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10040  004A76  0E00               	movlw	low (__smallconst shr (0+16))
 10041  004A78  6EF8               	movwf	tblptru,c
 10042  004A7A                     	endif
 10043  004A7A  0008               	tblrd		*
 10044  004A7C  50F5               	movf	tablat,w,c
 10045  004A7E  1844               	xorwf	btemp+11,w,c
 10046  004A80  B4D8               	btfsc	status,2,c
 10047  004A82  D794               	goto	l5601
 10048  004A84                     u3050:
 10049                           
 10050                           ;stkvar	_l @ sp[(-2)+1]
 10051  004A84  50E1               	movf	fsr1l,w,c
 10052  004A86  0FFF               	addlw	-1
 10053  004A88  6ED9               	movwf	fsr2l,c
 10054  004A8A  50E2               	movf	fsr1h,w,c
 10055  004A8C  6EDA               	movwf	fsr2h,c
 10056  004A8E  0EFF               	movlw	255
 10057  004A90  22DA               	addwfc	fsr2h,f,c
 10058  004A92  006F FF7F FFF6     	movff	indf2,tblptrl
 10059  004A98                     	if	1	;There is more than 1 active tblptr byte
 10060  004A98  0E20               	movlw	high __smallconst
 10061  004A9A  6EF7               	movwf	tblptrh,c
 10062  004A9C                     	endif
 10063  004A9C                     	if	0	;tblptru may be non-zero
 10064  004A9C                     	endif
 10065  004A9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10066  004A9C  0E00               	movlw	low (__smallconst shr (0+16))
 10067  004A9E  6EF8               	movwf	tblptru,c
 10068  004AA0                     	endif
 10069  004AA0  0008               	tblrd		*
 10070  004AA2  50F5               	movf	tablat,w,c
 10071  004AA4  6E39               	movwf	btemp,c
 10072  004AA6  6A3A               	clrf	btemp+1,c
 10073                           
 10074                           ;stkvar	_r @ sp[(-2)+0]
 10075  004AA8  50E1               	movf	fsr1l,w,c
 10076  004AAA  0FFE               	addlw	-2
 10077  004AAC  6ED9               	movwf	fsr2l,c
 10078  004AAE  50E2               	movf	fsr1h,w,c
 10079  004AB0  6EDA               	movwf	fsr2h,c
 10080  004AB2  0EFF               	movlw	255
 10081  004AB4  22DA               	addwfc	fsr2h,f,c
 10082  004AB6  006F FF7F FFF6     	movff	indf2,tblptrl
 10083  004ABC                     	if	1	;There is more than 1 active tblptr byte
 10084  004ABC  0E20               	movlw	high __smallconst
 10085  004ABE  6EF7               	movwf	tblptrh,c
 10086  004AC0                     	endif
 10087  004AC0                     	if	0	;tblptru may be non-zero
 10088  004AC0                     	endif
 10089  004AC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10090  004AC0  0E00               	movlw	low (__smallconst shr (0+16))
 10091  004AC2  6EF8               	movwf	tblptru,c
 10092  004AC4                     	endif
 10093  004AC4  0008               	tblrd		*
 10094  004AC6  50F5               	movf	tablat,w,c
 10095  004AC8  5E39               	subwf	btemp,f,c
 10096  004ACA  0E00               	movlw	0
 10097  004ACC  5A3A               	subwfb	btemp+1,f,c
 10098  004ACE                     l2660:
 10099                           
 10100                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10101  004ACE  0EFA               	movlw	250
 10102  004AD0  26E1               	addwf	fsr1l,f,c
 10103  004AD2  0EFF               	movlw	255
 10104  004AD4  22E2               	addwfc	fsr1h,f,c
 10105  004AD6  0012               	return		;funcret
 10106  004AD8                     __end_of_strncmp:
 10107                           	opt callstack 0
 10108                           
 10109 ;; *************** function _stoa *****************
 10110 ;; Defined at:
 10111 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10114 ;;		 -> f(5), NULL(0), 
 10115 ;;  s               2  [STACK] PTR unsigned char 
 10116 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(94), 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  nuls            7  [STACK] unsigned char [7]
 10119 ;;  l               2  [STACK] int 
 10120 ;;  p               2  [STACK] int 
 10121 ;;  cp              2  [STACK] PTR unsigned char 
 10122 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 10123 ;;		 -> V(94), 
 10124 ;;  w               2  [STACK] int 
 10125 ;;  i               2  [STACK] int 
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  2  [STACK] int 
 10128 ;; Registers used:
 10129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10139 ;;Total ram usage:        0 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:    6
 10142 ;; This function calls:
 10143 ;;		_fputc
 10144 ;;		_strlen
 10145 ;; This function is called by:
 10146 ;;		_vfpfcnvrt
 10147 ;; This function uses a reentrant model
 10148 ;;
 10149                           
 10150                           	psect	text42
 10151  003A80                     __ptext42:
 10152                           	opt callstack 0
 10153  003A80                     _stoa:
 10154                           	opt callstack 0
 10155                           
 10156                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10157  003A80  0E11               	movlw	17
 10158  003A82  26E1               	addwf	fsr1l,f,c
 10159  003A84  0E00               	movlw	0
 10160  003A86  22E2               	addwfc	fsr1h,f,c
 10161                           
 10162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10163                           
 10164                           ;incstack = 0
 10165  003A88  EE20  F100         	lfsr	2,stoa@F1144
 10166                           
 10167                           ;stkvar	_nuls @ sp[(-17)+0]
 10168  003A8C  0E07               	movlw	7
 10169  003A8E  6E39               	movwf	btemp,c
 10170  003A90  0EEF               	movlw	-17
 10171  003A92                     us495999:
 10172  003A92  006F FF7B FFE3     	movff	postinc2,plusw1
 10173  003A98  28E8               	incf	wreg,w,c
 10174  003A9A  2E39               	decfsz	btemp,f,c
 10175  003A9C  D7FA               	bra	us495999
 10176                           
 10177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10178                           ;stkvar	_s @ sp[(-17)+-4]
 10179  003A9E  0EEB               	movlw	-21
 10180  003AA0  006F FF8C  F043    	movff	plusw1,btemp+10
 10181  003AA6  0EEC               	movlw	-20
 10182  003AA8  006F FF8C  F044    	movff	plusw1,btemp+11
 10183                           
 10184                           ;stkvar	_cp @ sp[(-17)+11]
 10185  003AAE  0EFB               	movlw	-5
 10186  003AB0  0060  F113  FFE3   	movff	btemp+11,plusw1
 10187  003AB6  0EFA               	movlw	-6
 10188  003AB8  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10189                           
 10190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10191                           ;stkvar	_cp @ sp[(-17)+11]
 10192  003ABE  0EFA               	movlw	-6
 10193  003AC0  006F FF8C  F039    	movff	plusw1,btemp
 10194  003AC6  0EFB               	movlw	-5
 10195  003AC8  50E3               	movf	plusw1,w,c
 10196  003ACA  1039               	iorwf	btemp,w,c
 10197  003ACC  A4D8               	btfss	status,2,c
 10198  003ACE  D00E               	goto	l8217
 10199                           
 10200                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10201                           ;stkvar	_nuls @ sp[(-17)+0]
 10202  003AD0  0EEF               	movlw	239
 10203  003AD2  24E1               	addwf	fsr1l,w,c
 10204  003AD4  6E43               	movwf	btemp+10,c
 10205  003AD6  0EFF               	movlw	255
 10206  003AD8  20E2               	addwfc	fsr1h,w,c
 10207  003ADA  6E44               	movwf	btemp+11,c
 10208                           
 10209                           ;stkvar	_cp @ sp[(-17)+11]
 10210  003ADC  0EFB               	movlw	-5
 10211  003ADE  0060  F113  FFE3   	movff	btemp+11,plusw1
 10212  003AE4  0EFA               	movlw	-6
 10213  003AE6  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10214  003AEC                     l8217:
 10215                           
 10216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10217                           ;stkvar	_cp @ sp[(-17)+11]
 10218  003AEC  0EFA               	movlw	-6
 10219  003AEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10220  003AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10221  003AFA  EC57  F029         	call	_strlen	;wreg free
 10222                           
 10223                           ;stkvar	_l @ sp[(-17)+7]
 10224  003AFE  0EF6               	movlw	-10
 10225  003B00  0060  F0E7  FFE3   	movff	btemp,plusw1
 10226  003B06  0EF7               	movlw	-9
 10227  003B08  0060  F0EB  FFE3   	movff	btemp+1,plusw1
 10228                           
 10229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10230                           ;stkvar	_p @ sp[(-17)+9]
 10231  003B0E  0EF8               	movlw	-8
 10232  003B10  0060  F07F  FFE3   	movff	_prec,plusw1
 10233  003B16  0EF9               	movlw	-7
 10234  003B18  0060  F083  FFE3   	movff	_prec+1,plusw1
 10235                           
 10236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10237                           ;stkvar	_p @ sp[(-17)+9]
 10238  003B1E  0EF9               	movlw	-7
 10239  003B20  BEE3               	btfsc	plusw1,7,c
 10240  003B22  D023               	goto	l1892
 10241                           
 10242                           ;stkvar	_l @ sp[(-17)+7]
 10243                           ;stkvar	_p @ sp[(-17)+9]
 10244  003B24  50E1               	movf	fsr1l,w,c
 10245  003B26  0FF8               	addlw	-8
 10246  003B28  6ED9               	movwf	fsr2l,c
 10247  003B2A  50E2               	movf	fsr1h,w,c
 10248  003B2C  6EDA               	movwf	fsr2h,c
 10249  003B2E  0EFF               	movlw	255
 10250  003B30  22DA               	addwfc	fsr2h,f,c
 10251  003B32  0EF6               	movlw	-10
 10252  003B34  50E3               	movf	plusw1,w,c
 10253  003B36  5CDE               	subwf	postinc2,w,c
 10254  003B38  50DE               	movf	postinc2,w,c
 10255  003B3A  0A80               	xorlw	128
 10256  003B3C  6E39               	movwf	btemp,c
 10257  003B3E  0EF7               	movlw	-9
 10258  003B40  50E3               	movf	plusw1,w,c
 10259  003B42  0A80               	xorlw	128
 10260  003B44  5839               	subwfb	btemp,w,c
 10261  003B46  B0D8               	btfsc	status,0,c
 10262  003B48  D010               	goto	l1892
 10263                           
 10264                           ;stkvar	_p @ sp[(-17)+9]
 10265                           ;stkvar	_l @ sp[(-17)+7]
 10266  003B4A  0EF8               	movlw	-8
 10267  003B4C  006F FF8C  F039    	movff	plusw1,btemp
 10268  003B52  0EF6               	movlw	-10
 10269  003B54  0060  F0E7  FFE3   	movff	btemp,plusw1
 10270  003B5A  0EF9               	movlw	-7
 10271  003B5C  006F FF8C  F039    	movff	plusw1,btemp
 10272  003B62  0EF7               	movlw	-9
 10273  003B64  0060  F0E7  FFE3   	movff	btemp,plusw1
 10274  003B6A                     l1892:
 10275                           
 10276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10277                           ;stkvar	_l @ sp[(-17)+7]
 10278                           ;stkvar	_p @ sp[(-17)+9]
 10279  003B6A  0EF6               	movlw	-10
 10280  003B6C  006F FF8C  F039    	movff	plusw1,btemp
 10281  003B72  0EF8               	movlw	-8
 10282  003B74  0060  F0E7  FFE3   	movff	btemp,plusw1
 10283  003B7A  0EF7               	movlw	-9
 10284  003B7C  006F FF8C  F039    	movff	plusw1,btemp
 10285  003B82  0EF9               	movlw	-7
 10286  003B84  0060  F0E7  FFE3   	movff	btemp,plusw1
 10287                           
 10288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10289                           ;stkvar	_w @ sp[(-17)+13]
 10290  003B8A  0EFC               	movlw	-4
 10291  003B8C  0060  F077  FFE3   	movff	_width,plusw1
 10292  003B92  0EFD               	movlw	-3
 10293  003B94  0060  F07B  FFE3   	movff	_width+1,plusw1
 10294                           
 10295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10296  003B9A  A021               	btfss	_flags,0,c
 10297  003B9C  D01F               	goto	l8237
 10298  003B9E  D031               	goto	u5000
 10299  003BA0                     l8233:
 10300                           
 10301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10302                           ;stkvar	_fp @ sp[(-17)+-2]
 10303  003BA0  0EED               	movlw	-19
 10304  003BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 10305  003BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 10306  003BAE  0E20               	movlw	32
 10307  003BB0  6EE6               	movwf	postinc1,c
 10308  003BB2  0E00               	movlw	0
 10309  003BB4  6EE6               	movwf	postinc1,c
 10310  003BB6  ECF6  F025         	call	_fputc	;wreg free
 10311                           
 10312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10313                           ;stkvar	_l @ sp[(-17)+7]
 10314  003BBA  0EF6               	movlw	-10
 10315  003BBC  50E3               	movf	plusw1,w,c
 10316  003BBE  0F01               	addlw	1
 10317  003BC0  6E39               	movwf	btemp,c
 10318  003BC2  0EF6               	movlw	-10
 10319  003BC4  0060  F0E7  FFE3   	movff	btemp,plusw1
 10320  003BCA  6A39               	clrf	btemp,c
 10321  003BCC  0EF7               	movlw	-9
 10322  003BCE  50E3               	movf	plusw1,w,c
 10323  003BD0  2039               	addwfc	btemp,w,c
 10324  003BD2  6E39               	movwf	btemp,c
 10325  003BD4  0EF7               	movlw	-9
 10326  003BD6  0060  F0E7  FFE3   	movff	btemp,plusw1
 10327  003BDC                     l8237:
 10328                           
 10329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10330                           ;stkvar	_w @ sp[(-17)+13]
 10331                           ;stkvar	_l @ sp[(-17)+7]
 10332  003BDC  50E1               	movf	fsr1l,w,c
 10333  003BDE  0FF6               	addlw	-10
 10334  003BE0  6ED9               	movwf	fsr2l,c
 10335  003BE2  50E2               	movf	fsr1h,w,c
 10336  003BE4  6EDA               	movwf	fsr2h,c
 10337  003BE6  0EFF               	movlw	255
 10338  003BE8  22DA               	addwfc	fsr2h,f,c
 10339  003BEA  0EFC               	movlw	-4
 10340  003BEC  50E3               	movf	plusw1,w,c
 10341  003BEE  5CDE               	subwf	postinc2,w,c
 10342  003BF0  50DE               	movf	postinc2,w,c
 10343  003BF2  0A80               	xorlw	128
 10344  003BF4  6E39               	movwf	btemp,c
 10345  003BF6  0EFD               	movlw	-3
 10346  003BF8  50E3               	movf	plusw1,w,c
 10347  003BFA  0A80               	xorlw	128
 10348  003BFC  5839               	subwfb	btemp,w,c
 10349  003BFE  A0D8               	btfss	status,0,c
 10350  003C00  D7CF               	goto	l8233
 10351  003C02                     u5000:
 10352                           
 10353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10354                           ;stkvar	_i @ sp[(-17)+15]
 10355  003C02  0EFE               	movlw	-2
 10356  003C04  6AE3               	clrf	plusw1,c
 10357  003C06  0EFF               	movlw	-1
 10358  003C08  6AE3               	clrf	plusw1,c
 10359                           
 10360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10361  003C0A  D045               	goto	l8247
 10362  003C0C                     l8241:
 10363                           
 10364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10365                           ;stkvar	_fp @ sp[(-17)+-2]
 10366  003C0C  0EED               	movlw	-19
 10367  003C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 10368  003C14  006F FF8F FFE6     	movff	plusw1,postinc1
 10369                           
 10370                           ;stkvar	_cp @ sp[(-19)+11]
 10371  003C1A  0EF8               	movlw	-8
 10372  003C1C  006F FF8F FFF6     	movff	plusw1,tblptrl
 10373  003C22  0EF9               	movlw	-7
 10374  003C24  006F FF8F FFF7     	movff	plusw1,tblptrh
 10375  003C2A  0E00               	movlw	low (__smallconst shr (0+16))
 10376  003C2C  6EF8               	movwf	tblptru,c
 10377  003C2E  0E1F               	movlw	(high __ramtop+-1)
 10378  003C30  64F7               	cpfsgt	tblptrh,c
 10379  003C32  D003               	bra	u5017
 10380  003C34  0008               	tblrd		*
 10381  003C36  50F5               	movf	tablat,w,c
 10382  003C38  D007               	bra	u5010
 10383  003C3A                     u5017:
 10384  003C3A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10385  003C40  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10386  003C46  50EF               	movf	indf0,w,c
 10387  003C48                     u5010:
 10388  003C48  6EE6               	movwf	postinc1,c
 10389  003C4A  0E00               	movlw	0
 10390  003C4C  6EE6               	movwf	postinc1,c
 10391  003C4E  ECF6  F025         	call	_fputc	;wreg free
 10392                           
 10393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10394                           ;stkvar	_cp @ sp[(-17)+11]
 10395  003C52  0EFA               	movlw	-6
 10396  003C54  50E3               	movf	plusw1,w,c
 10397  003C56  0F01               	addlw	1
 10398  003C58  6E39               	movwf	btemp,c
 10399  003C5A  0EFA               	movlw	-6
 10400  003C5C  0060  F0E7  FFE3   	movff	btemp,plusw1
 10401  003C62  6A39               	clrf	btemp,c
 10402  003C64  0EFB               	movlw	-5
 10403  003C66  50E3               	movf	plusw1,w,c
 10404  003C68  2039               	addwfc	btemp,w,c
 10405  003C6A  6E39               	movwf	btemp,c
 10406  003C6C  0EFB               	movlw	-5
 10407  003C6E  0060  F0E7  FFE3   	movff	btemp,plusw1
 10408                           
 10409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10410                           ;stkvar	_i @ sp[(-17)+15]
 10411  003C74  0EFE               	movlw	-2
 10412  003C76  50E3               	movf	plusw1,w,c
 10413  003C78  0F01               	addlw	1
 10414  003C7A  6E39               	movwf	btemp,c
 10415  003C7C  0EFE               	movlw	-2
 10416  003C7E  0060  F0E7  FFE3   	movff	btemp,plusw1
 10417  003C84  6A39               	clrf	btemp,c
 10418  003C86  0EFF               	movlw	-1
 10419  003C88  50E3               	movf	plusw1,w,c
 10420  003C8A  2039               	addwfc	btemp,w,c
 10421  003C8C  6E39               	movwf	btemp,c
 10422  003C8E  0EFF               	movlw	-1
 10423  003C90  0060  F0E7  FFE3   	movff	btemp,plusw1
 10424  003C96                     l8247:
 10425                           
 10426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10427                           ;stkvar	_p @ sp[(-17)+9]
 10428                           ;stkvar	_i @ sp[(-17)+15]
 10429  003C96  50E1               	movf	fsr1l,w,c
 10430  003C98  0FFE               	addlw	-2
 10431  003C9A  6ED9               	movwf	fsr2l,c
 10432  003C9C  50E2               	movf	fsr1h,w,c
 10433  003C9E  6EDA               	movwf	fsr2h,c
 10434  003CA0  0EFF               	movlw	255
 10435  003CA2  22DA               	addwfc	fsr2h,f,c
 10436  003CA4  0EF8               	movlw	-8
 10437  003CA6  50E3               	movf	plusw1,w,c
 10438  003CA8  5CDE               	subwf	postinc2,w,c
 10439  003CAA  50DE               	movf	postinc2,w,c
 10440  003CAC  0A80               	xorlw	128
 10441  003CAE  6E39               	movwf	btemp,c
 10442  003CB0  0EF9               	movlw	-7
 10443  003CB2  50E3               	movf	plusw1,w,c
 10444  003CB4  0A80               	xorlw	128
 10445  003CB6  5839               	subwfb	btemp,w,c
 10446  003CB8  A0D8               	btfss	status,0,c
 10447  003CBA  D7A8               	goto	l8241
 10448                           
 10449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10450  003CBC  B021               	btfsc	_flags,0,c
 10451  003CBE  D01F               	goto	l8255
 10452  003CC0  D031               	goto	u5040
 10453  003CC2                     l8251:
 10454                           
 10455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10456                           ;stkvar	_fp @ sp[(-17)+-2]
 10457  003CC2  0EED               	movlw	-19
 10458  003CC4  006F FF8F FFE6     	movff	plusw1,postinc1
 10459  003CCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10460  003CD0  0E20               	movlw	32
 10461  003CD2  6EE6               	movwf	postinc1,c
 10462  003CD4  0E00               	movlw	0
 10463  003CD6  6EE6               	movwf	postinc1,c
 10464  003CD8  ECF6  F025         	call	_fputc	;wreg free
 10465                           
 10466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10467                           ;stkvar	_l @ sp[(-17)+7]
 10468  003CDC  0EF6               	movlw	-10
 10469  003CDE  50E3               	movf	plusw1,w,c
 10470  003CE0  0F01               	addlw	1
 10471  003CE2  6E39               	movwf	btemp,c
 10472  003CE4  0EF6               	movlw	-10
 10473  003CE6  0060  F0E7  FFE3   	movff	btemp,plusw1
 10474  003CEC  6A39               	clrf	btemp,c
 10475  003CEE  0EF7               	movlw	-9
 10476  003CF0  50E3               	movf	plusw1,w,c
 10477  003CF2  2039               	addwfc	btemp,w,c
 10478  003CF4  6E39               	movwf	btemp,c
 10479  003CF6  0EF7               	movlw	-9
 10480  003CF8  0060  F0E7  FFE3   	movff	btemp,plusw1
 10481  003CFE                     l8255:
 10482                           
 10483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10484                           ;stkvar	_w @ sp[(-17)+13]
 10485                           ;stkvar	_l @ sp[(-17)+7]
 10486  003CFE  50E1               	movf	fsr1l,w,c
 10487  003D00  0FF6               	addlw	-10
 10488  003D02  6ED9               	movwf	fsr2l,c
 10489  003D04  50E2               	movf	fsr1h,w,c
 10490  003D06  6EDA               	movwf	fsr2h,c
 10491  003D08  0EFF               	movlw	255
 10492  003D0A  22DA               	addwfc	fsr2h,f,c
 10493  003D0C  0EFC               	movlw	-4
 10494  003D0E  50E3               	movf	plusw1,w,c
 10495  003D10  5CDE               	subwf	postinc2,w,c
 10496  003D12  50DE               	movf	postinc2,w,c
 10497  003D14  0A80               	xorlw	128
 10498  003D16  6E39               	movwf	btemp,c
 10499  003D18  0EFD               	movlw	-3
 10500  003D1A  50E3               	movf	plusw1,w,c
 10501  003D1C  0A80               	xorlw	128
 10502  003D1E  5839               	subwfb	btemp,w,c
 10503  003D20  A0D8               	btfss	status,0,c
 10504  003D22  D7CF               	goto	l8251
 10505  003D24                     u5040:
 10506                           
 10507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 10508                           ;stkvar	_l @ sp[(-17)+7]
 10509  003D24  0EF6               	movlw	-10
 10510  003D26  006F FF8C  F039    	movff	plusw1,btemp
 10511  003D2C  0EF7               	movlw	-9
 10512  003D2E  006F FF8C  F03A    	movff	plusw1,btemp+1
 10513                           
 10514                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10515  003D34  0EEB               	movlw	235
 10516  003D36  26E1               	addwf	fsr1l,f,c
 10517  003D38  0EFF               	movlw	255
 10518  003D3A  22E2               	addwfc	fsr1h,f,c
 10519  003D3C  0012               	return		;funcret
 10520  003D3E                     __end_of_stoa:
 10521                           	opt callstack 0
 10522                           
 10523 ;; *************** function _dtoa *****************
 10524 ;; Defined at:
 10525 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10526 ;; Parameters:    Size  Location     Type
 10527 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10528 ;;		 -> f(5), NULL(0), 
 10529 ;;  d               8  [STACK] long long 
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  n               8  [STACK] long long 
 10532 ;;  i               2  [STACK] int 
 10533 ;;  s               2  [STACK] int 
 10534 ;;  w               2  [STACK] int 
 10535 ;;  p               2  [STACK] int 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  2  [STACK] int 
 10538 ;; Registers used:
 10539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10549 ;;Total ram usage:        0 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:    8
 10552 ;; This function calls:
 10553 ;;		___aodiv
 10554 ;;		___aomod
 10555 ;;		_abs
 10556 ;;		_pad
 10557 ;; This function is called by:
 10558 ;;		_vfpfcnvrt
 10559 ;; This function uses a reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text43
 10563  002FCC                     __ptext43:
 10564                           	opt callstack 0
 10565  002FCC                     _dtoa:
 10566                           	opt callstack 0
 10567                           
 10568                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10569  002FCC  0E12               	movlw	18
 10570  002FCE  26E1               	addwf	fsr1l,f,c
 10571  002FD0  0E00               	movlw	0
 10572  002FD2  22E2               	addwfc	fsr1h,f,c
 10573                           
 10574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 10575                           ;stkvar	_d @ sp[(-18)+-10]
 10576                           
 10577                           ;incstack = 0
 10578  002FD4  0EE4               	movlw	228
 10579  002FD6  24E1               	addwf	fsr1l,w,c
 10580  002FD8  6ED9               	movwf	fsr2l,c
 10581  002FDA  0EFF               	movlw	255
 10582  002FDC  20E2               	addwfc	fsr1h,w,c
 10583  002FDE  6EDA               	movwf	fsr2h,c
 10584                           
 10585                           ;stkvar	_n @ sp[(-18)+2]
 10586  002FE0  0E08               	movlw	8
 10587  002FE2  6E39               	movwf	btemp,c
 10588  002FE4  0EF0               	movlw	-16
 10589  002FE6                     us478999:
 10590  002FE6  006F FF7B FFE3     	movff	postinc2,plusw1
 10591  002FEC  28E8               	incf	wreg,w,c
 10592  002FEE  2E39               	decfsz	btemp,f,c
 10593  002FF0  D7FA               	bra	us478999
 10594                           
 10595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 10596                           ;stkvar	_n @ sp[(-18)+2]
 10597  002FF2  0EF7               	movlw	-9
 10598  002FF4  AEE3               	btfss	plusw1,7,c
 10599  002FF6  D002               	goto	u4790
 10600  002FF8  0E01               	movlw	1
 10601  002FFA  D001               	goto	u4800
 10602  002FFC                     u4790:
 10603  002FFC  0E00               	movlw	0
 10604  002FFE                     u4800:
 10605  002FFE  6E43               	movwf	btemp+10,c
 10606  003000  6A44               	clrf	btemp+11,c
 10607                           
 10608                           ;stkvar	_s @ sp[(-18)+12]
 10609  003002  0EFA               	movlw	-6
 10610  003004  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10611  00300A  0EFB               	movlw	-5
 10612  00300C  0060  F113  FFE3   	movff	btemp+11,plusw1
 10613                           
 10614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 10615                           ;stkvar	_s @ sp[(-18)+12]
 10616  003012  0EFA               	movlw	-6
 10617  003014  006F FF8C  F039    	movff	plusw1,btemp
 10618  00301A  0EFB               	movlw	-5
 10619  00301C  50E3               	movf	plusw1,w,c
 10620  00301E  1039               	iorwf	btemp,w,c
 10621  003020  B4D8               	btfsc	status,2,c
 10622  003022  D025               	goto	u4820
 10623                           
 10624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10625                           ;stkvar	_n @ sp[(-18)+2]
 10626                           ;stkvar	_n @ sp[(-18)+2]
 10627  003024  0EF0               	movlw	-16
 10628  003026  6CE3               	negf	plusw1,c
 10629  003028  0EF1               	movlw	-15
 10630  00302A  1EE3               	comf	plusw1,f,c
 10631  00302C  0EF2               	movlw	-14
 10632  00302E  1EE3               	comf	plusw1,f,c
 10633  003030  0EF3               	movlw	-13
 10634  003032  1EE3               	comf	plusw1,f,c
 10635  003034  0EF4               	movlw	-12
 10636  003036  1EE3               	comf	plusw1,f,c
 10637  003038  0EF5               	movlw	-11
 10638  00303A  1EE3               	comf	plusw1,f,c
 10639  00303C  0EF6               	movlw	-10
 10640  00303E  1EE3               	comf	plusw1,f,c
 10641  003040  0EF7               	movlw	-9
 10642  003042  1EE3               	comf	plusw1,f,c
 10643  003044  E314               	bnc	u4820
 10644  003046  0EF1               	movlw	-15
 10645  003048  2AE3               	incf	plusw1,f,c
 10646  00304A  E311               	bnc	u4820
 10647  00304C  0EF2               	movlw	-14
 10648  00304E  2AE3               	incf	plusw1,f,c
 10649  003050  E30E               	bnc	u4820
 10650  003052  0EF3               	movlw	-13
 10651  003054  2AE3               	incf	plusw1,f,c
 10652  003056  E30B               	bnc	u4820
 10653  003058  0EF4               	movlw	-12
 10654  00305A  2AE3               	incf	plusw1,f,c
 10655  00305C  E308               	bnc	u4820
 10656  00305E  0EF5               	movlw	-11
 10657  003060  2AE3               	incf	plusw1,f,c
 10658  003062  E305               	bnc	u4820
 10659  003064  0EF6               	movlw	-10
 10660  003066  2AE3               	incf	plusw1,f,c
 10661  003068  E302               	bnc	u4820
 10662  00306A  0EF7               	movlw	-9
 10663  00306C  2AE3               	incf	plusw1,f,c
 10664  00306E                     u4820:
 10665                           
 10666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10667  00306E  AE20               	btfss	_prec+1,7,c
 10668                           
 10669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10670  003070  9221               	bcf	_flags,1,c
 10671                           
 10672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10673  003072  BE20               	btfsc	_prec+1,7,c
 10674  003074  D005               	goto	u4840
 10675  003076  5020               	movf	_prec+1,w,c
 10676  003078  E110               	bnz	l8159
 10677  00307A  041F               	decf	_prec,w,c
 10678  00307C  B0D8               	btfsc	status,0,c
 10679  00307E  D00D               	goto	l8159
 10680  003080                     u4840:
 10681  003080  0E01               	movlw	1
 10682  003082  6E43               	movwf	btemp+10,c
 10683  003084  0E00               	movlw	0
 10684  003086  6E44               	movwf	btemp+11,c
 10685                           
 10686                           ;stkvar	_p @ sp[(-18)+16]
 10687  003088  0EFE               	movlw	-2
 10688  00308A  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10689  003090  0EFF               	movlw	-1
 10690  003092  0060  F113  FFE3   	movff	btemp+11,plusw1
 10691  003098  D008               	goto	l1865
 10692  00309A                     l8159:
 10693                           
 10694                           ;stkvar	_p @ sp[(-18)+16]
 10695  00309A  0EFE               	movlw	-2
 10696  00309C  0060  F07F  FFE3   	movff	_prec,plusw1
 10697  0030A2  0EFF               	movlw	-1
 10698  0030A4  0060  F083  FFE3   	movff	_prec+1,plusw1
 10699  0030AA                     l1865:
 10700                           
 10701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10702                           ;stkvar	_w @ sp[(-18)+14]
 10703  0030AA  0EFC               	movlw	-4
 10704  0030AC  0060  F077  FFE3   	movff	_width,plusw1
 10705  0030B2  0EFD               	movlw	-3
 10706  0030B4  0060  F07B  FFE3   	movff	_width+1,plusw1
 10707                           
 10708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10709                           ;stkvar	_s @ sp[(-18)+12]
 10710  0030BA  0EFA               	movlw	-6
 10711  0030BC  006F FF8C  F039    	movff	plusw1,btemp
 10712  0030C2  0EFB               	movlw	-5
 10713  0030C4  50E3               	movf	plusw1,w,c
 10714  0030C6  1039               	iorwf	btemp,w,c
 10715  0030C8  A4D8               	btfss	status,2,c
 10716  0030CA  D002               	goto	u4860
 10717  0030CC  A421               	btfss	_flags,2,c
 10718  0030CE  D00A               	goto	l8167
 10719  0030D0                     u4860:
 10720                           
 10721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10722                           ;stkvar	_w @ sp[(-18)+14]
 10723  0030D0  50E1               	movf	fsr1l,w,c
 10724  0030D2  0FFC               	addlw	-4
 10725  0030D4  6ED9               	movwf	fsr2l,c
 10726  0030D6  50E2               	movf	fsr1h,w,c
 10727  0030D8  6EDA               	movwf	fsr2h,c
 10728  0030DA  0EFF               	movlw	255
 10729  0030DC  22DA               	addwfc	fsr2h,f,c
 10730  0030DE  06DE               	decf	postinc2,f,c
 10731  0030E0  0E00               	movlw	0
 10732  0030E2  5ADD               	subwfb	postdec2,f,c
 10733  0030E4                     l8167:
 10734                           
 10735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10736  0030E4  0E1F               	movlw	31
 10737  0030E6  6E43               	movwf	btemp+10,c
 10738  0030E8  0E00               	movlw	0
 10739  0030EA  6E44               	movwf	btemp+11,c
 10740                           
 10741                           ;stkvar	_i @ sp[(-18)+10]
 10742  0030EC  0EF8               	movlw	-8
 10743  0030EE  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10744  0030F4  0EF9               	movlw	-7
 10745  0030F6  0060  F113  FFE3   	movff	btemp+11,plusw1
 10746                           
 10747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10748  0030FC  0101               	movlb	1	; () banked
 10749  0030FE  6BEF               	clrf	(_dbuf+31)& (0+255),b
 10750                           
 10751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10752  003100  D109               	goto	l8181
 10753  003102                     l8171:
 10754                           
 10755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10756                           ;stkvar	_i @ sp[(-18)+10]
 10757  003102  50E1               	movf	fsr1l,w,c
 10758  003104  0FF8               	addlw	-8
 10759  003106  6ED9               	movwf	fsr2l,c
 10760  003108  50E2               	movf	fsr1h,w,c
 10761  00310A  6EDA               	movwf	fsr2h,c
 10762  00310C  0EFF               	movlw	255
 10763  00310E  22DA               	addwfc	fsr2h,f,c
 10764  003110  06DE               	decf	postinc2,f,c
 10765  003112  0E00               	movlw	0
 10766  003114  5ADD               	subwfb	postdec2,f,c
 10767                           
 10768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10769  003116  0E0A               	movlw	10
 10770  003118  6EE6               	movwf	postinc1,c
 10771  00311A  0E00               	movlw	0
 10772  00311C  6EE6               	movwf	postinc1,c
 10773  00311E  0E00               	movlw	0
 10774  003120  6EE6               	movwf	postinc1,c
 10775  003122  0E00               	movlw	0
 10776  003124  6EE6               	movwf	postinc1,c
 10777  003126  0E00               	movlw	0
 10778  003128  6EE6               	movwf	postinc1,c
 10779  00312A  0E00               	movlw	0
 10780  00312C  6EE6               	movwf	postinc1,c
 10781  00312E  0E00               	movlw	0
 10782  003130  6EE6               	movwf	postinc1,c
 10783  003132  0E00               	movlw	0
 10784  003134  6EE6               	movwf	postinc1,c
 10785                           
 10786                           ;stkvar	_n @ sp[(-26)+2]
 10787  003136  50E1               	movf	fsr1l,w,c
 10788  003138  0FE8               	addlw	-24
 10789  00313A  6ED9               	movwf	fsr2l,c
 10790  00313C  50E2               	movf	fsr1h,w,c
 10791  00313E  6EDA               	movwf	fsr2h,c
 10792  003140  0EFF               	movlw	255
 10793  003142  22DA               	addwfc	fsr2h,f,c
 10794  003144  006F FF7B FFE6     	movff	postinc2,postinc1
 10795  00314A  006F FF7B FFE6     	movff	postinc2,postinc1
 10796  003150  006F FF7B FFE6     	movff	postinc2,postinc1
 10797  003156  006F FF7B FFE6     	movff	postinc2,postinc1
 10798  00315C  006F FF7B FFE6     	movff	postinc2,postinc1
 10799  003162  006F FF7B FFE6     	movff	postinc2,postinc1
 10800  003168  006F FF7B FFE6     	movff	postinc2,postinc1
 10801  00316E  006F FF7B FFE6     	movff	postinc2,postinc1
 10802  003174  EC84  F023         	call	___aomod	;wreg free
 10803  003178  52E5               	movf	postdec1,f,c
 10804  00317A  006F FF9C  F050    	movff	indf1,btemp+23
 10805  003180  52E5               	movf	postdec1,f,c
 10806  003182  006F FF9C  F04F    	movff	indf1,btemp+22
 10807  003188  52E5               	movf	postdec1,f,c
 10808  00318A  006F FF9C  F04E    	movff	indf1,btemp+21
 10809  003190  52E5               	movf	postdec1,f,c
 10810  003192  006F FF9C  F04D    	movff	indf1,btemp+20
 10811  003198  52E5               	movf	postdec1,f,c
 10812  00319A  006F FF9C  F04C    	movff	indf1,btemp+19
 10813  0031A0  52E5               	movf	postdec1,f,c
 10814  0031A2  006F FF9C  F04B    	movff	indf1,btemp+18
 10815  0031A8  52E5               	movf	postdec1,f,c
 10816  0031AA  006F FF9C  F04A    	movff	indf1,btemp+17
 10817  0031B0  52E5               	movf	postdec1,f,c
 10818  0031B2  006F FF9C  F049    	movff	indf1,btemp+16
 10819  0031B8  0EF8               	movlw	248
 10820  0031BA  26E1               	addwf	fsr1l,f,c
 10821  0031BC  0EFF               	movlw	255
 10822  0031BE  22E2               	addwfc	fsr1h,f,c
 10823  0031C0  0060  F124  F043   	movff	btemp+16,btemp+10
 10824  0031C6  0060  F128  F044   	movff	btemp+17,btemp+11
 10825  0031CC  0060  F10F  FFE6   	movff	btemp+10,postinc1
 10826  0031D2  0060  F113  FFE6   	movff	btemp+11,postinc1
 10827  0031D8  EC5A  F02D         	call	_abs	;wreg free
 10828  0031DC  0E30               	movlw	48
 10829  0031DE  2639               	addwf	btemp,f,c
 10830                           
 10831                           ;stkvar	_i @ sp[(-18)+10]
 10832  0031E0  0EF8               	movlw	-8
 10833  0031E2  006F FF8C  F043    	movff	plusw1,btemp+10
 10834  0031E8  0EF9               	movlw	-7
 10835  0031EA  006F FF8C  F044    	movff	plusw1,btemp+11
 10836  0031F0  0ED0               	movlw	low _dbuf
 10837  0031F2  2443               	addwf	btemp+10,w,c
 10838  0031F4  6ED9               	movwf	fsr2l,c
 10839  0031F6  0E01               	movlw	high _dbuf
 10840  0031F8  2044               	addwfc	btemp+11,w,c
 10841  0031FA  6EDA               	movwf	fsr2h,c
 10842  0031FC  0060  F0E7  FFDF   	movff	btemp,indf2
 10843                           
 10844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10845                           ;stkvar	_p @ sp[(-18)+16]
 10846  003202  50E1               	movf	fsr1l,w,c
 10847  003204  0FFE               	addlw	-2
 10848  003206  6ED9               	movwf	fsr2l,c
 10849  003208  50E2               	movf	fsr1h,w,c
 10850  00320A  6EDA               	movwf	fsr2h,c
 10851  00320C  0EFF               	movlw	255
 10852  00320E  22DA               	addwfc	fsr2h,f,c
 10853  003210  06DE               	decf	postinc2,f,c
 10854  003212  0E00               	movlw	0
 10855  003214  5ADD               	subwfb	postdec2,f,c
 10856                           
 10857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10858                           ;stkvar	_w @ sp[(-18)+14]
 10859  003216  50E1               	movf	fsr1l,w,c
 10860  003218  0FFC               	addlw	-4
 10861  00321A  6ED9               	movwf	fsr2l,c
 10862  00321C  50E2               	movf	fsr1h,w,c
 10863  00321E  6EDA               	movwf	fsr2h,c
 10864  003220  0EFF               	movlw	255
 10865  003222  22DA               	addwfc	fsr2h,f,c
 10866  003224  06DE               	decf	postinc2,f,c
 10867  003226  0E00               	movlw	0
 10868  003228  5ADD               	subwfb	postdec2,f,c
 10869                           
 10870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10871  00322A  0E0A               	movlw	10
 10872  00322C  6EE6               	movwf	postinc1,c
 10873  00322E  0E00               	movlw	0
 10874  003230  6EE6               	movwf	postinc1,c
 10875  003232  0E00               	movlw	0
 10876  003234  6EE6               	movwf	postinc1,c
 10877  003236  0E00               	movlw	0
 10878  003238  6EE6               	movwf	postinc1,c
 10879  00323A  0E00               	movlw	0
 10880  00323C  6EE6               	movwf	postinc1,c
 10881  00323E  0E00               	movlw	0
 10882  003240  6EE6               	movwf	postinc1,c
 10883  003242  0E00               	movlw	0
 10884  003244  6EE6               	movwf	postinc1,c
 10885  003246  0E00               	movlw	0
 10886  003248  6EE6               	movwf	postinc1,c
 10887                           
 10888                           ;stkvar	_n @ sp[(-26)+2]
 10889  00324A  50E1               	movf	fsr1l,w,c
 10890  00324C  0FE8               	addlw	-24
 10891  00324E  6ED9               	movwf	fsr2l,c
 10892  003250  50E2               	movf	fsr1h,w,c
 10893  003252  6EDA               	movwf	fsr2h,c
 10894  003254  0EFF               	movlw	255
 10895  003256  22DA               	addwfc	fsr2h,f,c
 10896  003258  006F FF7B FFE6     	movff	postinc2,postinc1
 10897  00325E  006F FF7B FFE6     	movff	postinc2,postinc1
 10898  003264  006F FF7B FFE6     	movff	postinc2,postinc1
 10899  00326A  006F FF7B FFE6     	movff	postinc2,postinc1
 10900  003270  006F FF7B FFE6     	movff	postinc2,postinc1
 10901  003276  006F FF7B FFE6     	movff	postinc2,postinc1
 10902  00327C  006F FF7B FFE6     	movff	postinc2,postinc1
 10903  003282  006F FF7B FFE6     	movff	postinc2,postinc1
 10904  003288  ECEF  F01F         	call	___aodiv	;wreg free
 10905  00328C  52E5               	movf	postdec1,f,c
 10906  00328E  006F FF9C  F050    	movff	indf1,btemp+23
 10907  003294  52E5               	movf	postdec1,f,c
 10908  003296  006F FF9C  F04F    	movff	indf1,btemp+22
 10909  00329C  52E5               	movf	postdec1,f,c
 10910  00329E  006F FF9C  F04E    	movff	indf1,btemp+21
 10911  0032A4  52E5               	movf	postdec1,f,c
 10912  0032A6  006F FF9C  F04D    	movff	indf1,btemp+20
 10913  0032AC  52E5               	movf	postdec1,f,c
 10914  0032AE  006F FF9C  F04C    	movff	indf1,btemp+19
 10915  0032B4  52E5               	movf	postdec1,f,c
 10916  0032B6  006F FF9C  F04B    	movff	indf1,btemp+18
 10917  0032BC  52E5               	movf	postdec1,f,c
 10918  0032BE  006F FF9C  F04A    	movff	indf1,btemp+17
 10919  0032C4  52E5               	movf	postdec1,f,c
 10920  0032C6  006F FF9C  F049    	movff	indf1,btemp+16
 10921  0032CC  0EF8               	movlw	248
 10922  0032CE  26E1               	addwf	fsr1l,f,c
 10923  0032D0  0EFF               	movlw	255
 10924  0032D2  22E2               	addwfc	fsr1h,f,c
 10925                           
 10926                           ;stkvar	_n @ sp[(-18)+2]
 10927  0032D4  0EF0               	movlw	-16
 10928  0032D6  0060  F127  FFE3   	movff	btemp+16,plusw1
 10929  0032DC  0EF1               	movlw	-15
 10930  0032DE  0060  F12B  FFE3   	movff	btemp+17,plusw1
 10931  0032E4  0EF2               	movlw	-14
 10932  0032E6  0060  F12F  FFE3   	movff	btemp+18,plusw1
 10933  0032EC  0EF3               	movlw	-13
 10934  0032EE  0060  F133  FFE3   	movff	btemp+19,plusw1
 10935  0032F4  0EF4               	movlw	-12
 10936  0032F6  0060  F137  FFE3   	movff	btemp+20,plusw1
 10937  0032FC  0EF5               	movlw	-11
 10938  0032FE  0060  F13B  FFE3   	movff	btemp+21,plusw1
 10939  003304  0EF6               	movlw	-10
 10940  003306  0060  F13F  FFE3   	movff	btemp+22,plusw1
 10941  00330C  0EF7               	movlw	-9
 10942  00330E  0060  F143  FFE3   	movff	btemp+23,plusw1
 10943  003314                     l8181:
 10944                           
 10945                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10946                           ;stkvar	_i @ sp[(-18)+10]
 10947  003314  0EF9               	movlw	-7
 10948  003316  BEE3               	btfsc	plusw1,7,c
 10949  003318  D036               	goto	u4910
 10950  00331A  0EF9               	movlw	-7
 10951  00331C  50E3               	movf	plusw1,w,c
 10952  00331E  E104               	bnz	u4870
 10953  003320  0EF8               	movlw	-8
 10954  003322  04E3               	decf	plusw1,w,c
 10955  003324  A0D8               	btfss	status,0,c
 10956  003326  D02F               	goto	u4910
 10957  003328                     u4870:
 10958                           
 10959                           ;stkvar	_n @ sp[(-18)+2]
 10960  003328  0EF0               	movlw	-16
 10961  00332A  50E3               	movf	plusw1,w,c
 10962  00332C  E115               	bnz	u4881
 10963  00332E  0EF1               	movlw	-15
 10964  003330  50E3               	movf	plusw1,w,c
 10965  003332  E112               	bnz	u4881
 10966  003334  0EF2               	movlw	-14
 10967  003336  50E3               	movf	plusw1,w,c
 10968  003338  E10F               	bnz	u4881
 10969  00333A  0EF3               	movlw	-13
 10970  00333C  50E3               	movf	plusw1,w,c
 10971  00333E  E10C               	bnz	u4881
 10972  003340  0EF4               	movlw	-12
 10973  003342  50E3               	movf	plusw1,w,c
 10974  003344  E109               	bnz	u4881
 10975  003346  0EF5               	movlw	-11
 10976  003348  50E3               	movf	plusw1,w,c
 10977  00334A  E106               	bnz	u4881
 10978  00334C  0EF6               	movlw	-10
 10979  00334E  50E3               	movf	plusw1,w,c
 10980  003350  E103               	bnz	u4881
 10981  003352  0EF7               	movlw	-9
 10982  003354  50E3               	movf	plusw1,w,c
 10983  003356  A4D8               	btfss	status,2,c
 10984  003358                     u4881:
 10985  003358  D6D4               	goto	l8171
 10986                           
 10987                           ;stkvar	_p @ sp[(-18)+16]
 10988  00335A  0EFF               	movlw	-1
 10989  00335C  BEE3               	btfsc	plusw1,7,c
 10990  00335E  D007               	goto	u4890
 10991  003360  0EFF               	movlw	-1
 10992  003362  50E3               	movf	plusw1,w,c
 10993  003364  E103               	bnz	u4891
 10994  003366  0EFE               	movlw	-2
 10995  003368  04E3               	decf	plusw1,w,c
 10996  00336A  B0D8               	btfsc	status,0,c
 10997  00336C                     u4891:
 10998  00336C  D6CA               	goto	l8171
 10999  00336E                     u4890:
 11000                           
 11001                           ;stkvar	_w @ sp[(-18)+14]
 11002  00336E  0EFD               	movlw	-3
 11003  003370  BEE3               	btfsc	plusw1,7,c
 11004  003372  D009               	goto	u4910
 11005  003374  0EFD               	movlw	-3
 11006  003376  50E3               	movf	plusw1,w,c
 11007  003378  E104               	bnz	u4900
 11008  00337A  0EFC               	movlw	-4
 11009  00337C  04E3               	decf	plusw1,w,c
 11010  00337E  A0D8               	btfss	status,0,c
 11011  003380  D002               	goto	u4910
 11012  003382                     u4900:
 11013  003382  B221               	btfsc	_flags,1,c
 11014  003384  D6BE               	goto	l8171
 11015  003386                     u4910:
 11016                           
 11017                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 11018                           ;stkvar	_s @ sp[(-18)+12]
 11019  003386  0EFA               	movlw	-6
 11020  003388  006F FF8C  F039    	movff	plusw1,btemp
 11021  00338E  0EFB               	movlw	-5
 11022  003390  50E3               	movf	plusw1,w,c
 11023  003392  1039               	iorwf	btemp,w,c
 11024  003394  A4D8               	btfss	status,2,c
 11025  003396  D002               	goto	u4930
 11026  003398  A421               	btfss	_flags,2,c
 11027  00339A  D033               	goto	l8205
 11028  00339C                     u4930:
 11029                           
 11030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 11031                           ;stkvar	_i @ sp[(-18)+10]
 11032  00339C  50E1               	movf	fsr1l,w,c
 11033  00339E  0FF8               	addlw	-8
 11034  0033A0  6ED9               	movwf	fsr2l,c
 11035  0033A2  50E2               	movf	fsr1h,w,c
 11036  0033A4  6EDA               	movwf	fsr2h,c
 11037  0033A6  0EFF               	movlw	255
 11038  0033A8  22DA               	addwfc	fsr2h,f,c
 11039  0033AA  06DE               	decf	postinc2,f,c
 11040  0033AC  0E00               	movlw	0
 11041  0033AE  5ADD               	subwfb	postdec2,f,c
 11042                           
 11043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 11044                           ;stkvar	_s @ sp[(-18)+12]
 11045  0033B0  0EFA               	movlw	-6
 11046  0033B2  006F FF8C  F039    	movff	plusw1,btemp
 11047  0033B8  0EFB               	movlw	-5
 11048  0033BA  50E3               	movf	plusw1,w,c
 11049  0033BC  1039               	iorwf	btemp,w,c
 11050  0033BE  A4D8               	btfss	status,2,c
 11051  0033C0  D002               	goto	l8201
 11052  0033C2  0E2B               	movlw	43
 11053  0033C4  D001               	goto	L25
 11054  0033C6                     l8201:
 11055  0033C6  0E2D               	movlw	45
 11056  0033C8                     L25:
 11057  0033C8  6E43               	movwf	btemp+10,c
 11058  0033CA  0E00               	movlw	0
 11059  0033CC  6E44               	movwf	btemp+11,c
 11060                           
 11061                           ;stkvar	_dtoa$3935 @ sp[(-18)+0]
 11062  0033CE  0EEE               	movlw	-18
 11063  0033D0  0060  F10F  FFE3   	movff	btemp+10,plusw1
 11064  0033D6  0EEF               	movlw	-17
 11065  0033D8  0060  F113  FFE3   	movff	btemp+11,plusw1
 11066                           
 11067                           ;stkvar	_dtoa$3935 @ sp[(-18)+0]
 11068                           ;stkvar	_i @ sp[(-18)+10]
 11069  0033DE  0EF8               	movlw	-8
 11070  0033E0  006F FF8C  F043    	movff	plusw1,btemp+10
 11071  0033E6  0EF9               	movlw	-7
 11072  0033E8  006F FF8C  F044    	movff	plusw1,btemp+11
 11073  0033EE  0ED0               	movlw	low _dbuf
 11074  0033F0  2443               	addwf	btemp+10,w,c
 11075  0033F2  6ED9               	movwf	fsr2l,c
 11076  0033F4  0E01               	movlw	high _dbuf
 11077  0033F6  2044               	addwfc	btemp+11,w,c
 11078  0033F8  6EDA               	movwf	fsr2h,c
 11079  0033FA  0EEE               	movlw	-18
 11080  0033FC  006F FF8F FFDF     	movff	plusw1,indf2
 11081  003402                     l8205:
 11082                           
 11083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 11084                           ;stkvar	_w @ sp[(-18)+14]
 11085  003402  0EFC               	movlw	-4
 11086  003404  006F FF8F FFE6     	movff	plusw1,postinc1
 11087  00340A  006F FF8F FFE6     	movff	plusw1,postinc1
 11088                           
 11089                           ;stkvar	_i @ sp[(-20)+10]
 11090  003410  0ED0               	movlw	low _dbuf
 11091  003412  6E43               	movwf	btemp+10,c
 11092  003414  0E01               	movlw	high _dbuf
 11093  003416  6E44               	movwf	btemp+11,c
 11094  003418  0EF6               	movlw	-10
 11095  00341A  50E3               	movf	plusw1,w,c
 11096  00341C  2643               	addwf	btemp+10,f,c
 11097  00341E  0EF7               	movlw	-9
 11098  003420  50E3               	movf	plusw1,w,c
 11099  003422  2244               	addwfc	btemp+11,f,c
 11100  003424  0060  F10F  FFE6   	movff	btemp+10,postinc1
 11101  00342A  0060  F113  FFE6   	movff	btemp+11,postinc1
 11102                           
 11103                           ;stkvar	_fp @ sp[(-22)+-2]
 11104  003430  0EE8               	movlw	-24
 11105  003432  006F FF8F FFE6     	movff	plusw1,postinc1
 11106  003438  006F FF8F FFE6     	movff	plusw1,postinc1
 11107  00343E  EC6C  F025         	call	_pad	;wreg free
 11108                           
 11109                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 11110  003442  0EE4               	movlw	228
 11111  003444  26E1               	addwf	fsr1l,f,c
 11112  003446  0EFF               	movlw	255
 11113  003448  22E2               	addwfc	fsr1h,f,c
 11114  00344A  0012               	return		;funcret
 11115  00344C                     __end_of_dtoa:
 11116                           	opt callstack 0
 11117                           
 11118 ;; *************** function _abs *****************
 11119 ;; Defined at:
 11120 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  a               2  [STACK] int 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;		None
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  2  [STACK] int 
 11127 ;; Registers used:
 11128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/1
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11138 ;;Total ram usage:        0 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    3
 11141 ;; This function calls:
 11142 ;;		Nothing
 11143 ;; This function is called by:
 11144 ;;		_dtoa
 11145 ;; This function uses a reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text44
 11149  005AB4                     __ptext44:
 11150                           	opt callstack 0
 11151  005AB4                     _abs:
 11152                           	opt callstack 23
 11153                           
 11154                           ;stkvar	_a @ sp[(0)+-2]
 11155                           
 11156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11157                           ;incstack = 0
 11158  005AB4  0EFF               	movlw	-1
 11159  005AB6  BEE3               	btfsc	plusw1,7,c
 11160  005AB8  D007               	goto	u2490
 11161  005ABA  0EFF               	movlw	-1
 11162  005ABC  50E3               	movf	plusw1,w,c
 11163  005ABE  E112               	bnz	l5377
 11164  005AC0  0EFE               	movlw	-2
 11165  005AC2  04E3               	decf	plusw1,w,c
 11166  005AC4  B0D8               	btfsc	status,0,c
 11167  005AC6  D00E               	goto	l5377
 11168  005AC8                     u2490:
 11169                           
 11170                           ;stkvar	_a @ sp[(0)+-2]
 11171  005AC8  0EFE               	movlw	-2
 11172  005ACA  006F FF8C  F039    	movff	plusw1,btemp
 11173  005AD0  1E39               	comf	btemp,f,c
 11174  005AD2  0EFF               	movlw	-1
 11175  005AD4  006F FF8C  F03A    	movff	plusw1,btemp+1
 11176  005ADA  1E3A               	comf	btemp+1,f,c
 11177  005ADC  2A39               	incf	btemp,f,c
 11178  005ADE  B4D8               	btfsc	status,2,c
 11179  005AE0  2A3A               	incf	btemp+1,f,c
 11180  005AE2  D008               	goto	l2606
 11181  005AE4                     l5377:
 11182                           
 11183                           ;stkvar	_a @ sp[(0)+-2]
 11184  005AE4  0EFE               	movlw	-2
 11185  005AE6  006F FF8C  F039    	movff	plusw1,btemp
 11186  005AEC  0EFF               	movlw	-1
 11187  005AEE  006F FF8C  F03A    	movff	plusw1,btemp+1
 11188  005AF4                     l2606:
 11189                           
 11190                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11191  005AF4  52E5               	movf	postdec1,f,c
 11192  005AF6  52E5               	movf	postdec1,f,c
 11193  005AF8  0012               	return		;funcret
 11194  005AFA                     __end_of_abs:
 11195                           	opt callstack 0
 11196                           
 11197 ;; *************** function ___aomod *****************
 11198 ;; Defined at:
 11199 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11200 ;; Parameters:    Size  Location     Type
 11201 ;;  dividend        8  [STACK] long long 
 11202 ;;  divisor         8  [STACK] long long 
 11203 ;; Auto vars:     Size  Location     Type
 11204 ;;  sign            1  [STACK] unsigned char 
 11205 ;;  counter         1  [STACK] unsigned char 
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  8  [STACK] long long 
 11208 ;; Registers used:
 11209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/1
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11219 ;;Total ram usage:        0 bytes
 11220 ;; Hardware stack levels used:    1
 11221 ;; Hardware stack levels required when called:    3
 11222 ;; This function calls:
 11223 ;;		Nothing
 11224 ;; This function is called by:
 11225 ;;		_dtoa
 11226 ;; This function uses a reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text45
 11230  004708                     __ptext45:
 11231                           	opt callstack 0
 11232  004708                     ___aomod:
 11233                           	opt callstack 0
 11234                           
 11235                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 11236  004708  52E6               	movf	postinc1,f,c
 11237  00470A  52E6               	movf	postinc1,f,c
 11238                           
 11239                           ;stkvar	_sign @ sp[(-2)+0]
 11240                           
 11241                           ;incstack = 0
 11242  00470C  0EFE               	movlw	-2
 11243  00470E  6AE3               	clrf	plusw1,c
 11244                           
 11245                           ;stkvar	_dividend @ sp[(-2)+-8]
 11246  004710  0EFD               	movlw	-3
 11247  004712  AEE3               	btfss	plusw1,7,c
 11248  004714  D028               	goto	l5433
 11249                           
 11250                           ;stkvar	_dividend @ sp[(-2)+-8]
 11251                           ;stkvar	_dividend @ sp[(-2)+-8]
 11252  004716  0EF6               	movlw	-10
 11253  004718  6CE3               	negf	plusw1,c
 11254  00471A  0EF7               	movlw	-9
 11255  00471C  1EE3               	comf	plusw1,f,c
 11256  00471E  0EF8               	movlw	-8
 11257  004720  1EE3               	comf	plusw1,f,c
 11258  004722  0EF9               	movlw	-7
 11259  004724  1EE3               	comf	plusw1,f,c
 11260  004726  0EFA               	movlw	-6
 11261  004728  1EE3               	comf	plusw1,f,c
 11262  00472A  0EFB               	movlw	-5
 11263  00472C  1EE3               	comf	plusw1,f,c
 11264  00472E  0EFC               	movlw	-4
 11265  004730  1EE3               	comf	plusw1,f,c
 11266  004732  0EFD               	movlw	-3
 11267  004734  1EE3               	comf	plusw1,f,c
 11268  004736  E314               	bnc	u2630
 11269  004738  0EF7               	movlw	-9
 11270  00473A  2AE3               	incf	plusw1,f,c
 11271  00473C  E311               	bnc	u2630
 11272  00473E  0EF8               	movlw	-8
 11273  004740  2AE3               	incf	plusw1,f,c
 11274  004742  E30E               	bnc	u2630
 11275  004744  0EF9               	movlw	-7
 11276  004746  2AE3               	incf	plusw1,f,c
 11277  004748  E30B               	bnc	u2630
 11278  00474A  0EFA               	movlw	-6
 11279  00474C  2AE3               	incf	plusw1,f,c
 11280  00474E  E308               	bnc	u2630
 11281  004750  0EFB               	movlw	-5
 11282  004752  2AE3               	incf	plusw1,f,c
 11283  004754  E305               	bnc	u2630
 11284  004756  0EFC               	movlw	-4
 11285  004758  2AE3               	incf	plusw1,f,c
 11286  00475A  E302               	bnc	u2630
 11287  00475C  0EFD               	movlw	-3
 11288  00475E  2AE3               	incf	plusw1,f,c
 11289  004760                     u2630:
 11290                           
 11291                           ;stkvar	_sign @ sp[(-2)+0]
 11292  004760  0EFE               	movlw	-2
 11293  004762  6AE3               	clrf	plusw1,c
 11294  004764  2AE3               	incf	plusw1,f,c
 11295  004766                     l5433:
 11296                           
 11297                           ;stkvar	_divisor @ sp[(-2)+-16]
 11298  004766  0EF5               	movlw	-11
 11299  004768  AEE3               	btfss	plusw1,7,c
 11300  00476A  D025               	goto	u2650
 11301                           
 11302                           ;stkvar	_divisor @ sp[(-2)+-16]
 11303                           ;stkvar	_divisor @ sp[(-2)+-16]
 11304  00476C  0EEE               	movlw	-18
 11305  00476E  6CE3               	negf	plusw1,c
 11306  004770  0EEF               	movlw	-17
 11307  004772  1EE3               	comf	plusw1,f,c
 11308  004774  0EF0               	movlw	-16
 11309  004776  1EE3               	comf	plusw1,f,c
 11310  004778  0EF1               	movlw	-15
 11311  00477A  1EE3               	comf	plusw1,f,c
 11312  00477C  0EF2               	movlw	-14
 11313  00477E  1EE3               	comf	plusw1,f,c
 11314  004780  0EF3               	movlw	-13
 11315  004782  1EE3               	comf	plusw1,f,c
 11316  004784  0EF4               	movlw	-12
 11317  004786  1EE3               	comf	plusw1,f,c
 11318  004788  0EF5               	movlw	-11
 11319  00478A  1EE3               	comf	plusw1,f,c
 11320  00478C  E314               	bnc	u2650
 11321  00478E  0EEF               	movlw	-17
 11322  004790  2AE3               	incf	plusw1,f,c
 11323  004792  E311               	bnc	u2650
 11324  004794  0EF0               	movlw	-16
 11325  004796  2AE3               	incf	plusw1,f,c
 11326  004798  E30E               	bnc	u2650
 11327  00479A  0EF1               	movlw	-15
 11328  00479C  2AE3               	incf	plusw1,f,c
 11329  00479E  E30B               	bnc	u2650
 11330  0047A0  0EF2               	movlw	-14
 11331  0047A2  2AE3               	incf	plusw1,f,c
 11332  0047A4  E308               	bnc	u2650
 11333  0047A6  0EF3               	movlw	-13
 11334  0047A8  2AE3               	incf	plusw1,f,c
 11335  0047AA  E305               	bnc	u2650
 11336  0047AC  0EF4               	movlw	-12
 11337  0047AE  2AE3               	incf	plusw1,f,c
 11338  0047B0  E302               	bnc	u2650
 11339  0047B2  0EF5               	movlw	-11
 11340  0047B4  2AE3               	incf	plusw1,f,c
 11341  0047B6                     u2650:
 11342                           
 11343                           ;stkvar	_divisor @ sp[(-2)+-16]
 11344  0047B6  0EEE               	movlw	-18
 11345  0047B8  50E3               	movf	plusw1,w,c
 11346  0047BA  E116               	bnz	u2660
 11347  0047BC  0EEF               	movlw	-17
 11348  0047BE  50E3               	movf	plusw1,w,c
 11349  0047C0  E113               	bnz	u2660
 11350  0047C2  0EF0               	movlw	-16
 11351  0047C4  50E3               	movf	plusw1,w,c
 11352  0047C6  E110               	bnz	u2660
 11353  0047C8  0EF1               	movlw	-15
 11354  0047CA  50E3               	movf	plusw1,w,c
 11355  0047CC  E10D               	bnz	u2660
 11356  0047CE  0EF2               	movlw	-14
 11357  0047D0  50E3               	movf	plusw1,w,c
 11358  0047D2  E10A               	bnz	u2660
 11359  0047D4  0EF3               	movlw	-13
 11360  0047D6  50E3               	movf	plusw1,w,c
 11361  0047D8  E107               	bnz	u2660
 11362  0047DA  0EF4               	movlw	-12
 11363  0047DC  50E3               	movf	plusw1,w,c
 11364  0047DE  E104               	bnz	u2660
 11365  0047E0  0EF5               	movlw	-11
 11366  0047E2  50E3               	movf	plusw1,w,c
 11367  0047E4  B4D8               	btfsc	status,2,c
 11368  0047E6  D075               	goto	u2690
 11369  0047E8                     u2660:
 11370                           
 11371                           ;stkvar	_counter @ sp[(-2)+1]
 11372  0047E8  0EFF               	movlw	-1
 11373  0047EA  6AE3               	clrf	plusw1,c
 11374  0047EC  D012               	goto	L26
 11375  0047EE                     l5441:
 11376                           
 11377                           ;stkvar	_divisor @ sp[(-2)+-16]
 11378  0047EE  90D8               	bcf	status,0,c
 11379  0047F0  0EEE               	movlw	-18
 11380  0047F2  36E3               	rlcf	plusw1,f,c
 11381  0047F4  0EEF               	movlw	-17
 11382  0047F6  36E3               	rlcf	plusw1,f,c
 11383  0047F8  0EF0               	movlw	-16
 11384  0047FA  36E3               	rlcf	plusw1,f,c
 11385  0047FC  0EF1               	movlw	-15
 11386  0047FE  36E3               	rlcf	plusw1,f,c
 11387  004800  0EF2               	movlw	-14
 11388  004802  36E3               	rlcf	plusw1,f,c
 11389  004804  0EF3               	movlw	-13
 11390  004806  36E3               	rlcf	plusw1,f,c
 11391  004808  0EF4               	movlw	-12
 11392  00480A  36E3               	rlcf	plusw1,f,c
 11393  00480C  0EF5               	movlw	-11
 11394  00480E  36E3               	rlcf	plusw1,f,c
 11395                           
 11396                           ;stkvar	_counter @ sp[(-2)+1]
 11397  004810  0EFF               	movlw	-1
 11398  004812                     L26:
 11399  004812  2AE3               	incf	plusw1,f,c
 11400                           
 11401                           ;stkvar	_divisor @ sp[(-2)+-16]
 11402  004814  0EF5               	movlw	-11
 11403  004816  AEE3               	btfss	plusw1,7,c
 11404  004818  D7EA               	goto	l5441
 11405  00481A                     u2670:
 11406                           
 11407                           ;stkvar	_divisor @ sp[(-2)+-16]
 11408                           ;stkvar	_dividend @ sp[(-2)+-8]
 11409  00481A  50E1               	movf	fsr1l,w,c
 11410  00481C  0FF6               	addlw	-10
 11411  00481E  6ED9               	movwf	fsr2l,c
 11412  004820  50E2               	movf	fsr1h,w,c
 11413  004822  6EDA               	movwf	fsr2h,c
 11414  004824  0EFF               	movlw	255
 11415  004826  22DA               	addwfc	fsr2h,f,c
 11416  004828  0EEE               	movlw	-18
 11417  00482A  50E3               	movf	plusw1,w,c
 11418  00482C  5CDE               	subwf	postinc2,w,c
 11419  00482E  0EEF               	movlw	-17
 11420  004830  50E3               	movf	plusw1,w,c
 11421  004832  58DE               	subwfb	postinc2,w,c
 11422  004834  0EF0               	movlw	-16
 11423  004836  50E3               	movf	plusw1,w,c
 11424  004838  58DE               	subwfb	postinc2,w,c
 11425  00483A  0EF1               	movlw	-15
 11426  00483C  50E3               	movf	plusw1,w,c
 11427  00483E  58DE               	subwfb	postinc2,w,c
 11428  004840  0EF2               	movlw	-14
 11429  004842  50E3               	movf	plusw1,w,c
 11430  004844  58DE               	subwfb	postinc2,w,c
 11431  004846  0EF3               	movlw	-13
 11432  004848  50E3               	movf	plusw1,w,c
 11433  00484A  58DE               	subwfb	postinc2,w,c
 11434  00484C  0EF4               	movlw	-12
 11435  00484E  50E3               	movf	plusw1,w,c
 11436  004850  58DE               	subwfb	postinc2,w,c
 11437  004852  0EF5               	movlw	-11
 11438  004854  50E3               	movf	plusw1,w,c
 11439  004856  58DE               	subwfb	postinc2,w,c
 11440  004858  A0D8               	btfss	status,0,c
 11441  00485A  D01F               	goto	l5449
 11442                           
 11443                           ;stkvar	_divisor @ sp[(-2)+-16]
 11444                           ;stkvar	_dividend @ sp[(-2)+-8]
 11445  00485C  50E1               	movf	fsr1l,w,c
 11446  00485E  0FF6               	addlw	-10
 11447  004860  6ED9               	movwf	fsr2l,c
 11448  004862  50E2               	movf	fsr1h,w,c
 11449  004864  6EDA               	movwf	fsr2h,c
 11450  004866  0EFF               	movlw	255
 11451  004868  22DA               	addwfc	fsr2h,f,c
 11452  00486A  0EEE               	movlw	-18
 11453  00486C  50E3               	movf	plusw1,w,c
 11454  00486E  5EDE               	subwf	postinc2,f,c
 11455  004870  0EEF               	movlw	-17
 11456  004872  50E3               	movf	plusw1,w,c
 11457  004874  5ADE               	subwfb	postinc2,f,c
 11458  004876  0EF0               	movlw	-16
 11459  004878  50E3               	movf	plusw1,w,c
 11460  00487A  5ADE               	subwfb	postinc2,f,c
 11461  00487C  0EF1               	movlw	-15
 11462  00487E  50E3               	movf	plusw1,w,c
 11463  004880  5ADE               	subwfb	postinc2,f,c
 11464  004882  0EF2               	movlw	-14
 11465  004884  50E3               	movf	plusw1,w,c
 11466  004886  5ADE               	subwfb	postinc2,f,c
 11467  004888  0EF3               	movlw	-13
 11468  00488A  50E3               	movf	plusw1,w,c
 11469  00488C  5ADE               	subwfb	postinc2,f,c
 11470  00488E  0EF4               	movlw	-12
 11471  004890  50E3               	movf	plusw1,w,c
 11472  004892  5ADE               	subwfb	postinc2,f,c
 11473  004894  0EF5               	movlw	-11
 11474  004896  50E3               	movf	plusw1,w,c
 11475  004898  5ADE               	subwfb	postinc2,f,c
 11476  00489A                     l5449:
 11477                           
 11478                           ;stkvar	_divisor @ sp[(-2)+-16]
 11479  00489A  90D8               	bcf	status,0,c
 11480  00489C  0EF5               	movlw	-11
 11481  00489E  32E3               	rrcf	plusw1,f,c
 11482  0048A0  0EF4               	movlw	-12
 11483  0048A2  32E3               	rrcf	plusw1,f,c
 11484  0048A4  0EF3               	movlw	-13
 11485  0048A6  32E3               	rrcf	plusw1,f,c
 11486  0048A8  0EF2               	movlw	-14
 11487  0048AA  32E3               	rrcf	plusw1,f,c
 11488  0048AC  0EF1               	movlw	-15
 11489  0048AE  32E3               	rrcf	plusw1,f,c
 11490  0048B0  0EF0               	movlw	-16
 11491  0048B2  32E3               	rrcf	plusw1,f,c
 11492  0048B4  0EEF               	movlw	-17
 11493  0048B6  32E3               	rrcf	plusw1,f,c
 11494  0048B8  0EEE               	movlw	-18
 11495  0048BA  32E3               	rrcf	plusw1,f,c
 11496                           
 11497                           ;stkvar	_counter @ sp[(-2)+1]
 11498  0048BC  0EFF               	movlw	-1
 11499  0048BE  50E3               	movf	plusw1,w,c
 11500  0048C0  6E39               	movwf	btemp,c
 11501  0048C2  0E01               	movlw	1
 11502  0048C4  5E39               	subwf	btemp,f,c
 11503  0048C6  0EFF               	movlw	-1
 11504  0048C8  0060  F0E7  FFE3   	movff	btemp,plusw1
 11505  0048CE  A4D8               	btfss	status,2,c
 11506  0048D0  D7A4               	goto	u2670
 11507  0048D2                     u2690:
 11508                           
 11509                           ;stkvar	_sign @ sp[(-2)+0]
 11510  0048D2  0EFE               	movlw	-2
 11511  0048D4  50E3               	movf	plusw1,w,c
 11512  0048D6  B4D8               	btfsc	status,2,c
 11513  0048D8  D025               	goto	u2710
 11514                           
 11515                           ;stkvar	_dividend @ sp[(-2)+-8]
 11516                           ;stkvar	_dividend @ sp[(-2)+-8]
 11517  0048DA  0EF6               	movlw	-10
 11518  0048DC  6CE3               	negf	plusw1,c
 11519  0048DE  0EF7               	movlw	-9
 11520  0048E0  1EE3               	comf	plusw1,f,c
 11521  0048E2  0EF8               	movlw	-8
 11522  0048E4  1EE3               	comf	plusw1,f,c
 11523  0048E6  0EF9               	movlw	-7
 11524  0048E8  1EE3               	comf	plusw1,f,c
 11525  0048EA  0EFA               	movlw	-6
 11526  0048EC  1EE3               	comf	plusw1,f,c
 11527  0048EE  0EFB               	movlw	-5
 11528  0048F0  1EE3               	comf	plusw1,f,c
 11529  0048F2  0EFC               	movlw	-4
 11530  0048F4  1EE3               	comf	plusw1,f,c
 11531  0048F6  0EFD               	movlw	-3
 11532  0048F8  1EE3               	comf	plusw1,f,c
 11533  0048FA  E314               	bnc	u2710
 11534  0048FC  0EF7               	movlw	-9
 11535  0048FE  2AE3               	incf	plusw1,f,c
 11536  004900  E311               	bnc	u2710
 11537  004902  0EF8               	movlw	-8
 11538  004904  2AE3               	incf	plusw1,f,c
 11539  004906  E30E               	bnc	u2710
 11540  004908  0EF9               	movlw	-7
 11541  00490A  2AE3               	incf	plusw1,f,c
 11542  00490C  E30B               	bnc	u2710
 11543  00490E  0EFA               	movlw	-6
 11544  004910  2AE3               	incf	plusw1,f,c
 11545  004912  E308               	bnc	u2710
 11546  004914  0EFB               	movlw	-5
 11547  004916  2AE3               	incf	plusw1,f,c
 11548  004918  E305               	bnc	u2710
 11549  00491A  0EFC               	movlw	-4
 11550  00491C  2AE3               	incf	plusw1,f,c
 11551  00491E  E302               	bnc	u2710
 11552  004920  0EFD               	movlw	-3
 11553  004922  2AE3               	incf	plusw1,f,c
 11554  004924                     u2710:
 11555                           
 11556                           ;stkvar	_dividend @ sp[(-2)+-8]
 11557  004924  0EF6               	movlw	246
 11558  004926  24E1               	addwf	fsr1l,w,c
 11559  004928  6ED9               	movwf	fsr2l,c
 11560  00492A  0EFF               	movlw	255
 11561  00492C  20E2               	addwfc	fsr1h,w,c
 11562  00492E  6EDA               	movwf	fsr2h,c
 11563                           
 11564                           ;stkvar	?___aomod @ sp[(-2)+-8]
 11565  004930  0E08               	movlw	8
 11566  004932  6E39               	movwf	btemp,c
 11567  004934  0EF6               	movlw	-10
 11568  004936                     us272999:
 11569  004936  006F FF7B FFE3     	movff	postinc2,plusw1
 11570  00493C  28E8               	incf	wreg,w,c
 11571  00493E  2E39               	decfsz	btemp,f,c
 11572  004940  D7FA               	bra	us272999
 11573                           
 11574                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 11575  004942  52E5               	movf	postdec1,f,c
 11576  004944  52E5               	movf	postdec1,f,c
 11577  004946  0012               	return		;funcret
 11578  004948                     __end_of___aomod:
 11579                           	opt callstack 0
 11580                           
 11581 ;; *************** function ___aodiv *****************
 11582 ;; Defined at:
 11583 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  dividend        8  [STACK] long long 
 11586 ;;  divisor         8  [STACK] long long 
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  quotient        8  [STACK] long long 
 11589 ;;  sign            1  [STACK] unsigned char 
 11590 ;;  counter         1  [STACK] unsigned char 
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  8  [STACK] long long 
 11593 ;; Registers used:
 11594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/1
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11604 ;;Total ram usage:        0 bytes
 11605 ;; Hardware stack levels used:    1
 11606 ;; Hardware stack levels required when called:    3
 11607 ;; This function calls:
 11608 ;;		Nothing
 11609 ;; This function is called by:
 11610 ;;		_dtoa
 11611 ;; This function uses a reentrant model
 11612 ;;
 11613                           
 11614                           	psect	text46
 11615  003FDE                     __ptext46:
 11616                           	opt callstack 0
 11617  003FDE                     ___aodiv:
 11618                           	opt callstack 0
 11619                           
 11620                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 11621  003FDE  0E0A               	movlw	10
 11622  003FE0  26E1               	addwf	fsr1l,f,c
 11623  003FE2  0E00               	movlw	0
 11624  003FE4  22E2               	addwfc	fsr1h,f,c
 11625                           
 11626                           ;stkvar	_sign @ sp[(-10)+8]
 11627                           
 11628                           ;incstack = 0
 11629  003FE6  0EFE               	movlw	-2
 11630  003FE8  6AE3               	clrf	plusw1,c
 11631                           
 11632                           ;stkvar	_divisor @ sp[(-10)+-16]
 11633  003FEA  0EED               	movlw	-19
 11634  003FEC  AEE3               	btfss	plusw1,7,c
 11635  003FEE  D028               	goto	l5389
 11636                           
 11637                           ;stkvar	_divisor @ sp[(-10)+-16]
 11638                           ;stkvar	_divisor @ sp[(-10)+-16]
 11639  003FF0  0EE6               	movlw	-26
 11640  003FF2  6CE3               	negf	plusw1,c
 11641  003FF4  0EE7               	movlw	-25
 11642  003FF6  1EE3               	comf	plusw1,f,c
 11643  003FF8  0EE8               	movlw	-24
 11644  003FFA  1EE3               	comf	plusw1,f,c
 11645  003FFC  0EE9               	movlw	-23
 11646  003FFE  1EE3               	comf	plusw1,f,c
 11647  004000  0EEA               	movlw	-22
 11648  004002  1EE3               	comf	plusw1,f,c
 11649  004004  0EEB               	movlw	-21
 11650  004006  1EE3               	comf	plusw1,f,c
 11651  004008  0EEC               	movlw	-20
 11652  00400A  1EE3               	comf	plusw1,f,c
 11653  00400C  0EED               	movlw	-19
 11654  00400E  1EE3               	comf	plusw1,f,c
 11655  004010  E314               	bnc	u2510
 11656  004012  0EE7               	movlw	-25
 11657  004014  2AE3               	incf	plusw1,f,c
 11658  004016  E311               	bnc	u2510
 11659  004018  0EE8               	movlw	-24
 11660  00401A  2AE3               	incf	plusw1,f,c
 11661  00401C  E30E               	bnc	u2510
 11662  00401E  0EE9               	movlw	-23
 11663  004020  2AE3               	incf	plusw1,f,c
 11664  004022  E30B               	bnc	u2510
 11665  004024  0EEA               	movlw	-22
 11666  004026  2AE3               	incf	plusw1,f,c
 11667  004028  E308               	bnc	u2510
 11668  00402A  0EEB               	movlw	-21
 11669  00402C  2AE3               	incf	plusw1,f,c
 11670  00402E  E305               	bnc	u2510
 11671  004030  0EEC               	movlw	-20
 11672  004032  2AE3               	incf	plusw1,f,c
 11673  004034  E302               	bnc	u2510
 11674  004036  0EED               	movlw	-19
 11675  004038  2AE3               	incf	plusw1,f,c
 11676  00403A                     u2510:
 11677                           
 11678                           ;stkvar	_sign @ sp[(-10)+8]
 11679  00403A  0EFE               	movlw	-2
 11680  00403C  6AE3               	clrf	plusw1,c
 11681  00403E  2AE3               	incf	plusw1,f,c
 11682  004040                     l5389:
 11683                           
 11684                           ;stkvar	_dividend @ sp[(-10)+-8]
 11685  004040  0EF5               	movlw	-11
 11686  004042  AEE3               	btfss	plusw1,7,c
 11687  004044  D027               	goto	l5395
 11688                           
 11689                           ;stkvar	_dividend @ sp[(-10)+-8]
 11690                           ;stkvar	_dividend @ sp[(-10)+-8]
 11691  004046  0EEE               	movlw	-18
 11692  004048  6CE3               	negf	plusw1,c
 11693  00404A  0EEF               	movlw	-17
 11694  00404C  1EE3               	comf	plusw1,f,c
 11695  00404E  0EF0               	movlw	-16
 11696  004050  1EE3               	comf	plusw1,f,c
 11697  004052  0EF1               	movlw	-15
 11698  004054  1EE3               	comf	plusw1,f,c
 11699  004056  0EF2               	movlw	-14
 11700  004058  1EE3               	comf	plusw1,f,c
 11701  00405A  0EF3               	movlw	-13
 11702  00405C  1EE3               	comf	plusw1,f,c
 11703  00405E  0EF4               	movlw	-12
 11704  004060  1EE3               	comf	plusw1,f,c
 11705  004062  0EF5               	movlw	-11
 11706  004064  1EE3               	comf	plusw1,f,c
 11707  004066  E314               	bnc	u2530
 11708  004068  0EEF               	movlw	-17
 11709  00406A  2AE3               	incf	plusw1,f,c
 11710  00406C  E311               	bnc	u2530
 11711  00406E  0EF0               	movlw	-16
 11712  004070  2AE3               	incf	plusw1,f,c
 11713  004072  E30E               	bnc	u2530
 11714  004074  0EF1               	movlw	-15
 11715  004076  2AE3               	incf	plusw1,f,c
 11716  004078  E30B               	bnc	u2530
 11717  00407A  0EF2               	movlw	-14
 11718  00407C  2AE3               	incf	plusw1,f,c
 11719  00407E  E308               	bnc	u2530
 11720  004080  0EF3               	movlw	-13
 11721  004082  2AE3               	incf	plusw1,f,c
 11722  004084  E305               	bnc	u2530
 11723  004086  0EF4               	movlw	-12
 11724  004088  2AE3               	incf	plusw1,f,c
 11725  00408A  E302               	bnc	u2530
 11726  00408C  0EF5               	movlw	-11
 11727  00408E  2AE3               	incf	plusw1,f,c
 11728  004090                     u2530:
 11729                           
 11730                           ;stkvar	_sign @ sp[(-10)+8]
 11731  004090  0EFE               	movlw	-2
 11732  004092  70E3               	btg	plusw1,0,c
 11733  004094                     l5395:
 11734                           
 11735                           ;stkvar	_quotient @ sp[(-10)+0]
 11736  004094  0E07               	movlw	7
 11737  004096  6E39               	movwf	btemp,c
 11738  004098  0EF6               	movlw	-10
 11739  00409A                     u2541:
 11740  00409A  6AE3               	clrf	plusw1,c
 11741  00409C  2AE8               	incf	wreg,f,c
 11742  00409E  0639               	decf	btemp,f,c
 11743  0040A0  E2FC               	bc	u2541
 11744                           
 11745                           ;stkvar	_divisor @ sp[(-10)+-16]
 11746  0040A2  0EE6               	movlw	-26
 11747  0040A4  50E3               	movf	plusw1,w,c
 11748  0040A6  E116               	bnz	u2550
 11749  0040A8  0EE7               	movlw	-25
 11750  0040AA  50E3               	movf	plusw1,w,c
 11751  0040AC  E113               	bnz	u2550
 11752  0040AE  0EE8               	movlw	-24
 11753  0040B0  50E3               	movf	plusw1,w,c
 11754  0040B2  E110               	bnz	u2550
 11755  0040B4  0EE9               	movlw	-23
 11756  0040B6  50E3               	movf	plusw1,w,c
 11757  0040B8  E10D               	bnz	u2550
 11758  0040BA  0EEA               	movlw	-22
 11759  0040BC  50E3               	movf	plusw1,w,c
 11760  0040BE  E10A               	bnz	u2550
 11761  0040C0  0EEB               	movlw	-21
 11762  0040C2  50E3               	movf	plusw1,w,c
 11763  0040C4  E107               	bnz	u2550
 11764  0040C6  0EEC               	movlw	-20
 11765  0040C8  50E3               	movf	plusw1,w,c
 11766  0040CA  E104               	bnz	u2550
 11767  0040CC  0EED               	movlw	-19
 11768  0040CE  50E3               	movf	plusw1,w,c
 11769  0040D0  B4D8               	btfsc	status,2,c
 11770  0040D2  D088               	goto	u2580
 11771  0040D4                     u2550:
 11772                           
 11773                           ;stkvar	_counter @ sp[(-10)+9]
 11774  0040D4  0EFF               	movlw	-1
 11775  0040D6  6AE3               	clrf	plusw1,c
 11776  0040D8  D012               	goto	L27
 11777  0040DA                     l5401:
 11778                           
 11779                           ;stkvar	_divisor @ sp[(-10)+-16]
 11780  0040DA  90D8               	bcf	status,0,c
 11781  0040DC  0EE6               	movlw	-26
 11782  0040DE  36E3               	rlcf	plusw1,f,c
 11783  0040E0  0EE7               	movlw	-25
 11784  0040E2  36E3               	rlcf	plusw1,f,c
 11785  0040E4  0EE8               	movlw	-24
 11786  0040E6  36E3               	rlcf	plusw1,f,c
 11787  0040E8  0EE9               	movlw	-23
 11788  0040EA  36E3               	rlcf	plusw1,f,c
 11789  0040EC  0EEA               	movlw	-22
 11790  0040EE  36E3               	rlcf	plusw1,f,c
 11791  0040F0  0EEB               	movlw	-21
 11792  0040F2  36E3               	rlcf	plusw1,f,c
 11793  0040F4  0EEC               	movlw	-20
 11794  0040F6  36E3               	rlcf	plusw1,f,c
 11795  0040F8  0EED               	movlw	-19
 11796  0040FA  36E3               	rlcf	plusw1,f,c
 11797                           
 11798                           ;stkvar	_counter @ sp[(-10)+9]
 11799  0040FC  0EFF               	movlw	-1
 11800  0040FE                     L27:
 11801  0040FE  2AE3               	incf	plusw1,f,c
 11802                           
 11803                           ;stkvar	_divisor @ sp[(-10)+-16]
 11804  004100  0EED               	movlw	-19
 11805  004102  AEE3               	btfss	plusw1,7,c
 11806  004104  D7EA               	goto	l5401
 11807  004106                     u2560:
 11808                           
 11809                           ;stkvar	_quotient @ sp[(-10)+0]
 11810  004106  90D8               	bcf	status,0,c
 11811  004108  0EF6               	movlw	-10
 11812  00410A  36E3               	rlcf	plusw1,f,c
 11813  00410C  0EF7               	movlw	-9
 11814  00410E  36E3               	rlcf	plusw1,f,c
 11815  004110  0EF8               	movlw	-8
 11816  004112  36E3               	rlcf	plusw1,f,c
 11817  004114  0EF9               	movlw	-7
 11818  004116  36E3               	rlcf	plusw1,f,c
 11819  004118  0EFA               	movlw	-6
 11820  00411A  36E3               	rlcf	plusw1,f,c
 11821  00411C  0EFB               	movlw	-5
 11822  00411E  36E3               	rlcf	plusw1,f,c
 11823  004120  0EFC               	movlw	-4
 11824  004122  36E3               	rlcf	plusw1,f,c
 11825  004124  0EFD               	movlw	-3
 11826  004126  36E3               	rlcf	plusw1,f,c
 11827                           
 11828                           ;stkvar	_divisor @ sp[(-10)+-16]
 11829                           ;stkvar	_dividend @ sp[(-10)+-8]
 11830  004128  50E1               	movf	fsr1l,w,c
 11831  00412A  0FEE               	addlw	-18
 11832  00412C  6ED9               	movwf	fsr2l,c
 11833  00412E  50E2               	movf	fsr1h,w,c
 11834  004130  6EDA               	movwf	fsr2h,c
 11835  004132  0EFF               	movlw	255
 11836  004134  22DA               	addwfc	fsr2h,f,c
 11837  004136  0EE6               	movlw	-26
 11838  004138  50E3               	movf	plusw1,w,c
 11839  00413A  5CDE               	subwf	postinc2,w,c
 11840  00413C  0EE7               	movlw	-25
 11841  00413E  50E3               	movf	plusw1,w,c
 11842  004140  58DE               	subwfb	postinc2,w,c
 11843  004142  0EE8               	movlw	-24
 11844  004144  50E3               	movf	plusw1,w,c
 11845  004146  58DE               	subwfb	postinc2,w,c
 11846  004148  0EE9               	movlw	-23
 11847  00414A  50E3               	movf	plusw1,w,c
 11848  00414C  58DE               	subwfb	postinc2,w,c
 11849  00414E  0EEA               	movlw	-22
 11850  004150  50E3               	movf	plusw1,w,c
 11851  004152  58DE               	subwfb	postinc2,w,c
 11852  004154  0EEB               	movlw	-21
 11853  004156  50E3               	movf	plusw1,w,c
 11854  004158  58DE               	subwfb	postinc2,w,c
 11855  00415A  0EEC               	movlw	-20
 11856  00415C  50E3               	movf	plusw1,w,c
 11857  00415E  58DE               	subwfb	postinc2,w,c
 11858  004160  0EED               	movlw	-19
 11859  004162  50E3               	movf	plusw1,w,c
 11860  004164  58DE               	subwfb	postinc2,w,c
 11861  004166  A0D8               	btfss	status,0,c
 11862  004168  D021               	goto	l5413
 11863                           
 11864                           ;stkvar	_divisor @ sp[(-10)+-16]
 11865                           ;stkvar	_dividend @ sp[(-10)+-8]
 11866  00416A  50E1               	movf	fsr1l,w,c
 11867  00416C  0FEE               	addlw	-18
 11868  00416E  6ED9               	movwf	fsr2l,c
 11869  004170  50E2               	movf	fsr1h,w,c
 11870  004172  6EDA               	movwf	fsr2h,c
 11871  004174  0EFF               	movlw	255
 11872  004176  22DA               	addwfc	fsr2h,f,c
 11873  004178  0EE6               	movlw	-26
 11874  00417A  50E3               	movf	plusw1,w,c
 11875  00417C  5EDE               	subwf	postinc2,f,c
 11876  00417E  0EE7               	movlw	-25
 11877  004180  50E3               	movf	plusw1,w,c
 11878  004182  5ADE               	subwfb	postinc2,f,c
 11879  004184  0EE8               	movlw	-24
 11880  004186  50E3               	movf	plusw1,w,c
 11881  004188  5ADE               	subwfb	postinc2,f,c
 11882  00418A  0EE9               	movlw	-23
 11883  00418C  50E3               	movf	plusw1,w,c
 11884  00418E  5ADE               	subwfb	postinc2,f,c
 11885  004190  0EEA               	movlw	-22
 11886  004192  50E3               	movf	plusw1,w,c
 11887  004194  5ADE               	subwfb	postinc2,f,c
 11888  004196  0EEB               	movlw	-21
 11889  004198  50E3               	movf	plusw1,w,c
 11890  00419A  5ADE               	subwfb	postinc2,f,c
 11891  00419C  0EEC               	movlw	-20
 11892  00419E  50E3               	movf	plusw1,w,c
 11893  0041A0  5ADE               	subwfb	postinc2,f,c
 11894  0041A2  0EED               	movlw	-19
 11895  0041A4  50E3               	movf	plusw1,w,c
 11896  0041A6  5ADE               	subwfb	postinc2,f,c
 11897                           
 11898                           ;stkvar	_quotient @ sp[(-10)+0]
 11899  0041A8  0EF6               	movlw	-10
 11900  0041AA  80E3               	bsf	plusw1,0,c
 11901  0041AC                     l5413:
 11902                           
 11903                           ;stkvar	_divisor @ sp[(-10)+-16]
 11904  0041AC  90D8               	bcf	status,0,c
 11905  0041AE  0EED               	movlw	-19
 11906  0041B0  32E3               	rrcf	plusw1,f,c
 11907  0041B2  0EEC               	movlw	-20
 11908  0041B4  32E3               	rrcf	plusw1,f,c
 11909  0041B6  0EEB               	movlw	-21
 11910  0041B8  32E3               	rrcf	plusw1,f,c
 11911  0041BA  0EEA               	movlw	-22
 11912  0041BC  32E3               	rrcf	plusw1,f,c
 11913  0041BE  0EE9               	movlw	-23
 11914  0041C0  32E3               	rrcf	plusw1,f,c
 11915  0041C2  0EE8               	movlw	-24
 11916  0041C4  32E3               	rrcf	plusw1,f,c
 11917  0041C6  0EE7               	movlw	-25
 11918  0041C8  32E3               	rrcf	plusw1,f,c
 11919  0041CA  0EE6               	movlw	-26
 11920  0041CC  32E3               	rrcf	plusw1,f,c
 11921                           
 11922                           ;stkvar	_counter @ sp[(-10)+9]
 11923  0041CE  0EFF               	movlw	-1
 11924  0041D0  50E3               	movf	plusw1,w,c
 11925  0041D2  6E39               	movwf	btemp,c
 11926  0041D4  0E01               	movlw	1
 11927  0041D6  5E39               	subwf	btemp,f,c
 11928  0041D8  0EFF               	movlw	-1
 11929  0041DA  0060  F0E7  FFE3   	movff	btemp,plusw1
 11930  0041E0  A4D8               	btfss	status,2,c
 11931  0041E2  D791               	goto	u2560
 11932  0041E4                     u2580:
 11933                           
 11934                           ;stkvar	_sign @ sp[(-10)+8]
 11935  0041E4  0EFE               	movlw	-2
 11936  0041E6  50E3               	movf	plusw1,w,c
 11937  0041E8  B4D8               	btfsc	status,2,c
 11938  0041EA  D025               	goto	u2600
 11939                           
 11940                           ;stkvar	_quotient @ sp[(-10)+0]
 11941                           ;stkvar	_quotient @ sp[(-10)+0]
 11942  0041EC  0EF6               	movlw	-10
 11943  0041EE  6CE3               	negf	plusw1,c
 11944  0041F0  0EF7               	movlw	-9
 11945  0041F2  1EE3               	comf	plusw1,f,c
 11946  0041F4  0EF8               	movlw	-8
 11947  0041F6  1EE3               	comf	plusw1,f,c
 11948  0041F8  0EF9               	movlw	-7
 11949  0041FA  1EE3               	comf	plusw1,f,c
 11950  0041FC  0EFA               	movlw	-6
 11951  0041FE  1EE3               	comf	plusw1,f,c
 11952  004200  0EFB               	movlw	-5
 11953  004202  1EE3               	comf	plusw1,f,c
 11954  004204  0EFC               	movlw	-4
 11955  004206  1EE3               	comf	plusw1,f,c
 11956  004208  0EFD               	movlw	-3
 11957  00420A  1EE3               	comf	plusw1,f,c
 11958  00420C  E314               	bnc	u2600
 11959  00420E  0EF7               	movlw	-9
 11960  004210  2AE3               	incf	plusw1,f,c
 11961  004212  E311               	bnc	u2600
 11962  004214  0EF8               	movlw	-8
 11963  004216  2AE3               	incf	plusw1,f,c
 11964  004218  E30E               	bnc	u2600
 11965  00421A  0EF9               	movlw	-7
 11966  00421C  2AE3               	incf	plusw1,f,c
 11967  00421E  E30B               	bnc	u2600
 11968  004220  0EFA               	movlw	-6
 11969  004222  2AE3               	incf	plusw1,f,c
 11970  004224  E308               	bnc	u2600
 11971  004226  0EFB               	movlw	-5
 11972  004228  2AE3               	incf	plusw1,f,c
 11973  00422A  E305               	bnc	u2600
 11974  00422C  0EFC               	movlw	-4
 11975  00422E  2AE3               	incf	plusw1,f,c
 11976  004230  E302               	bnc	u2600
 11977  004232  0EFD               	movlw	-3
 11978  004234  2AE3               	incf	plusw1,f,c
 11979  004236                     u2600:
 11980                           
 11981                           ;stkvar	_quotient @ sp[(-10)+0]
 11982  004236  0EF6               	movlw	246
 11983  004238  24E1               	addwf	fsr1l,w,c
 11984  00423A  6ED9               	movwf	fsr2l,c
 11985  00423C  0EFF               	movlw	255
 11986  00423E  20E2               	addwfc	fsr1h,w,c
 11987  004240  6EDA               	movwf	fsr2h,c
 11988                           
 11989                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11990  004242  0E08               	movlw	8
 11991  004244  6E39               	movwf	btemp,c
 11992  004246  0EEE               	movlw	-18
 11993  004248                     us261999:
 11994  004248  006F FF7B FFE3     	movff	postinc2,plusw1
 11995  00424E  28E8               	incf	wreg,w,c
 11996  004250  2E39               	decfsz	btemp,f,c
 11997  004252  D7FA               	bra	us261999
 11998                           
 11999                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 12000  004254  0EF6               	movlw	246
 12001  004256  26E1               	addwf	fsr1l,f,c
 12002  004258  0EFF               	movlw	255
 12003  00425A  22E2               	addwfc	fsr1h,f,c
 12004  00425C  0012               	return		;funcret
 12005  00425E                     __end_of___aodiv:
 12006                           	opt callstack 0
 12007                           
 12008 ;; *************** function _ctoa *****************
 12009 ;; Defined at:
 12010 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12013 ;;		 -> f(5), NULL(0), 
 12014 ;;  c               1  [STACK] unsigned char 
 12015 ;; Auto vars:     Size  Location     Type
 12016 ;;  w               2  [STACK] int 
 12017 ;;  l               2    0        int 
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  2  [STACK] int 
 12020 ;; Registers used:
 12021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12031 ;;Total ram usage:        0 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    8
 12034 ;; This function calls:
 12035 ;;		_pad
 12036 ;; This function is called by:
 12037 ;;		_vfpfcnvrt
 12038 ;; This function uses a reentrant model
 12039 ;;
 12040                           
 12041                           	psect	text47
 12042  00564C                     __ptext47:
 12043                           	opt callstack 0
 12044  00564C                     _ctoa:
 12045                           	opt callstack 0
 12046                           
 12047                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12048  00564C  52E6               	movf	postinc1,f,c
 12049  00564E  52E6               	movf	postinc1,f,c
 12050                           
 12051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 12052                           
 12053                           ;incstack = 0
 12054  005650  501D               	movf	_width,w,c
 12055  005652  101E               	iorwf	_width+1,w,c
 12056  005654  A4D8               	btfss	status,2,c
 12057  005656  D009               	goto	l8133
 12058                           
 12059                           ;stkvar	_w @ sp[(-2)+0]
 12060  005658  0EFE               	movlw	-2
 12061  00565A  0060  F077  FFE3   	movff	_width,plusw1
 12062  005660  0EFF               	movlw	-1
 12063  005662  0060  F07B  FFE3   	movff	_width+1,plusw1
 12064  005668  D016               	goto	l8135
 12065  00566A                     l8133:
 12066  00566A  0EFF               	movlw	255
 12067  00566C  6E43               	movwf	btemp+10,c
 12068  00566E  0EFF               	movlw	255
 12069  005670  6E44               	movwf	btemp+11,c
 12070  005672  0060  F074  F041   	movff	_width,btemp+8
 12071  005678  0060  F078  F042   	movff	_width+1,btemp+9
 12072  00567E  5043               	movf	btemp+10,w,c
 12073  005680  2641               	addwf	btemp+8,f,c
 12074  005682  5044               	movf	btemp+11,w,c
 12075  005684  2242               	addwfc	btemp+9,f,c
 12076                           
 12077                           ;stkvar	_w @ sp[(-2)+0]
 12078  005686  0EFE               	movlw	-2
 12079  005688  0060  F107  FFE3   	movff	btemp+8,plusw1
 12080  00568E  0EFF               	movlw	-1
 12081  005690  0060  F10B  FFE3   	movff	btemp+9,plusw1
 12082  005696                     l8135:
 12083                           
 12084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 12085                           ;stkvar	_c @ sp[(-2)+-3]
 12086  005696  0EFB               	movlw	-5
 12087  005698  006F FF8C  F1D0    	movff	plusw1,_dbuf
 12088                           
 12089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 12090  00569E  0101               	movlb	1	; () banked
 12091  0056A0  6BD1               	clrf	(_dbuf+1)& (0+255),b
 12092                           
 12093                           ; BSR set to: 1
 12094                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 12095                           ;stkvar	_w @ sp[(-2)+0]
 12096  0056A2  0EFE               	movlw	-2
 12097  0056A4  006F FF8F FFE6     	movff	plusw1,postinc1
 12098  0056AA  006F FF8F FFE6     	movff	plusw1,postinc1
 12099  0056B0  0ED0               	movlw	low _dbuf
 12100  0056B2  6EE6               	movwf	postinc1,c
 12101  0056B4  0E01               	movlw	high _dbuf
 12102  0056B6  6EE6               	movwf	postinc1,c
 12103                           
 12104                           ;stkvar	_fp @ sp[(-6)+-2]
 12105  0056B8  0EF8               	movlw	-8
 12106  0056BA  006F FF8F FFE6     	movff	plusw1,postinc1
 12107  0056C0  006F FF8F FFE6     	movff	plusw1,postinc1
 12108  0056C6  EC6C  F025         	call	_pad	;wreg free
 12109                           
 12110                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 12111  0056CA  0EFB               	movlw	251
 12112  0056CC  26E1               	addwf	fsr1l,f,c
 12113  0056CE  0EFF               	movlw	255
 12114  0056D0  22E2               	addwfc	fsr1h,f,c
 12115  0056D2  0012               	return		;funcret
 12116  0056D4                     __end_of_ctoa:
 12117                           	opt callstack 0
 12118                           
 12119 ;; *************** function _pad *****************
 12120 ;; Defined at:
 12121 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12124 ;;		 -> f(5), NULL(0), 
 12125 ;;  buf             2  [STACK] PTR unsigned char 
 12126 ;;		 -> dbuf(32), 
 12127 ;;  p               2  [STACK] int 
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;  w               2  [STACK] int 
 12130 ;;  i               2  [STACK] int 
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  2  [STACK] int 
 12133 ;; Registers used:
 12134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/1
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12144 ;;Total ram usage:        0 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    7
 12147 ;; This function calls:
 12148 ;;		_fputc
 12149 ;;		_fputs
 12150 ;;		_strlen
 12151 ;; This function is called by:
 12152 ;;		_ctoa
 12153 ;;		_dtoa
 12154 ;; This function uses a reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text48
 12158  004AD8                     __ptext48:
 12159                           	opt callstack 0
 12160  004AD8                     _pad:
 12161                           	opt callstack 0
 12162                           
 12163                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12164  004AD8  52E6               	movf	postinc1,f,c
 12165  004ADA  52E6               	movf	postinc1,f,c
 12166  004ADC  52E6               	movf	postinc1,f,c
 12167  004ADE  52E6               	movf	postinc1,f,c
 12168                           
 12169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 12170                           
 12171                           ;incstack = 0
 12172  004AE0  A021               	btfss	_flags,0,c
 12173  004AE2  D010               	goto	l8111
 12174                           
 12175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 12176                           ;stkvar	_fp @ sp[(-4)+-2]
 12177  004AE4  0EFA               	movlw	-6
 12178  004AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 12179  004AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 12180                           
 12181                           ;stkvar	_buf @ sp[(-6)+-4]
 12182  004AF2  0EF6               	movlw	-10
 12183  004AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12184  004AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12185  004B00  EC91  F02A         	call	_fputs	;wreg free
 12186  004B04                     l8111:
 12187                           
 12188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 12189                           ;stkvar	_p @ sp[(-4)+-6]
 12190  004B04  0EF7               	movlw	-9
 12191  004B06  BEE3               	btfsc	plusw1,7,c
 12192  004B08  D011               	goto	l8115
 12193                           
 12194                           ;stkvar	_p @ sp[(-4)+-6]
 12195                           ;stkvar	_w @ sp[(-4)+0]
 12196  004B0A  0EF6               	movlw	-10
 12197  004B0C  006F FF8C  F039    	movff	plusw1,btemp
 12198  004B12  0EFC               	movlw	-4
 12199  004B14  0060  F0E7  FFE3   	movff	btemp,plusw1
 12200  004B1A  0EF7               	movlw	-9
 12201  004B1C  006F FF8C  F039    	movff	plusw1,btemp
 12202  004B22  0EFD               	movlw	-3
 12203  004B24  0060  F0E7  FFE3   	movff	btemp,plusw1
 12204  004B2A  D004               	goto	l1845
 12205  004B2C                     l8115:
 12206                           
 12207                           ;stkvar	_w @ sp[(-4)+0]
 12208  004B2C  0EFC               	movlw	-4
 12209  004B2E  6AE3               	clrf	plusw1,c
 12210  004B30  0EFD               	movlw	-3
 12211  004B32  6AE3               	clrf	plusw1,c
 12212  004B34                     l1845:
 12213                           
 12214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12215                           ;stkvar	_i @ sp[(-4)+2]
 12216  004B34  0EFE               	movlw	-2
 12217  004B36  6AE3               	clrf	plusw1,c
 12218  004B38  0EFF               	movlw	-1
 12219  004B3A  6AE3               	clrf	plusw1,c
 12220                           
 12221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12222  004B3C  D01E               	goto	l8121
 12223  004B3E                     l8117:
 12224                           
 12225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 12226                           ;stkvar	_fp @ sp[(-4)+-2]
 12227  004B3E  0EFA               	movlw	-6
 12228  004B40  006F FF8F FFE6     	movff	plusw1,postinc1
 12229  004B46  006F FF8F FFE6     	movff	plusw1,postinc1
 12230  004B4C  0E20               	movlw	32
 12231  004B4E  6EE6               	movwf	postinc1,c
 12232  004B50  0E00               	movlw	0
 12233  004B52  6EE6               	movwf	postinc1,c
 12234  004B54  ECF6  F025         	call	_fputc	;wreg free
 12235                           
 12236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12237                           ;stkvar	_i @ sp[(-4)+2]
 12238  004B58  0EFE               	movlw	-2
 12239  004B5A  50E3               	movf	plusw1,w,c
 12240  004B5C  0F01               	addlw	1
 12241  004B5E  6E39               	movwf	btemp,c
 12242  004B60  0EFE               	movlw	-2
 12243  004B62  0060  F0E7  FFE3   	movff	btemp,plusw1
 12244  004B68  6A39               	clrf	btemp,c
 12245  004B6A  0EFF               	movlw	-1
 12246  004B6C  50E3               	movf	plusw1,w,c
 12247  004B6E  2039               	addwfc	btemp,w,c
 12248  004B70  6E39               	movwf	btemp,c
 12249  004B72  0EFF               	movlw	-1
 12250  004B74  0060  F0E7  FFE3   	movff	btemp,plusw1
 12251  004B7A                     l8121:
 12252                           
 12253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12254                           ;stkvar	_w @ sp[(-4)+0]
 12255                           ;stkvar	_i @ sp[(-4)+2]
 12256  004B7A  50E1               	movf	fsr1l,w,c
 12257  004B7C  0FFE               	addlw	-2
 12258  004B7E  6ED9               	movwf	fsr2l,c
 12259  004B80  50E2               	movf	fsr1h,w,c
 12260  004B82  6EDA               	movwf	fsr2h,c
 12261  004B84  0EFF               	movlw	255
 12262  004B86  22DA               	addwfc	fsr2h,f,c
 12263  004B88  0EFC               	movlw	-4
 12264  004B8A  50E3               	movf	plusw1,w,c
 12265  004B8C  5CDE               	subwf	postinc2,w,c
 12266  004B8E  50DE               	movf	postinc2,w,c
 12267  004B90  0A80               	xorlw	128
 12268  004B92  6E39               	movwf	btemp,c
 12269  004B94  0EFD               	movlw	-3
 12270  004B96  50E3               	movf	plusw1,w,c
 12271  004B98  0A80               	xorlw	128
 12272  004B9A  5839               	subwfb	btemp,w,c
 12273  004B9C  A0D8               	btfss	status,0,c
 12274  004B9E  D7CF               	goto	l8117
 12275                           
 12276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 12277  004BA0  B021               	btfsc	_flags,0,c
 12278  004BA2  D010               	goto	l8125
 12279                           
 12280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 12281                           ;stkvar	_fp @ sp[(-4)+-2]
 12282  004BA4  0EFA               	movlw	-6
 12283  004BA6  006F FF8F FFE6     	movff	plusw1,postinc1
 12284  004BAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12285                           
 12286                           ;stkvar	_buf @ sp[(-6)+-4]
 12287  004BB2  0EF6               	movlw	-10
 12288  004BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12289  004BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 12290  004BC0  EC91  F02A         	call	_fputs	;wreg free
 12291  004BC4                     l8125:
 12292                           
 12293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 12294                           ;stkvar	_w @ sp[(-4)+0]
 12295                           ;stkvar	_buf @ sp[(-4)+-4]
 12296  004BC4  0EF8               	movlw	-8
 12297  004BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12298  004BCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12299  004BD2  EC57  F029         	call	_strlen	;wreg free
 12300  004BD6  0EFC               	movlw	-4
 12301  004BD8  50E3               	movf	plusw1,w,c
 12302  004BDA  2639               	addwf	btemp,f,c
 12303  004BDC  0EFD               	movlw	-3
 12304  004BDE  50E3               	movf	plusw1,w,c
 12305  004BE0  223A               	addwfc	btemp+1,f,c
 12306                           
 12307                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 12308  004BE2  0EF6               	movlw	246
 12309  004BE4  26E1               	addwf	fsr1l,f,c
 12310  004BE6  0EFF               	movlw	255
 12311  004BE8  22E2               	addwfc	fsr1h,f,c
 12312  004BEA  0012               	return		;funcret
 12313  004BEC                     __end_of_pad:
 12314                           	opt callstack 0
 12315                           
 12316 ;; *************** function _strlen *****************
 12317 ;; Defined at:
 12318 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;  s               2  [STACK] PTR const unsigned char 
 12321 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12322 ;;		 -> STR_3(6), V(94), 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;  a               2  [STACK] PTR const unsigned char 
 12325 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12326 ;;		 -> STR_3(6), V(94), 
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  2  [STACK] unsigned int 
 12329 ;; Registers used:
 12330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12340 ;;Total ram usage:        0 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; Hardware stack levels required when called:    3
 12343 ;; This function calls:
 12344 ;;		Nothing
 12345 ;; This function is called by:
 12346 ;;		_eaDogM_WriteString
 12347 ;;		_pad
 12348 ;;		_stoa
 12349 ;; This function uses a reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text49
 12353  0052AE                     __ptext49:
 12354                           	opt callstack 0
 12355  0052AE                     _strlen:
 12356                           	opt callstack 0
 12357                           
 12358                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12359  0052AE  52E6               	movf	postinc1,f,c
 12360  0052B0  52E6               	movf	postinc1,f,c
 12361                           
 12362                           ;stkvar	_s @ sp[(-2)+-2]
 12363                           
 12364                           ;incstack = 0
 12365  0052B2  0EFC               	movlw	-4
 12366  0052B4  006F FF8C  F043    	movff	plusw1,btemp+10
 12367  0052BA  0EFD               	movlw	-3
 12368  0052BC  006F FF8C  F044    	movff	plusw1,btemp+11
 12369                           
 12370                           ;stkvar	_a @ sp[(-2)+0]
 12371  0052C2  0EFF               	movlw	-1
 12372  0052C4  0060  F113  FFE3   	movff	btemp+11,plusw1
 12373  0052CA  0EFE               	movlw	-2
 12374  0052CC  0060  F10F  FFE3   	movff	btemp+10,plusw1
 12375  0052D2  D011               	goto	l8093
 12376  0052D4                     l8091:
 12377                           
 12378                           ;stkvar	_s @ sp[(-2)+-2]
 12379  0052D4  0EFC               	movlw	-4
 12380  0052D6  50E3               	movf	plusw1,w,c
 12381  0052D8  0F01               	addlw	1
 12382  0052DA  6E39               	movwf	btemp,c
 12383  0052DC  0EFC               	movlw	-4
 12384  0052DE  0060  F0E7  FFE3   	movff	btemp,plusw1
 12385  0052E4  6A39               	clrf	btemp,c
 12386  0052E6  0EFD               	movlw	-3
 12387  0052E8  50E3               	movf	plusw1,w,c
 12388  0052EA  2039               	addwfc	btemp,w,c
 12389  0052EC  6E39               	movwf	btemp,c
 12390  0052EE  0EFD               	movlw	-3
 12391  0052F0  0060  F0E7  FFE3   	movff	btemp,plusw1
 12392  0052F6                     l8093:
 12393                           
 12394                           ;stkvar	_s @ sp[(-2)+-2]
 12395  0052F6  0EFC               	movlw	-4
 12396  0052F8  006F FF8F FFF6     	movff	plusw1,tblptrl
 12397  0052FE  0EFD               	movlw	-3
 12398  005300  006F FF8F FFF7     	movff	plusw1,tblptrh
 12399  005306  0E00               	movlw	low (__smallconst shr (0+16))
 12400  005308  6EF8               	movwf	tblptru,c
 12401  00530A  0E1F               	movlw	(high __ramtop+-1)
 12402  00530C  64F7               	cpfsgt	tblptrh,c
 12403  00530E  D003               	bra	u4707
 12404  005310  0008               	tblrd		*
 12405  005312  50F5               	movf	tablat,w,c
 12406  005314  D007               	bra	u4700
 12407  005316                     u4707:
 12408  005316  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12409  00531C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12410  005322  50EF               	movf	indf0,w,c
 12411  005324                     u4700:
 12412  005324  0900               	iorlw	0
 12413  005326  A4D8               	btfss	status,2,c
 12414  005328  D7D5               	goto	l8091
 12415                           
 12416                           ;stkvar	_a @ sp[(-2)+0]
 12417                           ;stkvar	_s @ sp[(-2)+-2]
 12418  00532A  0EFC               	movlw	-4
 12419  00532C  006F FF8C  F039    	movff	plusw1,btemp
 12420  005332  0EFD               	movlw	-3
 12421  005334  006F FF8C  F03A    	movff	plusw1,btemp+1
 12422  00533A  0EFE               	movlw	-2
 12423  00533C  50E3               	movf	plusw1,w,c
 12424  00533E  5E39               	subwf	btemp,f,c
 12425  005340  0EFF               	movlw	-1
 12426  005342  50E3               	movf	plusw1,w,c
 12427  005344  5A3A               	subwfb	btemp+1,f,c
 12428                           
 12429                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12430  005346  52E5               	movf	postdec1,f,c
 12431  005348  52E5               	movf	postdec1,f,c
 12432  00534A  52E5               	movf	postdec1,f,c
 12433  00534C  52E5               	movf	postdec1,f,c
 12434  00534E  0012               	return		;funcret
 12435  005350                     __end_of_strlen:
 12436                           	opt callstack 0
 12437                           
 12438 ;; *************** function _fputs *****************
 12439 ;; Defined at:
 12440 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;  s               2  [STACK] PTR const unsigned char 
 12443 ;;		 -> dbuf(32), 
 12444 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12445 ;;		 -> f(5), NULL(0), 
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;  i               2  [STACK] int 
 12448 ;;  c               1  [STACK] unsigned char 
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  2  [STACK] int 
 12451 ;; Registers used:
 12452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12453 ;; Tracked objects:
 12454 ;;		On entry : 0/1
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12462 ;;Total ram usage:        0 bytes
 12463 ;; Hardware stack levels used:    1
 12464 ;; Hardware stack levels required when called:    6
 12465 ;; This function calls:
 12466 ;;		_fputc
 12467 ;; This function is called by:
 12468 ;;		_pad
 12469 ;; This function uses a reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text50
 12473  005522                     __ptext50:
 12474                           	opt callstack 0
 12475  005522                     _fputs:
 12476                           	opt callstack 0
 12477                           
 12478                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12479  005522  52E6               	movf	postinc1,f,c
 12480  005524  52E6               	movf	postinc1,f,c
 12481  005526  52E6               	movf	postinc1,f,c
 12482                           
 12483                           ;stkvar	_i @ sp[(-3)+0]
 12484                           
 12485                           ;incstack = 0
 12486  005528  0EFD               	movlw	-3
 12487  00552A  6AE3               	clrf	plusw1,c
 12488  00552C  0EFE               	movlw	-2
 12489  00552E  6AE3               	clrf	plusw1,c
 12490  005530  D01F               	goto	l8105
 12491  005532                     l8101:
 12492                           
 12493                           ;stkvar	_fp @ sp[(-3)+-4]
 12494  005532  0EF9               	movlw	-7
 12495  005534  006F FF8F FFE6     	movff	plusw1,postinc1
 12496  00553A  006F FF8F FFE6     	movff	plusw1,postinc1
 12497                           
 12498                           ;stkvar	_c @ sp[(-5)+2]
 12499  005540  0EFD               	movlw	-3
 12500  005542  50E3               	movf	plusw1,w,c
 12501  005544  6EE6               	movwf	postinc1,c
 12502  005546  0E00               	movlw	0
 12503  005548  6EE6               	movwf	postinc1,c
 12504  00554A  ECF6  F025         	call	_fputc	;wreg free
 12505                           
 12506                           ;stkvar	_i @ sp[(-3)+0]
 12507  00554E  0EFD               	movlw	-3
 12508  005550  50E3               	movf	plusw1,w,c
 12509  005552  0F01               	addlw	1
 12510  005554  6E39               	movwf	btemp,c
 12511  005556  0EFD               	movlw	-3
 12512  005558  0060  F0E7  FFE3   	movff	btemp,plusw1
 12513  00555E  6A39               	clrf	btemp,c
 12514  005560  0EFE               	movlw	-2
 12515  005562  50E3               	movf	plusw1,w,c
 12516  005564  2039               	addwfc	btemp,w,c
 12517  005566  6E39               	movwf	btemp,c
 12518  005568  0EFE               	movlw	-2
 12519  00556A  0060  F0E7  FFE3   	movff	btemp,plusw1
 12520  005570                     l8105:
 12521                           
 12522                           ;stkvar	_i @ sp[(-3)+0]
 12523  005570  0EFD               	movlw	-3
 12524  005572  006F FF8C  F043    	movff	plusw1,btemp+10
 12525  005578  0EFE               	movlw	-2
 12526  00557A  006F FF8C  F044    	movff	plusw1,btemp+11
 12527                           
 12528                           ;stkvar	_s @ sp[(-3)+-2]
 12529  005580  0EFB               	movlw	-5
 12530  005582  006F FF8C  F041    	movff	plusw1,btemp+8
 12531  005588  0EFC               	movlw	-4
 12532  00558A  006F FF8C  F042    	movff	plusw1,btemp+9
 12533  005590  5043               	movf	btemp+10,w,c
 12534  005592  2441               	addwf	btemp+8,w,c
 12535  005594  6ED9               	movwf	fsr2l,c
 12536  005596  5044               	movf	btemp+11,w,c
 12537  005598  2042               	addwfc	btemp+9,w,c
 12538  00559A  6EDA               	movwf	fsr2h,c
 12539  00559C  50DF               	movf	indf2,w,c
 12540  00559E  6E44               	movwf	btemp+11,c
 12541                           
 12542                           ;stkvar	_c @ sp[(-3)+2]
 12543  0055A0  0EFF               	movlw	-1
 12544  0055A2  0060  F113  FFE3   	movff	btemp+11,plusw1
 12545  0055A8  0EFF               	movlw	-1
 12546  0055AA  50E3               	movf	plusw1,w,c
 12547  0055AC  A4D8               	btfss	status,2,c
 12548  0055AE  D7C1               	goto	l8101
 12549                           
 12550                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12551  0055B0  0EF9               	movlw	249
 12552  0055B2  26E1               	addwf	fsr1l,f,c
 12553  0055B4  0EFF               	movlw	255
 12554  0055B6  22E2               	addwfc	fsr1h,f,c
 12555  0055B8  0012               	return		;funcret
 12556  0055BA                     __end_of_fputs:
 12557                           	opt callstack 0
 12558                           
 12559 ;; *************** function _fputc *****************
 12560 ;; Defined at:
 12561 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;  c               2  [STACK] int 
 12564 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12565 ;;		 -> f(5), NULL(0), 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;		None
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  2  [STACK] int 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;Total ram usage:        0 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    5
 12584 ;; This function calls:
 12585 ;;		_putch
 12586 ;; This function is called by:
 12587 ;;		_pad
 12588 ;;		_stoa
 12589 ;;		_vfpfcnvrt
 12590 ;;		_fputs
 12591 ;; This function uses a reentrant model
 12592 ;;
 12593                           
 12594                           	psect	text51
 12595  004BEC                     __ptext51:
 12596                           	opt callstack 0
 12597  004BEC                     _fputc:
 12598                           	opt callstack 21
 12599                           
 12600                           ;stkvar	_fp @ sp[(0)+-4]
 12601                           
 12602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12603                           ;incstack = 0
 12604  004BEC  0EFC               	movlw	-4
 12605  004BEE  006F FF8C  F039    	movff	plusw1,btemp
 12606  004BF4  0EFD               	movlw	-3
 12607  004BF6  50E3               	movf	plusw1,w,c
 12608  004BF8  1039               	iorwf	btemp,w,c
 12609  004BFA  B4D8               	btfsc	status,2,c
 12610  004BFC  D009               	goto	u4670
 12611                           
 12612                           ;stkvar	_fp @ sp[(0)+-4]
 12613  004BFE  0EFC               	movlw	-4
 12614  004C00  006F FF8C  F039    	movff	plusw1,btemp
 12615  004C06  0EFD               	movlw	-3
 12616  004C08  50E3               	movf	plusw1,w,c
 12617  004C0A  1039               	iorwf	btemp,w,c
 12618  004C0C  A4D8               	btfss	status,2,c
 12619  004C0E  D006               	goto	l8081
 12620  004C10                     u4670:
 12621                           
 12622                           ;stkvar	_c @ sp[(0)+-2]
 12623  004C10  0EFE               	movlw	-2
 12624  004C12  50E3               	movf	plusw1,w,c
 12625  004C14  6EE6               	movwf	postinc1,c
 12626  004C16  ECB0  F031         	call	_putch	;wreg free
 12627  004C1A  D069               	goto	l2628
 12628  004C1C                     l8081:
 12629                           
 12630                           ;stkvar	_fp @ sp[(0)+-4]
 12631  004C1C  0EFC               	movlw	-4
 12632  004C1E  006F FF8C  F043    	movff	plusw1,btemp+10
 12633  004C24  0EFD               	movlw	-3
 12634  004C26  006F FF8C  F044    	movff	plusw1,btemp+11
 12635  004C2C  0E03               	movlw	3
 12636  004C2E  2443               	addwf	btemp+10,w,c
 12637  004C30  6ED9               	movwf	fsr2l,c
 12638  004C32  0E00               	movlw	0
 12639  004C34  2044               	addwfc	btemp+11,w,c
 12640  004C36  6EDA               	movwf	fsr2h,c
 12641  004C38  50DE               	movf	postinc2,w,c
 12642  004C3A  10DE               	iorwf	postinc2,w,c
 12643  004C3C  B4D8               	btfsc	status,2,c
 12644  004C3E  D026               	goto	u4690
 12645                           
 12646                           ;stkvar	_fp @ sp[(0)+-4]
 12647  004C40  0EFC               	movlw	-4
 12648  004C42  006F FF8C  F043    	movff	plusw1,btemp+10
 12649  004C48  0EFD               	movlw	-3
 12650  004C4A  006F FF8C  F044    	movff	plusw1,btemp+11
 12651  004C50  0E03               	movlw	3
 12652  004C52  2443               	addwf	btemp+10,w,c
 12653  004C54  6ED9               	movwf	fsr2l,c
 12654  004C56  0E00               	movlw	0
 12655  004C58  2044               	addwfc	btemp+11,w,c
 12656  004C5A  6EDA               	movwf	fsr2h,c
 12657                           
 12658                           ;stkvar	_fp @ sp[(0)+-4]
 12659  004C5C  0EFC               	movlw	-4
 12660  004C5E  006F FF8C  F043    	movff	plusw1,btemp+10
 12661  004C64  0EFD               	movlw	-3
 12662  004C66  006F FF8C  F044    	movff	plusw1,btemp+11
 12663  004C6C  0E01               	movlw	1
 12664  004C6E  2443               	addwf	btemp+10,w,c
 12665  004C70  6EE9               	movwf	fsr0l,c
 12666  004C72  0E00               	movlw	0
 12667  004C74  2044               	addwfc	btemp+11,w,c
 12668  004C76  6EEA               	movwf	fsr0h,c
 12669  004C78  50DE               	movf	postinc2,w,c
 12670  004C7A  5CEE               	subwf	postinc0,w,c
 12671  004C7C  50EE               	movf	postinc0,w,c
 12672  004C7E  0A80               	xorlw	128
 12673  004C80  6E39               	movwf	btemp,c
 12674  004C82  50DE               	movf	postinc2,w,c
 12675  004C84  0A80               	xorlw	128
 12676  004C86  5839               	subwfb	btemp,w,c
 12677  004C88  B0D8               	btfsc	status,0,c
 12678  004C8A  D031               	goto	l2628
 12679  004C8C                     u4690:
 12680                           
 12681                           ;stkvar	_c @ sp[(0)+-2]
 12682                           ;stkvar	_fp @ sp[(0)+-4]
 12683  004C8C  0EFC               	movlw	-4
 12684  004C8E  006F FF8C  F043    	movff	plusw1,btemp+10
 12685  004C94  0EFD               	movlw	-3
 12686  004C96  006F FF8C  F044    	movff	plusw1,btemp+11
 12687  004C9C  0E01               	movlw	1
 12688  004C9E  2443               	addwf	btemp+10,w,c
 12689  004CA0  6ED9               	movwf	fsr2l,c
 12690  004CA2  0E00               	movlw	0
 12691  004CA4  2044               	addwfc	btemp+11,w,c
 12692  004CA6  6EDA               	movwf	fsr2h,c
 12693  004CA8  50DF               	movf	indf2,w,c
 12694  004CAA  6E44               	movwf	btemp+11,c
 12695                           
 12696                           ;stkvar	_fp @ sp[(0)+-4]
 12697  004CAC  0EFC               	movlw	-4
 12698  004CAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12699  004CB4  0EFD               	movlw	-3
 12700  004CB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12701  004CBC  50DF               	movf	indf2,w,c
 12702  004CBE  2444               	addwf	btemp+11,w,c
 12703  004CC0  6ED9               	movwf	fsr2l,c
 12704  004CC2  6ADA               	clrf	fsr2h,c
 12705  004CC4  0EFE               	movlw	-2
 12706  004CC6  006F FF8F FFDF     	movff	plusw1,indf2
 12707                           
 12708                           ;stkvar	_fp @ sp[(0)+-4]
 12709  004CCC  0EFC               	movlw	-4
 12710  004CCE  006F FF8C  F043    	movff	plusw1,btemp+10
 12711  004CD4  0EFD               	movlw	-3
 12712  004CD6  006F FF8C  F044    	movff	plusw1,btemp+11
 12713  004CDC  0E01               	movlw	1
 12714  004CDE  2443               	addwf	btemp+10,w,c
 12715  004CE0  6ED9               	movwf	fsr2l,c
 12716  004CE2  0E00               	movlw	0
 12717  004CE4  2044               	addwfc	btemp+11,w,c
 12718  004CE6  6EDA               	movwf	fsr2h,c
 12719  004CE8  2ADE               	incf	postinc2,f,c
 12720  004CEA  0E00               	movlw	0
 12721  004CEC  22DD               	addwfc	postdec2,f,c
 12722  004CEE                     l2628:
 12723                           
 12724                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12725  004CEE  52E5               	movf	postdec1,f,c
 12726  004CF0  52E5               	movf	postdec1,f,c
 12727  004CF2  52E5               	movf	postdec1,f,c
 12728  004CF4  52E5               	movf	postdec1,f,c
 12729  004CF6  0012               	return		;funcret
 12730  004CF8                     __end_of_fputc:
 12731                           	opt callstack 0
 12732                           
 12733 ;; *************** function _putch *****************
 12734 ;; Defined at:
 12735 ;;		line 138 in file "eadog.c"
 12736 ;; Parameters:    Size  Location     Type
 12737 ;;  c               1  [STACK] unsigned char 
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;		None
 12740 ;; Return value:  Size  Location     Type
 12741 ;;                  1  [STACK] void 
 12742 ;; Registers used:
 12743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12744 ;; Tracked objects:
 12745 ;;		On entry : 0/0
 12746 ;;		On exit  : 0/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12753 ;;Total ram usage:        0 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    4
 12756 ;; This function calls:
 12757 ;;		_ringBufS_put_dma
 12758 ;; This function is called by:
 12759 ;;		_fputc
 12760 ;; This function uses a reentrant model
 12761 ;;
 12762                           
 12763                           	psect	text52
 12764  006360                     __ptext52:
 12765                           	opt callstack 0
 12766  006360                     _putch:
 12767                           	opt callstack 21
 12768                           
 12769                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12770                           ;stkvar	_c @ sp[(0)+-1]
 12771                           
 12772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12773                           ;incstack = 0
 12774  006360  0EFF               	movlw	-1
 12775  006362  50E3               	movf	plusw1,w,c
 12776  006364  6EE6               	movwf	postinc1,c
 12777  006366  0060  F347  FFE6   	movff	_spi_link+6,postinc1
 12778  00636C  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
 12779  006372  EC02  F029         	call	_ringBufS_put_dma	;wreg free
 12780                           
 12781                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12782  006376  52E5               	movf	postdec1,f,c
 12783  006378  0012               	return		;funcret
 12784  00637A                     __end_of_putch:
 12785                           	opt callstack 0
 12786                           
 12787 ;; *************** function _ringBufS_put_dma *****************
 12788 ;; Defined at:
 12789 ;;		line 67 in file "ringbufs.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12792 ;;		 -> ring_buf1(67), 
 12793 ;;  c               1  [STACK] const unsigned char 
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;		None
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  1  [STACK] void 
 12798 ;; Registers used:
 12799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12809 ;;Total ram usage:        0 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:    3
 12812 ;; This function calls:
 12813 ;;		Nothing
 12814 ;; This function is called by:
 12815 ;;		_putch
 12816 ;; This function uses a reentrant model
 12817 ;;
 12818                           
 12819                           	psect	text53
 12820  005204                     __ptext53:
 12821                           	opt callstack 0
 12822  005204                     _ringBufS_put_dma:
 12823                           	opt callstack 21
 12824                           
 12825                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12826                           ;stkvar	__this @ sp[(0)+-2]
 12827                           
 12828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12829                           ;incstack = 0
 12830  005204  0EFE               	movlw	-2
 12831  005206  006F FF8C  F043    	movff	plusw1,btemp+10
 12832  00520C  0EFF               	movlw	-1
 12833  00520E  006F FF8C  F044    	movff	plusw1,btemp+11
 12834  005214  0E42               	movlw	66
 12835  005216  2443               	addwf	btemp+10,w,c
 12836  005218  6ED9               	movwf	fsr2l,c
 12837  00521A  0E00               	movlw	0
 12838  00521C  2044               	addwfc	btemp+11,w,c
 12839  00521E  6EDA               	movwf	fsr2h,c
 12840  005220  0E40               	movlw	64
 12841  005222  60DF               	cpfslt	indf2,c
 12842  005224  D040               	goto	l1487
 12843                           
 12844                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12845                           ;stkvar	_c @ sp[(0)+-3]
 12846                           ;stkvar	__this @ sp[(0)+-2]
 12847  005226  0EFE               	movlw	-2
 12848  005228  006F FF8C  F043    	movff	plusw1,btemp+10
 12849  00522E  0EFF               	movlw	-1
 12850  005230  006F FF8C  F044    	movff	plusw1,btemp+11
 12851  005236  0E40               	movlw	64
 12852  005238  2443               	addwf	btemp+10,w,c
 12853  00523A  6ED9               	movwf	fsr2l,c
 12854  00523C  0E00               	movlw	0
 12855  00523E  2044               	addwfc	btemp+11,w,c
 12856  005240  6EDA               	movwf	fsr2h,c
 12857  005242  50DF               	movf	indf2,w,c
 12858  005244  6E44               	movwf	btemp+11,c
 12859                           
 12860                           ;stkvar	__this @ sp[(0)+-2]
 12861  005246  0EFE               	movlw	-2
 12862  005248  006F FF8C  F041    	movff	plusw1,btemp+8
 12863  00524E  0EFF               	movlw	-1
 12864  005250  006F FF8C  F042    	movff	plusw1,btemp+9
 12865  005256  5044               	movf	btemp+11,w,c
 12866  005258  2441               	addwf	btemp+8,w,c
 12867  00525A  6ED9               	movwf	fsr2l,c
 12868  00525C  0E00               	movlw	0
 12869  00525E  2042               	addwfc	btemp+9,w,c
 12870  005260  6EDA               	movwf	fsr2h,c
 12871  005262  0EFD               	movlw	-3
 12872  005264  006F FF8F FFDF     	movff	plusw1,indf2
 12873                           
 12874                           ;ringbufs.c: 71:   ++_this->head;
 12875                           ;stkvar	__this @ sp[(0)+-2]
 12876  00526A  0EFE               	movlw	-2
 12877  00526C  006F FF8C  F043    	movff	plusw1,btemp+10
 12878  005272  0EFF               	movlw	-1
 12879  005274  006F FF8C  F044    	movff	plusw1,btemp+11
 12880  00527A  0E40               	movlw	64
 12881  00527C  2443               	addwf	btemp+10,w,c
 12882  00527E  6ED9               	movwf	fsr2l,c
 12883  005280  0E00               	movlw	0
 12884  005282  2044               	addwfc	btemp+11,w,c
 12885  005284  6EDA               	movwf	fsr2h,c
 12886  005286  2ADF               	incf	indf2,f,c
 12887                           
 12888                           ;ringbufs.c: 72:   ++_this->count;
 12889                           ;stkvar	__this @ sp[(0)+-2]
 12890  005288  0EFE               	movlw	-2
 12891  00528A  006F FF8C  F043    	movff	plusw1,btemp+10
 12892  005290  0EFF               	movlw	-1
 12893  005292  006F FF8C  F044    	movff	plusw1,btemp+11
 12894  005298  0E42               	movlw	66
 12895  00529A  2443               	addwf	btemp+10,w,c
 12896  00529C  6ED9               	movwf	fsr2l,c
 12897  00529E  0E00               	movlw	0
 12898  0052A0  2044               	addwfc	btemp+11,w,c
 12899  0052A2  6EDA               	movwf	fsr2h,c
 12900  0052A4  2ADF               	incf	indf2,f,c
 12901  0052A6                     l1487:
 12902                           
 12903                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12904  0052A6  52E5               	movf	postdec1,f,c
 12905  0052A8  52E5               	movf	postdec1,f,c
 12906  0052AA  52E5               	movf	postdec1,f,c
 12907  0052AC  0012               	return		;funcret
 12908  0052AE                     __end_of_ringBufS_put_dma:
 12909                           	opt callstack 0
 12910                           
 12911 ;; *************** function _SYSTEM_Initialize *****************
 12912 ;; Defined at:
 12913 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1  [STACK] void 
 12920 ;; Registers used:
 12921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 3F/3C
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12931 ;;Total ram usage:        0 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:    5
 12934 ;; This function calls:
 12935 ;;		_ADCC_Initialize
 12936 ;;		_CLC1_Initialize
 12937 ;;		_CLKREF_Initialize
 12938 ;;		_DMA1_Initialize
 12939 ;;		_DSM_Initialize
 12940 ;;		_EXT_INT_Initialize
 12941 ;;		_INTERRUPT_Initialize
 12942 ;;		_NCO1_Initialize
 12943 ;;		_OSCILLATOR_Initialize
 12944 ;;		_PIN_MANAGER_Initialize
 12945 ;;		_PMD_Initialize
 12946 ;;		_SPI1_Initialize
 12947 ;;		_TMR5_Initialize
 12948 ;;		_TMR6_Initialize
 12949 ;;		_UART1_Initialize
 12950 ;;		_UART2_Initialize
 12951 ;; This function is called by:
 12952 ;;		_main
 12953 ;; This function uses a reentrant model
 12954 ;;
 12955                           
 12956                           	psect	text54
 12957  005B86                     __ptext54:
 12958                           	opt callstack 0
 12959  005B86                     _SYSTEM_Initialize:
 12960                           	opt callstack 25
 12961                           
 12962                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12963                           
 12964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12965                           ;incstack = 0
 12966  005B86  EC9F  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12967                           
 12968                           ; BSR set to: 57
 12969                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12970  005B8A  ECEE  F031         	call	_PMD_Initialize	;wreg free
 12971                           
 12972                           ; BSR set to: 57
 12973                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12974  005B8E  ECA8  F029         	call	_PIN_MANAGER_Initialize	;wreg free
 12975                           
 12976                           ; BSR set to: 58
 12977                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12978  005B92  ECE3  F031         	call	_OSCILLATOR_Initialize	;wreg free
 12979                           
 12980                           ; BSR set to: 57
 12981                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12982  005B96  EC35  F02D         	call	_ADCC_Initialize	;wreg free
 12983                           
 12984                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12985  005B9A  EC94  F031         	call	_NCO1_Initialize	;wreg free
 12986                           
 12987                           ; BSR set to: 63
 12988                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12989  005B9E  EC0F  F02D         	call	_EXT_INT_Initialize	;wreg free
 12990                           
 12991                           ; BSR set to: 57
 12992                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12993  005BA2  ECF3  F02F         	call	_TMR6_Initialize	;wreg free
 12994                           
 12995                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12996  005BA6  EC04  F031         	call	_CLC1_Initialize	;wreg free
 12997                           
 12998                           ; BSR set to: 60
 12999                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 13000  005BAA  EC7D  F02D         	call	_TMR5_Initialize	;wreg free
 13001                           
 13002                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 13003  005BAE  ECA2  F031         	call	_DSM_Initialize	;wreg free
 13004                           
 13005                           ; BSR set to: 60
 13006                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 13007  005BB2  ECD2  F02B         	call	_UART1_Initialize	;wreg free
 13008                           
 13009                           ; BSR set to: 57
 13010                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 13011  005BB6  EC64  F02C         	call	_UART2_Initialize	;wreg free
 13012                           
 13013                           ; BSR set to: 57
 13014                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 13015  005BBA  ECD8  F031         	call	_SPI1_Initialize	;wreg free
 13016                           
 13017                           ; BSR set to: 61
 13018                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 13019  005BBE  EC6A  F02B         	call	_DMA1_Initialize	;wreg free
 13020                           
 13021                           ; BSR set to: 59
 13022                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 13023  005BC2  EC1F  F032         	call	_CLKREF_Initialize	;wreg free
 13024                           
 13025                           ; BSR set to: 60
 13026                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13027  005BC6  0012               	return		;funcret
 13028  005BC8                     __end_of_SYSTEM_Initialize:
 13029                           	opt callstack 0
 13030                           
 13031 ;; *************** function _UART2_Initialize *****************
 13032 ;; Defined at:
 13033 ;;		line 78 in file "mcc_generated_files/uart2.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;		None
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;		None
 13038 ;; Return value:  Size  Location     Type
 13039 ;;                  1  [STACK] void 
 13040 ;; Registers used:
 13041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13042 ;; Tracked objects:
 13043 ;;		On entry : 3F/39
 13044 ;;		On exit  : 3F/39
 13045 ;;		Unchanged: 0/0
 13046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13051 ;;Total ram usage:        0 bytes
 13052 ;; Hardware stack levels used:    1
 13053 ;; Hardware stack levels required when called:    4
 13054 ;; This function calls:
 13055 ;;		_UART2_SetRxInterruptHandler
 13056 ;;		_UART2_SetTxInterruptHandler
 13057 ;; This function is called by:
 13058 ;;		_SYSTEM_Initialize
 13059 ;; This function uses a reentrant model
 13060 ;;
 13061                           
 13062                           	psect	text55
 13063  0058C8                     __ptext55:
 13064                           	opt callstack 0
 13065  0058C8                     _UART2_Initialize:
 13066                           	opt callstack 25
 13067                           
 13068                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 13069                           
 13070                           ; BSR set to: 60
 13071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13072                           ;incstack = 0
 13073  0058C8  0139               	movlb	57	; () banked
 13074  0058CA  9596               	bcf	150,2,b	;volatile
 13075                           
 13076                           ; BSR set to: 57
 13077                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 13078  0058CC  0EB0               	movlw	low _UART2_Receive_ISR
 13079  0058CE  6EE6               	movwf	postinc1,c
 13080  0058D0  0E62               	movlw	high _UART2_Receive_ISR
 13081  0058D2  6EE6               	movwf	postinc1,c
 13082  0058D4  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 13083  0058D6  6EE6               	movwf	postinc1,c
 13084  0058D8  ECB7  F02F         	call	_UART2_SetRxInterruptHandler	;wreg free
 13085                           
 13086                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 13087  0058DC  0139               	movlb	57	; () banked
 13088  0058DE  9796               	bcf	150,3,b	;volatile
 13089                           
 13090                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 13091  0058E0  0E24               	movlw	low _UART2_Transmit_ISR
 13092  0058E2  6EE6               	movwf	postinc1,c
 13093  0058E4  0E5E               	movlw	high _UART2_Transmit_ISR
 13094  0058E6  6EE6               	movwf	postinc1,c
 13095  0058E8  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 13096  0058EA  6EE6               	movwf	postinc1,c
 13097  0058EC  ECA3  F02F         	call	_UART2_SetTxInterruptHandler	;wreg free
 13098                           
 13099                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 13100  0058F0  013D               	movlb	61	; () banked
 13101  0058F2  6BD4               	clrf	212,b	;volatile
 13102                           
 13103                           ; BSR set to: 61
 13104                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 13105  0058F4  6BD6               	clrf	214,b	;volatile
 13106                           
 13107                           ; BSR set to: 61
 13108                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 13109  0058F6  6BD8               	clrf	216,b	;volatile
 13110                           
 13111                           ; BSR set to: 61
 13112                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 13113  0058F8  0EB0               	movlw	176
 13114  0058FA  6FDA               	movwf	218,b	;volatile
 13115                           
 13116                           ; BSR set to: 61
 13117                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 13118  0058FC  0E80               	movlw	128
 13119  0058FE  6FDB               	movwf	219,b	;volatile
 13120                           
 13121                           ; BSR set to: 61
 13122                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 13123  005900  6BDC               	clrf	220,b	;volatile
 13124                           
 13125                           ; BSR set to: 61
 13126                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 13127  005902  0E82               	movlw	130
 13128  005904  6FDD               	movwf	221,b	;volatile
 13129                           
 13130                           ; BSR set to: 61
 13131                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 13132  005906  0E06               	movlw	6
 13133  005908  6FDE               	movwf	222,b	;volatile
 13134                           
 13135                           ; BSR set to: 61
 13136                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 13137  00590A  6BDF               	clrf	223,b	;volatile
 13138                           
 13139                           ; BSR set to: 61
 13140                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 13141  00590C  6BE0               	clrf	224,b	;volatile
 13142                           
 13143                           ; BSR set to: 61
 13144                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 13145  00590E  6BE1               	clrf	225,b	;volatile
 13146                           
 13147                           ; BSR set to: 61
 13148                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 13149  005910  6BE2               	clrf	226,b	;volatile
 13150                           
 13151                           ; BSR set to: 61
 13152                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 13153  005912  6A32               	clrf	_uart2TxHead,c	;volatile
 13154                           
 13155                           ; BSR set to: 61
 13156                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 13157  005914  6A31               	clrf	_uart2TxTail,c	;volatile
 13158                           
 13159                           ; BSR set to: 61
 13160                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 13161  005916  0E40               	movlw	64
 13162  005918  6E30               	movwf	_uart2TxBufferRemaining,c	;volatile
 13163                           
 13164                           ; BSR set to: 61
 13165                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 13166  00591A  6A2F               	clrf	_uart2RxHead,c	;volatile
 13167                           
 13168                           ; BSR set to: 61
 13169                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 13170  00591C  6A2E               	clrf	_uart2RxTail,c	;volatile
 13171                           
 13172                           ; BSR set to: 61
 13173                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 13174  00591E  6A2D               	clrf	_uart2RxCount,c	;volatile
 13175                           
 13176                           ; BSR set to: 61
 13177                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 13178  005920  0139               	movlb	57	; () banked
 13179  005922  8596               	bsf	150,2,b	;volatile
 13180                           
 13181                           ; BSR set to: 57
 13182                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13183  005924  0012               	return		;funcret
 13184  005926                     __end_of_UART2_Initialize:
 13185                           	opt callstack 0
 13186                           
 13187 ;; *************** function _UART2_SetTxInterruptHandler *****************
 13188 ;; Defined at:
 13189 ;;		line 252 in file "mcc_generated_files/uart2.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13192 ;;		 -> UART2_Transmit_ISR(1), 
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;		None
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  1  [STACK] void 
 13197 ;; Registers used:
 13198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13199 ;; Tracked objects:
 13200 ;;		On entry : 3F/39
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13208 ;;Total ram usage:        0 bytes
 13209 ;; Hardware stack levels used:    1
 13210 ;; Hardware stack levels required when called:    3
 13211 ;; This function calls:
 13212 ;;		Nothing
 13213 ;; This function is called by:
 13214 ;;		_UART2_Initialize
 13215 ;; This function uses a reentrant model
 13216 ;;
 13217                           
 13218                           	psect	text56
 13219  005F46                     __ptext56:
 13220                           	opt callstack 0
 13221  005F46                     _UART2_SetTxInterruptHandler:
 13222                           	opt callstack 25
 13223                           
 13224                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 13225                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13226                           
 13227                           ; BSR set to: 57
 13228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13229                           ;incstack = 0
 13230  005F46  50E1               	movf	fsr1l,w,c
 13231  005F48  0FFD               	addlw	-3
 13232  005F4A  6ED9               	movwf	fsr2l,c
 13233  005F4C  50E2               	movf	fsr1h,w,c
 13234  005F4E  6EDA               	movwf	fsr2h,c
 13235  005F50  0EFF               	movlw	255
 13236  005F52  22DA               	addwfc	fsr2h,f,c
 13237  005F54  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 13238  005F5A  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 13239  005F60  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 13240                           
 13241                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13242  005F66  52E5               	movf	postdec1,f,c
 13243  005F68  52E5               	movf	postdec1,f,c
 13244  005F6A  52E5               	movf	postdec1,f,c
 13245  005F6C  0012               	return		;funcret
 13246  005F6E                     __end_of_UART2_SetTxInterruptHandler:
 13247                           	opt callstack 0
 13248                           
 13249 ;; *************** function _UART2_SetRxInterruptHandler *****************
 13250 ;; Defined at:
 13251 ;;		line 248 in file "mcc_generated_files/uart2.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13254 ;;		 -> UART2_Receive_ISR(1), 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1  [STACK] void 
 13259 ;; Registers used:
 13260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13261 ;; Tracked objects:
 13262 ;;		On entry : 3F/39
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    3
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_UART2_Initialize
 13277 ;; This function uses a reentrant model
 13278 ;;
 13279                           
 13280                           	psect	text57
 13281  005F6E                     __ptext57:
 13282                           	opt callstack 0
 13283  005F6E                     _UART2_SetRxInterruptHandler:
 13284                           	opt callstack 25
 13285                           
 13286                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 13287                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13288                           
 13289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13290                           ;incstack = 0
 13291  005F6E  50E1               	movf	fsr1l,w,c
 13292  005F70  0FFD               	addlw	-3
 13293  005F72  6ED9               	movwf	fsr2l,c
 13294  005F74  50E2               	movf	fsr1h,w,c
 13295  005F76  6EDA               	movwf	fsr2h,c
 13296  005F78  0EFF               	movlw	255
 13297  005F7A  22DA               	addwfc	fsr2h,f,c
 13298  005F7C  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 13299  005F82  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 13300  005F88  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 13301                           
 13302                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13303  005F8E  52E5               	movf	postdec1,f,c
 13304  005F90  52E5               	movf	postdec1,f,c
 13305  005F92  52E5               	movf	postdec1,f,c
 13306  005F94  0012               	return		;funcret
 13307  005F96                     __end_of_UART2_SetRxInterruptHandler:
 13308                           	opt callstack 0
 13309                           
 13310 ;; *************** function _UART1_Initialize *****************
 13311 ;; Defined at:
 13312 ;;		line 78 in file "mcc_generated_files/uart1.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;		None
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;		None
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1  [STACK] void 
 13319 ;; Registers used:
 13320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13321 ;; Tracked objects:
 13322 ;;		On entry : 3F/3C
 13323 ;;		On exit  : 3F/39
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;Total ram usage:        0 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:    4
 13333 ;; This function calls:
 13334 ;;		_UART1_SetRxInterruptHandler
 13335 ;;		_UART1_SetTxInterruptHandler
 13336 ;; This function is called by:
 13337 ;;		_SYSTEM_Initialize
 13338 ;; This function uses a reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text58
 13342  0057A4                     __ptext58:
 13343                           	opt callstack 0
 13344  0057A4                     _UART1_Initialize:
 13345                           	opt callstack 25
 13346                           
 13347                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 13348                           
 13349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13350                           ;incstack = 0
 13351  0057A4  0139               	movlb	57	; () banked
 13352  0057A6  9793               	bcf	147,3,b	;volatile
 13353                           
 13354                           ; BSR set to: 57
 13355                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13356  0057A8  0E90               	movlw	low _UART1_Receive_ISR
 13357  0057AA  6EE6               	movwf	postinc1,c
 13358  0057AC  0E62               	movlw	high _UART1_Receive_ISR
 13359  0057AE  6EE6               	movwf	postinc1,c
 13360  0057B0  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 13361  0057B2  6EE6               	movwf	postinc1,c
 13362  0057B4  ECDF  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13363                           
 13364                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 13365  0057B8  0139               	movlb	57	; () banked
 13366  0057BA  9993               	bcf	147,4,b	;volatile
 13367                           
 13368                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13369  0057BC  0EF8               	movlw	low _UART1_Transmit_ISR
 13370  0057BE  6EE6               	movwf	postinc1,c
 13371  0057C0  0E5D               	movlw	high _UART1_Transmit_ISR
 13372  0057C2  6EE6               	movwf	postinc1,c
 13373  0057C4  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 13374  0057C6  6EE6               	movwf	postinc1,c
 13375  0057C8  ECCB  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13376                           
 13377                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 13378  0057CC  013D               	movlb	61	; () banked
 13379  0057CE  6BEC               	clrf	236,b	;volatile
 13380                           
 13381                           ; BSR set to: 61
 13382                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 13383  0057D0  6BED               	clrf	237,b	;volatile
 13384                           
 13385                           ; BSR set to: 61
 13386                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 13387  0057D2  6BEE               	clrf	238,b	;volatile
 13388                           
 13389                           ; BSR set to: 61
 13390                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 13391  0057D4  6BEF               	clrf	239,b	;volatile
 13392                           
 13393                           ; BSR set to: 61
 13394                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 13395  0057D6  6BF0               	clrf	240,b	;volatile
 13396                           
 13397                           ; BSR set to: 61
 13398                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 13399  0057D8  6BF1               	clrf	241,b	;volatile
 13400                           
 13401                           ; BSR set to: 61
 13402                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 13403  0057DA  0EB0               	movlw	176
 13404  0057DC  6FF2               	movwf	242,b	;volatile
 13405                           
 13406                           ; BSR set to: 61
 13407                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 13408  0057DE  0E80               	movlw	128
 13409  0057E0  6FF3               	movwf	243,b	;volatile
 13410                           
 13411                           ; BSR set to: 61
 13412                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 13413  0057E2  6BF4               	clrf	244,b	;volatile
 13414                           
 13415                           ; BSR set to: 61
 13416                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 13417  0057E4  0E82               	movlw	130
 13418  0057E6  6FF5               	movwf	245,b	;volatile
 13419                           
 13420                           ; BSR set to: 61
 13421                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 13422  0057E8  0E06               	movlw	6
 13423  0057EA  6FF6               	movwf	246,b	;volatile
 13424                           
 13425                           ; BSR set to: 61
 13426                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 13427  0057EC  6BF7               	clrf	247,b	;volatile
 13428                           
 13429                           ; BSR set to: 61
 13430                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 13431  0057EE  6BF8               	clrf	248,b	;volatile
 13432                           
 13433                           ; BSR set to: 61
 13434                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 13435  0057F0  6BF9               	clrf	249,b	;volatile
 13436                           
 13437                           ; BSR set to: 61
 13438                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 13439  0057F2  6BFA               	clrf	250,b	;volatile
 13440                           
 13441                           ; BSR set to: 61
 13442                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 13443  0057F4  6A38               	clrf	_uart1TxHead,c	;volatile
 13444                           
 13445                           ; BSR set to: 61
 13446                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 13447  0057F6  6A37               	clrf	_uart1TxTail,c	;volatile
 13448                           
 13449                           ; BSR set to: 61
 13450                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13451  0057F8  0E40               	movlw	64
 13452  0057FA  6E36               	movwf	_uart1TxBufferRemaining,c	;volatile
 13453                           
 13454                           ; BSR set to: 61
 13455                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 13456  0057FC  6A35               	clrf	_uart1RxHead,c	;volatile
 13457                           
 13458                           ; BSR set to: 61
 13459                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 13460  0057FE  6A34               	clrf	_uart1RxTail,c	;volatile
 13461                           
 13462                           ; BSR set to: 61
 13463                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 13464  005800  6A33               	clrf	_uart1RxCount,c	;volatile
 13465                           
 13466                           ; BSR set to: 61
 13467                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 13468  005802  0139               	movlb	57	; () banked
 13469  005804  8793               	bsf	147,3,b	;volatile
 13470                           
 13471                           ; BSR set to: 57
 13472                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13473  005806  0012               	return		;funcret
 13474  005808                     __end_of_UART1_Initialize:
 13475                           	opt callstack 0
 13476                           
 13477 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13478 ;; Defined at:
 13479 ;;		line 244 in file "mcc_generated_files/uart1.c"
 13480 ;; Parameters:    Size  Location     Type
 13481 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13482 ;;		 -> UART1_Transmit_ISR(1), 
 13483 ;; Auto vars:     Size  Location     Type
 13484 ;;		None
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1  [STACK] void 
 13487 ;; Registers used:
 13488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13489 ;; Tracked objects:
 13490 ;;		On entry : 3F/39
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13498 ;;Total ram usage:        0 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; Hardware stack levels required when called:    3
 13501 ;; This function calls:
 13502 ;;		Nothing
 13503 ;; This function is called by:
 13504 ;;		_UART1_Initialize
 13505 ;; This function uses a reentrant model
 13506 ;;
 13507                           
 13508                           	psect	text59
 13509  005F96                     __ptext59:
 13510                           	opt callstack 0
 13511  005F96                     _UART1_SetTxInterruptHandler:
 13512                           	opt callstack 25
 13513                           
 13514                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 13515                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13516                           
 13517                           ; BSR set to: 57
 13518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13519                           ;incstack = 0
 13520  005F96  50E1               	movf	fsr1l,w,c
 13521  005F98  0FFD               	addlw	-3
 13522  005F9A  6ED9               	movwf	fsr2l,c
 13523  005F9C  50E2               	movf	fsr1h,w,c
 13524  005F9E  6EDA               	movwf	fsr2h,c
 13525  005FA0  0EFF               	movlw	255
 13526  005FA2  22DA               	addwfc	fsr2h,f,c
 13527  005FA4  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 13528  005FAA  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 13529  005FB0  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 13530                           
 13531                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13532  005FB6  52E5               	movf	postdec1,f,c
 13533  005FB8  52E5               	movf	postdec1,f,c
 13534  005FBA  52E5               	movf	postdec1,f,c
 13535  005FBC  0012               	return		;funcret
 13536  005FBE                     __end_of_UART1_SetTxInterruptHandler:
 13537                           	opt callstack 0
 13538                           
 13539 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13540 ;; Defined at:
 13541 ;;		line 239 in file "mcc_generated_files/uart1.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13544 ;;		 -> UART1_Receive_ISR(1), 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;		None
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  1  [STACK] void 
 13549 ;; Registers used:
 13550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13551 ;; Tracked objects:
 13552 ;;		On entry : 3F/39
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13560 ;;Total ram usage:        0 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; Hardware stack levels required when called:    3
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		_UART1_Initialize
 13567 ;; This function uses a reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text60
 13571  005FBE                     __ptext60:
 13572                           	opt callstack 0
 13573  005FBE                     _UART1_SetRxInterruptHandler:
 13574                           	opt callstack 25
 13575                           
 13576                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 13577                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13578                           
 13579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13580                           ;incstack = 0
 13581  005FBE  50E1               	movf	fsr1l,w,c
 13582  005FC0  0FFD               	addlw	-3
 13583  005FC2  6ED9               	movwf	fsr2l,c
 13584  005FC4  50E2               	movf	fsr1h,w,c
 13585  005FC6  6EDA               	movwf	fsr2h,c
 13586  005FC8  0EFF               	movlw	255
 13587  005FCA  22DA               	addwfc	fsr2h,f,c
 13588  005FCC  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 13589  005FD2  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 13590  005FD8  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 13591                           
 13592                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13593  005FDE  52E5               	movf	postdec1,f,c
 13594  005FE0  52E5               	movf	postdec1,f,c
 13595  005FE2  52E5               	movf	postdec1,f,c
 13596  005FE4  0012               	return		;funcret
 13597  005FE6                     __end_of_UART1_SetRxInterruptHandler:
 13598                           	opt callstack 0
 13599                           
 13600 ;; *************** function _TMR6_Initialize *****************
 13601 ;; Defined at:
 13602 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;		None
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;		None
 13607 ;; Return value:  Size  Location     Type
 13608 ;;                  1  [STACK] void 
 13609 ;; Registers used:
 13610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13611 ;; Tracked objects:
 13612 ;;		On entry : 3F/39
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13620 ;;Total ram usage:        0 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; Hardware stack levels required when called:    4
 13623 ;; This function calls:
 13624 ;;		_TMR6_SetInterruptHandler
 13625 ;; This function is called by:
 13626 ;;		_SYSTEM_Initialize
 13627 ;; This function uses a reentrant model
 13628 ;;
 13629                           
 13630                           	psect	text61
 13631  005FE6                     __ptext61:
 13632                           	opt callstack 0
 13633  005FE6                     _TMR6_Initialize:
 13634                           	opt callstack 25
 13635                           
 13636                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13637                           
 13638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13639                           ;incstack = 0
 13640  005FE6  0E01               	movlw	1
 13641  005FE8  6E96               	movwf	16278,c	;volatile
 13642                           
 13643                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13644  005FEA  6A95               	clrf	16277,c	;volatile
 13645                           
 13646                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13647  005FEC  6A97               	clrf	16279,c	;volatile
 13648                           
 13649                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13650  005FEE  0E03               	movlw	3
 13651  005FF0  6E93               	movwf	16275,c	;volatile
 13652                           
 13653                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13654  005FF2  6A92               	clrf	16274,c	;volatile
 13655                           
 13656                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13657  005FF4  0139               	movlb	57	; () banked
 13658  005FF6  91A9               	bcf	169,0,b	;volatile
 13659                           
 13660                           ; BSR set to: 57
 13661                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13662  005FF8  8199               	bsf	153,0,b	;volatile
 13663                           
 13664                           ; BSR set to: 57
 13665                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13666  005FFA  0E40               	movlw	low _TMR6_DefaultInterruptHandler
 13667  005FFC  6EE6               	movwf	postinc1,c
 13668  005FFE  0E5B               	movlw	high _TMR6_DefaultInterruptHandler
 13669  006000  6EE6               	movwf	postinc1,c
 13670  006002  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13671  006004  6EE6               	movwf	postinc1,c
 13672  006006  EC07  F030         	call	_TMR6_SetInterruptHandler	;wreg free
 13673                           
 13674                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13675  00600A  6894               	setf	16276,c	;volatile
 13676                           
 13677                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13678  00600C  0012               	return		;funcret
 13679  00600E                     __end_of_TMR6_Initialize:
 13680                           	opt callstack 0
 13681                           
 13682 ;; *************** function _TMR6_SetInterruptHandler *****************
 13683 ;; Defined at:
 13684 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13685 ;; Parameters:    Size  Location     Type
 13686 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13687 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;		None
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1  [STACK] void 
 13692 ;; Registers used:
 13693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13694 ;; Tracked objects:
 13695 ;;		On entry : 3F/39
 13696 ;;		On exit  : 0/0
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13703 ;;Total ram usage:        0 bytes
 13704 ;; Hardware stack levels used:    1
 13705 ;; Hardware stack levels required when called:    3
 13706 ;; This function calls:
 13707 ;;		Nothing
 13708 ;; This function is called by:
 13709 ;;		_TMR6_Initialize
 13710 ;; This function uses a reentrant model
 13711 ;;
 13712                           
 13713                           	psect	text62
 13714  00600E                     __ptext62:
 13715                           	opt callstack 0
 13716  00600E                     _TMR6_SetInterruptHandler:
 13717                           	opt callstack 25
 13718                           
 13719                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13720                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13721                           
 13722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13723                           ;incstack = 0
 13724  00600E  50E1               	movf	fsr1l,w,c
 13725  006010  0FFD               	addlw	-3
 13726  006012  6ED9               	movwf	fsr2l,c
 13727  006014  50E2               	movf	fsr1h,w,c
 13728  006016  6EDA               	movwf	fsr2h,c
 13729  006018  0EFF               	movlw	255
 13730  00601A  22DA               	addwfc	fsr2h,f,c
 13731  00601C  006F FF78  F0F1    	movff	postinc2,_TMR6_InterruptHandler
 13732  006022  006F FF78  F0F2    	movff	postinc2,_TMR6_InterruptHandler+1
 13733  006028  006F FF74  F0F3    	movff	postdec2,_TMR6_InterruptHandler+2
 13734                           
 13735                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13736  00602E  52E5               	movf	postdec1,f,c
 13737  006030  52E5               	movf	postdec1,f,c
 13738  006032  52E5               	movf	postdec1,f,c
 13739  006034  0012               	return		;funcret
 13740  006036                     __end_of_TMR6_SetInterruptHandler:
 13741                           	opt callstack 0
 13742                           
 13743 ;; *************** function _TMR5_Initialize *****************
 13744 ;; Defined at:
 13745 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;		None
 13748 ;; Auto vars:     Size  Location     Type
 13749 ;;		None
 13750 ;; Return value:  Size  Location     Type
 13751 ;;                  1  [STACK] void 
 13752 ;; Registers used:
 13753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13754 ;; Tracked objects:
 13755 ;;		On entry : 3F/3C
 13756 ;;		On exit  : 0/0
 13757 ;;		Unchanged: 0/0
 13758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13763 ;;Total ram usage:        0 bytes
 13764 ;; Hardware stack levels used:    1
 13765 ;; Hardware stack levels required when called:    4
 13766 ;; This function calls:
 13767 ;;		_TMR5_SetInterruptHandler
 13768 ;; This function is called by:
 13769 ;;		_SYSTEM_Initialize
 13770 ;; This function uses a reentrant model
 13771 ;;
 13772                           
 13773                           	psect	text63
 13774  005AFA                     __ptext63:
 13775                           	opt callstack 0
 13776  005AFA                     _TMR5_Initialize:
 13777                           	opt callstack 25
 13778                           
 13779                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 13780                           
 13781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13782                           ;incstack = 0
 13783  005AFA  6A9B               	clrf	16283,c	;volatile
 13784                           
 13785                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 13786  005AFC  6A9C               	clrf	16284,c	;volatile
 13787                           
 13788                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 13789  005AFE  0E01               	movlw	1
 13790  005B00  6E9D               	movwf	16285,c	;volatile
 13791                           
 13792                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 13793  005B02  0E63               	movlw	99
 13794  005B04  6E99               	movwf	16281,c	;volatile
 13795                           
 13796                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 13797  005B06  0EC0               	movlw	192
 13798  005B08  6E98               	movwf	16280,c	;volatile
 13799                           
 13800                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13801  005B0A  5098               	movf	16280,w,c	;volatile
 13802  005B0C  006F FE64  F039    	movff	16281,btemp	;volatile
 13803  005B12  6A3A               	clrf	btemp+1,c
 13804  005B14  0060  F0E4  F03A   	movff	btemp,btemp+1
 13805  005B1A  6A39               	clrf	btemp,c
 13806  005B1C  1039               	iorwf	btemp,w,c
 13807  005B1E  6E25               	movwf	_timer5ReloadVal,c	;volatile
 13808  005B20  503A               	movf	btemp+1,w,c
 13809  005B22  6E26               	movwf	_timer5ReloadVal+1,c	;volatile
 13810                           
 13811                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 13812  005B24  0139               	movlb	57	; () banked
 13813  005B26  9DA8               	bcf	168,6,b	;volatile
 13814                           
 13815                           ; BSR set to: 57
 13816                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 13817  005B28  8D98               	bsf	152,6,b	;volatile
 13818                           
 13819                           ; BSR set to: 57
 13820                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13821  005B2A  0E96               	movlw	low _TMR5_DefaultInterruptHandler
 13822  005B2C  6EE6               	movwf	postinc1,c
 13823  005B2E  0E63               	movlw	high _TMR5_DefaultInterruptHandler
 13824  005B30  6EE6               	movwf	postinc1,c
 13825  005B32  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13826  005B34  6EE6               	movwf	postinc1,c
 13827  005B36  EC1B  F030         	call	_TMR5_SetInterruptHandler	;wreg free
 13828                           
 13829                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 13830  005B3A  0E31               	movlw	49
 13831  005B3C  6E9A               	movwf	16282,c	;volatile
 13832                           
 13833                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13834  005B3E  0012               	return		;funcret
 13835  005B40                     __end_of_TMR5_Initialize:
 13836                           	opt callstack 0
 13837                           
 13838 ;; *************** function _TMR5_SetInterruptHandler *****************
 13839 ;; Defined at:
 13840 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 13841 ;; Parameters:    Size  Location     Type
 13842 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13843 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;		None
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1  [STACK] void 
 13848 ;; Registers used:
 13849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13850 ;; Tracked objects:
 13851 ;;		On entry : 3F/39
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; Hardware stack levels required when called:    3
 13862 ;; This function calls:
 13863 ;;		Nothing
 13864 ;; This function is called by:
 13865 ;;		_TMR5_Initialize
 13866 ;; This function uses a reentrant model
 13867 ;;
 13868                           
 13869                           	psect	text64
 13870  006036                     __ptext64:
 13871                           	opt callstack 0
 13872  006036                     _TMR5_SetInterruptHandler:
 13873                           	opt callstack 25
 13874                           
 13875                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13876                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13877                           
 13878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13879                           ;incstack = 0
 13880  006036  50E1               	movf	fsr1l,w,c
 13881  006038  0FFD               	addlw	-3
 13882  00603A  6ED9               	movwf	fsr2l,c
 13883  00603C  50E2               	movf	fsr1h,w,c
 13884  00603E  6EDA               	movwf	fsr2h,c
 13885  006040  0EFF               	movlw	255
 13886  006042  22DA               	addwfc	fsr2h,f,c
 13887  006044  006F FF78  F0EE    	movff	postinc2,_TMR5_InterruptHandler
 13888  00604A  006F FF78  F0EF    	movff	postinc2,_TMR5_InterruptHandler+1
 13889  006050  006F FF74  F0F0    	movff	postdec2,_TMR5_InterruptHandler+2
 13890                           
 13891                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13892  006056  52E5               	movf	postdec1,f,c
 13893  006058  52E5               	movf	postdec1,f,c
 13894  00605A  52E5               	movf	postdec1,f,c
 13895  00605C  0012               	return		;funcret
 13896  00605E                     __end_of_TMR5_SetInterruptHandler:
 13897                           	opt callstack 0
 13898                           
 13899 ;; *************** function _SPI1_Initialize *****************
 13900 ;; Defined at:
 13901 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;		None
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;		None
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  1  [STACK] void 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2
 13910 ;; Tracked objects:
 13911 ;;		On entry : 3F/39
 13912 ;;		On exit  : 3F/3D
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13919 ;;Total ram usage:        0 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; Hardware stack levels required when called:    3
 13922 ;; This function calls:
 13923 ;;		Nothing
 13924 ;; This function is called by:
 13925 ;;		_SYSTEM_Initialize
 13926 ;; This function uses a reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text65
 13930  0063B0                     __ptext65:
 13931                           	opt callstack 0
 13932  0063B0                     _SPI1_Initialize:
 13933                           	opt callstack 26
 13934                           
 13935                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13936                           
 13937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13938                           ;incstack = 0
 13939  0063B0  0E40               	movlw	64
 13940  0063B2  013D               	movlb	61	; () banked
 13941  0063B4  6F15               	movwf	21,b	;volatile
 13942                           
 13943                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13944  0063B6  0E03               	movlw	3
 13945  0063B8  6F16               	movwf	22,b	;volatile
 13946                           
 13947                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13948  0063BA  0E4F               	movlw	79
 13949  0063BC  6F19               	movwf	25,b	;volatile
 13950                           
 13951                           ; BSR set to: 61
 13952                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13953  0063BE  6B1C               	clrf	28,b	;volatile
 13954                           
 13955                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13956  0063C0  0E83               	movlw	131
 13957  0063C2  6F14               	movwf	20,b	;volatile
 13958                           
 13959                           ; BSR set to: 61
 13960                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13961  0063C4  0012               	return		;funcret
 13962  0063C6                     __end_of_SPI1_Initialize:
 13963                           	opt callstack 0
 13964                           
 13965 ;; *************** function _PMD_Initialize *****************
 13966 ;; Defined at:
 13967 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;		None
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1  [STACK] void 
 13974 ;; Registers used:
 13975 ;;		None
 13976 ;; Tracked objects:
 13977 ;;		On entry : 3F/39
 13978 ;;		On exit  : 3F/39
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13985 ;;Total ram usage:        0 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    3
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_SYSTEM_Initialize
 13992 ;; This function uses a reentrant model
 13993 ;;
 13994                           
 13995                           	psect	text66
 13996  0063DC                     __ptext66:
 13997                           	opt callstack 0
 13998  0063DC                     _PMD_Initialize:
 13999                           	opt callstack 26
 14000                           
 14001                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 14002                           
 14003                           ; BSR set to: 61
 14004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14005                           ;incstack = 0
 14006  0063DC  0139               	movlb	57	; () banked
 14007  0063DE  6BC0               	clrf	192,b	;volatile
 14008                           
 14009                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 14010  0063E0  6BC1               	clrf	193,b	;volatile
 14011                           
 14012                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 14013  0063E2  6BC2               	clrf	194,b	;volatile
 14014                           
 14015                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 14016  0063E4  6BC3               	clrf	195,b	;volatile
 14017                           
 14018                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 14019  0063E6  6BC4               	clrf	196,b	;volatile
 14020                           
 14021                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 14022  0063E8  6BC5               	clrf	197,b	;volatile
 14023                           
 14024                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 14025  0063EA  6BC6               	clrf	198,b	;volatile
 14026                           
 14027                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 14028  0063EC  6BC7               	clrf	199,b	;volatile
 14029                           
 14030                           ; BSR set to: 57
 14031                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14032  0063EE  0012               	return		;funcret
 14033  0063F0                     __end_of_PMD_Initialize:
 14034                           	opt callstack 0
 14035                           
 14036 ;; *************** function _PIN_MANAGER_Initialize *****************
 14037 ;; Defined at:
 14038 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14039 ;; Parameters:    Size  Location     Type
 14040 ;;		None
 14041 ;; Auto vars:     Size  Location     Type
 14042 ;;		None
 14043 ;; Return value:  Size  Location     Type
 14044 ;;                  1  [STACK] void 
 14045 ;; Registers used:
 14046 ;;		wreg, status,2
 14047 ;; Tracked objects:
 14048 ;;		On entry : 3F/39
 14049 ;;		On exit  : 3F/3A
 14050 ;;		Unchanged: 0/0
 14051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14056 ;;Total ram usage:        0 bytes
 14057 ;; Hardware stack levels used:    1
 14058 ;; Hardware stack levels required when called:    3
 14059 ;; This function calls:
 14060 ;;		Nothing
 14061 ;; This function is called by:
 14062 ;;		_SYSTEM_Initialize
 14063 ;; This function uses a reentrant model
 14064 ;;
 14065                           
 14066                           	psect	text67
 14067  005350                     __ptext67:
 14068                           	opt callstack 0
 14069  005350                     _PIN_MANAGER_Initialize:
 14070                           	opt callstack 26
 14071                           
 14072                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 14073                           
 14074                           ; BSR set to: 57
 14075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14076                           ;incstack = 0
 14077  005350  0E07               	movlw	7
 14078  005352  6EBE               	movwf	16318,c	;volatile
 14079                           
 14080                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14081  005354  6ABD               	clrf	16317,c	;volatile
 14082                           
 14083                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14084  005356  6ABA               	clrf	16314,c	;volatile
 14085                           
 14086                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 14087  005358  6ABF               	clrf	16319,c	;volatile
 14088                           
 14089                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 14090  00535A  6ABB               	clrf	16315,c	;volatile
 14091                           
 14092                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 14093  00535C  0E06               	movlw	6
 14094  00535E  6EBC               	movwf	16316,c	;volatile
 14095                           
 14096                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 14097  005360  6AC6               	clrf	16326,c	;volatile
 14098                           
 14099                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 14100  005362  68C7               	setf	16327,c	;volatile
 14101                           
 14102                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 14103  005364  0E8F               	movlw	143
 14104  005366  6EC2               	movwf	16322,c	;volatile
 14105                           
 14106                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 14107  005368  0EBF               	movlw	191
 14108  00536A  6EC3               	movwf	16323,c	;volatile
 14109                           
 14110                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 14111  00536C  0E91               	movlw	145
 14112  00536E  6EC4               	movwf	16324,c	;volatile
 14113                           
 14114                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 14115  005370  0E0C               	movlw	12
 14116  005372  6EC5               	movwf	16325,c	;volatile
 14117                           
 14118                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 14119  005374  013A               	movlb	58	; () banked
 14120  005376  6B70               	clrf	112,b	;volatile
 14121                           
 14122                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 14123  005378  0E01               	movlw	1
 14124  00537A  6F60               	movwf	96,b	;volatile
 14125                           
 14126                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 14127  00537C  0E38               	movlw	56
 14128  00537E  6F50               	movwf	80,b	;volatile
 14129                           
 14130                           ; BSR set to: 58
 14131                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 14132  005380  6B80               	clrf	128,b	;volatile
 14133                           
 14134                           ; BSR set to: 58
 14135                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 14136  005382  6990               	setf	144,b	;volatile
 14137                           
 14138                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 14139  005384  0E8F               	movlw	143
 14140  005386  6F40               	movwf	64,b	;volatile
 14141                           
 14142                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 14143  005388  0EFC               	movlw	252
 14144  00538A  6F71               	movwf	113,b	;volatile
 14145                           
 14146                           ; BSR set to: 58
 14147                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 14148  00538C  6B91               	clrf	145,b	;volatile
 14149                           
 14150                           ; BSR set to: 58
 14151                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 14152  00538E  6B81               	clrf	129,b	;volatile
 14153                           
 14154                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 14155  005390  0E87               	movlw	135
 14156  005392  6F51               	movwf	81,b	;volatile
 14157                           
 14158                           ; BSR set to: 58
 14159                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 14160  005394  6B41               	clrf	65,b	;volatile
 14161                           
 14162                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 14163  005396  0E90               	movlw	144
 14164  005398  6F61               	movwf	97,b	;volatile
 14165                           
 14166                           ; BSR set to: 58
 14167                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 14168  00539A  6B82               	clrf	130,b	;volatile
 14169                           
 14170                           ; BSR set to: 58
 14171                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 14172  00539C  6B92               	clrf	146,b	;volatile
 14173                           
 14174                           ; BSR set to: 58
 14175                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 14176  00539E  6B42               	clrf	66,b	;volatile
 14177                           
 14178                           ; BSR set to: 58
 14179                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 14180  0053A0  6B52               	clrf	82,b	;volatile
 14181                           
 14182                           ; BSR set to: 58
 14183                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 14184  0053A2  6B62               	clrf	98,b	;volatile
 14185                           
 14186                           ; BSR set to: 58
 14187                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 14188  0053A4  6B72               	clrf	114,b	;volatile
 14189                           
 14190                           ; BSR set to: 58
 14191                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 14192  0053A6  6943               	setf	67,b	;volatile
 14193                           
 14194                           ; BSR set to: 58
 14195                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 14196  0053A8  6953               	setf	83,b	;volatile
 14197                           
 14198                           ; BSR set to: 58
 14199                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 14200  0053AA  6963               	setf	99,b	;volatile
 14201                           
 14202                           ; BSR set to: 58
 14203                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 14204  0053AC  6973               	setf	115,b	;volatile
 14205                           
 14206                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 14207  0053AE  0E07               	movlw	7
 14208  0053B0  6F83               	movwf	131,b	;volatile
 14209                           
 14210                           ; BSR set to: 58
 14211                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 14212  0053B2  6993               	setf	147,b	;volatile
 14213                           
 14214                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 14215  0053B4  0E0F               	movlw	15
 14216  0053B6  6FE8               	movwf	232,b	;volatile
 14217                           
 14218                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 14219  0053B8  0E16               	movlw	22
 14220  0053BA  6F0E               	movwf	14,b	;volatile
 14221                           
 14222                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 14223  0053BC  0E1E               	movlw	30
 14224  0053BE  6F13               	movwf	19,b	;volatile
 14225                           
 14226                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 14227  0053C0  0E08               	movlw	8
 14228  0053C2  6FC0               	movwf	192,b	;volatile
 14229                           
 14230                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 14231  0053C4  0E0A               	movlw	10
 14232  0053C6  6FC2               	movwf	194,b	;volatile
 14233                           
 14234                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 14235  0053C8  0E09               	movlw	9
 14236  0053CA  6FC1               	movwf	193,b	;volatile
 14237                           
 14238                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 14239  0053CC  0E17               	movlw	23
 14240  0053CE  6FE5               	movwf	229,b	;volatile
 14241                           
 14242                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 14243  0053D0  0E13               	movlw	19
 14244  0053D2  6FDE               	movwf	222,b	;volatile
 14245                           
 14246                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 14247  0053D4  0E01               	movlw	1
 14248  0053D6  6F04               	movwf	4,b	;volatile
 14249                           
 14250                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 14251  0053D8  0E26               	movlw	38
 14252  0053DA  6F05               	movwf	5,b	;volatile
 14253                           
 14254                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 14255  0053DC  0E28               	movlw	40
 14256  0053DE  6F06               	movwf	6,b	;volatile
 14257                           
 14258                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 14259  0053E0  0E1F               	movlw	31
 14260  0053E2  6F15               	movwf	21,b	;volatile
 14261                           
 14262                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 14263  0053E4  0E13               	movlw	19
 14264  0053E6  6F16               	movwf	22,b	;volatile
 14265                           
 14266                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 14267  0053E8  0E14               	movlw	20
 14268  0053EA  6FDF               	movwf	223,b	;volatile
 14269                           
 14270                           ; BSR set to: 58
 14271                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14272  0053EC  0012               	return		;funcret
 14273  0053EE                     __end_of_PIN_MANAGER_Initialize:
 14274                           	opt callstack 0
 14275                           
 14276 ;; *************** function _OSCILLATOR_Initialize *****************
 14277 ;; Defined at:
 14278 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;		None
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;		None
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  1  [STACK] void 
 14285 ;; Registers used:
 14286 ;;		wreg, status,2
 14287 ;; Tracked objects:
 14288 ;;		On entry : 3F/3A
 14289 ;;		On exit  : 3F/39
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14296 ;;Total ram usage:        0 bytes
 14297 ;; Hardware stack levels used:    1
 14298 ;; Hardware stack levels required when called:    3
 14299 ;; This function calls:
 14300 ;;		Nothing
 14301 ;; This function is called by:
 14302 ;;		_SYSTEM_Initialize
 14303 ;; This function uses a reentrant model
 14304 ;;
 14305                           
 14306                           	psect	text68
 14307  0063C6                     __ptext68:
 14308                           	opt callstack 0
 14309  0063C6                     _OSCILLATOR_Initialize:
 14310                           	opt callstack 26
 14311                           
 14312                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 14313                           
 14314                           ; BSR set to: 58
 14315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14316                           ;incstack = 0
 14317  0063C6  0E20               	movlw	32
 14318  0063C8  0139               	movlb	57	; () banked
 14319  0063CA  6FD9               	movwf	217,b	;volatile
 14320                           
 14321                           ; BSR set to: 57
 14322                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 14323  0063CC  6BDB               	clrf	219,b	;volatile
 14324                           
 14325                           ; BSR set to: 57
 14326                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 14327  0063CE  6BDD               	clrf	221,b	;volatile
 14328                           
 14329                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 14330  0063D0  0E02               	movlw	2
 14331  0063D2  6FDF               	movwf	223,b	;volatile
 14332                           
 14333                           ; BSR set to: 57
 14334                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 14335  0063D4  6BDE               	clrf	222,b	;volatile
 14336  0063D6                     l194:
 14337                           
 14338                           ; BSR set to: 57
 14339                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 14340  0063D6  B1DC               	btfsc	220,0,b	;volatile
 14341  0063D8  0012               	return	
 14342  0063DA  D7FD               	goto	l194
 14343  0063DC                     __end_of_OSCILLATOR_Initialize:
 14344                           	opt callstack 0
 14345                           
 14346 ;; *************** function _NCO1_Initialize *****************
 14347 ;; Defined at:
 14348 ;;		line 58 in file "mcc_generated_files/nco1.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;		None
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;		None
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1  [STACK] void 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/39
 14359 ;;		On exit  : 3F/3F
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14366 ;;Total ram usage:        0 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    3
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_SYSTEM_Initialize
 14373 ;; This function uses a reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text69
 14377  006328                     __ptext69:
 14378                           	opt callstack 0
 14379  006328                     _NCO1_Initialize:
 14380                           	opt callstack 26
 14381                           
 14382                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 14383                           
 14384                           ; BSR set to: 57
 14385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14386                           ;incstack = 0
 14387  006328  013F               	movlb	63	; () banked
 14388  00632A  6B3E               	clrf	62,b	;volatile
 14389                           
 14390                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 14391  00632C  6B3F               	clrf	63,b	;volatile
 14392                           
 14393                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 14394  00632E  6B3A               	clrf	58,b	;volatile
 14395                           
 14396                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 14397  006330  6B39               	clrf	57,b	;volatile
 14398                           
 14399                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 14400  006332  6B38               	clrf	56,b	;volatile
 14401                           
 14402                           ; BSR set to: 63
 14403                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 14404  006334  0E06               	movlw	6
 14405  006336  6F3D               	movwf	61,b	;volatile
 14406                           
 14407                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 14408  006338  0EC7               	movlw	199
 14409  00633A  6F3C               	movwf	60,b	;volatile
 14410                           
 14411                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 14412  00633C  0EAE               	movlw	174
 14413  00633E  6F3B               	movwf	59,b	;volatile
 14414                           
 14415                           ; BSR set to: 63
 14416                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 14417  006340  8F3E               	bsf	62,7,b	;volatile
 14418                           
 14419                           ; BSR set to: 63
 14420                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14421  006342  0012               	return		;funcret
 14422  006344                     __end_of_NCO1_Initialize:
 14423                           	opt callstack 0
 14424                           
 14425 ;; *************** function _INTERRUPT_Initialize *****************
 14426 ;; Defined at:
 14427 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;		None
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;  state           1  [STACK] _Bool 
 14432 ;; Return value:  Size  Location     Type
 14433 ;;                  1  [STACK] void 
 14434 ;; Registers used:
 14435 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 14436 ;; Tracked objects:
 14437 ;;		On entry : 0/0
 14438 ;;		On exit  : 3F/39
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14445 ;;Total ram usage:        0 bytes
 14446 ;; Hardware stack levels used:    1
 14447 ;; Hardware stack levels required when called:    3
 14448 ;; This function calls:
 14449 ;;		Nothing
 14450 ;; This function is called by:
 14451 ;;		_SYSTEM_Initialize
 14452 ;; This function uses a reentrant model
 14453 ;;
 14454                           
 14455                           	psect	text70
 14456  00573E                     __ptext70:
 14457                           	opt callstack 0
 14458  00573E                     _INTERRUPT_Initialize:
 14459                           	opt callstack 0
 14460                           
 14461                           ; BSR set to: 63
 14462                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14463  00573E  52E6               	movf	postinc1,f,c
 14464                           
 14465                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14466                           
 14467                           ;incstack = 0
 14468  005740  8AD2               	bsf	16338,5,c	;volatile
 14469                           
 14470                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14471  005742  AED2               	btfss	16338,7,c	;volatile
 14472  005744  D003               	goto	u3340
 14473  005746  6A44               	clrf	btemp+11,c
 14474  005748  2A44               	incf	btemp+11,f,c
 14475  00574A  D001               	goto	u3358
 14476  00574C                     u3340:
 14477  00574C  6A44               	clrf	btemp+11,c
 14478  00574E                     u3358:
 14479                           
 14480                           ;stkvar	_state @ sp[(-1)+0]
 14481  00574E  0EFF               	movlw	-1
 14482  005750  0060  F113  FFE3   	movff	btemp+11,plusw1
 14483                           
 14484                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14485  005756  9ED2               	bcf	16338,7,c	;volatile
 14486                           
 14487                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14488  005758  0E55               	movlw	85
 14489  00575A  6ED4               	movwf	16340,c	;volatile
 14490                           
 14491                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14492  00575C  0EAA               	movlw	170
 14493  00575E  6ED4               	movwf	16340,c	;volatile
 14494                           
 14495                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14496  005760  90D4               	bcf	16340,0,c	;volatile
 14497                           
 14498                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 14499  005762  0138               	movlb	56	; () banked
 14500  005764  6B9F               	clrf	159,b	;volatile
 14501                           
 14502                           ; BSR set to: 56
 14503                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 14504  005766  6B9E               	clrf	158,b	;volatile
 14505                           
 14506                           ; BSR set to: 56
 14507                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 14508  005768  0E08               	movlw	8
 14509  00576A  6F9D               	movwf	157,b	;volatile
 14510                           
 14511                           ; BSR set to: 56
 14512                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14513  00576C  0E55               	movlw	85
 14514  00576E  6ED4               	movwf	16340,c	;volatile
 14515                           
 14516                           ; BSR set to: 56
 14517                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14518  005770  0EAA               	movlw	170
 14519  005772  6ED4               	movwf	16340,c	;volatile
 14520                           
 14521                           ; BSR set to: 56
 14522                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14523  005774  80D4               	bsf	16340,0,c	;volatile
 14524                           
 14525                           ; BSR set to: 56
 14526                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14527                           ;stkvar	_state @ sp[(-1)+0]
 14528  005776  0EFF               	movlw	-1
 14529  005778  B0E3               	btfsc	plusw1,0,c
 14530  00577A  D002               	bra	u3365
 14531  00577C  9ED2               	bcf	16338,7,c	;volatile
 14532  00577E  D001               	bra	u3366
 14533  005780                     u3365:
 14534  005780  8ED2               	bsf	16338,7,c	;volatile
 14535  005782                     u3366:
 14536                           
 14537                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 14538  005782  0139               	movlb	57	; () banked
 14539  005784  8782               	bsf	130,3,b	;volatile
 14540                           
 14541                           ; BSR set to: 57
 14542                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 14543  005786  8382               	bsf	130,1,b	;volatile
 14544                           
 14545                           ; BSR set to: 57
 14546                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 14547  005788  8182               	bsf	130,0,b	;volatile
 14548                           
 14549                           ; BSR set to: 57
 14550                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 14551  00578A  8582               	bsf	130,2,b	;volatile
 14552                           
 14553                           ; BSR set to: 57
 14554                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 14555  00578C  8786               	bsf	134,3,b	;volatile
 14556                           
 14557                           ; BSR set to: 57
 14558                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 14559  00578E  8586               	bsf	134,2,b	;volatile
 14560                           
 14561                           ; BSR set to: 57
 14562                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 14563  005790  8983               	bsf	131,4,b	;volatile
 14564                           
 14565                           ; BSR set to: 57
 14566                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 14567  005792  8783               	bsf	131,3,b	;volatile
 14568                           
 14569                           ; BSR set to: 57
 14570                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 14571  005794  8181               	bsf	129,0,b	;volatile
 14572                           
 14573                           ; BSR set to: 57
 14574                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 14575  005796  8185               	bsf	133,0,b	;volatile
 14576                           
 14577                           ; BSR set to: 57
 14578                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 14579  005798  8B87               	bsf	135,5,b	;volatile
 14580                           
 14581                           ; BSR set to: 57
 14582                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 14583  00579A  8189               	bsf	137,0,b	;volatile
 14584                           
 14585                           ; BSR set to: 57
 14586                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 14587  00579C  8D88               	bsf	136,6,b	;volatile
 14588                           
 14589                           ; BSR set to: 57
 14590                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 14591  00579E  8581               	bsf	129,2,b	;volatile
 14592                           
 14593                           ; BSR set to: 57
 14594                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 14595  0057A0  52E5               	movf	postdec1,f,c
 14596  0057A2  0012               	return		;funcret
 14597  0057A4                     __end_of_INTERRUPT_Initialize:
 14598                           	opt callstack 0
 14599                           
 14600 ;; *************** function _EXT_INT_Initialize *****************
 14601 ;; Defined at:
 14602 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 14603 ;; Parameters:    Size  Location     Type
 14604 ;;		None
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;		None
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  1  [STACK] void 
 14609 ;; Registers used:
 14610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14611 ;; Tracked objects:
 14612 ;;		On entry : 3F/3F
 14613 ;;		On exit  : 3F/39
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14620 ;;Total ram usage:        0 bytes
 14621 ;; Hardware stack levels used:    1
 14622 ;; Hardware stack levels required when called:    4
 14623 ;; This function calls:
 14624 ;;		_INT0_SetInterruptHandler
 14625 ;;		_INT1_SetInterruptHandler
 14626 ;;		_INT2_SetInterruptHandler
 14627 ;; This function is called by:
 14628 ;;		_SYSTEM_Initialize
 14629 ;; This function uses a reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text71
 14633  005A1E                     __ptext71:
 14634                           	opt callstack 0
 14635  005A1E                     _EXT_INT_Initialize:
 14636                           	opt callstack 25
 14637                           
 14638                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14639                           
 14640                           ; BSR set to: 57
 14641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14642                           ;incstack = 0
 14643  005A1E  0139               	movlb	57	; () banked
 14644  005A20  91A1               	bcf	161,0,b	;volatile
 14645                           
 14646                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14647  005A22  90D2               	bcf	16338,0,c	;volatile
 14648                           
 14649                           ; BSR set to: 57
 14650                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14651  005A24  0E9E               	movlw	low _INT0_DefaultInterruptHandler
 14652  005A26  6EE6               	movwf	postinc1,c
 14653  005A28  0E64               	movlw	high _INT0_DefaultInterruptHandler
 14654  005A2A  6EE6               	movwf	postinc1,c
 14655  005A2C  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14656  005A2E  6EE6               	movwf	postinc1,c
 14657  005A30  EC57  F030         	call	_INT0_SetInterruptHandler	;wreg free
 14658                           
 14659                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14660  005A34  0139               	movlb	57	; () banked
 14661  005A36  8191               	bsf	145,0,b	;volatile
 14662                           
 14663                           ; BSR set to: 57
 14664                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14665  005A38  91A5               	bcf	165,0,b	;volatile
 14666                           
 14667                           ; BSR set to: 57
 14668                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14669  005A3A  92D2               	bcf	16338,1,c	;volatile
 14670                           
 14671                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14672  005A3C  0EA0               	movlw	low _INT1_DefaultInterruptHandler
 14673  005A3E  6EE6               	movwf	postinc1,c
 14674  005A40  0E64               	movlw	high _INT1_DefaultInterruptHandler
 14675  005A42  6EE6               	movwf	postinc1,c
 14676  005A44  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14677  005A46  6EE6               	movwf	postinc1,c
 14678  005A48  EC43  F030         	call	_INT1_SetInterruptHandler	;wreg free
 14679                           
 14680                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14681  005A4C  0139               	movlb	57	; () banked
 14682  005A4E  8195               	bsf	149,0,b	;volatile
 14683                           
 14684                           ; BSR set to: 57
 14685                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14686  005A50  9BA7               	bcf	167,5,b	;volatile
 14687                           
 14688                           ; BSR set to: 57
 14689                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14690  005A52  94D2               	bcf	16338,2,c	;volatile
 14691                           
 14692                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14693  005A54  0EA2               	movlw	low _INT2_DefaultInterruptHandler
 14694  005A56  6EE6               	movwf	postinc1,c
 14695  005A58  0E64               	movlw	high _INT2_DefaultInterruptHandler
 14696  005A5A  6EE6               	movwf	postinc1,c
 14697  005A5C  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14698  005A5E  6EE6               	movwf	postinc1,c
 14699  005A60  EC2F  F030         	call	_INT2_SetInterruptHandler	;wreg free
 14700                           
 14701                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14702  005A64  0139               	movlb	57	; () banked
 14703  005A66  8B97               	bsf	151,5,b	;volatile
 14704                           
 14705                           ; BSR set to: 57
 14706                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14707  005A68  0012               	return		;funcret
 14708  005A6A                     __end_of_EXT_INT_Initialize:
 14709                           	opt callstack 0
 14710                           
 14711 ;; *************** function _INT2_SetInterruptHandler *****************
 14712 ;; Defined at:
 14713 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14716 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;		None
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  1  [STACK] void 
 14721 ;; Registers used:
 14722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14723 ;; Tracked objects:
 14724 ;;		On entry : 3F/39
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14732 ;;Total ram usage:        0 bytes
 14733 ;; Hardware stack levels used:    1
 14734 ;; Hardware stack levels required when called:    3
 14735 ;; This function calls:
 14736 ;;		Nothing
 14737 ;; This function is called by:
 14738 ;;		_EXT_INT_Initialize
 14739 ;; This function uses a reentrant model
 14740 ;;
 14741                           
 14742                           	psect	text72
 14743  00605E                     __ptext72:
 14744                           	opt callstack 0
 14745  00605E                     _INT2_SetInterruptHandler:
 14746                           	opt callstack 25
 14747                           
 14748                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14749                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14750                           
 14751                           ; BSR set to: 57
 14752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14753                           ;incstack = 0
 14754  00605E  50E1               	movf	fsr1l,w,c
 14755  006060  0FFD               	addlw	-3
 14756  006062  6ED9               	movwf	fsr2l,c
 14757  006064  50E2               	movf	fsr1h,w,c
 14758  006066  6EDA               	movwf	fsr2h,c
 14759  006068  0EFF               	movlw	255
 14760  00606A  22DA               	addwfc	fsr2h,f,c
 14761  00606C  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 14762  006072  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 14763  006078  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 14764                           
 14765                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14766  00607E  52E5               	movf	postdec1,f,c
 14767  006080  52E5               	movf	postdec1,f,c
 14768  006082  52E5               	movf	postdec1,f,c
 14769  006084  0012               	return		;funcret
 14770  006086                     __end_of_INT2_SetInterruptHandler:
 14771                           	opt callstack 0
 14772                           
 14773 ;; *************** function _INT1_SetInterruptHandler *****************
 14774 ;; Defined at:
 14775 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14776 ;; Parameters:    Size  Location     Type
 14777 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14778 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14779 ;; Auto vars:     Size  Location     Type
 14780 ;;		None
 14781 ;; Return value:  Size  Location     Type
 14782 ;;                  1  [STACK] void 
 14783 ;; Registers used:
 14784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14785 ;; Tracked objects:
 14786 ;;		On entry : 3F/39
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;Total ram usage:        0 bytes
 14795 ;; Hardware stack levels used:    1
 14796 ;; Hardware stack levels required when called:    3
 14797 ;; This function calls:
 14798 ;;		Nothing
 14799 ;; This function is called by:
 14800 ;;		_EXT_INT_Initialize
 14801 ;; This function uses a reentrant model
 14802 ;;
 14803                           
 14804                           	psect	text73
 14805  006086                     __ptext73:
 14806                           	opt callstack 0
 14807  006086                     _INT1_SetInterruptHandler:
 14808                           	opt callstack 25
 14809                           
 14810                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14811                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14812                           
 14813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14814                           ;incstack = 0
 14815  006086  50E1               	movf	fsr1l,w,c
 14816  006088  0FFD               	addlw	-3
 14817  00608A  6ED9               	movwf	fsr2l,c
 14818  00608C  50E2               	movf	fsr1h,w,c
 14819  00608E  6EDA               	movwf	fsr2h,c
 14820  006090  0EFF               	movlw	255
 14821  006092  22DA               	addwfc	fsr2h,f,c
 14822  006094  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 14823  00609A  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 14824  0060A0  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 14825                           
 14826                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14827  0060A6  52E5               	movf	postdec1,f,c
 14828  0060A8  52E5               	movf	postdec1,f,c
 14829  0060AA  52E5               	movf	postdec1,f,c
 14830  0060AC  0012               	return		;funcret
 14831  0060AE                     __end_of_INT1_SetInterruptHandler:
 14832                           	opt callstack 0
 14833                           
 14834 ;; *************** function _INT0_SetInterruptHandler *****************
 14835 ;; Defined at:
 14836 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14839 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14840 ;; Auto vars:     Size  Location     Type
 14841 ;;		None
 14842 ;; Return value:  Size  Location     Type
 14843 ;;                  1  [STACK] void 
 14844 ;; Registers used:
 14845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14846 ;; Tracked objects:
 14847 ;;		On entry : 3F/39
 14848 ;;		On exit  : 0/0
 14849 ;;		Unchanged: 0/0
 14850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14855 ;;Total ram usage:        0 bytes
 14856 ;; Hardware stack levels used:    1
 14857 ;; Hardware stack levels required when called:    3
 14858 ;; This function calls:
 14859 ;;		Nothing
 14860 ;; This function is called by:
 14861 ;;		_EXT_INT_Initialize
 14862 ;; This function uses a reentrant model
 14863 ;;
 14864                           
 14865                           	psect	text74
 14866  0060AE                     __ptext74:
 14867                           	opt callstack 0
 14868  0060AE                     _INT0_SetInterruptHandler:
 14869                           	opt callstack 25
 14870                           
 14871                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14872                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14873                           
 14874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14875                           ;incstack = 0
 14876  0060AE  50E1               	movf	fsr1l,w,c
 14877  0060B0  0FFD               	addlw	-3
 14878  0060B2  6ED9               	movwf	fsr2l,c
 14879  0060B4  50E2               	movf	fsr1h,w,c
 14880  0060B6  6EDA               	movwf	fsr2h,c
 14881  0060B8  0EFF               	movlw	255
 14882  0060BA  22DA               	addwfc	fsr2h,f,c
 14883  0060BC  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 14884  0060C2  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 14885  0060C8  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 14886                           
 14887                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14888  0060CE  52E5               	movf	postdec1,f,c
 14889  0060D0  52E5               	movf	postdec1,f,c
 14890  0060D2  52E5               	movf	postdec1,f,c
 14891  0060D4  0012               	return		;funcret
 14892  0060D6                     __end_of_INT0_SetInterruptHandler:
 14893                           	opt callstack 0
 14894                           
 14895 ;; *************** function _DSM_Initialize *****************
 14896 ;; Defined at:
 14897 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14898 ;; Parameters:    Size  Location     Type
 14899 ;;		None
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;		None
 14902 ;; Return value:  Size  Location     Type
 14903 ;;                  1  [STACK] void 
 14904 ;; Registers used:
 14905 ;;		wreg, status,2
 14906 ;; Tracked objects:
 14907 ;;		On entry : 0/3C
 14908 ;;		On exit  : 3F/3C
 14909 ;;		Unchanged: 0/0
 14910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14915 ;;Total ram usage:        0 bytes
 14916 ;; Hardware stack levels used:    1
 14917 ;; Hardware stack levels required when called:    3
 14918 ;; This function calls:
 14919 ;;		Nothing
 14920 ;; This function is called by:
 14921 ;;		_SYSTEM_Initialize
 14922 ;; This function uses a reentrant model
 14923 ;;
 14924                           
 14925                           	psect	text75
 14926  006344                     __ptext75:
 14927                           	opt callstack 0
 14928  006344                     _DSM_Initialize:
 14929                           	opt callstack 26
 14930                           
 14931                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14932                           
 14933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14934                           ;incstack = 0
 14935  006344  013C               	movlb	60	; () banked
 14936  006346  99FA               	bcf	250,4,b	;volatile
 14937                           
 14938                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14939  006348  81FB               	bsf	251,0,b	;volatile
 14940                           
 14941                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14942  00634A  93FB               	bcf	251,1,b	;volatile
 14943                           
 14944                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14945  00634C  89FB               	bsf	251,4,b	;volatile
 14946                           
 14947                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14948  00634E  9BFB               	bcf	251,5,b	;volatile
 14949                           
 14950                           ; BSR set to: 60
 14951                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14952  006350  0E13               	movlw	19
 14953  006352  6FFC               	movwf	252,b	;volatile
 14954                           
 14955                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14956  006354  0E0E               	movlw	14
 14957  006356  6FFE               	movwf	254,b	;volatile
 14958                           
 14959                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14960  006358  0E04               	movlw	4
 14961  00635A  6FFD               	movwf	253,b	;volatile
 14962                           
 14963                           ; BSR set to: 60
 14964                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14965  00635C  8FFA               	bsf	250,7,b	;volatile
 14966                           
 14967                           ; BSR set to: 60
 14968                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14969  00635E  0012               	return		;funcret
 14970  006360                     __end_of_DSM_Initialize:
 14971                           	opt callstack 0
 14972                           
 14973 ;; *************** function _DMA1_Initialize *****************
 14974 ;; Defined at:
 14975 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14976 ;; Parameters:    Size  Location     Type
 14977 ;;		None
 14978 ;; Auto vars:     Size  Location     Type
 14979 ;;		None
 14980 ;; Return value:  Size  Location     Type
 14981 ;;                  1  [STACK] void 
 14982 ;; Registers used:
 14983 ;;		wreg, status,2
 14984 ;; Tracked objects:
 14985 ;;		On entry : 3F/3D
 14986 ;;		On exit  : 3F/3B
 14987 ;;		Unchanged: 0/0
 14988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14993 ;;Total ram usage:        0 bytes
 14994 ;; Hardware stack levels used:    1
 14995 ;; Hardware stack levels required when called:    3
 14996 ;; This function calls:
 14997 ;;		Nothing
 14998 ;; This function is called by:
 14999 ;;		_SYSTEM_Initialize
 15000 ;; This function uses a reentrant model
 15001 ;;
 15002                           
 15003                           	psect	text76
 15004  0056D4                     __ptext76:
 15005                           	opt callstack 0
 15006  0056D4                     _DMA1_Initialize:
 15007                           	opt callstack 26
 15008                           
 15009                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 15010                           
 15011                           ; BSR set to: 60
 15012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15013                           ;incstack = 0
 15014  0056D4  0E00               	movlw	0
 15015  0056D6  013B               	movlb	59	; () banked
 15016  0056D8  6FF9               	movwf	249,b	;volatile
 15017  0056DA  0E10               	movlw	16
 15018  0056DC  6FFA               	movwf	250,b	;volatile
 15019  0056DE  0E00               	movlw	0
 15020  0056E0  6FFB               	movwf	251,b	;volatile
 15021                           
 15022                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 15023  0056E2  0E3D               	movlw	61
 15024  0056E4  6FF1               	movwf	241,b	;volatile
 15025  0056E6  0E11               	movlw	17
 15026  0056E8  6FF0               	movwf	240,b	;volatile
 15027                           
 15028                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 15029  0056EA  0E03               	movlw	3
 15030  0056EC  6FFD               	movwf	253,b	;volatile
 15031                           
 15032                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 15033  0056EE  0E00               	movlw	0
 15034  0056F0  6FF8               	movwf	248,b	;volatile
 15035  0056F2  0E01               	movlw	1
 15036  0056F4  6FF7               	movwf	247,b	;volatile
 15037                           
 15038                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 15039  0056F6  0E00               	movlw	0
 15040  0056F8  6FEF               	movwf	239,b	;volatile
 15041  0056FA  0E01               	movlw	1
 15042  0056FC  6FEE               	movwf	238,b	;volatile
 15043                           
 15044                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 15045  0056FE  0E15               	movlw	21
 15046  005700  6FFF               	movwf	255,b	;volatile
 15047                           
 15048                           ; BSR set to: 59
 15049                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 15050  005702  6BFE               	clrf	254,b	;volatile
 15051                           
 15052                           ; BSR set to: 59
 15053                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 15054  005704  0139               	movlb	57	; () banked
 15055  005706  93A2               	bcf	162,1,b	;volatile
 15056                           
 15057                           ; BSR set to: 57
 15058                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 15059  005708  91A2               	bcf	162,0,b	;volatile
 15060                           
 15061                           ; BSR set to: 57
 15062                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 15063  00570A  97A2               	bcf	162,3,b	;volatile
 15064                           
 15065                           ; BSR set to: 57
 15066                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 15067  00570C  95A2               	bcf	162,2,b	;volatile
 15068                           
 15069                           ; BSR set to: 57
 15070                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 15071  00570E  8392               	bsf	146,1,b	;volatile
 15072                           
 15073                           ; BSR set to: 57
 15074                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 15075  005710  8192               	bsf	146,0,b	;volatile
 15076                           
 15077                           ; BSR set to: 57
 15078                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 15079  005712  8792               	bsf	146,3,b	;volatile
 15080                           
 15081                           ; BSR set to: 57
 15082                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 15083  005714  8592               	bsf	146,2,b	;volatile
 15084                           
 15085                           ; BSR set to: 57
 15086                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 15087  005716  6BF1               	clrf	241,b	;volatile
 15088                           
 15089                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 15090  005718  0E01               	movlw	1
 15091  00571A  6FF2               	movwf	242,b	;volatile
 15092                           
 15093                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 15094  00571C  0E04               	movlw	4
 15095  00571E  6FF3               	movwf	243,b	;volatile
 15096                           
 15097                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 15098  005720  0E02               	movlw	2
 15099  005722  6FF4               	movwf	244,b	;volatile
 15100                           
 15101                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 15102  005724  0E03               	movlw	3
 15103  005726  6FF7               	movwf	247,b	;volatile
 15104  005728  9ED2               	bcf	16338,7,c	;# 
 15105  00572A  0139               	banksel	14831	;# 
 15106  00572C  0E55               	movlw	85	;# 
 15107  00572E  6FEF               	movwf	14831,b	;# 
 15108  005730  0EAA               	movlw	170	;# 
 15109  005732  6FEF               	movwf	14831,b	;# 
 15110  005734  81EF               	bsf	14831,0,b	;# 
 15111  005736  8ED2               	bsf	16338,7,c	;# 
 15112                           
 15113                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 15114  005738  013B               	movlb	59	; () banked
 15115  00573A  6BFC               	clrf	252,b	;volatile
 15116                           
 15117                           ; BSR set to: 59
 15118                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15119  00573C  0012               	return		;funcret
 15120  00573E                     __end_of_DMA1_Initialize:
 15121                           	opt callstack 0
 15122                           
 15123 ;; *************** function _CLKREF_Initialize *****************
 15124 ;; Defined at:
 15125 ;;		line 58 in file "mcc_generated_files/clkref.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;		None
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;		None
 15130 ;; Return value:  Size  Location     Type
 15131 ;;                  1  [STACK] void 
 15132 ;; Registers used:
 15133 ;;		wreg, status,2
 15134 ;; Tracked objects:
 15135 ;;		On entry : 3F/3B
 15136 ;;		On exit  : 3F/3C
 15137 ;;		Unchanged: 0/0
 15138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15143 ;;Total ram usage:        0 bytes
 15144 ;; Hardware stack levels used:    1
 15145 ;; Hardware stack levels required when called:    3
 15146 ;; This function calls:
 15147 ;;		Nothing
 15148 ;; This function is called by:
 15149 ;;		_SYSTEM_Initialize
 15150 ;; This function uses a reentrant model
 15151 ;;
 15152                           
 15153                           	psect	text77
 15154  00643E                     __ptext77:
 15155                           	opt callstack 0
 15156  00643E                     _CLKREF_Initialize:
 15157                           	opt callstack 26
 15158                           
 15159                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 15160                           
 15161                           ; BSR set to: 59
 15162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15163                           ;incstack = 0
 15164  00643E  013C               	movlb	60	; () banked
 15165  006440  6BE6               	clrf	230,b	;volatile
 15166                           
 15167                           ; BSR set to: 60
 15168                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 15169  006442  0E94               	movlw	148
 15170  006444  6FE5               	movwf	229,b	;volatile
 15171                           
 15172                           ; BSR set to: 60
 15173                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15174  006446  0012               	return		;funcret
 15175  006448                     __end_of_CLKREF_Initialize:
 15176                           	opt callstack 0
 15177                           
 15178 ;; *************** function _CLC1_Initialize *****************
 15179 ;; Defined at:
 15180 ;;		line 58 in file "mcc_generated_files/clc1.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;		None
 15183 ;; Auto vars:     Size  Location     Type
 15184 ;;		None
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  1  [STACK] void 
 15187 ;; Registers used:
 15188 ;;		wreg, status,2
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/39
 15191 ;;		On exit  : 3F/3C
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15198 ;;Total ram usage:        0 bytes
 15199 ;; Hardware stack levels used:    1
 15200 ;; Hardware stack levels required when called:    3
 15201 ;; This function calls:
 15202 ;;		Nothing
 15203 ;; This function is called by:
 15204 ;;		_SYSTEM_Initialize
 15205 ;; This function uses a reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text78
 15209  006208                     __ptext78:
 15210                           	opt callstack 0
 15211  006208                     _CLC1_Initialize:
 15212                           	opt callstack 26
 15213                           
 15214                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 15215                           
 15216                           ; BSR set to: 60
 15217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15218                           ;incstack = 0
 15219  006208  013C               	movlb	60	; () banked
 15220  00620A  6B75               	clrf	117,b	;volatile
 15221                           
 15222                           ; BSR set to: 60
 15223                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 15224  00620C  0E04               	movlw	4
 15225  00620E  6F76               	movwf	118,b	;volatile
 15226                           
 15227                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 15228  006210  0E04               	movlw	4
 15229  006212  6F77               	movwf	119,b	;volatile
 15230                           
 15231                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 15232  006214  0E04               	movlw	4
 15233  006216  6F78               	movwf	120,b	;volatile
 15234                           
 15235                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 15236  006218  0E04               	movlw	4
 15237  00621A  6F79               	movwf	121,b	;volatile
 15238                           
 15239                           ; BSR set to: 60
 15240                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 15241  00621C  6B7A               	clrf	122,b	;volatile
 15242                           
 15243                           ; BSR set to: 60
 15244                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 15245  00621E  6B7B               	clrf	123,b	;volatile
 15246                           
 15247                           ; BSR set to: 60
 15248                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 15249  006220  6B7C               	clrf	124,b	;volatile
 15250                           
 15251                           ; BSR set to: 60
 15252                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 15253  006222  6B7D               	clrf	125,b	;volatile
 15254                           
 15255                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 15256  006224  0E81               	movlw	129
 15257  006226  6F74               	movwf	116,b	;volatile
 15258                           
 15259                           ; BSR set to: 60
 15260                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15261  006228  0012               	return		;funcret
 15262  00622A                     __end_of_CLC1_Initialize:
 15263                           	opt callstack 0
 15264                           
 15265 ;; *************** function _ADCC_Initialize *****************
 15266 ;; Defined at:
 15267 ;;		line 64 in file "mcc_generated_files/adcc.c"
 15268 ;; Parameters:    Size  Location     Type
 15269 ;;		None
 15270 ;; Auto vars:     Size  Location     Type
 15271 ;;		None
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  1  [STACK] void 
 15274 ;; Registers used:
 15275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15276 ;; Tracked objects:
 15277 ;;		On entry : 3F/39
 15278 ;;		On exit  : 0/0
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15285 ;;Total ram usage:        0 bytes
 15286 ;; Hardware stack levels used:    1
 15287 ;; Hardware stack levels required when called:    4
 15288 ;; This function calls:
 15289 ;;		_ADCC_SetADIInterruptHandler
 15290 ;; This function is called by:
 15291 ;;		_SYSTEM_Initialize
 15292 ;; This function uses a reentrant model
 15293 ;;
 15294                           
 15295                           	psect	text79
 15296  005A6A                     __ptext79:
 15297                           	opt callstack 0
 15298  005A6A                     _ADCC_Initialize:
 15299                           	opt callstack 25
 15300                           
 15301                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 15302                           
 15303                           ; BSR set to: 60
 15304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15305                           ;incstack = 0
 15306  005A6A  013E               	movlb	62	; () banked
 15307  005A6C  6BDE               	clrf	222,b	;volatile
 15308                           
 15309                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 15310  005A6E  6BDF               	clrf	223,b	;volatile
 15311                           
 15312                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 15313  005A70  6BE0               	clrf	224,b	;volatile
 15314                           
 15315                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 15316  005A72  6BE1               	clrf	225,b	;volatile
 15317                           
 15318                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 15319  005A74  6BE4               	clrf	228,b	;volatile
 15320                           
 15321                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 15322  005A76  6BE5               	clrf	229,b	;volatile
 15323                           
 15324                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 15325  005A78  6BEA               	clrf	234,b	;volatile
 15326                           
 15327                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 15328  005A7A  6BEC               	clrf	236,b	;volatile
 15329                           
 15330                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 15331  005A7C  6BF1               	clrf	241,b	;volatile
 15332                           
 15333                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 15334  005A7E  6BF3               	clrf	243,b	;volatile
 15335                           
 15336                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 15337  005A80  6BF4               	clrf	244,b	;volatile
 15338                           
 15339                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 15340  005A82  6BF5               	clrf	245,b	;volatile
 15341                           
 15342                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 15343  005A84  6BF6               	clrf	246,b	;volatile
 15344                           
 15345                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 15346  005A86  6BF7               	clrf	247,b	;volatile
 15347                           
 15348                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 15349  005A88  6BF9               	clrf	249,b	;volatile
 15350                           
 15351                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 15352  005A8A  6BFA               	clrf	250,b	;volatile
 15353                           
 15354                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 15355  005A8C  6BFB               	clrf	251,b	;volatile
 15356                           
 15357                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 15358  005A8E  6BFC               	clrf	252,b	;volatile
 15359                           
 15360                           ; BSR set to: 62
 15361                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 15362  005A90  0E02               	movlw	2
 15363  005A92  6FFD               	movwf	253,b	;volatile
 15364                           
 15365                           ; BSR set to: 62
 15366                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 15367  005A94  6BFE               	clrf	254,b	;volatile
 15368                           
 15369                           ; BSR set to: 62
 15370                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 15371  005A96  6BFF               	clrf	255,b	;volatile
 15372                           
 15373                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 15374  005A98  0E94               	movlw	148
 15375  005A9A  6FF8               	movwf	248,b	;volatile
 15376                           
 15377                           ; BSR set to: 62
 15378                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 15379  005A9C  0139               	movlb	57	; () banked
 15380  005A9E  95A1               	bcf	161,2,b	;volatile
 15381                           
 15382                           ; BSR set to: 57
 15383                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 15384  005AA0  8591               	bsf	145,2,b	;volatile
 15385                           
 15386                           ; BSR set to: 57
 15387                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 15388  005AA2  0EA4               	movlw	low _ADCC_DefaultInterruptHandler
 15389  005AA4  6EE6               	movwf	postinc1,c
 15390  005AA6  0E64               	movlw	high _ADCC_DefaultInterruptHandler
 15391  005AA8  6EE6               	movwf	postinc1,c
 15392  005AAA  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 15393  005AAC  6EE6               	movwf	postinc1,c
 15394  005AAE  EC6B  F030         	call	_ADCC_SetADIInterruptHandler	;wreg free
 15395                           
 15396                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15397  005AB2  0012               	return		;funcret
 15398  005AB4                     __end_of_ADCC_Initialize:
 15399                           	opt callstack 0
 15400                           
 15401 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 15402 ;; Defined at:
 15403 ;;		line 316 in file "mcc_generated_files/adcc.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15406 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 15407 ;; Auto vars:     Size  Location     Type
 15408 ;;		None
 15409 ;; Return value:  Size  Location     Type
 15410 ;;                  1  [STACK] void 
 15411 ;; Registers used:
 15412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15413 ;; Tracked objects:
 15414 ;;		On entry : 3F/39
 15415 ;;		On exit  : 0/0
 15416 ;;		Unchanged: 0/0
 15417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15422 ;;Total ram usage:        0 bytes
 15423 ;; Hardware stack levels used:    1
 15424 ;; Hardware stack levels required when called:    3
 15425 ;; This function calls:
 15426 ;;		Nothing
 15427 ;; This function is called by:
 15428 ;;		_ADCC_Initialize
 15429 ;; This function uses a reentrant model
 15430 ;;
 15431                           
 15432                           	psect	text80
 15433  0060D6                     __ptext80:
 15434                           	opt callstack 0
 15435  0060D6                     _ADCC_SetADIInterruptHandler:
 15436                           	opt callstack 25
 15437                           
 15438                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 15439                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15440                           
 15441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15442                           ;incstack = 0
 15443  0060D6  50E1               	movf	fsr1l,w,c
 15444  0060D8  0FFD               	addlw	-3
 15445  0060DA  6ED9               	movwf	fsr2l,c
 15446  0060DC  50E2               	movf	fsr1h,w,c
 15447  0060DE  6EDA               	movwf	fsr2h,c
 15448  0060E0  0EFF               	movlw	255
 15449  0060E2  22DA               	addwfc	fsr2h,f,c
 15450  0060E4  006F FF78  F0F4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 15451  0060EA  006F FF78  F0F5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 15452  0060F0  006F FF74  F0F6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 15453                           
 15454                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15455  0060F6  52E5               	movf	postdec1,f,c
 15456  0060F8  52E5               	movf	postdec1,f,c
 15457  0060FA  52E5               	movf	postdec1,f,c
 15458  0060FC  0012               	return		;funcret
 15459  0060FE                     __end_of_ADCC_SetADIInterruptHandler:
 15460                           	opt callstack 0
 15461                           
 15462 ;; *************** function _INT0_ISR *****************
 15463 ;; Defined at:
 15464 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;		None
 15467 ;; Auto vars:     Size  Location     Type
 15468 ;;		None
 15469 ;; Return value:  Size  Location     Type
 15470 ;;                  1    wreg      void 
 15471 ;; Registers used:
 15472 ;;		wreg, status,2, status,0, pclath, tosl
 15473 ;; Tracked objects:
 15474 ;;		On entry : 0/0
 15475 ;;		On exit  : 0/0
 15476 ;;		Unchanged: 0/0
 15477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15482 ;;Total ram usage:        0 bytes
 15483 ;; Hardware stack levels used:    1
 15484 ;; Hardware stack levels required when called:    2
 15485 ;; This function calls:
 15486 ;;		_INT0_CallBack
 15487 ;; This function is called by:
 15488 ;;		Interrupt level 2
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492                           	psect	text81
 15493  006400                     __ptext81:
 15494                           	opt callstack 0
 15495  006400                     _INT0_ISR:
 15496                           	opt callstack 17
 15497                           
 15498                           ;incstack = 0
 15499  006400  EE13  F154         	lfsr	1,___inthi_sp
 15500                           
 15501                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 15502  006404  0139               	movlb	57	; () banked
 15503  006406  91A1               	bcf	161,0,b	;volatile
 15504                           
 15505                           ; BSR set to: 57
 15506                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 15507  006408  EC15  F031         	call	_INT0_CallBack	;wreg free
 15508  00640C  0011               	retfie		f
 15509  00640E                     __end_of_INT0_ISR:
 15510                           	opt callstack 0
 15511                           
 15512 ;; *************** function _INT0_CallBack *****************
 15513 ;; Defined at:
 15514 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 15515 ;; Parameters:    Size  Location     Type
 15516 ;;		None
 15517 ;; Auto vars:     Size  Location     Type
 15518 ;;		None
 15519 ;; Return value:  Size  Location     Type
 15520 ;;                  1  [STACK] void 
 15521 ;; Registers used:
 15522 ;;		wreg, status,2, status,0, pclath, tosl
 15523 ;; Tracked objects:
 15524 ;;		On entry : 3F/39
 15525 ;;		On exit  : 0/0
 15526 ;;		Unchanged: 0/0
 15527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15532 ;;Total ram usage:        0 bytes
 15533 ;; Hardware stack levels used:    1
 15534 ;; Hardware stack levels required when called:    1
 15535 ;; This function calls:
 15536 ;;		Absolute function
 15537 ;;		_INT0_DefaultInterruptHandler
 15538 ;; This function is called by:
 15539 ;;		_INT0_ISR
 15540 ;; This function uses a reentrant model
 15541 ;;
 15542                           
 15543                           	psect	text82
 15544  00622A                     __ptext82:
 15545                           	opt callstack 0
 15546  00622A                     _INT0_CallBack:
 15547                           	opt callstack 17
 15548                           
 15549                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 15550                           
 15551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15552                           ;incstack = 0
 15553  00622A  501A               	movf	_INT0_InterruptHandler,w,c
 15554  00622C  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 15555  00622E  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 15556  006230  B4D8               	btfsc	status,2,c
 15557  006232  0012               	return	
 15558                           
 15559                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 15560  006234  D801               	call	u125_48
 15561  006236  0012               	return	
 15562  006238                     u125_48:
 15563  006238  0005               	push	
 15564  00623A  6EFA               	movwf	pclath,c
 15565  00623C  501A               	movf	_INT0_InterruptHandler,w,c
 15566  00623E  6EFD               	movwf	tosl,c
 15567  006240  501B               	movf	_INT0_InterruptHandler+1,w,c
 15568  006242  6EFE               	movwf	tosh,c
 15569  006244  501C               	movf	_INT0_InterruptHandler+2,w,c
 15570  006246  6EFF               	movwf	tosu,c
 15571  006248  50FA               	movf	pclath,w,c
 15572  00624A  0012               	return		;indir
 15573  00624C                     __end_of_INT0_CallBack:
 15574                           	opt callstack 0
 15575                           
 15576 ;; *************** function _INT0_DefaultInterruptHandler *****************
 15577 ;; Defined at:
 15578 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;		None
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;		None
 15583 ;; Return value:  Size  Location     Type
 15584 ;;                  1  [STACK] void 
 15585 ;; Registers used:
 15586 ;;		None
 15587 ;; Tracked objects:
 15588 ;;		On entry : 0/39
 15589 ;;		On exit  : 0/0
 15590 ;;		Unchanged: 0/0
 15591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15596 ;;Total ram usage:        0 bytes
 15597 ;; Hardware stack levels used:    1
 15598 ;; This function calls:
 15599 ;;		Nothing
 15600 ;; This function is called by:
 15601 ;;		_EXT_INT_Initialize
 15602 ;;		_INT0_CallBack
 15603 ;; This function uses a reentrant model
 15604 ;;
 15605                           
 15606                           	psect	text83
 15607  00649E                     __ptext83:
 15608                           	opt callstack 0
 15609  00649E                     _INT0_DefaultInterruptHandler:
 15610                           	opt callstack 17
 15611                           
 15612                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15613                           
 15614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15615                           ;incstack = 0
 15616  00649E  0012               	return		;funcret
 15617  0064A0                     __end_of_INT0_DefaultInterruptHandler:
 15618                           	opt callstack 0
 15619                           
 15620 ;; *************** function _INT1_ISR *****************
 15621 ;; Defined at:
 15622 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;		None
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;		None
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      void 
 15629 ;; Registers used:
 15630 ;;		wreg, status,2, status,0, pclath, tosl
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15640 ;;Total ram usage:        0 bytes
 15641 ;; Hardware stack levels used:    1
 15642 ;; Hardware stack levels required when called:    2
 15643 ;; This function calls:
 15644 ;;		_INT1_CallBack
 15645 ;; This function is called by:
 15646 ;;		Interrupt level 2
 15647 ;; This function uses a non-reentrant model
 15648 ;;
 15649                           
 15650                           	psect	text84
 15651  006410                     __ptext84:
 15652                           	opt callstack 0
 15653  006410                     _INT1_ISR:
 15654                           	opt callstack 17
 15655                           
 15656                           ;incstack = 0
 15657  006410  EE13  F154         	lfsr	1,___inthi_sp
 15658                           
 15659                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15660  006414  0139               	movlb	57	; () banked
 15661  006416  91A5               	bcf	165,0,b	;volatile
 15662                           
 15663                           ; BSR set to: 57
 15664                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15665  006418  EC26  F031         	call	_INT1_CallBack	;wreg free
 15666  00641C  0011               	retfie		f
 15667  00641E                     __end_of_INT1_ISR:
 15668                           	opt callstack 0
 15669                           
 15670 ;; *************** function _INT1_CallBack *****************
 15671 ;; Defined at:
 15672 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15673 ;; Parameters:    Size  Location     Type
 15674 ;;		None
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;		None
 15677 ;; Return value:  Size  Location     Type
 15678 ;;                  1  [STACK] void 
 15679 ;; Registers used:
 15680 ;;		wreg, status,2, status,0, pclath, tosl
 15681 ;; Tracked objects:
 15682 ;;		On entry : 3F/39
 15683 ;;		On exit  : 0/0
 15684 ;;		Unchanged: 0/0
 15685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15690 ;;Total ram usage:        0 bytes
 15691 ;; Hardware stack levels used:    1
 15692 ;; Hardware stack levels required when called:    1
 15693 ;; This function calls:
 15694 ;;		Absolute function
 15695 ;;		_INT1_DefaultInterruptHandler
 15696 ;; This function is called by:
 15697 ;;		_INT1_ISR
 15698 ;; This function uses a reentrant model
 15699 ;;
 15700                           
 15701                           	psect	text85
 15702  00624C                     __ptext85:
 15703                           	opt callstack 0
 15704  00624C                     _INT1_CallBack:
 15705                           	opt callstack 17
 15706                           
 15707                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15708                           
 15709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15710                           ;incstack = 0
 15711  00624C  5017               	movf	_INT1_InterruptHandler,w,c
 15712  00624E  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 15713  006250  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 15714  006252  B4D8               	btfsc	status,2,c
 15715  006254  0012               	return	
 15716                           
 15717                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15718  006256  D801               	call	u127_48
 15719  006258  0012               	return	
 15720  00625A                     u127_48:
 15721  00625A  0005               	push	
 15722  00625C  6EFA               	movwf	pclath,c
 15723  00625E  5017               	movf	_INT1_InterruptHandler,w,c
 15724  006260  6EFD               	movwf	tosl,c
 15725  006262  5018               	movf	_INT1_InterruptHandler+1,w,c
 15726  006264  6EFE               	movwf	tosh,c
 15727  006266  5019               	movf	_INT1_InterruptHandler+2,w,c
 15728  006268  6EFF               	movwf	tosu,c
 15729  00626A  50FA               	movf	pclath,w,c
 15730  00626C  0012               	return		;indir
 15731  00626E                     __end_of_INT1_CallBack:
 15732                           	opt callstack 0
 15733                           
 15734 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15735 ;; Defined at:
 15736 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;		None
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;		None
 15741 ;; Return value:  Size  Location     Type
 15742 ;;                  1  [STACK] void 
 15743 ;; Registers used:
 15744 ;;		None
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/39
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15754 ;;Total ram usage:        0 bytes
 15755 ;; Hardware stack levels used:    1
 15756 ;; This function calls:
 15757 ;;		Nothing
 15758 ;; This function is called by:
 15759 ;;		_EXT_INT_Initialize
 15760 ;;		_INT1_CallBack
 15761 ;; This function uses a reentrant model
 15762 ;;
 15763                           
 15764                           	psect	text86
 15765  0064A0                     __ptext86:
 15766                           	opt callstack 0
 15767  0064A0                     _INT1_DefaultInterruptHandler:
 15768                           	opt callstack 17
 15769                           
 15770                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15771                           
 15772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15773                           ;incstack = 0
 15774  0064A0  0012               	return		;funcret
 15775  0064A2                     __end_of_INT1_DefaultInterruptHandler:
 15776                           	opt callstack 0
 15777                           
 15778 ;; *************** function _INT2_ISR *****************
 15779 ;; Defined at:
 15780 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;		None
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;		None
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  1    wreg      void 
 15787 ;; Registers used:
 15788 ;;		wreg, status,2, status,0, pclath, tosl
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15798 ;;Total ram usage:        0 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; Hardware stack levels required when called:    2
 15801 ;; This function calls:
 15802 ;;		_INT2_CallBack
 15803 ;; This function is called by:
 15804 ;;		Interrupt level 2
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           	psect	text87
 15809  006420                     __ptext87:
 15810                           	opt callstack 0
 15811  006420                     _INT2_ISR:
 15812                           	opt callstack 17
 15813                           
 15814                           ;incstack = 0
 15815  006420  EE13  F154         	lfsr	1,___inthi_sp
 15816                           
 15817                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15818  006424  0139               	movlb	57	; () banked
 15819  006426  9BA7               	bcf	167,5,b	;volatile
 15820                           
 15821                           ; BSR set to: 57
 15822                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15823  006428  EC37  F031         	call	_INT2_CallBack	;wreg free
 15824  00642C  0011               	retfie		f
 15825  00642E                     __end_of_INT2_ISR:
 15826                           	opt callstack 0
 15827                           
 15828 ;; *************** function _INT2_CallBack *****************
 15829 ;; Defined at:
 15830 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;		None
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;		None
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1  [STACK] void 
 15837 ;; Registers used:
 15838 ;;		wreg, status,2, status,0, pclath, tosl
 15839 ;; Tracked objects:
 15840 ;;		On entry : 3F/39
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;Total ram usage:        0 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; Hardware stack levels required when called:    1
 15851 ;; This function calls:
 15852 ;;		Absolute function
 15853 ;;		_INT2_DefaultInterruptHandler
 15854 ;; This function is called by:
 15855 ;;		_INT2_ISR
 15856 ;; This function uses a reentrant model
 15857 ;;
 15858                           
 15859                           	psect	text88
 15860  00626E                     __ptext88:
 15861                           	opt callstack 0
 15862  00626E                     _INT2_CallBack:
 15863                           	opt callstack 17
 15864                           
 15865                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15866                           
 15867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15868                           ;incstack = 0
 15869  00626E  5014               	movf	_INT2_InterruptHandler,w,c
 15870  006270  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 15871  006272  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 15872  006274  B4D8               	btfsc	status,2,c
 15873  006276  0012               	return	
 15874                           
 15875                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15876  006278  D801               	call	u129_48
 15877  00627A  0012               	return	
 15878  00627C                     u129_48:
 15879  00627C  0005               	push	
 15880  00627E  6EFA               	movwf	pclath,c
 15881  006280  5014               	movf	_INT2_InterruptHandler,w,c
 15882  006282  6EFD               	movwf	tosl,c
 15883  006284  5015               	movf	_INT2_InterruptHandler+1,w,c
 15884  006286  6EFE               	movwf	tosh,c
 15885  006288  5016               	movf	_INT2_InterruptHandler+2,w,c
 15886  00628A  6EFF               	movwf	tosu,c
 15887  00628C  50FA               	movf	pclath,w,c
 15888  00628E  0012               	return		;indir
 15889  006290                     __end_of_INT2_CallBack:
 15890                           	opt callstack 0
 15891                           
 15892 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15893 ;; Defined at:
 15894 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15895 ;; Parameters:    Size  Location     Type
 15896 ;;		None
 15897 ;; Auto vars:     Size  Location     Type
 15898 ;;		None
 15899 ;; Return value:  Size  Location     Type
 15900 ;;                  1  [STACK] void 
 15901 ;; Registers used:
 15902 ;;		None
 15903 ;; Tracked objects:
 15904 ;;		On entry : 0/39
 15905 ;;		On exit  : 0/0
 15906 ;;		Unchanged: 0/0
 15907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15912 ;;Total ram usage:        0 bytes
 15913 ;; Hardware stack levels used:    1
 15914 ;; This function calls:
 15915 ;;		Nothing
 15916 ;; This function is called by:
 15917 ;;		_EXT_INT_Initialize
 15918 ;;		_INT2_CallBack
 15919 ;; This function uses a reentrant model
 15920 ;;
 15921                           
 15922                           	psect	text89
 15923  0064A2                     __ptext89:
 15924                           	opt callstack 0
 15925  0064A2                     _INT2_DefaultInterruptHandler:
 15926                           	opt callstack 17
 15927                           
 15928                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15929                           
 15930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15931                           ;incstack = 0
 15932  0064A2  0012               	return		;funcret
 15933  0064A4                     __end_of_INT2_DefaultInterruptHandler:
 15934                           	opt callstack 0
 15935                           
 15936 ;; *************** function _Default_ISR *****************
 15937 ;; Defined at:
 15938 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;		None
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;		None
 15943 ;; Return value:  Size  Location     Type
 15944 ;;                  1    wreg      void 
 15945 ;; Registers used:
 15946 ;;		None
 15947 ;; Tracked objects:
 15948 ;;		On entry : 0/0
 15949 ;;		On exit  : 0/0
 15950 ;;		Unchanged: 0/0
 15951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15956 ;;Total ram usage:        0 bytes
 15957 ;; Hardware stack levels used:    1
 15958 ;; This function calls:
 15959 ;;		Nothing
 15960 ;; This function is called by:
 15961 ;;		Interrupt level 2
 15962 ;; This function uses a non-reentrant model
 15963 ;;
 15964                           
 15965                           	psect	text90
 15966  006498                     __ptext90:
 15967                           	opt callstack 0
 15968  006498                     _Default_ISR:
 15969                           	opt callstack 19
 15970                           
 15971                           ;incstack = 0
 15972  006498  EE13  F154         	lfsr	1,___inthi_sp
 15973  00649C  0011               	retfie		f
 15974  00649E                     __end_of_Default_ISR:
 15975                           	opt callstack 0
 15976                           
 15977 ;; *************** function _ADCC_ISR *****************
 15978 ;; Defined at:
 15979 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;		None
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;		None
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      void 
 15986 ;; Registers used:
 15987 ;;		wreg, status,2, status,0, pclath, tosl
 15988 ;; Tracked objects:
 15989 ;;		On entry : 0/0
 15990 ;;		On exit  : 0/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15997 ;;Total ram usage:        0 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; Hardware stack levels required when called:    1
 16000 ;; This function calls:
 16001 ;;		Absolute function
 16002 ;;		_ADCC_DefaultInterruptHandler
 16003 ;; This function is called by:
 16004 ;;		Interrupt level 2
 16005 ;; This function uses a non-reentrant model
 16006 ;;
 16007                           
 16008                           	psect	text91
 16009  005DCC                     __ptext91:
 16010                           	opt callstack 0
 16011  005DCC                     _ADCC_ISR:
 16012                           	opt callstack 18
 16013                           
 16014                           ;incstack = 0
 16015  005DCC  EE13  F154         	lfsr	1,___inthi_sp
 16016                           
 16017                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 16018  005DD0  0139               	movlb	57	; () banked
 16019  005DD2  95A1               	bcf	161,2,b	;volatile
 16020                           
 16021                           ; BSR set to: 57
 16022                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 16023  005DD4  0100               	movlb	0	; () banked
 16024  005DD6  51F4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16025  005DD8  11F5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16026  005DDA  11F6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16027  005DDC  B4D8               	btfsc	status,2,c
 16028  005DDE  0011               	retfie		f
 16029                           
 16030                           ; BSR set to: 0
 16031                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 16032  005DE0  D801               	call	i2u595_48
 16033  005DE2  0011               	retfie		f
 16034  005DE4                     i2u595_48:
 16035  005DE4  0005               	push	
 16036  005DE6  6EFA               	movwf	pclath,c
 16037  005DE8  51F4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16038  005DEA  6EFD               	movwf	tosl,c
 16039  005DEC  51F5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16040  005DEE  6EFE               	movwf	tosh,c
 16041  005DF0  51F6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16042  005DF2  6EFF               	movwf	tosu,c
 16043  005DF4  50FA               	movf	pclath,w,c
 16044  005DF6  0012               	return		;indir
 16045  005DF8                     __end_of_ADCC_ISR:
 16046                           	opt callstack 0
 16047                           
 16048 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16049 ;; Defined at:
 16050 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;		None
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;		None
 16055 ;; Return value:  Size  Location     Type
 16056 ;;                  1  [STACK] void 
 16057 ;; Registers used:
 16058 ;;		None
 16059 ;; Tracked objects:
 16060 ;;		On entry : 3F/0
 16061 ;;		On exit  : 0/0
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16068 ;;Total ram usage:        0 bytes
 16069 ;; Hardware stack levels used:    1
 16070 ;; This function calls:
 16071 ;;		Nothing
 16072 ;; This function is called by:
 16073 ;;		_ADCC_Initialize
 16074 ;;		_ADCC_ISR
 16075 ;; This function uses a reentrant model
 16076 ;;
 16077                           
 16078                           	psect	text92
 16079  0064A4                     __ptext92:
 16080                           	opt callstack 0
 16081  0064A4                     _ADCC_DefaultInterruptHandler:
 16082                           	opt callstack 18
 16083                           
 16084                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16085                           
 16086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16087                           ;incstack = 0
 16088  0064A4  0012               	return		;funcret
 16089  0064A6                     __end_of_ADCC_DefaultInterruptHandler:
 16090                           	opt callstack 0
 16091                           
 16092 ;; *************** function _UART1_tx_vect_isr *****************
 16093 ;; Defined at:
 16094 ;;		line 197 in file "mcc_generated_files/uart1.c"
 16095 ;; Parameters:    Size  Location     Type
 16096 ;;		None
 16097 ;; Auto vars:     Size  Location     Type
 16098 ;;		None
 16099 ;; Return value:  Size  Location     Type
 16100 ;;                  1    wreg      void 
 16101 ;; Registers used:
 16102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16103 ;; Tracked objects:
 16104 ;;		On entry : 0/0
 16105 ;;		On exit  : 0/0
 16106 ;;		Unchanged: 0/0
 16107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16112 ;;Total ram usage:        0 bytes
 16113 ;; Hardware stack levels used:    1
 16114 ;; Hardware stack levels required when called:    1
 16115 ;; This function calls:
 16116 ;;		Absolute function
 16117 ;;		_UART1_Transmit_ISR
 16118 ;; This function is called by:
 16119 ;;		Interrupt level 2
 16120 ;; This function uses a non-reentrant model
 16121 ;;
 16122                           
 16123                           	psect	text93
 16124  006100                     __ptext93:
 16125                           	opt callstack 0
 16126  006100                     _UART1_tx_vect_isr:
 16127                           	opt callstack 18
 16128                           
 16129                           ;incstack = 0
 16130  006100  EE13  F154         	lfsr	1,___inthi_sp
 16131                           
 16132                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 16133  006104  5008               	movf	_UART1_TxInterruptHandler,w,c
 16134  006106  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 16135  006108  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 16136  00610A  B4D8               	btfsc	status,2,c
 16137  00610C  0011               	retfie		f
 16138                           
 16139                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 16140  00610E  D801               	call	i2u437_48
 16141  006110  0011               	retfie		f
 16142  006112                     i2u437_48:
 16143  006112  0005               	push	
 16144  006114  6EFA               	movwf	pclath,c
 16145  006116  5008               	movf	_UART1_TxInterruptHandler,w,c
 16146  006118  6EFD               	movwf	tosl,c
 16147  00611A  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 16148  00611C  6EFE               	movwf	tosh,c
 16149  00611E  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 16150  006120  6EFF               	movwf	tosu,c
 16151  006122  50FA               	movf	pclath,w,c
 16152  006124  0012               	return		;indir
 16153  006126                     __end_of_UART1_tx_vect_isr:
 16154                           	opt callstack 0
 16155                           
 16156 ;; *************** function _UART1_Transmit_ISR *****************
 16157 ;; Defined at:
 16158 ;;		line 211 in file "mcc_generated_files/uart1.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;		None
 16161 ;; Auto vars:     Size  Location     Type
 16162 ;;		None
 16163 ;; Return value:  Size  Location     Type
 16164 ;;                  1  [STACK] void 
 16165 ;; Registers used:
 16166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16167 ;; Tracked objects:
 16168 ;;		On entry : 0/0
 16169 ;;		On exit  : 3B/39
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16176 ;;Total ram usage:        0 bytes
 16177 ;; Hardware stack levels used:    1
 16178 ;; This function calls:
 16179 ;;		Nothing
 16180 ;; This function is called by:
 16181 ;;		_UART1_Initialize
 16182 ;;		_UART1_tx_vect_isr
 16183 ;; This function uses a reentrant model
 16184 ;;
 16185                           
 16186                           	psect	text94
 16187  005DF8                     __ptext94:
 16188                           	opt callstack 0
 16189  005DF8                     _UART1_Transmit_ISR:
 16190                           	opt callstack 18
 16191                           
 16192                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 16193                           
 16194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16195                           ;incstack = 0
 16196  005DF8  0E40               	movlw	64
 16197  005DFA  6036               	cpfslt	_uart1TxBufferRemaining,c
 16198  005DFC  D010               	goto	l597
 16199                           
 16200                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 16201  005DFE  0E80               	movlw	low _uart1TxBuffer
 16202  005E00  2437               	addwf	_uart1TxTail,w,c	;volatile
 16203  005E02  6ED9               	movwf	fsr2l,c
 16204  005E04  6ADA               	clrf	fsr2h,c
 16205  005E06  0E02               	movlw	high _uart1TxBuffer
 16206  005E08  22DA               	addwfc	fsr2h,f,c
 16207  005E0A  50DF               	movf	indf2,w,c
 16208  005E0C  013D               	movlb	61	; () banked
 16209  005E0E  6FEA               	movwf	234,b	;volatile
 16210                           
 16211                           ; BSR set to: 61
 16212  005E10  2A37               	incf	_uart1TxTail,f,c	;volatile
 16213                           
 16214                           ; BSR set to: 61
 16215                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 16216  005E12  0E3F               	movlw	63
 16217  005E14  6437               	cpfsgt	_uart1TxTail,c
 16218  005E16  D001               	goto	l6711
 16219                           
 16220                           ; BSR set to: 61
 16221                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 16222  005E18  6A37               	clrf	_uart1TxTail,c	;volatile
 16223  005E1A                     l6711:
 16224                           
 16225                           ; BSR set to: 61
 16226                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 16227  005E1A  2A36               	incf	_uart1TxBufferRemaining,f,c	;volatile
 16228                           
 16229                           ;mcc_generated_files/uart1.c: 220:  } else {
 16230  005E1C  0012               	return	
 16231  005E1E                     l597:
 16232                           
 16233                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 16234  005E1E  0139               	movlb	57	; () banked
 16235  005E20  9993               	bcf	147,4,b	;volatile
 16236                           
 16237                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16238  005E22  0012               	return		;funcret
 16239  005E24                     __end_of_UART1_Transmit_ISR:
 16240                           	opt callstack 0
 16241                           
 16242 ;; *************** function _UART1_rx_vect_isr *****************
 16243 ;; Defined at:
 16244 ;;		line 204 in file "mcc_generated_files/uart1.c"
 16245 ;; Parameters:    Size  Location     Type
 16246 ;;		None
 16247 ;; Auto vars:     Size  Location     Type
 16248 ;;		None
 16249 ;; Return value:  Size  Location     Type
 16250 ;;                  1    wreg      void 
 16251 ;; Registers used:
 16252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16253 ;; Tracked objects:
 16254 ;;		On entry : 0/0
 16255 ;;		On exit  : 0/0
 16256 ;;		Unchanged: 0/0
 16257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16262 ;;Total ram usage:        0 bytes
 16263 ;; Hardware stack levels used:    1
 16264 ;; Hardware stack levels required when called:    1
 16265 ;; This function calls:
 16266 ;;		Absolute function
 16267 ;;		_UART1_Receive_ISR
 16268 ;; This function is called by:
 16269 ;;		Interrupt level 2
 16270 ;; This function uses a non-reentrant model
 16271 ;;
 16272                           
 16273                           	psect	text95
 16274  006128                     __ptext95:
 16275                           	opt callstack 0
 16276  006128                     _UART1_rx_vect_isr:
 16277                           	opt callstack 18
 16278                           
 16279                           ;incstack = 0
 16280  006128  EE13  F154         	lfsr	1,___inthi_sp
 16281                           
 16282                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 16283  00612C  500B               	movf	_UART1_RxInterruptHandler,w,c
 16284  00612E  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 16285  006130  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 16286  006132  B4D8               	btfsc	status,2,c
 16287  006134  0011               	retfie		f
 16288                           
 16289                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 16290  006136  D801               	call	i2u439_48
 16291  006138  0011               	retfie		f
 16292  00613A                     i2u439_48:
 16293  00613A  0005               	push	
 16294  00613C  6EFA               	movwf	pclath,c
 16295  00613E  500B               	movf	_UART1_RxInterruptHandler,w,c
 16296  006140  6EFD               	movwf	tosl,c
 16297  006142  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 16298  006144  6EFE               	movwf	tosh,c
 16299  006146  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 16300  006148  6EFF               	movwf	tosu,c
 16301  00614A  50FA               	movf	pclath,w,c
 16302  00614C  0012               	return		;indir
 16303  00614E                     __end_of_UART1_rx_vect_isr:
 16304                           	opt callstack 0
 16305                           
 16306 ;; *************** function _UART1_Receive_ISR *****************
 16307 ;; Defined at:
 16308 ;;		line 227 in file "mcc_generated_files/uart1.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;		None
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;		None
 16313 ;; Return value:  Size  Location     Type
 16314 ;;                  1  [STACK] void 
 16315 ;; Registers used:
 16316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16317 ;; Tracked objects:
 16318 ;;		On entry : 0/0
 16319 ;;		On exit  : 0/0
 16320 ;;		Unchanged: 0/0
 16321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16326 ;;Total ram usage:        0 bytes
 16327 ;; Hardware stack levels used:    1
 16328 ;; This function calls:
 16329 ;;		Nothing
 16330 ;; This function is called by:
 16331 ;;		_UART1_Initialize
 16332 ;;		_UART1_rx_vect_isr
 16333 ;; This function uses a reentrant model
 16334 ;;
 16335                           
 16336                           	psect	text96
 16337  006290                     __ptext96:
 16338                           	opt callstack 0
 16339  006290                     _UART1_Receive_ISR:
 16340                           	opt callstack 18
 16341                           
 16342                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 16343                           
 16344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16345                           ;incstack = 0
 16346  006290  0E40               	movlw	low _uart1RxBuffer
 16347  006292  2435               	addwf	_uart1RxHead,w,c	;volatile
 16348  006294  6ED9               	movwf	fsr2l,c
 16349  006296  6ADA               	clrf	fsr2h,c
 16350  006298  0E02               	movlw	high _uart1RxBuffer
 16351  00629A  22DA               	addwfc	fsr2h,f,c
 16352  00629C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16353  0062A2  2A35               	incf	_uart1RxHead,f,c	;volatile
 16354                           
 16355                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 16356  0062A4  0E3F               	movlw	63
 16357  0062A6  6435               	cpfsgt	_uart1RxHead,c
 16358  0062A8  D001               	goto	l6721
 16359                           
 16360                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 16361  0062AA  6A35               	clrf	_uart1RxHead,c	;volatile
 16362  0062AC                     l6721:
 16363                           
 16364                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 16365  0062AC  2A33               	incf	_uart1RxCount,f,c	;volatile
 16366                           
 16367                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16368  0062AE  0012               	return		;funcret
 16369  0062B0                     __end_of_UART1_Receive_ISR:
 16370                           	opt callstack 0
 16371                           
 16372 ;; *************** function _UART2_tx_vect_isr *****************
 16373 ;; Defined at:
 16374 ;;		line 195 in file "mcc_generated_files/uart2.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;		None
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      void 
 16381 ;; Registers used:
 16382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16392 ;;Total ram usage:        0 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:    1
 16395 ;; This function calls:
 16396 ;;		Absolute function
 16397 ;;		_UART2_Transmit_ISR
 16398 ;; This function is called by:
 16399 ;;		Interrupt level 2
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           	psect	text97
 16404  006150                     __ptext97:
 16405                           	opt callstack 0
 16406  006150                     _UART2_tx_vect_isr:
 16407                           	opt callstack 18
 16408                           
 16409                           ;incstack = 0
 16410  006150  EE13  F154         	lfsr	1,___inthi_sp
 16411                           
 16412                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 16413  006154  500E               	movf	_UART2_TxInterruptHandler,w,c
 16414  006156  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 16415  006158  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 16416  00615A  B4D8               	btfsc	status,2,c
 16417  00615C  0011               	retfie		f
 16418                           
 16419                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 16420  00615E  D801               	call	i2u441_48
 16421  006160  0011               	retfie		f
 16422  006162                     i2u441_48:
 16423  006162  0005               	push	
 16424  006164  6EFA               	movwf	pclath,c
 16425  006166  500E               	movf	_UART2_TxInterruptHandler,w,c
 16426  006168  6EFD               	movwf	tosl,c
 16427  00616A  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 16428  00616C  6EFE               	movwf	tosh,c
 16429  00616E  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 16430  006170  6EFF               	movwf	tosu,c
 16431  006172  50FA               	movf	pclath,w,c
 16432  006174  0012               	return		;indir
 16433  006176                     __end_of_UART2_tx_vect_isr:
 16434                           	opt callstack 0
 16435                           
 16436 ;; *************** function _UART2_Transmit_ISR *****************
 16437 ;; Defined at:
 16438 ;;		line 213 in file "mcc_generated_files/uart2.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;		None
 16441 ;; Auto vars:     Size  Location     Type
 16442 ;;		None
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1  [STACK] void 
 16445 ;; Registers used:
 16446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 3B/39
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16456 ;;Total ram usage:        0 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; This function calls:
 16459 ;;		Nothing
 16460 ;; This function is called by:
 16461 ;;		_UART2_Initialize
 16462 ;;		_UART2_tx_vect_isr
 16463 ;; This function uses a reentrant model
 16464 ;;
 16465                           
 16466                           	psect	text98
 16467  005E24                     __ptext98:
 16468                           	opt callstack 0
 16469  005E24                     _UART2_Transmit_ISR:
 16470                           	opt callstack 18
 16471                           
 16472                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 16473                           
 16474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16475                           ;incstack = 0
 16476  005E24  0E40               	movlw	64
 16477  005E26  6030               	cpfslt	_uart2TxBufferRemaining,c
 16478  005E28  D010               	goto	l717
 16479                           
 16480                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 16481  005E2A  0E00               	movlw	low _uart2TxBuffer
 16482  005E2C  2431               	addwf	_uart2TxTail,w,c	;volatile
 16483  005E2E  6ED9               	movwf	fsr2l,c
 16484  005E30  6ADA               	clrf	fsr2h,c
 16485  005E32  0E03               	movlw	high _uart2TxBuffer
 16486  005E34  22DA               	addwfc	fsr2h,f,c
 16487  005E36  50DF               	movf	indf2,w,c
 16488  005E38  013D               	movlb	61	; () banked
 16489  005E3A  6FD2               	movwf	210,b	;volatile
 16490                           
 16491                           ; BSR set to: 61
 16492  005E3C  2A31               	incf	_uart2TxTail,f,c	;volatile
 16493                           
 16494                           ; BSR set to: 61
 16495                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 16496  005E3E  0E3F               	movlw	63
 16497  005E40  6431               	cpfsgt	_uart2TxTail,c
 16498  005E42  D001               	goto	l6733
 16499                           
 16500                           ; BSR set to: 61
 16501                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 16502  005E44  6A31               	clrf	_uart2TxTail,c	;volatile
 16503  005E46                     l6733:
 16504                           
 16505                           ; BSR set to: 61
 16506                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 16507  005E46  2A30               	incf	_uart2TxBufferRemaining,f,c	;volatile
 16508                           
 16509                           ;mcc_generated_files/uart2.c: 224:     }
 16510  005E48  0012               	return	
 16511  005E4A                     l717:
 16512                           
 16513                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 16514  005E4A  0139               	movlb	57	; () banked
 16515  005E4C  9796               	bcf	150,3,b	;volatile
 16516                           
 16517                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16518  005E4E  0012               	return		;funcret
 16519  005E50                     __end_of_UART2_Transmit_ISR:
 16520                           	opt callstack 0
 16521                           
 16522 ;; *************** function _UART2_rx_vect_isr *****************
 16523 ;; Defined at:
 16524 ;;		line 203 in file "mcc_generated_files/uart2.c"
 16525 ;; Parameters:    Size  Location     Type
 16526 ;;		None
 16527 ;; Auto vars:     Size  Location     Type
 16528 ;;		None
 16529 ;; Return value:  Size  Location     Type
 16530 ;;                  1    wreg      void 
 16531 ;; Registers used:
 16532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16533 ;; Tracked objects:
 16534 ;;		On entry : 0/0
 16535 ;;		On exit  : 0/0
 16536 ;;		Unchanged: 0/0
 16537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16542 ;;Total ram usage:        0 bytes
 16543 ;; Hardware stack levels used:    1
 16544 ;; Hardware stack levels required when called:    1
 16545 ;; This function calls:
 16546 ;;		Absolute function
 16547 ;;		_UART2_Receive_ISR
 16548 ;; This function is called by:
 16549 ;;		Interrupt level 2
 16550 ;; This function uses a non-reentrant model
 16551 ;;
 16552                           
 16553                           	psect	text99
 16554  006178                     __ptext99:
 16555                           	opt callstack 0
 16556  006178                     _UART2_rx_vect_isr:
 16557                           	opt callstack 18
 16558                           
 16559                           ;incstack = 0
 16560  006178  EE13  F154         	lfsr	1,___inthi_sp
 16561                           
 16562                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 16563  00617C  5011               	movf	_UART2_RxInterruptHandler,w,c
 16564  00617E  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 16565  006180  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 16566  006182  B4D8               	btfsc	status,2,c
 16567  006184  0011               	retfie		f
 16568                           
 16569                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 16570  006186  D801               	call	i2u443_48
 16571  006188  0011               	retfie		f
 16572  00618A                     i2u443_48:
 16573  00618A  0005               	push	
 16574  00618C  6EFA               	movwf	pclath,c
 16575  00618E  5011               	movf	_UART2_RxInterruptHandler,w,c
 16576  006190  6EFD               	movwf	tosl,c
 16577  006192  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 16578  006194  6EFE               	movwf	tosh,c
 16579  006196  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 16580  006198  6EFF               	movwf	tosu,c
 16581  00619A  50FA               	movf	pclath,w,c
 16582  00619C  0012               	return		;indir
 16583  00619E                     __end_of_UART2_rx_vect_isr:
 16584                           	opt callstack 0
 16585                           
 16586 ;; *************** function _UART2_Receive_ISR *****************
 16587 ;; Defined at:
 16588 ;;		line 233 in file "mcc_generated_files/uart2.c"
 16589 ;; Parameters:    Size  Location     Type
 16590 ;;		None
 16591 ;; Auto vars:     Size  Location     Type
 16592 ;;		None
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  1  [STACK] void 
 16595 ;; Registers used:
 16596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16597 ;; Tracked objects:
 16598 ;;		On entry : 0/0
 16599 ;;		On exit  : 0/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16606 ;;Total ram usage:        0 bytes
 16607 ;; Hardware stack levels used:    1
 16608 ;; This function calls:
 16609 ;;		Nothing
 16610 ;; This function is called by:
 16611 ;;		_UART2_Initialize
 16612 ;;		_UART2_rx_vect_isr
 16613 ;; This function uses a reentrant model
 16614 ;;
 16615                           
 16616                           	psect	text100
 16617  0062B0                     __ptext100:
 16618                           	opt callstack 0
 16619  0062B0                     _UART2_Receive_ISR:
 16620                           	opt callstack 18
 16621                           
 16622                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16623                           
 16624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16625                           ;incstack = 0
 16626  0062B0  0E00               	movlw	low _uart2RxBuffer
 16627  0062B2  242F               	addwf	_uart2RxHead,w,c	;volatile
 16628  0062B4  6ED9               	movwf	fsr2l,c
 16629  0062B6  6ADA               	clrf	fsr2h,c
 16630  0062B8  0E02               	movlw	high _uart2RxBuffer
 16631  0062BA  22DA               	addwfc	fsr2h,f,c
 16632  0062BC  006F F743 FFDF     	movff	15824,indf2	;volatile
 16633  0062C2  2A2F               	incf	_uart2RxHead,f,c	;volatile
 16634                           
 16635                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16636  0062C4  0E3F               	movlw	63
 16637  0062C6  642F               	cpfsgt	_uart2RxHead,c
 16638  0062C8  D001               	goto	l6743
 16639                           
 16640                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16641  0062CA  6A2F               	clrf	_uart2RxHead,c	;volatile
 16642  0062CC                     l6743:
 16643                           
 16644                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16645  0062CC  2A2D               	incf	_uart2RxCount,f,c	;volatile
 16646                           
 16647                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16648  0062CE  0012               	return		;funcret
 16649  0062D0                     __end_of_UART2_Receive_ISR:
 16650                           	opt callstack 0
 16651                           
 16652 ;; *************** function _TMR6_ISR *****************
 16653 ;; Defined at:
 16654 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;		None
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;		None
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  1    wreg      void 
 16661 ;; Registers used:
 16662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16672 ;;Total ram usage:        1 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:    2
 16675 ;; This function calls:
 16676 ;;		_TMR6_CallBack
 16677 ;; This function is called by:
 16678 ;;		Interrupt level 2
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           	psect	text101
 16683  00637C                     __ptext101:
 16684                           	opt callstack 0
 16685  00637C                     _TMR6_ISR:
 16686                           	opt callstack 17
 16687                           
 16688                           ;incstack = 0
 16689  00637C  0060  F0E4  F059   	movff	btemp,??_TMR6_ISR
 16690  006382  EE13  F154         	lfsr	1,___inthi_sp
 16691                           
 16692                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16693  006386  0139               	movlb	57	; () banked
 16694  006388  91A9               	bcf	169,0,b	;volatile
 16695                           
 16696                           ; BSR set to: 57
 16697                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16698  00638A  ECCF  F030         	call	_TMR6_CallBack	;wreg free
 16699  00638E  0060  F164  F039   	movff	??_TMR6_ISR,btemp
 16700  006394  0011               	retfie		f
 16701  006396                     __end_of_TMR6_ISR:
 16702                           	opt callstack 0
 16703                           
 16704 ;; *************** function _TMR6_CallBack *****************
 16705 ;; Defined at:
 16706 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;		None
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1  [STACK] void 
 16713 ;; Registers used:
 16714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16715 ;; Tracked objects:
 16716 ;;		On entry : 3F/39
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16724 ;;Total ram usage:        0 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    1
 16727 ;; This function calls:
 16728 ;;		Absolute function
 16729 ;;		_TMR6_DefaultInterruptHandler
 16730 ;; This function is called by:
 16731 ;;		_TMR6_ISR
 16732 ;; This function uses a reentrant model
 16733 ;;
 16734                           
 16735                           	psect	text102
 16736  00619E                     __ptext102:
 16737                           	opt callstack 0
 16738  00619E                     _TMR6_CallBack:
 16739                           	opt callstack 17
 16740                           
 16741                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16742                           
 16743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16744                           ;incstack = 0
 16745  00619E  0100               	movlb	0	; () banked
 16746  0061A0  51F1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16747  0061A2  11F2               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16748  0061A4  11F3               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16749  0061A6  B4D8               	btfsc	status,2,c
 16750  0061A8  0012               	return	
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16754  0061AA  D801               	call	u367_48
 16755  0061AC  0012               	return	
 16756  0061AE                     u367_48:
 16757  0061AE  0005               	push	
 16758  0061B0  6EFA               	movwf	pclath,c
 16759  0061B2  51F1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16760  0061B4  6EFD               	movwf	tosl,c
 16761  0061B6  51F2               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16762  0061B8  6EFE               	movwf	tosh,c
 16763  0061BA  51F3               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16764  0061BC  6EFF               	movwf	tosu,c
 16765  0061BE  50FA               	movf	pclath,w,c
 16766  0061C0  0012               	return		;indir
 16767  0061C2                     __end_of_TMR6_CallBack:
 16768                           	opt callstack 0
 16769                           
 16770 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16771 ;; Defined at:
 16772 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;		None
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;  i               1  [STACK] unsigned char 
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1  [STACK] void 
 16779 ;; Registers used:
 16780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16781 ;; Tracked objects:
 16782 ;;		On entry : 3F/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16790 ;;Total ram usage:        0 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; This function calls:
 16793 ;;		Nothing
 16794 ;; This function is called by:
 16795 ;;		_TMR6_Initialize
 16796 ;;		_TMR6_CallBack
 16797 ;; This function uses a reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text103
 16801  005B40                     __ptext103:
 16802                           	opt callstack 0
 16803  005B40                     _TMR6_DefaultInterruptHandler:
 16804                           	opt callstack 0
 16805                           
 16806                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16807  005B40  52E6               	movf	postinc1,f,c
 16808                           
 16809                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16810                           ;stkvar	_i @ sp[(-1)+0]
 16811                           
 16812                           ;incstack = 0
 16813  005B42  0EFF               	movlw	-1
 16814  005B44  6AE3               	clrf	plusw1,c
 16815  005B46                     l6275:
 16816                           
 16817                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16818                           ;stkvar	_i @ sp[(-1)+0]
 16819  005B46  0EFF               	movlw	-1
 16820  005B48  50E3               	movf	plusw1,w,c
 16821  005B4A  0D02               	mullw	2
 16822  005B4C  50F3               	movf	prodl,w,c
 16823  005B4E  0FD7               	addlw	low _tickCount
 16824  005B50  6ED9               	movwf	fsr2l,c
 16825  005B52  6ADA               	clrf	fsr2h,c
 16826  005B54  50DE               	movf	postinc2,w,c
 16827  005B56  10DE               	iorwf	postinc2,w,c
 16828  005B58  B4D8               	btfsc	status,2,c
 16829  005B5A  D00A               	goto	l6279
 16830                           
 16831                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16832                           ;stkvar	_i @ sp[(-1)+0]
 16833  005B5C  0EFF               	movlw	-1
 16834  005B5E  50E3               	movf	plusw1,w,c
 16835  005B60  0D02               	mullw	2
 16836  005B62  50F3               	movf	prodl,w,c
 16837  005B64  0FD7               	addlw	low _tickCount
 16838  005B66  6ED9               	movwf	fsr2l,c
 16839  005B68  6ADA               	clrf	fsr2h,c
 16840  005B6A  06DE               	decf	postinc2,f,c
 16841  005B6C  0E00               	movlw	0
 16842  005B6E  5ADD               	subwfb	postdec2,f,c
 16843  005B70                     l6279:
 16844                           
 16845                           ;mcc_generated_files/tmr6.c: 207:  }
 16846                           ;stkvar	_i @ sp[(-1)+0]
 16847  005B70  0EFF               	movlw	-1
 16848  005B72  2AE3               	incf	plusw1,f,c
 16849                           
 16850                           ;stkvar	_i @ sp[(-1)+0]
 16851  005B74  0EFF               	movlw	-1
 16852  005B76  006F FF8C  F039    	movff	plusw1,btemp
 16853  005B7C  0E05               	movlw	5
 16854  005B7E  6439               	cpfsgt	btemp,c
 16855  005B80  D7E2               	goto	l6275
 16856                           
 16857                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16858  005B82  52E5               	movf	postdec1,f,c
 16859  005B84  0012               	return		;funcret
 16860  005B86                     __end_of_TMR6_DefaultInterruptHandler:
 16861                           	opt callstack 0
 16862                           
 16863 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16864 ;; Defined at:
 16865 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16866 ;; Parameters:    Size  Location     Type
 16867 ;;		None
 16868 ;; Auto vars:     Size  Location     Type
 16869 ;;		None
 16870 ;; Return value:  Size  Location     Type
 16871 ;;                  1    wreg      void 
 16872 ;; Registers used:
 16873 ;;		None
 16874 ;; Tracked objects:
 16875 ;;		On entry : 0/0
 16876 ;;		On exit  : 3F/0
 16877 ;;		Unchanged: 0/0
 16878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16883 ;;Total ram usage:        0 bytes
 16884 ;; Hardware stack levels used:    1
 16885 ;; This function calls:
 16886 ;;		Nothing
 16887 ;; This function is called by:
 16888 ;;		Interrupt level 2
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892                           	psect	text104
 16893  006430                     __ptext104:
 16894                           	opt callstack 0
 16895  006430                     _DMA1_DMASCNT_ISR:
 16896                           	opt callstack 19
 16897                           
 16898                           ;incstack = 0
 16899  006430  EE13  F154         	lfsr	1,___inthi_sp
 16900                           
 16901                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16902  006434  0139               	movlb	57	; () banked
 16903  006436  91A2               	bcf	162,0,b	;volatile
 16904                           
 16905                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16906  006438  0100               	movlb	0	; () banked
 16907  00643A  97CB               	bcf	_spi_link& (0+255),3,b	;volatile
 16908                           
 16909                           ; BSR set to: 0
 16910  00643C  0011               	retfie		f
 16911  00643E                     __end_of_DMA1_DMASCNT_ISR:
 16912                           	opt callstack 0
 16913                           
 16914 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16915 ;; Defined at:
 16916 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16917 ;; Parameters:    Size  Location     Type
 16918 ;;		None
 16919 ;; Auto vars:     Size  Location     Type
 16920 ;;		None
 16921 ;; Return value:  Size  Location     Type
 16922 ;;                  1    wreg      void 
 16923 ;; Registers used:
 16924 ;;		None
 16925 ;; Tracked objects:
 16926 ;;		On entry : 0/0
 16927 ;;		On exit  : 3F/39
 16928 ;;		Unchanged: 0/0
 16929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16934 ;;Total ram usage:        0 bytes
 16935 ;; Hardware stack levels used:    1
 16936 ;; This function calls:
 16937 ;;		Nothing
 16938 ;; This function is called by:
 16939 ;;		Interrupt level 2
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text105
 16944  006448                     __ptext105:
 16945                           	opt callstack 0
 16946  006448                     _DMA1_DMADCNT_ISR:
 16947                           	opt callstack 19
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;incstack = 0
 16951  006448  EE13  F154         	lfsr	1,___inthi_sp
 16952                           
 16953                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16954  00644C  0139               	movlb	57	; () banked
 16955  00644E  93A2               	bcf	162,1,b	;volatile
 16956                           
 16957                           ; BSR set to: 57
 16958  006450  0011               	retfie		f
 16959  006452                     __end_of_DMA1_DMADCNT_ISR:
 16960                           	opt callstack 0
 16961                           
 16962 ;; *************** function _DMA1_DMAA_ISR *****************
 16963 ;; Defined at:
 16964 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16965 ;; Parameters:    Size  Location     Type
 16966 ;;		None
 16967 ;; Auto vars:     Size  Location     Type
 16968 ;;		None
 16969 ;; Return value:  Size  Location     Type
 16970 ;;                  1    wreg      void 
 16971 ;; Registers used:
 16972 ;;		None
 16973 ;; Tracked objects:
 16974 ;;		On entry : 0/0
 16975 ;;		On exit  : 3F/39
 16976 ;;		Unchanged: 0/0
 16977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16982 ;;Total ram usage:        0 bytes
 16983 ;; Hardware stack levels used:    1
 16984 ;; This function calls:
 16985 ;;		Nothing
 16986 ;; This function is called by:
 16987 ;;		Interrupt level 2
 16988 ;; This function uses a non-reentrant model
 16989 ;;
 16990                           
 16991                           	psect	text106
 16992  006454                     __ptext106:
 16993                           	opt callstack 0
 16994  006454                     _DMA1_DMAA_ISR:
 16995                           	opt callstack 19
 16996                           
 16997                           ; BSR set to: 57
 16998                           ;incstack = 0
 16999  006454  EE13  F154         	lfsr	1,___inthi_sp
 17000                           
 17001                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 17002  006458  0139               	movlb	57	; () banked
 17003  00645A  97A2               	bcf	162,3,b	;volatile
 17004                           
 17005                           ; BSR set to: 57
 17006  00645C  0011               	retfie		f
 17007  00645E                     __end_of_DMA1_DMAA_ISR:
 17008                           	opt callstack 0
 17009                           
 17010 ;; *************** function _DMA1_DMAOR_ISR *****************
 17011 ;; Defined at:
 17012 ;;		line 154 in file "mcc_generated_files/dma1.c"
 17013 ;; Parameters:    Size  Location     Type
 17014 ;;		None
 17015 ;; Auto vars:     Size  Location     Type
 17016 ;;		None
 17017 ;; Return value:  Size  Location     Type
 17018 ;;                  1    wreg      void 
 17019 ;; Registers used:
 17020 ;;		None
 17021 ;; Tracked objects:
 17022 ;;		On entry : 0/0
 17023 ;;		On exit  : 3F/39
 17024 ;;		Unchanged: 0/0
 17025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17030 ;;Total ram usage:        0 bytes
 17031 ;; Hardware stack levels used:    1
 17032 ;; This function calls:
 17033 ;;		Nothing
 17034 ;; This function is called by:
 17035 ;;		Interrupt level 2
 17036 ;; This function uses a non-reentrant model
 17037 ;;
 17038                           
 17039                           	psect	text107
 17040  006460                     __ptext107:
 17041                           	opt callstack 0
 17042  006460                     _DMA1_DMAOR_ISR:
 17043                           	opt callstack 19
 17044                           
 17045                           ; BSR set to: 57
 17046                           ;incstack = 0
 17047  006460  EE13  F154         	lfsr	1,___inthi_sp
 17048                           
 17049                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 17050  006464  0139               	movlb	57	; () banked
 17051  006466  95A2               	bcf	162,2,b	;volatile
 17052                           
 17053                           ; BSR set to: 57
 17054  006468  0011               	retfie		f
 17055  00646A                     __end_of_DMA1_DMAOR_ISR:
 17056                           	opt callstack 0
 17057                           
 17058 ;; *************** function _TMR5_ISR *****************
 17059 ;; Defined at:
 17060 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17061 ;; Parameters:    Size  Location     Type
 17062 ;;		None
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;		None
 17065 ;; Return value:  Size  Location     Type
 17066 ;;                  1    wreg      void 
 17067 ;; Registers used:
 17068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17076 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17078 ;;Total ram usage:        3 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; Hardware stack levels required when called:    2
 17081 ;; This function calls:
 17082 ;;		_TMR5_CallBack
 17083 ;;		_TMR5_WriteTimer
 17084 ;; This function is called by:
 17085 ;;		Interrupt level 2
 17086 ;; This function uses a non-reentrant model
 17087 ;;
 17088                           
 17089                           	psect	text108
 17090  0059D0                     __ptext108:
 17091                           	opt callstack 0
 17092  0059D0                     _TMR5_ISR:
 17093                           	opt callstack 17
 17094                           
 17095                           ; BSR set to: 57
 17096                           ;incstack = 0
 17097  0059D0  0060  F110  F05C   	movff	btemp+11,??_TMR5_ISR+2
 17098  0059D6  EE13  F154         	lfsr	1,___inthi_sp
 17099                           
 17100                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 17101  0059DA  0139               	movlb	57	; () banked
 17102  0059DC  9DA8               	bcf	168,6,b	;volatile
 17103                           
 17104                           ; BSR set to: 57
 17105                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 17106  0059DE  0060  F097  FFE6   	movff	_timer5ReloadVal,postinc1
 17107  0059E4  0060  F09B  FFE6   	movff	_timer5ReloadVal+1,postinc1
 17108  0059EA  ECE4  F02D         	call	_TMR5_WriteTimer	;wreg free
 17109                           
 17110                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 17111  0059EE  0100               	movlb	0	; () banked
 17112  0059F0  51BD               	movf	(_V+93)& (0+255),w,b	;volatile
 17113  0059F2  6E5A               	movwf	??_TMR5_ISR& (0+255),c
 17114  0059F4  6A5B               	clrf	(??_TMR5_ISR+1)& (0+255),c
 17115  0059F6  0E05               	movlw	5
 17116  0059F8  265A               	addwf	??_TMR5_ISR,f,c
 17117  0059FA  0E00               	movlw	0
 17118  0059FC  225B               	addwfc	??_TMR5_ISR+1,f,c
 17119  0059FE  4A23               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 17120  005A00  2A24               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 17121  005A02  505A               	movf	??_TMR5_ISR,w,c
 17122  005A04  5C23               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 17123  005A06  505B               	movf	??_TMR5_ISR+1,w,c
 17124  005A08  5824               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 17125  005A0A  A0D8               	btfss	status,0,c
 17126  005A0C  D004               	goto	i2l1141
 17127                           
 17128                           ; BSR set to: 0
 17129                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 17130  005A0E  ECE1  F030         	call	_TMR5_CallBack	;wreg free
 17131                           
 17132                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 17133  005A12  6A23               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 17134  005A14  6A24               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 17135  005A16                     i2l1141:
 17136  005A16  0060  F170  F044   	movff	??_TMR5_ISR+2,btemp+11
 17137  005A1C  0011               	retfie		f
 17138  005A1E                     __end_of_TMR5_ISR:
 17139                           	opt callstack 0
 17140                           
 17141 ;; *************** function _TMR5_WriteTimer *****************
 17142 ;; Defined at:
 17143 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 17144 ;; Parameters:    Size  Location     Type
 17145 ;;  timerVal        2  [STACK] unsigned short 
 17146 ;; Auto vars:     Size  Location     Type
 17147 ;;		None
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  1  [STACK] void 
 17150 ;; Registers used:
 17151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17152 ;; Tracked objects:
 17153 ;;		On entry : 3F/39
 17154 ;;		On exit  : 0/0
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17161 ;;Total ram usage:        0 bytes
 17162 ;; Hardware stack levels used:    1
 17163 ;; This function calls:
 17164 ;;		Nothing
 17165 ;; This function is called by:
 17166 ;;		_TMR5_ISR
 17167 ;; This function uses a reentrant model
 17168 ;;
 17169                           
 17170                           	psect	text109
 17171  005BC8                     __ptext109:
 17172                           	opt callstack 0
 17173  005BC8                     _TMR5_WriteTimer:
 17174                           	opt callstack 18
 17175                           
 17176                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 17177                           
 17178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17179                           ;incstack = 0
 17180  005BC8  A49A               	btfss	16282,2,c	;volatile
 17181  005BCA  D00F               	goto	l6759
 17182                           
 17183                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 17184  005BCC  909A               	bcf	16282,0,c	;volatile
 17185                           
 17186                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 17187                           ;stkvar	_timerVal @ sp[(0)+-2]
 17188  005BCE  0EFF               	movlw	255
 17189  005BD0  24E1               	addwf	fsr1l,w,c
 17190  005BD2  6ED9               	movwf	fsr2l,c
 17191  005BD4  0EFF               	movlw	255
 17192  005BD6  20E2               	addwfc	fsr1h,w,c
 17193  005BD8  6EDA               	movwf	fsr2h,c
 17194  005BDA  50DF               	movf	indf2,w,c
 17195  005BDC  6E99               	movwf	16281,c	;volatile
 17196                           
 17197                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 17198                           ;stkvar	_timerVal @ sp[(0)+-2]
 17199  005BDE  0EFE               	movlw	-2
 17200  005BE0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17201                           
 17202                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 17203  005BE6  809A               	bsf	16282,0,c	;volatile
 17204                           
 17205                           ;mcc_generated_files/tmr5.c: 142:  } else {
 17206  005BE8  D00C               	goto	l1124
 17207  005BEA                     l6759:
 17208                           
 17209                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 17210                           ;stkvar	_timerVal @ sp[(0)+-2]
 17211  005BEA  0EFF               	movlw	255
 17212  005BEC  24E1               	addwf	fsr1l,w,c
 17213  005BEE  6ED9               	movwf	fsr2l,c
 17214  005BF0  0EFF               	movlw	255
 17215  005BF2  20E2               	addwfc	fsr1h,w,c
 17216  005BF4  6EDA               	movwf	fsr2h,c
 17217  005BF6  50DF               	movf	indf2,w,c
 17218  005BF8  6E99               	movwf	16281,c	;volatile
 17219                           
 17220                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 17221                           ;stkvar	_timerVal @ sp[(0)+-2]
 17222  005BFA  0EFE               	movlw	-2
 17223  005BFC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17224  005C02                     l1124:
 17225                           
 17226                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 17227  005C02  52E5               	movf	postdec1,f,c
 17228  005C04  52E5               	movf	postdec1,f,c
 17229  005C06  0012               	return		;funcret
 17230  005C08                     __end_of_TMR5_WriteTimer:
 17231                           	opt callstack 0
 17232                           
 17233 ;; *************** function _TMR5_CallBack *****************
 17234 ;; Defined at:
 17235 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17236 ;; Parameters:    Size  Location     Type
 17237 ;;		None
 17238 ;; Auto vars:     Size  Location     Type
 17239 ;;		None
 17240 ;; Return value:  Size  Location     Type
 17241 ;;                  1  [STACK] void 
 17242 ;; Registers used:
 17243 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 17244 ;; Tracked objects:
 17245 ;;		On entry : 3F/0
 17246 ;;		On exit  : 0/0
 17247 ;;		Unchanged: 0/0
 17248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17253 ;;Total ram usage:        0 bytes
 17254 ;; Hardware stack levels used:    1
 17255 ;; Hardware stack levels required when called:    1
 17256 ;; This function calls:
 17257 ;;		Absolute function
 17258 ;;		_TMR5_DefaultInterruptHandler
 17259 ;; This function is called by:
 17260 ;;		_TMR5_ISR
 17261 ;; This function uses a reentrant model
 17262 ;;
 17263                           
 17264                           	psect	text110
 17265  0061C2                     __ptext110:
 17266                           	opt callstack 0
 17267  0061C2                     _TMR5_CallBack:
 17268                           	opt callstack 17
 17269                           
 17270                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 17271                           
 17272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17273                           ;incstack = 0
 17274  0061C2  0100               	movlb	0	; () banked
 17275  0061C4  51EE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17276  0061C6  11EF               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17277  0061C8  11F0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17278  0061CA  B4D8               	btfsc	status,2,c
 17279  0061CC  0012               	return	
 17280                           
 17281                           ; BSR set to: 0
 17282                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 17283  0061CE  D801               	call	u370_48
 17284  0061D0  0012               	return	
 17285  0061D2                     u370_48:
 17286  0061D2  0005               	push	
 17287  0061D4  6EFA               	movwf	pclath,c
 17288  0061D6  51EE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17289  0061D8  6EFD               	movwf	tosl,c
 17290  0061DA  51EF               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17291  0061DC  6EFE               	movwf	tosh,c
 17292  0061DE  51F0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17293  0061E0  6EFF               	movwf	tosu,c
 17294  0061E2  50FA               	movf	pclath,w,c
 17295  0061E4  0012               	return		;indir
 17296  0061E6                     __end_of_TMR5_CallBack:
 17297                           	opt callstack 0
 17298                           
 17299 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17300 ;; Defined at:
 17301 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 17302 ;; Parameters:    Size  Location     Type
 17303 ;;		None
 17304 ;; Auto vars:     Size  Location     Type
 17305 ;;		None
 17306 ;; Return value:  Size  Location     Type
 17307 ;;                  1  [STACK] void 
 17308 ;; Registers used:
 17309 ;;		wreg, status,2, status,0, btemp+11
 17310 ;; Tracked objects:
 17311 ;;		On entry : 3F/0
 17312 ;;		On exit  : 0/0
 17313 ;;		Unchanged: 0/0
 17314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17319 ;;Total ram usage:        0 bytes
 17320 ;; Hardware stack levels used:    1
 17321 ;; This function calls:
 17322 ;;		Nothing
 17323 ;; This function is called by:
 17324 ;;		_TMR5_Initialize
 17325 ;;		_TMR5_CallBack
 17326 ;; This function uses a reentrant model
 17327 ;;
 17328                           
 17329                           	psect	text111
 17330  006396                     __ptext111:
 17331                           	opt callstack 0
 17332  006396                     _TMR5_DefaultInterruptHandler:
 17333                           	opt callstack 17
 17334                           
 17335                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 17336                           
 17337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17338                           ;incstack = 0
 17339  006396  A0BE               	btfss	16318,0,c	;volatile
 17340  006398  D002               	goto	u344_40
 17341  00639A  0E01               	movlw	1
 17342  00639C  D001               	goto	u344_46
 17343  00639E                     u344_40:
 17344  00639E  0E00               	movlw	0
 17345  0063A0                     u344_46:
 17346  0063A0  0AFF               	xorlw	255
 17347  0063A2  6E44               	movwf	btemp+11,c
 17348  0063A4  50BE               	movf	16318,w,c	;volatile
 17349  0063A6  1844               	xorwf	btemp+11,w,c
 17350  0063A8  0BFE               	andlw	-2
 17351  0063AA  1844               	xorwf	btemp+11,w,c
 17352  0063AC  6EBE               	movwf	16318,c	;volatile
 17353                           
 17354                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17355  0063AE  0012               	return		;funcret
 17356  0063B0                     __end_of_TMR5_DefaultInterruptHandler:
 17357                           	opt callstack 0
 17358                           
 17359                           ;
 17360                           ; Interrupt Vector Table @ 0x8
 17361                           ;
 17362                           
 17363                           	psect	ivt0x8
 17364  000008                     __pivt0x8:
 17365                           	opt callstack 0
 17366  000008                     ivt0x8_base:
 17367                           	opt callstack 0
 17368                           
 17369                           ; Vector 0 : SWINT
 17370  000008  1926               	dw	_Default_ISR shr (0+2)
 17371                           
 17372                           ; Vector 1 : HLVD
 17373  00000A  1926               	dw	_Default_ISR shr (0+2)
 17374                           
 17375                           ; Vector 2 : OSF
 17376  00000C  1926               	dw	_Default_ISR shr (0+2)
 17377                           
 17378                           ; Vector 3 : CSW
 17379  00000E  1926               	dw	_Default_ISR shr (0+2)
 17380                           
 17381                           ; Vector 4 : NVM
 17382  000010  1926               	dw	_Default_ISR shr (0+2)
 17383                           
 17384                           ; Vector 5 : SCAN
 17385  000012  1926               	dw	_Default_ISR shr (0+2)
 17386                           
 17387                           ; Vector 6 : CRC
 17388  000014  1926               	dw	_Default_ISR shr (0+2)
 17389                           
 17390                           ; Vector 7 : IOC
 17391  000016  1926               	dw	_Default_ISR shr (0+2)
 17392                           
 17393                           ; Vector 8 : INT0
 17394  000018  1900               	dw	_INT0_ISR shr (0+2)
 17395                           
 17396                           ; Vector 9 : ZCD
 17397  00001A  1926               	dw	_Default_ISR shr (0+2)
 17398                           
 17399                           ; Vector 10 : AD
 17400  00001C  1773               	dw	_ADCC_ISR shr (0+2)
 17401                           
 17402                           ; Vector 11 : ADT
 17403  00001E  1926               	dw	_Default_ISR shr (0+2)
 17404                           
 17405                           ; Vector 12 : CMP1
 17406  000020  1926               	dw	_Default_ISR shr (0+2)
 17407                           
 17408                           ; Vector 13 : SMT1
 17409  000022  1926               	dw	_Default_ISR shr (0+2)
 17410                           
 17411                           ; Vector 14 : SMT1PRA
 17412  000024  1926               	dw	_Default_ISR shr (0+2)
 17413                           
 17414                           ; Vector 15 : SMT1PRW
 17415  000026  1926               	dw	_Default_ISR shr (0+2)
 17416                           
 17417                           ; Vector 16 : DMA1SCNT
 17418  000028  190C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 17419                           
 17420                           ; Vector 17 : DMA1DCNT
 17421  00002A  1912               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 17422                           
 17423                           ; Vector 18 : DMA1OR
 17424  00002C  1918               	dw	_DMA1_DMAOR_ISR shr (0+2)
 17425                           
 17426                           ; Vector 19 : DMA1A
 17427  00002E  1915               	dw	_DMA1_DMAA_ISR shr (0+2)
 17428                           
 17429                           ; Vector 20 : SPI1RX
 17430  000030  1926               	dw	_Default_ISR shr (0+2)
 17431                           
 17432                           ; Vector 21 : SPI1TX
 17433  000032  1926               	dw	_Default_ISR shr (0+2)
 17434                           
 17435                           ; Vector 22 : SPI1
 17436  000034  1926               	dw	_Default_ISR shr (0+2)
 17437                           
 17438                           ; Vector 23 : I2C1RX
 17439  000036  1926               	dw	_Default_ISR shr (0+2)
 17440                           
 17441                           ; Vector 24 : I2C1TX
 17442  000038  1926               	dw	_Default_ISR shr (0+2)
 17443                           
 17444                           ; Vector 25 : I2C1
 17445  00003A  1926               	dw	_Default_ISR shr (0+2)
 17446                           
 17447                           ; Vector 26 : I2C1E
 17448  00003C  1926               	dw	_Default_ISR shr (0+2)
 17449                           
 17450                           ; Vector 27 : U1RX
 17451  00003E  184A               	dw	_UART1_rx_vect_isr shr (0+2)
 17452                           
 17453                           ; Vector 28 : U1TX
 17454  000040  1840               	dw	_UART1_tx_vect_isr shr (0+2)
 17455                           
 17456                           ; Vector 29 : U1E
 17457  000042  1926               	dw	_Default_ISR shr (0+2)
 17458                           
 17459                           ; Vector 30 : U1
 17460  000044  1926               	dw	_Default_ISR shr (0+2)
 17461                           
 17462                           ; Vector 31 : TMR0
 17463  000046  1926               	dw	_Default_ISR shr (0+2)
 17464                           
 17465                           ; Vector 32 : TMR1
 17466  000048  1926               	dw	_Default_ISR shr (0+2)
 17467                           
 17468                           ; Vector 33 : TMR1G
 17469  00004A  1926               	dw	_Default_ISR shr (0+2)
 17470                           
 17471                           ; Vector 34 : TMR2
 17472  00004C  1926               	dw	_Default_ISR shr (0+2)
 17473                           
 17474                           ; Vector 35 : CCP1
 17475  00004E  1926               	dw	_Default_ISR shr (0+2)
 17476                           
 17477                           ; Vector 36 : Undefined
 17478  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17479                           
 17480                           ; Vector 37 : NCO1
 17481  000052  1926               	dw	_Default_ISR shr (0+2)
 17482                           
 17483                           ; Vector 38 : CWG1
 17484  000054  1926               	dw	_Default_ISR shr (0+2)
 17485                           
 17486                           ; Vector 39 : CLC1
 17487  000056  1926               	dw	_Default_ISR shr (0+2)
 17488                           
 17489                           ; Vector 40 : INT1
 17490  000058  1904               	dw	_INT1_ISR shr (0+2)
 17491                           
 17492                           ; Vector 41 : CMP2
 17493  00005A  1926               	dw	_Default_ISR shr (0+2)
 17494                           
 17495                           ; Vector 42 : DMA2SCNT
 17496  00005C  1926               	dw	_Default_ISR shr (0+2)
 17497                           
 17498                           ; Vector 43 : DMA2DCNT
 17499  00005E  1926               	dw	_Default_ISR shr (0+2)
 17500                           
 17501                           ; Vector 44 : DMA2OR
 17502  000060  1926               	dw	_Default_ISR shr (0+2)
 17503                           
 17504                           ; Vector 45 : DMA2A
 17505  000062  1926               	dw	_Default_ISR shr (0+2)
 17506                           
 17507                           ; Vector 46 : I2C2RX
 17508  000064  1926               	dw	_Default_ISR shr (0+2)
 17509                           
 17510                           ; Vector 47 : I2C2TX
 17511  000066  1926               	dw	_Default_ISR shr (0+2)
 17512                           
 17513                           ; Vector 48 : I2C2
 17514  000068  1926               	dw	_Default_ISR shr (0+2)
 17515                           
 17516                           ; Vector 49 : I2C2E
 17517  00006A  1926               	dw	_Default_ISR shr (0+2)
 17518                           
 17519                           ; Vector 50 : U2RX
 17520  00006C  185E               	dw	_UART2_rx_vect_isr shr (0+2)
 17521                           
 17522                           ; Vector 51 : U2TX
 17523  00006E  1854               	dw	_UART2_tx_vect_isr shr (0+2)
 17524                           
 17525                           ; Vector 52 : U2E
 17526  000070  1926               	dw	_Default_ISR shr (0+2)
 17527                           
 17528                           ; Vector 53 : U2
 17529  000072  1926               	dw	_Default_ISR shr (0+2)
 17530                           
 17531                           ; Vector 54 : TMR3
 17532  000074  1926               	dw	_Default_ISR shr (0+2)
 17533                           
 17534                           ; Vector 55 : TMR3G
 17535  000076  1926               	dw	_Default_ISR shr (0+2)
 17536                           
 17537                           ; Vector 56 : TMR4
 17538  000078  1926               	dw	_Default_ISR shr (0+2)
 17539                           
 17540                           ; Vector 57 : CCP2
 17541  00007A  1926               	dw	_Default_ISR shr (0+2)
 17542                           
 17543                           ; Vector 58 : Undefined
 17544  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17545                           
 17546                           ; Vector 59 : CWG2
 17547  00007E  1926               	dw	_Default_ISR shr (0+2)
 17548                           
 17549                           ; Vector 60 : CLC2
 17550  000080  1926               	dw	_Default_ISR shr (0+2)
 17551                           
 17552                           ; Vector 61 : INT2
 17553  000082  1908               	dw	_INT2_ISR shr (0+2)
 17554                           
 17555                           ; Vector 62 : Undefined
 17556  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17557                           
 17558                           ; Vector 63 : Undefined
 17559  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17560                           
 17561                           ; Vector 64 : Undefined
 17562  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17563                           
 17564                           ; Vector 65 : Undefined
 17565  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17566                           
 17567                           ; Vector 66 : Undefined
 17568  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17569                           
 17570                           ; Vector 67 : Undefined
 17571  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17572                           
 17573                           ; Vector 68 : Undefined
 17574  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17575                           
 17576                           ; Vector 69 : Undefined
 17577  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17578                           
 17579                           ; Vector 70 : TMR5
 17580  000094  1674               	dw	_TMR5_ISR shr (0+2)
 17581                           
 17582                           ; Vector 71 : TMR5G
 17583  000096  1926               	dw	_Default_ISR shr (0+2)
 17584                           
 17585                           ; Vector 72 : TMR6
 17586  000098  18DF               	dw	_TMR6_ISR shr (0+2)
 17587                           
 17588                           ; Vector 73 : CCP3
 17589  00009A  1926               	dw	_Default_ISR shr (0+2)
 17590                           
 17591                           ; Vector 74 : CWG3
 17592  00009C  1926               	dw	_Default_ISR shr (0+2)
 17593                           
 17594                           ; Vector 75 : CLC3
 17595  00009E  1926               	dw	_Default_ISR shr (0+2)
 17596                           
 17597                           ; Vector 76 : Undefined
 17598  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17599                           
 17600                           ; Vector 77 : Undefined
 17601  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17602                           
 17603                           ; Vector 78 : Undefined
 17604  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17605                           
 17606                           ; Vector 79 : Undefined
 17607  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17608                           
 17609                           ; Vector 80 : CCP4
 17610  0000A8  1926               	dw	_Default_ISR shr (0+2)
 17611                           
 17612                           ; Vector 81 : CLC4
 17613  0000AA  1926               	dw	_Default_ISR shr (0+2)
 17614  0000AC                     ivt0x8_undefint:
 17615                           	opt callstack 0
 17616  0000AC  00FF               	reset	
 17617                           
 17618                           	psect	text112
 17619  000000                     __ptext112:
 17620                           	opt callstack 0
 17621                           
 17622                           	psect	rparam
 17623  0000                     
 17624                           	psect	temp
 17625  000039                     btemp:
 17626                           	opt callstack 0
 17627  000039                     	ds	32
 17628  0000                     wtemp0	set	btemp
 17629  0000                     wtemp1	set	btemp+2
 17630  0000                     wtemp2	set	btemp+4
 17631  0000                     wtemp3	set	btemp+6
 17632  0000                     wtemp4	set	btemp+8
 17633  0000                     wtemp5	set	btemp+10
 17634  0000                     wtemp8	set	btemp+1
 17635  0000                     ttemp0	set	btemp
 17636  0000                     ttemp1	set	btemp+3
 17637  0000                     ttemp2	set	btemp+6
 17638  0000                     ttemp3	set	btemp+9
 17639  0000                     ttemp5	set	btemp+1
 17640  0000                     ttemp6	set	btemp+4
 17641  0000                     ttemp7	set	btemp+8
 17642  0000                     ltemp0	set	btemp
 17643  0000                     ltemp1	set	btemp+4
 17644  0000                     ltemp2	set	btemp+8
 17645  0000                     lltemp0	set	btemp
 17646  0000                     lltemp1	set	btemp+8
 17647  0000                     lltemp2	set	btemp+16
 17648  0000                     lltemp3	set	btemp+24
 17649                           tosu	equ	0x3FFF
 17650                           tosh	equ	0x3FFE
 17651                           tosl	equ	0x3FFD
 17652                           stkptr	equ	0x3FFC
 17653                           pclatu	equ	0x3FFB
 17654                           pclath	equ	0x3FFA
 17655                           pcl	equ	0x3FF9
 17656                           tblptru	equ	0x3FF8
 17657                           tblptrh	equ	0x3FF7
 17658                           tblptrl	equ	0x3FF6
 17659                           tablat	equ	0x3FF5
 17660                           prodh	equ	0x3FF4
 17661                           prodl	equ	0x3FF3
 17662                           indf0	equ	0x3FEF
 17663                           postinc0	equ	0x3FEE
 17664                           postdec0	equ	0x3FED
 17665                           preinc0	equ	0x3FEC
 17666                           plusw0	equ	0x3FEB
 17667                           fsr0h	equ	0x3FEA
 17668                           fsr0l	equ	0x3FE9
 17669                           wreg	equ	0x3FE8
 17670                           indf1	equ	0x3FE7
 17671                           postinc1	equ	0x3FE6
 17672                           postdec1	equ	0x3FE5
 17673                           preinc1	equ	0x3FE4
 17674                           plusw1	equ	0x3FE3
 17675                           fsr1h	equ	0x3FE2
 17676                           fsr1l	equ	0x3FE1
 17677                           bsr	equ	0x3FE0
 17678                           indf2	equ	0x3FDF
 17679                           postinc2	equ	0x3FDE
 17680                           postdec2	equ	0x3FDD
 17681                           preinc2	equ	0x3FDC
 17682                           plusw2	equ	0x3FDB
 17683                           fsr2h	equ	0x3FDA
 17684                           fsr2l	equ	0x3FD9
 17685                           status	equ	0x3FD8


Data Sizes:
    Strings     189
    Constant    0
    Data        389
    BSS         539
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      4      61
    BANK0           160      0     155
    BANK1           256      0     240
    BANK2           256      0     222
    BANK3           256      0     254
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[20]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[20]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 94
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[94]), 

    a	PTR const unsigned char  size(2) Largest target is 94
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[94]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[19]), 
		 -> STR_11(CODE[21]), STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[20]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4423_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[20]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[20]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[94]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[94]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[94]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16637.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16637.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16173 size(1) Largest target is 94
		 -> V(BANK0[94]), 

    S3744response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16625.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3744response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16625.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_link	PTR enum E16173 size(1) Largest target is 94
		 -> V(BANK0[94]), 

    m_link	PTR enum E16173 size(1) Largest target is 94
		 -> V(BANK0[94]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    strPtr	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   45224
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                   _UART2_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2066
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8432
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    2127
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    2271
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   19158
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9633
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9463
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9432
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8207
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    8108
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7869
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     252
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      31
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              1 COMRAM     3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _UART2_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DE       9       86.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9B       5       96.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      4      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A4      58        0.0%
DATA                 0      0     3A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 21 17:56:29 2019

                    _SPI1_Exchange8bit 62EE                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 605E              __end_of_UART2_is_rx_ready 6482  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 6472                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 01C0                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H27 02C0                                    _H53 03C6  
                                  l194 63D6                                    l572 5CEC  
                                  l717 5E4A                                    l851 62FC  
                                  l579 5C5C                                    l692 5CAE  
                                  l597 5E1E                                    l699 5C1E  
                                  _GIE 01FE97                                    _abs 5AB4  
                                  _pad 4AD8                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 622A                           _run_checksum 5D74  
                   _UART1_Transmit_ISR 5DF8                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 624C                           __CFG_ZCD$OFF 000000  
                                 l1124 5C02                                   l1260 2410  
                                 l1228 20FC                                   l1254 232A  
                                 l1238 21AC                                   l1272 2568  
                                 l1256 232E                                   l1249 22C0  
                                 l1273 2594                                   l1282 25B4  
                                 l1355 5932                                   l1292 25CC  
                                 l1268 2512                                   l1634 3486  
                                 l1491 5644                                   l1709 44BC  
                                 l2606 5AF4                                   l1487 52A6  
                                 l1911 2FC2                                   l1674 3D42  
                                 l1579 26DE                                   l2628 4CEE  
                                 l2660 4ACE                                   l1845 4B34  
                                 l1688 3EBC                                   l5401 40DA  
                                 l1865 30AA                                   l1892 3B6A  
                                 l5413 41AC                                   l5441 47EE  
                                 l5433 4766                                   l5601 49AC  
                                 l6225 5CC4                                   l8101 5532  
                                 l5605 49DC                                   l8111 4B04  
                                 l6423 5070                                   l6503 4534  
                                 l8105 5570                                   l8121 4B7A  
                                 l5449 489A                                   l5377 5AE4  
                                 l8201 33C6                                   l6249 5C86  
                                 l6433 5086                                   l6275 5B46  
                                 l8115 4B2C                                   l5395 4094  
                                 l6443 5092                                   l6427 507A  
                                 l6603 46A4                                   l8125 4BC4  
                                 l8117 4B3E                                   l8133 566A  
                                 l5389 4040                                   l8205 3402  
                                 l6349 5D82                                   l6461 50F8  
                                 l6453 50E8                                   l6445 50D6  
                                 l6437 508A                                   l6429 5082  
                                 l9021 2900                                   l6517 456E  
                                 l6279 5B70                                   l6711 5E1A  
                                 l8135 5696                                   l8303 2E58  
                                 l6287 5EBA                                   l5823 5C3E  
                                 l6527 4590                                   l6615 46BE  
                                 l6721 62AC                                   l8081 4C1C  
                                 l8241 3C0C                                   l8233 3BA0  
                                 l8217 3AEC                                   l8313 2F00  
                                 l5825 5C40                                   l9033 296E  
                                 l9025 291E                                   l9009 28CC  
                                 l6529 45B6                                   l6617 46F0  
                                 l9201 22B0                                   l8091 52D4  
                                 l8171 3102                                   l8251 3CC2  
                                 l8323 2F58                                   l6467 510A  
                                 l8411 4F58                                   l6547 45DA  
                                 l6483 44D8                                   l6733 5E46  
                                 l8093 52F6                                   l8181 3314  
                                 l8237 3BDC                                   l6469 5130  
                                 l5837 5E72                                   l9045 29EC  
                                 l9037 299E                                   l9029 2942  
                                 l6565 4612                                   l6549 45F4  
                                 l9301 256C                                   l9125 20E6  
                                 l6743 62CC                                   l8167 30E4  
                                 l8159 309A                                   l8255 3CFE  
                                 l8247 3C96                                   l8319 2F54  
                                 l8351 382C                                   l5783 5C7C  
                                 l8407 4EE6                                   l9047 29F0  
                                 l9215 22FC                                   l9127 20EE  
                                 l8329 2F74                                   l5697 5944  
                                 l5785 5C7E                                   l8513 441A  
                                 l9081 2AA2                                   l9057 2A14  
                                 l6577 462C                                   l6497 4516  
                                 l9241 23F6                                   l9233 2384  
                                 l9129 2102                                   l8291 2D32  
                                 l8371 3A02                                   l8363 3954  
                                 l8507 43EC                                   l9083 2AAA  
                                 l6579 466A                                   l9307 25B8  
                                 l9219 2312                                   l9235 23B6  
                                 l8357 38EA                                   l5893 6200  
                                 l5797 5E9C                                   l8525 446E  
                                 l8517 4434                                   l8509 4414  
                                 l8533 449C                                   l9085 2AAE  
                                 l9077 2A90                                   l9093 2ACA  
                                 l8701 3570                                   l9309 25D0  
                                 l9261 245E                                   l9173 2220  
                                 l6759 5BEA                                   l8287 2CE0  
                                 l8279 2BFC                                   l8383 54A4  
                                 l8527 4496                                   l9087 2AB6  
                                 l9079 2A9E                                   l9095 2B0C  
                                 l9319 2632                                   l9263 2468  
                                 l9191 228C                                   l8385 54E6  
                                 l8465 543A                                   l9089 2ABC  
                                 l8721 35F0                                   l8713 35A0  
                                 l8705 3580                                   l9193 2290  
                                 l9169 220A                                   l9275 24D4  
                                 l9291 2542                                   l8733 366E  
                                 l8725 3620                                   l8717 35C4  
                                 l8709 3590                                   l8653 3450  
                                 l9197 2298                                   l8495 4398  
                                 l8487 42E8                                   l8735 3672  
                                 l8831 3E20                                   l8815 3DB4  
                                 l8807 3D84                                   l9279 24E4  
                                 l8745 3696                                   l8833 3E2C  
                                 l8817 3DC6                                   l9289 2516  
                                 l8499 43B2                                   l8771 372C  
                                 l8683 3512                                   l8675 34E2  
                                 l8827 3E08                                   l8925 2692  
                                 l8909 263A                                   l8765 3712  
                                 l8685 351E                                   l8781 3740  
                                 l8845 3E8E                                   l8837 3E52  
                                 l8775 3738                                   l8783 3782  
                                 l8855 3EDC                                   l8863 3EFA  
                                 l8961 2778                                   l8945 270C  
                                 l8769 3728                                   l8697 3552  
                                 l8873 3F2C                                   l8955 2750  
                                 l8891 3F7C                                   l8883 3F5A  
                                 l8867 3F10                                   l8859 3EF2  
                                 l8981 27EE                                   l8973 27AC  
                                 l8949 272E                                   l8885 3F68  
                                 l8887 3F6C                                   l8895 3F8A  
                                 STR_1 2069                                   STR_2 2097  
                                 l8985 281A                                   l8977 27CA  
                                 l8889 3F74                                   l8897 3FCC  
                                 STR_3 20AF                                   STR_4 207A  
                                 STR_5 2042                                   STR_6 2089  
                                 l8997 2898                                   l8989 284A  
                                 STR_7 20A9                                   STR_8 20A3  
                                 l8999 289C                                   STR_9 2001  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u3050 4A84  
                                 _LATF 003FBF                                   u2510 403A  
                                 u2600 4236                                   u5000 3C02  
                                 u2530 4090                                   u5010 3C48  
                                 u3340 574C                                   u5100 2D8A  
                                 u2541 409A                                   u2550 40D4  
                                 u2710 4924                                   u2630 4760  
                                 u2560 4106                                   u5040 3D24  
                                 u5017 3C3A                                   u2650 47B6  
                                 u2490 5AC8                                   u5210 542A  
                                 u2580 41E4                                   u2660 47E8  
                                 u5220 42E2                                   u3365 5780  
                                 u3366 5782                                   u3358 574E  
                                 u2670 481A                                   u5080 2C4C  
                                 u3560 50E4                                   u2690 48D2  
                                 u5170 3A76                                   _T6PR 003F93  
                                 u4700 5324                                   u6060 22CC  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u4800 2FFE                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u6066 22CE  
                                 _PMD6 0039C6                                   u4707 5316  
                                 _PMD7 0039C7                                   u4900 3382  
                                 u4820 306E                                   u4670 4C10  
                                 u4910 3386                                   u5455 36C0  
                                 u5551 3E46                                   u4840 3080  
                                 u5465 36D0                                   u5457 36C4  
                                 u4690 4C8C                                   u4930 339C  
                                 u5475 36E0                                   u5467 36D4  
                                 u4860 30D0                                   u5477 36E4  
                                 u4870 3328                                   u4790 2FFC  
                                 u4881 3358                                   u5905 2A5A  
                                 u4890 336E                                   u4891 336C  
                                 u5915 2A6A                                   u5907 2A5E  
                                 u5917 2A6E                                   u5895 2A4A  
                                 u5897 2A4E                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 626E                       __end_of_ADCC_ISR 5DF8  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01D0  
                                 _ctoa 564C                                   _main 20C0  
                                 _dtoa 2FCC                                   _prec 001F  
                                 _nout 00F7                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 3A80                                   btemp 0039  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0025  
            __end_of_SPI1_Exchange8bit 630C                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 6128                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 0059  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 640E  
                     __end_of_INT1_ISR 641E                       __end_of_INT2_ISR 642E  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 52AE  
        __end_of_OSCILLATOR_Initialize 63DC                                  PRLOCK 0039EF  
                      __end_of___aodiv 425E                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 4948                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 2042  
                                STR_11 2018                                  STR_12 2056  
                                STR_13 20A3                                  STR_21 20B5  
                                STR_14 2018                                  STR_23 20B8  
                                STR_15 202D                                  STR_16 20A0  
                                STR_25 20B8                                  STR_17 20BB  
                        __CFG_WDTE$OFF 000000                                  STR_19 20B5  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 0059  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 6498      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 6100                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5A1E                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 6396                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002A                                  _flags 0021  
                                _fputc 4BEC             __size_of_send_lcd_cmd_long 0028  
                                _fputs 5522                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 0059                                  _width 001D  
                                _putch 6360               _INT1_SetInterruptHandler 6086  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 0039  
                                ltemp1 003D                                  ltemp2 0041  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0039  
                                ttemp1 003C                                  ttemp2 003F  
                                ttemp3 0042                                  ttemp5 003A  
                                ttemp6 003D                                  ttemp7 0041  
                       _secs_gem_state 506E                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5FE6            _UART1_SetRxInterruptHandler 5FBE  
                                wtemp0 0039                                  wtemp1 003B  
                                wtemp2 003D                                  wtemp3 003F  
                                wtemp4 0041                                  wtemp5 0043  
                                wtemp8 003A                        __end_of_sprintf 5204  
                      __end_of_strncmp 4AD8                    ??_UART1_tx_vect_isr 0059  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 614E  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 5AFA  
                __end_of_ringBufS_init 5F46                        __initialization 4CF8  
                    _UART2_rx_vect_isr 6178                           __end_of_ctoa 56D4  
                         __end_of_main 2636                           __end_of_dtoa 344C  
                         __end_of_stoa 3D3E             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0059  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 6036  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 0059  
            __end_of_UART1_tx_vect_isr 6126                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 5FE6                       _UART1_Initialize 57A4  
                    _UART2_tx_vect_isr 6150                     _UART2_Transmit_ISR 5E24  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0059                                 _MD1SRC 003CFC  
               __end_of_secs_gem_state 513C                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1141 5A16  
                       __CFG_WDTCCS$SC 000000                                 u125_48 6238  
                               u127_48 625A                                 u129_48 627C  
                               _SCANPR 0039F7                                 u344_40 639E  
                               u344_46 63A0                                 u370_48 61D2  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u367_48 61AE  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 59D0                    ??_UART2_tx_vect_isr 0059  
            __end_of_UART2_rx_vect_isr 619E             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 643E                       _UART2_Initialize 58C8  
                               _WaitMs 5EA4   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 55BA  
                               _memset 3794                                 clear_0 4D9A  
                               clear_1 4DA6                                 clear_2 4DB2  
                               clear_3 4DBE                                 clear_4 4DCA  
                               _printf 5808                     _eaDogM_WriteString 53EE  
                            ?_ADCC_ISR 0059                                 _strlen 52AE  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 5A6A  
                       _PMD_Initialize 63DC   __end_of_INT2_DefaultInterruptHandler 64A4  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 64A2  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 6176  
                               lltemp0 0039                                 lltemp1 0041  
                               lltemp2 0049                                 lltemp3 0051  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 5982                       __end_of_vfprintf 5522  
                           _StartTimer 5D00                        _CLC1_Initialize 6208  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5B40  
                    _SYSTEM_Initialize 5B86                             __accesstop 0060  
              __end_of__initialization 4DDC                              ?_INT0_ISR 0059  
                            ?_INT1_ISR 0059                              ?_INT2_ISR 0059  
            __end_of_CLKREF_Initialize 6448                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 5BC8  
               __end_of_ringBufS_flush 564C                         __pcstackCOMRAM 0059  
                           ___inthi_sp 0D54                           __pidataBANK0 586A  
                         __pidataBANK1 4F9E                           __pidataBANK2 62D0  
                         __pidataBANK3 5D3C                              ?_TMR5_ISR 0059  
                            ?_TMR6_ISR 0059                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4CF8                          __end_of_fputs 55BA  
                __end_of_TMR5_CallBack 61E6                          __end_of_putch 637A  
              __end_of_TMR6_Initialize 600E                 __end_of_PMD_Initialize 63F0  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 0059  
                __end_of_TMR6_CallBack 61C2            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 6454  
     __end_of_INT2_SetInterruptHandler 6086               _UART2_RxInterruptHandler 0011  
            __end_of_SYSTEM_Initialize 5BC8                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 6344  
                           __pbssBANK0 00BE                             __pbssBANK1 01D0  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001A                             ??_INT0_ISR 0059  
                           ??_INT1_ISR 0059                             ??_INT2_ISR 0059  
                    __end_of_TimerDone 6208                       _DMA1_DMADCNT_ISR 6448  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 6328  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 6036  
              __end_of_ADCC_Initialize 5AB4                             ??_TMR5_ISR 005A  
                           ??_TMR6_ISR 0059                     __size_of_secs_send 0268  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 6290                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 0059                       _DMA1_DMASCNT_ISR 6430  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 622A  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 0059                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 6360  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 5C08  
                   __end_of_UART1_Read 5D00                     __end_of_UART2_Read 5CC2  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 5808  
                      __size_of_WaitMs 002A                                ___aodiv 3FDE  
                              ___aomod 4708                             _m_protocol 2636  
            __end_of_UART1_Receive_ISR 62B0                           __psmallconst 2000  
                 __end_of_init_display 4ECC                                __pcinit 4CF8  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 63F0  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 20C0  
                              __ptext1 3D3E                                __ptext2 44C6  
                              __ptext3 513C                                __ptext4 344C  
                              __ptext5 2636                                __ptext6 425E  
                              __ptext7 4ECC                                __ptext8 5E50  
                              __ptext9 646A                      _UART2_Receive_ISR 62B0  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us261999 4248  
                              us272999 4936                  _OSCILLATOR_Initialize 63C6  
                              us359999 46FA                           __size_of_abs 0046  
                              _r_block 00BE                           __size_of_pad 0114  
                              us478999 2FE6                                us495999 3A92  
                              _mode_sw 002C                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 5926  
                   m_protocol@rxData_l 002B             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 513C                                _strncmp 4948  
                 end_of_initialization 4DDC                      __end_of_secs_send 44C6  
             _INT2_SetInterruptHandler 605E               __size_of_secs_II_message 0242  
                           _r_protocol 344C    __end_of_UART1_SetTxInterruptHandler 5FBE  
          _UART1_SetTxInterruptHandler 5F96    __end_of_UART2_SetRxInterruptHandler 5F96  
          _UART2_SetRxInterruptHandler 5F6E                             _t_protocol 3D3E  
                    __end_of_vfpfcnvrt 2FCC                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 6496              __end_of_UART2_Receive_ISR 62D0  
                       wdtdelay@dcount 00EA                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005A                         _block_checksum 4ECC  
                _INT1_InterruptHandler 0017                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 600E                  _TMR5_InterruptHandler 00EE  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002C  
  __end_of_ADCC_SetADIInterruptHandler 60FE            _ADCC_SetADIInterruptHandler 60D6  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 56D4                        _SPI1_Initialize 63B0  
                     _UART1_put_buffer 5E7A                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 5ECE           __end_of_INTERRUPT_Initialize 57A4  
               __end_of_block_checksum 4F9E   __end_of_INT0_DefaultInterruptHandler 64A0  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 649E  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 64A6  
                    __size_of_TMR5_ISR 004E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3A80  
                       __end_of_printf 586A               __end_of_DMA1_DMADCNT_ISR 6452  
                     _UART2_put_buffer 5E50                  __end_of_INT0_CallBack 624C  
                       __end_of_strlen 5350                    start_initialization 4CF8  
 __end_of_TMR5_DefaultInterruptHandler 63B0  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 6396        __size_of_PIN_MANAGER_Initialize 009E  
                          __end_of_abs 5AFA                  __end_of_INT1_CallBack 626E  
                          __end_of_pad 4BEC                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5F1E                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 6290                   secs_II_message@block 0001  
                        _uart1RxBuffer 0240                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 643E  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 6460  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 61E6  
                        _ringBufS_init 5F1E                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK2 02C0  
                          __pdataBANK3 03C6             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 5A6A                        run_checksum@sum 00F9  
      __end_of_eaDogM_WriteStringAtPos 5DCC                __end_of_DMA1_Initialize 573E  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 60D6  
              __end_of_SPI1_Initialize 63C6               _UART1_RxInterruptHandler 000B  
             _UART2_TxInterruptHandler 000E                    __size_of_m_protocol 04E8  
            __size_of_ringBufS_put_dma 00AA                           _init_display 4DE2  
               __end_of_DMA1_DMAOR_ISR 646A                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0014                  _TMR6_InterruptHandler 00F1  
               __size_of_TMR6_CallBack 0024                 _PIN_MANAGER_Initialize 5350  
                 __end_of_wait_lcd_set 6490                              __ptext100 62B0  
                            __ptext101 637C                              __ptext110 61C2  
                            __ptext102 619E                              __ptext111 6396  
                            __ptext103 5B40                              __ptext112 0000  
                            __ptext104 6430                              __ptext105 6448  
                            __ptext106 6454                              __ptext107 6460  
                            __ptext108 59D0                              __ptext109 5BC8  
                   __end_of_StartTimer 5D3C                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 5DCC  
                  __size_of_r_protocol 0348                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 02A0                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 573E                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 0059  
                             _INT0_ISR 6400                               _INT1_ISR 6410  
                             _INT2_ISR 6420                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 425E  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 00D7  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0383                              _ring_buf2 0340  
                             _PIR1bits 0039A1                               i2u441_48 6162  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u443_48 618A                               i2u437_48 6112  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u439_48 613A  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
                             i2u595_48 5DE4               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5E24                               _TMR5_ISR 59D0  
                             _TMR6_ISR 637C                              _vfpfcnvrt 2B1E  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 61C2  
                            _start_lcd 6490              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 619E               __end_of_UART1_put_buffer 5EA4  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 5C84                    __end_of_UART2_Write 5C46  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4D0C                              copy_data1 4D2E  
                            copy_data2 4D50                              copy_data3 4D72  
             _INT0_SetInterruptHandler 60AE                 _uart1TxBufferRemaining 0036  
  __end_of_UART2_SetTxInterruptHandler 5F6E            _UART2_SetTxInterruptHandler 5F46  
                         _uart1RxCount 0033               __end_of_UART2_put_buffer 5E7A  
                         _uart2RxCount 002D                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5DA0                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 630C  
                         _send_lcd_cmd 5EF6                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 6328  
                __end_of_DMA1_DMAA_ISR 645E   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 0059               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 63FE                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005A                               __ptext10 5C08  
                             __ptext11 5E7A                               __ptext20 5C84  
                             __ptext12 6472                               __ptext21 6482  
                             __ptext13 5C46                               __ptext30 63F0  
                             __ptext22 5CC2                               __ptext14 506E  
                             __ptext31 5982                               __ptext23 4DE2  
                             __ptext15 5D74                               __ptext40 2B1E  
                             __ptext32 648A                               __ptext24 5ECE  
                             __ptext16 5EA4                               __ptext41 4948  
                             __ptext33 630C                               __ptext25 5EF6  
                             __ptext17 61E6                               __ptext50 5522  
                             __ptext42 3A80                               __ptext34 5926  
                             __ptext26 62EE                               __ptext18 5D00  
                             __ptext51 4BEC                               __ptext43 2FCC  
                             __ptext35 6490                               __ptext27 5F1E  
                             __ptext19 647A                               __ptext60 5FBE  
                             __ptext52 6360                               __ptext44 5AB4  
                             __ptext36 55BA                               __ptext28 5DA0  
                             __ptext61 5FE6                               __ptext53 5204  
                             __ptext45 4708                               __ptext37 3794  
                             __ptext29 53EE                               __ptext70 573E  
                             __ptext62 600E                               __ptext54 5B86  
                             __ptext46 3FDE                               __ptext38 5808  
                             __ptext71 5A1E                               __ptext63 5AFA  
                             __ptext55 58C8                               __ptext47 564C  
                             __ptext39 548A                               __ptext80 60D6  
                             __ptext72 605E                               __ptext64 6036  
                             __ptext56 5F46                               __ptext48 4AD8  
                             __ptext81 6400                               __ptext73 6086  
                             __ptext65 63B0                               __ptext57 5F6E  
                             __ptext49 52AE                               __ptext90 6498  
                             __ptext82 622A                               __ptext74 60AE  
                             __ptext66 63DC                               __ptext58 57A4  
                             __ptext91 5DCC                               __ptext83 649E  
                             __ptext75 6344                               __ptext67 5350  
                             __ptext59 5F96                               __ptext92 64A4  
                             __ptext84 6410                               __ptext76 56D4  
                             __ptext68 63C6                               __ptext93 6100  
                             __ptext85 624C                               __ptext77 643E  
                             __ptext69 6328                               __ptext94 5DF8  
                             __ptext86 64A0                               __ptext78 6208  
                             __ptext95 6128                               __ptext87 6420  
                             __ptext79 5A6A                               __ptext96 6290  
                             __ptext88 626E                               __ptext97 6150  
                             __ptext89 64A2                               __ptext98 5E24  
                             __ptext99 6178                        _secs_II_message 44C6  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 5204  
                   __end_of_m_protocol 2B1E                          __size_of_ctoa 0088  
                        __size_of_main 0576                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0059  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 00F4                              stoa@F1144 0100  
                   ??_DMA1_DMASCNT_ISR 005A                               _spi_link 00CB  
                             _wdtdelay 5926             __end_of_UART2_Transmit_ISR 5E50  
                             _vfprintf 548A                    secs_gem_state@block 0027  
                    _UART1_is_rx_ready 6482                            _UART1_Write 5C46  
 __end_of_INT1_DefaultInterruptHandler 64A2  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 64A0                            _UART2_Write 5C08  
                    _UART1_is_tx_ready 6472                        r_protocol@retry 005D  
                    t_protocol@requeue 0028                          ??_Default_ISR 0059  
                   __end_of_r_protocol 3794                            _uart1RxHead 0035  
                          _uart1TxHead 0038                            _uart2RxHead 002F  
                          _uart1RxTail 0034                            _uart2TxHead 0032  
                          _uart1TxTail 0037                            _uart2RxTail 002E  
                          _uart2TxTail 0031                           _wait_lcd_set 648A  
                   _EXT_INT_Initialize 5A1E   __end_of_TMR6_DefaultInterruptHandler 5B86  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 5B40  
                   __end_of_t_protocol 3FDE   __end_of_ADCC_DefaultInterruptHandler 64A6  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 64A4  
                             intlevel2 0000                      _send_lcd_cmd_long 5ECE  
              __size_of_secs_gem_state 00CE                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 548A                __end_of_NCO1_Initialize 6344  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 648A  
                           _UART1_Read 5CC2                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 5C84              __end_of_UART1_is_tx_ready 647A  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 647A  
               _uart2TxBufferRemaining 0030                      _UART2_is_tx_ready 646A  
                     _send_lcd_cmd_dma 5982                  TMR5_ISR@CountCallBack 0023  
              __end_of_secs_II_message 4708       __end_of_INT1_SetInterruptHandler 60AE  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00E3  
                     ??_DMA1_DMAOR_ISR 005A               _UART1_TxInterruptHandler 0008  
                      t_protocol@retry 0029              __end_of_send_lcd_cmd_long 5EF6  
                  __end_of_Default_ISR 649E         __end_of_PIN_MANAGER_Initialize 53EE  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 5DA0  
            __size_of_UART2_Initialize 005E  
