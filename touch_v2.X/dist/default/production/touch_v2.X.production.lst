

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 21:22:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=4,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=4,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=4,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=4,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=4,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=4,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   173                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   174                           	psect	text147,global,reloc=4,class=CODE,delta=1
   175                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   176                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   177  0000                     
   178                           ; Version 2.10
   179                           ; Generated 31/07/2019 GMT
   180                           ; 
   181                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   182                           ; All rights reserved.
   183                           ; 
   184                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   185                           ; 
   186                           ; Redistribution and use in source and binary forms, with or without modification, are
   187                           ; permitted provided that the following conditions are met:
   188                           ; 
   189                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   190                           ;        conditions and the following disclaimer.
   191                           ; 
   192                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   193                           ;        of conditions and the following disclaimer in the documentation and/or other
   194                           ;        materials provided with the distribution.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC18F57K42 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     
   213 ;;_mode	offset	0
   214 ;;_channel	offset=-1 (param)
   215 ;;_s	offset=-2 (param)
   216 ;;_cmd	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_data	offset=-1 (param)
   219 ;;__this	offset=-2 (param)
   220 ;;_i	offset=-1 (param)
   221 ;;_cmd	offset=-1 (param)
   222 ;;_i	offset	0
   223 ;;_chan	offset=-1 (param)
   224 ;;_to_what	offset=-2 (param)
   225 ;;_u	offset	0
   226 ;;_s	offset=-2 (param)
   227 ;;_index	offset=-1 (param)
   228 ;;_arg	offset	0
   229 ;;_exp	offset	4
   230 ;;_sign	offset=-1 (param)
   231 ;;_val	offset=-5 (param)
   232 ;;_estatus	offset	0
   233 ;;_flipper	offset=-1 (param)
   234 ;;_f	offset	0
   235 ;;_ap	offset	6
   236 ;;_s	offset=-3 (param)
   237 ;;_fmt	offset=-5 (param)
   238 ;;_line	offset=-1 (param)
   239 ;;_vterm	offset=-2 (param)
   240 ;;_numMilliseconds	offset=-2 (param)
   241 ;;_vterm	offset=-1 (param)
   242 ;;_r	offset=-1 (param)
   243 ;;_c	offset=-2 (param)
   244 ;;_strPtr	offset=-4 (param)
   245 ;;_strPtr	offset=-1 (param)
   246 ;;_delay	offset=-4 (param)
   247 ;;_strPtr	offset=-2 (param)
   248 ;;__this	offset=-2 (param)
   249 ;;_clearBuffer	offset=-3 (param)
   250 ;;_s	offset	0
   251 ;;_k	offset	2
   252 ;;_dest	offset=-2 (param)
   253 ;;_c	offset=-4 (param)
   254 ;;_n	offset=-6 (param)
   255 ;;_ap	offset	0
   256 ;;_fmt	offset=-3 (param)
   257 ;;_cfmt	offset	0
   258 ;;_fp	offset=-2 (param)
   259 ;;_fmt	offset=-4 (param)
   260 ;;_ap	offset=-6 (param)
   261 ;;_vfpfcnvrt$4439	offset	0
   262 ;;_vfpfcnvrt$4445	offset	2
   263 ;;_vfpfcnvrt$4438	offset	4
   264 ;;_llu	offset	6
   265 ;;_ll	offset	14
   266 ;;_f	offset	22
   267 ;;_ct	offset	26
   268 ;;_cp	offset	29
   269 ;;_c	offset	31
   270 ;;_fp	offset=-2 (param)
   271 ;;_fmt	offset=-4 (param)
   272 ;;_ap	offset=-6 (param)
   273 ;;_xtoa$4424	offset	0
   274 ;;_xtoa$4423	offset	2
   275 ;;_n	offset	4
   276 ;;_c	offset	12
   277 ;;_i	offset	14
   278 ;;_w	offset	16
   279 ;;_p	offset	18
   280 ;;_fp	offset=-2 (param)
   281 ;;_d	offset=-10 (param)
   282 ;;_x	offset=-11 (param)
   283 ;;_toupper$5084	offset	0
   284 ;;_c	offset=-2 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_c	offset=-2 (param)
   287 ;;_r	offset	0
   288 ;;_l	offset	2
   289 ;;__l	offset=-2 (param)
   290 ;;__r	offset=-4 (param)
   291 ;;_n	offset=-6 (param)
   292 ;;_nuls	offset	0
   293 ;;_l	offset	7
   294 ;;_p	offset	9
   295 ;;_cp	offset	11
   296 ;;_w	offset	13
   297 ;;_i	offset	15
   298 ;;_fp	offset=-2 (param)
   299 ;;_s	offset=-4 (param)
   300 ;;_efgtoa$4403	offset	0
   301 ;;_efgtoa$4402	offset	2
   302 ;;_efgtoa$4401	offset	4
   303 ;;_efgtoa$4397	offset	6
   304 ;;_efgtoa$4393	offset	8
   305 ;;_efgtoa$4392	offset	10
   306 ;;_u	offset	12
   307 ;;_g	offset	16
   308 ;;_l	offset	20
   309 ;;_h	offset	24
   310 ;;_ou	offset	28
   311 ;;_n	offset	32
   312 ;;_e	offset	34
   313 ;;_i	offset	36
   314 ;;_w	offset	38
   315 ;;_p	offset	40
   316 ;;_sign	offset	42
   317 ;;_d	offset	44
   318 ;;_ne	offset	46
   319 ;;_m	offset	48
   320 ;;_pp	offset	50
   321 ;;_t	offset	52
   322 ;;_mode	offset	54
   323 ;;_nmode	offset	55
   324 ;;_fp	offset=-2 (param)
   325 ;;_f	offset=-6 (param)
   326 ;;_c	offset=-7 (param)
   327 ;;_tolower$5069	offset	0
   328 ;;_c	offset=-2 (param)
   329 ;;_c	offset=-2 (param)
   330 ;;_d	offset	0
   331 ;;_s	offset	2
   332 ;;_dest	offset=-2 (param)
   333 ;;_src	offset=-4 (param)
   334 ;;_u	offset	0
   335 ;;_m	offset	4
   336 ;;_e	offset	8
   337 ;;_x	offset=-4 (param)
   338 ;;_u	offset	0
   339 ;;_e	offset	4
   340 ;;_x	offset=-4 (param)
   341 ;;_exp1	offset	0
   342 ;;_sign1	offset	1
   343 ;;_f1	offset=-4 (param)
   344 ;;_f1	offset=-4 (param)
   345 ;;_ff1	offset=-4 (param)
   346 ;;_ff2	offset=-8 (param)
   347 ;;_ff1	offset=-4 (param)
   348 ;;_ff2	offset=-8 (param)
   349 ;;_grs	offset	0
   350 ;;_rem	offset	4
   351 ;;_new_exp	offset	8
   352 ;;_aexp	offset	10
   353 ;;_bexp	offset	11
   354 ;;_sign	offset	12
   355 ;;_b	offset=-4 (param)
   356 ;;_a	offset=-8 (param)
   357 ;;_sign	offset	0
   358 ;;_counter	offset	1
   359 ;;_dividend	offset=-2 (param)
   360 ;;_divisor	offset=-4 (param)
   361 ;;_quotient	offset	0
   362 ;;_sign	offset	2
   363 ;;_counter	offset	3
   364 ;;_dividend	offset=-2 (param)
   365 ;;_divisor	offset=-4 (param)
   366 ;;_dtoa$4369	offset	0
   367 ;;_n	offset	2
   368 ;;_i	offset	10
   369 ;;_s	offset	12
   370 ;;_w	offset	14
   371 ;;_p	offset	16
   372 ;;_fp	offset=-2 (param)
   373 ;;_d	offset=-10 (param)
   374 ;;_a	offset=-2 (param)
   375 ;;_sign	offset	0
   376 ;;_counter	offset	1
   377 ;;_dividend	offset=-8 (param)
   378 ;;_divisor	offset=-16 (param)
   379 ;;_quotient	offset	0
   380 ;;_sign	offset	8
   381 ;;_counter	offset	9
   382 ;;_dividend	offset=-8 (param)
   383 ;;_divisor	offset=-16 (param)
   384 ;;_w	offset	0
   385 ;;_fp	offset=-2 (param)
   386 ;;_c	offset=-3 (param)
   387 ;;_w	offset	0
   388 ;;_i	offset	2
   389 ;;_fp	offset=-2 (param)
   390 ;;_buf	offset=-4 (param)
   391 ;;_p	offset=-6 (param)
   392 ;;_a	offset	0
   393 ;;_s	offset=-2 (param)
   394 ;;_i	offset	0
   395 ;;_c	offset	2
   396 ;;_s	offset=-2 (param)
   397 ;;_fp	offset=-4 (param)
   398 ;;_c	offset=-2 (param)
   399 ;;_fp	offset=-4 (param)
   400 ;;_c	offset=-1 (param)
   401 ;;__this	offset=-2 (param)
   402 ;;_c	offset=-3 (param)
   403 ;;_atoi$4922	offset	0
   404 ;;_atoi$4920	offset	2
   405 ;;_atoi$4921	offset	4
   406 ;;_n	offset	5
   407 ;;_neg	offset	7
   408 ;;_s	offset=-2 (param)
   409 ;;_isspace$4960	offset	0
   410 ;;_c	offset=-2 (param)
   411 ;;_c	offset=-2 (param)
   412 ;;_vterm	offset=-1 (param)
   413 ;;_new_response_info	offset=-1 (param)
   414 ;;_new_response_info	offset=-1 (param)
   415 ;;_level	offset=-2 (param)
   416 ;;_dutyValue	offset=-2 (param)
   417 ;;_timer	offset=-1 (param)
   418 ;;_timer	offset=-1 (param)
   419 ;;_count	offset=-3 (param)
   420 ;;_lp_speed	offset	0
   421 ;;_new	offset=-4 (param)
   422 ;;_bn	offset=-5 (param)
   423 ;;_slow	offset=-6 (param)
   424 ;;_b	offset=-4 (param)
   425 ;;_a	offset=-8 (param)
   426 ;;_grs	offset	0
   427 ;;_bexp	offset	1
   428 ;;_aexp	offset	2
   429 ;;_signs	offset	3
   430 ;;_b	offset=-4 (param)
   431 ;;_a	offset=-8 (param)
   432 ;;_prod	offset	0
   433 ;;_grs	offset	4
   434 ;;_temp	offset	8
   435 ;;_bexp	offset	10
   436 ;;_aexp	offset	11
   437 ;;_sign	offset	12
   438 ;;_b	offset=-4 (param)
   439 ;;_a	offset=-8 (param)
   440 ;;_InterruptHandler	offset=-3 (param)
   441 ;;_InterruptHandler	offset=-3 (param)
   442 ;;_InterruptHandler	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_state	offset	0
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_i	offset	0
   452 ;;_sw_value	offset	1
   453 ;;_timerVal	offset=-2 (param)
   454 ;;_channel	offset=-1 (param)
   455 ;;_i	offset	0
   456                           
   457                           	psect	idataBANK0
   458  01813A                     __pidataBANK0:
   459                           	opt callstack 0
   460                           
   461                           ;initializer for _R
   462  01813A  0000               	dw	0
   463  01813C  0000               	dw	0
   464  01813E  0000               	dw	0
   465  018140  0000               	dw	0
   466  018142  0000               	dw	0
   467  018144  0000               	dw	0
   468  018146  0000               	dw	0
   469  018148  0000               	dw	0
   470  01814A  0000               	dw	0
   471  01814C  0000               	dw	0
   472  01814E  0000               	dw	0
   473  018150  0000               	dw	0
   474  018152  0000               	dw	0
   475  018154  0000               	dw	0
   476  018156  0000               	dw	0
   477  018158  0000               	dw	0
   478  01815A  0F67               	dw	3943
   479  01815C  0F8F               	dw	3983
   480  01815E  00                 	db	0
   481  01815F  0000               	dw	0
   482  018161  00                 	db	0
   483                           
   484                           ;initializer for stoa@F1166
   485  018162  28                 	db	40
   486  018163  6E                 	db	110
   487  018164  75                 	db	117
   488  018165  6C                 	db	108
   489  018166  6C                 	db	108
   490  018167  29                 	db	41
   491  018168  00                 	db	0
   492                           
   493                           	psect	idataBANK1
   494  0187AA                     __pidataBANK1:
   495                           	opt callstack 0
   496                           
   497                           ;initializer for _port_data
   498  0187AA  FF                 	db	255
   499  0187AB  00                 	db	0
   500  0187AC  FF                 	db	255
   501  0187AD  00                 	db	0
   502  0187AE  FF                 	db	255
   503  0187AF  00                 	db	0
   504  0187B0  FF                 	db	255
   505  0187B1  00                 	db	0
   506  0187B2  FF                 	db	255
   507  0187B3  00                 	db	0
   508  0187B4  FF                 	db	255
   509  0187B5  00                 	db	0
   510  0187B6  FF                 	db	255
   511  0187B7  00                 	db	0
   512  0187B8  FF                 	db	255
   513  0187B9  00                 	db	0
   514                           
   515                           	psect	idataBANK2
   516  016FDC                     __pidataBANK2:
   517                           	opt callstack 0
   518                           
   519                           ;initializer for _V
   520  016FDC  00                 	db	0
   521  016FDD  00                 	db	0
   522  016FDE  00                 	db	0
   523  016FDF  00                 	db	0
   524  016FE0  00                 	db	0
   525  016FE1  00                 	db	0
   526  016FE2  00                 	db	0
   527  016FE3  00                 	db	0
   528  016FE4  00                 	db	0
   529  016FE5  00                 	db	0
   530  016FE6  00                 	db	0
   531  016FE7  00                 	db	0
   532  016FE8  00                 	db	0
   533  016FE9  00                 	db	0
   534  016FEA  00                 	db	0
   535  016FEB  00                 	db	0
   536  016FEC  00                 	db	0
   537  016FED  00                 	db	0
   538  016FEE  00                 	db	0
   539  016FEF  00                 	db	0
   540  016FF0  00                 	db	0
   541  016FF1  00                 	db	0
   542  016FF2  00                 	db	0
   543  016FF3  00                 	db	0
   544  016FF4  00                 	db	0
   545  016FF5  00                 	db	0
   546  016FF6  00                 	db	0
   547  016FF7  00                 	db	0
   548  016FF8  00                 	db	0
   549  016FF9  00                 	db	0
   550  016FFA  00                 	db	0
   551  016FFB  00                 	db	0
   552  016FFC  00                 	db	0
   553  016FFD  00                 	db	0
   554  016FFE  00                 	db	0
   555  016FFF  00                 	db	0
   556  017000  00                 	db	0
   557  017001  00                 	db	0
   558  017002  00                 	db	0
   559  017003  00                 	db	0
   560  017004  00                 	db	0
   561  017005  00                 	db	0
   562  017006  00                 	db	0
   563  017007  00                 	db	0
   564  017008  00                 	db	0
   565  017009  00                 	db	0
   566  01700A  00                 	db	0
   567  01700B  00                 	db	0
   568  01700C  00                 	db	0
   569  01700D  00                 	db	0
   570  01700E  00                 	db	0
   571  01700F  00                 	db	0
   572  017010  00                 	db	0
   573  017011  00                 	db	0
   574  017012  00                 	db	0
   575  017013  00                 	db	0
   576  017014  00                 	db	0
   577  017015  00                 	db	0
   578  017016  00                 	db	0
   579  017017  00                 	db	0
   580  017018  00                 	db	0
   581  017019  00                 	db	0
   582  01701A  00                 	db	0
   583  01701B  00                 	db	0
   584  01701C  00                 	db	0
   585  01701D  00                 	db	0
   586  01701E  00                 	db	0
   587  01701F  00                 	db	0
   588  017020  00                 	db	0
   589  017021  00                 	db	0
   590  017022  00                 	db	0
   591  017023  00                 	db	0
   592  017024  00                 	db	0
   593  017025  00                 	db	0
   594  017026  00                 	db	0
   595  017027  00                 	db	0
   596  017028  00                 	db	0
   597  017029  00                 	db	0
   598  01702A  00                 	db	0
   599  01702B  00                 	db	0
   600  01702C  00                 	db	0
   601  01702D  00                 	db	0
   602  01702E  00                 	db	0
   603  01702F  00                 	db	0
   604  017030  00                 	db	0
   605  017031  00                 	db	0
   606  017032  00                 	db	0
   607  017033  00                 	db	0
   608  017034  00                 	db	0
   609  017035  00                 	db	0
   610  017036  00                 	db	0
   611  017037  00                 	db	0
   612  017038  00                 	db	0
   613  017039  00                 	db	0
   614  01703A  00                 	db	0
   615  01703B  00                 	db	0
   616  01703C  00                 	db	0
   617  01703D  00                 	db	0
   618  01703E  00                 	db	0
   619  01703F  00                 	db	0
   620  017040  00                 	db	0
   621  017041  00                 	db	0
   622  017042  00                 	db	0
   623  017043  00                 	db	0
   624  017044  00                 	db	0
   625  017045  00                 	db	0
   626  017046  00                 	db	0
   627  017047  00                 	db	0
   628  017048  00                 	db	0
   629  017049  00                 	db	0
   630  01704A  00                 	db	0
   631  01704B  00                 	db	0
   632  01704C  00                 	db	0
   633  01704D  00                 	db	0
   634  01704E  00                 	db	0
   635  01704F  00                 	db	0
   636  017050  00                 	db	0
   637  017051  00                 	db	0
   638  017052  00                 	db	0
   639  017053  00                 	db	0
   640  017054  00                 	db	0
   641  017055  00                 	db	0
   642  017056  00                 	db	0
   643  017057  00                 	db	0
   644  017058  00                 	db	0
   645  017059  00                 	db	0
   646  01705A  00                 	db	0
   647  01705B  00                 	db	0
   648  01705C  00                 	db	0
   649  01705D  0000               	dw	0
   650  01705F  0000               	dw	0
   651  017061  0000               	dw	0
   652  017063  0000               	dw	0
   653  017065  00                 	db	0
   654  017066  00                 	db	0
   655  017067  00                 	db	0
   656  017068  00                 	db	0
   657  017069  00                 	db	0
   658  01706A  00                 	db	0
   659  01706B  0000               	dw	0
   660  01706D  0000               	dw	0
   661  01706F  0000               	dw	0
   662  017071  0000               	dw	0
   663  017073  0000               	dw	0
   664  017075  0000               	dw	0
   665  017077  00                 	db	0
   666  017078  00                 	db	0
   667  017079  00                 	db	0
   668  01707A  00                 	db	0
   669  01707B  00                 	db	0
   670  01707C  00                 	db	0
   671  01707D  00                 	db	0
   672  01707E  00                 	db	0
   673  01707F  00                 	db	0
   674  017080  00                 	db	0
   675  017081  0000               	dw	0
   676  017083  0000               	dw	0
   677  017085  2D                 	db	45
   678  017086  00                 	db	0
   679  017087  0000               	dw	0
   680  017089  0000               	dw	0
   681  01708B  0000               	dw	0
   682  01708D  0000               	dw	0
   683  01708F  0000               	dw	0
   684  017091  0000               	dw	0
   685  017093  0000               	dw	0
   686  017095  0000               	dw	0
   687                           
   688                           	psect	mediumconst
   689  00FE0C                     __pmediumconst:
   690                           	opt callstack 0
   691  00FE0C  00                 	db	0
   692  00FE0D                     _T:
   693                           	opt callstack 0
   694  00FE0D  63                 	db	99
   695  00FE0E  6F                 	db	111
   696  00FE0F  6D                 	db	109
   697  00FE10  6D                 	db	109
   698  00FE11  61                 	db	97
   699  00FE12  6E                 	db	110
   700  00FE13  64                 	db	100
   701  00FE14  73                 	db	115
   702  00FE15  20                 	db	32
   703  00FE16  31                 	db	49
   704  00FE17  00                 	db	0
   705  00FE18  00                 	db	0
   706  00FE19  00                 	db	0
   707  00FE1A  00                 	db	0
   708  00FE1B  00                 	db	0
   709  00FE1C  00                 	db	0
   710  00FE1D  00                 	db	0
   711  00FE1E  00                 	db	0
   712  00FE1F  64                 	db	100
   713  00FE20  69                 	db	105
   714  00FE21  73                 	db	115
   715  00FE22  70                 	db	112
   716  00FE23  6C                 	db	108
   717  00FE24  61                 	db	97
   718  00FE25  79                 	db	121
   719  00FE26  73                 	db	115
   720  00FE27  20                 	db	32
   721  00FE28  31                 	db	49
   722  00FE29  00                 	db	0
   723  00FE2A  00                 	db	0
   724  00FE2B  00                 	db	0
   725  00FE2C  00                 	db	0
   726  00FE2D  00                 	db	0
   727  00FE2E  00                 	db	0
   728  00FE2F  00                 	db	0
   729  00FE30  00                 	db	0
   730  00FE31  63                 	db	99
   731  00FE32  6F                 	db	111
   732  00FE33  6D                 	db	109
   733  00FE34  6D                 	db	109
   734  00FE35  61                 	db	97
   735  00FE36  6E                 	db	110
   736  00FE37  64                 	db	100
   737  00FE38  73                 	db	115
   738  00FE39  20                 	db	32
   739  00FE3A  32                 	db	50
   740  00FE3B  00                 	db	0
   741  00FE3C  00                 	db	0
   742  00FE3D  00                 	db	0
   743  00FE3E  00                 	db	0
   744  00FE3F  00                 	db	0
   745  00FE40  00                 	db	0
   746  00FE41  00                 	db	0
   747  00FE42  00                 	db	0
   748  00FE43  64                 	db	100
   749  00FE44  69                 	db	105
   750  00FE45  73                 	db	115
   751  00FE46  70                 	db	112
   752  00FE47  6C                 	db	108
   753  00FE48  61                 	db	97
   754  00FE49  79                 	db	121
   755  00FE4A  73                 	db	115
   756  00FE4B  20                 	db	32
   757  00FE4C  32                 	db	50
   758  00FE4D  00                 	db	0
   759  00FE4E  00                 	db	0
   760  00FE4F  00                 	db	0
   761  00FE50  00                 	db	0
   762  00FE51  00                 	db	0
   763  00FE52  00                 	db	0
   764  00FE53  00                 	db	0
   765  00FE54  00                 	db	0
   766  00FE55  63                 	db	99
   767  00FE56  6F                 	db	111
   768  00FE57  6D                 	db	109
   769  00FE58  6D                 	db	109
   770  00FE59  61                 	db	97
   771  00FE5A  6E                 	db	110
   772  00FE5B  64                 	db	100
   773  00FE5C  73                 	db	115
   774  00FE5D  20                 	db	32
   775  00FE5E  33                 	db	51
   776  00FE5F  00                 	db	0
   777  00FE60  00                 	db	0
   778  00FE61  00                 	db	0
   779  00FE62  00                 	db	0
   780  00FE63  00                 	db	0
   781  00FE64  00                 	db	0
   782  00FE65  00                 	db	0
   783  00FE66  00                 	db	0
   784  00FE67  64                 	db	100
   785  00FE68  69                 	db	105
   786  00FE69  73                 	db	115
   787  00FE6A  70                 	db	112
   788  00FE6B  6C                 	db	108
   789  00FE6C  61                 	db	97
   790  00FE6D  79                 	db	121
   791  00FE6E  73                 	db	115
   792  00FE6F  20                 	db	32
   793  00FE70  33                 	db	51
   794  00FE71  00                 	db	0
   795  00FE72  00                 	db	0
   796  00FE73  00                 	db	0
   797  00FE74  00                 	db	0
   798  00FE75  00                 	db	0
   799  00FE76  00                 	db	0
   800  00FE77  00                 	db	0
   801  00FE78  00                 	db	0
   802  00FE79  63                 	db	99
   803  00FE7A  6F                 	db	111
   804  00FE7B  6D                 	db	109
   805  00FE7C  6D                 	db	109
   806  00FE7D  61                 	db	97
   807  00FE7E  6E                 	db	110
   808  00FE7F  64                 	db	100
   809  00FE80  73                 	db	115
   810  00FE81  20                 	db	32
   811  00FE82  34                 	db	52
   812  00FE83  00                 	db	0
   813  00FE84  00                 	db	0
   814  00FE85  00                 	db	0
   815  00FE86  00                 	db	0
   816  00FE87  00                 	db	0
   817  00FE88  00                 	db	0
   818  00FE89  00                 	db	0
   819  00FE8A  00                 	db	0
   820  00FE8B  64                 	db	100
   821  00FE8C  69                 	db	105
   822  00FE8D  73                 	db	115
   823  00FE8E  70                 	db	112
   824  00FE8F  6C                 	db	108
   825  00FE90  61                 	db	97
   826  00FE91  79                 	db	121
   827  00FE92  73                 	db	115
   828  00FE93  20                 	db	32
   829  00FE94  34                 	db	52
   830  00FE95  00                 	db	0
   831  00FE96  00                 	db	0
   832  00FE97  00                 	db	0
   833  00FE98  00                 	db	0
   834  00FE99  00                 	db	0
   835  00FE9A  00                 	db	0
   836  00FE9B  00                 	db	0
   837  00FE9C  00                 	db	0
   838  00FE9D                     __end_of_T:
   839                           	opt callstack 0
   840  0000                     _IVTADL	set	14493
   841  0000                     _IVTADH	set	14494
   842  0000                     _IVTADU	set	14495
   843  0000                     _PIR4bits	set	14756
   844  0000                     _PIE8bits	set	14744
   845  0000                     _PIR8bits	set	14760
   846  0000                     _SCANPR	set	14839
   847  0000                     _DMA2PR	set	14836
   848  0000                     _DMA1PR	set	14835
   849  0000                     _MAINPR	set	14834
   850  0000                     _ISRPR	set	14833
   851  0000                     _PIE2bits	set	14738
   852  0000                     _PIR2bits	set	14754
   853  0000                     _PIE9bits	set	14745
   854  0000                     _PIR9bits	set	14761
   855  0000                     _PIE6bits	set	14742
   856  0000                     _PIE3bits	set	14739
   857  0000                     _PMD7	set	14791
   858  0000                     _PMD6	set	14790
   859  0000                     _PMD5	set	14789
   860  0000                     _PMD4	set	14788
   861  0000                     _PMD3	set	14787
   862  0000                     _PMD2	set	14786
   863  0000                     _PMD1	set	14785
   864  0000                     _PMD0	set	14784
   865  0000                     _OSCTUNE	set	14814
   866  0000                     _OSCFRQ	set	14815
   867  0000                     _OSCEN	set	14813
   868  0000                     _OSCCON3	set	14811
   869  0000                     _OSCCON1	set	14809
   870  0000                     _IPR8bits	set	14728
   871  0000                     _IPR9bits	set	14729
   872  0000                     _IPR5bits	set	14725
   873  0000                     _IPR1bits	set	14721
   874  0000                     _IPR3bits	set	14723
   875  0000                     _IPR6bits	set	14726
   876  0000                     _IPR2bits	set	14722
   877  0000                     _PIE5bits	set	14741
   878  0000                     _PIE1bits	set	14737
   879  0000                     _PIR5bits	set	14757
   880  0000                     _PIR1bits	set	14753
   881  0000                     _PLLR	set	118496
   882  0000                     _SPI1SDIPPS	set	15071
   883  0000                     _U1RXPPS	set	15077
   884  0000                     _RC6PPS	set	14870
   885  0000                     _RC5PPS	set	14869
   886  0000                     _INT1PPS	set	15041
   887  0000                     _RD1PPS	set	14873
   888  0000                     _INT0PPS	set	15040
   889  0000                     _RC3PPS	set	14867
   890  0000                     _RB6PPS	set	14862
   891  0000                     _SPI1SCKPPS	set	15070
   892  0000                     _U2RXPPS	set	15080
   893  0000                     _SLRCONF	set	14995
   894  0000                     _SLRCONE	set	14979
   895  0000                     _SLRCOND	set	14963
   896  0000                     _SLRCONC	set	14947
   897  0000                     _SLRCONB	set	14931
   898  0000                     _SLRCONA	set	14915
   899  0000                     _ODCOND	set	14962
   900  0000                     _ODCONC	set	14946
   901  0000                     _ODCONB	set	14930
   902  0000                     _ODCONA	set	14914
   903  0000                     _ODCONF	set	14994
   904  0000                     _ODCONE	set	14978
   905  0000                     _WPUC	set	14945
   906  0000                     _WPUA	set	14913
   907  0000                     _WPUB	set	14929
   908  0000                     _WPUE	set	14977
   909  0000                     _WPUF	set	14993
   910  0000                     _WPUD	set	14961
   911  0000                     _ANSELA	set	14912
   912  0000                     _ANSELF	set	14992
   913  0000                     _ANSELE	set	14976
   914  0000                     _ANSELB	set	14928
   915  0000                     _ANSELC	set	14944
   916  0000                     _ANSELD	set	14960
   917  0000                     _DMA2SSA	set	15321
   918  0000                     _DMA1SSA	set	15353
   919  0000                     _DMA2DSZ	set	15310
   920  0000                     _DMA2SSZ	set	15319
   921  0000                     _DMA2DSA	set	15312
   922  0000                     _DMA1DSZ	set	15342
   923  0000                     _DMA1SSZ	set	15351
   924  0000                     _DMA1DSA	set	15344
   925  0000                     _DMA1CON0bits	set	15356
   926  0000                     _DMA1CON1bits	set	15357
   927  0000                     _DMA2CON0	set	15324
   928  0000                     _DMA2AIRQ	set	15326
   929  0000                     _DMA2SIRQ	set	15327
   930  0000                     _DMA2CON1	set	15325
   931  0000                     _DMA1CON0	set	15356
   932  0000                     _DMA1AIRQ	set	15358
   933  0000                     _DMA1SIRQ	set	15359
   934  0000                     _DMA1CON1	set	15357
   935  0000                     _CLKRCON	set	15589
   936  0000                     _CLKRCLK	set	15590
   937  0000                     _SPI1INTFbits	set	15642
   938  0000                     _SPI1RXB	set	15632
   939  0000                     _SPI1TXB	set	15633
   940  0000                     _SPI1TCNTL	set	15634
   941  0000                     _SPI1CON0	set	15636
   942  0000                     _SPI1CLK	set	15644
   943  0000                     _SPI1BAUD	set	15641
   944  0000                     _SPI1CON2	set	15638
   945  0000                     _SPI1CON1	set	15637
   946  0000                     _U2RXB	set	15824
   947  0000                     _U2TXB	set	15826
   948  0000                     _U2ERRIE	set	15842
   949  0000                     _U2ERRIR	set	15841
   950  0000                     _U2UIR	set	15840
   951  0000                     _U2FIFO	set	15839
   952  0000                     _U2BRGH	set	15838
   953  0000                     _U2BRGL	set	15837
   954  0000                     _U2CON2	set	15836
   955  0000                     _U2CON1	set	15835
   956  0000                     _U2CON0	set	15834
   957  0000                     _U2P3L	set	15832
   958  0000                     _U2P2L	set	15830
   959  0000                     _U2P1L	set	15828
   960  0000                     _U1RXB	set	15848
   961  0000                     _U1TXB	set	15850
   962  0000                     _U1ERRIE	set	15866
   963  0000                     _U1ERRIR	set	15865
   964  0000                     _U1UIR	set	15864
   965  0000                     _U1FIFO	set	15863
   966  0000                     _U1BRGH	set	15862
   967  0000                     _U1BRGL	set	15861
   968  0000                     _U1CON2	set	15860
   969  0000                     _U1CON1	set	15859
   970  0000                     _U1CON0	set	15858
   971  0000                     _U1P3H	set	15857
   972  0000                     _U1P3L	set	15856
   973  0000                     _U1P2H	set	15855
   974  0000                     _U1P2L	set	15854
   975  0000                     _U1P1H	set	15853
   976  0000                     _U1P1L	set	15852
   977  0000                     _FVRCON	set	16065
   978  0000                     _ADFLTRL	set	16102
   979  0000                     _ADFLTRH	set	16103
   980  0000                     _ADCON0bits	set	16120
   981  0000                     _ADCON0	set	16120
   982  0000                     _ADCLK	set	16127
   983  0000                     _ADACT	set	16126
   984  0000                     _ADREF	set	16125
   985  0000                     _ADSTAT	set	16124
   986  0000                     _ADCON3	set	16123
   987  0000                     _ADCON2	set	16122
   988  0000                     _ADCON1	set	16121
   989  0000                     _ADPREH	set	16119
   990  0000                     _ADPREL	set	16118
   991  0000                     _ADCAP	set	16117
   992  0000                     _ADACQH	set	16116
   993  0000                     _ADACQL	set	16115
   994  0000                     _ADPCH	set	16113
   995  0000                     _ADRPT	set	16108
   996  0000                     _ADACCU	set	16106
   997  0000                     _ADSTPTH	set	16101
   998  0000                     _ADSTPTL	set	16100
   999  0000                     _ADUTHH	set	16097
  1000  0000                     _ADUTHL	set	16096
  1001  0000                     _ADLTHH	set	16095
  1002  0000                     _ADLTHL	set	16094
  1003  0000                     _CCPTMRS1bits	set	16223
  1004  0000                     _PORTFbits	set	16335
  1005  0000                     _LATCbits	set	16316
  1006  0000                     _LATDbits	set	16317
  1007  0000                     _PORTBbits	set	16331
  1008  0000                     _T2CON	set	16300
  1009  0000                     _T2TMR	set	16298
  1010  0000                     _T2PR	set	16299
  1011  0000                     _T2RST	set	16303
  1012  0000                     _T2HLT	set	16301
  1013  0000                     _T2CLKCON	set	16302
  1014  0000                     _PWM8DCL	set	16224
  1015  0000                     _PWM8DCH	set	16225
  1016  0000                     _PWM8CON	set	16226
  1017  0000                     _LATEbits	set	16318
  1018  0000                     _T5CONbits	set	16282
  1019  0000                     _T5CON	set	16282
  1020  0000                     _TMR5L	set	16280
  1021  0000                     _TMR5H	set	16281
  1022  0000                     _T5CLK	set	16285
  1023  0000                     _T5GATE	set	16284
  1024  0000                     _T5GCON	set	16283
  1025  0000                     _T6CON	set	16276
  1026  0000                     _T6TMR	set	16274
  1027  0000                     _T6PR	set	16275
  1028  0000                     _T6RST	set	16279
  1029  0000                     _T6HLT	set	16277
  1030  0000                     _T6CLKCON	set	16278
  1031  0000                     _TRISD	set	16325
  1032  0000                     _TRISC	set	16324
  1033  0000                     _TRISB	set	16323
  1034  0000                     _TRISA	set	16322
  1035  0000                     _TRISF	set	16327
  1036  0000                     _TRISE	set	16326
  1037  0000                     _LATC	set	16316
  1038  0000                     _LATB	set	16315
  1039  0000                     _LATF	set	16319
  1040  0000                     _LATA	set	16314
  1041  0000                     _LATD	set	16317
  1042  0000                     _LATE	set	16318
  1043  0000                     _IVTLOCKbits	set	16340
  1044  0000                     _IVTLOCK	set	16340
  1045  0000                     _INTCON0bits	set	16338
  1046  0000                     _GIE	set	130711
  1047  00FE9D                     
  1048                           ; BSR set to: 57
  1049  00FE9D  20                 	db	32
  1050  00FE9E  4D                 	db	77	;'M'
  1051  00FE9F  65                 	db	101	;'e'
  1052  00FEA0  73                 	db	115	;'s'
  1053  00FEA1  67                 	db	103	;'g'
  1054  00FEA2  20                 	db	32
  1055  00FEA3  25                 	db	37
  1056  00FEA4  64                 	db	100	;'d'
  1057  00FEA5  20                 	db	32
  1058  00FEA6  53                 	db	83	;'S'
  1059  00FEA7  74                 	db	116	;'t'
  1060  00FEA8  61                 	db	97	;'a'
  1061  00FEA9  63                 	db	99	;'c'
  1062  00FEAA  6B                 	db	107	;'k'
  1063  00FEAB  20                 	db	32
  1064  00FEAC  25                 	db	37
  1065  00FEAD  64                 	db	100	;'d'
  1066  00FEAE  20                 	db	32
  1067  00FEAF  20                 	db	32
  1068  00FEB0  20                 	db	32
  1069  00FEB1  20                 	db	32
  1070  00FEB2  20                 	db	32
  1071  00FEB3  20                 	db	32
  1072  00FEB4  00                 	db	0
  1073  00FEB5                     STR_30:
  1074                           
  1075                           ; BSR set to: 57
  1076  00FEB5  20                 	db	32
  1077  00FEB6  20                 	db	32
  1078  00FEB7  20                 	db	32
  1079  00FEB8  20                 	db	32
  1080  00FEB9  20                 	db	32
  1081  00FEBA  20                 	db	32
  1082  00FEBB  20                 	db	32
  1083  00FEBC  20                 	db	32
  1084  00FEBD  20                 	db	32
  1085  00FEBE  20                 	db	32
  1086  00FEBF  20                 	db	32
  1087  00FEC0  20                 	db	32
  1088  00FEC1  20                 	db	32
  1089  00FEC2  20                 	db	32
  1090  00FEC3  20                 	db	32
  1091  00FEC4  20                 	db	32
  1092  00FEC5  20                 	db	32
  1093  00FEC6  20                 	db	32
  1094  00FEC7  00                 	db	0
  1095  00FEC8                     STR_20:
  1096                           
  1097                           ; BSR set to: 57
  1098  00FEC8  48                 	db	72	;'H'
  1099  00FEC9  45                 	db	69	;'E'
  1100  00FECA  4C                 	db	76	;'L'
  1101  00FECB  50                 	db	80	;'P'
  1102  00FECC  20                 	db	32
  1103  00FECD  25                 	db	37
  1104  00FECE  73                 	db	115	;'s'
  1105  00FECF  20                 	db	32
  1106  00FED0  20                 	db	32
  1107  00FED1  20                 	db	32
  1108  00FED2  20                 	db	32
  1109  00FED3  20                 	db	32
  1110  00FED4  20                 	db	32
  1111  00FED5  20                 	db	32
  1112  00FED6  20                 	db	32
  1113  00FED7  20                 	db	32
  1114  00FED8  20                 	db	32
  1115  00FED9  20                 	db	32
  1116  00FEDA  00                 	db	0
  1117  00FEDB                     
  1118                           ; BSR set to: 57
  1119  00FEDB  44                 	db	68	;'D'
  1120  00FEDC  49                 	db	73	;'I'
  1121  00FEDD  53                 	db	83	;'S'
  1122  00FEDE  50                 	db	80	;'P'
  1123  00FEDF  4C                 	db	76	;'L'
  1124  00FEE0  41                 	db	65	;'A'
  1125  00FEE1  59                 	db	89	;'Y'
  1126  00FEE2  20                 	db	32
  1127  00FEE3  25                 	db	37
  1128  00FEE4  73                 	db	115	;'s'
  1129  00FEE5  20                 	db	32
  1130  00FEE6  20                 	db	32
  1131  00FEE7  20                 	db	32
  1132  00FEE8  20                 	db	32
  1133  00FEE9  20                 	db	32
  1134  00FEEA  20                 	db	32
  1135  00FEEB  20                 	db	32
  1136  00FEEC  20                 	db	32
  1137  00FEED  00                 	db	0
  1138  00FEEE                     STR_9:
  1139                           
  1140                           ; BSR set to: 57
  1141  00FEEE  50                 	db	80	;'P'
  1142  00FEEF  56                 	db	86	;'V'
  1143  00FEF0  20                 	db	32
  1144  00FEF1  20                 	db	32
  1145  00FEF2  20                 	db	32
  1146  00FEF3  50                 	db	80	;'P'
  1147  00FEF4  57                 	db	87	;'W'
  1148  00FEF5  52                 	db	82	;'R'
  1149  00FEF6  20                 	db	32
  1150  00FEF7  25                 	db	37
  1151  00FEF8  33                 	db	51	;'3'
  1152  00FEF9  2E                 	db	46
  1153  00FEFA  32                 	db	50	;'2'
  1154  00FEFB  66                 	db	102	;'f'
  1155  00FEFC  20                 	db	32
  1156  00FEFD  20                 	db	32
  1157  00FEFE  20                 	db	32
  1158  00FEFF  20                 	db	32
  1159  00FF00  00                 	db	0
  1160  00FF01                     STR_11:
  1161                           
  1162                           ; BSR set to: 57
  1163  00FF01  49                 	db	73	;'I'
  1164  00FF02  4E                 	db	78	;'N'
  1165  00FF03  56                 	db	86	;'V'
  1166  00FF04  20                 	db	32
  1167  00FF05  20                 	db	32
  1168  00FF06  50                 	db	80	;'P'
  1169  00FF07  57                 	db	87	;'W'
  1170  00FF08  52                 	db	82	;'R'
  1171  00FF09  20                 	db	32
  1172  00FF0A  25                 	db	37
  1173  00FF0B  33                 	db	51	;'3'
  1174  00FF0C  2E                 	db	46
  1175  00FF0D  32                 	db	50	;'2'
  1176  00FF0E  66                 	db	102	;'f'
  1177  00FF0F  20                 	db	32
  1178  00FF10  20                 	db	32
  1179  00FF11  20                 	db	32
  1180  00FF12  20                 	db	32
  1181  00FF13  00                 	db	0
  1182  00FF14                     STR_10:
  1183                           
  1184                           ; BSR set to: 57
  1185  00FF14  4C                 	db	76	;'L'
  1186  00FF15  4F                 	db	79	;'O'
  1187  00FF16  41                 	db	65	;'A'
  1188  00FF17  44                 	db	68	;'D'
  1189  00FF18  20                 	db	32
  1190  00FF19  50                 	db	80	;'P'
  1191  00FF1A  57                 	db	87	;'W'
  1192  00FF1B  52                 	db	82	;'R'
  1193  00FF1C  20                 	db	32
  1194  00FF1D  25                 	db	37
  1195  00FF1E  33                 	db	51	;'3'
  1196  00FF1F  2E                 	db	46
  1197  00FF20  32                 	db	50	;'2'
  1198  00FF21  66                 	db	102	;'f'
  1199  00FF22  20                 	db	32
  1200  00FF23  20                 	db	32
  1201  00FF24  20                 	db	32
  1202  00FF25  20                 	db	32
  1203  00FF26  00                 	db	0
  1204  00FF27                     STR_13:
  1205                           
  1206                           ; BSR set to: 57
  1207  00FF27  42                 	db	66	;'B'
  1208  00FF28  56                 	db	86	;'V'
  1209  00FF29  20                 	db	32
  1210  00FF2A  25                 	db	37
  1211  00FF2B  32                 	db	50	;'2'
  1212  00FF2C  2E                 	db	46
  1213  00FF2D  32                 	db	50	;'2'
  1214  00FF2E  66                 	db	102	;'f'
  1215  00FF2F  20                 	db	32
  1216  00FF30  42                 	db	66	;'B'
  1217  00FF31  41                 	db	65	;'A'
  1218  00FF32  20                 	db	32
  1219  00FF33  25                 	db	37
  1220  00FF34  32                 	db	50	;'2'
  1221  00FF35  2E                 	db	46
  1222  00FF36  32                 	db	50	;'2'
  1223  00FF37  66                 	db	102	;'f'
  1224  00FF38  20                 	db	32
  1225  00FF39  00                 	db	0
  1226  00FF3A                     STR_14:
  1227                           
  1228                           ; BSR set to: 57
  1229  00FF3A  43                 	db	67	;'C'
  1230  00FF3B  56                 	db	86	;'V'
  1231  00FF3C  20                 	db	32
  1232  00FF3D  25                 	db	37
  1233  00FF3E  32                 	db	50	;'2'
  1234  00FF3F  2E                 	db	46
  1235  00FF40  32                 	db	50	;'2'
  1236  00FF41  66                 	db	102	;'f'
  1237  00FF42  20                 	db	32
  1238  00FF43  4C                 	db	76	;'L'
  1239  00FF44  41                 	db	65	;'A'
  1240  00FF45  20                 	db	32
  1241  00FF46  25                 	db	37
  1242  00FF47  32                 	db	50	;'2'
  1243  00FF48  2E                 	db	46
  1244  00FF49  32                 	db	50	;'2'
  1245  00FF4A  66                 	db	102	;'f'
  1246  00FF4B  20                 	db	32
  1247  00FF4C  00                 	db	0
  1248  00FF4D                     STR_12:
  1249                           
  1250                           ; BSR set to: 57
  1251  00FF4D  50                 	db	80	;'P'
  1252  00FF4E  56                 	db	86	;'V'
  1253  00FF4F  20                 	db	32
  1254  00FF50  25                 	db	37
  1255  00FF51  32                 	db	50	;'2'
  1256  00FF52  2E                 	db	46
  1257  00FF53  32                 	db	50	;'2'
  1258  00FF54  66                 	db	102	;'f'
  1259  00FF55  20                 	db	32
  1260  00FF56  50                 	db	80	;'P'
  1261  00FF57  41                 	db	65	;'A'
  1262  00FF58  20                 	db	32
  1263  00FF59  25                 	db	37
  1264  00FF5A  32                 	db	50	;'2'
  1265  00FF5B  2E                 	db	46
  1266  00FF5C  32                 	db	50	;'2'
  1267  00FF5D  66                 	db	102	;'f'
  1268  00FF5E  20                 	db	32
  1269  00FF5F  00                 	db	0
  1270  00FF60                     STR_8:
  1271                           
  1272                           ; BSR set to: 57
  1273  00FF60  20                 	db	32
  1274  00FF61  56                 	db	86	;'V'
  1275  00FF62  54                 	db	84	;'T'
  1276  00FF63  45                 	db	69	;'E'
  1277  00FF64  52                 	db	82	;'R'
  1278  00FF65  4D                 	db	77	;'M'
  1279  00FF66  20                 	db	32
  1280  00FF67  23                 	db	35
  1281  00FF68  32                 	db	50	;'2'
  1282  00FF69  20                 	db	32
  1283  00FF6A  20                 	db	32
  1284  00FF6B  20                 	db	32
  1285  00FF6C  20                 	db	32
  1286  00FF6D  20                 	db	32
  1287  00FF6E  20                 	db	32
  1288  00FF6F  20                 	db	32
  1289  00FF70  00                 	db	0
  1290  00FF71                     STR_4:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FF71  20                 	db	32
  1294  00FF72  4E                 	db	78	;'N'
  1295  00FF73  53                 	db	83	;'S'
  1296  00FF74  41                 	db	65	;'A'
  1297  00FF75  53                 	db	83	;'S'
  1298  00FF76  50                 	db	80	;'P'
  1299  00FF77  4F                 	db	79	;'O'
  1300  00FF78  4F                 	db	79	;'O'
  1301  00FF79  4B                 	db	75	;'K'
  1302  00FF7A  20                 	db	32
  1303  00FF7B  20                 	db	32
  1304  00FF7C  20                 	db	32
  1305  00FF7D  20                 	db	32
  1306  00FF7E  20                 	db	32
  1307  00FF7F  20                 	db	32
  1308  00FF80  20                 	db	32
  1309  00FF81  00                 	db	0
  1310  00FF82                     STR_1:
  1311                           
  1312                           ; BSR set to: 57
  1313  00FF82  20                 	db	32
  1314  00FF83  4D                 	db	77	;'M'
  1315  00FF84  42                 	db	66	;'B'
  1316  00FF85  4D                 	db	77	;'M'
  1317  00FF86  43                 	db	67	;'C'
  1318  00FF87  20                 	db	32
  1319  00FF88  53                 	db	83	;'S'
  1320  00FF89  4F                 	db	79	;'O'
  1321  00FF8A  4C                 	db	76	;'L'
  1322  00FF8B  41                 	db	65	;'A'
  1323  00FF8C  52                 	db	82	;'R'
  1324  00FF8D  4D                 	db	77	;'M'
  1325  00FF8E  4F                 	db	79	;'O'
  1326  00FF8F  4E                 	db	78	;'N'
  1327  00FF90  20                 	db	32
  1328  00FF91  20                 	db	32
  1329  00FF92  00                 	db	0
  1330  00FF93                     STR_5:
  1331                           
  1332                           ; BSR set to: 57
  1333  00FF93  20                 	db	32
  1334  00FF94  53                 	db	83	;'S'
  1335  00FF95  45                 	db	69	;'E'
  1336  00FF96  51                 	db	81	;'Q'
  1337  00FF97  55                 	db	85	;'U'
  1338  00FF98  45                 	db	69	;'E'
  1339  00FF99  4E                 	db	78	;'N'
  1340  00FF9A  43                 	db	67	;'C'
  1341  00FF9B  45                 	db	69	;'E'
  1342  00FF9C  20                 	db	32
  1343  00FF9D  54                 	db	84	;'T'
  1344  00FF9E  45                 	db	69	;'E'
  1345  00FF9F  53                 	db	83	;'S'
  1346  00FFA0  54                 	db	84	;'T'
  1347  00FFA1  20                 	db	32
  1348  00FFA2  20                 	db	32
  1349  00FFA3  00                 	db	0
  1350  00FFA4                     STR_24:
  1351                           
  1352                           ; BSR set to: 57
  1353  00FFA4  76                 	db	118	;'v'
  1354  00FFA5  74                 	db	116	;'t'
  1355  00FFA6  65                 	db	101	;'e'
  1356  00FFA7  72                 	db	114	;'r'
  1357  00FFA8  6D                 	db	109	;'m'
  1358  00FFA9  20                 	db	32
  1359  00FFAA  25                 	db	37
  1360  00FFAB  78                 	db	120	;'x'
  1361  00FFAC  3A                 	db	58	;':'
  1362  00FFAD  25                 	db	37
  1363  00FFAE  78                 	db	120	;'x'
  1364  00FFAF  20                 	db	32
  1365  00FFB0  20                 	db	32
  1366  00FFB1  20                 	db	32
  1367  00FFB2  00                 	db	0
  1368  00FFB3                     STR_2:
  1369                           
  1370                           ; BSR set to: 57
  1371  00FFB3  20                 	db	32
  1372  00FFB4  56                 	db	86	;'V'
  1373  00FFB5  65                 	db	101	;'e'
  1374  00FFB6  72                 	db	114	;'r'
  1375  00FFB7  73                 	db	115	;'s'
  1376  00FFB8  69                 	db	105	;'i'
  1377  00FFB9  6F                 	db	111	;'o'
  1378  00FFBA  6E                 	db	110	;'n'
  1379  00FFBB  20                 	db	32
  1380  00FFBC  25                 	db	37
  1381  00FFBD  73                 	db	115	;'s'
  1382  00FFBE  20                 	db	32
  1383  00FFBF  20                 	db	32
  1384  00FFC0  20                 	db	32
  1385  00FFC1  00                 	db	0
  1386  00FFC2                     STR_18:
  1387                           
  1388                           ; BSR set to: 57
  1389  00FFC2  4E                 	db	78	;'N'
  1390  00FFC3  6F                 	db	111	;'o'
  1391  00FFC4  76                 	db	118	;'v'
  1392  00FFC5  20                 	db	32
  1393  00FFC6  32                 	db	50	;'2'
  1394  00FFC7  39                 	db	57	;'9'
  1395  00FFC8  20                 	db	32
  1396  00FFC9  32                 	db	50	;'2'
  1397  00FFCA  30                 	db	48	;'0'
  1398  00FFCB  31                 	db	49	;'1'
  1399  00FFCC  39                 	db	57	;'9'
  1400  00FFCD  00                 	db	0
  1401  00FFCE                     STR_22:
  1402                           
  1403                           ; BSR set to: 57
  1404  00FFCE  25                 	db	37
  1405  00FFCF  73                 	db	115	;'s'
  1406  00FFD0  20                 	db	32
  1407  00FFD1  20                 	db	32
  1408  00FFD2  20                 	db	32
  1409  00FFD3  20                 	db	32
  1410  00FFD4  20                 	db	32
  1411  00FFD5  20                 	db	32
  1412  00FFD6  20                 	db	32
  1413  00FFD7  00                 	db	0
  1414  00FFD8                     STR_19:
  1415                           
  1416                           ; BSR set to: 57
  1417  00FFD8  31                 	db	49	;'1'
  1418  00FFD9  33                 	db	51	;'3'
  1419  00FFDA  3A                 	db	58	;':'
  1420  00FFDB  31                 	db	49	;'1'
  1421  00FFDC  38                 	db	56	;'8'
  1422  00FFDD  3A                 	db	58	;':'
  1423  00FFDE  30                 	db	48	;'0'
  1424  00FFDF  33                 	db	51	;'3'
  1425  00FFE0  00                 	db	0
  1426  00FFE1                     STR_3:
  1427                           
  1428                           ; BSR set to: 57
  1429  00FFE1  30                 	db	48	;'0'
  1430  00FFE2  2E                 	db	46
  1431  00FFE3  39                 	db	57	;'9'
  1432  00FFE4  39                 	db	57	;'9'
  1433  00FFE5  00                 	db	0
  1434  00FFE6                     STR_37:
  1435                           
  1436                           ; BSR set to: 57
  1437  00FFE6  49                 	db	73	;'I'
  1438  00FFE7  4E                 	db	78	;'N'
  1439  00FFE8  46                 	db	70	;'F'
  1440  00FFE9  00                 	db	0
  1441  00FFEA                     STR_41:
  1442                           
  1443                           ; BSR set to: 57
  1444  00FFEA  4E                 	db	78	;'N'
  1445  00FFEB  41                 	db	65	;'A'
  1446  00FFEC  4E                 	db	78	;'N'
  1447  00FFED  00                 	db	0
  1448  00FFEE                     STR_38:
  1449                           
  1450                           ; BSR set to: 57
  1451  00FFEE  69                 	db	105	;'i'
  1452  00FFEF  6E                 	db	110	;'n'
  1453  00FFF0  66                 	db	102	;'f'
  1454  00FFF1  00                 	db	0
  1455  00FFF2                     STR_42:
  1456                           
  1457                           ; BSR set to: 57
  1458  00FFF2  6E                 	db	110	;'n'
  1459  00FFF3  61                 	db	97	;'a'
  1460  00FFF4  6E                 	db	110	;'n'
  1461  00FFF5  00                 	db	0
  1462  00FFF6                     STR_45:
  1463                           
  1464                           ; BSR set to: 57
  1465  00FFF6  6C                 	db	108	;'l'
  1466  00FFF7  66                 	db	102	;'f'
  1467  00FFF8  00                 	db	0
  1468  00FFF9                     STR_16:
  1469                           
  1470                           ; BSR set to: 57
  1471  00FFF9  25                 	db	37
  1472  00FFFA  63                 	db	99	;'c'
  1473  00FFFB  00                 	db	0
  1474  00FFFC                     STR_15:
  1475                           
  1476                           ; BSR set to: 57
  1477  00FFFC  25                 	db	37
  1478  00FFFD  73                 	db	115	;'s'
  1479  00FFFE  00                 	db	0
  1480  0000                     
  1481                           ; #config settings
  1482  00FFFF  00                 	db	0	; dummy byte at the end
  1483  0000                     
  1484                           	psect	cinit
  1485  016C66                     __pcinit:
  1486                           	opt callstack 0
  1487  016C66                     start_initialization:
  1488                           	opt callstack 0
  1489  016C66                     __initialization:
  1490                           	opt callstack 0
  1491                           
  1492                           ; Initialize objects allocated to BANK2 (187 bytes)
  1493                           ; load TBLPTR registers with __pidataBANK2
  1494  016C66  0EDC               	movlw	low __pidataBANK2
  1495  016C68  6EF6               	movwf	tblptrl,c
  1496  016C6A  0E6F               	movlw	high __pidataBANK2
  1497  016C6C  6EF7               	movwf	tblptrh,c
  1498  016C6E  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1499  016C70  6EF8               	movwf	tblptru,c
  1500  016C72  EE00  F200         	lfsr	0,__pdataBANK2
  1501  016C76  EE20 F0BB          	lfsr	2,187
  1502  016C7A                     copy_data0:
  1503  016C7A  0009               	tblrd		*+
  1504  016C7C  006F FFD7 FFEE     	movff	tablat,postinc0
  1505  016C82  50DD               	movf	postdec2,w,c
  1506  016C84  50D9               	movf	fsr2l,w,c
  1507  016C86  E1F9               	bnz	copy_data0
  1508                           
  1509                           ; Initialize objects allocated to BANK1 (16 bytes)
  1510                           ; load TBLPTR registers with __pidataBANK1
  1511  016C88  0EAA               	movlw	low __pidataBANK1
  1512  016C8A  6EF6               	movwf	tblptrl,c
  1513  016C8C  0E87               	movlw	high __pidataBANK1
  1514  016C8E  6EF7               	movwf	tblptrh,c
  1515  016C90  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1516  016C92  6EF8               	movwf	tblptru,c
  1517  016C94  EE00  F1D0         	lfsr	0,__pdataBANK1
  1518  016C98  EE20 F010          	lfsr	2,16
  1519  016C9C                     copy_data1:
  1520  016C9C  0009               	tblrd		*+
  1521  016C9E  006F FFD7 FFEE     	movff	tablat,postinc0
  1522  016CA4  50DD               	movf	postdec2,w,c
  1523  016CA6  50D9               	movf	fsr2l,w,c
  1524  016CA8  E1F9               	bnz	copy_data1
  1525                           
  1526                           ; Initialize objects allocated to BANK0 (47 bytes)
  1527                           ; load TBLPTR registers with __pidataBANK0
  1528  016CAA  0E3A               	movlw	low __pidataBANK0
  1529  016CAC  6EF6               	movwf	tblptrl,c
  1530  016CAE  0E81               	movlw	high __pidataBANK0
  1531  016CB0  6EF7               	movwf	tblptrh,c
  1532  016CB2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1533  016CB4  6EF8               	movwf	tblptru,c
  1534  016CB6  EE00  F0C7         	lfsr	0,__pdataBANK0
  1535  016CBA  EE20 F02F          	lfsr	2,47
  1536  016CBE                     copy_data2:
  1537  016CBE  0009               	tblrd		*+
  1538  016CC0  006F FFD7 FFEE     	movff	tablat,postinc0
  1539  016CC6  50DD               	movf	postdec2,w,c
  1540  016CC8  50D9               	movf	fsr2l,w,c
  1541  016CCA  E1F9               	bnz	copy_data2
  1542                           
  1543                           ; Clear objects allocated to BANK7 (255 bytes)
  1544  016CCC  EE01  F300         	lfsr	0,__pbssBANK7
  1545  016CD0  EE20 F0FF          	lfsr	2,255
  1546  016CD4                     clear_0:
  1547  016CD4  6AEE               	clrf	postinc0,c
  1548  016CD6  50DD               	movf	postdec2,w,c
  1549  016CD8  50D9               	movf	fsr2l,w,c
  1550  016CDA  E1FC               	bnz	clear_0
  1551  016CDC  50DA               	movf	fsr2h,w,c
  1552  016CDE  E1FA               	bnz	clear_0
  1553                           
  1554                           ; Clear objects allocated to BANK6 (255 bytes)
  1555  016CE0  EE01  F200         	lfsr	0,__pbssBANK6
  1556  016CE4  EE20 F0FF          	lfsr	2,255
  1557  016CE8                     clear_1:
  1558  016CE8  6AEE               	clrf	postinc0,c
  1559  016CEA  50DD               	movf	postdec2,w,c
  1560  016CEC  50D9               	movf	fsr2l,w,c
  1561  016CEE  E1FC               	bnz	clear_1
  1562  016CF0  50DA               	movf	fsr2h,w,c
  1563  016CF2  E1FA               	bnz	clear_1
  1564                           
  1565                           ; Clear objects allocated to BANK5 (218 bytes)
  1566  016CF4  EE01  F100         	lfsr	0,__pbssBANK5
  1567  016CF8  0EDA               	movlw	218
  1568  016CFA                     clear_2:
  1569  016CFA  6AEE               	clrf	postinc0,c
  1570  016CFC  06E8               	decf	wreg,f,c
  1571  016CFE  E1FD               	bnz	clear_2
  1572                           
  1573                           ; Clear objects allocated to BANK4 (67 bytes)
  1574  016D00  EE01  F000         	lfsr	0,__pbssBANK4
  1575  016D04  0E43               	movlw	67
  1576  016D06                     clear_3:
  1577  016D06  6AEE               	clrf	postinc0,c
  1578  016D08  06E8               	decf	wreg,f,c
  1579  016D0A  E1FD               	bnz	clear_3
  1580                           
  1581                           ; Clear objects allocated to BANK3 (211 bytes)
  1582  016D0C  EE00  F300         	lfsr	0,__pbssBANK3
  1583  016D10  0ED3               	movlw	211
  1584  016D12                     clear_4:
  1585  016D12  6AEE               	clrf	postinc0,c
  1586  016D14  06E8               	decf	wreg,f,c
  1587  016D16  E1FD               	bnz	clear_4
  1588                           
  1589                           ; Clear objects allocated to BANK2 (64 bytes)
  1590  016D18  EE00  F2BB         	lfsr	0,__pbssBANK2
  1591  016D1C  0E40               	movlw	64
  1592  016D1E                     clear_5:
  1593  016D1E  6AEE               	clrf	postinc0,c
  1594  016D20  06E8               	decf	wreg,f,c
  1595  016D22  E1FD               	bnz	clear_5
  1596                           
  1597                           ; Clear objects allocated to BANK1 (208 bytes)
  1598  016D24  EE00  F100         	lfsr	0,__pbssBANK1
  1599  016D28  0ED0               	movlw	208
  1600  016D2A                     clear_6:
  1601  016D2A  6AEE               	clrf	postinc0,c
  1602  016D2C  06E8               	decf	wreg,f,c
  1603  016D2E  E1FD               	bnz	clear_6
  1604                           
  1605                           ; Clear objects allocated to BANK0 (103 bytes)
  1606  016D30  EE00  F060         	lfsr	0,__pbssBANK0
  1607  016D34  0E67               	movlw	103
  1608  016D36                     clear_7:
  1609  016D36  6AEE               	clrf	postinc0,c
  1610  016D38  06E8               	decf	wreg,f,c
  1611  016D3A  E1FD               	bnz	clear_7
  1612                           
  1613                           ; Clear objects allocated to COMRAM (49 bytes)
  1614  016D3C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1615  016D40  0E31               	movlw	49
  1616  016D42                     clear_8:
  1617  016D42  6AEE               	clrf	postinc0,c
  1618  016D44  06E8               	decf	wreg,f,c
  1619  016D46  E1FD               	bnz	clear_8
  1620                           
  1621                           ;
  1622                           ; Setup IVTBASE
  1623                           ;
  1624  016D48  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1625  016D4A  6ED5               	movwf	213,c
  1626  016D4C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1627  016D4E  6ED6               	movwf	214,c
  1628  016D50  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1629  016D52  6ED7               	movwf	215,c
  1630  016D54                     end_of_initialization:
  1631                           	opt callstack 0
  1632  016D54                     __end_of__initialization:
  1633                           	opt callstack 0
  1634  016D54  0100               	movlb	0
  1635  016D56  EF71  F099         	goto	_main	;jump to C main() function
  1636                           
  1637                           	psect	bssCOMRAM
  1638  000001                     __pbssCOMRAM:
  1639                           	opt callstack 0
  1640  000001                     _ADCC_ADTI_InterruptHandler:
  1641                           	opt callstack 0
  1642  000001                     	ds	3
  1643  000004                     _ADCC_ADI_InterruptHandler:
  1644                           	opt callstack 0
  1645  000004                     	ds	3
  1646  000007                     _UART1_TxInterruptHandler:
  1647                           	opt callstack 0
  1648  000007                     	ds	3
  1649  00000A                     _UART1_RxInterruptHandler:
  1650                           	opt callstack 0
  1651  00000A                     	ds	3
  1652  00000D                     _UART2_TxInterruptHandler:
  1653                           	opt callstack 0
  1654  00000D                     	ds	3
  1655  000010                     _UART2_RxInterruptHandler:
  1656                           	opt callstack 0
  1657  000010                     	ds	3
  1658  000013                     _INT1_InterruptHandler:
  1659                           	opt callstack 0
  1660  000013                     	ds	3
  1661  000016                     _INT0_InterruptHandler:
  1662                           	opt callstack 0
  1663  000016                     	ds	3
  1664  000019                     _nout:
  1665                           	opt callstack 0
  1666  000019                     	ds	2
  1667  00001B                     _width:
  1668                           	opt callstack 0
  1669  00001B                     	ds	2
  1670  00001D                     _prec:
  1671                           	opt callstack 0
  1672  00001D                     	ds	2
  1673  00001F                     _flags:
  1674                           	opt callstack 0
  1675  00001F                     	ds	2
  1676  000021                     TMR5_ISR@CountCallBack:
  1677                           	opt callstack 0
  1678  000021                     	ds	2
  1679  000023                     _timer5ReloadVal:
  1680                           	opt callstack 0
  1681  000023                     	ds	2
  1682  000025                     _mode_sw:
  1683                           	opt callstack 0
  1684  000025                     	ds	1
  1685  000026                     _uart2RxCount:
  1686                           	opt callstack 0
  1687  000026                     	ds	1
  1688  000027                     _uart2RxTail:
  1689                           	opt callstack 0
  1690  000027                     	ds	1
  1691  000028                     _uart2RxHead:
  1692                           	opt callstack 0
  1693  000028                     	ds	1
  1694  000029                     _uart2TxBufferRemaining:
  1695                           	opt callstack 0
  1696  000029                     	ds	1
  1697  00002A                     _uart2TxTail:
  1698                           	opt callstack 0
  1699  00002A                     	ds	1
  1700  00002B                     _uart2TxHead:
  1701                           	opt callstack 0
  1702  00002B                     	ds	1
  1703  00002C                     _uart1RxCount:
  1704                           	opt callstack 0
  1705  00002C                     	ds	1
  1706  00002D                     _uart1RxTail:
  1707                           	opt callstack 0
  1708  00002D                     	ds	1
  1709  00002E                     _uart1RxHead:
  1710                           	opt callstack 0
  1711  00002E                     	ds	1
  1712  00002F                     _uart1TxBufferRemaining:
  1713                           	opt callstack 0
  1714  00002F                     	ds	1
  1715  000030                     _uart1TxTail:
  1716                           	opt callstack 0
  1717  000030                     	ds	1
  1718  000031                     _uart1TxHead:
  1719                           	opt callstack 0
  1720  000031                     	ds	1
  1721                           
  1722                           	psect	bssBANK0
  1723  000060                     __pbssBANK0:
  1724                           	opt callstack 0
  1725  000060                     _S:
  1726                           	opt callstack 0
  1727  000060                     	ds	41
  1728  000089                     _tickCount:
  1729                           	opt callstack 0
  1730  000089                     	ds	24
  1731  0000A1                     _spi_link:
  1732                           	opt callstack 0
  1733  0000A1                     	ds	12
  1734  0000AD                     floorf@F524:
  1735                           	opt callstack 0
  1736  0000AD                     	ds	4
  1737  0000B1                     ___fpclassifyf@F463:
  1738                           	opt callstack 0
  1739  0000B1                     	ds	4
  1740  0000B5                     _utctime:
  1741                           	opt callstack 0
  1742  0000B5                     	ds	4
  1743  0000B9                     wdtdelay@dcount:
  1744                           	opt callstack 0
  1745  0000B9                     	ds	4
  1746  0000BD                     _P:
  1747                           	opt callstack 0
  1748  0000BD                     	ds	4
  1749  0000C1                     _TMR5_InterruptHandler:
  1750                           	opt callstack 0
  1751  0000C1                     	ds	3
  1752  0000C4                     _TMR6_InterruptHandler:
  1753                           	opt callstack 0
  1754  0000C4                     	ds	3
  1755                           
  1756                           	psect	dataBANK0
  1757  0000C7                     __pdataBANK0:
  1758                           	opt callstack 0
  1759  0000C7                     _R:
  1760                           	opt callstack 0
  1761  0000C7                     	ds	40
  1762  0000EF                     stoa@F1166:
  1763                           	opt callstack 0
  1764  0000EF                     	ds	7
  1765                           
  1766                           	psect	bssBANK1
  1767  000100                     __pbssBANK1:
  1768                           	opt callstack 0
  1769  000100                     _C:
  1770                           	opt callstack 0
  1771  000100                     	ds	120
  1772  000178                     _dbuf:
  1773                           	opt callstack 0
  1774  000178                     	ds	80
  1775  0001C8                     _seed:
  1776                           	opt callstack 0
  1777  0001C8                     	ds	8
  1778                           
  1779                           	psect	dataBANK1
  1780  0001D0                     __pdataBANK1:
  1781                           	opt callstack 0
  1782  0001D0                     _port_data:
  1783                           	opt callstack 0
  1784  0001D0                     	ds	16
  1785                           
  1786                           	psect	bssBANK2
  1787  0002BB                     __pbssBANK2:
  1788                           	opt callstack 0
  1789  0002BB                     _uart1TxBuffer:
  1790                           	opt callstack 0
  1791  0002BB                     	ds	64
  1792                           
  1793                           	psect	dataBANK2
  1794  000200                     __pdataBANK2:
  1795                           	opt callstack 0
  1796  000200                     _V:
  1797                           	opt callstack 0
  1798  000200                     	ds	187
  1799                           
  1800                           	psect	bssBANK3
  1801  000300                     __pbssBANK3:
  1802                           	opt callstack 0
  1803  000300                     lp_filter@smooth:
  1804                           	opt callstack 0
  1805  000300                     	ds	80
  1806  000350                     _uart2TxBuffer:
  1807                           	opt callstack 0
  1808  000350                     	ds	64
  1809  000390                     _ring_buf1:
  1810                           	opt callstack 0
  1811  000390                     	ds	67
  1812                           
  1813                           	psect	bssBANK4
  1814  000400                     __pbssBANK4:
  1815                           	opt callstack 0
  1816  000400                     _ring_buf2:
  1817                           	opt callstack 0
  1818  000400                     	ds	67
  1819                           
  1820                           	psect	bssBANK5
  1821  000500                     __pbssBANK5:
  1822                           	opt callstack 0
  1823  000500                     _D:
  1824                           	opt callstack 0
  1825  000500                     	ds	218
  1826                           
  1827                           	psect	bssBANK6
  1828  000600                     __pbssBANK6:
  1829                           	opt callstack 0
  1830  000600                     _uart1RxBuffer:
  1831                           	opt callstack 0
  1832  000600                     	ds	255
  1833                           
  1834                           	psect	bssBANK7
  1835  000700                     __pbssBANK7:
  1836                           	opt callstack 0
  1837  000700                     _uart2RxBuffer:
  1838                           	opt callstack 0
  1839  000700                     	ds	255
  1840                           
  1841                           	psect	cstackBANK1
  1842  0001E0                     __pcstackBANK1:
  1843                           	opt callstack 0
  1844  0001E0                     ??_TMR5_ISR:
  1845                           
  1846                           ; 1 bytes @ 0x0
  1847  0001E0                     	ds	4
  1848                           
  1849                           	psect	cstackBANK0
  1850  0000F6                     __pcstackBANK0:
  1851                           	opt callstack 0
  1852  0000F6                     ??_INT1_ISR:
  1853                           
  1854                           ; 1 bytes @ 0x0
  1855  0000F6                     	ds	4
  1856                           
  1857                           	psect	cstackCOMRAM
  1858  000052                     __pcstackCOMRAM:
  1859                           	opt callstack 0
  1860  000052                     ??_ADCC_ThresholdISR:
  1861  000052                     
  1862                           ; 1 bytes @ 0x0
  1863  000052                     	ds	5
  1864  000057                     ??_TMR6_ISR:
  1865                           
  1866                           ; 1 bytes @ 0x5
  1867  000057                     	ds	1
  1868  000058                     
  1869                           ; 1 bytes @ 0x6
  1870 ;;
  1871 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1872 ;;
  1873 ;; *************** function _main *****************
  1874 ;; Defined at:
  1875 ;;		line 158 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  mode            1  [STACK] enum E17005
  1880 ;;  k               1    0        unsigned char 
  1881 ;;  j               1    0        unsigned char 
  1882 ;;  i               1    0        unsigned char 
  1883 ;;  inp_index       1    0        unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1  [STACK] void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 1/1
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels required when called:   19
  1899 ;; This function calls:
  1900 ;;		_SYSTEM_Initialize
  1901 ;;		_StartTimer
  1902 ;;		_TimerDone
  1903 ;;		_WaitMs
  1904 ;;		_calc_model_data
  1905 ;;		_check_adc_scan
  1906 ;;		_check_help
  1907 ;;		_clear_adc_scan
  1908 ;;		_convert_adc_data
  1909 ;;		_eaDogM_WriteCommand
  1910 ;;		_get_switch
  1911 ;;		_get_vterm_ptr
  1912 ;;		_init_display
  1913 ;;		_mode_lamp_dim
  1914 ;;		_set_display_info
  1915 ;;		_set_vterm
  1916 ;;		_sprintf
  1917 ;;		_srand
  1918 ;;		_start_adc_scan
  1919 ;;		_start_switch_handler
  1920 ;;		_update_lcd
  1921 ;; This function is called by:
  1922 ;;		Startup code after reset
  1923 ;; This function uses a reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text0
  1927  0132E2                     __ptext0:
  1928                           	opt callstack 0
  1929  0132E2                     _main:
  1930                           	opt callstack 0
  1931                           
  1932                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1933  0132E2  52E6               	movf	postinc1,f,c
  1934                           
  1935                           ;main.c: 163:  SYSTEM_Initialize();
  1936                           
  1937                           ;incstack = 0
  1938  0132E4  ECC6  F0BE         	call	_SYSTEM_Initialize	;wreg free
  1939                           
  1940                           ; BSR set to: 60
  1941                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1942  0132E8  8ED2               	bsf	210,7,c	;volatile
  1943                           
  1944                           ; BSR set to: 60
  1945                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1946  0132EA  8CD2               	bsf	210,6,c	;volatile
  1947                           
  1948                           ; BSR set to: 60
  1949                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1950  0132EC  0102               	movlb	2	; () banked
  1951  0132EE  6B00               	clrf	_V& (0+255),b	;volatile
  1952                           
  1953                           ; BSR set to: 2
  1954                           ;main.c: 176:  WaitMs(300);
  1955  0132F0  0E2C               	movlw	44
  1956  0132F2  6EE6               	movwf	postinc1,c
  1957  0132F4  0E01               	movlw	1
  1958  0132F6  6EE6               	movwf	postinc1,c
  1959  0132F8  ECEB  F0BF         	call	_WaitMs	;wreg free
  1960                           
  1961                           ;main.c: 177:  if (PORTBbits.RB0) {
  1962  0132FC  A0CB               	btfss	203,0,c	;volatile
  1963  0132FE  D004               	goto	l10266
  1964                           
  1965                           ;main.c: 178:   mode = UI_STATE_HOST;
  1966                           ;stkvar	_mode @ sp[(-1)+0]
  1967  013300  0EFF               	movlw	-1
  1968  013302  6AE3               	clrf	plusw1,c
  1969  013304  2AE3               	incf	plusw1,f,c
  1970                           
  1971                           ;main.c: 179:  } else {
  1972  013306  D004               	goto	l10268
  1973  013308                     l10266:
  1974                           
  1975                           ;main.c: 180:   mode = UI_STATE_LOG;
  1976                           ;stkvar	_mode @ sp[(-1)+0]
  1977  013308  0EFF               	movlw	-1
  1978  01330A  6AE3               	clrf	plusw1,c
  1979  01330C  80E3               	bsf	plusw1,0,c
  1980  01330E  82E3               	bsf	plusw1,1,c	;indir
  1981  013310                     l10268:
  1982                           
  1983                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1984                           ;stkvar	_mode @ sp[(-1)+0]
  1985  013310  0EFF               	movlw	-1
  1986  013312  04E3               	decf	plusw1,w,c
  1987  013314  A4D8               	btfss	status,2,c
  1988  013316  D007               	goto	l1246
  1989                           
  1990                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1991  013318  80BD               	bsf	189,0,c	;volatile
  1992                           
  1993                           ;main.c: 185:   V.mode_pwm = 70;
  1994  01331A  0E00               	movlw	0
  1995  01331C  0102               	movlb	2	; () banked
  1996  01331E  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1997  013320  0E46               	movlw	70
  1998  013322  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1999                           
  2000                           ;main.c: 186:  } else {
  2001  013324  D004               	goto	l10272
  2002  013326                     l1246:
  2003  013326  90BD               	bcf	189,0,c	;volatile
  2004                           
  2005                           ;main.c: 188:   V.mode_pwm = 0;
  2006  013328  0102               	movlb	2	; () banked
  2007  01332A  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2008  01332C  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2009  01332E                     l10272:
  2010                           
  2011                           ; BSR set to: 2
  2012                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  2013  01332E  0060  FA57  FFE6   	movff	_V+149,postinc1
  2014  013334  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2015  01333A  EC89  F0C3         	call	_mode_lamp_dim	;wreg free
  2016  01333E  D0D0               	goto	l10316
  2017  013340                     l10274:
  2018                           
  2019                           ; BSR set to: 2
  2020                           ;main.c: 201:    init_display();
  2021  013340  ECAD  F0B6         	call	_init_display	;wreg free
  2022                           
  2023                           ; BSR set to: 61
  2024                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  2025  013344  0E0C               	movlw	12
  2026  013346  6EE6               	movwf	postinc1,c
  2027  013348  ECE5  F0C3         	call	_eaDogM_WriteCommand	;wreg free
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;main.c: 204:    V.ui_state = mode;
  2031                           ;stkvar	_mode @ sp[(-1)+0]
  2032  01334C  0EFF               	movlw	-1
  2033  01334E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 205:    srand(1957);
  2037  013354  0EA5               	movlw	165
  2038  013356  6EE6               	movwf	postinc1,c
  2039  013358  0E07               	movlw	7
  2040  01335A  6EE6               	movwf	postinc1,c
  2041  01335C  EC21  F0C0         	call	_srand	;wreg free
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;main.c: 206:    set_vterm(0);
  2045  013360  0E00               	movlw	0
  2046  013362  6EE6               	movwf	postinc1,c
  2047  013364  EC60  F0C3         	call	_set_vterm	;wreg free
  2048                           
  2049                           ; BSR set to: 5
  2050                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2051  013368  0E82               	movlw	low STR_1
  2052  01336A  6EE6               	movwf	postinc1,c
  2053  01336C  0EFF               	movlw	high STR_1
  2054  01336E  6EE6               	movwf	postinc1,c
  2055  013370  0E00               	movlw	0
  2056  013372  6EE6               	movwf	postinc1,c
  2057  013374  0E00               	movlw	0
  2058  013376  6EE6               	movwf	postinc1,c
  2059  013378  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2060  01337C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2061  013382  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2062  013388  0E04               	movlw	4
  2063  01338A  6EE6               	movwf	postinc1,c
  2064  01338C  ECAE  F0B5         	call	_sprintf	;wreg free
  2065                           
  2066                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.99");
  2067  013390  0EE1               	movlw	low STR_3
  2068  013392  6EE6               	movwf	postinc1,c
  2069  013394  0EFF               	movlw	high STR_3
  2070  013396  6EE6               	movwf	postinc1,c
  2071  013398  0EB3               	movlw	low STR_2
  2072  01339A  6EE6               	movwf	postinc1,c
  2073  01339C  0EFF               	movlw	high STR_2
  2074  01339E  6EE6               	movwf	postinc1,c
  2075  0133A0  0E00               	movlw	0
  2076  0133A2  6EE6               	movwf	postinc1,c
  2077  0133A4  0E01               	movlw	1
  2078  0133A6  6EE6               	movwf	postinc1,c
  2079  0133A8  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2080  0133AC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2081  0133B2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2082  0133B8  0E06               	movlw	6
  2083  0133BA  6EE6               	movwf	postinc1,c
  2084  0133BC  ECAE  F0B5         	call	_sprintf	;wreg free
  2085                           
  2086                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2087  0133C0  0E71               	movlw	low STR_4
  2088  0133C2  6EE6               	movwf	postinc1,c
  2089  0133C4  0EFF               	movlw	high STR_4
  2090  0133C6  6EE6               	movwf	postinc1,c
  2091  0133C8  0E00               	movlw	0
  2092  0133CA  6EE6               	movwf	postinc1,c
  2093  0133CC  0E02               	movlw	2
  2094  0133CE  6EE6               	movwf	postinc1,c
  2095  0133D0  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2096  0133D4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2097  0133DA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2098  0133E0  0E04               	movlw	4
  2099  0133E2  6EE6               	movwf	postinc1,c
  2100  0133E4  ECAE  F0B5         	call	_sprintf	;wreg free
  2101                           
  2102                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2103  0133E8  0E93               	movlw	low STR_5
  2104  0133EA  6EE6               	movwf	postinc1,c
  2105  0133EC  0EFF               	movlw	high STR_5
  2106  0133EE  6EE6               	movwf	postinc1,c
  2107  0133F0  0E02               	movlw	2
  2108  0133F2  6EE6               	movwf	postinc1,c
  2109  0133F4  0E00               	movlw	0
  2110  0133F6  6EE6               	movwf	postinc1,c
  2111  0133F8  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2112  0133FC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2113  013402  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2114  013408  0E04               	movlw	4
  2115  01340A  6EE6               	movwf	postinc1,c
  2116  01340C  ECAE  F0B5         	call	_sprintf	;wreg free
  2117                           
  2118                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.99");
  2119  013410  0EE1               	movlw	low STR_3
  2120  013412  6EE6               	movwf	postinc1,c
  2121  013414  0EFF               	movlw	high STR_3
  2122  013416  6EE6               	movwf	postinc1,c
  2123  013418  0EB3               	movlw	low STR_2
  2124  01341A  6EE6               	movwf	postinc1,c
  2125  01341C  0EFF               	movlw	high STR_2
  2126  01341E  6EE6               	movwf	postinc1,c
  2127  013420  0E02               	movlw	2
  2128  013422  6EE6               	movwf	postinc1,c
  2129  013424  0E01               	movlw	1
  2130  013426  6EE6               	movwf	postinc1,c
  2131  013428  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2132  01342C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2133  013432  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2134  013438  0E06               	movlw	6
  2135  01343A  6EE6               	movwf	postinc1,c
  2136  01343C  ECAE  F0B5         	call	_sprintf	;wreg free
  2137                           
  2138                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2139  013440  0E60               	movlw	low STR_8
  2140  013442  6EE6               	movwf	postinc1,c
  2141  013444  0EFF               	movlw	high STR_8
  2142  013446  6EE6               	movwf	postinc1,c
  2143  013448  0E02               	movlw	2
  2144  01344A  6EE6               	movwf	postinc1,c
  2145  01344C  0E02               	movlw	2
  2146  01344E  6EE6               	movwf	postinc1,c
  2147  013450  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2148  013454  0060  F0CB  FFE6   	movff	btemp,postinc1
  2149  01345A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2150  013460  0E04               	movlw	4
  2151  013462  6EE6               	movwf	postinc1,c
  2152  013464  ECAE  F0B5         	call	_sprintf	;wreg free
  2153                           
  2154                           ;main.c: 213:    update_lcd(0);
  2155  013468  0E00               	movlw	0
  2156  01346A  6EE6               	movwf	postinc1,c
  2157  01346C  EC27  F0B5         	call	_update_lcd	;wreg free
  2158                           
  2159                           ;main.c: 214:    WaitMs(3000);
  2160  013470  0EB8               	movlw	184
  2161  013472  6EE6               	movwf	postinc1,c
  2162  013474  0E0B               	movlw	11
  2163  013476  6EE6               	movwf	postinc1,c
  2164  013478  ECEB  F0BF         	call	_WaitMs	;wreg free
  2165                           
  2166                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2167  01347C  0EFA               	movlw	250
  2168  01347E  6EE6               	movwf	postinc1,c
  2169  013480  0E00               	movlw	0
  2170  013482  6EE6               	movwf	postinc1,c
  2171  013484  0E0A               	movlw	10
  2172  013486  6EE6               	movwf	postinc1,c
  2173  013488  ECB1  F0BF         	call	_StartTimer	;wreg free
  2174                           
  2175                           ;main.c: 216:    StartTimer(TMR_ADC, 200);
  2176  01348C  0EC8               	movlw	200
  2177  01348E  6EE6               	movwf	postinc1,c
  2178  013490  0E00               	movlw	0
  2179  013492  6EE6               	movwf	postinc1,c
  2180  013494  0E01               	movlw	1
  2181  013496  6EE6               	movwf	postinc1,c
  2182  013498  ECB1  F0BF         	call	_StartTimer	;wreg free
  2183                           
  2184                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2185  01349C  0EB8               	movlw	184
  2186  01349E  6EE6               	movwf	postinc1,c
  2187  0134A0  0E0B               	movlw	11
  2188  0134A2  6EE6               	movwf	postinc1,c
  2189  0134A4  0E07               	movlw	7
  2190  0134A6  6EE6               	movwf	postinc1,c
  2191  0134A8  ECB1  F0BF         	call	_StartTimer	;wreg free
  2192                           
  2193                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2194  0134AC  0EDC               	movlw	220
  2195  0134AE  6EE6               	movwf	postinc1,c
  2196  0134B0  0E05               	movlw	5
  2197  0134B2  6EE6               	movwf	postinc1,c
  2198  0134B4  0E0B               	movlw	11
  2199  0134B6  6EE6               	movwf	postinc1,c
  2200  0134B8  ECB1  F0BF         	call	_StartTimer	;wreg free
  2201                           
  2202                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2203  0134BC  0EB8               	movlw	184
  2204  0134BE  6EE6               	movwf	postinc1,c
  2205  0134C0  0E0B               	movlw	11
  2206  0134C2  6EE6               	movwf	postinc1,c
  2207  0134C4  0E09               	movlw	9
  2208  0134C6  6EE6               	movwf	postinc1,c
  2209  0134C8  ECB1  F0BF         	call	_StartTimer	;wreg free
  2210                           
  2211                           ;main.c: 221:    start_adc_scan();
  2212  0134CC  EC8D  F0BC         	call	_start_adc_scan	;wreg free
  2213                           
  2214                           ;main.c: 222:    start_switch_handler();
  2215  0134D0  ECF7  F0C2         	call	_start_switch_handler	;wreg free
  2216                           
  2217                           ;main.c: 224:    break;
  2218  0134D4  D01C               	goto	l10318
  2219  0134D6                     l1254:
  2220                           
  2221                           ; BSR set to: 2
  2222                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2223  0134D6  0100               	movlb	0	; () banked
  2224  0134D8  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2225                           
  2226                           ;main.c: 231:    break;
  2227  0134DA  D019               	goto	l10318
  2228  0134DC                     l1256:
  2229                           
  2230                           ; BSR set to: 2
  2231                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2232  0134DC  6B00               	clrf	_V& (0+255),b	;volatile
  2233                           
  2234                           ;main.c: 235:    break;
  2235  0134DE  D017               	goto	l10318
  2236  0134E0                     l10316:
  2237  0134E0  0102               	movlb	2	; () banked
  2238  0134E2  5100               	movf	_V& (0+255),w,b	;volatile
  2239  0134E4  6E3C               	movwf	(btemp+10)^0,c
  2240  0134E6  6A3D               	clrf	(btemp+11)^0,c
  2241                           
  2242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 1, Range of values is 0 to 0
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte            4     3 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249  0134E8  503D               	movf	(btemp+11)^0,w,c
  2250  0134EA  0A00               	xorlw	0	; case 0
  2251  0134EC  A4D8               	btfss	status,2,c
  2252  0134EE  D7F6               	goto	l1256
  2253                           
  2254                           ; BSR set to: 2
  2255                           ; Switch size 1, requested type "simple"
  2256                           ; Number of cases is 5, Range of values is 0 to 5
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           16     9 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  0134F0  503C               	movf	(btemp+10)^0,w,c
  2262  0134F2  0A00               	xorlw	0	; case 0
  2263  0134F4  B4D8               	btfsc	status,2,c
  2264  0134F6  D724               	goto	l10274
  2265  0134F8  0A01               	xorlw	1	; case 1
  2266  0134FA  B4D8               	btfsc	status,2,c
  2267  0134FC  D008               	goto	l10318
  2268  0134FE  0A02               	xorlw	2	; case 3
  2269  013500  B4D8               	btfsc	status,2,c
  2270  013502  D005               	goto	l10318
  2271  013504  0A07               	xorlw	7	; case 4
  2272  013506  B4D8               	btfsc	status,2,c
  2273  013508  D7E6               	goto	l1254
  2274  01350A  0A01               	xorlw	1	; case 5
  2275  01350C  D7E7               	goto	l1256
  2276  01350E                     l10318:
  2277                           
  2278                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2279  01350E  0E01               	movlw	1
  2280  013510  6EE6               	movwf	postinc1,c
  2281  013512  EC9F  F0C2         	call	_TimerDone	;wreg free
  2282  013516  5032               	movf	btemp^0,w,c
  2283  013518  B4D8               	btfsc	status,2,c
  2284  01351A  D013               	goto	l10330
  2285  01351C  EC25  F0C4         	call	_check_adc_scan	;wreg free
  2286  013520  5032               	movf	btemp^0,w,c
  2287  013522  B4D8               	btfsc	status,2,c
  2288  013524  D00E               	goto	l10330
  2289                           
  2290                           ;main.c: 242:    convert_adc_data();
  2291  013526  EC7E  F0BB         	call	_convert_adc_data	;wreg free
  2292                           
  2293                           ;main.c: 246:    clear_adc_scan();
  2294  01352A  EC2D  F0C4         	call	_clear_adc_scan	;wreg free
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 247:    start_adc_scan();
  2298  01352E  EC8D  F0BC         	call	_start_adc_scan	;wreg free
  2299                           
  2300                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  2301  013532  0EC8               	movlw	200
  2302  013534  6EE6               	movwf	postinc1,c
  2303  013536  0E00               	movlw	0
  2304  013538  6EE6               	movwf	postinc1,c
  2305  01353A  0E01               	movlw	1
  2306  01353C  6EE6               	movwf	postinc1,c
  2307  01353E  ECB1  F0BF         	call	_StartTimer	;wreg free
  2308  013542                     l10330:
  2309                           
  2310                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2311                           
  2312                           ;main.c: 251:   if (V.ticks) {
  2313  013542  0E0A               	movlw	10
  2314  013544  6EE6               	movwf	postinc1,c
  2315  013546  EC9F  F0C2         	call	_TimerDone	;wreg free
  2316  01354A  5032               	movf	btemp^0,w,c
  2317  01354C  B4D8               	btfsc	status,2,c
  2318  01354E  D105               	goto	l10350
  2319                           
  2320                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2321  013550  0E09               	movlw	9
  2322  013552  6EE6               	movwf	postinc1,c
  2323  013554  EC9F  F0C2         	call	_TimerDone	;wreg free
  2324  013558  5032               	movf	btemp^0,w,c
  2325  01355A  B4D8               	btfsc	status,2,c
  2326  01355C  D004               	goto	l10338
  2327                           
  2328                           ;main.c: 257:     set_display_info(DIS_STR);
  2329  01355E  0E00               	movlw	0
  2330  013560  6EE6               	movwf	postinc1,c
  2331  013562  EC25  F0C3         	call	_set_display_info	;wreg free
  2332  013566                     l10338:
  2333                           
  2334                           ;main.c: 259:    calc_model_data();
  2335  013566  EC48  F0A9         	call	_calc_model_data	;wreg free
  2336                           
  2337                           ; BSR set to: 1
  2338                           ;main.c: 266:    if (get_switch(SSELECT)) {
  2339  01356A  0E02               	movlw	2
  2340  01356C  6EE6               	movwf	postinc1,c
  2341  01356E  EC5F  F0C1         	call	_get_switch	;wreg free
  2342  013572  5032               	movf	btemp^0,w,c
  2343  013574  B4D8               	btfsc	status,2,c
  2344  013576  D061               	goto	l10344
  2345                           
  2346                           ;main.c: 267:     sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2347  013578  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2348  01357E  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2349  013584  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2350  01358A  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2351  013590  0EEE               	movlw	low STR_9
  2352  013592  6EE6               	movwf	postinc1,c
  2353  013594  0EFE               	movlw	high STR_9
  2354  013596  6EE6               	movwf	postinc1,c
  2355  013598  0E00               	movlw	0
  2356  01359A  6EE6               	movwf	postinc1,c
  2357  01359C  0E00               	movlw	0
  2358  01359E  6EE6               	movwf	postinc1,c
  2359  0135A0  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2360  0135A4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2361  0135AA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2362  0135B0  0E08               	movlw	8
  2363  0135B2  6EE6               	movwf	postinc1,c
  2364  0135B4  ECAE  F0B5         	call	_sprintf	;wreg free
  2365                           
  2366                           ;main.c: 268:     sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2367  0135B8  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2368  0135BE  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2369  0135C4  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2370  0135CA  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2371  0135D0  0E14               	movlw	low STR_10
  2372  0135D2  6EE6               	movwf	postinc1,c
  2373  0135D4  0EFF               	movlw	high STR_10
  2374  0135D6  6EE6               	movwf	postinc1,c
  2375  0135D8  0E00               	movlw	0
  2376  0135DA  6EE6               	movwf	postinc1,c
  2377  0135DC  0E01               	movlw	1
  2378  0135DE  6EE6               	movwf	postinc1,c
  2379  0135E0  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2380  0135E4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2381  0135EA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2382  0135F0  0E08               	movlw	8
  2383  0135F2  6EE6               	movwf	postinc1,c
  2384  0135F4  ECAE  F0B5         	call	_sprintf	;wreg free
  2385                           
  2386                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2387  0135F8  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2388  0135FE  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2389  013604  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2390  01360A  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2391  013610  0E01               	movlw	low STR_11
  2392  013612  6EE6               	movwf	postinc1,c
  2393  013614  0EFF               	movlw	high STR_11
  2394  013616  6EE6               	movwf	postinc1,c
  2395  013618  0E00               	movlw	0
  2396  01361A  6EE6               	movwf	postinc1,c
  2397  01361C  0E02               	movlw	2
  2398  01361E  6EE6               	movwf	postinc1,c
  2399  013620  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2400  013624  0060  F0CB  FFE6   	movff	btemp,postinc1
  2401  01362A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2402  013630  0E08               	movlw	8
  2403  013632  6EE6               	movwf	postinc1,c
  2404  013634  ECAE  F0B5         	call	_sprintf	;wreg free
  2405                           
  2406                           ;main.c: 270:    } else {
  2407  013638  D084               	goto	l10346
  2408  01363A                     l10344:
  2409                           
  2410                           ;main.c: 271:     sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.cal
      +                          c[C_PV]);
  2411  01363A  0060  F413  FFE6   	movff	_C+4,postinc1
  2412  013640  0060  F417  FFE6   	movff	_C+5,postinc1
  2413  013646  0060  F41B  FFE6   	movff	_C+6,postinc1
  2414  01364C  0060  F41F  FFE6   	movff	_C+7,postinc1
  2415  013652  0060  F453  FFE6   	movff	_C+20,postinc1
  2416  013658  0060  F457  FFE6   	movff	_C+21,postinc1
  2417  01365E  0060  F45B  FFE6   	movff	_C+22,postinc1
  2418  013664  0060  F45F  FFE6   	movff	_C+23,postinc1
  2419  01366A  0E4D               	movlw	low STR_12
  2420  01366C  6EE6               	movwf	postinc1,c
  2421  01366E  0EFF               	movlw	high STR_12
  2422  013670  6EE6               	movwf	postinc1,c
  2423  013672  0E00               	movlw	0
  2424  013674  6EE6               	movwf	postinc1,c
  2425  013676  0E00               	movlw	0
  2426  013678  6EE6               	movwf	postinc1,c
  2427  01367A  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2428  01367E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2429  013684  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2430  01368A  0E0C               	movlw	12
  2431  01368C  6EE6               	movwf	postinc1,c
  2432  01368E  ECAE  F0B5         	call	_sprintf	;wreg free
  2433                           
  2434                           ;main.c: 272:     sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.ca
      +                          lc[C_BATT]);
  2435  013692  0060  F403  FFE6   	movff	_C,postinc1
  2436  013698  0060  F407  FFE6   	movff	_C+1,postinc1
  2437  01369E  0060  F40B  FFE6   	movff	_C+2,postinc1
  2438  0136A4  0060  F40F  FFE6   	movff	_C+3,postinc1
  2439  0136AA  0060  F443  FFE6   	movff	_C+16,postinc1
  2440  0136B0  0060  F447  FFE6   	movff	_C+17,postinc1
  2441  0136B6  0060  F44B  FFE6   	movff	_C+18,postinc1
  2442  0136BC  0060  F44F  FFE6   	movff	_C+19,postinc1
  2443  0136C2  0E27               	movlw	low STR_13
  2444  0136C4  6EE6               	movwf	postinc1,c
  2445  0136C6  0EFF               	movlw	high STR_13
  2446  0136C8  6EE6               	movwf	postinc1,c
  2447  0136CA  0E00               	movlw	0
  2448  0136CC  6EE6               	movwf	postinc1,c
  2449  0136CE  0E01               	movlw	1
  2450  0136D0  6EE6               	movwf	postinc1,c
  2451  0136D2  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2452  0136D6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2453  0136DC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2454  0136E2  0E0C               	movlw	12
  2455  0136E4  6EE6               	movwf	postinc1,c
  2456  0136E6  ECAE  F0B5         	call	_sprintf	;wreg free
  2457                           
  2458                           ;main.c: 273:     sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_l
      +                          oad);
  2459  0136EA  0060  F503  FFE6   	movff	_C+64,postinc1
  2460  0136F0  0060  F507  FFE6   	movff	_C+65,postinc1
  2461  0136F6  0060  F50B  FFE6   	movff	_C+66,postinc1
  2462  0136FC  0060  F50F  FFE6   	movff	_C+67,postinc1
  2463  013702  0060  F423  FFE6   	movff	_C+8,postinc1
  2464  013708  0060  F427  FFE6   	movff	_C+9,postinc1
  2465  01370E  0060  F42B  FFE6   	movff	_C+10,postinc1
  2466  013714  0060  F42F  FFE6   	movff	_C+11,postinc1
  2467  01371A  0E3A               	movlw	low STR_14
  2468  01371C  6EE6               	movwf	postinc1,c
  2469  01371E  0EFF               	movlw	high STR_14
  2470  013720  6EE6               	movwf	postinc1,c
  2471  013722  0E00               	movlw	0
  2472  013724  6EE6               	movwf	postinc1,c
  2473  013726  0E02               	movlw	2
  2474  013728  6EE6               	movwf	postinc1,c
  2475  01372A  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  2476  01372E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2477  013734  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2478  01373A  0E0C               	movlw	12
  2479  01373C  6EE6               	movwf	postinc1,c
  2480  01373E  ECAE  F0B5         	call	_sprintf	;wreg free
  2481  013742                     l10346:
  2482                           
  2483                           ;main.c: 276:    StartTimer(TMR_DISPLAY, 250);
  2484  013742  0EFA               	movlw	250
  2485  013744  6EE6               	movwf	postinc1,c
  2486  013746  0E00               	movlw	0
  2487  013748  6EE6               	movwf	postinc1,c
  2488  01374A  0E0A               	movlw	10
  2489  01374C  6EE6               	movwf	postinc1,c
  2490  01374E  ECB1  F0BF         	call	_StartTimer	;wreg free
  2491                           
  2492                           ;main.c: 277:    update_lcd(0);
  2493  013752  0E00               	movlw	0
  2494  013754  6EE6               	movwf	postinc1,c
  2495  013756  EC27  F0B5         	call	_update_lcd	;wreg free
  2496  01375A                     l10350:
  2497                           
  2498                           ;main.c: 283:   if (check_help(V.flipper)) {
  2499  01375A  0102               	movlb	2	; () banked
  2500  01375C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2501  01375E  6EE6               	movwf	postinc1,c
  2502  013760  EC8E  F0AB         	call	_check_help	;wreg free
  2503                           
  2504                           ;main.c: 319:   if (V.set_sequ) {
  2505                           
  2506                           ;main.c: 314:   };
  2507  013764  0102               	movlb	2	; () banked
  2508  013766  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2509  013768  D6BB               	goto	l10316
  2510                           
  2511                           ; BSR set to: 2
  2512                           ;main.c: 320:    if (TimerDone(TMR_INFO)) {
  2513  01376A  0E07               	movlw	7
  2514  01376C  6EE6               	movwf	postinc1,c
  2515  01376E  EC9F  F0C2         	call	_TimerDone	;wreg free
  2516  013772  5032               	movf	btemp^0,w,c
  2517  013774  B4D8               	btfsc	status,2,c
  2518  013776  D00B               	goto	l10360
  2519                           
  2520                           ;main.c: 321:     V.set_sequ = 0;
  2521  013778  0102               	movlb	2	; () banked
  2522  01377A  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2523                           
  2524                           ; BSR set to: 2
  2525                           ;main.c: 322:     set_vterm(0);
  2526  01377C  0E00               	movlw	0
  2527  01377E  6EE6               	movwf	postinc1,c
  2528  013780  EC60  F0C3         	call	_set_vterm	;wreg free
  2529                           
  2530                           ; BSR set to: 5
  2531                           ;main.c: 323:     update_lcd(0);
  2532  013784  0E00               	movlw	0
  2533  013786  6EE6               	movwf	postinc1,c
  2534  013788  EC27  F0B5         	call	_update_lcd	;wreg free
  2535                           
  2536                           ;main.c: 324:    } else {
  2537  01378C  D6A9               	goto	l10316
  2538  01378E                     l10360:
  2539                           
  2540                           ;main.c: 325:     set_vterm(2);
  2541  01378E  0E02               	movlw	2
  2542  013790  6EE6               	movwf	postinc1,c
  2543  013792  EC60  F0C3         	call	_set_vterm	;wreg free
  2544                           
  2545                           ; BSR set to: 5
  2546                           ;main.c: 326:     update_lcd(2);
  2547  013796  0E02               	movlw	2
  2548  013798  6EE6               	movwf	postinc1,c
  2549  01379A  EC27  F0B5         	call	_update_lcd	;wreg free
  2550  01379E  D6A0               	goto	l10316
  2551  0137A0                     __end_of_main:
  2552                           	opt callstack 0
  2553                           
  2554 ;; *************** function _start_switch_handler *****************
  2555 ;; Defined at:
  2556 ;;		line 119 in file "dio.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1  [STACK] void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 1/4
  2567 ;;		On exit  : 3F/39
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    7
  2577 ;; This function calls:
  2578 ;;		_INT1_SetInterruptHandler
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text1
  2585  0185EE                     __ptext1:
  2586                           	opt callstack 0
  2587  0185EE                     _start_switch_handler:
  2588                           	opt callstack 23
  2589                           
  2590                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2591                           
  2592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2593                           ;incstack = 0
  2594  0185EE  0139               	movlb	57	; () banked
  2595  0185F0  9195               	bcf	149,0,b	;volatile
  2596                           
  2597                           ; BSR set to: 57
  2598                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2599  0185F2  0E88               	movlw	low _switch_handler
  2600  0185F4  6EE6               	movwf	postinc1,c
  2601  0185F6  0E64               	movlw	high _switch_handler
  2602  0185F8  6EE6               	movwf	postinc1,c
  2603  0185FA  0E01               	movlw	low (_switch_handler shr (0+16))
  2604  0185FC  6EE6               	movwf	postinc1,c
  2605  0185FE  ECEB  F0C1         	call	_INT1_SetInterruptHandler	;wreg free
  2606                           
  2607                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2608  018602  0E02               	movlw	2
  2609  018604  0100               	movlb	0	; () banked
  2610  018606  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2614  018608  0139               	movlb	57	; () banked
  2615  01860A  8195               	bsf	149,0,b	;volatile
  2616                           
  2617                           ; BSR set to: 57
  2618                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2619  01860C  0012               	return		;funcret
  2620  01860E                     __end_of_start_switch_handler:
  2621                           	opt callstack 0
  2622                           
  2623 ;; *************** function _start_adc_scan *****************
  2624 ;; Defined at:
  2625 ;;		line 33 in file "daq.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1  [STACK] _Bool 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/5
  2636 ;;		On exit  : 1/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;Total ram usage:        0 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    7
  2646 ;; This function calls:
  2647 ;;		_ADCC_DischargeSampleCapacitor
  2648 ;;		_ADCC_SetADIInterruptHandler
  2649 ;;		_ADCC_SetADTIInterruptHandler
  2650 ;;		_ADCC_StartConversion
  2651 ;; This function is called by:
  2652 ;;		_main
  2653 ;; This function uses a reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text2
  2657  01791A                     __ptext2:
  2658                           	opt callstack 0
  2659  01791A                     _start_adc_scan:
  2660                           	opt callstack 23
  2661                           
  2662                           ;daq.c: 35:  if (R.done)
  2663                           
  2664                           ; BSR set to: 57
  2665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2666                           ;incstack = 0
  2667  01791A  0100               	movlb	0	; () banked
  2668  01791C  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2669  01791E  A4D8               	btfss	status,2,c
  2670  017920  0012               	return	
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;daq.c: 38:  R.scan_index = 0;
  2674  017922  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2678  017924  013A               	movlb	58	; () banked
  2679  017926  5140               	movf	64,w,b	;volatile
  2680  017928  006E F940  F032    	movff	14928,btemp	;volatile
  2681  01792E  6A33               	clrf	(btemp+1)^0,c
  2682  017930  0060  F0C8  F033   	movff	btemp,btemp+1
  2683  017936  6A32               	clrf	btemp^0,c
  2684  017938  2632               	addwf	btemp^0,f,c
  2685  01793A  0E00               	movlw	0
  2686  01793C  2233               	addwfc	(btemp+1)^0,f,c
  2687  01793E  0E77               	movlw	119
  2688  017940  1432               	andwf	btemp^0,w,c
  2689  017942  0100               	movlb	0	; () banked
  2690  017944  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2691  017946  0E3C               	movlw	60
  2692  017948  1433               	andwf	(btemp+1)^0,w,c
  2693  01794A  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2697  01794C  0E78               	movlw	low _adc_int_handler
  2698  01794E  6EE6               	movwf	postinc1,c
  2699  017950  0E88               	movlw	high _adc_int_handler
  2700  017952  6EE6               	movwf	postinc1,c
  2701  017954  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2702  017956  6EE6               	movwf	postinc1,c
  2703  017958  EC27  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2704                           
  2705                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2706  01795C  0E7E               	movlw	low _adc_int_t_handler
  2707  01795E  6EE6               	movwf	postinc1,c
  2708  017960  0E76               	movlw	high _adc_int_t_handler
  2709  017962  6EE6               	movwf	postinc1,c
  2710  017964  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2711  017966  6EE6               	movwf	postinc1,c
  2712  017968  EC13  F0C2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2713                           
  2714                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2715  01796C  EC19  F0C4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2716                           
  2717                           ; BSR set to: 62
  2718                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2719  017970  0100               	movlb	0	; () banked
  2720  017972  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2721  017974  0B0F               	andlw	15
  2722  017976  6EE6               	movwf	postinc1,c
  2723  017978  ECCC  F0C3         	call	_ADCC_StartConversion	;wreg free
  2724                           
  2725                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2726  01797C  0012               	return		;funcret
  2727  01797E                     __end_of_start_adc_scan:
  2728                           	opt callstack 0
  2729                           
  2730 ;; *************** function _ADCC_StartConversion *****************
  2731 ;; Defined at:
  2732 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  channel         1  [STACK] enum E16136
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1  [STACK] void 
  2739 ;; Registers used:
  2740 ;;		fsr1l, fsr1h
  2741 ;; Tracked objects:
  2742 ;;		On entry : 3F/0
  2743 ;;		On exit  : 3F/3E
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    6
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_start_adc_scan
  2757 ;;		_adc_int_t_handler
  2758 ;; This function uses a reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text3
  2762  018798                     __ptext3:
  2763                           	opt callstack 0
  2764  018798                     _ADCC_StartConversion:
  2765                           	opt callstack 6
  2766                           
  2767                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2768                           ;stkvar	_channel @ sp[(0)+-1]
  2769                           
  2770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2771                           ;incstack = 0
  2772  018798  0EFF               	movlw	-1
  2773  01879A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2774                           
  2775                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2776  0187A0  013E               	movlb	62	; () banked
  2777  0187A2  8FF8               	bsf	248,7,b	;volatile
  2778                           
  2779                           ; BSR set to: 62
  2780                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2781  0187A4  81F8               	bsf	248,0,b	;volatile
  2782                           
  2783                           ; BSR set to: 62
  2784                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2785  0187A6  52E5               	movf	postdec1,f,c
  2786  0187A8  0012               	return		;funcret
  2787  0187AA                     __end_of_ADCC_StartConversion:
  2788                           	opt callstack 0
  2789                           
  2790 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2791 ;; Defined at:
  2792 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1  [STACK] void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 3F/3E
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    6
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_start_adc_scan
  2817 ;;		_adc_int_t_handler
  2818 ;; This function uses a reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text4
  2822  018832                     __ptext4:
  2823                           	opt callstack 0
  2824  018832                     _ADCC_DischargeSampleCapacitor:
  2825                           	opt callstack 6
  2826                           
  2827                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2828                           
  2829                           ; BSR set to: 62
  2830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2831                           ;incstack = 0
  2832  018832  0E3B               	movlw	59
  2833  018834  013E               	movlb	62	; () banked
  2834  018836  6FF1               	movwf	241,b	;volatile
  2835                           
  2836                           ; BSR set to: 62
  2837                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2838  018838  0012               	return		;funcret
  2839  01883A                     __end_of_ADCC_DischargeSampleCapacitor:
  2840                           	opt callstack 0
  2841                           
  2842 ;; *************** function _srand *****************
  2843 ;; Defined at:
  2844 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  s               2  [STACK] unsigned int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1  [STACK] void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2853 ;; Tracked objects:
  2854 ;;		On entry : 3F/0
  2855 ;;		On exit  : 3F/1
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    6
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text5
  2873  018042                     __ptext5:
  2874                           	opt callstack 0
  2875  018042                     _srand:
  2876                           	opt callstack 24
  2877                           
  2878                           ;stkvar	_s @ sp[(0)+-2]
  2879                           
  2880                           ; BSR set to: 62
  2881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2882                           ;incstack = 0
  2883  018042  0EFE               	movlw	-2
  2884  018044  50E3               	movf	plusw1,w,c
  2885  018046  0FFF               	addlw	255
  2886  018048  6E3C               	movwf	(btemp+10)^0,c
  2887  01804A  0EFF               	movlw	-1
  2888  01804C  006F FF8C  F03D    	movff	plusw1,btemp+11
  2889  018052  0EFF               	movlw	255
  2890  018054  223D               	addwfc	(btemp+11)^0,f,c
  2891  018056  0060  F0F0  F1C8   	movff	btemp+10,_seed
  2892  01805C  0060  F0F4  F1C9   	movff	btemp+11,_seed+1
  2893  018062  0101               	movlb	1	; () banked
  2894  018064  6BCA               	clrf	(_seed+2)& (0+255),b
  2895  018066  6BCB               	clrf	(_seed+3)& (0+255),b
  2896  018068  6BCC               	clrf	(_seed+4)& (0+255),b
  2897  01806A  6BCD               	clrf	(_seed+5)& (0+255),b
  2898  01806C  6BCE               	clrf	(_seed+6)& (0+255),b
  2899  01806E  6BCF               	clrf	(_seed+7)& (0+255),b
  2900                           
  2901                           ; BSR set to: 1
  2902                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2903  018070  52E5               	movf	postdec1,f,c
  2904  018072  52E5               	movf	postdec1,f,c
  2905  018074  0012               	return		;funcret
  2906  018076                     __end_of_srand:
  2907                           	opt callstack 0
  2908                           
  2909 ;; *************** function _init_display *****************
  2910 ;; Defined at:
  2911 ;;		line 37 in file "eadog.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1  [STACK] void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/2
  2922 ;;		On exit  : 3F/3D
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    8
  2932 ;; This function calls:
  2933 ;;		_ringBufS_init
  2934 ;;		_send_lcd_cmd
  2935 ;;		_send_lcd_cmd_long
  2936 ;;		_wdtdelay
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text6
  2943  016D5A                     __ptext6:
  2944                           	opt callstack 0
  2945  016D5A                     _init_display:
  2946                           	opt callstack 22
  2947                           
  2948                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2949                           
  2950                           ; BSR set to: 1
  2951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2952                           ;incstack = 0
  2953  016D5A  0E90               	movlw	low _ring_buf1
  2954  016D5C  0100               	movlb	0	; () banked
  2955  016D5E  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2956  016D60  0E03               	movlw	high _ring_buf1
  2957  016D62  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2958                           
  2959                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2960  016D64  0E00               	movlw	low _ring_buf2
  2961  016D66  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2962  016D68  0E04               	movlw	high _ring_buf2
  2963  016D6A  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2967  016D6C  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  2968  016D72  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  2969  016D78  EC4B  F0C1         	call	_ringBufS_init	;wreg free
  2970                           
  2971                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2972  016D7C  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  2973  016D82  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  2974  016D88  EC4B  F0C1         	call	_ringBufS_init	;wreg free
  2975                           
  2976                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2977  016D8C  84BE               	bsf	190,2,c	;volatile
  2978  016D8E  84BC               	bsf	188,2,c	;volatile
  2979                           
  2980                           ;eadog.c: 46:  wdtdelay(350000);
  2981  016D90  0E30               	movlw	48
  2982  016D92  6EE6               	movwf	postinc1,c
  2983  016D94  0E57               	movlw	87
  2984  016D96  6EE6               	movwf	postinc1,c
  2985  016D98  0E05               	movlw	5
  2986  016D9A  6EE6               	movwf	postinc1,c
  2987  016D9C  0E00               	movlw	0
  2988  016D9E  6EE6               	movwf	postinc1,c
  2989  016DA0  ECB0  F0BD         	call	_wdtdelay	;wreg free
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2993  016DA4  0E39               	movlw	57
  2994  016DA6  6EE6               	movwf	postinc1,c
  2995  016DA8  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2999  016DAC  0E1D               	movlw	29
  3000  016DAE  6EE6               	movwf	postinc1,c
  3001  016DB0  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3005  016DB4  0E50               	movlw	80
  3006  016DB6  6EE6               	movwf	postinc1,c
  3007  016DB8  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3011  016DBC  0E6C               	movlw	108
  3012  016DBE  6EE6               	movwf	postinc1,c
  3013  016DC0  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3017  016DC4  0E76               	movlw	118
  3018  016DC6  6EE6               	movwf	postinc1,c
  3019  016DC8  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3023  016DCC  0E38               	movlw	56
  3024  016DCE  6EE6               	movwf	postinc1,c
  3025  016DD0  EC23  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3029  016DD4  0E0F               	movlw	15
  3030  016DD6  6EE6               	movwf	postinc1,c
  3031  016DD8  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3035  016DDC  0E01               	movlw	1
  3036  016DDE  6EE6               	movwf	postinc1,c
  3037  016DE0  EC23  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3041  016DE4  0E02               	movlw	2
  3042  016DE6  6EE6               	movwf	postinc1,c
  3043  016DE8  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3047  016DEC  0E06               	movlw	6
  3048  016DEE  6EE6               	movwf	postinc1,c
  3049  016DF0  EC37  F0C1         	call	_send_lcd_cmd	;wreg free
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;eadog.c: 57:  wdtdelay(30);
  3053  016DF4  0E1E               	movlw	30
  3054  016DF6  6EE6               	movwf	postinc1,c
  3055  016DF8  0E00               	movlw	0
  3056  016DFA  6EE6               	movwf	postinc1,c
  3057  016DFC  0E00               	movlw	0
  3058  016DFE  6EE6               	movwf	postinc1,c
  3059  016E00  0E00               	movlw	0
  3060  016E02  6EE6               	movwf	postinc1,c
  3061  016E04  ECB0  F0BD         	call	_wdtdelay	;wreg free
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3065  016E08  0E02               	movlw	2
  3066  016E0A  013D               	movlb	61	; () banked
  3067  016E0C  6F16               	movwf	22,b	;volatile
  3068                           
  3069                           ; BSR set to: 61
  3070                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3071  016E0E  0E40               	movlw	64
  3072  016E10  6F15               	movwf	21,b	;volatile
  3073                           
  3074                           ; BSR set to: 61
  3075                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3076  016E12  0E83               	movlw	131
  3077  016E14  6F14               	movwf	20,b	;volatile
  3078                           
  3079                           ; BSR set to: 61
  3080                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3081  016E16  931A               	bcf	26,1,b	;volatile
  3082                           
  3083                           ; BSR set to: 61
  3084                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3085  016E18  0E3F               	movlw	-193
  3086  016E1A  013B               	movlb	59	; () banked
  3087  016E1C  17FD               	andwf	253,f,b	;volatile
  3088                           
  3089                           ; BSR set to: 59
  3090                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3091  016E1E  9BFD               	bcf	253,5,b	;volatile
  3092                           
  3093                           ; BSR set to: 59
  3094                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3095  016E20  51FD               	movf	253,w,b	;volatile
  3096  016E22  0BF9               	andlw	-7
  3097  016E24  0902               	iorlw	2
  3098  016E26  6FFD               	movwf	253,b	;volatile
  3099                           
  3100                           ; BSR set to: 59
  3101                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3102  016E28  0EE7               	movlw	-25
  3103  016E2A  17FD               	andwf	253,f,b	;volatile
  3104                           
  3105                           ; BSR set to: 59
  3106                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3107  016E2C  81FD               	bsf	253,0,b	;volatile
  3108                           
  3109                           ; BSR set to: 59
  3110                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3111  016E2E  0E90               	movlw	low _ring_buf1
  3112  016E30  6FF9               	movwf	249,b	;volatile
  3113  016E32  0E03               	movlw	high _ring_buf1
  3114  016E34  6FFA               	movwf	250,b	;volatile
  3115  016E36  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3116  016E38  6FFB               	movwf	251,b	;volatile
  3117                           
  3118                           ; BSR set to: 59
  3119                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3120  016E3A  9BFC               	bcf	252,5,b	;volatile
  3121                           
  3122                           ; BSR set to: 59
  3123                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3124  016E3C  013D               	movlb	61	; () banked
  3125  016E3E  831A               	bsf	26,1,b	;volatile
  3126                           
  3127                           ; BSR set to: 61
  3128                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3129  016E40  94BE               	bcf	190,2,c	;volatile
  3130                           
  3131                           ; BSR set to: 61
  3132                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3133  016E42  0012               	return		;funcret
  3134  016E44                     __end_of_init_display:
  3135                           	opt callstack 0
  3136                           
  3137 ;; *************** function _send_lcd_cmd_long *****************
  3138 ;; Defined at:
  3139 ;;		line 114 in file "eadog.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  cmd             1  [STACK] const unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1  [STACK] void 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3148 ;; Tracked objects:
  3149 ;;		On entry : 3F/0
  3150 ;;		On exit  : 3F/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3157 ;;Total ram usage:        0 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    7
  3160 ;; This function calls:
  3161 ;;		_SPI1_Exchange8bit
  3162 ;;		_wdtdelay
  3163 ;; This function is called by:
  3164 ;;		_init_display
  3165 ;; This function uses a reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text7
  3169  018246                     __ptext7:
  3170                           	opt callstack 0
  3171  018246                     _send_lcd_cmd_long:
  3172                           	opt callstack 22
  3173                           
  3174                           ; BSR set to: 61
  3175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3176                           ;incstack = 0
  3177                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3178  018246  92BC               	bcf	188,1,c	;volatile
  3179                           
  3180                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3181  018248  94BC               	bcf	188,2,c	;volatile
  3182                           
  3183                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3184                           ;stkvar	_cmd @ sp[(0)+-1]
  3185  01824A  0EFF               	movlw	-1
  3186  01824C  50E3               	movf	plusw1,w,c
  3187  01824E  6EE6               	movwf	postinc1,c
  3188  018250  EC07  F0C3         	call	_SPI1_Exchange8bit	;wreg free
  3189                           
  3190                           ; BSR set to: 57
  3191                           ;eadog.c: 119:  wdtdelay(800);
  3192  018254  0E20               	movlw	32
  3193  018256  6EE6               	movwf	postinc1,c
  3194  018258  0E03               	movlw	3
  3195  01825A  6EE6               	movwf	postinc1,c
  3196  01825C  0E00               	movlw	0
  3197  01825E  6EE6               	movwf	postinc1,c
  3198  018260  0E00               	movlw	0
  3199  018262  6EE6               	movwf	postinc1,c
  3200  018264  ECB0  F0BD         	call	_wdtdelay	;wreg free
  3201                           
  3202                           ; BSR set to: 0
  3203  018268  82BC               	bsf	188,1,c	;volatile
  3204                           
  3205                           ; BSR set to: 0
  3206                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3207  01826A  52E5               	movf	postdec1,f,c
  3208  01826C  0012               	return		;funcret
  3209  01826E                     __end_of_send_lcd_cmd_long:
  3210                           	opt callstack 0
  3211                           
  3212 ;; *************** function _send_lcd_cmd *****************
  3213 ;; Defined at:
  3214 ;;		line 102 in file "eadog.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  cmd             1  [STACK] const unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1  [STACK] void 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3223 ;; Tracked objects:
  3224 ;;		On entry : 3F/0
  3225 ;;		On exit  : 3F/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    7
  3235 ;; This function calls:
  3236 ;;		_SPI1_Exchange8bit
  3237 ;;		_wdtdelay
  3238 ;; This function is called by:
  3239 ;;		_init_display
  3240 ;; This function uses a reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text8
  3244  01826E                     __ptext8:
  3245                           	opt callstack 0
  3246  01826E                     _send_lcd_cmd:
  3247                           	opt callstack 22
  3248                           
  3249                           ; BSR set to: 0
  3250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3251                           ;incstack = 0
  3252                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3253  01826E  92BC               	bcf	188,1,c	;volatile
  3254                           
  3255                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3256  018270  94BC               	bcf	188,2,c	;volatile
  3257                           
  3258                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3259                           ;stkvar	_cmd @ sp[(0)+-1]
  3260  018272  0EFF               	movlw	-1
  3261  018274  50E3               	movf	plusw1,w,c
  3262  018276  6EE6               	movwf	postinc1,c
  3263  018278  EC07  F0C3         	call	_SPI1_Exchange8bit	;wreg free
  3264                           
  3265                           ; BSR set to: 57
  3266                           ;eadog.c: 107:  wdtdelay(30);
  3267  01827C  0E1E               	movlw	30
  3268  01827E  6EE6               	movwf	postinc1,c
  3269  018280  0E00               	movlw	0
  3270  018282  6EE6               	movwf	postinc1,c
  3271  018284  0E00               	movlw	0
  3272  018286  6EE6               	movwf	postinc1,c
  3273  018288  0E00               	movlw	0
  3274  01828A  6EE6               	movwf	postinc1,c
  3275  01828C  ECB0  F0BD         	call	_wdtdelay	;wreg free
  3276                           
  3277                           ; BSR set to: 0
  3278  018290  82BC               	bsf	188,1,c	;volatile
  3279                           
  3280                           ; BSR set to: 0
  3281                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3282  018292  52E5               	movf	postdec1,f,c
  3283  018294  0012               	return		;funcret
  3284  018296                     __end_of_send_lcd_cmd:
  3285                           	opt callstack 0
  3286                           
  3287 ;; *************** function _SPI1_Exchange8bit *****************
  3288 ;; Defined at:
  3289 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  data            1  [STACK] unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1  [STACK] unsigned char 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 3F/39
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    6
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_send_lcd_cmd
  3314 ;;		_send_lcd_cmd_long
  3315 ;; This function uses a reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text9
  3319  01860E                     __ptext9:
  3320                           	opt callstack 0
  3321  01860E                     _SPI1_Exchange8bit:
  3322                           	opt callstack 22
  3323                           
  3324                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3325                           
  3326                           ; BSR set to: 0
  3327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3328                           ;incstack = 0
  3329  01860E  0E01               	movlw	1
  3330  018610  013D               	movlb	61	; () banked
  3331  018612  6F12               	movwf	18,b	;volatile
  3332                           
  3333                           ; BSR set to: 61
  3334                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3335                           ;stkvar	_data @ sp[(0)+-1]
  3336  018614  0EFF               	movlw	-1
  3337  018616  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3338  01861C                     l835:
  3339                           
  3340                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3341  01861C  0139               	movlb	57	; () banked
  3342  01861E  A9A2               	btfss	162,4,b	;volatile
  3343  018620  D7FD               	goto	l835
  3344                           
  3345                           ; BSR set to: 57
  3346                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3347  018622  006F F440  F032    	movff	15632,btemp	;volatile
  3348                           
  3349                           ; BSR set to: 57
  3350                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3351  018628  52E5               	movf	postdec1,f,c
  3352  01862A  0012               	return		;funcret
  3353  01862C                     __end_of_SPI1_Exchange8bit:
  3354                           	opt callstack 0
  3355                           
  3356 ;; *************** function _ringBufS_init *****************
  3357 ;; Defined at:
  3358 ;;		line 22 in file "ringbufs.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  _this           2  [STACK] PTR volatile struct ring
  3361 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1  [STACK] void 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3377 ;;Total ram usage:        0 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    7
  3380 ;; This function calls:
  3381 ;;		_memset
  3382 ;; This function is called by:
  3383 ;;		_init_display
  3384 ;; This function uses a reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text10
  3388  018296                     __ptext10:
  3389                           	opt callstack 0
  3390  018296                     _ringBufS_init:
  3391                           	opt callstack 22
  3392                           
  3393                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3394                           
  3395                           ; BSR set to: 57
  3396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3397                           ;incstack = 0
  3398  018296  0E43               	movlw	67
  3399  018298  6EE6               	movwf	postinc1,c
  3400  01829A  0E00               	movlw	0
  3401  01829C  6EE6               	movwf	postinc1,c
  3402  01829E  0E00               	movlw	0
  3403  0182A0  6EE6               	movwf	postinc1,c
  3404  0182A2  0E00               	movlw	0
  3405  0182A4  6EE6               	movwf	postinc1,c
  3406                           
  3407                           ;stkvar	__this @ sp[(-4)+-2]
  3408  0182A6  0EFA               	movlw	-6
  3409  0182A8  006F FF8F FFE6     	movff	plusw1,postinc1
  3410  0182AE  006F FF8F FFE6     	movff	plusw1,postinc1
  3411  0182B4  ECF9  F0A3         	call	_memset	;wreg free
  3412                           
  3413                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3414  0182B8  52E5               	movf	postdec1,f,c
  3415  0182BA  52E5               	movf	postdec1,f,c
  3416  0182BC  0012               	return		;funcret
  3417  0182BE                     __end_of_ringBufS_init:
  3418                           	opt callstack 0
  3419                           
  3420 ;; *************** function _get_switch *****************
  3421 ;; Defined at:
  3422 ;;		line 18 in file "dio.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  i               1  [STACK] unsigned char 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1  [STACK] enum E17013
  3429 ;; Registers used:
  3430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3431 ;; Tracked objects:
  3432 ;;		On entry : 3F/1
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    6
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_main
  3447 ;; This function uses a reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text11
  3451  0182BE                     __ptext11:
  3452                           	opt callstack 0
  3453  0182BE                     _get_switch:
  3454                           	opt callstack 24
  3455                           
  3456                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3457                           ;stkvar	_i @ sp[(0)+-1]
  3458                           
  3459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3460                           ;incstack = 0
  3461  0182BE  0EFF               	movlw	-1
  3462  0182C0  006F FF8C  F032    	movff	plusw1,btemp
  3463  0182C6  0E03               	movlw	3
  3464  0182C8  6432               	cpfsgt	btemp^0,c
  3465  0182CA  D002               	goto	l8910
  3466                           
  3467                           ;dio.c: 21:   return SW_OFF;
  3468  0182CC  0E00               	movlw	0
  3469  0182CE  D008               	goto	L1
  3470  0182D0                     l8910:
  3471                           
  3472                           ;dio.c: 23:  return S.button[i].sw;
  3473                           ;stkvar	_i @ sp[(0)+-1]
  3474  0182D0  0EFF               	movlw	-1
  3475  0182D2  50E3               	movf	plusw1,w,c
  3476  0182D4  0D05               	mullw	5
  3477  0182D6  50F3               	movf	243,w,c
  3478  0182D8  0F60               	addlw	low _S
  3479  0182DA  6ED9               	movwf	fsr2l,c
  3480  0182DC  6ADA               	clrf	fsr2h,c
  3481  0182DE  50DF               	movf	indf2,w,c
  3482  0182E0                     L1:
  3483  0182E0  6E32               	movwf	btemp^0,c
  3484                           
  3485                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3486  0182E2  52E5               	movf	postdec1,f,c
  3487  0182E4  0012               	return		;funcret
  3488  0182E6                     __end_of_get_switch:
  3489                           	opt callstack 0
  3490                           
  3491 ;; *************** function _eaDogM_WriteCommand *****************
  3492 ;; Defined at:
  3493 ;;		line 160 in file "eadog.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  cmd             1  [STACK] const unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1  [STACK] void 
  3500 ;; Registers used:
  3501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3502 ;; Tracked objects:
  3503 ;;		On entry : 3F/3D
  3504 ;;		On exit  : 3F/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:   16
  3514 ;; This function calls:
  3515 ;;		_send_lcd_cmd_dma
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;; This function uses a reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text12
  3522  0187CA                     __ptext12:
  3523                           	opt callstack 0
  3524  0187CA                     _eaDogM_WriteCommand:
  3525                           	opt callstack 14
  3526                           
  3527                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3528                           ;stkvar	_cmd @ sp[(0)+-1]
  3529                           
  3530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3531                           ;incstack = 0
  3532  0187CA  0EFF               	movlw	-1
  3533  0187CC  50E3               	movf	plusw1,w,c
  3534  0187CE  6EE6               	movwf	postinc1,c
  3535  0187D0  EC0A  F0BE         	call	_send_lcd_cmd_dma	;wreg free
  3536                           
  3537                           ; BSR set to: 0
  3538                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3539  0187D4  52E5               	movf	postdec1,f,c
  3540  0187D6  0012               	return		;funcret
  3541  0187D8                     __end_of_eaDogM_WriteCommand:
  3542                           	opt callstack 0
  3543                           
  3544 ;; *************** function _convert_adc_data *****************
  3545 ;; Defined at:
  3546 ;;		line 38 in file "mbmc.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  i               1  [STACK] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1  [STACK] void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/39
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    9
  3567 ;; This function calls:
  3568 ;;		_conv_raw_result
  3569 ;;		_lp_filter
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text13
  3576  0176FC                     __ptext13:
  3577                           	opt callstack 0
  3578  0176FC                     _convert_adc_data:
  3579                           	opt callstack 0
  3580                           
  3581                           ; BSR set to: 0
  3582                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3583  0176FC  52E6               	movf	postinc1,f,c
  3584                           
  3585                           ;mbmc.c: 40:  uint8_t i = 0;
  3586                           ;stkvar	_i @ sp[(-1)+0]
  3587                           
  3588                           ;incstack = 0
  3589  0176FE  0EFF               	movlw	-1
  3590  017700  6AE3               	clrf	plusw1,c
  3591  017702                     l8890:
  3592                           
  3593                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3594  017702  0E00               	movlw	0
  3595  017704  6EE6               	movwf	postinc1,c
  3596                           
  3597                           ;stkvar	_i @ sp[(-2)+0]
  3598  017706  0EFE               	movlw	-2
  3599  017708  50E3               	movf	plusw1,w,c
  3600  01770A  6EE6               	movwf	postinc1,c
  3601  01770C  0E00               	movlw	0
  3602  01770E  6EE6               	movwf	postinc1,c
  3603                           
  3604                           ;stkvar	_i @ sp[(-4)+0]
  3605  017710  0EFC               	movlw	-4
  3606  017712  50E3               	movf	plusw1,w,c
  3607  017714  6EE6               	movwf	postinc1,c
  3608  017716  ECD0  F09B         	call	_conv_raw_result	;wreg free
  3609  01771A  0060  F0CB  FFE6   	movff	btemp,postinc1
  3610  017720  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3611  017726  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3612  01772C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3613  017732  EC88  F0AE         	call	_lp_filter	;wreg free
  3614                           
  3615                           ;stkvar	_i @ sp[(-1)+0]
  3616  017736  0EFF               	movlw	-1
  3617  017738  50E3               	movf	plusw1,w,c
  3618  01773A  0D04               	mullw	4
  3619  01773C  0E00               	movlw	low _C
  3620  01773E  24F3               	addwf	243,w,c
  3621  017740  6ED9               	movwf	fsr2l,c
  3622  017742  0E01               	movlw	high _C
  3623  017744  20F4               	addwfc	prodh,w,c
  3624  017746  6EDA               	movwf	fsr2h,c
  3625  017748  0060  F0CB  FFDE   	movff	btemp,postinc2
  3626  01774E  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3627  017754  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3628  01775A  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3629                           
  3630                           ;mbmc.c: 48:  } while (++i < 16);
  3631                           ;stkvar	_i @ sp[(-1)+0]
  3632  017760  0EFF               	movlw	-1
  3633  017762  2AE3               	incf	plusw1,f,c
  3634  017764  0EFF               	movlw	-1
  3635  017766  006F FF8C  F032    	movff	plusw1,btemp
  3636  01776C  0E0F               	movlw	15
  3637  01776E  6432               	cpfsgt	btemp^0,c
  3638  017770  D7C8               	goto	l8890
  3639                           
  3640                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3641  017772  52E5               	movf	postdec1,f,c
  3642  017774  0012               	return		;funcret
  3643  017776                     __end_of_convert_adc_data:
  3644                           	opt callstack 0
  3645                           
  3646 ;; *************** function _conv_raw_result *****************
  3647 ;; Defined at:
  3648 ;;		line 80 in file "daq.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  chan            1  [STACK] const enum E16136
  3651 ;;  to_what         1  [STACK] const enum E16198
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  4  [STACK] float 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/39
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3667 ;;Total ram usage:        0 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    8
  3670 ;; This function calls:
  3671 ;;		___fldiv
  3672 ;;		___flmul
  3673 ;;		___flsub
  3674 ;;		___xxtofl
  3675 ;;		_get_raw_result
  3676 ;;		_nanf
  3677 ;; This function is called by:
  3678 ;;		_convert_adc_data
  3679 ;; This function uses a reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text14
  3683  0137A0                     __ptext14:
  3684                           	opt callstack 0
  3685  0137A0                     _conv_raw_result:
  3686                           	opt callstack 21
  3687                           
  3688                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  3689                           
  3690                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3691                           ;incstack = 0
  3692  0137A0  D242               	goto	l8608
  3693  0137A2                     l8554:
  3694                           
  3695                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  3696                           ;stkvar	_chan @ sp[(0)+-1]
  3697  0137A2  0EFF               	movlw	-1
  3698  0137A4  006F FF8C  F03D    	movff	plusw1,btemp+11
  3699  0137AA  0E77               	movlw	119
  3700  0137AC  6E3A               	movwf	(btemp+8)^0,c
  3701  0137AE  0E3C               	movlw	60
  3702  0137B0  6E3B               	movwf	(btemp+9)^0,c
  3703  0137B2  2A3D               	incf	(btemp+11)^0,f,c
  3704  0137B4  D003               	goto	u8064
  3705  0137B6                     u8065:
  3706  0137B6  343B               	rlcf	(btemp+9)^0,w,c
  3707  0137B8  323B               	rrcf	(btemp+9)^0,f,c
  3708  0137BA  323A               	rrcf	(btemp+8)^0,f,c
  3709  0137BC                     u8064:
  3710  0137BC  2E3D               	decfsz	(btemp+11)^0,f,c
  3711  0137BE  D7FB               	goto	u8065
  3712  0137C0  B03A               	btfsc	(btemp+8)^0,0,c
  3713  0137C2  D007               	goto	l8560
  3714                           
  3715                           ;daq.c: 86:    return nanf("");
  3716  0137C4  0EC7               	movlw	low (STR_30+18)
  3717  0137C6  6EE6               	movwf	postinc1,c
  3718  0137C8  0EFE               	movlw	high (STR_30+18)
  3719  0137CA  6EE6               	movwf	postinc1,c
  3720  0137CC  ECF1  F0BC         	call	_nanf	;wreg free
  3721  0137D0  D23A               	goto	l1657
  3722  0137D2                     l8560:
  3723                           
  3724                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  3725                           ;stkvar	_chan @ sp[(0)+-1]
  3726  0137D2  0EFF               	movlw	-1
  3727  0137D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  3728  0137DA  0E03               	movlw	3
  3729  0137DC  6E3A               	movwf	(btemp+8)^0,c
  3730  0137DE  0E00               	movlw	0
  3731  0137E0  6E3B               	movwf	(btemp+9)^0,c
  3732  0137E2  2A3D               	incf	(btemp+11)^0,f,c
  3733  0137E4  D003               	goto	u8084
  3734  0137E6                     u8085:
  3735  0137E6  343B               	rlcf	(btemp+9)^0,w,c
  3736  0137E8  323B               	rrcf	(btemp+9)^0,f,c
  3737  0137EA  323A               	rrcf	(btemp+8)^0,f,c
  3738  0137EC                     u8084:
  3739  0137EC  2E3D               	decfsz	(btemp+11)^0,f,c
  3740  0137EE  D7FB               	goto	u8085
  3741  0137F0  A03A               	btfss	(btemp+8)^0,0,c
  3742  0137F2  D0EB               	goto	l8574
  3743                           
  3744                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  3745                           ;stkvar	_chan @ sp[(0)+-1]
  3746  0137F4  0EFF               	movlw	-1
  3747  0137F6  006F FF8C  F03D    	movff	plusw1,btemp+11
  3748  0137FC  0E01               	movlw	1
  3749  0137FE  6E3A               	movwf	(btemp+8)^0,c
  3750  013800  0E00               	movlw	0
  3751  013802  6E3B               	movwf	(btemp+9)^0,c
  3752  013804  2A3D               	incf	(btemp+11)^0,f,c
  3753  013806  D003               	goto	u8104
  3754  013808                     u8105:
  3755  013808  343B               	rlcf	(btemp+9)^0,w,c
  3756  01380A  323B               	rrcf	(btemp+9)^0,f,c
  3757  01380C  323A               	rrcf	(btemp+8)^0,f,c
  3758  01380E                     u8104:
  3759  01380E  2E3D               	decfsz	(btemp+11)^0,f,c
  3760  013810  D7FB               	goto	u8105
  3761  013812  A03A               	btfss	(btemp+8)^0,0,c
  3762  013814  D06D               	goto	l8570
  3763                           
  3764                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  3765  013816  0E7B               	movlw	123
  3766  013818  6EE6               	movwf	postinc1,c
  3767  01381A  0E14               	movlw	20
  3768  01381C  6EE6               	movwf	postinc1,c
  3769  01381E  0EAE               	movlw	174
  3770  013820  6EE6               	movwf	postinc1,c
  3771  013822  0E3D               	movlw	61
  3772  013824  6EE6               	movwf	postinc1,c
  3773  013826  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  3774  01382C  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  3775  013832  0E00               	movlw	0
  3776  013834  BE3B               	btfsc	(btemp+9)^0,7,c
  3777  013836  0EFF               	movlw	255
  3778  013838  6E3C               	movwf	(btemp+10)^0,c
  3779  01383A  6E3D               	movwf	(btemp+11)^0,c
  3780  01383C  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3781  013842  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3782  013848  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3783  01384E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3784  013854  0E01               	movlw	1
  3785  013856  6EE6               	movwf	postinc1,c
  3786  013858  ECA2  F0AC         	call	___xxtofl	;wreg free
  3787  01385C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3788  013862  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3789  013868  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3790  01386E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3791                           
  3792                           ;stkvar	_chan @ sp[(-8)+-1]
  3793  013874  0EF7               	movlw	-9
  3794  013876  50E3               	movf	plusw1,w,c
  3795  013878  6EE6               	movwf	postinc1,c
  3796  01387A  EC16  F0C3         	call	_get_raw_result	;wreg free
  3797  01387E  0060  F0C8  F03C   	movff	btemp,btemp+10
  3798  013884  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3799  01388A  503C               	movf	(btemp+10)^0,w,c
  3800  01388C  6E36               	movwf	(btemp+4)^0,c
  3801  01388E  503D               	movf	(btemp+11)^0,w,c
  3802  013890  6E37               	movwf	(btemp+5)^0,c
  3803  013892  6A38               	clrf	(btemp+6)^0,c
  3804  013894  6A39               	clrf	(btemp+7)^0,c
  3805  013896  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3806  01389C  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3807  0138A2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3808  0138A8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3809  0138AE  0E00               	movlw	0
  3810  0138B0  6EE6               	movwf	postinc1,c
  3811  0138B2  ECA2  F0AC         	call	___xxtofl	;wreg free
  3812  0138B6  0060  F0CB  FFE6   	movff	btemp,postinc1
  3813  0138BC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3814  0138C2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3815  0138C8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3816  0138CE  ECA3  F0BE         	call	___flsub	;wreg free
  3817  0138D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  3818  0138D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3819  0138DE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3820  0138E4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3821  0138EA  ECC1  F08E         	call	___flmul	;wreg free
  3822  0138EE  D1AB               	goto	l1657
  3823  0138F0                     l8570:
  3824                           
  3825                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  3826  0138F0  0E29               	movlw	41
  3827  0138F2  6EE6               	movwf	postinc1,c
  3828  0138F4  0E5C               	movlw	92
  3829  0138F6  6EE6               	movwf	postinc1,c
  3830  0138F8  0E0F               	movlw	15
  3831  0138FA  6EE6               	movwf	postinc1,c
  3832  0138FC  0E3D               	movlw	61
  3833  0138FE  6EE6               	movwf	postinc1,c
  3834  013900  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  3835  013906  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  3836  01390C  0E00               	movlw	0
  3837  01390E  BE3B               	btfsc	(btemp+9)^0,7,c
  3838  013910  0EFF               	movlw	255
  3839  013912  6E3C               	movwf	(btemp+10)^0,c
  3840  013914  6E3D               	movwf	(btemp+11)^0,c
  3841  013916  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3842  01391C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3843  013922  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3844  013928  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3845  01392E  0E01               	movlw	1
  3846  013930  6EE6               	movwf	postinc1,c
  3847  013932  ECA2  F0AC         	call	___xxtofl	;wreg free
  3848  013936  0060  F0CB  FFE6   	movff	btemp,postinc1
  3849  01393C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3850  013942  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3851  013948  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3852                           
  3853                           ;stkvar	_chan @ sp[(-8)+-1]
  3854  01394E  0EF7               	movlw	-9
  3855  013950  50E3               	movf	plusw1,w,c
  3856  013952  6EE6               	movwf	postinc1,c
  3857  013954  EC16  F0C3         	call	_get_raw_result	;wreg free
  3858  013958  0060  F0C8  F03C   	movff	btemp,btemp+10
  3859  01395E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3860  013964  503C               	movf	(btemp+10)^0,w,c
  3861  013966  6E36               	movwf	(btemp+4)^0,c
  3862  013968  503D               	movf	(btemp+11)^0,w,c
  3863  01396A  6E37               	movwf	(btemp+5)^0,c
  3864  01396C  6A38               	clrf	(btemp+6)^0,c
  3865  01396E  6A39               	clrf	(btemp+7)^0,c
  3866  013970  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3867  013976  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3868  01397C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3869  013982  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3870  013988  0E00               	movlw	0
  3871  01398A  6EE6               	movwf	postinc1,c
  3872  01398C  ECA2  F0AC         	call	___xxtofl	;wreg free
  3873  013990  0060  F0CB  FFE6   	movff	btemp,postinc1
  3874  013996  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3875  01399C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3876  0139A2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3877  0139A8  ECA3  F0BE         	call	___flsub	;wreg free
  3878  0139AC  0060  F0CB  FFE6   	movff	btemp,postinc1
  3879  0139B2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3880  0139B8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3881  0139BE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3882  0139C4  ECC1  F08E         	call	___flmul	;wreg free
  3883  0139C8  D13E               	goto	l1657
  3884  0139CA                     l8574:
  3885                           
  3886                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  3887                           ;stkvar	_chan @ sp[(0)+-1]
  3888  0139CA  0EFF               	movlw	-1
  3889  0139CC  006F FF8C  F03D    	movff	plusw1,btemp+11
  3890  0139D2  0E00               	movlw	0
  3891  0139D4  6E3A               	movwf	(btemp+8)^0,c
  3892  0139D6  0E08               	movlw	8
  3893  0139D8  6E3B               	movwf	(btemp+9)^0,c
  3894  0139DA  2A3D               	incf	(btemp+11)^0,f,c
  3895  0139DC  D003               	goto	u8124
  3896  0139DE                     u8125:
  3897  0139DE  343B               	rlcf	(btemp+9)^0,w,c
  3898  0139E0  323B               	rrcf	(btemp+9)^0,f,c
  3899  0139E2  323A               	rrcf	(btemp+8)^0,f,c
  3900  0139E4                     u8124:
  3901  0139E4  2E3D               	decfsz	(btemp+11)^0,f,c
  3902  0139E6  D7FB               	goto	u8125
  3903  0139E8  A03A               	btfss	(btemp+8)^0,0,c
  3904  0139EA  D008               	goto	l8582
  3905                           
  3906                           ;daq.c: 96:     return 25.0;
  3907  0139EC  0E00               	movlw	0
  3908  0139EE  6E32               	movwf	btemp^0,c
  3909  0139F0  0E00               	movlw	0
  3910  0139F2  6E33               	movwf	(btemp+1)^0,c
  3911  0139F4  0EC8               	movlw	200
  3912  0139F6  6E34               	movwf	(btemp+2)^0,c
  3913  0139F8  0E41               	movlw	65
  3914  0139FA  D113               	goto	L2
  3915  0139FC                     l8582:
  3916                           
  3917                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  3918  0139FC  0E00               	movlw	0
  3919  0139FE  6EE6               	movwf	postinc1,c
  3920  013A00  0E00               	movlw	0
  3921  013A02  6EE6               	movwf	postinc1,c
  3922  013A04  0E7A               	movlw	122
  3923  013A06  6EE6               	movwf	postinc1,c
  3924  013A08  0E44               	movlw	68
  3925  013A0A  6EE6               	movwf	postinc1,c
  3926  013A0C  0E61               	movlw	97
  3927  013A0E  6EE6               	movwf	postinc1,c
  3928  013A10  0E03               	movlw	3
  3929  013A12  6EE6               	movwf	postinc1,c
  3930  013A14  0E84               	movlw	132
  3931  013A16  6EE6               	movwf	postinc1,c
  3932  013A18  0E40               	movlw	64
  3933  013A1A  6EE6               	movwf	postinc1,c
  3934                           
  3935                           ;stkvar	_chan @ sp[(-8)+-1]
  3936  013A1C  0EF7               	movlw	-9
  3937  013A1E  50E3               	movf	plusw1,w,c
  3938  013A20  6EE6               	movwf	postinc1,c
  3939  013A22  EC16  F0C3         	call	_get_raw_result	;wreg free
  3940  013A26  0060  F0C8  F03C   	movff	btemp,btemp+10
  3941  013A2C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3942  013A32  503C               	movf	(btemp+10)^0,w,c
  3943  013A34  6E36               	movwf	(btemp+4)^0,c
  3944  013A36  503D               	movf	(btemp+11)^0,w,c
  3945  013A38  6E37               	movwf	(btemp+5)^0,c
  3946  013A3A  6A38               	clrf	(btemp+6)^0,c
  3947  013A3C  6A39               	clrf	(btemp+7)^0,c
  3948  013A3E  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3949  013A44  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3950  013A4A  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3951  013A50  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3952  013A56  0E00               	movlw	0
  3953  013A58  6EE6               	movwf	postinc1,c
  3954  013A5A  ECA2  F0AC         	call	___xxtofl	;wreg free
  3955  013A5E  0060  F0CB  FFE6   	movff	btemp,postinc1
  3956  013A64  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3957  013A6A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3958  013A70  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3959  013A76  ECC1  F08E         	call	___flmul	;wreg free
  3960  013A7A  0060  F0CB  FFE6   	movff	btemp,postinc1
  3961  013A80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3962  013A86  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3963  013A8C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3964  013A92  ECB4  F096         	call	___fldiv	;wreg free
  3965  013A96  D0D7               	goto	l1657
  3966  013A98                     l8586:
  3967                           
  3968                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  3969                           ;stkvar	_chan @ sp[(0)+-1]
  3970  013A98  0EFF               	movlw	-1
  3971  013A9A  006F FF8C  F03D    	movff	plusw1,btemp+11
  3972  013AA0  0E03               	movlw	3
  3973  013AA2  6E3A               	movwf	(btemp+8)^0,c
  3974  013AA4  0E00               	movlw	0
  3975  013AA6  6E3B               	movwf	(btemp+9)^0,c
  3976  013AA8  2A3D               	incf	(btemp+11)^0,f,c
  3977  013AAA  D003               	goto	u8144
  3978  013AAC                     u8145:
  3979  013AAC  343B               	rlcf	(btemp+9)^0,w,c
  3980  013AAE  323B               	rrcf	(btemp+9)^0,f,c
  3981  013AB0  323A               	rrcf	(btemp+8)^0,f,c
  3982  013AB2                     u8144:
  3983  013AB2  2E3D               	decfsz	(btemp+11)^0,f,c
  3984  013AB4  D7FB               	goto	u8145
  3985  013AB6  B03A               	btfsc	(btemp+8)^0,0,c
  3986  013AB8  D011               	goto	u8170
  3987                           
  3988                           ;stkvar	_chan @ sp[(0)+-1]
  3989  013ABA  0EFF               	movlw	-1
  3990  013ABC  006F FF8C  F03D    	movff	plusw1,btemp+11
  3991  013AC2  0E00               	movlw	0
  3992  013AC4  6E3A               	movwf	(btemp+8)^0,c
  3993  013AC6  0E08               	movlw	8
  3994  013AC8  6E3B               	movwf	(btemp+9)^0,c
  3995  013ACA  2A3D               	incf	(btemp+11)^0,f,c
  3996  013ACC  D003               	goto	u8164
  3997  013ACE                     u8165:
  3998  013ACE  343B               	rlcf	(btemp+9)^0,w,c
  3999  013AD0  323B               	rrcf	(btemp+9)^0,f,c
  4000  013AD2  323A               	rrcf	(btemp+8)^0,f,c
  4001  013AD4                     u8164:
  4002  013AD4  2E3D               	decfsz	(btemp+11)^0,f,c
  4003  013AD6  D7FB               	goto	u8165
  4004  013AD8  A03A               	btfss	(btemp+8)^0,0,c
  4005  013ADA  D04E               	goto	l8594
  4006  013ADC                     u8170:
  4007                           
  4008                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4009  013ADC  0E00               	movlw	0
  4010  013ADE  6EE6               	movwf	postinc1,c
  4011  013AE0  0E00               	movlw	0
  4012  013AE2  6EE6               	movwf	postinc1,c
  4013  013AE4  0E7A               	movlw	122
  4014  013AE6  6EE6               	movwf	postinc1,c
  4015  013AE8  0E44               	movlw	68
  4016  013AEA  6EE6               	movwf	postinc1,c
  4017  013AEC  0E00               	movlw	0
  4018  013AEE  6EE6               	movwf	postinc1,c
  4019  013AF0  0E00               	movlw	0
  4020  013AF2  6EE6               	movwf	postinc1,c
  4021  013AF4  0E20               	movlw	32
  4022  013AF6  6EE6               	movwf	postinc1,c
  4023  013AF8  0E3F               	movlw	63
  4024  013AFA  6EE6               	movwf	postinc1,c
  4025                           
  4026                           ;stkvar	_chan @ sp[(-8)+-1]
  4027  013AFC  0EF7               	movlw	-9
  4028  013AFE  50E3               	movf	plusw1,w,c
  4029  013B00  6EE6               	movwf	postinc1,c
  4030  013B02  EC16  F0C3         	call	_get_raw_result	;wreg free
  4031  013B06  0060  F0C8  F03C   	movff	btemp,btemp+10
  4032  013B0C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4033  013B12  503C               	movf	(btemp+10)^0,w,c
  4034  013B14  6E36               	movwf	(btemp+4)^0,c
  4035  013B16  503D               	movf	(btemp+11)^0,w,c
  4036  013B18  6E37               	movwf	(btemp+5)^0,c
  4037  013B1A  6A38               	clrf	(btemp+6)^0,c
  4038  013B1C  6A39               	clrf	(btemp+7)^0,c
  4039  013B1E  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4040  013B24  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4041  013B2A  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4042  013B30  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4043  013B36  0E00               	movlw	0
  4044  013B38  6EE6               	movwf	postinc1,c
  4045  013B3A  ECA2  F0AC         	call	___xxtofl	;wreg free
  4046  013B3E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4047  013B44  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4048  013B4A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4049  013B50  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4050  013B56  ECC1  F08E         	call	___flmul	;wreg free
  4051  013B5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4052  013B60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4053  013B66  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4054  013B6C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4055  013B72  ECB4  F096         	call	___fldiv	;wreg free
  4056  013B76  D067               	goto	l1657
  4057  013B78                     l8594:
  4058                           
  4059                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4060  013B78  0E00               	movlw	0
  4061  013B7A  6EE6               	movwf	postinc1,c
  4062  013B7C  0E00               	movlw	0
  4063  013B7E  6EE6               	movwf	postinc1,c
  4064  013B80  0E7A               	movlw	122
  4065  013B82  6EE6               	movwf	postinc1,c
  4066  013B84  0E44               	movlw	68
  4067  013B86  6EE6               	movwf	postinc1,c
  4068  013B88  0E61               	movlw	97
  4069  013B8A  6EE6               	movwf	postinc1,c
  4070  013B8C  0E03               	movlw	3
  4071  013B8E  6EE6               	movwf	postinc1,c
  4072  013B90  0E84               	movlw	132
  4073  013B92  6EE6               	movwf	postinc1,c
  4074  013B94  0E40               	movlw	64
  4075  013B96  6EE6               	movwf	postinc1,c
  4076                           
  4077                           ;stkvar	_chan @ sp[(-8)+-1]
  4078  013B98  0EF7               	movlw	-9
  4079  013B9A  50E3               	movf	plusw1,w,c
  4080  013B9C  6EE6               	movwf	postinc1,c
  4081  013B9E  EC16  F0C3         	call	_get_raw_result	;wreg free
  4082  013BA2  0060  F0C8  F03C   	movff	btemp,btemp+10
  4083  013BA8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4084  013BAE  503C               	movf	(btemp+10)^0,w,c
  4085  013BB0  6E36               	movwf	(btemp+4)^0,c
  4086  013BB2  503D               	movf	(btemp+11)^0,w,c
  4087  013BB4  6E37               	movwf	(btemp+5)^0,c
  4088  013BB6  6A38               	clrf	(btemp+6)^0,c
  4089  013BB8  6A39               	clrf	(btemp+7)^0,c
  4090  013BBA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4091  013BC0  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4092  013BC6  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4093  013BCC  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4094  013BD2  0E00               	movlw	0
  4095  013BD4  6EE6               	movwf	postinc1,c
  4096  013BD6  ECA2  F0AC         	call	___xxtofl	;wreg free
  4097  013BDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4098  013BE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4099  013BE6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4100  013BEC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4101  013BF2  ECC1  F08E         	call	___flmul	;wreg free
  4102  013BF6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4103  013BFC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4104  013C02  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4105  013C08  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4106  013C0E  ECB4  F096         	call	___fldiv	;wreg free
  4107  013C12  D019               	goto	l1657
  4108  013C14                     l8600:
  4109                           
  4110                           ;daq.c: 109:   return 0.0;
  4111  013C14  0E00               	movlw	0
  4112  013C16  6E32               	movwf	btemp^0,c
  4113  013C18  0E00               	movlw	0
  4114  013C1A  6E33               	movwf	(btemp+1)^0,c
  4115  013C1C  0E00               	movlw	0
  4116  013C1E  6E34               	movwf	(btemp+2)^0,c
  4117  013C20  0E00               	movlw	0
  4118  013C22                     L2:
  4119  013C22  6E35               	movwf	(btemp+3)^0,c
  4120  013C24  D010               	goto	l1657
  4121  013C26                     l8608:
  4122                           
  4123                           ;stkvar	_to_what @ sp[(0)+-2]
  4124  013C26  0EFE               	movlw	-2
  4125  013C28  50E3               	movf	plusw1,w,c
  4126  013C2A  6E3C               	movwf	(btemp+10)^0,c
  4127  013C2C  6A3D               	clrf	(btemp+11)^0,c
  4128                           
  4129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4130                           ; Switch size 1, requested type "simple"
  4131                           ; Number of cases is 1, Range of values is 0 to 0
  4132                           ; switch strategies available:
  4133                           ; Name         Instructions Cycles
  4134                           ; simple_byte            4     3 (average)
  4135                           ;	Chosen strategy is simple_byte
  4136  013C2E  503D               	movf	(btemp+11)^0,w,c
  4137  013C30  0A00               	xorlw	0	; case 0
  4138  013C32  A4D8               	btfss	status,2,c
  4139  013C34  D7EF               	goto	l8600
  4140                           
  4141                           ; Switch size 1, requested type "simple"
  4142                           ; Number of cases is 2, Range of values is 0 to 1
  4143                           ; switch strategies available:
  4144                           ; Name         Instructions Cycles
  4145                           ; simple_byte            7     4 (average)
  4146                           ;	Chosen strategy is simple_byte
  4147  013C36  503C               	movf	(btemp+10)^0,w,c
  4148  013C38  0A00               	xorlw	0	; case 0
  4149  013C3A  B4D8               	btfsc	status,2,c
  4150  013C3C  D5B2               	goto	l8554
  4151  013C3E  0A01               	xorlw	1	; case 1
  4152  013C40  B4D8               	btfsc	status,2,c
  4153  013C42  D72A               	goto	l8586
  4154  013C44  D7E7               	goto	l8600
  4155  013C46                     l1657:
  4156                           
  4157                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4158  013C46  52E5               	movf	postdec1,f,c
  4159  013C48  52E5               	movf	postdec1,f,c
  4160  013C4A  0012               	return		;funcret
  4161  013C4C                     __end_of_conv_raw_result:
  4162                           	opt callstack 0
  4163                           
  4164 ;; *************** function _nanf *****************
  4165 ;; Defined at:
  4166 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  s               2  [STACK] PTR const unsigned char 
  4169 ;;		 -> STR_36(1), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  u               4  [STACK] struct .
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  4  [STACK] float 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/39
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4185 ;;Total ram usage:        0 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    6
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_conv_raw_result
  4192 ;; This function uses a reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text15
  4196  0179E2                     __ptext15:
  4197                           	opt callstack 0
  4198  0179E2                     _nanf:
  4199                           	opt callstack 0
  4200                           
  4201                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4202  0179E2  52E6               	movf	postinc1,f,c
  4203  0179E4  52E6               	movf	postinc1,f,c
  4204  0179E6  52E6               	movf	postinc1,f,c
  4205  0179E8  52E6               	movf	postinc1,f,c
  4206                           
  4207                           ;incstack = 0
  4208  0179EA  0EFF               	movlw	255
  4209  0179EC  6E3A               	movwf	(btemp+8)^0,c
  4210  0179EE  0EFF               	movlw	255
  4211  0179F0  6E3B               	movwf	(btemp+9)^0,c
  4212  0179F2  0EFF               	movlw	255
  4213  0179F4  6E3C               	movwf	(btemp+10)^0,c
  4214  0179F6  0E7F               	movlw	127
  4215  0179F8  6E3D               	movwf	(btemp+11)^0,c
  4216                           
  4217                           ;stkvar	_u @ sp[(-4)+0]
  4218  0179FA  0EFC               	movlw	-4
  4219  0179FC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4220  017A02  0EFD               	movlw	-3
  4221  017A04  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4222  017A0A  0EFE               	movlw	-2
  4223  017A0C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4224  017A12  0EFF               	movlw	-1
  4225  017A14  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4226                           
  4227                           ;stkvar	_u @ sp[(-4)+0]
  4228  017A1A  0EFC               	movlw	-4
  4229  017A1C  006F FF8C  F032    	movff	plusw1,btemp
  4230  017A22  0EFD               	movlw	-3
  4231  017A24  006F FF8C  F033    	movff	plusw1,btemp+1
  4232  017A2A  0EFE               	movlw	-2
  4233  017A2C  006F FF8C  F034    	movff	plusw1,btemp+2
  4234  017A32  0EFF               	movlw	-1
  4235  017A34  006F FF8C  F035    	movff	plusw1,btemp+3
  4236                           
  4237                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4238  017A3A  0EFA               	movlw	250
  4239  017A3C  26E1               	addwf	fsr1l,f,c
  4240  017A3E  0EFF               	movlw	255
  4241  017A40  22E2               	addwfc	fsr1h,f,c
  4242  017A42  0012               	return		;funcret
  4243  017A44                     __end_of_nanf:
  4244                           	opt callstack 0
  4245                           
  4246 ;; *************** function _get_raw_result *****************
  4247 ;; Defined at:
  4248 ;;		line 72 in file "daq.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  index           1  [STACK] const enum E16136
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  2  [STACK] unsigned short 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/39
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    6
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_conv_raw_result
  4273 ;; This function uses a reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text16
  4277  01862C                     __ptext16:
  4278                           	opt callstack 0
  4279  01862C                     _get_raw_result:
  4280                           	opt callstack 22
  4281                           
  4282                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4283                           ;stkvar	_index @ sp[(0)+-1]
  4284                           
  4285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4286                           ;incstack = 0
  4287  01862C  0EFF               	movlw	-1
  4288  01862E  50E3               	movf	plusw1,w,c
  4289  018630  0D02               	mullw	2
  4290  018632  50F3               	movf	243,w,c
  4291  018634  0FC7               	addlw	low _R
  4292  018636  6ED9               	movwf	fsr2l,c
  4293  018638  6ADA               	clrf	fsr2h,c
  4294  01863A  006F FF78  F032    	movff	postinc2,btemp
  4295  018640  006F FF74  F033    	movff	postdec2,btemp+1
  4296                           
  4297                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4298  018646  52E5               	movf	postdec1,f,c
  4299  018648  0012               	return		;funcret
  4300  01864A                     __end_of_get_raw_result:
  4301                           	opt callstack 0
  4302                           
  4303 ;; *************** function ___xxtofl *****************
  4304 ;; Defined at:
  4305 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  sign            1  [STACK] unsigned char 
  4308 ;;  val             4  [STACK] long 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  arg             4  [STACK] unsigned long 
  4311 ;;  exp             1  [STACK] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  4  [STACK] unsigned char 
  4314 ;; Registers used:
  4315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/39
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4325 ;;Total ram usage:        0 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    6
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_conv_raw_result
  4332 ;; This function uses a reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text17
  4336  015944                     __ptext17:
  4337                           	opt callstack 0
  4338  015944                     ___xxtofl:
  4339                           	opt callstack 0
  4340                           
  4341                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4342  015944  0E05               	movlw	5
  4343  015946  26E1               	addwf	fsr1l,f,c
  4344  015948  0E00               	movlw	0
  4345  01594A  22E2               	addwfc	fsr1h,f,c
  4346                           
  4347                           ;stkvar	_sign @ sp[(-5)+-1]
  4348                           
  4349                           ;incstack = 0
  4350  01594C  0EFA               	movlw	-6
  4351  01594E  50E3               	movf	plusw1,w,c
  4352  015950  B4D8               	btfsc	status,2,c
  4353  015952  D01D               	goto	l8032
  4354                           
  4355                           ;stkvar	_val @ sp[(-5)+-5]
  4356  015954  0EF9               	movlw	-7
  4357  015956  AEE3               	btfss	plusw1,7,c
  4358  015958  D01A               	goto	l8032
  4359                           
  4360                           ;stkvar	_val @ sp[(-5)+-5]
  4361  01595A  0EF6               	movlw	-10
  4362  01595C  006F FF8C  F03A    	movff	plusw1,btemp+8
  4363  015962  0EF7               	movlw	-9
  4364  015964  006F FF8C  F03B    	movff	plusw1,btemp+9
  4365  01596A  0EF8               	movlw	-8
  4366  01596C  006F FF8C  F03C    	movff	plusw1,btemp+10
  4367  015972  0EF9               	movlw	-7
  4368  015974  006F FF8C  F03D    	movff	plusw1,btemp+11
  4369  01597A  1E3A               	comf	(btemp+8)^0,f,c
  4370  01597C  1E3B               	comf	(btemp+9)^0,f,c
  4371  01597E  1E3C               	comf	(btemp+10)^0,f,c
  4372  015980  1E3D               	comf	(btemp+11)^0,f,c
  4373  015982  2A3A               	incf	(btemp+8)^0,f,c
  4374  015984  0E00               	movlw	0
  4375  015986  223B               	addwfc	(btemp+9)^0,f,c
  4376  015988  223C               	addwfc	(btemp+10)^0,f,c
  4377  01598A  223D               	addwfc	(btemp+11)^0,f,c
  4378  01598C  D010               	goto	L3
  4379  01598E                     l8032:
  4380                           
  4381                           ;stkvar	_val @ sp[(-5)+-5]
  4382  01598E  0EF6               	movlw	-10
  4383  015990  006F FF8C  F03A    	movff	plusw1,btemp+8
  4384  015996  0EF7               	movlw	-9
  4385  015998  006F FF8C  F03B    	movff	plusw1,btemp+9
  4386  01599E  0EF8               	movlw	-8
  4387  0159A0  006F FF8C  F03C    	movff	plusw1,btemp+10
  4388  0159A6  0EF9               	movlw	-7
  4389  0159A8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4390  0159AE                     L3:
  4391                           
  4392                           ;stkvar	_arg @ sp[(-5)+0]
  4393  0159AE  0EFB               	movlw	-5
  4394  0159B0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4395  0159B6  0EFC               	movlw	-4
  4396  0159B8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4397  0159BE  0EFD               	movlw	-3
  4398  0159C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4399  0159C6  0EFE               	movlw	-2
  4400  0159C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4401                           
  4402                           ;stkvar	_val @ sp[(-5)+-5]
  4403  0159CE  0EF6               	movlw	-10
  4404  0159D0  50E3               	movf	plusw1,w,c
  4405  0159D2  E113               	bnz	l8040
  4406  0159D4  0EF7               	movlw	-9
  4407  0159D6  50E3               	movf	plusw1,w,c
  4408  0159D8  E110               	bnz	l8040
  4409  0159DA  0EF8               	movlw	-8
  4410  0159DC  50E3               	movf	plusw1,w,c
  4411  0159DE  E10D               	bnz	l8040
  4412  0159E0  0EF9               	movlw	-7
  4413  0159E2  50E3               	movf	plusw1,w,c
  4414  0159E4  A4D8               	btfss	status,2,c
  4415  0159E6  D009               	goto	l8040
  4416  0159E8  0E00               	movlw	0
  4417  0159EA  6E32               	movwf	btemp^0,c
  4418  0159EC  0E00               	movlw	0
  4419  0159EE  6E33               	movwf	(btemp+1)^0,c
  4420  0159F0  0E00               	movlw	0
  4421  0159F2  6E34               	movwf	(btemp+2)^0,c
  4422  0159F4  0E00               	movlw	0
  4423  0159F6  6E35               	movwf	(btemp+3)^0,c
  4424  0159F8  D0A2               	goto	l2705
  4425  0159FA                     l8040:
  4426  0159FA  0E96               	movlw	150
  4427  0159FC  6E3D               	movwf	(btemp+11)^0,c
  4428                           
  4429                           ;stkvar	_exp @ sp[(-5)+4]
  4430  0159FE  0EFF               	movlw	-1
  4431  015A00  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4432  015A06  D00B               	goto	l8044
  4433  015A08                     l8042:
  4434                           
  4435                           ;stkvar	_exp @ sp[(-5)+4]
  4436  015A08  0EFF               	movlw	-1
  4437  015A0A  2AE3               	incf	plusw1,f,c
  4438                           
  4439                           ;stkvar	_arg @ sp[(-5)+0]
  4440  015A0C  90D8               	bcf	status,0,c
  4441  015A0E  0EFE               	movlw	-2
  4442  015A10  32E3               	rrcf	plusw1,f,c
  4443  015A12  0EFD               	movlw	-3
  4444  015A14  32E3               	rrcf	plusw1,f,c
  4445  015A16  0EFC               	movlw	-4
  4446  015A18  32E3               	rrcf	plusw1,f,c
  4447  015A1A  0EFB               	movlw	-5
  4448  015A1C  32E3               	rrcf	plusw1,f,c
  4449  015A1E                     l8044:
  4450                           
  4451                           ;stkvar	_arg @ sp[(-5)+0]
  4452  015A1E  50E1               	movf	fsr1l,w,c
  4453  015A20  0FFB               	addlw	-5
  4454  015A22  6ED9               	movwf	fsr2l,c
  4455  015A24  50E2               	movf	fsr1h,w,c
  4456  015A26  6EDA               	movwf	fsr2h,c
  4457  015A28  0EFF               	movlw	255
  4458  015A2A  22DA               	addwfc	fsr2h,f,c
  4459  015A2C  52DE               	movf	postinc2,f,c
  4460  015A2E  52DE               	movf	postinc2,f,c
  4461  015A30  52DE               	movf	postinc2,f,c
  4462  015A32  0EFE               	movlw	254
  4463  015A34  14DD               	andwf	postdec2,w,c
  4464  015A36  B4D8               	btfsc	status,2,c
  4465  015A38  D018               	goto	l8052
  4466  015A3A  D7E6               	goto	l8042
  4467  015A3C                     l8046:
  4468                           
  4469                           ;stkvar	_exp @ sp[(-5)+4]
  4470  015A3C  0EFF               	movlw	-1
  4471  015A3E  2AE3               	incf	plusw1,f,c
  4472                           
  4473                           ;stkvar	_arg @ sp[(-5)+0]
  4474  015A40  50E1               	movf	fsr1l,w,c
  4475  015A42  0FFB               	addlw	-5
  4476  015A44  6ED9               	movwf	fsr2l,c
  4477  015A46  50E2               	movf	fsr1h,w,c
  4478  015A48  6EDA               	movwf	fsr2h,c
  4479  015A4A  0EFF               	movlw	255
  4480  015A4C  22DA               	addwfc	fsr2h,f,c
  4481  015A4E  2ADE               	incf	postinc2,f,c
  4482  015A50  0E00               	movlw	0
  4483  015A52  22DE               	addwfc	postinc2,f,c
  4484  015A54  22DE               	addwfc	postinc2,f,c
  4485  015A56  22DE               	addwfc	postinc2,f,c
  4486                           
  4487                           ;stkvar	_arg @ sp[(-5)+0]
  4488  015A58  90D8               	bcf	status,0,c
  4489  015A5A  0EFE               	movlw	-2
  4490  015A5C  32E3               	rrcf	plusw1,f,c
  4491  015A5E  0EFD               	movlw	-3
  4492  015A60  32E3               	rrcf	plusw1,f,c
  4493  015A62  0EFC               	movlw	-4
  4494  015A64  32E3               	rrcf	plusw1,f,c
  4495  015A66  0EFB               	movlw	-5
  4496  015A68  32E3               	rrcf	plusw1,f,c
  4497  015A6A                     l8052:
  4498                           
  4499                           ;stkvar	_arg @ sp[(-5)+0]
  4500  015A6A  50E1               	movf	fsr1l,w,c
  4501  015A6C  0FFB               	addlw	-5
  4502  015A6E  6ED9               	movwf	fsr2l,c
  4503  015A70  50E2               	movf	fsr1h,w,c
  4504  015A72  6EDA               	movwf	fsr2h,c
  4505  015A74  0EFF               	movlw	255
  4506  015A76  22DA               	addwfc	fsr2h,f,c
  4507  015A78  52DE               	movf	postinc2,f,c
  4508  015A7A  52DE               	movf	postinc2,f,c
  4509  015A7C  52DE               	movf	postinc2,f,c
  4510  015A7E  0EFF               	movlw	255
  4511  015A80  14DD               	andwf	postdec2,w,c
  4512  015A82  B4D8               	btfsc	status,2,c
  4513  015A84  D00C               	goto	l8056
  4514  015A86  D7DA               	goto	l8046
  4515  015A88                     l8054:
  4516                           
  4517                           ;stkvar	_exp @ sp[(-5)+4]
  4518  015A88  0EFF               	movlw	-1
  4519  015A8A  06E3               	decf	plusw1,f,c
  4520                           
  4521                           ;stkvar	_arg @ sp[(-5)+0]
  4522  015A8C  90D8               	bcf	status,0,c
  4523  015A8E  0EFB               	movlw	-5
  4524  015A90  36E3               	rlcf	plusw1,f,c
  4525  015A92  0EFC               	movlw	-4
  4526  015A94  36E3               	rlcf	plusw1,f,c
  4527  015A96  0EFD               	movlw	-3
  4528  015A98  36E3               	rlcf	plusw1,f,c
  4529  015A9A  0EFE               	movlw	-2
  4530  015A9C  36E3               	rlcf	plusw1,f,c
  4531  015A9E                     l8056:
  4532                           
  4533                           ;stkvar	_arg @ sp[(-5)+0]
  4534  015A9E  0EFD               	movlw	-3
  4535  015AA0  BEE3               	btfsc	plusw1,7,c
  4536  015AA2  D007               	goto	u7890
  4537                           
  4538                           ;stkvar	_exp @ sp[(-5)+4]
  4539  015AA4  0EFF               	movlw	-1
  4540  015AA6  006F FF8C  F032    	movff	plusw1,btemp
  4541  015AAC  0E02               	movlw	2
  4542  015AAE  6032               	cpfslt	btemp^0,c
  4543  015AB0  D7EB               	goto	l8054
  4544  015AB2                     u7890:
  4545                           
  4546                           ;stkvar	_exp @ sp[(-5)+4]
  4547  015AB2  0EFF               	movlw	-1
  4548  015AB4  B0E3               	btfsc	plusw1,0,c
  4549  015AB6  D002               	goto	l8064
  4550                           
  4551                           ;stkvar	_arg @ sp[(-5)+0]
  4552  015AB8  0EFD               	movlw	-3
  4553  015ABA  9EE3               	bcf	plusw1,7,c
  4554  015ABC                     l8064:
  4555                           
  4556                           ;stkvar	_exp @ sp[(-5)+4]
  4557  015ABC  50E1               	movf	fsr1l,w,c
  4558  015ABE  0FFF               	addlw	-1
  4559  015AC0  6ED9               	movwf	fsr2l,c
  4560  015AC2  50E2               	movf	fsr1h,w,c
  4561  015AC4  6EDA               	movwf	fsr2h,c
  4562  015AC6  0EFF               	movlw	255
  4563  015AC8  22DA               	addwfc	fsr2h,f,c
  4564  015ACA  90D8               	bcf	status,0,c
  4565  015ACC  32DF               	rrcf	indf2,f,c
  4566                           
  4567                           ;stkvar	_exp @ sp[(-5)+4]
  4568  015ACE  0EFF               	movlw	-1
  4569  015AD0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4570  015AD6  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4571  015ADC  6A37               	clrf	(btemp+5)^0,c
  4572  015ADE  6A38               	clrf	(btemp+6)^0,c
  4573  015AE0  6A39               	clrf	(btemp+7)^0,c
  4574  015AE2  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4575  015AE8  6A38               	clrf	(btemp+6)^0,c
  4576  015AEA  6A37               	clrf	(btemp+5)^0,c
  4577  015AEC  6A36               	clrf	(btemp+4)^0,c
  4578                           
  4579                           ;stkvar	_arg @ sp[(-5)+0]
  4580  015AEE  50E1               	movf	fsr1l,w,c
  4581  015AF0  0FFB               	addlw	-5
  4582  015AF2  6ED9               	movwf	fsr2l,c
  4583  015AF4  50E2               	movf	fsr1h,w,c
  4584  015AF6  6EDA               	movwf	fsr2h,c
  4585  015AF8  0EFF               	movlw	255
  4586  015AFA  22DA               	addwfc	fsr2h,f,c
  4587  015AFC  5036               	movf	(btemp+4)^0,w,c
  4588  015AFE  12DE               	iorwf	postinc2,f,c
  4589  015B00  5037               	movf	(btemp+5)^0,w,c
  4590  015B02  12DE               	iorwf	postinc2,f,c
  4591  015B04  5038               	movf	(btemp+6)^0,w,c
  4592  015B06  12DE               	iorwf	postinc2,f,c
  4593  015B08  5039               	movf	(btemp+7)^0,w,c
  4594  015B0A  12DE               	iorwf	postinc2,f,c
  4595                           
  4596                           ;stkvar	_sign @ sp[(-5)+-1]
  4597  015B0C  0EFA               	movlw	-6
  4598  015B0E  50E3               	movf	plusw1,w,c
  4599  015B10  B4D8               	btfsc	status,2,c
  4600  015B12  D005               	goto	l8074
  4601                           
  4602                           ;stkvar	_val @ sp[(-5)+-5]
  4603  015B14  0EF9               	movlw	-7
  4604  015B16  AEE3               	btfss	plusw1,7,c
  4605  015B18  D002               	goto	l8074
  4606                           
  4607                           ;stkvar	_arg @ sp[(-5)+0]
  4608  015B1A  0EFE               	movlw	-2
  4609  015B1C  8EE3               	bsf	plusw1,7,c
  4610  015B1E                     l8074:
  4611                           
  4612                           ;stkvar	_arg @ sp[(-5)+0]
  4613  015B1E  0EFB               	movlw	-5
  4614  015B20  006F FF8C  F032    	movff	plusw1,btemp
  4615  015B26  0EFC               	movlw	-4
  4616  015B28  006F FF8C  F033    	movff	plusw1,btemp+1
  4617  015B2E  0EFD               	movlw	-3
  4618  015B30  006F FF8C  F034    	movff	plusw1,btemp+2
  4619  015B36  0EFE               	movlw	-2
  4620  015B38  006F FF8C  F035    	movff	plusw1,btemp+3
  4621  015B3E                     l2705:
  4622                           
  4623                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4624  015B3E  0EF6               	movlw	246
  4625  015B40  26E1               	addwf	fsr1l,f,c
  4626  015B42  0EFF               	movlw	255
  4627  015B44  22E2               	addwfc	fsr1h,f,c
  4628  015B46  0012               	return		;funcret
  4629  015B48                     __end_of___xxtofl:
  4630                           	opt callstack 0
  4631                           
  4632 ;; *************** function _clear_adc_scan *****************
  4633 ;; Defined at:
  4634 ;;		line 64 in file "daq.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1  [STACK] void 
  4641 ;; Registers used:
  4642 ;;		None
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/39
  4645 ;;		On exit  : 3F/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;Total ram usage:        0 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    6
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;; This function uses a reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text18
  4663  01885A                     __ptext18:
  4664                           	opt callstack 0
  4665  01885A                     _clear_adc_scan:
  4666                           	opt callstack 24
  4667                           
  4668                           ;daq.c: 66:  R.done = 0;
  4669                           
  4670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4671                           ;incstack = 0
  4672  01885A  0100               	movlb	0	; () banked
  4673  01885C  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4674                           
  4675                           ; BSR set to: 0
  4676                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4677  01885E  0012               	return		;funcret
  4678  018860                     __end_of_clear_adc_scan:
  4679                           	opt callstack 0
  4680                           
  4681 ;; *************** function _check_help *****************
  4682 ;; Defined at:
  4683 ;;		line 40 in file "mconfig.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  flipper         1  [STACK] const _Bool 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  estatus         1  [STACK] _Bool 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1  [STACK] _Bool 
  4690 ;; Registers used:
  4691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4692 ;; Tracked objects:
  4693 ;;		On entry : 3F/2
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:   18
  4704 ;; This function calls:
  4705 ;;		_StartTimer
  4706 ;;		_TimerDone
  4707 ;;		_display_help
  4708 ;;		_display_info
  4709 ;;		_get_vterm_ptr
  4710 ;;		_help_button
  4711 ;;		_mode_lamp_bright
  4712 ;;		_mode_lamp_dim
  4713 ;;		_set_display_info
  4714 ;;		_set_temp_display_help
  4715 ;;		_set_vterm
  4716 ;;		_sprintf
  4717 ;;		_update_lcd
  4718 ;;		_vterm_dump
  4719 ;; This function is called by:
  4720 ;;		_main
  4721 ;; This function uses a reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text19
  4725  01571C                     __ptext19:
  4726                           	opt callstack 0
  4727  01571C                     _check_help:
  4728                           	opt callstack 0
  4729                           
  4730                           ; BSR set to: 0
  4731                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4732  01571C  52E6               	movf	postinc1,f,c
  4733                           
  4734                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  4735                           ;stkvar	_estatus @ sp[(-1)+0]
  4736                           
  4737                           ;incstack = 0
  4738  01571E  0EFF               	movlw	-1
  4739  015720  6AE3               	clrf	plusw1,c
  4740                           
  4741                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  4742  015722  ECCF  F0BF         	call	_help_button	;wreg free
  4743  015726  5032               	movf	btemp^0,w,c
  4744  015728  B4D8               	btfsc	status,2,c
  4745  01572A  D0D3               	goto	l10218
  4746  01572C  EC1D  F0C4         	call	_display_info	;wreg free
  4747  015730  0432               	decf	btemp^0,w,c
  4748  015732  B4D8               	btfsc	status,2,c
  4749  015734  D0CE               	goto	l10218
  4750                           
  4751                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  4752  015736  0EDC               	movlw	220
  4753  015738  6EE6               	movwf	postinc1,c
  4754  01573A  0E05               	movlw	5
  4755  01573C  6EE6               	movwf	postinc1,c
  4756  01573E  0E0B               	movlw	11
  4757  015740  6EE6               	movwf	postinc1,c
  4758  015742  ECB1  F0BF         	call	_StartTimer	;wreg free
  4759                           
  4760                           ;mconfig.c: 48:   if (V.debug)
  4761  015746  0102               	movlb	2	; () banked
  4762  015748  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4763                           
  4764                           ; BSR set to: 2
  4765                           ;mconfig.c: 49:    vterm_dump();
  4766  01574A  ECE8  F0B2         	call	_vterm_dump	;wreg free
  4767                           
  4768                           ;mconfig.c: 51:   set_vterm(1);
  4769  01574E  0E01               	movlw	1
  4770  015750  6EE6               	movwf	postinc1,c
  4771  015752  EC60  F0C3         	call	_set_vterm	;wreg free
  4772                           
  4773                           ; BSR set to: 5
  4774                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  4775  015756  EC1D  F0C4         	call	_display_info	;wreg free
  4776  01575A  5032               	movf	btemp^0,w,c
  4777  01575C  6EE6               	movwf	postinc1,c
  4778  01575E  ECDD  F0C3         	call	_set_temp_display_help	;wreg free
  4779                           
  4780                           ; BSR set to: 2
  4781                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  4782  015762  0E01               	movlw	1
  4783  015764  6EE6               	movwf	postinc1,c
  4784  015766  EC25  F0C3         	call	_set_display_info	;wreg free
  4785                           
  4786                           ;mconfig.c: 54:   if (flipper) {
  4787                           ;stkvar	_flipper @ sp[(-1)+-1]
  4788  01576A  0EFE               	movlw	-2
  4789  01576C  50E3               	movf	plusw1,w,c
  4790  01576E  B4D8               	btfsc	status,2,c
  4791  015770  D019               	goto	l10204
  4792                           
  4793                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4794  015772  0EC2               	movlw	low STR_18
  4795  015774  6EE6               	movwf	postinc1,c
  4796  015776  0EFF               	movlw	high STR_18
  4797  015778  6EE6               	movwf	postinc1,c
  4798  01577A  0EC8               	movlw	low STR_20
  4799  01577C  6EE6               	movwf	postinc1,c
  4800  01577E  0EFE               	movlw	high STR_20
  4801  015780  6EE6               	movwf	postinc1,c
  4802  015782  0E01               	movlw	1
  4803  015784  6EE6               	movwf	postinc1,c
  4804  015786  0E00               	movlw	0
  4805  015788  6EE6               	movwf	postinc1,c
  4806  01578A  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  4807  01578E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4808  015794  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4809  01579A  0E06               	movlw	6
  4810  01579C  6EE6               	movwf	postinc1,c
  4811  01579E  ECAE  F0B5         	call	_sprintf	;wreg free
  4812                           
  4813                           ;mconfig.c: 56:   } else {
  4814  0157A2  D018               	goto	l1561
  4815  0157A4                     l10204:
  4816                           
  4817                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4818  0157A4  0ED8               	movlw	low STR_19
  4819  0157A6  6EE6               	movwf	postinc1,c
  4820  0157A8  0EFF               	movlw	high STR_19
  4821  0157AA  6EE6               	movwf	postinc1,c
  4822  0157AC  0EC8               	movlw	low STR_20
  4823  0157AE  6EE6               	movwf	postinc1,c
  4824  0157B0  0EFE               	movlw	high STR_20
  4825  0157B2  6EE6               	movwf	postinc1,c
  4826  0157B4  0E01               	movlw	1
  4827  0157B6  6EE6               	movwf	postinc1,c
  4828  0157B8  0E00               	movlw	0
  4829  0157BA  6EE6               	movwf	postinc1,c
  4830  0157BC  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  4831  0157C0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4832  0157C6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4833  0157CC  0E06               	movlw	6
  4834  0157CE  6EE6               	movwf	postinc1,c
  4835  0157D0  ECAE  F0B5         	call	_sprintf	;wreg free
  4836  0157D4                     l1561:
  4837                           
  4838                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4839  0157D4  0102               	movlb	2	; () banked
  4840  0157D6  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4841  0157D8  32E8               	rrcf	wreg,f,c
  4842  0157DA  32E8               	rrcf	wreg,f,c
  4843  0157DC  0B03               	andlw	3
  4844  0157DE  0D24               	mullw	36
  4845  0157E0  0E12               	movlw	18
  4846  0157E2  26F3               	addwf	243,f,c
  4847  0157E4  0E00               	movlw	0
  4848  0157E6  22F4               	addwfc	244,f,c
  4849  0157E8  0E0D               	movlw	low _T
  4850  0157EA  6E3C               	movwf	(btemp+10)^0,c
  4851  0157EC  0EFE               	movlw	high _T
  4852  0157EE  6E3D               	movwf	(btemp+11)^0,c
  4853  0157F0  50F3               	movf	243,w,c
  4854  0157F2  263C               	addwf	(btemp+10)^0,f,c
  4855  0157F4  50F4               	movf	244,w,c
  4856  0157F6  223D               	addwfc	(btemp+11)^0,f,c
  4857  0157F8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4858  0157FE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4859  015804  0ECE               	movlw	low STR_22
  4860  015806  6EE6               	movwf	postinc1,c
  4861  015808  0EFF               	movlw	high STR_22
  4862  01580A  6EE6               	movwf	postinc1,c
  4863  01580C  0E01               	movlw	1
  4864  01580E  6EE6               	movwf	postinc1,c
  4865  015810  0E01               	movlw	1
  4866  015812  6EE6               	movwf	postinc1,c
  4867  015814  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  4868  015818  0060  F0CB  FFE6   	movff	btemp,postinc1
  4869  01581E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4870  015824  0E06               	movlw	6
  4871  015826  6EE6               	movwf	postinc1,c
  4872  015828  ECAE  F0B5         	call	_sprintf	;wreg free
  4873                           
  4874                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4875  01582C  0102               	movlb	2	; () banked
  4876  01582E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4877  015830  32E8               	rrcf	wreg,f,c
  4878  015832  32E8               	rrcf	wreg,f,c
  4879  015834  0B03               	andlw	3
  4880  015836  0D24               	mullw	36
  4881  015838  0E0D               	movlw	low _T
  4882  01583A  6E3C               	movwf	(btemp+10)^0,c
  4883  01583C  0EFE               	movlw	high _T
  4884  01583E  6E3D               	movwf	(btemp+11)^0,c
  4885  015840  50F3               	movf	243,w,c
  4886  015842  263C               	addwf	(btemp+10)^0,f,c
  4887  015844  50F4               	movf	244,w,c
  4888  015846  223D               	addwfc	(btemp+11)^0,f,c
  4889  015848  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4890  01584E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4891  015854  0ECE               	movlw	low STR_22
  4892  015856  6EE6               	movwf	postinc1,c
  4893  015858  0EFF               	movlw	high STR_22
  4894  01585A  6EE6               	movwf	postinc1,c
  4895  01585C  0E01               	movlw	1
  4896  01585E  6EE6               	movwf	postinc1,c
  4897  015860  0E02               	movlw	2
  4898  015862  6EE6               	movwf	postinc1,c
  4899  015864  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  4900  015868  0060  F0CB  FFE6   	movff	btemp,postinc1
  4901  01586E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4902  015874  0E06               	movlw	6
  4903  015876  6EE6               	movwf	postinc1,c
  4904  015878  ECAE  F0B5         	call	_sprintf	;wreg free
  4905                           
  4906                           ;mconfig.c: 61:   V.help_id++;
  4907  01587C  EE20  F29B         	lfsr	2,_V+155	;volatile
  4908  015880  38DF               	swapf	223,w,c
  4909  015882  6E3D               	movwf	(btemp+11)^0,c
  4910  015884  323D               	rrcf	(btemp+11)^0,f,c
  4911  015886  303D               	rrcf	(btemp+11)^0,w,c
  4912  015888  0B03               	andlw	3
  4913  01588A  6E3D               	movwf	(btemp+11)^0,c
  4914  01588C  2A3D               	incf	(btemp+11)^0,f,c
  4915  01588E  3A3D               	swapf	(btemp+11)^0,f,c
  4916  015890  363D               	rlcf	(btemp+11)^0,f,c
  4917  015892  363D               	rlcf	(btemp+11)^0,f,c
  4918  015894  50DF               	movf	223,w,c
  4919  015896  183D               	xorwf	(btemp+11)^0,w,c
  4920  015898  0B3F               	andlw	-193
  4921  01589A  183D               	xorwf	(btemp+11)^0,w,c
  4922  01589C  6EDF               	movwf	223,c
  4923                           
  4924                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  4925  01589E  0EB8               	movlw	184
  4926  0158A0  6EE6               	movwf	postinc1,c
  4927  0158A2  0E0B               	movlw	11
  4928  0158A4  6EE6               	movwf	postinc1,c
  4929  0158A6  0E09               	movlw	9
  4930  0158A8  6EE6               	movwf	postinc1,c
  4931  0158AA  ECB1  F0BF         	call	_StartTimer	;wreg free
  4932                           
  4933                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  4934  0158AE  0EB8               	movlw	184
  4935  0158B0  6EE6               	movwf	postinc1,c
  4936  0158B2  0E0B               	movlw	11
  4937  0158B4  6EE6               	movwf	postinc1,c
  4938  0158B6  0E07               	movlw	7
  4939  0158B8  6EE6               	movwf	postinc1,c
  4940  0158BA  ECB1  F0BF         	call	_StartTimer	;wreg free
  4941                           
  4942                           ;mconfig.c: 64:   mode_lamp_bright();
  4943  0158BE  ECEC  F0C3         	call	_mode_lamp_bright	;wreg free
  4944                           
  4945                           ;mconfig.c: 65:   update_lcd(1);
  4946  0158C2  0E01               	movlw	1
  4947  0158C4  6EE6               	movwf	postinc1,c
  4948  0158C6  EC27  F0B5         	call	_update_lcd	;wreg free
  4949                           
  4950                           ;mconfig.c: 66:   estatus=1;
  4951                           ;stkvar	_estatus @ sp[(-1)+0]
  4952  0158CA  0EFF               	movlw	-1
  4953  0158CC  6AE3               	clrf	plusw1,c
  4954  0158CE  2AE3               	incf	plusw1,f,c
  4955                           
  4956                           ;mconfig.c: 67:  } else {
  4957  0158D0  D032               	goto	l10234
  4958  0158D2                     l10218:
  4959                           
  4960                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  4961  0158D2  0E09               	movlw	9
  4962  0158D4  6EE6               	movwf	postinc1,c
  4963  0158D6  EC9F  F0C2         	call	_TimerDone	;wreg free
  4964  0158DA  5032               	movf	btemp^0,w,c
  4965  0158DC  B4D8               	btfsc	status,2,c
  4966  0158DE  D02B               	goto	l10234
  4967                           
  4968                           ;mconfig.c: 69:    set_vterm(0);
  4969  0158E0  0E00               	movlw	0
  4970  0158E2  6EE6               	movwf	postinc1,c
  4971  0158E4  EC60  F0C3         	call	_set_vterm	;wreg free
  4972                           
  4973                           ; BSR set to: 5
  4974                           ;mconfig.c: 70:    V.help = 0;
  4975  0158E8  0102               	movlb	2	; () banked
  4976  0158EA  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4977                           
  4978                           ; BSR set to: 2
  4979                           ;mconfig.c: 71:    set_display_info(display_help());
  4980  0158EC  EC21  F0C4         	call	_display_help	;wreg free
  4981  0158F0  5032               	movf	btemp^0,w,c
  4982  0158F2  6EE6               	movwf	postinc1,c
  4983  0158F4  EC25  F0C3         	call	_set_display_info	;wreg free
  4984                           
  4985                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  4986  0158F8  0060  FA57  FFE6   	movff	_V+149,postinc1
  4987  0158FE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  4988  015904  EC89  F0C3         	call	_mode_lamp_dim	;wreg free
  4989                           
  4990                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  4991  015908  0E0B               	movlw	11
  4992  01590A  6EE6               	movwf	postinc1,c
  4993  01590C  EC9F  F0C2         	call	_TimerDone	;wreg free
  4994  015910  5032               	movf	btemp^0,w,c
  4995  015912  B4D8               	btfsc	status,2,c
  4996  015914  D010               	goto	l10234
  4997                           
  4998                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  4999  015916  0102               	movlb	2	; () banked
  5000  015918  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5001  01591A  A4D8               	btfss	status,2,c
  5002  01591C  D002               	goto	u10300
  5003  01591E  0E01               	movlw	1
  5004  015920  D001               	goto	u10310
  5005  015922                     u10300:
  5006  015922  0E00               	movlw	0
  5007  015924                     u10310:
  5008  015924  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5009                           
  5010                           ; BSR set to: 2
  5011                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5012  015926  0EDC               	movlw	220
  5013  015928  6EE6               	movwf	postinc1,c
  5014  01592A  0E05               	movlw	5
  5015  01592C  6EE6               	movwf	postinc1,c
  5016  01592E  0E0B               	movlw	11
  5017  015930  6EE6               	movwf	postinc1,c
  5018  015932  ECB1  F0BF         	call	_StartTimer	;wreg free
  5019  015936                     l10234:
  5020                           
  5021                           ;mconfig.c: 79:  return estatus;
  5022                           ;stkvar	_estatus @ sp[(-1)+0]
  5023  015936  0EFF               	movlw	-1
  5024  015938  006F FF8C  F032    	movff	plusw1,btemp
  5025                           
  5026                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5027  01593E  52E5               	movf	postdec1,f,c
  5028  015940  52E5               	movf	postdec1,f,c
  5029  015942  0012               	return		;funcret
  5030  015944                     __end_of_check_help:
  5031                           	opt callstack 0
  5032                           
  5033 ;; *************** function _vterm_dump *****************
  5034 ;; Defined at:
  5035 ;;		line 121 in file "mconfig.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1  [STACK] void 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5044 ;; Tracked objects:
  5045 ;;		On entry : 3F/2
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:   17
  5056 ;; This function calls:
  5057 ;;		_WaitMs
  5058 ;;		_eaDogM_WriteStringAtPos
  5059 ;;		_get_vterm_ptr
  5060 ;;		_sprintf
  5061 ;;		_wait_lcd_done
  5062 ;; This function is called by:
  5063 ;;		_check_help
  5064 ;; This function uses a reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text20
  5068  0165D0                     __ptext20:
  5069                           	opt callstack 0
  5070  0165D0                     _vterm_dump:
  5071                           	opt callstack 12
  5072                           
  5073                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5074                           
  5075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5076                           ;incstack = 0
  5077  0165D0  0E01               	movlw	1
  5078  0165D2  6EE6               	movwf	postinc1,c
  5079  0165D4  0E00               	movlw	0
  5080  0165D6  6EE6               	movwf	postinc1,c
  5081  0165D8  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  5082  0165DC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5083  0165E2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5084  0165E8  0E00               	movlw	0
  5085  0165EA  6EE6               	movwf	postinc1,c
  5086  0165EC  0E00               	movlw	0
  5087  0165EE  6EE6               	movwf	postinc1,c
  5088  0165F0  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  5089  0165F4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5090  0165FA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5091  016600  0EA4               	movlw	low STR_24
  5092  016602  6EE6               	movwf	postinc1,c
  5093  016604  0EFF               	movlw	high STR_24
  5094  016606  6EE6               	movwf	postinc1,c
  5095  016608  0E01               	movlw	low (_V+1)
  5096  01660A  6EE6               	movwf	postinc1,c
  5097  01660C  0E02               	movlw	high (_V+1)
  5098  01660E  6EE6               	movwf	postinc1,c
  5099  016610  0E08               	movlw	8
  5100  016612  6EE6               	movwf	postinc1,c
  5101  016614  ECAE  F0B5         	call	_sprintf	;wreg free
  5102                           
  5103                           ;mconfig.c: 124:  wait_lcd_done();
  5104  016618  EC52  F0C3         	call	_wait_lcd_done	;wreg free
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5108  01661C  0E01               	movlw	low (_V+1)
  5109  01661E  6EE6               	movwf	postinc1,c
  5110  016620  0E02               	movlw	high (_V+1)
  5111  016622  6EE6               	movwf	postinc1,c
  5112  016624  0E00               	movlw	0
  5113  016626  6EE6               	movwf	postinc1,c
  5114  016628  0E00               	movlw	0
  5115  01662A  6EE6               	movwf	postinc1,c
  5116  01662C  EC06  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5117                           
  5118                           ; BSR set to: 59
  5119                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5120  016630  0E01               	movlw	1
  5121  016632  6EE6               	movwf	postinc1,c
  5122  016634  0E01               	movlw	1
  5123  016636  6EE6               	movwf	postinc1,c
  5124  016638  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  5125  01663C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5126  016642  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5127  016648  0E00               	movlw	0
  5128  01664A  6EE6               	movwf	postinc1,c
  5129  01664C  0E01               	movlw	1
  5130  01664E  6EE6               	movwf	postinc1,c
  5131  016650  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  5132  016654  0060  F0CB  FFE6   	movff	btemp,postinc1
  5133  01665A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5134  016660  0EA4               	movlw	low STR_24
  5135  016662  6EE6               	movwf	postinc1,c
  5136  016664  0EFF               	movlw	high STR_24
  5137  016666  6EE6               	movwf	postinc1,c
  5138  016668  0E01               	movlw	low (_V+1)
  5139  01666A  6EE6               	movwf	postinc1,c
  5140  01666C  0E02               	movlw	high (_V+1)
  5141  01666E  6EE6               	movwf	postinc1,c
  5142  016670  0E08               	movlw	8
  5143  016672  6EE6               	movwf	postinc1,c
  5144  016674  ECAE  F0B5         	call	_sprintf	;wreg free
  5145                           
  5146                           ;mconfig.c: 127:  wait_lcd_done();
  5147  016678  EC52  F0C3         	call	_wait_lcd_done	;wreg free
  5148                           
  5149                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5150  01667C  0E01               	movlw	low (_V+1)
  5151  01667E  6EE6               	movwf	postinc1,c
  5152  016680  0E02               	movlw	high (_V+1)
  5153  016682  6EE6               	movwf	postinc1,c
  5154  016684  0E00               	movlw	0
  5155  016686  6EE6               	movwf	postinc1,c
  5156  016688  0E01               	movlw	1
  5157  01668A  6EE6               	movwf	postinc1,c
  5158  01668C  EC06  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5159                           
  5160                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5161  016690  0E01               	movlw	1
  5162  016692  6EE6               	movwf	postinc1,c
  5163  016694  0E02               	movlw	2
  5164  016696  6EE6               	movwf	postinc1,c
  5165  016698  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  5166  01669C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5167  0166A2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5168  0166A8  0E00               	movlw	0
  5169  0166AA  6EE6               	movwf	postinc1,c
  5170  0166AC  0E02               	movlw	2
  5171  0166AE  6EE6               	movwf	postinc1,c
  5172  0166B0  ECB5  F0C0         	call	_get_vterm_ptr	;wreg free
  5173  0166B4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5174  0166BA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5175  0166C0  0EA4               	movlw	low STR_24
  5176  0166C2  6EE6               	movwf	postinc1,c
  5177  0166C4  0EFF               	movlw	high STR_24
  5178  0166C6  6EE6               	movwf	postinc1,c
  5179  0166C8  0E01               	movlw	low (_V+1)
  5180  0166CA  6EE6               	movwf	postinc1,c
  5181  0166CC  0E02               	movlw	high (_V+1)
  5182  0166CE  6EE6               	movwf	postinc1,c
  5183  0166D0  0E08               	movlw	8
  5184  0166D2  6EE6               	movwf	postinc1,c
  5185  0166D4  ECAE  F0B5         	call	_sprintf	;wreg free
  5186                           
  5187                           ;mconfig.c: 130:  wait_lcd_done();
  5188  0166D8  EC52  F0C3         	call	_wait_lcd_done	;wreg free
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5192  0166DC  0E01               	movlw	low (_V+1)
  5193  0166DE  6EE6               	movwf	postinc1,c
  5194  0166E0  0E02               	movlw	high (_V+1)
  5195  0166E2  6EE6               	movwf	postinc1,c
  5196  0166E4  0E00               	movlw	0
  5197  0166E6  6EE6               	movwf	postinc1,c
  5198  0166E8  0E02               	movlw	2
  5199  0166EA  6EE6               	movwf	postinc1,c
  5200  0166EC  EC06  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5201                           
  5202                           ; BSR set to: 59
  5203                           ;mconfig.c: 132:  WaitMs(3000);
  5204  0166F0  0EB8               	movlw	184
  5205  0166F2  6EE6               	movwf	postinc1,c
  5206  0166F4  0E0B               	movlw	11
  5207  0166F6  6EE6               	movwf	postinc1,c
  5208  0166F8  ECEB  F0BF         	call	_WaitMs	;wreg free
  5209                           
  5210                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5211  0166FC  0012               	return		;funcret
  5212  0166FE                     __end_of_vterm_dump:
  5213                           	opt callstack 0
  5214                           
  5215 ;; *************** function _sprintf *****************
  5216 ;; Defined at:
  5217 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  s               2  [STACK] PTR unsigned char 
  5220 ;;		 -> D.lcd(216), D(218), V(187), 
  5221 ;;  fmt             2  [STACK] PTR const unsigned char 
  5222 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  5223 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  5224 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  5225 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  5226 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(19), 
  5227 ;;		 -> STR_10(19), STR_9(19), STR_8(17), STR_6(15), 
  5228 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  f               6  [STACK] struct _IO_FILE
  5231 ;;  ap              2  [STACK] PTR void [1]
  5232 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5233 ;;  ret             2    0        int 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  2  [STACK] int 
  5236 ;; Registers used:
  5237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/5
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5247 ;;Total ram usage:        0 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:   14
  5250 ;; This function calls:
  5251 ;;		_vfprintf
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;;		_check_help
  5255 ;;		_vterm_dump
  5256 ;; This function uses a reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text21
  5260  016B5C                     __ptext21:
  5261                           	opt callstack 0
  5262  016B5C                     _sprintf:
  5263                           	opt callstack 0
  5264                           
  5265                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5266  016B5C  0E08               	movlw	8
  5267  016B5E  26E1               	addwf	fsr1l,f,c
  5268  016B60  0E00               	movlw	0
  5269  016B62  22E2               	addwfc	fsr1h,f,c
  5270                           
  5271                           ;incstack = 0
  5272  016B64  0EFE               	movlw	254
  5273  016B66  6E3C               	movwf	(btemp+10)^0,c
  5274  016B68  0EFF               	movlw	255
  5275  016B6A  6E3D               	movwf	(btemp+11)^0,c
  5276                           
  5277                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5278  016B6C  0EF5               	movlw	245
  5279  016B6E  24E1               	addwf	fsr1l,w,c
  5280  016B70  6E3A               	movwf	(btemp+8)^0,c
  5281  016B72  0EFF               	movlw	255
  5282  016B74  20E2               	addwfc	fsr1h,w,c
  5283  016B76  6E3B               	movwf	(btemp+9)^0,c
  5284  016B78  503C               	movf	(btemp+10)^0,w,c
  5285  016B7A  263A               	addwf	(btemp+8)^0,f,c
  5286  016B7C  503D               	movf	(btemp+11)^0,w,c
  5287  016B7E  223B               	addwfc	(btemp+9)^0,f,c
  5288                           
  5289                           ;stkvar	_ap @ sp[(-8)+6]
  5290  016B80  0EFF               	movlw	-1
  5291  016B82  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5292  016B88  0EFE               	movlw	-2
  5293  016B8A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5294                           
  5295                           ;stkvar	_s @ sp[(-8)+-3]
  5296  016B90  0EF5               	movlw	-11
  5297  016B92  006F FF8C  F03C    	movff	plusw1,btemp+10
  5298  016B98  0EF6               	movlw	-10
  5299  016B9A  006F FF8C  F03D    	movff	plusw1,btemp+11
  5300                           
  5301                           ;stkvar	_f @ sp[(-8)+0]
  5302  016BA0  0EF9               	movlw	-7
  5303  016BA2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5304  016BA8  0EF8               	movlw	-8
  5305  016BAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5306                           
  5307                           ;stkvar	_f @ sp[(-8)+0]
  5308  016BB0  0EFA               	movlw	250
  5309  016BB2  24E1               	addwf	fsr1l,w,c
  5310  016BB4  6ED9               	movwf	fsr2l,c
  5311  016BB6  0EFF               	movlw	255
  5312  016BB8  20E2               	addwfc	fsr1h,w,c
  5313  016BBA  6EDA               	movwf	fsr2h,c
  5314  016BBC  0E00               	movlw	0
  5315  016BBE  6EDE               	movwf	postinc2,c
  5316  016BC0  0E00               	movlw	0
  5317  016BC2  6EDD               	movwf	postdec2,c
  5318                           
  5319                           ;stkvar	_f @ sp[(-8)+0]
  5320  016BC4  0EFC               	movlw	252
  5321  016BC6  24E1               	addwf	fsr1l,w,c
  5322  016BC8  6ED9               	movwf	fsr2l,c
  5323  016BCA  0EFF               	movlw	255
  5324  016BCC  20E2               	addwfc	fsr1h,w,c
  5325  016BCE  6EDA               	movwf	fsr2h,c
  5326  016BD0  0E00               	movlw	0
  5327  016BD2  6EDE               	movwf	postinc2,c
  5328  016BD4  0E00               	movlw	0
  5329  016BD6  6EDD               	movwf	postdec2,c
  5330                           
  5331                           ;stkvar	_ap @ sp[(-8)+6]
  5332  016BD8  0EFE               	movlw	254
  5333  016BDA  24E1               	addwf	fsr1l,w,c
  5334  016BDC  6E32               	movwf	btemp^0,c
  5335  016BDE  0EFF               	movlw	255
  5336  016BE0  20E2               	addwfc	fsr1h,w,c
  5337  016BE2  6E33               	movwf	(btemp+1)^0,c
  5338  016BE4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5339  016BEA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5340                           
  5341                           ;stkvar	_fmt @ sp[(-10)+-5]
  5342  016BF0  0EF1               	movlw	-15
  5343  016BF2  006F FF8F FFE6     	movff	plusw1,postinc1
  5344  016BF8  006F FF8F FFE6     	movff	plusw1,postinc1
  5345                           
  5346                           ;stkvar	_f @ sp[(-12)+0]
  5347  016BFE  0EF4               	movlw	244
  5348  016C00  24E1               	addwf	fsr1l,w,c
  5349  016C02  6E32               	movwf	btemp^0,c
  5350  016C04  0EFF               	movlw	255
  5351  016C06  20E2               	addwfc	fsr1h,w,c
  5352  016C08  6E33               	movwf	(btemp+1)^0,c
  5353  016C0A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5354  016C10  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5355  016C16  ECA1  F0B8         	call	_vfprintf	;wreg free
  5356                           
  5357                           ;stkvar	_f @ sp[(-8)+0]
  5358  016C1A  0EFA               	movlw	250
  5359  016C1C  24E1               	addwf	fsr1l,w,c
  5360  016C1E  6ED9               	movwf	fsr2l,c
  5361  016C20  0EFF               	movlw	255
  5362  016C22  20E2               	addwfc	fsr1h,w,c
  5363  016C24  6EDA               	movwf	fsr2h,c
  5364  016C26  006F FF78  F03C    	movff	postinc2,btemp+10
  5365  016C2C  006F FF74  F03D    	movff	postdec2,btemp+11
  5366                           
  5367                           ;stkvar	_s @ sp[(-8)+-3]
  5368  016C32  0EF5               	movlw	-11
  5369  016C34  006F FF8C  F03A    	movff	plusw1,btemp+8
  5370  016C3A  0EF6               	movlw	-10
  5371  016C3C  006F FF8C  F03B    	movff	plusw1,btemp+9
  5372  016C42  503C               	movf	(btemp+10)^0,w,c
  5373  016C44  243A               	addwf	(btemp+8)^0,w,c
  5374  016C46  6ED9               	movwf	fsr2l,c
  5375  016C48  503D               	movf	(btemp+11)^0,w,c
  5376  016C4A  203B               	addwfc	(btemp+9)^0,w,c
  5377  016C4C  6EDA               	movwf	fsr2h,c
  5378  016C4E  0E00               	movlw	0
  5379  016C50  6EDF               	movwf	indf2,c
  5380                           
  5381                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5382  016C52  0EF8               	movlw	248
  5383  016C54  26E1               	addwf	fsr1l,f,c
  5384  016C56  0EFF               	movlw	255
  5385  016C58  22E2               	addwfc	fsr1h,f,c
  5386  016C5A  52E5               	movf	postdec1,f,c
  5387  016C5C  50E7               	movf	indf1,w,c
  5388  016C5E  5EE1               	subwf	fsr1l,f,c
  5389  016C60  0E00               	movlw	0
  5390  016C62  5AE2               	subwfb	fsr1h,f,c
  5391  016C64  0012               	return		;funcret
  5392  016C66                     __end_of_sprintf:
  5393                           	opt callstack 0
  5394                           
  5395 ;; *************** function _get_vterm_ptr *****************
  5396 ;; Defined at:
  5397 ;;		line 116 in file "mconfig.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  line            1  [STACK] const unsigned char 
  5400 ;;  vterm           1  [STACK] const unsigned char 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  2  [STACK] PTR unsigned char 
  5405 ;; Registers used:
  5406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/5
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5416 ;;Total ram usage:        0 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    6
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;;		_check_help
  5424 ;;		_vterm_dump
  5425 ;; This function uses a reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text22
  5429  01816A                     __ptext22:
  5430                           	opt callstack 0
  5431  01816A                     _get_vterm_ptr:
  5432                           	opt callstack 24
  5433                           
  5434                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5435                           ;stkvar	_vterm @ sp[(0)+-2]
  5436                           
  5437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5438                           ;incstack = 0
  5439  01816A  0EFE               	movlw	-2
  5440  01816C  50E3               	movf	plusw1,w,c
  5441  01816E  0B03               	andlw	3
  5442  018170  0D36               	mullw	54
  5443  018172  0E00               	movlw	low _D
  5444  018174  6E32               	movwf	btemp^0,c
  5445  018176  0E05               	movlw	high _D
  5446  018178  6E33               	movwf	(btemp+1)^0,c
  5447  01817A  50F3               	movf	243,w,c
  5448  01817C  2632               	addwf	btemp^0,f,c
  5449  01817E  50F4               	movf	244,w,c
  5450  018180  2233               	addwfc	(btemp+1)^0,f,c
  5451                           
  5452                           ;stkvar	_line @ sp[(0)+-1]
  5453  018182  0EFF               	movlw	-1
  5454  018184  50E3               	movf	plusw1,w,c
  5455  018186  0B03               	andlw	3
  5456  018188  0D12               	mullw	18
  5457  01818A  50F3               	movf	243,w,c
  5458  01818C  2632               	addwf	btemp^0,f,c
  5459  01818E  50F4               	movf	244,w,c
  5460  018190  2233               	addwfc	(btemp+1)^0,f,c
  5461                           
  5462                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5463  018192  52E5               	movf	postdec1,f,c
  5464  018194  52E5               	movf	postdec1,f,c
  5465  018196  0012               	return		;funcret
  5466  018198                     __end_of_get_vterm_ptr:
  5467                           	opt callstack 0
  5468                           
  5469 ;; *************** function _WaitMs *****************
  5470 ;; Defined at:
  5471 ;;		line 32 in file "timers.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  numMilliseco    2  [STACK] const unsigned short 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1  [STACK] void 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/2
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    7
  5492 ;; This function calls:
  5493 ;;		_StartTimer
  5494 ;;		_TimerDone
  5495 ;; This function is called by:
  5496 ;;		_main
  5497 ;;		_vterm_dump
  5498 ;; This function uses a reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text23
  5502  017FD6                     __ptext23:
  5503                           	opt callstack 0
  5504  017FD6                     _WaitMs:
  5505                           	opt callstack 21
  5506                           
  5507                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5508                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5509                           
  5510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5511                           ;incstack = 0
  5512  017FD6  0EFE               	movlw	-2
  5513  017FD8  006F FF8F FFE6     	movff	plusw1,postinc1
  5514  017FDE  006F FF8F FFE6     	movff	plusw1,postinc1
  5515  017FE4  0E00               	movlw	0
  5516  017FE6  6EE6               	movwf	postinc1,c
  5517  017FE8  ECB1  F0BF         	call	_StartTimer	;wreg free
  5518                           
  5519                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5520  017FEC  D005               	goto	l7994
  5521  017FEE                     l1491:
  5522                           
  5523                           ;timers.c: 36:   __nop();
  5524  017FEE  F000               	nop	
  5525                           
  5526                           ;timers.c: 37:   __nop();
  5527  017FF0  F000               	nop	
  5528                           
  5529                           ;timers.c: 38:   __nop();
  5530  017FF2  F000               	nop	
  5531                           
  5532                           ;timers.c: 39:   __nop();
  5533  017FF4  F000               	nop	
  5534  017FF6  0004               	clrwdt		;# 
  5535  017FF8                     l7994:
  5536                           
  5537                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5538  017FF8  0E00               	movlw	0
  5539  017FFA  6EE6               	movwf	postinc1,c
  5540  017FFC  EC9F  F0C2         	call	_TimerDone	;wreg free
  5541  018000  5032               	movf	btemp^0,w,c
  5542  018002  B4D8               	btfsc	status,2,c
  5543  018004  D7F4               	goto	l1491
  5544                           
  5545                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5546  018006  52E5               	movf	postdec1,f,c
  5547  018008  52E5               	movf	postdec1,f,c
  5548  01800A  0012               	return		;funcret
  5549  01800C                     __end_of_WaitMs:
  5550                           	opt callstack 0
  5551                           
  5552 ;; *************** function _update_lcd *****************
  5553 ;; Defined at:
  5554 ;;		line 85 in file "mconfig.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  vterm           1  [STACK] unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1  [STACK] unsigned char 
  5561 ;; Registers used:
  5562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/5
  5565 ;;		On exit  : 1/1
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5572 ;;Total ram usage:        0 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:   17
  5575 ;; This function calls:
  5576 ;;		_eaDogM_WriteStringAtPos
  5577 ;;		_wait_lcd_done
  5578 ;; This function is called by:
  5579 ;;		_main
  5580 ;;		_check_help
  5581 ;; This function uses a reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text24
  5585  016A4E                     __ptext24:
  5586                           	opt callstack 0
  5587  016A4E                     _update_lcd:
  5588                           	opt callstack 13
  5589                           
  5590                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  5591                           ;stkvar	_vterm @ sp[(0)+-1]
  5592                           
  5593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5594                           ;incstack = 0
  5595  016A4E  0EFF               	movlw	-1
  5596  016A50  006F FF8C  F032    	movff	plusw1,btemp
  5597  016A56  0E03               	movlw	3
  5598  016A58  1632               	andwf	btemp^0,f,c
  5599  016A5A  0EFF               	movlw	-1
  5600  016A5C  0060  F0CB  FFE3   	movff	btemp,plusw1
  5601                           
  5602                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  5603  016A62  0105               	movlb	5	; () banked
  5604  016A64  A1D8               	btfss	(_D+216)& (0+255),0,b
  5605  016A66  D004               	goto	l10084
  5606                           
  5607                           ; BSR set to: 5
  5608                           ;stkvar	_vterm @ sp[(0)+-1]
  5609  016A68  0EFF               	movlw	-1
  5610  016A6A  50E3               	movf	plusw1,w,c
  5611  016A6C  B4D8               	btfsc	status,2,c
  5612  016A6E  D074               	goto	l1569
  5613  016A70                     l10084:
  5614                           
  5615                           ; BSR set to: 5
  5616                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  5617                           ;stkvar	_vterm @ sp[(0)+-1]
  5618  016A70  0EFF               	movlw	-1
  5619  016A72  50E3               	movf	plusw1,w,c
  5620  016A74  0D36               	mullw	54
  5621  016A76  0E10               	movlw	low (_D+16)
  5622  016A78  24F3               	addwf	243,w,c
  5623  016A7A  6ED9               	movwf	fsr2l,c
  5624  016A7C  0E05               	movlw	high (_D+16)
  5625  016A7E  20F4               	addwfc	prodh,w,c
  5626  016A80  6EDA               	movwf	fsr2h,c
  5627  016A82  0E00               	movlw	0
  5628  016A84  6EDF               	movwf	indf2,c
  5629                           
  5630                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  5631                           ;stkvar	_vterm @ sp[(0)+-1]
  5632  016A86  0EFF               	movlw	-1
  5633  016A88  50E3               	movf	plusw1,w,c
  5634  016A8A  0D36               	mullw	54
  5635  016A8C  0E22               	movlw	low (_D+34)
  5636  016A8E  24F3               	addwf	243,w,c
  5637  016A90  6ED9               	movwf	fsr2l,c
  5638  016A92  0E05               	movlw	high (_D+34)
  5639  016A94  20F4               	addwfc	prodh,w,c
  5640  016A96  6EDA               	movwf	fsr2h,c
  5641  016A98  0E00               	movlw	0
  5642  016A9A  6EDF               	movwf	indf2,c
  5643                           
  5644                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  5645                           ;stkvar	_vterm @ sp[(0)+-1]
  5646  016A9C  0EFF               	movlw	-1
  5647  016A9E  50E3               	movf	plusw1,w,c
  5648  016AA0  0D36               	mullw	54
  5649  016AA2  0E34               	movlw	low (_D+52)
  5650  016AA4  24F3               	addwf	243,w,c
  5651  016AA6  6ED9               	movwf	fsr2l,c
  5652  016AA8  0E05               	movlw	high (_D+52)
  5653  016AAA  20F4               	addwfc	prodh,w,c
  5654  016AAC  6EDA               	movwf	fsr2h,c
  5655  016AAE  0E00               	movlw	0
  5656  016AB0  6EDF               	movwf	indf2,c
  5657                           
  5658                           ; BSR set to: 5
  5659                           ;mconfig.c: 95:  wait_lcd_done();
  5660  016AB2  EC52  F0C3         	call	_wait_lcd_done	;wreg free
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5664                           ;stkvar	_vterm @ sp[(0)+-1]
  5665  016AB6  0EFF               	movlw	-1
  5666  016AB8  50E3               	movf	plusw1,w,c
  5667  016ABA  0D36               	mullw	54
  5668  016ABC  0E00               	movlw	low _D
  5669  016ABE  6E3C               	movwf	(btemp+10)^0,c
  5670  016AC0  0E05               	movlw	high _D
  5671  016AC2  6E3D               	movwf	(btemp+11)^0,c
  5672  016AC4  50F3               	movf	243,w,c
  5673  016AC6  263C               	addwf	(btemp+10)^0,f,c
  5674  016AC8  50F4               	movf	244,w,c
  5675  016ACA  223D               	addwfc	(btemp+11)^0,f,c
  5676  016ACC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5677  016AD2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5678  016AD8  0E00               	movlw	0
  5679  016ADA  6EE6               	movwf	postinc1,c
  5680  016ADC  0E00               	movlw	0
  5681  016ADE  6EE6               	movwf	postinc1,c
  5682  016AE0  EC06  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5683                           
  5684                           ; BSR set to: 59
  5685                           ;mconfig.c: 97:  wait_lcd_done();
  5686  016AE4  EC52  F0C3         	call	_wait_lcd_done	;wreg free
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5690                           ;stkvar	_vterm @ sp[(0)+-1]
  5691  016AE8  0EFF               	movlw	-1
  5692  016AEA  50E3               	movf	plusw1,w,c
  5693  016AEC  0D36               	mullw	54
  5694  016AEE  0E00               	movlw	low _D
  5695  016AF0  6E3C               	movwf	(btemp+10)^0,c
  5696  016AF2  0E05               	movlw	high _D
  5697  016AF4  6E3D               	movwf	(btemp+11)^0,c
  5698  016AF6  0E12               	movlw	18
  5699  016AF8  263C               	addwf	(btemp+10)^0,f,c
  5700  016AFA  0E00               	movlw	0
  5701  016AFC  223D               	addwfc	(btemp+11)^0,f,c
  5702  016AFE  50F3               	movf	243,w,c
  5703  016B00  263C               	addwf	(btemp+10)^0,f,c
  5704  016B02  50F4               	movf	244,w,c
  5705  016B04  223D               	addwfc	(btemp+11)^0,f,c
  5706  016B06  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5707  016B0C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5708  016B12  0E00               	movlw	0
  5709  016B14  6EE6               	movwf	postinc1,c
  5710  016B16  0E01               	movlw	1
  5711  016B18  6EE6               	movwf	postinc1,c
  5712  016B1A  EC06  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5713                           
  5714                           ; BSR set to: 59
  5715                           ;mconfig.c: 99:  wait_lcd_done();
  5716  016B1E  EC52  F0C3         	call	_wait_lcd_done	;wreg free
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5720                           ;stkvar	_vterm @ sp[(0)+-1]
  5721  016B22  0EFF               	movlw	-1
  5722  016B24  50E3               	movf	plusw1,w,c
  5723  016B26  0D36               	mullw	54
  5724  016B28  0E00               	movlw	low _D
  5725  016B2A  6E3C               	movwf	(btemp+10)^0,c
  5726  016B2C  0E05               	movlw	high _D
  5727  016B2E  6E3D               	movwf	(btemp+11)^0,c
  5728  016B30  0E24               	movlw	36
  5729  016B32  263C               	addwf	(btemp+10)^0,f,c
  5730  016B34  0E00               	movlw	0
  5731  016B36  223D               	addwfc	(btemp+11)^0,f,c
  5732  016B38  50F3               	movf	243,w,c
  5733  016B3A  263C               	addwf	(btemp+10)^0,f,c
  5734  016B3C  50F4               	movf	244,w,c
  5735  016B3E  223D               	addwfc	(btemp+11)^0,f,c
  5736  016B40  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5737  016B46  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5738  016B4C  0E00               	movlw	0
  5739  016B4E  6EE6               	movwf	postinc1,c
  5740  016B50  0E02               	movlw	2
  5741  016B52  6EE6               	movwf	postinc1,c
  5742  016B54  EC06  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5743  016B58                     l1569:
  5744                           
  5745                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5746  016B58  52E5               	movf	postdec1,f,c
  5747  016B5A  0012               	return		;funcret
  5748  016B5C                     __end_of_update_lcd:
  5749                           	opt callstack 0
  5750                           
  5751 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5752 ;; Defined at:
  5753 ;;		line 252 in file "eadog.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  r               1  [STACK] const unsigned char 
  5756 ;;  c               1  [STACK] const unsigned char 
  5757 ;;  strPtr          2  [STACK] PTR unsigned char 
  5758 ;;		 -> D.lcd(216), D(218), V(187), 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1  [STACK] void 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5765 ;; Tracked objects:
  5766 ;;		On entry : 3F/0
  5767 ;;		On exit  : 3F/3B
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5774 ;;Total ram usage:        0 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:   16
  5777 ;; This function calls:
  5778 ;;		_eaDogM_WriteString
  5779 ;;		_send_lcd_cmd_dma
  5780 ;; This function is called by:
  5781 ;;		_update_lcd
  5782 ;;		_vterm_dump
  5783 ;; This function uses a reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text25
  5787  01800C                     __ptext25:
  5788                           	opt callstack 0
  5789  01800C                     _eaDogM_WriteStringAtPos:
  5790                           	opt callstack 13
  5791                           
  5792                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5793                           ;stkvar	_c @ sp[(0)+-2]
  5794                           
  5795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5796                           ;incstack = 0
  5797  01800C  0EFE               	movlw	-2
  5798  01800E  006F FF8C  F03D    	movff	plusw1,btemp+11
  5799                           
  5800                           ;stkvar	_r @ sp[(0)+-1]
  5801  018014  0EFF               	movlw	-1
  5802  018016  50E3               	movf	plusw1,w,c
  5803  018018  0D10               	mullw	16
  5804  01801A  50F3               	movf	243,w,c
  5805  01801C  243D               	addwf	(btemp+11)^0,w,c
  5806  01801E  0F80               	addlw	128
  5807  018020  6EE6               	movwf	postinc1,c
  5808  018022  EC0A  F0BE         	call	_send_lcd_cmd_dma	;wreg free
  5809                           
  5810                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5811                           ;stkvar	_strPtr @ sp[(0)+-4]
  5812  018026  0EFC               	movlw	-4
  5813  018028  006F FF8F FFE6     	movff	plusw1,postinc1
  5814  01802E  006F FF8F FFE6     	movff	plusw1,postinc1
  5815  018034  ECF5  F0B8         	call	_eaDogM_WriteString	;wreg free
  5816                           
  5817                           ; BSR set to: 59
  5818                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5819  018038  52E5               	movf	postdec1,f,c
  5820  01803A  52E5               	movf	postdec1,f,c
  5821  01803C  52E5               	movf	postdec1,f,c
  5822  01803E  52E5               	movf	postdec1,f,c
  5823  018040  0012               	return		;funcret
  5824  018042                     __end_of_eaDogM_WriteStringAtPos:
  5825                           	opt callstack 0
  5826                           
  5827 ;; *************** function _send_lcd_cmd_dma *****************
  5828 ;; Defined at:
  5829 ;;		line 205 in file "eadog.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  strPtr          1  [STACK] unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1  [STACK] void 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/3D
  5840 ;;		On exit  : 3F/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:   15
  5850 ;; This function calls:
  5851 ;;		_printf
  5852 ;;		_ringBufS_flush
  5853 ;;		_start_lcd
  5854 ;;		_wait_lcd_done
  5855 ;;		_wait_lcd_set
  5856 ;; This function is called by:
  5857 ;;		_eaDogM_WriteCommand
  5858 ;;		_eaDogM_WriteStringAtPos
  5859 ;; This function uses a reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text26
  5863  017C14                     __ptext26:
  5864                           	opt callstack 0
  5865  017C14                     _send_lcd_cmd_dma:
  5866                           	opt callstack 13
  5867                           
  5868                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5869                           
  5870                           ; BSR set to: 59
  5871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5872                           ;incstack = 0
  5873  017C14  EC30  F0C4         	call	_wait_lcd_set	;wreg free
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5877  017C18  0E00               	movlw	0
  5878  017C1A  6EE6               	movwf	postinc1,c
  5879  017C1C  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  5880  017C22  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  5881  017C28  ECE5  F0B9         	call	_ringBufS_flush	;wreg free
  5882  017C2C  92BC               	bcf	188,1,c	;volatile
  5883  017C2E  94BC               	bcf	188,2,c	;volatile
  5884                           
  5885                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5886  017C30  013B               	movlb	59	; () banked
  5887  017C32  9FFC               	bcf	252,7,b	;volatile
  5888                           
  5889                           ; BSR set to: 59
  5890                           ;eadog.c: 214:  DMA1SSZ = 1;
  5891  017C34  0E00               	movlw	0
  5892  017C36  6FF8               	movwf	248,b	;volatile
  5893  017C38  0E01               	movlw	1
  5894  017C3A  6FF7               	movwf	247,b	;volatile
  5895                           
  5896                           ; BSR set to: 59
  5897                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5898  017C3C  8FFC               	bsf	252,7,b	;volatile
  5899                           
  5900                           ; BSR set to: 59
  5901                           ;eadog.c: 216:  printf("%c", strPtr);
  5902                           ;stkvar	_strPtr @ sp[(0)+-1]
  5903  017C3E  0EFF               	movlw	-1
  5904  017C40  50E3               	movf	plusw1,w,c
  5905  017C42  6EE6               	movwf	postinc1,c
  5906  017C44  0E00               	movlw	0
  5907  017C46  6EE6               	movwf	postinc1,c
  5908  017C48  0EF9               	movlw	low STR_16
  5909  017C4A  6EE6               	movwf	postinc1,c
  5910  017C4C  0EFF               	movlw	high STR_16
  5911  017C4E  6EE6               	movwf	postinc1,c
  5912  017C50  0E04               	movlw	4
  5913  017C52  6EE6               	movwf	postinc1,c
  5914  017C54  EC22  F0BD         	call	_printf	;wreg free
  5915                           
  5916                           ;eadog.c: 217:  start_lcd();
  5917  017C58  EC33  F0C4         	call	_start_lcd	;wreg free
  5918                           
  5919                           ; BSR set to: 59
  5920                           ;eadog.c: 218:  wait_lcd_done();
  5921  017C5C  EC52  F0C3         	call	_wait_lcd_done	;wreg free
  5922                           
  5923                           ; BSR set to: 0
  5924  017C60  82BC               	bsf	188,1,c	;volatile
  5925                           
  5926                           ; BSR set to: 0
  5927                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5928  017C62  52E5               	movf	postdec1,f,c
  5929  017C64  0012               	return		;funcret
  5930  017C66                     __end_of_send_lcd_cmd_dma:
  5931                           	opt callstack 0
  5932                           
  5933 ;; *************** function _wait_lcd_done *****************
  5934 ;; Defined at:
  5935 ;;		line 141 in file "eadog.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1  [STACK] void 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/2
  5946 ;;		On exit  : 3F/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    7
  5956 ;; This function calls:
  5957 ;;		_wdtdelay
  5958 ;; This function is called by:
  5959 ;;		_send_lcd_cmd_dma
  5960 ;;		_update_lcd
  5961 ;;		_vterm_dump
  5962 ;; This function uses a reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text27
  5966  0186A4                     __ptext27:
  5967                           	opt callstack 0
  5968  0186A4                     _wait_lcd_done:
  5969                           	opt callstack 22
  5970                           
  5971                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5972                           
  5973                           ; BSR set to: 0
  5974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5975                           ;incstack = 0
  5976  0186A4  0100               	movlb	0	; () banked
  5977  0186A6  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  5978  0186A8  D7FD               	goto	_wait_lcd_done
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;eadog.c: 144:  wdtdelay(50);
  5982  0186AA  0E32               	movlw	50
  5983  0186AC  6EE6               	movwf	postinc1,c
  5984  0186AE  0E00               	movlw	0
  5985  0186B0  6EE6               	movwf	postinc1,c
  5986  0186B2  0E00               	movlw	0
  5987  0186B4  6EE6               	movwf	postinc1,c
  5988  0186B6  0E00               	movlw	0
  5989  0186B8  6EE6               	movwf	postinc1,c
  5990  0186BA  ECB0  F0BD         	call	_wdtdelay	;wreg free
  5991                           
  5992                           ; BSR set to: 0
  5993                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5994  0186BE  0012               	return		;funcret
  5995  0186C0                     __end_of_wait_lcd_done:
  5996                           	opt callstack 0
  5997                           
  5998 ;; *************** function _wdtdelay *****************
  5999 ;; Defined at:
  6000 ;;		line 22 in file "eadog.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  delay           4  [STACK] const unsigned long 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1  [STACK] void 
  6007 ;; Registers used:
  6008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 3F/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    6
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_init_display
  6025 ;;		_send_lcd_cmd
  6026 ;;		_send_lcd_cmd_long
  6027 ;;		_wait_lcd_done
  6028 ;; This function uses a reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text28
  6032  017B60                     __ptext28:
  6033                           	opt callstack 0
  6034  017B60                     _wdtdelay:
  6035                           	opt callstack 22
  6036                           
  6037                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6038                           
  6039                           ; BSR set to: 0
  6040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6041                           ;incstack = 0
  6042  017B60  0100               	movlb	0	; () banked
  6043  017B62  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6044  017B64  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6045  017B66  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6046  017B68  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6047  017B6A                     l1336:
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;eadog.c: 27:   __nop();
  6051  017B6A  F000               	nop	
  6052  017B6C  0004               	clrwdt		;# 
  6053                           
  6054                           ;eadog.c: 29:  };
  6055  017B6E  0E01               	movlw	1
  6056  017B70  0100               	movlb	0	; () banked
  6057  017B72  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6058  017B74  0E00               	movlw	0
  6059  017B76  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6060  017B78  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6061  017B7A  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;stkvar	_delay @ sp[(0)+-4]
  6065  017B7C  0EFC               	movlw	-4
  6066  017B7E  006F FF8C  F032    	movff	plusw1,btemp
  6067  017B84  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6068  017B86  5C32               	subwf	btemp^0,w,c
  6069  017B88  0EFD               	movlw	-3
  6070  017B8A  006F FF8C  F032    	movff	plusw1,btemp
  6071  017B90  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6072  017B92  5832               	subwfb	btemp^0,w,c
  6073  017B94  0EFE               	movlw	-2
  6074  017B96  006F FF8C  F032    	movff	plusw1,btemp
  6075  017B9C  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6076  017B9E  5832               	subwfb	btemp^0,w,c
  6077  017BA0  0EFF               	movlw	-1
  6078  017BA2  006F FF8C  F032    	movff	plusw1,btemp
  6079  017BA8  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6080  017BAA  5832               	subwfb	btemp^0,w,c
  6081  017BAC  B0D8               	btfsc	status,0,c
  6082  017BAE  D7DD               	goto	l1336
  6083                           
  6084                           ; BSR set to: 0
  6085                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6086  017BB0  52E5               	movf	postdec1,f,c
  6087  017BB2  52E5               	movf	postdec1,f,c
  6088  017BB4  52E5               	movf	postdec1,f,c
  6089  017BB6  52E5               	movf	postdec1,f,c
  6090  017BB8  0012               	return		;funcret
  6091  017BBA                     __end_of_wdtdelay:
  6092                           	opt callstack 0
  6093                           
  6094 ;; *************** function _eaDogM_WriteString *****************
  6095 ;; Defined at:
  6096 ;;		line 184 in file "eadog.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  strPtr          2  [STACK] PTR unsigned char 
  6099 ;;		 -> D.lcd(216), D(218), V(187), 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1  [STACK] void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6106 ;; Tracked objects:
  6107 ;;		On entry : 3F/0
  6108 ;;		On exit  : 3F/3B
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:   15
  6118 ;; This function calls:
  6119 ;;		_printf
  6120 ;;		_ringBufS_flush
  6121 ;;		_start_lcd
  6122 ;;		_strlen
  6123 ;;		_wait_lcd_set
  6124 ;; This function is called by:
  6125 ;;		_eaDogM_WriteStringAtPos
  6126 ;; This function uses a reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text29
  6130  0171EA                     __ptext29:
  6131                           	opt callstack 0
  6132  0171EA                     _eaDogM_WriteString:
  6133                           	opt callstack 13
  6134                           
  6135                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6136                           
  6137                           ; BSR set to: 0
  6138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6139                           ;incstack = 0
  6140  0171EA  EC30  F0C4         	call	_wait_lcd_set	;wreg free
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6144  0171EE  0E00               	movlw	0
  6145  0171F0  6EE6               	movwf	postinc1,c
  6146  0171F2  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6147  0171F8  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6148  0171FE  ECE5  F0B9         	call	_ringBufS_flush	;wreg free
  6149  017202  94BC               	bcf	188,2,c	;volatile
  6150                           
  6151                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6152                           ;stkvar	_strPtr @ sp[(0)+-2]
  6153  017204  0EFE               	movlw	-2
  6154  017206  006F FF8F FFE6     	movff	plusw1,postinc1
  6155  01720C  006F FF8F FFE6     	movff	plusw1,postinc1
  6156  017212  EC48  F0B9         	call	_strlen	;wreg free
  6157  017216  5033               	movf	(btemp+1)^0,w,c
  6158  017218  E104               	bnz	u10210
  6159  01721A  0E41               	movlw	65
  6160  01721C  5C32               	subwf	btemp^0,w,c
  6161  01721E  A0D8               	btfss	status,0,c
  6162  017220  D010               	goto	l10050
  6163  017222                     u10210:
  6164                           
  6165                           ;stkvar	_strPtr @ sp[(0)+-2]
  6166  017222  0EFE               	movlw	-2
  6167  017224  006F FF8C  F03C    	movff	plusw1,btemp+10
  6168  01722A  0EFF               	movlw	-1
  6169  01722C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6170  017232  0E40               	movlw	64
  6171  017234  243C               	addwf	(btemp+10)^0,w,c
  6172  017236  6ED9               	movwf	fsr2l,c
  6173  017238  0E00               	movlw	0
  6174  01723A  203D               	addwfc	(btemp+11)^0,w,c
  6175  01723C  6EDA               	movwf	fsr2h,c
  6176  01723E  0E00               	movlw	0
  6177  017240  6EDF               	movwf	indf2,c
  6178  017242                     l10050:
  6179                           
  6180                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6181  017242  013B               	movlb	59	; () banked
  6182  017244  9FFC               	bcf	252,7,b	;volatile
  6183                           
  6184                           ; BSR set to: 59
  6185                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6186                           ;stkvar	_strPtr @ sp[(0)+-2]
  6187  017246  0EFE               	movlw	-2
  6188  017248  006F FF8F FFE6     	movff	plusw1,postinc1
  6189  01724E  006F FF8F FFE6     	movff	plusw1,postinc1
  6190  017254  EC48  F0B9         	call	_strlen	;wreg free
  6191  017258  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6192  01725E  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6193                           
  6194                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6195  017264  013B               	movlb	59	; () banked
  6196  017266  8FFC               	bsf	252,7,b	;volatile
  6197                           
  6198                           ; BSR set to: 59
  6199                           ;eadog.c: 195:  printf("%s", strPtr);
  6200                           ;stkvar	_strPtr @ sp[(0)+-2]
  6201  017268  0EFE               	movlw	-2
  6202  01726A  006F FF8F FFE6     	movff	plusw1,postinc1
  6203  017270  006F FF8F FFE6     	movff	plusw1,postinc1
  6204  017276  0EFC               	movlw	low STR_15
  6205  017278  6EE6               	movwf	postinc1,c
  6206  01727A  0EFF               	movlw	high STR_15
  6207  01727C  6EE6               	movwf	postinc1,c
  6208  01727E  0E04               	movlw	4
  6209  017280  6EE6               	movwf	postinc1,c
  6210  017282  EC22  F0BD         	call	_printf	;wreg free
  6211                           
  6212                           ;eadog.c: 196:  start_lcd();
  6213  017286  EC33  F0C4         	call	_start_lcd	;wreg free
  6214                           
  6215                           ; BSR set to: 59
  6216                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6217  01728A  52E5               	movf	postdec1,f,c
  6218  01728C  52E5               	movf	postdec1,f,c
  6219  01728E  0012               	return		;funcret
  6220  017290                     __end_of_eaDogM_WriteString:
  6221                           	opt callstack 0
  6222                           
  6223 ;; *************** function _wait_lcd_set *****************
  6224 ;; Defined at:
  6225 ;;		line 131 in file "eadog.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1  [STACK] void 
  6232 ;; Registers used:
  6233 ;;		None
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/3D
  6236 ;;		On exit  : 3F/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6243 ;;Total ram usage:        0 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:    6
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_eaDogM_WriteString
  6250 ;;		_send_lcd_cmd_dma
  6251 ;; This function uses a reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text30
  6255  018860                     __ptext30:
  6256                           	opt callstack 0
  6257  018860                     _wait_lcd_set:
  6258                           	opt callstack 21
  6259                           
  6260                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6261                           
  6262                           ; BSR set to: 59
  6263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6264                           ;incstack = 0
  6265  018860  0100               	movlb	0	; () banked
  6266  018862  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6267                           
  6268                           ; BSR set to: 0
  6269                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6270  018864  0012               	return		;funcret
  6271  018866                     __end_of_wait_lcd_set:
  6272                           	opt callstack 0
  6273                           
  6274 ;; *************** function _start_lcd *****************
  6275 ;; Defined at:
  6276 ;;		line 126 in file "eadog.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;		None
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1  [STACK] void 
  6283 ;; Registers used:
  6284 ;;		None
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/3B
  6287 ;;		On exit  : 3F/3B
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;Total ram usage:        0 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    6
  6297 ;; This function calls:
  6298 ;;		Nothing
  6299 ;; This function is called by:
  6300 ;;		_eaDogM_WriteString
  6301 ;;		_send_lcd_cmd_dma
  6302 ;; This function uses a reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text31
  6306  018866                     __ptext31:
  6307                           	opt callstack 0
  6308  018866                     _start_lcd:
  6309                           	opt callstack 21
  6310                           
  6311                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6312                           
  6313                           ; BSR set to: 0
  6314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6315                           ;incstack = 0
  6316  018866  013B               	movlb	59	; () banked
  6317  018868  8DFC               	bsf	252,6,b	;volatile
  6318                           
  6319                           ; BSR set to: 59
  6320                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6321  01886A  0012               	return		;funcret
  6322  01886C                     __end_of_start_lcd:
  6323                           	opt callstack 0
  6324                           
  6325 ;; *************** function _ringBufS_flush *****************
  6326 ;; Defined at:
  6327 ;;		line 76 in file "ringbufs.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6330 ;;		 -> ring_buf1(67), 
  6331 ;;  clearBuffer     1  [STACK] const char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1  [STACK] void 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6338 ;; Tracked objects:
  6339 ;;		On entry : 3F/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6347 ;;Total ram usage:        0 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    7
  6350 ;; This function calls:
  6351 ;;		_memset
  6352 ;; This function is called by:
  6353 ;;		_eaDogM_WriteString
  6354 ;;		_send_lcd_cmd_dma
  6355 ;; This function uses a reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text32
  6359  0173CA                     __ptext32:
  6360                           	opt callstack 0
  6361  0173CA                     _ringBufS_flush:
  6362                           	opt callstack 20
  6363                           
  6364                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6365                           ;stkvar	__this @ sp[(0)+-2]
  6366                           
  6367                           ; BSR set to: 59
  6368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6369                           ;incstack = 0
  6370  0173CA  0EFE               	movlw	-2
  6371  0173CC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6372  0173D2  0EFF               	movlw	-1
  6373  0173D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6374  0173DA  0E42               	movlw	66
  6375  0173DC  243C               	addwf	(btemp+10)^0,w,c
  6376  0173DE  6ED9               	movwf	fsr2l,c
  6377  0173E0  0E00               	movlw	0
  6378  0173E2  203D               	addwfc	(btemp+11)^0,w,c
  6379  0173E4  6EDA               	movwf	fsr2h,c
  6380  0173E6  0E00               	movlw	0
  6381  0173E8  6EDF               	movwf	indf2,c
  6382                           
  6383                           ;ringbufs.c: 79:  _this->head = 0;
  6384                           ;stkvar	__this @ sp[(0)+-2]
  6385  0173EA  0EFE               	movlw	-2
  6386  0173EC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6387  0173F2  0EFF               	movlw	-1
  6388  0173F4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6389  0173FA  0E40               	movlw	64
  6390  0173FC  243C               	addwf	(btemp+10)^0,w,c
  6391  0173FE  6ED9               	movwf	fsr2l,c
  6392  017400  0E00               	movlw	0
  6393  017402  203D               	addwfc	(btemp+11)^0,w,c
  6394  017404  6EDA               	movwf	fsr2h,c
  6395  017406  0E00               	movlw	0
  6396  017408  6EDF               	movwf	indf2,c
  6397                           
  6398                           ;ringbufs.c: 80:  _this->tail = 0;
  6399                           ;stkvar	__this @ sp[(0)+-2]
  6400  01740A  0EFE               	movlw	-2
  6401  01740C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6402  017412  0EFF               	movlw	-1
  6403  017414  006F FF8C  F03D    	movff	plusw1,btemp+11
  6404  01741A  0E41               	movlw	65
  6405  01741C  243C               	addwf	(btemp+10)^0,w,c
  6406  01741E  6ED9               	movwf	fsr2l,c
  6407  017420  0E00               	movlw	0
  6408  017422  203D               	addwfc	(btemp+11)^0,w,c
  6409  017424  6EDA               	movwf	fsr2h,c
  6410  017426  0E00               	movlw	0
  6411  017428  6EDF               	movwf	indf2,c
  6412                           
  6413                           ;ringbufs.c: 81:  if (clearBuffer) {
  6414                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6415  01742A  0EFD               	movlw	-3
  6416  01742C  50E3               	movf	plusw1,w,c
  6417  01742E  B4D8               	btfsc	status,2,c
  6418  017430  D011               	goto	l1476
  6419                           
  6420                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6421  017432  0E40               	movlw	64
  6422  017434  6EE6               	movwf	postinc1,c
  6423  017436  0E00               	movlw	0
  6424  017438  6EE6               	movwf	postinc1,c
  6425  01743A  0E00               	movlw	0
  6426  01743C  6EE6               	movwf	postinc1,c
  6427  01743E  0E00               	movlw	0
  6428  017440  6EE6               	movwf	postinc1,c
  6429                           
  6430                           ;stkvar	__this @ sp[(-4)+-2]
  6431  017442  0EFA               	movlw	-6
  6432  017444  006F FF8F FFE6     	movff	plusw1,postinc1
  6433  01744A  006F FF8F FFE6     	movff	plusw1,postinc1
  6434  017450  ECF9  F0A3         	call	_memset	;wreg free
  6435  017454                     l1476:
  6436                           
  6437                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6438  017454  52E5               	movf	postdec1,f,c
  6439  017456  52E5               	movf	postdec1,f,c
  6440  017458  52E5               	movf	postdec1,f,c
  6441  01745A  0012               	return		;funcret
  6442  01745C                     __end_of_ringBufS_flush:
  6443                           	opt callstack 0
  6444                           
  6445 ;; *************** function _memset *****************
  6446 ;; Defined at:
  6447 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  dest            2  [STACK] PTR void 
  6450 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6451 ;;  c               2  [STACK] int 
  6452 ;;  n               2  [STACK] unsigned int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  s               2  [STACK] PTR unsigned char 
  6455 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6456 ;;  k               2  [STACK] unsigned int 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  2  [STACK] PTR void 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6470 ;;Total ram usage:        0 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    6
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_ringBufS_init
  6477 ;;		_ringBufS_flush
  6478 ;; This function uses a reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text33
  6482  0147F2                     __ptext33:
  6483                           	opt callstack 0
  6484  0147F2                     _memset:
  6485                           	opt callstack 0
  6486                           
  6487                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6488  0147F2  52E6               	movf	postinc1,f,c
  6489  0147F4  52E6               	movf	postinc1,f,c
  6490  0147F6  52E6               	movf	postinc1,f,c
  6491  0147F8  52E6               	movf	postinc1,f,c
  6492                           
  6493                           ;stkvar	_dest @ sp[(-4)+-2]
  6494                           
  6495                           ;incstack = 0
  6496  0147FA  0EFA               	movlw	-6
  6497  0147FC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6498  014802  0EFB               	movlw	-5
  6499  014804  006F FF8C  F03D    	movff	plusw1,btemp+11
  6500                           
  6501                           ;stkvar	_s @ sp[(-4)+0]
  6502  01480A  0EFD               	movlw	-3
  6503  01480C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6504  014812  0EFC               	movlw	-4
  6505  014814  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6506                           
  6507                           ;stkvar	_n @ sp[(-4)+-6]
  6508  01481A  0EF6               	movlw	-10
  6509  01481C  006F FF8C  F032    	movff	plusw1,btemp
  6510  014822  0EF7               	movlw	-9
  6511  014824  50E3               	movf	plusw1,w,c
  6512  014826  1032               	iorwf	btemp^0,w,c
  6513  014828  B4D8               	btfsc	status,2,c
  6514  01482A  D154               	goto	u10180
  6515                           
  6516                           ;stkvar	_c @ sp[(-4)+-4]
  6517                           ;stkvar	_s @ sp[(-4)+0]
  6518  01482C  0EFC               	movlw	-4
  6519  01482E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6520  014834  0EFD               	movlw	-3
  6521  014836  006F FF8F FFDA     	movff	plusw1,fsr2h
  6522  01483C  0EF8               	movlw	-8
  6523  01483E  006F FF8F FFDF     	movff	plusw1,indf2
  6524                           
  6525                           ;stkvar	_c @ sp[(-4)+-4]
  6526                           ;stkvar	_n @ sp[(-4)+-6]
  6527                           ;stkvar	_s @ sp[(-4)+0]
  6528  014844  0EFC               	movlw	-4
  6529  014846  006F FF8C  F03C    	movff	plusw1,btemp+10
  6530  01484C  0EFD               	movlw	-3
  6531  01484E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6532  014854  0EF6               	movlw	-10
  6533  014856  50E3               	movf	plusw1,w,c
  6534  014858  263C               	addwf	(btemp+10)^0,f,c
  6535  01485A  0EF7               	movlw	-9
  6536  01485C  50E3               	movf	plusw1,w,c
  6537  01485E  223D               	addwfc	(btemp+11)^0,f,c
  6538  014860  0EFF               	movlw	255
  6539  014862  243C               	addwf	(btemp+10)^0,w,c
  6540  014864  6ED9               	movwf	fsr2l,c
  6541  014866  0EFF               	movlw	255
  6542  014868  203D               	addwfc	(btemp+11)^0,w,c
  6543  01486A  6EDA               	movwf	fsr2h,c
  6544  01486C  0EF8               	movlw	-8
  6545  01486E  006F FF8F FFDF     	movff	plusw1,indf2
  6546                           
  6547                           ;stkvar	_n @ sp[(-4)+-6]
  6548  014874  0EF7               	movlw	-9
  6549  014876  50E3               	movf	plusw1,w,c
  6550  014878  E108               	bnz	l9966
  6551  01487A  0EF6               	movlw	-10
  6552  01487C  006F FF8C  F032    	movff	plusw1,btemp
  6553  014882  0E03               	movlw	3
  6554  014884  5E32               	subwf	btemp^0,f,c
  6555  014886  A0D8               	btfss	status,0,c
  6556  014888  D125               	goto	u10180
  6557  01488A                     l9966:
  6558                           
  6559                           ;stkvar	_c @ sp[(-4)+-4]
  6560                           ;stkvar	_s @ sp[(-4)+0]
  6561  01488A  0EFC               	movlw	-4
  6562  01488C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6563  014892  0EFD               	movlw	-3
  6564  014894  006F FF8C  F03D    	movff	plusw1,btemp+11
  6565  01489A  0E01               	movlw	1
  6566  01489C  243C               	addwf	(btemp+10)^0,w,c
  6567  01489E  6ED9               	movwf	fsr2l,c
  6568  0148A0  0E00               	movlw	0
  6569  0148A2  203D               	addwfc	(btemp+11)^0,w,c
  6570  0148A4  6EDA               	movwf	fsr2h,c
  6571  0148A6  0EF8               	movlw	-8
  6572  0148A8  006F FF8F FFDF     	movff	plusw1,indf2
  6573                           
  6574                           ;stkvar	_c @ sp[(-4)+-4]
  6575                           ;stkvar	_s @ sp[(-4)+0]
  6576  0148AE  0EFC               	movlw	-4
  6577  0148B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6578  0148B6  0EFD               	movlw	-3
  6579  0148B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6580  0148BE  0E02               	movlw	2
  6581  0148C0  243C               	addwf	(btemp+10)^0,w,c
  6582  0148C2  6ED9               	movwf	fsr2l,c
  6583  0148C4  0E00               	movlw	0
  6584  0148C6  203D               	addwfc	(btemp+11)^0,w,c
  6585  0148C8  6EDA               	movwf	fsr2h,c
  6586  0148CA  0EF8               	movlw	-8
  6587  0148CC  006F FF8F FFDF     	movff	plusw1,indf2
  6588                           
  6589                           ;stkvar	_c @ sp[(-4)+-4]
  6590                           ;stkvar	_n @ sp[(-4)+-6]
  6591                           ;stkvar	_s @ sp[(-4)+0]
  6592  0148D2  0EFC               	movlw	-4
  6593  0148D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6594  0148DA  0EFD               	movlw	-3
  6595  0148DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6596  0148E2  0EF6               	movlw	-10
  6597  0148E4  50E3               	movf	plusw1,w,c
  6598  0148E6  263C               	addwf	(btemp+10)^0,f,c
  6599  0148E8  0EF7               	movlw	-9
  6600  0148EA  50E3               	movf	plusw1,w,c
  6601  0148EC  223D               	addwfc	(btemp+11)^0,f,c
  6602  0148EE  0EFE               	movlw	254
  6603  0148F0  243C               	addwf	(btemp+10)^0,w,c
  6604  0148F2  6ED9               	movwf	fsr2l,c
  6605  0148F4  0EFF               	movlw	255
  6606  0148F6  203D               	addwfc	(btemp+11)^0,w,c
  6607  0148F8  6EDA               	movwf	fsr2h,c
  6608  0148FA  0EF8               	movlw	-8
  6609  0148FC  006F FF8F FFDF     	movff	plusw1,indf2
  6610                           
  6611                           ;stkvar	_c @ sp[(-4)+-4]
  6612                           ;stkvar	_n @ sp[(-4)+-6]
  6613                           ;stkvar	_s @ sp[(-4)+0]
  6614  014902  0EFC               	movlw	-4
  6615  014904  006F FF8C  F03C    	movff	plusw1,btemp+10
  6616  01490A  0EFD               	movlw	-3
  6617  01490C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6618  014912  0EF6               	movlw	-10
  6619  014914  50E3               	movf	plusw1,w,c
  6620  014916  263C               	addwf	(btemp+10)^0,f,c
  6621  014918  0EF7               	movlw	-9
  6622  01491A  50E3               	movf	plusw1,w,c
  6623  01491C  223D               	addwfc	(btemp+11)^0,f,c
  6624  01491E  0EFD               	movlw	253
  6625  014920  243C               	addwf	(btemp+10)^0,w,c
  6626  014922  6ED9               	movwf	fsr2l,c
  6627  014924  0EFF               	movlw	255
  6628  014926  203D               	addwfc	(btemp+11)^0,w,c
  6629  014928  6EDA               	movwf	fsr2h,c
  6630  01492A  0EF8               	movlw	-8
  6631  01492C  006F FF8F FFDF     	movff	plusw1,indf2
  6632                           
  6633                           ;stkvar	_n @ sp[(-4)+-6]
  6634  014932  0EF7               	movlw	-9
  6635  014934  50E3               	movf	plusw1,w,c
  6636  014936  E108               	bnz	l9972
  6637  014938  0EF6               	movlw	-10
  6638  01493A  006F FF8C  F032    	movff	plusw1,btemp
  6639  014940  0E07               	movlw	7
  6640  014942  5E32               	subwf	btemp^0,f,c
  6641  014944  A0D8               	btfss	status,0,c
  6642  014946  D0C6               	goto	u10180
  6643  014948                     l9972:
  6644                           
  6645                           ;stkvar	_c @ sp[(-4)+-4]
  6646                           ;stkvar	_s @ sp[(-4)+0]
  6647  014948  0EFC               	movlw	-4
  6648  01494A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6649  014950  0EFD               	movlw	-3
  6650  014952  006F FF8C  F03D    	movff	plusw1,btemp+11
  6651  014958  0E03               	movlw	3
  6652  01495A  243C               	addwf	(btemp+10)^0,w,c
  6653  01495C  6ED9               	movwf	fsr2l,c
  6654  01495E  0E00               	movlw	0
  6655  014960  203D               	addwfc	(btemp+11)^0,w,c
  6656  014962  6EDA               	movwf	fsr2h,c
  6657  014964  0EF8               	movlw	-8
  6658  014966  006F FF8F FFDF     	movff	plusw1,indf2
  6659                           
  6660                           ;stkvar	_c @ sp[(-4)+-4]
  6661                           ;stkvar	_n @ sp[(-4)+-6]
  6662                           ;stkvar	_s @ sp[(-4)+0]
  6663  01496C  0EFC               	movlw	-4
  6664  01496E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6665  014974  0EFD               	movlw	-3
  6666  014976  006F FF8C  F03D    	movff	plusw1,btemp+11
  6667  01497C  0EF6               	movlw	-10
  6668  01497E  50E3               	movf	plusw1,w,c
  6669  014980  263C               	addwf	(btemp+10)^0,f,c
  6670  014982  0EF7               	movlw	-9
  6671  014984  50E3               	movf	plusw1,w,c
  6672  014986  223D               	addwfc	(btemp+11)^0,f,c
  6673  014988  0EFC               	movlw	252
  6674  01498A  243C               	addwf	(btemp+10)^0,w,c
  6675  01498C  6ED9               	movwf	fsr2l,c
  6676  01498E  0EFF               	movlw	255
  6677  014990  203D               	addwfc	(btemp+11)^0,w,c
  6678  014992  6EDA               	movwf	fsr2h,c
  6679  014994  0EF8               	movlw	-8
  6680  014996  006F FF8F FFDF     	movff	plusw1,indf2
  6681                           
  6682                           ;stkvar	_n @ sp[(-4)+-6]
  6683  01499C  0EF7               	movlw	-9
  6684  01499E  50E3               	movf	plusw1,w,c
  6685  0149A0  E108               	bnz	l9978
  6686  0149A2  0EF6               	movlw	-10
  6687  0149A4  006F FF8C  F032    	movff	plusw1,btemp
  6688  0149AA  0E09               	movlw	9
  6689  0149AC  5E32               	subwf	btemp^0,f,c
  6690  0149AE  A0D8               	btfss	status,0,c
  6691  0149B0  D091               	goto	u10180
  6692  0149B2                     l9978:
  6693                           
  6694                           ;stkvar	_s @ sp[(-4)+0]
  6695  0149B2  0EFC               	movlw	-4
  6696  0149B4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6697  0149BA  1E3C               	comf	(btemp+10)^0,f,c
  6698  0149BC  0EFD               	movlw	-3
  6699  0149BE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6700  0149C4  1E3D               	comf	(btemp+11)^0,f,c
  6701  0149C6  2A3C               	incf	(btemp+10)^0,f,c
  6702  0149C8  B4D8               	btfsc	status,2,c
  6703  0149CA  2A3D               	incf	(btemp+11)^0,f,c
  6704  0149CC  0E03               	movlw	3
  6705  0149CE  163C               	andwf	(btemp+10)^0,f,c
  6706  0149D0  0E00               	movlw	0
  6707  0149D2  163D               	andwf	(btemp+11)^0,f,c
  6708                           
  6709                           ;stkvar	_k @ sp[(-4)+2]
  6710  0149D4  0EFE               	movlw	-2
  6711  0149D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6712  0149DC  0EFF               	movlw	-1
  6713  0149DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6714                           
  6715                           ;stkvar	_k @ sp[(-4)+2]
  6716                           ;stkvar	_s @ sp[(-4)+0]
  6717  0149E4  0EFC               	movlw	-4
  6718  0149E6  50E3               	movf	plusw1,w,c
  6719  0149E8  6E32               	movwf	btemp^0,c
  6720  0149EA  0EFE               	movlw	-2
  6721  0149EC  50E3               	movf	plusw1,w,c
  6722  0149EE  2632               	addwf	btemp^0,f,c
  6723  0149F0  0EFC               	movlw	-4
  6724  0149F2  0060  F0CB  FFE3   	movff	btemp,plusw1
  6725  0149F8  0EFD               	movlw	-3
  6726  0149FA  50E3               	movf	plusw1,w,c
  6727  0149FC  6E32               	movwf	btemp^0,c
  6728  0149FE  0EFF               	movlw	-1
  6729  014A00  50E3               	movf	plusw1,w,c
  6730  014A02  2232               	addwfc	btemp^0,f,c
  6731  014A04  0EFD               	movlw	-3
  6732  014A06  0060  F0CB  FFE3   	movff	btemp,plusw1
  6733                           
  6734                           ;stkvar	_k @ sp[(-4)+2]
  6735                           ;stkvar	_n @ sp[(-4)+-6]
  6736  014A0C  0EF6               	movlw	-10
  6737  014A0E  50E3               	movf	plusw1,w,c
  6738  014A10  6E32               	movwf	btemp^0,c
  6739  014A12  0EFE               	movlw	-2
  6740  014A14  50E3               	movf	plusw1,w,c
  6741  014A16  5E32               	subwf	btemp^0,f,c
  6742  014A18  0EF6               	movlw	-10
  6743  014A1A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6744  014A20  0EF7               	movlw	-9
  6745  014A22  50E3               	movf	plusw1,w,c
  6746  014A24  6E32               	movwf	btemp^0,c
  6747  014A26  0EFF               	movlw	-1
  6748  014A28  50E3               	movf	plusw1,w,c
  6749  014A2A  5A32               	subwfb	btemp^0,f,c
  6750  014A2C  0EF7               	movlw	-9
  6751  014A2E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6752  014A34  0EFC               	movlw	252
  6753  014A36  6E3C               	movwf	(btemp+10)^0,c
  6754  014A38  0EFF               	movlw	255
  6755  014A3A  6E3D               	movwf	(btemp+11)^0,c
  6756                           
  6757                           ;stkvar	_n @ sp[(-4)+-6]
  6758  014A3C  0EF6               	movlw	-10
  6759  014A3E  006F FF8C  F032    	movff	plusw1,btemp
  6760  014A44  503C               	movf	(btemp+10)^0,w,c
  6761  014A46  1632               	andwf	btemp^0,f,c
  6762  014A48  0EF6               	movlw	-10
  6763  014A4A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6764  014A50  0EF7               	movlw	-9
  6765  014A52  006F FF8C  F032    	movff	plusw1,btemp
  6766  014A58  503D               	movf	(btemp+11)^0,w,c
  6767  014A5A  1632               	andwf	btemp^0,f,c
  6768  014A5C  0EF7               	movlw	-9
  6769  014A5E  D02E               	goto	L4
  6770  014A60                     l9986:
  6771                           
  6772                           ;stkvar	_c @ sp[(-4)+-4]
  6773                           ;stkvar	_s @ sp[(-4)+0]
  6774  014A60  0EFC               	movlw	-4
  6775  014A62  006F FF8F FFD9     	movff	plusw1,fsr2l
  6776  014A68  0EFD               	movlw	-3
  6777  014A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6778  014A70  0EF8               	movlw	-8
  6779  014A72  006F FF8F FFDF     	movff	plusw1,indf2
  6780                           
  6781                           ;stkvar	_n @ sp[(-4)+-6]
  6782  014A78  0EF6               	movlw	-10
  6783  014A7A  006F FF8C  F032    	movff	plusw1,btemp
  6784  014A80  0E01               	movlw	1
  6785  014A82  5E32               	subwf	btemp^0,f,c
  6786  014A84  0EF6               	movlw	-10
  6787  014A86  0060  F0CB  FFE3   	movff	btemp,plusw1
  6788  014A8C  0EF7               	movlw	-9
  6789  014A8E  006F FF8C  F032    	movff	plusw1,btemp
  6790  014A94  0E00               	movlw	0
  6791  014A96  5A32               	subwfb	btemp^0,f,c
  6792  014A98  0EF7               	movlw	-9
  6793  014A9A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6794                           
  6795                           ;stkvar	_s @ sp[(-4)+0]
  6796  014AA0  0EFC               	movlw	-4
  6797  014AA2  50E3               	movf	plusw1,w,c
  6798  014AA4  0F01               	addlw	1
  6799  014AA6  6E32               	movwf	btemp^0,c
  6800  014AA8  0EFC               	movlw	-4
  6801  014AAA  0060  F0CB  FFE3   	movff	btemp,plusw1
  6802  014AB0  6A32               	clrf	btemp^0,c
  6803  014AB2  0EFD               	movlw	-3
  6804  014AB4  50E3               	movf	plusw1,w,c
  6805  014AB6  2032               	addwfc	btemp^0,w,c
  6806  014AB8  6E32               	movwf	btemp^0,c
  6807  014ABA  0EFD               	movlw	-3
  6808  014ABC                     L4:
  6809  014ABC  0060  F0CB  FFE3   	movff	btemp,plusw1
  6810                           
  6811                           ;stkvar	_n @ sp[(-4)+-6]
  6812  014AC2  0EF6               	movlw	-10
  6813  014AC4  006F FF8C  F032    	movff	plusw1,btemp
  6814  014ACA  0EF7               	movlw	-9
  6815  014ACC  50E3               	movf	plusw1,w,c
  6816  014ACE  1032               	iorwf	btemp^0,w,c
  6817  014AD0  A4D8               	btfss	status,2,c
  6818  014AD2  D7C6               	goto	l9986
  6819  014AD4                     u10180:
  6820                           
  6821                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6822  014AD4  0EF6               	movlw	246
  6823  014AD6  26E1               	addwf	fsr1l,f,c
  6824  014AD8  0EFF               	movlw	255
  6825  014ADA  22E2               	addwfc	fsr1h,f,c
  6826  014ADC  0012               	return		;funcret
  6827  014ADE                     __end_of_memset:
  6828                           	opt callstack 0
  6829                           
  6830 ;; *************** function _printf *****************
  6831 ;; Defined at:
  6832 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  fmt             2  [STACK] PTR const unsigned char 
  6835 ;;		 -> STR_17(3), STR_16(3), STR_15(3), 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  ap              2  [STACK] PTR void [1]
  6838 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6839 ;;  ret             2    0        int 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  2  [STACK] int 
  6842 ;; Registers used:
  6843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6844 ;; Tracked objects:
  6845 ;;		On entry : 3F/3B
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6853 ;;Total ram usage:        0 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:   14
  6856 ;; This function calls:
  6857 ;;		_vfprintf
  6858 ;; This function is called by:
  6859 ;;		_eaDogM_WriteString
  6860 ;;		_send_lcd_cmd_dma
  6861 ;; This function uses a reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text34
  6865  017A44                     __ptext34:
  6866                           	opt callstack 0
  6867  017A44                     _printf:
  6868                           	opt callstack 0
  6869                           
  6870                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6871  017A44  52E6               	movf	postinc1,f,c
  6872  017A46  52E6               	movf	postinc1,f,c
  6873                           
  6874                           ;stkvar	?_printf @ sp[(-2)+-3]
  6875                           
  6876                           ;incstack = 0
  6877  017A48  0EFB               	movlw	251
  6878  017A4A  24E1               	addwf	fsr1l,w,c
  6879  017A4C  6E3C               	movwf	(btemp+10)^0,c
  6880  017A4E  0EFF               	movlw	255
  6881  017A50  20E2               	addwfc	fsr1h,w,c
  6882  017A52  6E3D               	movwf	(btemp+11)^0,c
  6883                           
  6884                           ;stkvar	_ap @ sp[(-2)+0]
  6885  017A54  0EFF               	movlw	-1
  6886  017A56  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6887  017A5C  0EFE               	movlw	-2
  6888  017A5E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6889                           
  6890                           ;stkvar	_ap @ sp[(-2)+0]
  6891  017A64  0EFE               	movlw	254
  6892  017A66  24E1               	addwf	fsr1l,w,c
  6893  017A68  6E32               	movwf	btemp^0,c
  6894  017A6A  0EFF               	movlw	255
  6895  017A6C  20E2               	addwfc	fsr1h,w,c
  6896  017A6E  6E33               	movwf	(btemp+1)^0,c
  6897  017A70  0060  F0CB  FFE6   	movff	btemp,postinc1
  6898  017A76  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6899                           
  6900                           ;stkvar	_fmt @ sp[(-4)+-3]
  6901  017A7C  0EF9               	movlw	-7
  6902  017A7E  006F FF8F FFE6     	movff	plusw1,postinc1
  6903  017A84  006F FF8F FFE6     	movff	plusw1,postinc1
  6904  017A8A  0E00               	movlw	0
  6905  017A8C  6EE6               	movwf	postinc1,c
  6906  017A8E  0E00               	movlw	0
  6907  017A90  6EE6               	movwf	postinc1,c
  6908  017A92  ECA1  F0B8         	call	_vfprintf	;wreg free
  6909                           
  6910                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6911  017A96  52E5               	movf	postdec1,f,c
  6912  017A98  52E5               	movf	postdec1,f,c
  6913  017A9A  52E5               	movf	postdec1,f,c
  6914  017A9C  50E7               	movf	indf1,w,c
  6915  017A9E  5EE1               	subwf	fsr1l,f,c
  6916  017AA0  0E00               	movlw	0
  6917  017AA2  5AE2               	subwfb	fsr1h,f,c
  6918  017AA4  0012               	return		;funcret
  6919  017AA6                     __end_of_printf:
  6920                           	opt callstack 0
  6921                           
  6922 ;; *************** function _vfprintf *****************
  6923 ;; Defined at:
  6924 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6927 ;;		 -> f(6), NULL(0), 
  6928 ;;  fmt             2  [STACK] PTR const unsigned char 
  6929 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  6930 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  6931 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  6932 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  6933 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  6934 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  6935 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  6936 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6937 ;;  ap              2  [STACK] PTR PTR void 
  6938 ;;		 -> ap(2), ap(2), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  cfmt            2  [STACK] PTR unsigned char 
  6941 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  6942 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  6943 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  6944 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  6945 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  6946 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  6947 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  6948 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2  [STACK] int 
  6951 ;; Registers used:
  6952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/5
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:   13
  6965 ;; This function calls:
  6966 ;;		_vfpfcnvrt
  6967 ;; This function is called by:
  6968 ;;		_sprintf
  6969 ;;		_printf
  6970 ;; This function uses a reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text35
  6974  017142                     __ptext35:
  6975                           	opt callstack 0
  6976  017142                     _vfprintf:
  6977                           	opt callstack 0
  6978                           
  6979                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6980  017142  52E6               	movf	postinc1,f,c
  6981  017144  52E6               	movf	postinc1,f,c
  6982                           
  6983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6984                           ;stkvar	_fmt @ sp[(-2)+-4]
  6985                           
  6986                           ;incstack = 0
  6987  017146  0EFA               	movlw	-6
  6988  017148  006F FF8C  F03C    	movff	plusw1,btemp+10
  6989  01714E  0EFB               	movlw	-5
  6990  017150  006F FF8C  F03D    	movff	plusw1,btemp+11
  6991                           
  6992                           ;stkvar	_cfmt @ sp[(-2)+0]
  6993  017156  0EFF               	movlw	-1
  6994  017158  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6995  01715E  0EFE               	movlw	-2
  6996  017160  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6997                           
  6998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6999  017166  6A19               	clrf	_nout^0,c
  7000  017168  6A1A               	clrf	(_nout+1)^0,c
  7001                           
  7002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7003  01716A  D020               	goto	l10000
  7004  01716C                     l9998:
  7005                           
  7006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7007                           ;stkvar	_ap @ sp[(-2)+-6]
  7008  01716C  0EF8               	movlw	-8
  7009  01716E  006F FF8F FFE6     	movff	plusw1,postinc1
  7010  017174  006F FF8F FFE6     	movff	plusw1,postinc1
  7011                           
  7012                           ;stkvar	_cfmt @ sp[(-4)+0]
  7013  01717A  0EFC               	movlw	252
  7014  01717C  24E1               	addwf	fsr1l,w,c
  7015  01717E  6E32               	movwf	btemp^0,c
  7016  017180  0EFF               	movlw	255
  7017  017182  20E2               	addwfc	fsr1h,w,c
  7018  017184  6E33               	movwf	(btemp+1)^0,c
  7019  017186  0060  F0CB  FFE6   	movff	btemp,postinc1
  7020  01718C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7021                           
  7022                           ;stkvar	_fp @ sp[(-6)+-2]
  7023  017192  0EF8               	movlw	-8
  7024  017194  006F FF8F FFE6     	movff	plusw1,postinc1
  7025  01719A  006F FF8F FFE6     	movff	plusw1,postinc1
  7026  0171A0  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7027  0171A4  5032               	movf	btemp^0,w,c
  7028  0171A6  2619               	addwf	_nout^0,f,c
  7029  0171A8  5033               	movf	(btemp+1)^0,w,c
  7030  0171AA  221A               	addwfc	(_nout+1)^0,f,c
  7031  0171AC                     l10000:
  7032                           
  7033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7034                           ;stkvar	_cfmt @ sp[(-2)+0]
  7035  0171AC  50E1               	movf	fsr1l,w,c
  7036  0171AE  0FFE               	addlw	-2
  7037  0171B0  6ED9               	movwf	fsr2l,c
  7038  0171B2  50E2               	movf	fsr1h,w,c
  7039  0171B4  6EDA               	movwf	fsr2h,c
  7040  0171B6  0EFF               	movlw	255
  7041  0171B8  22DA               	addwfc	fsr2h,f,c
  7042  0171BA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7043  0171C0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7044  0171C6                     	if	0	;tblptru may be non-zero
  7045  0171C6                     	endif
  7046  0171C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7047  0171C6  0E00               	movlw	low (__mediumconst shr (0+16))
  7048  0171C8  6EF8               	movwf	tblptru,c
  7049  0171CA                     	endif
  7050  0171CA  0008               	tblrd		*
  7051  0171CC  50F5               	movf	tablat,w,c
  7052  0171CE  0900               	iorlw	0
  7053  0171D0  A4D8               	btfss	status,2,c
  7054  0171D2  D7CC               	goto	l9998
  7055                           
  7056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7057  0171D4  0060  F064  F032   	movff	_nout,btemp
  7058  0171DA  0060  F068  F033   	movff	_nout+1,btemp+1
  7059                           
  7060                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7061  0171E0  0EF8               	movlw	248
  7062  0171E2  26E1               	addwf	fsr1l,f,c
  7063  0171E4  0EFF               	movlw	255
  7064  0171E6  22E2               	addwfc	fsr1h,f,c
  7065  0171E8  0012               	return		;funcret
  7066  0171EA                     __end_of_vfprintf:
  7067                           	opt callstack 0
  7068                           
  7069 ;; *************** function _vfpfcnvrt *****************
  7070 ;; Defined at:
  7071 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7074 ;;		 -> f(6), NULL(0), 
  7075 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7076 ;;		 -> cfmt(2), 
  7077 ;;  ap              2  [STACK] PTR PTR void 
  7078 ;;		 -> ap(2), ap(2), 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  llu             8  [STACK] unsigned long long 
  7081 ;;  ll              8  [STACK] long long 
  7082 ;;  f               4  [STACK] long long 
  7083 ;;  ct              3  [STACK] unsigned char [3]
  7084 ;;  vp              3    0        PTR void 
  7085 ;;  cp              2  [STACK] PTR unsigned char 
  7086 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  7087 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7088 ;;		 -> STR_3(5), V(187), 
  7089 ;;  i               2    0        int 
  7090 ;;  done            2    0        int 
  7091 ;;  c               1  [STACK] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  2  [STACK] int 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/5
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7105 ;;Total ram usage:        0 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:   12
  7108 ;; This function calls:
  7109 ;;		_atoi
  7110 ;;		_ctoa
  7111 ;;		_dtoa
  7112 ;;		_efgtoa
  7113 ;;		_fputc
  7114 ;;		_isdigit
  7115 ;;		_isupper
  7116 ;;		_stoa
  7117 ;;		_strncmp
  7118 ;;		_tolower
  7119 ;;		_xtoa
  7120 ;; This function is called by:
  7121 ;;		_vfprintf
  7122 ;; This function uses a reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text36
  7126  011244                     __ptext36:
  7127                           	opt callstack 0
  7128  011244                     _vfpfcnvrt:
  7129                           	opt callstack 0
  7130                           
  7131                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7132  011244  0E20               	movlw	32
  7133  011246  26E1               	addwf	fsr1l,f,c
  7134  011248  0E00               	movlw	0
  7135  01124A  22E2               	addwfc	fsr1h,f,c
  7136                           
  7137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7138                           ;stkvar	_fmt @ sp[(-32)+-4]
  7139                           
  7140                           ;incstack = 0
  7141  01124C  0EDC               	movlw	-36
  7142  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7143  011254  0EDD               	movlw	-35
  7144  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7145  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7146  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7147  011268                     	if	0	;tblptru may be non-zero
  7148  011268                     	endif
  7149  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7150  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7151  01126A  6EF8               	movwf	tblptru,c
  7152  01126C                     	endif
  7153  01126C  0008               	tblrd		*
  7154  01126E  50F5               	movf	tablat,w,c
  7155  011270  0A25               	xorlw	37
  7156  011272  A4D8               	btfss	status,2,c
  7157  011274  EF92  F08E         	goto	l9944
  7158                           
  7159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7160                           ;stkvar	_fmt @ sp[(-32)+-4]
  7161  011278  0EDC               	movlw	-36
  7162  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7163  011280  0EDD               	movlw	-35
  7164  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7165  011288  2ADE               	incf	postinc2,f,c
  7166  01128A  0E00               	movlw	0
  7167  01128C  22DD               	addwfc	postdec2,f,c
  7168                           
  7169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7170  01128E  6A1B               	clrf	_width^0,c
  7171  011290  6A1C               	clrf	(_width+1)^0,c
  7172  011292  6A1F               	clrf	_flags^0,c
  7173  011294  6A20               	clrf	(_flags+1)^0,c
  7174                           
  7175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7176  011296  681D               	setf	_prec^0,c
  7177  011298  681E               	setf	(_prec+1)^0,c
  7178                           
  7179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7180                           ;stkvar	_fmt @ sp[(-32)+-4]
  7181  01129A  0EDC               	movlw	-36
  7182  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7183  0112A2  0EDD               	movlw	-35
  7184  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7185  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7186  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7187  0112B6                     	if	0	;tblptru may be non-zero
  7188  0112B6                     	endif
  7189  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7190  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7191  0112B8  6EF8               	movwf	tblptru,c
  7192  0112BA                     	endif
  7193  0112BA  0008               	tblrd		*
  7194  0112BC  50F5               	movf	tablat,w,c
  7195  0112BE  0A2A               	xorlw	42
  7196  0112C0  A4D8               	btfss	status,2,c
  7197  0112C2  D031               	goto	l9808
  7198                           
  7199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7200                           ;stkvar	_fmt @ sp[(-32)+-4]
  7201  0112C4  0EDC               	movlw	-36
  7202  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7203  0112CC  0EDD               	movlw	-35
  7204  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7205  0112D4  2ADE               	incf	postinc2,f,c
  7206  0112D6  0E00               	movlw	0
  7207  0112D8  22DD               	addwfc	postdec2,f,c
  7208                           
  7209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7210                           ;stkvar	_ap @ sp[(-32)+-6]
  7211  0112DA  0EDA               	movlw	-38
  7212  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7213  0112E2  0EDB               	movlw	-37
  7214  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7215  0112EA  0E02               	movlw	2
  7216  0112EC  5EDE               	subwf	postinc2,f,c
  7217  0112EE  0E00               	movlw	0
  7218  0112F0  5ADD               	subwfb	postdec2,f,c
  7219  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7220  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7221  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7222  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7223  01130A  006F FF78  F01B    	movff	postinc2,_width
  7224  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7225                           
  7226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7227  011316  AE1C               	btfss	(_width+1)^0,7,c
  7228  011318  D066               	goto	u9940
  7229                           
  7230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7231  01131A  801F               	bsf	_flags^0,0,c
  7232                           
  7233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7234  01131C  6C1B               	negf	_width^0,c
  7235  01131E  1E1C               	comf	(_width+1)^0,f,c
  7236  011320  B0D8               	btfsc	status,0,c
  7237  011322  2A1C               	incf	(_width+1)^0,f,c
  7238  011324  D060               	goto	u9940
  7239  011326                     l9808:
  7240                           
  7241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7242                           ;stkvar	_fmt @ sp[(-32)+-4]
  7243  011326  0EDC               	movlw	-36
  7244  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7245  01132E  0EDD               	movlw	-35
  7246  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7247  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7248  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7249  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7250  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7251  01134E  EC0E  F0A8         	call	_atoi	;wreg free
  7252  011352  0060  F0C8  F01B   	movff	btemp,_width
  7253  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7254                           
  7255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7256  01135E  D00B               	goto	l9812
  7257  011360                     l9810:
  7258                           
  7259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7260                           ;stkvar	_fmt @ sp[(-32)+-4]
  7261  011360  0EDC               	movlw	-36
  7262  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7263  011368  0EDD               	movlw	-35
  7264  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7265  011370  2ADE               	incf	postinc2,f,c
  7266  011372  0E00               	movlw	0
  7267  011374  22DD               	addwfc	postdec2,f,c
  7268  011376                     l9812:
  7269  011376  0ED0               	movlw	208
  7270  011378  6E3C               	movwf	(btemp+10)^0,c
  7271  01137A  0EFF               	movlw	255
  7272  01137C  6E3D               	movwf	(btemp+11)^0,c
  7273                           
  7274                           ;stkvar	_fmt @ sp[(-32)+-4]
  7275  01137E  0EDC               	movlw	-36
  7276  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7277  011386  0EDD               	movlw	-35
  7278  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7279  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7280  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7281  01139A                     	if	0	;tblptru may be non-zero
  7282  01139A                     	endif
  7283  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7284  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7285  01139C  6EF8               	movwf	tblptru,c
  7286  01139E                     	endif
  7287  01139E  0008               	tblrd		*
  7288  0113A0  50F5               	movf	tablat,w,c
  7289  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7290  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7291  0113A6  503C               	movf	(btemp+10)^0,w,c
  7292  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7293  0113AA  503D               	movf	(btemp+11)^0,w,c
  7294  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7295  0113AE  503B               	movf	(btemp+9)^0,w,c
  7296  0113B0  E106               	bnz	u9920
  7297  0113B2  0E0A               	movlw	10
  7298  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7299  0113B6  B0D8               	btfsc	status,0,c
  7300  0113B8  D002               	goto	u9920
  7301  0113BA  0E01               	movlw	1
  7302  0113BC  D001               	goto	u9930
  7303  0113BE                     u9920:
  7304  0113BE  0E00               	movlw	0
  7305  0113C0                     u9930:
  7306  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7307  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7308                           
  7309                           ;stkvar	_vfpfcnvrt$4438 @ sp[(-32)+4]
  7310  0113C4  0EE4               	movlw	-28
  7311  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7312  0113CC  0EE5               	movlw	-27
  7313  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7314                           
  7315                           ;stkvar	_vfpfcnvrt$4438 @ sp[(-32)+4]
  7316  0113D4  0EE4               	movlw	-28
  7317  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7318  0113DC  0EE5               	movlw	-27
  7319  0113DE  50E3               	movf	plusw1,w,c
  7320  0113E0  1032               	iorwf	btemp^0,w,c
  7321  0113E2  A4D8               	btfss	status,2,c
  7322  0113E4  D7BD               	goto	l9810
  7323  0113E6                     u9940:
  7324                           
  7325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7326                           ;stkvar	_fmt @ sp[(-32)+-4]
  7327  0113E6  0EDC               	movlw	-36
  7328  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7329  0113EE  0EDD               	movlw	-35
  7330  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7331  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7332  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7333  011402                     	if	0	;tblptru may be non-zero
  7334  011402                     	endif
  7335  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7336  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7337  011404  6EF8               	movwf	tblptru,c
  7338  011406                     	endif
  7339  011406  0008               	tblrd		*
  7340  011408  50F5               	movf	tablat,w,c
  7341  01140A  0A2E               	xorlw	46
  7342  01140C  A4D8               	btfss	status,2,c
  7343  01140E  D0AC               	goto	u9990
  7344                           
  7345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7346  011410  6A1D               	clrf	_prec^0,c
  7347  011412  6A1E               	clrf	(_prec+1)^0,c
  7348                           
  7349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7350                           ;stkvar	_fmt @ sp[(-32)+-4]
  7351  011414  0EDC               	movlw	-36
  7352  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7353  01141C  0EDD               	movlw	-35
  7354  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7355  011424  2ADE               	incf	postinc2,f,c
  7356  011426  0E00               	movlw	0
  7357  011428  22DD               	addwfc	postdec2,f,c
  7358                           
  7359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7360                           ;stkvar	_fmt @ sp[(-32)+-4]
  7361  01142A  0EDC               	movlw	-36
  7362  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7363  011432  0EDD               	movlw	-35
  7364  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7365  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7366  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7367  011446                     	if	0	;tblptru may be non-zero
  7368  011446                     	endif
  7369  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7370  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7371  011448  6EF8               	movwf	tblptru,c
  7372  01144A                     	endif
  7373  01144A  0008               	tblrd		*
  7374  01144C  50F5               	movf	tablat,w,c
  7375  01144E  0A2A               	xorlw	42
  7376  011450  A4D8               	btfss	status,2,c
  7377  011452  D02A               	goto	l9830
  7378                           
  7379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7380                           ;stkvar	_fmt @ sp[(-32)+-4]
  7381  011454  0EDC               	movlw	-36
  7382  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7383  01145C  0EDD               	movlw	-35
  7384  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7385  011464  2ADE               	incf	postinc2,f,c
  7386  011466  0E00               	movlw	0
  7387  011468  22DD               	addwfc	postdec2,f,c
  7388                           
  7389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7390                           ;stkvar	_ap @ sp[(-32)+-6]
  7391  01146A  0EDA               	movlw	-38
  7392  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7393  011472  0EDB               	movlw	-37
  7394  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7395  01147A  0E02               	movlw	2
  7396  01147C  5EDE               	subwf	postinc2,f,c
  7397  01147E  0E00               	movlw	0
  7398  011480  5ADD               	subwfb	postdec2,f,c
  7399  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7400  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7401  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7402  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7403  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7404  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7405                           
  7406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7407  0114A6  D060               	goto	u9990
  7408  0114A8                     l9830:
  7409                           
  7410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7411                           ;stkvar	_fmt @ sp[(-32)+-4]
  7412  0114A8  0EDC               	movlw	-36
  7413  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7414  0114B0  0EDD               	movlw	-35
  7415  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7416  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7417  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7418  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7419  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7420  0114D0  EC0E  F0A8         	call	_atoi	;wreg free
  7421  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7422  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7423                           
  7424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7425  0114E0  D00B               	goto	l9834
  7426  0114E2                     l9832:
  7427                           
  7428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7429                           ;stkvar	_fmt @ sp[(-32)+-4]
  7430  0114E2  0EDC               	movlw	-36
  7431  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7432  0114EA  0EDD               	movlw	-35
  7433  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7434  0114F2  2ADE               	incf	postinc2,f,c
  7435  0114F4  0E00               	movlw	0
  7436  0114F6  22DD               	addwfc	postdec2,f,c
  7437  0114F8                     l9834:
  7438  0114F8  0ED0               	movlw	208
  7439  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7440  0114FC  0EFF               	movlw	255
  7441  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7442                           
  7443                           ;stkvar	_fmt @ sp[(-32)+-4]
  7444  011500  0EDC               	movlw	-36
  7445  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7446  011508  0EDD               	movlw	-35
  7447  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7448  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7449  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7450  01151C                     	if	0	;tblptru may be non-zero
  7451  01151C                     	endif
  7452  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7453  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7454  01151E  6EF8               	movwf	tblptru,c
  7455  011520                     	endif
  7456  011520  0008               	tblrd		*
  7457  011522  50F5               	movf	tablat,w,c
  7458  011524  6E3A               	movwf	(btemp+8)^0,c
  7459  011526  6A3B               	clrf	(btemp+9)^0,c
  7460  011528  503C               	movf	(btemp+10)^0,w,c
  7461  01152A  263A               	addwf	(btemp+8)^0,f,c
  7462  01152C  503D               	movf	(btemp+11)^0,w,c
  7463  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7464  011530  503B               	movf	(btemp+9)^0,w,c
  7465  011532  E106               	bnz	u9970
  7466  011534  0E0A               	movlw	10
  7467  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7468  011538  B0D8               	btfsc	status,0,c
  7469  01153A  D002               	goto	u9970
  7470  01153C  0E01               	movlw	1
  7471  01153E  D001               	goto	u9980
  7472  011540                     u9970:
  7473  011540  0E00               	movlw	0
  7474  011542                     u9980:
  7475  011542  6E3C               	movwf	(btemp+10)^0,c
  7476  011544  6A3D               	clrf	(btemp+11)^0,c
  7477                           
  7478                           ;stkvar	_vfpfcnvrt$4439 @ sp[(-32)+0]
  7479  011546  0EE0               	movlw	-32
  7480  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7481  01154E  0EE1               	movlw	-31
  7482  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7483                           
  7484                           ;stkvar	_vfpfcnvrt$4439 @ sp[(-32)+0]
  7485  011556  0EE0               	movlw	-32
  7486  011558  006F FF8C  F032    	movff	plusw1,btemp
  7487  01155E  0EE1               	movlw	-31
  7488  011560  50E3               	movf	plusw1,w,c
  7489  011562  1032               	iorwf	btemp^0,w,c
  7490  011564  A4D8               	btfss	status,2,c
  7491  011566  D7BD               	goto	l9832
  7492  011568                     u9990:
  7493                           
  7494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7495                           ;stkvar	_fmt @ sp[(-32)+-4]
  7496  011568  0EDC               	movlw	-36
  7497  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7498  011570  0EDD               	movlw	-35
  7499  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7500  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7501  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7502  011584                     	if	0	;tblptru may be non-zero
  7503  011584                     	endif
  7504  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7505  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7506  011586  6EF8               	movwf	tblptru,c
  7507  011588                     	endif
  7508  011588  0008               	tblrd		*
  7509  01158A  50F5               	movf	tablat,w,c
  7510  01158C  6EE6               	movwf	postinc1,c
  7511  01158E  0E00               	movlw	0
  7512  011590  6EE6               	movwf	postinc1,c
  7513  011592  ECFD  F0BA         	call	_tolower	;wreg free
  7514                           
  7515                           ;stkvar	_ct @ sp[(-32)+26]
  7516  011596  0EFA               	movlw	-6
  7517  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7518                           
  7519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7520                           ;stkvar	_ct @ sp[(-32)+26]
  7521  01159E  0EFA               	movlw	-6
  7522  0115A0  50E3               	movf	plusw1,w,c
  7523  0115A2  B4D8               	btfsc	status,2,c
  7524  0115A4  D05B               	goto	l9850
  7525                           
  7526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7527                           ;stkvar	_ct @ sp[(-32)+26]
  7528  0115A6  0EFB               	movlw	251
  7529  0115A8  24E1               	addwf	fsr1l,w,c
  7530  0115AA  6ED9               	movwf	fsr2l,c
  7531  0115AC  0EFF               	movlw	255
  7532  0115AE  20E2               	addwfc	fsr1h,w,c
  7533  0115B0  6EDA               	movwf	fsr2h,c
  7534                           
  7535                           ;stkvar	_fmt @ sp[(-32)+-4]
  7536  0115B2  0EDC               	movlw	-36
  7537  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7538  0115BA  0EDD               	movlw	-35
  7539  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7540  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7541  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7542  0115CE  0E01               	movlw	1
  7543  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7544  0115D2  0E00               	movlw	0
  7545  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7546  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7547  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7548  0115E2                     	if	0	;tblptru may be non-zero
  7549  0115E2                     	endif
  7550  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7551  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7552  0115E4  6EF8               	movwf	tblptru,c
  7553  0115E6                     	endif
  7554  0115E6  0008               	tblrd		*
  7555  0115E8  50F5               	movf	tablat,w,c
  7556  0115EA  6EE6               	movwf	postinc1,c
  7557  0115EC  0E00               	movlw	0
  7558  0115EE  6EE6               	movwf	postinc1,c
  7559  0115F0  ECFD  F0BA         	call	_tolower	;wreg free
  7560  0115F4  5032               	movf	btemp^0,w,c
  7561  0115F6  6EDF               	movwf	indf2,c
  7562                           
  7563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7564                           ;stkvar	_ct @ sp[(-32)+26]
  7565  0115F8  0EFB               	movlw	251
  7566  0115FA  24E1               	addwf	fsr1l,w,c
  7567  0115FC  6ED9               	movwf	fsr2l,c
  7568  0115FE  0EFF               	movlw	255
  7569  011600  20E2               	addwfc	fsr1h,w,c
  7570  011602  6EDA               	movwf	fsr2h,c
  7571  011604  50DF               	movf	indf2,w,c
  7572  011606  B4D8               	btfsc	status,2,c
  7573  011608  D029               	goto	l9850
  7574                           
  7575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7576                           ;stkvar	_ct @ sp[(-32)+26]
  7577  01160A  0EFC               	movlw	252
  7578  01160C  24E1               	addwf	fsr1l,w,c
  7579  01160E  6ED9               	movwf	fsr2l,c
  7580  011610  0EFF               	movlw	255
  7581  011612  20E2               	addwfc	fsr1h,w,c
  7582  011614  6EDA               	movwf	fsr2h,c
  7583                           
  7584                           ;stkvar	_fmt @ sp[(-32)+-4]
  7585  011616  0EDC               	movlw	-36
  7586  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7587  01161E  0EDD               	movlw	-35
  7588  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7589  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7590  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7591  011632  0E02               	movlw	2
  7592  011634  263C               	addwf	(btemp+10)^0,f,c
  7593  011636  0E00               	movlw	0
  7594  011638  223D               	addwfc	(btemp+11)^0,f,c
  7595  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7596  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7597  011646                     	if	0	;tblptru may be non-zero
  7598  011646                     	endif
  7599  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7600  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7601  011648  6EF8               	movwf	tblptru,c
  7602  01164A                     	endif
  7603  01164A  0008               	tblrd		*
  7604  01164C  50F5               	movf	tablat,w,c
  7605  01164E  6EE6               	movwf	postinc1,c
  7606  011650  0E00               	movlw	0
  7607  011652  6EE6               	movwf	postinc1,c
  7608  011654  ECFD  F0BA         	call	_tolower	;wreg free
  7609  011658  5032               	movf	btemp^0,w,c
  7610  01165A  6EDF               	movwf	indf2,c
  7611  01165C                     l9850:
  7612                           
  7613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7614                           ;stkvar	_fmt @ sp[(-32)+-4]
  7615  01165C  0EDC               	movlw	-36
  7616  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7617  011664  0EDD               	movlw	-35
  7618  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7619  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7620  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7621  011678                     	if	0	;tblptru may be non-zero
  7622  011678                     	endif
  7623  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7624  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7625  01167A  6EF8               	movwf	tblptru,c
  7626  01167C                     	endif
  7627  01167C  0008               	tblrd		*
  7628  01167E  50F5               	movf	tablat,w,c
  7629  011680  0A63               	xorlw	99
  7630  011682  A4D8               	btfss	status,2,c
  7631  011684  D036               	goto	l9860
  7632                           
  7633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7634                           ;stkvar	_fmt @ sp[(-32)+-4]
  7635  011686  0EDC               	movlw	-36
  7636  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7637  01168E  0EDD               	movlw	-35
  7638  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7639  011696  2ADE               	incf	postinc2,f,c
  7640  011698  0E00               	movlw	0
  7641  01169A  22DD               	addwfc	postdec2,f,c
  7642                           
  7643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7644                           ;stkvar	_ap @ sp[(-32)+-6]
  7645  01169C  0EDA               	movlw	-38
  7646  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7647  0116A4  0EDB               	movlw	-37
  7648  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7649  0116AC  0E02               	movlw	2
  7650  0116AE  5EDE               	subwf	postinc2,f,c
  7651  0116B0  0E00               	movlw	0
  7652  0116B2  5ADD               	subwfb	postdec2,f,c
  7653  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7654  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7655  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7656  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7657  0116CC  50DF               	movf	indf2,w,c
  7658  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7659                           
  7660                           ;stkvar	_c @ sp[(-32)+31]
  7661  0116D0  0EFF               	movlw	-1
  7662  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7663                           
  7664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7665                           ;stkvar	_c @ sp[(-32)+31]
  7666  0116D8  0EFF               	movlw	-1
  7667  0116DA  50E3               	movf	plusw1,w,c
  7668  0116DC  6EE6               	movwf	postinc1,c
  7669                           
  7670                           ;stkvar	_fp @ sp[(-33)+-2]
  7671  0116DE  0EDD               	movlw	-35
  7672  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7673  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7674  0116EC  EC77  F0BA         	call	_ctoa	;wreg free
  7675  0116F0  D343               	goto	l2022
  7676  0116F2                     l9860:
  7677                           
  7678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7679                           ;stkvar	_fmt @ sp[(-32)+-4]
  7680  0116F2  0EDC               	movlw	-36
  7681  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7682  0116FA  0EDD               	movlw	-35
  7683  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7684  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7685  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7686  01170E                     	if	0	;tblptru may be non-zero
  7687  01170E                     	endif
  7688  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7689  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7690  011710  6EF8               	movwf	tblptru,c
  7691  011712                     	endif
  7692  011712  0008               	tblrd		*
  7693  011714  50F5               	movf	tablat,w,c
  7694  011716  0A64               	xorlw	100
  7695  011718  B4D8               	btfsc	status,2,c
  7696  01171A  D015               	goto	u10040
  7697                           
  7698                           ;stkvar	_fmt @ sp[(-32)+-4]
  7699  01171C  0EDC               	movlw	-36
  7700  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7701  011724  0EDD               	movlw	-35
  7702  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7703  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7704  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7705  011738                     	if	0	;tblptru may be non-zero
  7706  011738                     	endif
  7707  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7708  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7709  01173A  6EF8               	movwf	tblptru,c
  7710  01173C                     	endif
  7711  01173C  0008               	tblrd		*
  7712  01173E  50F5               	movf	tablat,w,c
  7713  011740  0A69               	xorlw	105
  7714  011742  A4D8               	btfss	status,2,c
  7715  011744  D075               	goto	l9872
  7716  011746                     u10040:
  7717                           
  7718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7719                           ;stkvar	_fmt @ sp[(-32)+-4]
  7720  011746  0EDC               	movlw	-36
  7721  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7722  01174E  0EDD               	movlw	-35
  7723  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7724  011756  2ADE               	incf	postinc2,f,c
  7725  011758  0E00               	movlw	0
  7726  01175A  22DD               	addwfc	postdec2,f,c
  7727                           
  7728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7729                           ;stkvar	_ap @ sp[(-32)+-6]
  7730  01175C  0EDA               	movlw	-38
  7731  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7732  011764  0EDB               	movlw	-37
  7733  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7734  01176C  0E02               	movlw	2
  7735  01176E  5EDE               	subwf	postinc2,f,c
  7736  011770  0E00               	movlw	0
  7737  011772  5ADD               	subwfb	postdec2,f,c
  7738  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  7739  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  7740  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7741  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7742  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  7743  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  7744                           
  7745                           ;stkvar	_ll @ sp[(-32)+14]
  7746  011798  0EEE               	movlw	-18
  7747  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7748  0117A0  0EEF               	movlw	-17
  7749  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7750  0117A8  6A32               	clrf	btemp^0,c
  7751  0117AA  BEE3               	btfsc	plusw1,7,c
  7752  0117AC  6832               	setf	btemp^0,c
  7753  0117AE  0EF0               	movlw	-16
  7754  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7755  0117B6  0EF1               	movlw	-15
  7756  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7757  0117BE  0EF2               	movlw	-14
  7758  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7759  0117C6  0EF3               	movlw	-13
  7760  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7761  0117CE  0EF4               	movlw	-12
  7762  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7763  0117D6  0EF5               	movlw	-11
  7764  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7765                           
  7766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7767                           ;stkvar	_ll @ sp[(-32)+14]
  7768  0117DE  50E1               	movf	fsr1l,w,c
  7769  0117E0  0FEE               	addlw	-18
  7770  0117E2  6ED9               	movwf	fsr2l,c
  7771  0117E4  50E2               	movf	fsr1h,w,c
  7772  0117E6  6EDA               	movwf	fsr2h,c
  7773  0117E8  0EFF               	movlw	255
  7774  0117EA  22DA               	addwfc	fsr2h,f,c
  7775  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7776  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7777  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7778  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7779  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7780  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7781  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7782  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7783                           
  7784                           ;stkvar	_fp @ sp[(-40)+-2]
  7785  01181C  0ED6               	movlw	-42
  7786  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7787  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7788  01182A  EC26  F09E         	call	_dtoa	;wreg free
  7789  01182E  D2A4               	goto	l2022
  7790  011830                     l9872:
  7791                           
  7792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7793                           ;stkvar	_ct @ sp[(-32)+26]
  7794  011830  0EFA               	movlw	-6
  7795  011832  006F FF8C  F032    	movff	plusw1,btemp
  7796  011838  0E66               	movlw	102
  7797  01183A  1832               	xorwf	btemp^0,w,c
  7798  01183C  A4D8               	btfss	status,2,c
  7799  01183E  D06E               	goto	l9884
  7800                           
  7801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7802                           ;stkvar	_fmt @ sp[(-32)+-4]
  7803  011840  0EDC               	movlw	-36
  7804  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7805  011848  0EDD               	movlw	-35
  7806  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7807  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7808  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7809  01185C                     	if	0	;tblptru may be non-zero
  7810  01185C                     	endif
  7811  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7812  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7813  01185E  6EF8               	movwf	tblptru,c
  7814  011860                     	endif
  7815                           
  7816                           ;stkvar	_c @ sp[(-32)+31]
  7817  011860  0008               	tblrd		*
  7818  011862  0EFF               	movlw	-1
  7819  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7820                           
  7821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7822                           ;stkvar	_fmt @ sp[(-32)+-4]
  7823  01186A  0EDC               	movlw	-36
  7824  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7825  011872  0EDD               	movlw	-35
  7826  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7827  01187A  2ADE               	incf	postinc2,f,c
  7828  01187C  0E00               	movlw	0
  7829  01187E  22DD               	addwfc	postdec2,f,c
  7830                           
  7831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7832                           ;stkvar	_ap @ sp[(-32)+-6]
  7833  011880  0EDA               	movlw	-38
  7834  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7835  011888  0EDB               	movlw	-37
  7836  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7837  011890  0E04               	movlw	4
  7838  011892  5EDE               	subwf	postinc2,f,c
  7839  011894  0E00               	movlw	0
  7840  011896  5ADD               	subwfb	postdec2,f,c
  7841  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  7842  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  7843  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7844  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7845  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  7846  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  7847  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  7848  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  7849                           
  7850                           ;stkvar	_f @ sp[(-32)+22]
  7851  0118C8  0EF6               	movlw	-10
  7852  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  7853  0118D0  0EF7               	movlw	-9
  7854  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  7855  0118D8  0EF8               	movlw	-8
  7856  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7857  0118E0  0EF9               	movlw	-7
  7858  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7859  0118E8                     l9880:
  7860                           
  7861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7862                           ;stkvar	_c @ sp[(-32)+31]
  7863  0118E8  0EFF               	movlw	-1
  7864  0118EA  50E3               	movf	plusw1,w,c
  7865  0118EC  6EE6               	movwf	postinc1,c
  7866                           
  7867                           ;stkvar	_f @ sp[(-33)+22]
  7868  0118EE  0EF5               	movlw	-11
  7869  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7870  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7871  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7872  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7873                           
  7874                           ;stkvar	_fp @ sp[(-37)+-2]
  7875  011908  0ED9               	movlw	-39
  7876  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7877  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7878  011916  EC00  F080         	call	_efgtoa	;wreg free
  7879  01191A  D22E               	goto	l2022
  7880  01191C                     l9884:
  7881                           
  7882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7883  01191C  0E02               	movlw	2
  7884  01191E  6EE6               	movwf	postinc1,c
  7885  011920  0E00               	movlw	0
  7886  011922  6EE6               	movwf	postinc1,c
  7887  011924  0EF6               	movlw	low STR_45
  7888  011926  6EE6               	movwf	postinc1,c
  7889  011928  0EFF               	movlw	high STR_45
  7890  01192A  6EE6               	movwf	postinc1,c
  7891                           
  7892                           ;stkvar	_ct @ sp[(-36)+26]
  7893  01192C  0EF6               	movlw	246
  7894  01192E  24E1               	addwf	fsr1l,w,c
  7895  011930  6E32               	movwf	btemp^0,c
  7896  011932  0EFF               	movlw	255
  7897  011934  20E2               	addwfc	fsr1h,w,c
  7898  011936  6E33               	movwf	(btemp+1)^0,c
  7899  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  7900  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7901  011944  ECA4  F0AD         	call	_strncmp	;wreg free
  7902  011948  5032               	movf	btemp^0,w,c
  7903  01194A  1033               	iorwf	(btemp+1)^0,w,c
  7904  01194C  A4D8               	btfss	status,2,c
  7905  01194E  D096               	goto	l9904
  7906                           
  7907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7908                           ;stkvar	_fmt @ sp[(-32)+-4]
  7909  011950  0EDC               	movlw	-36
  7910  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7911  011958  0EDD               	movlw	-35
  7912  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7913  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  7914  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  7915  01196C  0E01               	movlw	1
  7916  01196E  263C               	addwf	(btemp+10)^0,f,c
  7917  011970  0E00               	movlw	0
  7918  011972  223D               	addwfc	(btemp+11)^0,f,c
  7919  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7920  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7921  011980                     	if	0	;tblptru may be non-zero
  7922  011980                     	endif
  7923  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7924  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7925  011982  6EF8               	movwf	tblptru,c
  7926  011984                     	endif
  7927                           
  7928                           ;stkvar	_c @ sp[(-32)+31]
  7929  011984  0008               	tblrd		*
  7930  011986  0EFF               	movlw	-1
  7931  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7932  01198E  0EBF               	movlw	191
  7933  011990  6E3C               	movwf	(btemp+10)^0,c
  7934  011992  0EFF               	movlw	255
  7935  011994  6E3D               	movwf	(btemp+11)^0,c
  7936                           
  7937                           ;stkvar	_fmt @ sp[(-32)+-4]
  7938  011996  0EDC               	movlw	-36
  7939  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7940  01199E  0EDD               	movlw	-35
  7941  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7942  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7943  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7944  0119B2                     	if	0	;tblptru may be non-zero
  7945  0119B2                     	endif
  7946  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7947  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7948  0119B4  6EF8               	movwf	tblptru,c
  7949  0119B6                     	endif
  7950  0119B6  0008               	tblrd		*
  7951  0119B8  50F5               	movf	tablat,w,c
  7952  0119BA  6E3A               	movwf	(btemp+8)^0,c
  7953  0119BC  6A3B               	clrf	(btemp+9)^0,c
  7954  0119BE  503C               	movf	(btemp+10)^0,w,c
  7955  0119C0  263A               	addwf	(btemp+8)^0,f,c
  7956  0119C2  503D               	movf	(btemp+11)^0,w,c
  7957  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  7958  0119C6  503B               	movf	(btemp+9)^0,w,c
  7959  0119C8  E106               	bnz	u10070
  7960  0119CA  0E1A               	movlw	26
  7961  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  7962  0119CE  B0D8               	btfsc	status,0,c
  7963  0119D0  D002               	goto	u10070
  7964  0119D2  0E01               	movlw	1
  7965  0119D4  D001               	goto	u10080
  7966  0119D6                     u10070:
  7967  0119D6  0E00               	movlw	0
  7968  0119D8                     u10080:
  7969  0119D8  6E3C               	movwf	(btemp+10)^0,c
  7970  0119DA  6A3D               	clrf	(btemp+11)^0,c
  7971                           
  7972                           ;stkvar	_vfpfcnvrt$4445 @ sp[(-32)+2]
  7973  0119DC  0EE2               	movlw	-30
  7974  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7975  0119E4  0EE3               	movlw	-29
  7976  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7977                           
  7978                           ;stkvar	_vfpfcnvrt$4445 @ sp[(-32)+2]
  7979  0119EC  0EE2               	movlw	-30
  7980  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  7981  0119F4  0EE3               	movlw	-29
  7982  0119F6  50E3               	movf	plusw1,w,c
  7983  0119F8  1032               	iorwf	btemp^0,w,c
  7984                           
  7985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7986                           ;stkvar	_ap @ sp[(-32)+-6]
  7987                           
  7988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7989                           
  7990                           ;stkvar	_f @ sp[(-32)+22]
  7991                           
  7992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7993                           ;stkvar	_ap @ sp[(-32)+-6]
  7994  0119FA  0EDA               	movlw	-38
  7995  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7996  011A02  0EDB               	movlw	-37
  7997  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7998  011A0A  0E04               	movlw	4
  7999  011A0C  5EDE               	subwf	postinc2,f,c
  8000  011A0E  0E00               	movlw	0
  8001  011A10  5ADD               	subwfb	postdec2,f,c
  8002  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8003  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8004  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8005  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8006  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8007  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8008  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8009  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8010                           
  8011                           ;stkvar	_f @ sp[(-32)+22]
  8012  011A42  0EF6               	movlw	-10
  8013  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8014  011A4A  0EF7               	movlw	-9
  8015  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8016  011A52  0EF8               	movlw	-8
  8017  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8018  011A5A  0EF9               	movlw	-7
  8019  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8020                           
  8021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8022                           ;stkvar	_fmt @ sp[(-32)+-4]
  8023  011A62  0EDC               	movlw	-36
  8024  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8025  011A6A  0EDD               	movlw	-35
  8026  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8027  011A72  0E02               	movlw	2
  8028  011A74  26DE               	addwf	postinc2,f,c
  8029  011A76  0E00               	movlw	0
  8030  011A78  22DD               	addwfc	postdec2,f,c
  8031  011A7A  D736               	goto	l9880
  8032  011A7C                     l9904:
  8033                           
  8034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8035                           ;stkvar	_fmt @ sp[(-32)+-4]
  8036  011A7C  0EDC               	movlw	-36
  8037  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8038  011A84  0EDD               	movlw	-35
  8039  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8040  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8041  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8042  011A98                     	if	0	;tblptru may be non-zero
  8043  011A98                     	endif
  8044  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8045  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8046  011A9A  6EF8               	movwf	tblptru,c
  8047  011A9C                     	endif
  8048  011A9C  0008               	tblrd		*
  8049  011A9E  50F5               	movf	tablat,w,c
  8050  011AA0  0A73               	xorlw	115
  8051  011AA2  A4D8               	btfss	status,2,c
  8052  011AA4  D042               	goto	l9914
  8053                           
  8054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8055                           ;stkvar	_fmt @ sp[(-32)+-4]
  8056  011AA6  0EDC               	movlw	-36
  8057  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8058  011AAE  0EDD               	movlw	-35
  8059  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8060  011AB6  2ADE               	incf	postinc2,f,c
  8061  011AB8  0E00               	movlw	0
  8062  011ABA  22DD               	addwfc	postdec2,f,c
  8063                           
  8064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8065                           ;stkvar	_ap @ sp[(-32)+-6]
  8066  011ABC  0EDA               	movlw	-38
  8067  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8068  011AC4  0EDB               	movlw	-37
  8069  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8070  011ACC  0E02               	movlw	2
  8071  011ACE  5EDE               	subwf	postinc2,f,c
  8072  011AD0  0E00               	movlw	0
  8073  011AD2  5ADD               	subwfb	postdec2,f,c
  8074  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8075  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8076  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8077  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8078  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8079  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8080                           
  8081                           ;stkvar	_cp @ sp[(-32)+29]
  8082  011AF8  0EFE               	movlw	-2
  8083  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8084  011B00  0EFD               	movlw	-3
  8085  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8086                           
  8087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8088                           ;stkvar	_cp @ sp[(-32)+29]
  8089  011B08  0EFD               	movlw	-3
  8090  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8091  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8092                           
  8093                           ;stkvar	_fp @ sp[(-34)+-2]
  8094  011B16  0EDC               	movlw	-36
  8095  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8096  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8097  011B24  EC6F  F0A5         	call	_stoa	;wreg free
  8098  011B28  D127               	goto	l2022
  8099  011B2A                     l9914:
  8100                           
  8101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8102                           ;stkvar	_fmt @ sp[(-32)+-4]
  8103  011B2A  0EDC               	movlw	-36
  8104  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8105  011B32  0EDD               	movlw	-35
  8106  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8107  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8108  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8109  011B46                     	if	0	;tblptru may be non-zero
  8110  011B46                     	endif
  8111  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8112  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8113  011B48  6EF8               	movwf	tblptru,c
  8114  011B4A                     	endif
  8115  011B4A  0008               	tblrd		*
  8116  011B4C  50F5               	movf	tablat,w,c
  8117  011B4E  0A78               	xorlw	120
  8118  011B50  B4D8               	btfsc	status,2,c
  8119  011B52  D015               	goto	u10120
  8120                           
  8121                           ;stkvar	_fmt @ sp[(-32)+-4]
  8122  011B54  0EDC               	movlw	-36
  8123  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8124  011B5C  0EDD               	movlw	-35
  8125  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8126  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8127  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8128  011B70                     	if	0	;tblptru may be non-zero
  8129  011B70                     	endif
  8130  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8131  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8132  011B72  6EF8               	movwf	tblptru,c
  8133  011B74                     	endif
  8134  011B74  0008               	tblrd		*
  8135  011B76  50F5               	movf	tablat,w,c
  8136  011B78  0A58               	xorlw	88
  8137  011B7A  A4D8               	btfss	status,2,c
  8138  011B7C  D094               	goto	l9928
  8139  011B7E                     u10120:
  8140                           
  8141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8142                           ;stkvar	_fmt @ sp[(-32)+-4]
  8143  011B7E  0EDC               	movlw	-36
  8144  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8145  011B86  0EDD               	movlw	-35
  8146  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8147  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8148  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8149  011B9A                     	if	0	;tblptru may be non-zero
  8150  011B9A                     	endif
  8151  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8152  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8153  011B9C  6EF8               	movwf	tblptru,c
  8154  011B9E                     	endif
  8155                           
  8156                           ;stkvar	_c @ sp[(-32)+31]
  8157  011B9E  0008               	tblrd		*
  8158  011BA0  0EFF               	movlw	-1
  8159  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8160                           
  8161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8162                           ;stkvar	_fmt @ sp[(-32)+-4]
  8163  011BA8  0EDC               	movlw	-36
  8164  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8165  011BB0  0EDD               	movlw	-35
  8166  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8167  011BB8  2ADE               	incf	postinc2,f,c
  8168  011BBA  0E00               	movlw	0
  8169  011BBC  22DD               	addwfc	postdec2,f,c
  8170                           
  8171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8172                           ;stkvar	_ap @ sp[(-32)+-6]
  8173  011BBE  0EDA               	movlw	-38
  8174  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8175  011BC6  0EDB               	movlw	-37
  8176  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8177  011BCE  0E02               	movlw	2
  8178  011BD0  5EDE               	subwf	postinc2,f,c
  8179  011BD2  0E00               	movlw	0
  8180  011BD4  5ADD               	subwfb	postdec2,f,c
  8181  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8182  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8183  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8184  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8185  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8186  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8187  011BFA  503C               	movf	(btemp+10)^0,w,c
  8188  011BFC  6E42               	movwf	(btemp+16)^0,c
  8189  011BFE  503D               	movf	(btemp+11)^0,w,c
  8190  011C00  6E43               	movwf	(btemp+17)^0,c
  8191  011C02  6A44               	clrf	(btemp+18)^0,c
  8192  011C04  6A45               	clrf	(btemp+19)^0,c
  8193  011C06  6A46               	clrf	(btemp+20)^0,c
  8194  011C08  6A47               	clrf	(btemp+21)^0,c
  8195  011C0A  6A48               	clrf	(btemp+22)^0,c
  8196  011C0C  6A49               	clrf	(btemp+23)^0,c
  8197                           
  8198                           ;stkvar	_llu @ sp[(-32)+6]
  8199  011C0E  0EE6               	movlw	-26
  8200  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8201  011C16  0EE7               	movlw	-25
  8202  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8203  011C1E  0EE8               	movlw	-24
  8204  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8205  011C26  0EE9               	movlw	-23
  8206  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8207  011C2E  0EEA               	movlw	-22
  8208  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8209  011C36  0EEB               	movlw	-21
  8210  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8211  011C3E  0EEC               	movlw	-20
  8212  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8213  011C46  0EED               	movlw	-19
  8214  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8215                           
  8216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8217                           ;stkvar	_c @ sp[(-32)+31]
  8218  011C4E  0EFF               	movlw	-1
  8219  011C50  50E3               	movf	plusw1,w,c
  8220  011C52  6EE6               	movwf	postinc1,c
  8221                           
  8222                           ;stkvar	_llu @ sp[(-33)+6]
  8223  011C54  50E1               	movf	fsr1l,w,c
  8224  011C56  0FE5               	addlw	-27
  8225  011C58  6ED9               	movwf	fsr2l,c
  8226  011C5A  50E2               	movf	fsr1h,w,c
  8227  011C5C  6EDA               	movwf	fsr2h,c
  8228  011C5E  0EFF               	movlw	255
  8229  011C60  22DA               	addwfc	fsr2h,f,c
  8230  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8231  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8232  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8233  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8234  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8235  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8236  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8237  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8238                           
  8239                           ;stkvar	_fp @ sp[(-41)+-2]
  8240  011C92  0ED5               	movlw	-43
  8241  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8242  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8243  011CA0  EC66  F0A0         	call	_xtoa	;wreg free
  8244  011CA4  D069               	goto	l2022
  8245  011CA6                     l9928:
  8246                           
  8247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8248                           ;stkvar	_fmt @ sp[(-32)+-4]
  8249  011CA6  0EDC               	movlw	-36
  8250  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8251  011CAE  0EDD               	movlw	-35
  8252  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8253  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8254  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8255  011CC2                     	if	0	;tblptru may be non-zero
  8256  011CC2                     	endif
  8257  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8258  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8259  011CC4  6EF8               	movwf	tblptru,c
  8260  011CC6                     	endif
  8261  011CC6  0008               	tblrd		*
  8262  011CC8  50F5               	movf	tablat,w,c
  8263  011CCA  0A25               	xorlw	37
  8264  011CCC  A4D8               	btfss	status,2,c
  8265  011CCE  D01A               	goto	l9938
  8266                           
  8267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8268                           ;stkvar	_fmt @ sp[(-32)+-4]
  8269  011CD0  0EDC               	movlw	-36
  8270  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8271  011CD8  0EDD               	movlw	-35
  8272  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8273  011CE0  2ADE               	incf	postinc2,f,c
  8274  011CE2  0E00               	movlw	0
  8275  011CE4  22DD               	addwfc	postdec2,f,c
  8276                           
  8277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8278                           ;stkvar	_fp @ sp[(-32)+-2]
  8279  011CE6  0EDE               	movlw	-34
  8280  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8281  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8282  011CF4  0E25               	movlw	37
  8283  011CF6  6EE6               	movwf	postinc1,c
  8284  011CF8  0E00               	movlw	0
  8285  011CFA  6EE6               	movwf	postinc1,c
  8286  011CFC  EC7F  F0B3         	call	_fputc	;wreg free
  8287  011D00                     l9934:
  8288                           
  8289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8290  011D00  0E01               	movlw	1
  8291  011D02  D00C               	goto	L5
  8292  011D04                     l9938:
  8293                           
  8294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8295                           ;stkvar	_fmt @ sp[(-32)+-4]
  8296  011D04  0EDC               	movlw	-36
  8297  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8298  011D0C  0EDD               	movlw	-35
  8299  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8300  011D14  2ADE               	incf	postinc2,f,c
  8301  011D16  0E00               	movlw	0
  8302  011D18  22DD               	addwfc	postdec2,f,c
  8303                           
  8304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8305  011D1A  0E00               	movlw	0
  8306  011D1C                     L5:
  8307  011D1C  6E32               	movwf	btemp^0,c
  8308  011D1E  0E00               	movlw	0
  8309  011D20  6E33               	movwf	(btemp+1)^0,c
  8310  011D22  D02A               	goto	l2022
  8311  011D24                     l9944:
  8312                           
  8313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8314                           ;stkvar	_fp @ sp[(-32)+-2]
  8315  011D24  0EDE               	movlw	-34
  8316  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8317  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8318                           
  8319                           ;stkvar	_fmt @ sp[(-34)+-4]
  8320  011D32  0EDA               	movlw	-38
  8321  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8322  011D3A  0EDB               	movlw	-37
  8323  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8324  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8325  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8326  011D4E                     	if	0	;tblptru may be non-zero
  8327  011D4E                     	endif
  8328  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8329  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8330  011D50  6EF8               	movwf	tblptru,c
  8331  011D52                     	endif
  8332  011D52  0008               	tblrd		*
  8333  011D54  50F5               	movf	tablat,w,c
  8334  011D56  6EE6               	movwf	postinc1,c
  8335  011D58  0E00               	movlw	0
  8336  011D5A  6EE6               	movwf	postinc1,c
  8337  011D5C  EC7F  F0B3         	call	_fputc	;wreg free
  8338                           
  8339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8340                           ;stkvar	_fmt @ sp[(-32)+-4]
  8341  011D60  0EDC               	movlw	-36
  8342  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8343  011D68  0EDD               	movlw	-35
  8344  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8345  011D70  2ADE               	incf	postinc2,f,c
  8346  011D72  0E00               	movlw	0
  8347  011D74  22DD               	addwfc	postdec2,f,c
  8348  011D76  D7C4               	goto	l9934
  8349  011D78                     l2022:
  8350                           
  8351                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8352  011D78  0EDA               	movlw	218
  8353  011D7A  26E1               	addwf	fsr1l,f,c
  8354  011D7C  0EFF               	movlw	255
  8355  011D7E  22E2               	addwfc	fsr1h,f,c
  8356  011D80  0012               	return		;funcret
  8357  011D82                     __end_of_vfpfcnvrt:
  8358                           	opt callstack 0
  8359                           
  8360 ;; *************** function _xtoa *****************
  8361 ;; Defined at:
  8362 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8365 ;;		 -> f(6), NULL(0), 
  8366 ;;  d               8  [STACK] unsigned long long 
  8367 ;;  x               1  [STACK] unsigned char 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  n               8  [STACK] unsigned long long 
  8370 ;;  c               2  [STACK] int 
  8371 ;;  i               2  [STACK] int 
  8372 ;;  w               2  [STACK] int 
  8373 ;;  p               2  [STACK] int 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2  [STACK] int 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/5
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:   11
  8390 ;; This function calls:
  8391 ;;		_isalpha
  8392 ;;		_isupper
  8393 ;;		_pad
  8394 ;;		_toupper
  8395 ;; This function is called by:
  8396 ;;		_vfpfcnvrt
  8397 ;; This function uses a reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text37
  8401  0140CC                     __ptext37:
  8402                           	opt callstack 0
  8403  0140CC                     _xtoa:
  8404                           	opt callstack 0
  8405                           
  8406                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8407  0140CC  0E14               	movlw	20
  8408  0140CE  26E1               	addwf	fsr1l,f,c
  8409  0140D0  0E00               	movlw	0
  8410  0140D2  22E2               	addwfc	fsr1h,f,c
  8411                           
  8412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8413                           
  8414                           ;incstack = 0
  8415  0140D4  AE1E               	btfss	(_prec+1)^0,7,c
  8416                           
  8417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8418  0140D6  921F               	bcf	_flags^0,1,c
  8419                           
  8420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8421  0140D8  BE1E               	btfsc	(_prec+1)^0,7,c
  8422  0140DA  D005               	goto	u9720
  8423  0140DC  501E               	movf	(_prec+1)^0,w,c
  8424  0140DE  E110               	bnz	l9726
  8425  0140E0  041D               	decf	_prec^0,w,c
  8426  0140E2  B0D8               	btfsc	status,0,c
  8427  0140E4  D00D               	goto	l9726
  8428  0140E6                     u9720:
  8429  0140E6  0E01               	movlw	1
  8430  0140E8  6E3C               	movwf	(btemp+10)^0,c
  8431  0140EA  0E00               	movlw	0
  8432  0140EC  6E3D               	movwf	(btemp+11)^0,c
  8433                           
  8434                           ;stkvar	_p @ sp[(-20)+18]
  8435  0140EE  0EFE               	movlw	-2
  8436  0140F0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8437  0140F6  0EFF               	movlw	-1
  8438  0140F8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8439  0140FE  D008               	goto	l1972
  8440  014100                     l9726:
  8441                           
  8442                           ;stkvar	_p @ sp[(-20)+18]
  8443  014100  0EFE               	movlw	-2
  8444  014102  0060  F077  FFE3   	movff	_prec,plusw1
  8445  014108  0EFF               	movlw	-1
  8446  01410A  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8447  014110                     l1972:
  8448                           
  8449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8450                           ;stkvar	_w @ sp[(-20)+16]
  8451  014110  0EFC               	movlw	-4
  8452  014112  0060  F06F  FFE3   	movff	_width,plusw1
  8453  014118  0EFD               	movlw	-3
  8454  01411A  0060  F073  FFE3   	movff	_width+1,plusw1
  8455                           
  8456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8457  014120  A81F               	btfss	_flags^0,4,c
  8458  014122  D00B               	goto	l9732
  8459                           
  8460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8461                           ;stkvar	_w @ sp[(-20)+16]
  8462  014124  50E1               	movf	fsr1l,w,c
  8463  014126  0FFC               	addlw	-4
  8464  014128  6ED9               	movwf	fsr2l,c
  8465  01412A  50E2               	movf	fsr1h,w,c
  8466  01412C  6EDA               	movwf	fsr2h,c
  8467  01412E  0EFF               	movlw	255
  8468  014130  22DA               	addwfc	fsr2h,f,c
  8469  014132  0EFE               	movlw	254
  8470  014134  26DE               	addwf	postinc2,f,c
  8471  014136  0EFF               	movlw	255
  8472  014138  22DD               	addwfc	postdec2,f,c
  8473  01413A                     l9732:
  8474                           
  8475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8476                           ;stkvar	_d @ sp[(-20)+-10]
  8477  01413A  0EE2               	movlw	226
  8478  01413C  24E1               	addwf	fsr1l,w,c
  8479  01413E  6ED9               	movwf	fsr2l,c
  8480  014140  0EFF               	movlw	255
  8481  014142  20E2               	addwfc	fsr1h,w,c
  8482  014144  6EDA               	movwf	fsr2h,c
  8483                           
  8484                           ;stkvar	_n @ sp[(-20)+4]
  8485  014146  0E08               	movlw	8
  8486  014148  6E32               	movwf	btemp^0,c
  8487  01414A  0EF0               	movlw	-16
  8488  01414C                     us974999:
  8489  01414C  006F FF7B FFE3     	movff	postinc2,plusw1
  8490  014152  28E8               	incf	wreg,w,c
  8491  014154  2E32               	decfsz	btemp^0,f,c
  8492  014156  D7FA               	bra	us974999
  8493                           
  8494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8495  014158  0E4F               	movlw	79
  8496  01415A  6E3C               	movwf	(btemp+10)^0,c
  8497  01415C  0E00               	movlw	0
  8498  01415E  6E3D               	movwf	(btemp+11)^0,c
  8499                           
  8500                           ;stkvar	_i @ sp[(-20)+14]
  8501  014160  0EFA               	movlw	-6
  8502  014162  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8503  014168  0EFB               	movlw	-5
  8504  01416A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8505                           
  8506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8507  014170  0101               	movlb	1	; () banked
  8508  014172  6BC7               	clrf	(_dbuf+79)& (0+255),b
  8509                           
  8510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8511  014174  D0EE               	goto	l9770
  8512  014176                     l9738:
  8513                           
  8514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8515                           ;stkvar	_i @ sp[(-20)+14]
  8516  014176  50E1               	movf	fsr1l,w,c
  8517  014178  0FFA               	addlw	-6
  8518  01417A  6ED9               	movwf	fsr2l,c
  8519  01417C  50E2               	movf	fsr1h,w,c
  8520  01417E  6EDA               	movwf	fsr2h,c
  8521  014180  0EFF               	movlw	255
  8522  014182  22DA               	addwfc	fsr2h,f,c
  8523  014184  06DE               	decf	postinc2,f,c
  8524  014186  0E00               	movlw	0
  8525  014188  5ADD               	subwfb	postdec2,f,c
  8526                           
  8527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8528                           ;stkvar	_n @ sp[(-20)+4]
  8529  01418A  0EF0               	movlw	-16
  8530  01418C  006F FF8C  F03C    	movff	plusw1,btemp+10
  8531  014192  0EF1               	movlw	-15
  8532  014194  006F FF8C  F03D    	movff	plusw1,btemp+11
  8533  01419A  0E0F               	movlw	15
  8534  01419C  163C               	andwf	(btemp+10)^0,f,c
  8535  01419E  0E00               	movlw	0
  8536  0141A0  163D               	andwf	(btemp+11)^0,f,c
  8537                           
  8538                           ;stkvar	_c @ sp[(-20)+12]
  8539  0141A2  0EF8               	movlw	-8
  8540  0141A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8541  0141AA  0EF9               	movlw	-7
  8542  0141AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8543                           
  8544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8545                           ;stkvar	_c @ sp[(-20)+12]
  8546  0141B2  0EF9               	movlw	-7
  8547  0141B4  BEE3               	btfsc	plusw1,7,c
  8548  0141B6  D00F               	goto	l9746
  8549  0141B8  0EF9               	movlw	-7
  8550  0141BA  50E3               	movf	plusw1,w,c
  8551  0141BC  E108               	bnz	u9750
  8552  0141BE  0EF8               	movlw	-8
  8553  0141C0  006F FF8C  F032    	movff	plusw1,btemp
  8554  0141C6  0E0A               	movlw	10
  8555  0141C8  5E32               	subwf	btemp^0,f,c
  8556  0141CA  A0D8               	btfss	status,0,c
  8557  0141CC  D004               	goto	l9746
  8558  0141CE                     u9750:
  8559                           
  8560                           ;stkvar	_c @ sp[(-20)+12]
  8561  0141CE  0EF8               	movlw	-8
  8562  0141D0  50E3               	movf	plusw1,w,c
  8563  0141D2  0F57               	addlw	87
  8564  0141D4  D003               	goto	L6
  8565  0141D6                     l9746:
  8566                           
  8567                           ;stkvar	_c @ sp[(-20)+12]
  8568  0141D6  0EF8               	movlw	-8
  8569  0141D8  50E3               	movf	plusw1,w,c
  8570  0141DA  0F30               	addlw	48
  8571  0141DC                     L6:
  8572  0141DC  6E3C               	movwf	(btemp+10)^0,c
  8573  0141DE  0EF9               	movlw	-7
  8574  0141E0  006F FF8C  F03D    	movff	plusw1,btemp+11
  8575  0141E6  0E00               	movlw	0
  8576  0141E8  223D               	addwfc	(btemp+11)^0,f,c
  8577                           
  8578                           ;stkvar	_c @ sp[(-20)+12]
  8579  0141EA  0EF8               	movlw	-8
  8580  0141EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8581  0141F2  0EF9               	movlw	-7
  8582  0141F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8583  0141FA  0EBF               	movlw	191
  8584  0141FC  6E3C               	movwf	(btemp+10)^0,c
  8585  0141FE  0EFF               	movlw	255
  8586  014200  6E3D               	movwf	(btemp+11)^0,c
  8587                           
  8588                           ;stkvar	_x @ sp[(-20)+-11]
  8589  014202  0EE1               	movlw	-31
  8590  014204  50E3               	movf	plusw1,w,c
  8591  014206  6E3A               	movwf	(btemp+8)^0,c
  8592  014208  6A3B               	clrf	(btemp+9)^0,c
  8593  01420A  503C               	movf	(btemp+10)^0,w,c
  8594  01420C  263A               	addwf	(btemp+8)^0,f,c
  8595  01420E  503D               	movf	(btemp+11)^0,w,c
  8596  014210  223B               	addwfc	(btemp+9)^0,f,c
  8597  014212  503B               	movf	(btemp+9)^0,w,c
  8598  014214  E106               	bnz	u9760
  8599  014216  0E1A               	movlw	26
  8600  014218  5C3A               	subwf	(btemp+8)^0,w,c
  8601  01421A  B0D8               	btfsc	status,0,c
  8602  01421C  D002               	goto	u9760
  8603  01421E  0E01               	movlw	1
  8604  014220  D001               	goto	u9770
  8605  014222                     u9760:
  8606  014222  0E00               	movlw	0
  8607  014224                     u9770:
  8608  014224  6E3C               	movwf	(btemp+10)^0,c
  8609  014226  6A3D               	clrf	(btemp+11)^0,c
  8610                           
  8611                           ;stkvar	_xtoa$4423 @ sp[(-20)+2]
  8612  014228  0EEE               	movlw	-18
  8613  01422A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8614  014230  0EEF               	movlw	-17
  8615  014232  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8616                           
  8617                           ;stkvar	_xtoa$4423 @ sp[(-20)+2]
  8618  014238  0EEE               	movlw	-18
  8619  01423A  006F FF8C  F032    	movff	plusw1,btemp
  8620  014240  0EEF               	movlw	-17
  8621  014242  50E3               	movf	plusw1,w,c
  8622  014244  1032               	iorwf	btemp^0,w,c
  8623  014246  B4D8               	btfsc	status,2,c
  8624  014248  D041               	goto	l9762
  8625  01424A  0E9F               	movlw	159
  8626  01424C  6E3C               	movwf	(btemp+10)^0,c
  8627  01424E  0EFF               	movlw	255
  8628  014250  6E3D               	movwf	(btemp+11)^0,c
  8629                           
  8630                           ;stkvar	_c @ sp[(-20)+12]
  8631  014252  0EF8               	movlw	-8
  8632  014254  006F FF8C  F03A    	movff	plusw1,btemp+8
  8633  01425A  0EF9               	movlw	-7
  8634  01425C  006F FF8C  F03B    	movff	plusw1,btemp+9
  8635  014262  0E20               	movlw	32
  8636  014264  123A               	iorwf	(btemp+8)^0,f,c
  8637  014266  0E00               	movlw	0
  8638  014268  123B               	iorwf	(btemp+9)^0,f,c
  8639  01426A  503C               	movf	(btemp+10)^0,w,c
  8640  01426C  263A               	addwf	(btemp+8)^0,f,c
  8641  01426E  503D               	movf	(btemp+11)^0,w,c
  8642  014270  223B               	addwfc	(btemp+9)^0,f,c
  8643  014272  503B               	movf	(btemp+9)^0,w,c
  8644  014274  E106               	bnz	u9790
  8645  014276  0E1A               	movlw	26
  8646  014278  5C3A               	subwf	(btemp+8)^0,w,c
  8647  01427A  B0D8               	btfsc	status,0,c
  8648  01427C  D002               	goto	u9790
  8649  01427E  0E01               	movlw	1
  8650  014280  D001               	goto	u9800
  8651  014282                     u9790:
  8652  014282  0E00               	movlw	0
  8653  014284                     u9800:
  8654  014284  6E3C               	movwf	(btemp+10)^0,c
  8655  014286  6A3D               	clrf	(btemp+11)^0,c
  8656                           
  8657                           ;stkvar	_xtoa$4424 @ sp[(-20)+0]
  8658  014288  0EEC               	movlw	-20
  8659  01428A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8660  014290  0EED               	movlw	-19
  8661  014292  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8662                           
  8663                           ;stkvar	_xtoa$4424 @ sp[(-20)+0]
  8664  014298  0EEC               	movlw	-20
  8665  01429A  006F FF8C  F032    	movff	plusw1,btemp
  8666  0142A0  0EED               	movlw	-19
  8667  0142A2  50E3               	movf	plusw1,w,c
  8668  0142A4  1032               	iorwf	btemp^0,w,c
  8669  0142A6  B4D8               	btfsc	status,2,c
  8670  0142A8  D011               	goto	l9762
  8671                           
  8672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8673                           ;stkvar	_c @ sp[(-20)+12]
  8674  0142AA  0EF8               	movlw	-8
  8675  0142AC  006F FF8F FFE6     	movff	plusw1,postinc1
  8676  0142B2  006F FF8F FFE6     	movff	plusw1,postinc1
  8677  0142B8  ECBB  F0BA         	call	_toupper	;wreg free
  8678                           
  8679                           ;stkvar	_c @ sp[(-20)+12]
  8680  0142BC  0EF8               	movlw	-8
  8681  0142BE  0060  F0CB  FFE3   	movff	btemp,plusw1
  8682  0142C4  0EF9               	movlw	-7
  8683  0142C6  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8684  0142CC                     l9762:
  8685                           
  8686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8687                           ;stkvar	_c @ sp[(-20)+12]
  8688                           ;stkvar	_i @ sp[(-20)+14]
  8689  0142CC  0EFA               	movlw	-6
  8690  0142CE  006F FF8C  F03C    	movff	plusw1,btemp+10
  8691  0142D4  0EFB               	movlw	-5
  8692  0142D6  006F FF8C  F03D    	movff	plusw1,btemp+11
  8693  0142DC  0E78               	movlw	low _dbuf
  8694  0142DE  243C               	addwf	(btemp+10)^0,w,c
  8695  0142E0  6ED9               	movwf	fsr2l,c
  8696  0142E2  0E01               	movlw	high _dbuf
  8697  0142E4  203D               	addwfc	(btemp+11)^0,w,c
  8698  0142E6  6EDA               	movwf	fsr2h,c
  8699  0142E8  0EF8               	movlw	-8
  8700  0142EA  006F FF8F FFDF     	movff	plusw1,indf2
  8701                           
  8702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8703                           ;stkvar	_p @ sp[(-20)+18]
  8704  0142F0  50E1               	movf	fsr1l,w,c
  8705  0142F2  0FFE               	addlw	-2
  8706  0142F4  6ED9               	movwf	fsr2l,c
  8707  0142F6  50E2               	movf	fsr1h,w,c
  8708  0142F8  6EDA               	movwf	fsr2h,c
  8709  0142FA  0EFF               	movlw	255
  8710  0142FC  22DA               	addwfc	fsr2h,f,c
  8711  0142FE  06DE               	decf	postinc2,f,c
  8712  014300  0E00               	movlw	0
  8713  014302  5ADD               	subwfb	postdec2,f,c
  8714                           
  8715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8716                           ;stkvar	_w @ sp[(-20)+16]
  8717  014304  50E1               	movf	fsr1l,w,c
  8718  014306  0FFC               	addlw	-4
  8719  014308  6ED9               	movwf	fsr2l,c
  8720  01430A  50E2               	movf	fsr1h,w,c
  8721  01430C  6EDA               	movwf	fsr2h,c
  8722  01430E  0EFF               	movlw	255
  8723  014310  22DA               	addwfc	fsr2h,f,c
  8724  014312  06DE               	decf	postinc2,f,c
  8725  014314  0E00               	movlw	0
  8726  014316  5ADD               	subwfb	postdec2,f,c
  8727                           
  8728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8729  014318  0E04               	movlw	4
  8730  01431A  6E3D               	movwf	(btemp+11)^0,c
  8731                           
  8732                           ;stkvar	_n @ sp[(-20)+4]
  8733  01431C  50E1               	movf	fsr1l,w,c
  8734  01431E  0FF0               	addlw	-16
  8735  014320  6ED9               	movwf	fsr2l,c
  8736  014322  50E2               	movf	fsr1h,w,c
  8737  014324  6EDA               	movwf	fsr2h,c
  8738  014326  0EFF               	movlw	255
  8739  014328  22DA               	addwfc	fsr2h,f,c
  8740  01432A  283D               	incf	(btemp+11)^0,w,c
  8741  01432C  52DE               	movf	postinc2,f,c
  8742  01432E  D00F               	goto	u9820
  8743  014330                     u9825:
  8744  014330  52DE               	movf	postinc2,f,c
  8745  014332  52DE               	movf	postinc2,f,c
  8746  014334  52DE               	movf	postinc2,f,c
  8747  014336  52DE               	movf	postinc2,f,c
  8748  014338  52DE               	movf	postinc2,f,c
  8749  01433A  52DE               	movf	postinc2,f,c
  8750  01433C  90D8               	bcf	status,0,c
  8751  01433E  32DD               	rrcf	postdec2,f,c
  8752  014340  32DD               	rrcf	postdec2,f,c
  8753  014342  32DD               	rrcf	postdec2,f,c
  8754  014344  32DD               	rrcf	postdec2,f,c
  8755  014346  32DD               	rrcf	postdec2,f,c
  8756  014348  32DD               	rrcf	postdec2,f,c
  8757  01434A  32DD               	rrcf	postdec2,f,c
  8758  01434C  32DE               	rrcf	postinc2,f,c
  8759  01434E                     u9820:
  8760  01434E  2EE8               	decfsz	wreg,f,c
  8761  014350  D7EF               	goto	u9825
  8762  014352                     l9770:
  8763                           
  8764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8765                           ;stkvar	_i @ sp[(-20)+14]
  8766  014352  0EFB               	movlw	-5
  8767  014354  BEE3               	btfsc	plusw1,7,c
  8768  014356  D03A               	goto	u9870
  8769  014358  0EFB               	movlw	-5
  8770  01435A  50E3               	movf	plusw1,w,c
  8771  01435C  E108               	bnz	u9830
  8772  01435E  0EFA               	movlw	-6
  8773  014360  006F FF8C  F032    	movff	plusw1,btemp
  8774  014366  0E02               	movlw	2
  8775  014368  5E32               	subwf	btemp^0,f,c
  8776  01436A  A0D8               	btfss	status,0,c
  8777  01436C  D02F               	goto	u9870
  8778  01436E                     u9830:
  8779                           
  8780                           ;stkvar	_n @ sp[(-20)+4]
  8781  01436E  0EF0               	movlw	-16
  8782  014370  50E3               	movf	plusw1,w,c
  8783  014372  E115               	bnz	u9841
  8784  014374  0EF1               	movlw	-15
  8785  014376  50E3               	movf	plusw1,w,c
  8786  014378  E112               	bnz	u9841
  8787  01437A  0EF2               	movlw	-14
  8788  01437C  50E3               	movf	plusw1,w,c
  8789  01437E  E10F               	bnz	u9841
  8790  014380  0EF3               	movlw	-13
  8791  014382  50E3               	movf	plusw1,w,c
  8792  014384  E10C               	bnz	u9841
  8793  014386  0EF4               	movlw	-12
  8794  014388  50E3               	movf	plusw1,w,c
  8795  01438A  E109               	bnz	u9841
  8796  01438C  0EF5               	movlw	-11
  8797  01438E  50E3               	movf	plusw1,w,c
  8798  014390  E106               	bnz	u9841
  8799  014392  0EF6               	movlw	-10
  8800  014394  50E3               	movf	plusw1,w,c
  8801  014396  E103               	bnz	u9841
  8802  014398  0EF7               	movlw	-9
  8803  01439A  50E3               	movf	plusw1,w,c
  8804  01439C  A4D8               	btfss	status,2,c
  8805  01439E                     u9841:
  8806  01439E  D6EB               	goto	l9738
  8807                           
  8808                           ;stkvar	_p @ sp[(-20)+18]
  8809  0143A0  0EFF               	movlw	-1
  8810  0143A2  BEE3               	btfsc	plusw1,7,c
  8811  0143A4  D007               	goto	u9850
  8812  0143A6  0EFF               	movlw	-1
  8813  0143A8  50E3               	movf	plusw1,w,c
  8814  0143AA  E103               	bnz	u9851
  8815  0143AC  0EFE               	movlw	-2
  8816  0143AE  04E3               	decf	plusw1,w,c
  8817  0143B0  B0D8               	btfsc	status,0,c
  8818  0143B2                     u9851:
  8819  0143B2  D6E1               	goto	l9738
  8820  0143B4                     u9850:
  8821                           
  8822                           ;stkvar	_w @ sp[(-20)+16]
  8823  0143B4  0EFD               	movlw	-3
  8824  0143B6  BEE3               	btfsc	plusw1,7,c
  8825  0143B8  D009               	goto	u9870
  8826  0143BA  0EFD               	movlw	-3
  8827  0143BC  50E3               	movf	plusw1,w,c
  8828  0143BE  E104               	bnz	u9860
  8829  0143C0  0EFC               	movlw	-4
  8830  0143C2  04E3               	decf	plusw1,w,c
  8831  0143C4  A0D8               	btfss	status,0,c
  8832  0143C6  D002               	goto	u9870
  8833  0143C8                     u9860:
  8834  0143C8  B21F               	btfsc	_flags^0,1,c
  8835  0143CA  D6D5               	goto	l9738
  8836  0143CC                     u9870:
  8837                           
  8838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8839  0143CC  A81F               	btfss	_flags^0,4,c
  8840  0143CE  D036               	goto	l9786
  8841                           
  8842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8843                           ;stkvar	_i @ sp[(-20)+14]
  8844  0143D0  50E1               	movf	fsr1l,w,c
  8845  0143D2  0FFA               	addlw	-6
  8846  0143D4  6ED9               	movwf	fsr2l,c
  8847  0143D6  50E2               	movf	fsr1h,w,c
  8848  0143D8  6EDA               	movwf	fsr2h,c
  8849  0143DA  0EFF               	movlw	255
  8850  0143DC  22DA               	addwfc	fsr2h,f,c
  8851  0143DE  06DE               	decf	postinc2,f,c
  8852  0143E0  0E00               	movlw	0
  8853  0143E2  5ADD               	subwfb	postdec2,f,c
  8854                           
  8855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8856                           ;stkvar	_x @ sp[(-20)+-11]
  8857                           ;stkvar	_i @ sp[(-20)+14]
  8858  0143E4  0EFA               	movlw	-6
  8859  0143E6  006F FF8C  F03C    	movff	plusw1,btemp+10
  8860  0143EC  0EFB               	movlw	-5
  8861  0143EE  006F FF8C  F03D    	movff	plusw1,btemp+11
  8862  0143F4  0E78               	movlw	low _dbuf
  8863  0143F6  243C               	addwf	(btemp+10)^0,w,c
  8864  0143F8  6ED9               	movwf	fsr2l,c
  8865  0143FA  0E01               	movlw	high _dbuf
  8866  0143FC  203D               	addwfc	(btemp+11)^0,w,c
  8867  0143FE  6EDA               	movwf	fsr2h,c
  8868  014400  0EE1               	movlw	-31
  8869  014402  006F FF8F FFDF     	movff	plusw1,indf2
  8870                           
  8871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8872                           ;stkvar	_i @ sp[(-20)+14]
  8873  014408  50E1               	movf	fsr1l,w,c
  8874  01440A  0FFA               	addlw	-6
  8875  01440C  6ED9               	movwf	fsr2l,c
  8876  01440E  50E2               	movf	fsr1h,w,c
  8877  014410  6EDA               	movwf	fsr2h,c
  8878  014412  0EFF               	movlw	255
  8879  014414  22DA               	addwfc	fsr2h,f,c
  8880  014416  06DE               	decf	postinc2,f,c
  8881  014418  0E00               	movlw	0
  8882  01441A  5ADD               	subwfb	postdec2,f,c
  8883                           
  8884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8885                           ;stkvar	_i @ sp[(-20)+14]
  8886  01441C  0EFA               	movlw	-6
  8887  01441E  006F FF8C  F03C    	movff	plusw1,btemp+10
  8888  014424  0EFB               	movlw	-5
  8889  014426  006F FF8C  F03D    	movff	plusw1,btemp+11
  8890  01442C  0E78               	movlw	low _dbuf
  8891  01442E  243C               	addwf	(btemp+10)^0,w,c
  8892  014430  6ED9               	movwf	fsr2l,c
  8893  014432  0E01               	movlw	high _dbuf
  8894  014434  203D               	addwfc	(btemp+11)^0,w,c
  8895  014436  6EDA               	movwf	fsr2h,c
  8896  014438  0E30               	movlw	48
  8897  01443A  6EDF               	movwf	indf2,c
  8898  01443C                     l9786:
  8899                           
  8900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8901                           ;stkvar	_w @ sp[(-20)+16]
  8902  01443C  0EFC               	movlw	-4
  8903  01443E  006F FF8F FFE6     	movff	plusw1,postinc1
  8904  014444  006F FF8F FFE6     	movff	plusw1,postinc1
  8905                           
  8906                           ;stkvar	_i @ sp[(-22)+14]
  8907  01444A  0E78               	movlw	low _dbuf
  8908  01444C  6E3C               	movwf	(btemp+10)^0,c
  8909  01444E  0E01               	movlw	high _dbuf
  8910  014450  6E3D               	movwf	(btemp+11)^0,c
  8911  014452  0EF8               	movlw	-8
  8912  014454  50E3               	movf	plusw1,w,c
  8913  014456  263C               	addwf	(btemp+10)^0,f,c
  8914  014458  0EF9               	movlw	-7
  8915  01445A  50E3               	movf	plusw1,w,c
  8916  01445C  223D               	addwfc	(btemp+11)^0,f,c
  8917  01445E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8918  014464  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8919                           
  8920                           ;stkvar	_fp @ sp[(-24)+-2]
  8921  01446A  0EE6               	movlw	-26
  8922  01446C  006F FF8F FFE6     	movff	plusw1,postinc1
  8923  014472  006F FF8F FFE6     	movff	plusw1,postinc1
  8924  014478  EC9D  F0B4         	call	_pad	;wreg free
  8925                           
  8926                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8927  01447C  0EE1               	movlw	225
  8928  01447E  26E1               	addwf	fsr1l,f,c
  8929  014480  0EFF               	movlw	255
  8930  014482  22E2               	addwfc	fsr1h,f,c
  8931  014484  0012               	return		;funcret
  8932  014486                     __end_of_xtoa:
  8933                           	opt callstack 0
  8934                           
  8935 ;; *************** function _toupper *****************
  8936 ;; Defined at:
  8937 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;  c               2  [STACK] int 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  2  [STACK] int 
  8944 ;; Registers used:
  8945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/1
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8955 ;;Total ram usage:        0 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    7
  8958 ;; This function calls:
  8959 ;;		_islower
  8960 ;; This function is called by:
  8961 ;;		_xtoa
  8962 ;; This function uses a reentrant model
  8963 ;;
  8964                           
  8965                           	psect	text38
  8966  017576                     __ptext38:
  8967                           	opt callstack 0
  8968  017576                     _toupper:
  8969                           	opt callstack 0
  8970                           
  8971                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8972  017576  52E6               	movf	postinc1,f,c
  8973  017578  52E6               	movf	postinc1,f,c
  8974                           
  8975                           ;stkvar	_c @ sp[(-2)+-2]
  8976                           
  8977                           ;incstack = 0
  8978  01757A  0EFC               	movlw	-4
  8979  01757C  50E3               	movf	plusw1,w,c
  8980  01757E  0F9F               	addlw	159
  8981  017580  6E3C               	movwf	(btemp+10)^0,c
  8982  017582  0EFD               	movlw	-3
  8983  017584  006F FF8C  F03D    	movff	plusw1,btemp+11
  8984  01758A  0EFF               	movlw	255
  8985  01758C  223D               	addwfc	(btemp+11)^0,f,c
  8986  01758E  503D               	movf	(btemp+11)^0,w,c
  8987  017590  E106               	bnz	u5250
  8988  017592  0E1A               	movlw	26
  8989  017594  5C3C               	subwf	(btemp+10)^0,w,c
  8990  017596  B0D8               	btfsc	status,0,c
  8991  017598  D002               	goto	u5250
  8992  01759A  0E01               	movlw	1
  8993  01759C  D001               	goto	u5260
  8994  01759E                     u5250:
  8995  01759E  0E00               	movlw	0
  8996  0175A0                     u5260:
  8997  0175A0  6E3C               	movwf	(btemp+10)^0,c
  8998  0175A2  6A3D               	clrf	(btemp+11)^0,c
  8999                           
  9000                           ;stkvar	_toupper$5084 @ sp[(-2)+0]
  9001  0175A4  0EFE               	movlw	-2
  9002  0175A6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9003  0175AC  0EFF               	movlw	-1
  9004  0175AE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9005                           
  9006                           ;stkvar	_toupper$5084 @ sp[(-2)+0]
  9007  0175B4  0EFE               	movlw	-2
  9008  0175B6  006F FF8C  F032    	movff	plusw1,btemp
  9009  0175BC  0EFF               	movlw	-1
  9010  0175BE  50E3               	movf	plusw1,w,c
  9011  0175C0  1032               	iorwf	btemp^0,w,c
  9012  0175C2  B4D8               	btfsc	status,2,c
  9013  0175C4  D00D               	goto	l6488
  9014                           
  9015                           ;stkvar	_c @ sp[(-2)+-2]
  9016  0175C6  0EFC               	movlw	-4
  9017  0175C8  006F FF8C  F032    	movff	plusw1,btemp
  9018  0175CE  0EFD               	movlw	-3
  9019  0175D0  006F FF8C  F033    	movff	plusw1,btemp+1
  9020  0175D6  0E5F               	movlw	95
  9021  0175D8  1632               	andwf	btemp^0,f,c
  9022  0175DA  0E00               	movlw	0
  9023  0175DC  1633               	andwf	(btemp+1)^0,f,c
  9024  0175DE  D008               	goto	l2905
  9025  0175E0                     l6488:
  9026                           
  9027                           ;stkvar	_c @ sp[(-2)+-2]
  9028  0175E0  0EFC               	movlw	-4
  9029  0175E2  006F FF8C  F032    	movff	plusw1,btemp
  9030  0175E8  0EFD               	movlw	-3
  9031  0175EA  006F FF8C  F033    	movff	plusw1,btemp+1
  9032  0175F0                     l2905:
  9033                           
  9034                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9035  0175F0  52E5               	movf	postdec1,f,c
  9036  0175F2  52E5               	movf	postdec1,f,c
  9037  0175F4  52E5               	movf	postdec1,f,c
  9038  0175F6  52E5               	movf	postdec1,f,c
  9039  0175F8  0012               	return		;funcret
  9040  0175FA                     __end_of_toupper:
  9041                           	opt callstack 0
  9042                           
  9043 ;; *************** function _islower *****************
  9044 ;; Defined at:
  9045 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  c               2  [STACK] int 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;		None
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2  [STACK] int 
  9052 ;; Registers used:
  9053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9063 ;;Total ram usage:        0 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:    6
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		_toupper
  9070 ;; This function uses a reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text39
  9074  0180AA                     __ptext39:
  9075                           	opt callstack 0
  9076  0180AA                     _islower:
  9077                           	opt callstack 16
  9078                           
  9079                           ;stkvar	_c @ sp[(0)+-2]
  9080                           
  9081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9082                           ;incstack = 0
  9083  0180AA  0EFE               	movlw	-2
  9084  0180AC  50E3               	movf	plusw1,w,c
  9085  0180AE  0F9F               	addlw	159
  9086  0180B0  6E3C               	movwf	(btemp+10)^0,c
  9087  0180B2  0EFF               	movlw	-1
  9088  0180B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  9089  0180BA  0EFF               	movlw	255
  9090  0180BC  223D               	addwfc	(btemp+11)^0,f,c
  9091  0180BE  503D               	movf	(btemp+11)^0,w,c
  9092  0180C0  E106               	bnz	u4940
  9093  0180C2  0E1A               	movlw	26
  9094  0180C4  5C3C               	subwf	(btemp+10)^0,w,c
  9095  0180C6  B0D8               	btfsc	status,0,c
  9096  0180C8  D002               	goto	u4940
  9097  0180CA  0E01               	movlw	1
  9098  0180CC  D001               	goto	u4950
  9099  0180CE                     u4940:
  9100  0180CE  0E00               	movlw	0
  9101  0180D0                     u4950:
  9102  0180D0  6E32               	movwf	btemp^0,c
  9103  0180D2  6A33               	clrf	(btemp+1)^0,c
  9104                           
  9105                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9106  0180D4  52E5               	movf	postdec1,f,c
  9107  0180D6  52E5               	movf	postdec1,f,c
  9108  0180D8  0012               	return		;funcret
  9109  0180DA                     __end_of_islower:
  9110                           	opt callstack 0
  9111                           
  9112 ;; *************** function _isalpha *****************
  9113 ;; Defined at:
  9114 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  c               2  [STACK] int 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;		None
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  2  [STACK] int 
  9121 ;; Registers used:
  9122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;Total ram usage:        0 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:    6
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_xtoa
  9139 ;; This function uses a reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text40
  9143  017E5E                     __ptext40:
  9144                           	opt callstack 0
  9145  017E5E                     _isalpha:
  9146                           	opt callstack 17
  9147                           
  9148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9149                           ;incstack = 0
  9150  017E5E  0E9F               	movlw	159
  9151  017E60  6E3C               	movwf	(btemp+10)^0,c
  9152  017E62  0EFF               	movlw	255
  9153  017E64  6E3D               	movwf	(btemp+11)^0,c
  9154                           
  9155                           ;stkvar	_c @ sp[(0)+-2]
  9156  017E66  0EFE               	movlw	-2
  9157  017E68  006F FF8C  F03A    	movff	plusw1,btemp+8
  9158  017E6E  0EFF               	movlw	-1
  9159  017E70  006F FF8C  F03B    	movff	plusw1,btemp+9
  9160  017E76  0E20               	movlw	32
  9161  017E78  123A               	iorwf	(btemp+8)^0,f,c
  9162  017E7A  0E00               	movlw	0
  9163  017E7C  123B               	iorwf	(btemp+9)^0,f,c
  9164  017E7E  503C               	movf	(btemp+10)^0,w,c
  9165  017E80  263A               	addwf	(btemp+8)^0,f,c
  9166  017E82  503D               	movf	(btemp+11)^0,w,c
  9167  017E84  223B               	addwfc	(btemp+9)^0,f,c
  9168  017E86  503B               	movf	(btemp+9)^0,w,c
  9169  017E88  E106               	bnz	u5230
  9170  017E8A  0E1A               	movlw	26
  9171  017E8C  5C3A               	subwf	(btemp+8)^0,w,c
  9172  017E8E  B0D8               	btfsc	status,0,c
  9173  017E90  D002               	goto	u5230
  9174  017E92  0E01               	movlw	1
  9175  017E94  D001               	goto	u5240
  9176  017E96                     u5230:
  9177  017E96  0E00               	movlw	0
  9178  017E98                     u5240:
  9179  017E98  6E32               	movwf	btemp^0,c
  9180  017E9A  6A33               	clrf	(btemp+1)^0,c
  9181                           
  9182                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9183  017E9C  52E5               	movf	postdec1,f,c
  9184  017E9E  52E5               	movf	postdec1,f,c
  9185  017EA0  0012               	return		;funcret
  9186  017EA2                     __end_of_isalpha:
  9187                           	opt callstack 0
  9188                           
  9189 ;; *************** function _strncmp *****************
  9190 ;; Defined at:
  9191 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  _l              2  [STACK] PTR const unsigned char 
  9194 ;;		 -> ct(3), 
  9195 ;;  _r              2  [STACK] PTR const unsigned char 
  9196 ;;		 -> STR_47(3), 
  9197 ;;  n               2  [STACK] unsigned int 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  r               2  [STACK] PTR const unsigned char 
  9200 ;;		 -> STR_47(3), 
  9201 ;;  l               2  [STACK] PTR const unsigned char 
  9202 ;;		 -> ct(3), 
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  2  [STACK] int 
  9205 ;; Registers used:
  9206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/5
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9216 ;;Total ram usage:        0 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; Hardware stack levels required when called:    6
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_vfpfcnvrt
  9223 ;; This function uses a reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text41
  9227  015B48                     __ptext41:
  9228                           	opt callstack 0
  9229  015B48                     _strncmp:
  9230                           	opt callstack 0
  9231                           
  9232                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9233  015B48  52E6               	movf	postinc1,f,c
  9234  015B4A  52E6               	movf	postinc1,f,c
  9235  015B4C  52E6               	movf	postinc1,f,c
  9236  015B4E  52E6               	movf	postinc1,f,c
  9237                           
  9238                           ;stkvar	__l @ sp[(-4)+-2]
  9239                           
  9240                           ;incstack = 0
  9241  015B50  0EFA               	movlw	-6
  9242  015B52  006F FF8C  F03C    	movff	plusw1,btemp+10
  9243  015B58  0EFB               	movlw	-5
  9244  015B5A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9245                           
  9246                           ;stkvar	_l @ sp[(-4)+2]
  9247  015B60  0EFF               	movlw	-1
  9248  015B62  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9249  015B68  0EFE               	movlw	-2
  9250  015B6A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9251                           
  9252                           ;stkvar	__r @ sp[(-4)+-4]
  9253  015B70  0EF8               	movlw	-8
  9254  015B72  006F FF8C  F03C    	movff	plusw1,btemp+10
  9255  015B78  0EF9               	movlw	-7
  9256  015B7A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9257                           
  9258                           ;stkvar	_r @ sp[(-4)+0]
  9259  015B80  0EFD               	movlw	-3
  9260  015B82  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9261  015B88  0EFC               	movlw	-4
  9262  015B8A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9263                           
  9264                           ;stkvar	_n @ sp[(-4)+-6]
  9265  015B90  0EF6               	movlw	-10
  9266  015B92  006F FF8C  F032    	movff	plusw1,btemp
  9267  015B98  0E01               	movlw	1
  9268  015B9A  5E32               	subwf	btemp^0,f,c
  9269  015B9C  0EF6               	movlw	-10
  9270  015B9E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9271  015BA4  0EF7               	movlw	-9
  9272  015BA6  006F FF8C  F032    	movff	plusw1,btemp
  9273  015BAC  0E00               	movlw	0
  9274  015BAE  5A32               	subwfb	btemp^0,f,c
  9275  015BB0  0EF7               	movlw	-9
  9276  015BB2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9277  015BB8  0EF6               	movlw	-10
  9278  015BBA  28E3               	incf	plusw1,w,c
  9279  015BBC  E13F               	bnz	l7646
  9280  015BBE  0EF7               	movlw	-9
  9281  015BC0  28E3               	incf	plusw1,w,c
  9282  015BC2  A4D8               	btfss	status,2,c
  9283  015BC4  D03B               	goto	l7646
  9284  015BC6  0E00               	movlw	0
  9285  015BC8  6E32               	movwf	btemp^0,c
  9286  015BCA  0E00               	movlw	0
  9287  015BCC  6E33               	movwf	(btemp+1)^0,c
  9288  015BCE  D09B               	goto	l2877
  9289  015BD0                     l7644:
  9290                           
  9291                           ;stkvar	_l @ sp[(-4)+2]
  9292  015BD0  0EFE               	movlw	-2
  9293  015BD2  50E3               	movf	plusw1,w,c
  9294  015BD4  0F01               	addlw	1
  9295  015BD6  6E32               	movwf	btemp^0,c
  9296  015BD8  0EFE               	movlw	-2
  9297  015BDA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9298  015BE0  6A32               	clrf	btemp^0,c
  9299  015BE2  0EFF               	movlw	-1
  9300  015BE4  50E3               	movf	plusw1,w,c
  9301  015BE6  2032               	addwfc	btemp^0,w,c
  9302  015BE8  6E32               	movwf	btemp^0,c
  9303  015BEA  0EFF               	movlw	-1
  9304  015BEC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9305                           
  9306                           ;stkvar	_r @ sp[(-4)+0]
  9307  015BF2  0EFC               	movlw	-4
  9308  015BF4  50E3               	movf	plusw1,w,c
  9309  015BF6  0F01               	addlw	1
  9310  015BF8  6E32               	movwf	btemp^0,c
  9311  015BFA  0EFC               	movlw	-4
  9312  015BFC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9313  015C02  6A32               	clrf	btemp^0,c
  9314  015C04  0EFD               	movlw	-3
  9315  015C06  50E3               	movf	plusw1,w,c
  9316  015C08  2032               	addwfc	btemp^0,w,c
  9317  015C0A  6E32               	movwf	btemp^0,c
  9318  015C0C  0EFD               	movlw	-3
  9319  015C0E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9320                           
  9321                           ;stkvar	_n @ sp[(-4)+-6]
  9322  015C14  0EF6               	movlw	-10
  9323  015C16  006F FF8C  F032    	movff	plusw1,btemp
  9324  015C1C  0E01               	movlw	1
  9325  015C1E  5E32               	subwf	btemp^0,f,c
  9326  015C20  0EF6               	movlw	-10
  9327  015C22  0060  F0CB  FFE3   	movff	btemp,plusw1
  9328  015C28  0EF7               	movlw	-9
  9329  015C2A  006F FF8C  F032    	movff	plusw1,btemp
  9330  015C30  0E00               	movlw	0
  9331  015C32  5A32               	subwfb	btemp^0,f,c
  9332  015C34  0EF7               	movlw	-9
  9333  015C36  0060  F0CB  FFE3   	movff	btemp,plusw1
  9334  015C3C                     l7646:
  9335                           
  9336                           ;stkvar	_l @ sp[(-4)+2]
  9337  015C3C  0EFE               	movlw	-2
  9338  015C3E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9339  015C44  0EFF               	movlw	-1
  9340  015C46  006F FF8F FFDA     	movff	plusw1,fsr2h
  9341  015C4C  50DF               	movf	indf2,w,c
  9342  015C4E  B4D8               	btfsc	status,2,c
  9343  015C50  D03B               	goto	u7430
  9344                           
  9345                           ;stkvar	_r @ sp[(-4)+0]
  9346  015C52  50E1               	movf	fsr1l,w,c
  9347  015C54  0FFC               	addlw	-4
  9348  015C56  6ED9               	movwf	fsr2l,c
  9349  015C58  50E2               	movf	fsr1h,w,c
  9350  015C5A  6EDA               	movwf	fsr2h,c
  9351  015C5C  0EFF               	movlw	255
  9352  015C5E  22DA               	addwfc	fsr2h,f,c
  9353  015C60  006F FF7B FFF6     	movff	postinc2,tblptrl
  9354  015C66  006F FF77 FFF7     	movff	postdec2,tblptrh
  9355  015C6C                     	if	0	;tblptru may be non-zero
  9356  015C6C                     	endif
  9357  015C6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9358  015C6C  0E00               	movlw	low (__mediumconst shr (0+16))
  9359  015C6E  6EF8               	movwf	tblptru,c
  9360  015C70                     	endif
  9361  015C70  0008               	tblrd		*
  9362  015C72  50F5               	movf	tablat,w,c
  9363  015C74  0900               	iorlw	0
  9364  015C76  B4D8               	btfsc	status,2,c
  9365  015C78  D027               	goto	u7430
  9366                           
  9367                           ;stkvar	_n @ sp[(-4)+-6]
  9368  015C7A  0EF6               	movlw	-10
  9369  015C7C  006F FF8C  F032    	movff	plusw1,btemp
  9370  015C82  0EF7               	movlw	-9
  9371  015C84  50E3               	movf	plusw1,w,c
  9372  015C86  1032               	iorwf	btemp^0,w,c
  9373  015C88  B4D8               	btfsc	status,2,c
  9374  015C8A  D01E               	goto	u7430
  9375                           
  9376                           ;stkvar	_l @ sp[(-4)+2]
  9377  015C8C  0EFE               	movlw	-2
  9378  015C8E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9379  015C94  0EFF               	movlw	-1
  9380  015C96  006F FF8F FFDA     	movff	plusw1,fsr2h
  9381  015C9C  50DF               	movf	indf2,w,c
  9382  015C9E  6E3D               	movwf	(btemp+11)^0,c
  9383                           
  9384                           ;stkvar	_r @ sp[(-4)+0]
  9385  015CA0  50E1               	movf	fsr1l,w,c
  9386  015CA2  0FFC               	addlw	-4
  9387  015CA4  6ED9               	movwf	fsr2l,c
  9388  015CA6  50E2               	movf	fsr1h,w,c
  9389  015CA8  6EDA               	movwf	fsr2h,c
  9390  015CAA  0EFF               	movlw	255
  9391  015CAC  22DA               	addwfc	fsr2h,f,c
  9392  015CAE  006F FF7B FFF6     	movff	postinc2,tblptrl
  9393  015CB4  006F FF77 FFF7     	movff	postdec2,tblptrh
  9394  015CBA                     	if	0	;tblptru may be non-zero
  9395  015CBA                     	endif
  9396  015CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9397  015CBA  0E00               	movlw	low (__mediumconst shr (0+16))
  9398  015CBC  6EF8               	movwf	tblptru,c
  9399  015CBE                     	endif
  9400  015CBE  0008               	tblrd		*
  9401  015CC0  50F5               	movf	tablat,w,c
  9402  015CC2  183D               	xorwf	(btemp+11)^0,w,c
  9403  015CC4  B4D8               	btfsc	status,2,c
  9404  015CC6  D784               	goto	l7644
  9405  015CC8                     u7430:
  9406                           
  9407                           ;stkvar	_l @ sp[(-4)+2]
  9408  015CC8  0EFE               	movlw	-2
  9409  015CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9410  015CD0  0EFF               	movlw	-1
  9411  015CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9412  015CD8  50DF               	movf	indf2,w,c
  9413  015CDA  6E32               	movwf	btemp^0,c
  9414  015CDC  6A33               	clrf	(btemp+1)^0,c
  9415                           
  9416                           ;stkvar	_r @ sp[(-4)+0]
  9417  015CDE  50E1               	movf	fsr1l,w,c
  9418  015CE0  0FFC               	addlw	-4
  9419  015CE2  6ED9               	movwf	fsr2l,c
  9420  015CE4  50E2               	movf	fsr1h,w,c
  9421  015CE6  6EDA               	movwf	fsr2h,c
  9422  015CE8  0EFF               	movlw	255
  9423  015CEA  22DA               	addwfc	fsr2h,f,c
  9424  015CEC  006F FF7B FFF6     	movff	postinc2,tblptrl
  9425  015CF2  006F FF77 FFF7     	movff	postdec2,tblptrh
  9426  015CF8                     	if	0	;tblptru may be non-zero
  9427  015CF8                     	endif
  9428  015CF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9429  015CF8  0E00               	movlw	low (__mediumconst shr (0+16))
  9430  015CFA  6EF8               	movwf	tblptru,c
  9431  015CFC                     	endif
  9432  015CFC  0008               	tblrd		*
  9433  015CFE  50F5               	movf	tablat,w,c
  9434  015D00  5E32               	subwf	btemp^0,f,c
  9435  015D02  0E00               	movlw	0
  9436  015D04  5A33               	subwfb	(btemp+1)^0,f,c
  9437  015D06                     l2877:
  9438                           
  9439                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9440  015D06  0EF6               	movlw	246
  9441  015D08  26E1               	addwf	fsr1l,f,c
  9442  015D0A  0EFF               	movlw	255
  9443  015D0C  22E2               	addwfc	fsr1h,f,c
  9444  015D0E  0012               	return		;funcret
  9445  015D10                     __end_of_strncmp:
  9446                           	opt callstack 0
  9447                           
  9448 ;; *************** function _stoa *****************
  9449 ;; Defined at:
  9450 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9453 ;;		 -> f(6), NULL(0), 
  9454 ;;  s               2  [STACK] PTR unsigned char 
  9455 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  9456 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9457 ;;		 -> STR_3(5), V(187), 
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;  nuls            7  [STACK] unsigned char [7]
  9460 ;;  l               2  [STACK] int 
  9461 ;;  p               2  [STACK] int 
  9462 ;;  cp              2  [STACK] PTR unsigned char 
  9463 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_19(9), 
  9464 ;;		 -> STR_18(12), D.lcd(216), D(218), T(144), 
  9465 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9466 ;;  w               2  [STACK] int 
  9467 ;;  i               2  [STACK] int 
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  2  [STACK] int 
  9470 ;; Registers used:
  9471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/5
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9481 ;;Total ram usage:        0 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    9
  9484 ;; This function calls:
  9485 ;;		_fputc
  9486 ;;		_strlen
  9487 ;; This function is called by:
  9488 ;;		_vfpfcnvrt
  9489 ;; This function uses a reentrant model
  9490 ;;
  9491                           
  9492                           	psect	text42
  9493  014ADE                     __ptext42:
  9494                           	opt callstack 0
  9495  014ADE                     _stoa:
  9496                           	opt callstack 0
  9497                           
  9498                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9499  014ADE  0E11               	movlw	17
  9500  014AE0  26E1               	addwf	fsr1l,f,c
  9501  014AE2  0E00               	movlw	0
  9502  014AE4  22E2               	addwfc	fsr1h,f,c
  9503                           
  9504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9505                           
  9506                           ;incstack = 0
  9507  014AE6  EE20  F0EF         	lfsr	2,stoa@F1166
  9508                           
  9509                           ;stkvar	_nuls @ sp[(-17)+0]
  9510  014AEA  0E07               	movlw	7
  9511  014AEC  6E32               	movwf	btemp^0,c
  9512  014AEE  0EEF               	movlw	-17
  9513  014AF0                     us961999:
  9514  014AF0  006F FF7B FFE3     	movff	postinc2,plusw1
  9515  014AF6  28E8               	incf	wreg,w,c
  9516  014AF8  2E32               	decfsz	btemp^0,f,c
  9517  014AFA  D7FA               	bra	us961999
  9518                           
  9519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9520                           ;stkvar	_s @ sp[(-17)+-4]
  9521  014AFC  0EEB               	movlw	-21
  9522  014AFE  006F FF8C  F03C    	movff	plusw1,btemp+10
  9523  014B04  0EEC               	movlw	-20
  9524  014B06  006F FF8C  F03D    	movff	plusw1,btemp+11
  9525                           
  9526                           ;stkvar	_cp @ sp[(-17)+11]
  9527  014B0C  0EFB               	movlw	-5
  9528  014B0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9529  014B14  0EFA               	movlw	-6
  9530  014B16  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9531                           
  9532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9533                           ;stkvar	_cp @ sp[(-17)+11]
  9534  014B1C  0EFA               	movlw	-6
  9535  014B1E  006F FF8C  F032    	movff	plusw1,btemp
  9536  014B24  0EFB               	movlw	-5
  9537  014B26  50E3               	movf	plusw1,w,c
  9538  014B28  1032               	iorwf	btemp^0,w,c
  9539  014B2A  A4D8               	btfss	status,2,c
  9540  014B2C  D00E               	goto	l9674
  9541                           
  9542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9543                           ;stkvar	_nuls @ sp[(-17)+0]
  9544  014B2E  0EEF               	movlw	239
  9545  014B30  24E1               	addwf	fsr1l,w,c
  9546  014B32  6E3C               	movwf	(btemp+10)^0,c
  9547  014B34  0EFF               	movlw	255
  9548  014B36  20E2               	addwfc	fsr1h,w,c
  9549  014B38  6E3D               	movwf	(btemp+11)^0,c
  9550                           
  9551                           ;stkvar	_cp @ sp[(-17)+11]
  9552  014B3A  0EFB               	movlw	-5
  9553  014B3C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9554  014B42  0EFA               	movlw	-6
  9555  014B44  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9556  014B4A                     l9674:
  9557                           
  9558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9559                           ;stkvar	_cp @ sp[(-17)+11]
  9560  014B4A  0EFA               	movlw	-6
  9561  014B4C  006F FF8F FFE6     	movff	plusw1,postinc1
  9562  014B52  006F FF8F FFE6     	movff	plusw1,postinc1
  9563  014B58  EC48  F0B9         	call	_strlen	;wreg free
  9564                           
  9565                           ;stkvar	_l @ sp[(-17)+7]
  9566  014B5C  0EF6               	movlw	-10
  9567  014B5E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9568  014B64  0EF7               	movlw	-9
  9569  014B66  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9570                           
  9571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9572                           ;stkvar	_p @ sp[(-17)+9]
  9573  014B6C  0EF8               	movlw	-8
  9574  014B6E  0060  F077  FFE3   	movff	_prec,plusw1
  9575  014B74  0EF9               	movlw	-7
  9576  014B76  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9577                           
  9578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9579                           ;stkvar	_p @ sp[(-17)+9]
  9580  014B7C  0EF9               	movlw	-7
  9581  014B7E  BEE3               	btfsc	plusw1,7,c
  9582  014B80  D023               	goto	l1951
  9583                           
  9584                           ;stkvar	_l @ sp[(-17)+7]
  9585                           ;stkvar	_p @ sp[(-17)+9]
  9586  014B82  50E1               	movf	fsr1l,w,c
  9587  014B84  0FF8               	addlw	-8
  9588  014B86  6ED9               	movwf	fsr2l,c
  9589  014B88  50E2               	movf	fsr1h,w,c
  9590  014B8A  6EDA               	movwf	fsr2h,c
  9591  014B8C  0EFF               	movlw	255
  9592  014B8E  22DA               	addwfc	fsr2h,f,c
  9593  014B90  0EF6               	movlw	-10
  9594  014B92  50E3               	movf	plusw1,w,c
  9595  014B94  5CDE               	subwf	postinc2,w,c
  9596  014B96  50DE               	movf	postinc2,w,c
  9597  014B98  0A80               	xorlw	128
  9598  014B9A  6E32               	movwf	btemp^0,c
  9599  014B9C  0EF7               	movlw	-9
  9600  014B9E  50E3               	movf	plusw1,w,c
  9601  014BA0  0A80               	xorlw	128
  9602  014BA2  5832               	subwfb	btemp^0,w,c
  9603  014BA4  B0D8               	btfsc	status,0,c
  9604  014BA6  D010               	goto	l1951
  9605                           
  9606                           ;stkvar	_p @ sp[(-17)+9]
  9607                           ;stkvar	_l @ sp[(-17)+7]
  9608  014BA8  0EF8               	movlw	-8
  9609  014BAA  006F FF8C  F032    	movff	plusw1,btemp
  9610  014BB0  0EF6               	movlw	-10
  9611  014BB2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9612  014BB8  0EF9               	movlw	-7
  9613  014BBA  006F FF8C  F032    	movff	plusw1,btemp
  9614  014BC0  0EF7               	movlw	-9
  9615  014BC2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9616  014BC8                     l1951:
  9617                           
  9618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9619                           ;stkvar	_l @ sp[(-17)+7]
  9620                           ;stkvar	_p @ sp[(-17)+9]
  9621  014BC8  0EF6               	movlw	-10
  9622  014BCA  006F FF8C  F032    	movff	plusw1,btemp
  9623  014BD0  0EF8               	movlw	-8
  9624  014BD2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9625  014BD8  0EF7               	movlw	-9
  9626  014BDA  006F FF8C  F032    	movff	plusw1,btemp
  9627  014BE0  0EF9               	movlw	-7
  9628  014BE2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9629                           
  9630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9631                           ;stkvar	_w @ sp[(-17)+13]
  9632  014BE8  0EFC               	movlw	-4
  9633  014BEA  0060  F06F  FFE3   	movff	_width,plusw1
  9634  014BF0  0EFD               	movlw	-3
  9635  014BF2  0060  F073  FFE3   	movff	_width+1,plusw1
  9636                           
  9637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9638  014BF8  A01F               	btfss	_flags^0,0,c
  9639  014BFA  D01F               	goto	l9694
  9640  014BFC  D031               	goto	u9660
  9641  014BFE                     l9690:
  9642                           
  9643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9644                           ;stkvar	_fp @ sp[(-17)+-2]
  9645  014BFE  0EED               	movlw	-19
  9646  014C00  006F FF8F FFE6     	movff	plusw1,postinc1
  9647  014C06  006F FF8F FFE6     	movff	plusw1,postinc1
  9648  014C0C  0E20               	movlw	32
  9649  014C0E  6EE6               	movwf	postinc1,c
  9650  014C10  0E00               	movlw	0
  9651  014C12  6EE6               	movwf	postinc1,c
  9652  014C14  EC7F  F0B3         	call	_fputc	;wreg free
  9653                           
  9654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9655                           ;stkvar	_l @ sp[(-17)+7]
  9656  014C18  0EF6               	movlw	-10
  9657  014C1A  50E3               	movf	plusw1,w,c
  9658  014C1C  0F01               	addlw	1
  9659  014C1E  6E32               	movwf	btemp^0,c
  9660  014C20  0EF6               	movlw	-10
  9661  014C22  0060  F0CB  FFE3   	movff	btemp,plusw1
  9662  014C28  6A32               	clrf	btemp^0,c
  9663  014C2A  0EF7               	movlw	-9
  9664  014C2C  50E3               	movf	plusw1,w,c
  9665  014C2E  2032               	addwfc	btemp^0,w,c
  9666  014C30  6E32               	movwf	btemp^0,c
  9667  014C32  0EF7               	movlw	-9
  9668  014C34  0060  F0CB  FFE3   	movff	btemp,plusw1
  9669  014C3A                     l9694:
  9670                           
  9671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9672                           ;stkvar	_w @ sp[(-17)+13]
  9673                           ;stkvar	_l @ sp[(-17)+7]
  9674  014C3A  50E1               	movf	fsr1l,w,c
  9675  014C3C  0FF6               	addlw	-10
  9676  014C3E  6ED9               	movwf	fsr2l,c
  9677  014C40  50E2               	movf	fsr1h,w,c
  9678  014C42  6EDA               	movwf	fsr2h,c
  9679  014C44  0EFF               	movlw	255
  9680  014C46  22DA               	addwfc	fsr2h,f,c
  9681  014C48  0EFC               	movlw	-4
  9682  014C4A  50E3               	movf	plusw1,w,c
  9683  014C4C  5CDE               	subwf	postinc2,w,c
  9684  014C4E  50DE               	movf	postinc2,w,c
  9685  014C50  0A80               	xorlw	128
  9686  014C52  6E32               	movwf	btemp^0,c
  9687  014C54  0EFD               	movlw	-3
  9688  014C56  50E3               	movf	plusw1,w,c
  9689  014C58  0A80               	xorlw	128
  9690  014C5A  5832               	subwfb	btemp^0,w,c
  9691  014C5C  A0D8               	btfss	status,0,c
  9692  014C5E  D7CF               	goto	l9690
  9693  014C60                     u9660:
  9694                           
  9695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9696                           ;stkvar	_i @ sp[(-17)+15]
  9697  014C60  0EFE               	movlw	-2
  9698  014C62  6AE3               	clrf	plusw1,c
  9699  014C64  0EFF               	movlw	-1
  9700  014C66  6AE3               	clrf	plusw1,c
  9701                           
  9702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9703  014C68  D045               	goto	l9704
  9704  014C6A                     l9698:
  9705                           
  9706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9707                           ;stkvar	_fp @ sp[(-17)+-2]
  9708  014C6A  0EED               	movlw	-19
  9709  014C6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9710  014C72  006F FF8F FFE6     	movff	plusw1,postinc1
  9711                           
  9712                           ;stkvar	_cp @ sp[(-19)+11]
  9713  014C78  0EF8               	movlw	-8
  9714  014C7A  006F FF8F FFF6     	movff	plusw1,tblptrl
  9715  014C80  0EF9               	movlw	-7
  9716  014C82  006F FF8F FFF7     	movff	plusw1,tblptrh
  9717  014C88  0E00               	movlw	low (__mediumconst shr (0+16))
  9718  014C8A  6EF8               	movwf	tblptru,c
  9719  014C8C  0E1F               	movlw	(high __ramtop+-1)
  9720  014C8E  64F7               	cpfsgt	tblptrh,c
  9721  014C90  D003               	bra	u9677
  9722  014C92  0008               	tblrd		*
  9723  014C94  50F5               	movf	tablat,w,c
  9724  014C96  D007               	bra	u9670
  9725  014C98                     u9677:
  9726  014C98  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9727  014C9E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9728  014CA4  50EF               	movf	indf0,w,c
  9729  014CA6                     u9670:
  9730  014CA6  6EE6               	movwf	postinc1,c
  9731  014CA8  0E00               	movlw	0
  9732  014CAA  6EE6               	movwf	postinc1,c
  9733  014CAC  EC7F  F0B3         	call	_fputc	;wreg free
  9734                           
  9735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9736                           ;stkvar	_cp @ sp[(-17)+11]
  9737  014CB0  0EFA               	movlw	-6
  9738  014CB2  50E3               	movf	plusw1,w,c
  9739  014CB4  0F01               	addlw	1
  9740  014CB6  6E32               	movwf	btemp^0,c
  9741  014CB8  0EFA               	movlw	-6
  9742  014CBA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9743  014CC0  6A32               	clrf	btemp^0,c
  9744  014CC2  0EFB               	movlw	-5
  9745  014CC4  50E3               	movf	plusw1,w,c
  9746  014CC6  2032               	addwfc	btemp^0,w,c
  9747  014CC8  6E32               	movwf	btemp^0,c
  9748  014CCA  0EFB               	movlw	-5
  9749  014CCC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9750                           
  9751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9752                           ;stkvar	_i @ sp[(-17)+15]
  9753  014CD2  0EFE               	movlw	-2
  9754  014CD4  50E3               	movf	plusw1,w,c
  9755  014CD6  0F01               	addlw	1
  9756  014CD8  6E32               	movwf	btemp^0,c
  9757  014CDA  0EFE               	movlw	-2
  9758  014CDC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9759  014CE2  6A32               	clrf	btemp^0,c
  9760  014CE4  0EFF               	movlw	-1
  9761  014CE6  50E3               	movf	plusw1,w,c
  9762  014CE8  2032               	addwfc	btemp^0,w,c
  9763  014CEA  6E32               	movwf	btemp^0,c
  9764  014CEC  0EFF               	movlw	-1
  9765  014CEE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9766  014CF4                     l9704:
  9767                           
  9768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9769                           ;stkvar	_p @ sp[(-17)+9]
  9770                           ;stkvar	_i @ sp[(-17)+15]
  9771  014CF4  50E1               	movf	fsr1l,w,c
  9772  014CF6  0FFE               	addlw	-2
  9773  014CF8  6ED9               	movwf	fsr2l,c
  9774  014CFA  50E2               	movf	fsr1h,w,c
  9775  014CFC  6EDA               	movwf	fsr2h,c
  9776  014CFE  0EFF               	movlw	255
  9777  014D00  22DA               	addwfc	fsr2h,f,c
  9778  014D02  0EF8               	movlw	-8
  9779  014D04  50E3               	movf	plusw1,w,c
  9780  014D06  5CDE               	subwf	postinc2,w,c
  9781  014D08  50DE               	movf	postinc2,w,c
  9782  014D0A  0A80               	xorlw	128
  9783  014D0C  6E32               	movwf	btemp^0,c
  9784  014D0E  0EF9               	movlw	-7
  9785  014D10  50E3               	movf	plusw1,w,c
  9786  014D12  0A80               	xorlw	128
  9787  014D14  5832               	subwfb	btemp^0,w,c
  9788  014D16  A0D8               	btfss	status,0,c
  9789  014D18  D7A8               	goto	l9698
  9790                           
  9791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9792  014D1A  B01F               	btfsc	_flags^0,0,c
  9793  014D1C  D01F               	goto	l9712
  9794  014D1E  D031               	goto	u9700
  9795  014D20                     l9708:
  9796                           
  9797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9798                           ;stkvar	_fp @ sp[(-17)+-2]
  9799  014D20  0EED               	movlw	-19
  9800  014D22  006F FF8F FFE6     	movff	plusw1,postinc1
  9801  014D28  006F FF8F FFE6     	movff	plusw1,postinc1
  9802  014D2E  0E20               	movlw	32
  9803  014D30  6EE6               	movwf	postinc1,c
  9804  014D32  0E00               	movlw	0
  9805  014D34  6EE6               	movwf	postinc1,c
  9806  014D36  EC7F  F0B3         	call	_fputc	;wreg free
  9807                           
  9808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9809                           ;stkvar	_l @ sp[(-17)+7]
  9810  014D3A  0EF6               	movlw	-10
  9811  014D3C  50E3               	movf	plusw1,w,c
  9812  014D3E  0F01               	addlw	1
  9813  014D40  6E32               	movwf	btemp^0,c
  9814  014D42  0EF6               	movlw	-10
  9815  014D44  0060  F0CB  FFE3   	movff	btemp,plusw1
  9816  014D4A  6A32               	clrf	btemp^0,c
  9817  014D4C  0EF7               	movlw	-9
  9818  014D4E  50E3               	movf	plusw1,w,c
  9819  014D50  2032               	addwfc	btemp^0,w,c
  9820  014D52  6E32               	movwf	btemp^0,c
  9821  014D54  0EF7               	movlw	-9
  9822  014D56  0060  F0CB  FFE3   	movff	btemp,plusw1
  9823  014D5C                     l9712:
  9824                           
  9825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9826                           ;stkvar	_w @ sp[(-17)+13]
  9827                           ;stkvar	_l @ sp[(-17)+7]
  9828  014D5C  50E1               	movf	fsr1l,w,c
  9829  014D5E  0FF6               	addlw	-10
  9830  014D60  6ED9               	movwf	fsr2l,c
  9831  014D62  50E2               	movf	fsr1h,w,c
  9832  014D64  6EDA               	movwf	fsr2h,c
  9833  014D66  0EFF               	movlw	255
  9834  014D68  22DA               	addwfc	fsr2h,f,c
  9835  014D6A  0EFC               	movlw	-4
  9836  014D6C  50E3               	movf	plusw1,w,c
  9837  014D6E  5CDE               	subwf	postinc2,w,c
  9838  014D70  50DE               	movf	postinc2,w,c
  9839  014D72  0A80               	xorlw	128
  9840  014D74  6E32               	movwf	btemp^0,c
  9841  014D76  0EFD               	movlw	-3
  9842  014D78  50E3               	movf	plusw1,w,c
  9843  014D7A  0A80               	xorlw	128
  9844  014D7C  5832               	subwfb	btemp^0,w,c
  9845  014D7E  A0D8               	btfss	status,0,c
  9846  014D80  D7CF               	goto	l9708
  9847  014D82                     u9700:
  9848                           
  9849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9850                           ;stkvar	_l @ sp[(-17)+7]
  9851  014D82  0EF6               	movlw	-10
  9852  014D84  006F FF8C  F032    	movff	plusw1,btemp
  9853  014D8A  0EF7               	movlw	-9
  9854  014D8C  006F FF8C  F033    	movff	plusw1,btemp+1
  9855                           
  9856                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9857  014D92  0EEB               	movlw	235
  9858  014D94  26E1               	addwf	fsr1l,f,c
  9859  014D96  0EFF               	movlw	255
  9860  014D98  22E2               	addwfc	fsr1h,f,c
  9861  014D9A  0012               	return		;funcret
  9862  014D9C                     __end_of_stoa:
  9863                           	opt callstack 0
  9864                           
  9865 ;; *************** function _efgtoa *****************
  9866 ;; Defined at:
  9867 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9870 ;;		 -> f(6), NULL(0), 
  9871 ;;  f               4  [STACK] PTR struct _IO_FILE
  9872 ;;  c               1  [STACK] unsigned char 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  u               4  [STACK] unsigned char 
  9875 ;;  g               4  [STACK] unsigned char 
  9876 ;;  l               4  [STACK] unsigned char 
  9877 ;;  h               4  [STACK] unsigned char 
  9878 ;;  ou              4  [STACK] unsigned char 
  9879 ;;  n               2  [STACK] int 
  9880 ;;  e               2  [STACK] int 
  9881 ;;  i               2  [STACK] int 
  9882 ;;  w               2  [STACK] int 
  9883 ;;  p               2  [STACK] int 
  9884 ;;  sign            2  [STACK] int 
  9885 ;;  d               2  [STACK] int 
  9886 ;;  ne              2  [STACK] int 
  9887 ;;  m               2  [STACK] int 
  9888 ;;  pp              2  [STACK] int 
  9889 ;;  t               2  [STACK] int 
  9890 ;;  mode            1  [STACK] unsigned char 
  9891 ;;  nmode           1  [STACK] unsigned char 
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  2  [STACK] int 
  9894 ;; Registers used:
  9895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/5
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9905 ;;Total ram usage:        0 bytes
  9906 ;; Hardware stack levels used:    1
  9907 ;; Hardware stack levels required when called:   11
  9908 ;; This function calls:
  9909 ;;		___awdiv
  9910 ;;		___awmod
  9911 ;;		___fladd
  9912 ;;		___fldiv
  9913 ;;		___fleq
  9914 ;;		___flge
  9915 ;;		___flmul
  9916 ;;		___flneg
  9917 ;;		___flsub
  9918 ;;		___fltol
  9919 ;;		___fpclassifyf
  9920 ;;		_floorf
  9921 ;;		_isupper
  9922 ;;		_pad
  9923 ;;		_strcpy
  9924 ;;		_tolower
  9925 ;; This function is called by:
  9926 ;;		_vfpfcnvrt
  9927 ;; This function uses a reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text43
  9931  010000                     __ptext43:
  9932                           	opt callstack 0
  9933  010000                     _efgtoa:
  9934                           	opt callstack 0
  9935                           
  9936                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9937  010000  0E38               	movlw	56
  9938  010002  26E1               	addwf	fsr1l,f,c
  9939  010004  0E00               	movlw	0
  9940  010006  22E2               	addwfc	fsr1h,f,c
  9941                           
  9942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9943                           ;stkvar	_sign @ sp[(-56)+42]
  9944                           
  9945                           ;incstack = 0
  9946  010008  0EF2               	movlw	-14
  9947  01000A  6AE3               	clrf	plusw1,c
  9948  01000C  0EF3               	movlw	-13
  9949  01000E  6AE3               	clrf	plusw1,c
  9950                           
  9951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9952                           ;stkvar	_f @ sp[(-56)+-6]
  9953  010010  0EC2               	movlw	-62
  9954  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
  9955  010018  0EC3               	movlw	-61
  9956  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
  9957  010020  0EC4               	movlw	-60
  9958  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
  9959  010028  0EC5               	movlw	-59
  9960  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9961                           
  9962                           ;stkvar	_g @ sp[(-56)+16]
  9963  010030  0ED8               	movlw	-40
  9964  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9965  010038  0ED9               	movlw	-39
  9966  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9967  010040  0EDA               	movlw	-38
  9968  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9969  010048  0EDB               	movlw	-37
  9970  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9971                           
  9972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9973                           ;stkvar	_g @ sp[(-56)+16]
  9974  010050  0EDB               	movlw	-37
  9975  010052  AEE3               	btfss	plusw1,7,c
  9976  010054  D02B               	goto	l9372
  9977                           
  9978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9979  010056  0E01               	movlw	1
  9980  010058  6E3C               	movwf	(btemp+10)^0,c
  9981  01005A  0E00               	movlw	0
  9982  01005C  6E3D               	movwf	(btemp+11)^0,c
  9983                           
  9984                           ;stkvar	_sign @ sp[(-56)+42]
  9985  01005E  0EF2               	movlw	-14
  9986  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9987  010066  0EF3               	movlw	-13
  9988  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9989                           
  9990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9991                           ;stkvar	_g @ sp[(-56)+16]
  9992  01006E  0ED8               	movlw	-40
  9993  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9994  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9995  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9996  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9997  010088  EC5C  F0BE         	call	___flneg	;wreg free
  9998                           
  9999                           ;stkvar	_g @ sp[(-56)+16]
 10000  01008C  0ED8               	movlw	-40
 10001  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10002  010094  0ED9               	movlw	-39
 10003  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10004  01009C  0EDA               	movlw	-38
 10005  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10006  0100A4  0EDB               	movlw	-37
 10007  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10008  0100AC                     l9372:
 10009                           
 10010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10011                           ;stkvar	_n @ sp[(-56)+32]
 10012  0100AC  0EE8               	movlw	-24
 10013  0100AE  6AE3               	clrf	plusw1,c
 10014  0100B0  0EE9               	movlw	-23
 10015  0100B2  6AE3               	clrf	plusw1,c
 10016                           
 10017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10018                           ;stkvar	_w @ sp[(-56)+38]
 10019  0100B4  0EEE               	movlw	-18
 10020  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10021  0100BC  0EEF               	movlw	-17
 10022  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10023                           
 10024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10025                           ;stkvar	_sign @ sp[(-56)+42]
 10026  0100C4  0EF2               	movlw	-14
 10027  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10028  0100CC  0EF3               	movlw	-13
 10029  0100CE  50E3               	movf	plusw1,w,c
 10030  0100D0  1032               	iorwf	btemp^0,w,c
 10031  0100D2  A4D8               	btfss	status,2,c
 10032  0100D4  D002               	goto	u9110
 10033  0100D6  A41F               	btfss	_flags^0,2,c
 10034  0100D8  D036               	goto	l9392
 10035  0100DA                     u9110:
 10036                           
 10037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10038                           ;stkvar	_sign @ sp[(-56)+42]
 10039  0100DA  0EF2               	movlw	-14
 10040  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10041  0100E2  0EF3               	movlw	-13
 10042  0100E4  50E3               	movf	plusw1,w,c
 10043  0100E6  1032               	iorwf	btemp^0,w,c
 10044  0100E8  A4D8               	btfss	status,2,c
 10045  0100EA  D002               	goto	l9384
 10046  0100EC  0E2B               	movlw	43
 10047  0100EE  D001               	goto	L7
 10048  0100F0                     l9384:
 10049  0100F0  0E2D               	movlw	45
 10050  0100F2                     L7:
 10051  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10052  0100F4  0E00               	movlw	0
 10053  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10054                           
 10055                           ;stkvar	_efgtoa$4392 @ sp[(-56)+10]
 10056  0100F8  0ED2               	movlw	-46
 10057  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10058  010100  0ED3               	movlw	-45
 10059  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10060                           
 10061                           ;stkvar	_efgtoa$4392 @ sp[(-56)+10]
 10062  010108  0ED2               	movlw	-46
 10063  01010A  006F FF8C  F178    	movff	plusw1,_dbuf
 10064                           
 10065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10066                           ;stkvar	_n @ sp[(-56)+32]
 10067  010110  0EE8               	movlw	-24
 10068  010112  50E3               	movf	plusw1,w,c
 10069  010114  0F01               	addlw	1
 10070  010116  6E32               	movwf	btemp^0,c
 10071  010118  0EE8               	movlw	-24
 10072  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10073  010120  6A32               	clrf	btemp^0,c
 10074  010122  0EE9               	movlw	-23
 10075  010124  50E3               	movf	plusw1,w,c
 10076  010126  2032               	addwfc	btemp^0,w,c
 10077  010128  6E32               	movwf	btemp^0,c
 10078  01012A  0EE9               	movlw	-23
 10079  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10080                           
 10081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10082                           ;stkvar	_w @ sp[(-56)+38]
 10083  010132  50E1               	movf	fsr1l,w,c
 10084  010134  0FEE               	addlw	-18
 10085  010136  6ED9               	movwf	fsr2l,c
 10086  010138  50E2               	movf	fsr1h,w,c
 10087  01013A  6EDA               	movwf	fsr2h,c
 10088  01013C  0EFF               	movlw	255
 10089  01013E  22DA               	addwfc	fsr2h,f,c
 10090  010140  06DE               	decf	postinc2,f,c
 10091  010142  0E00               	movlw	0
 10092  010144  5ADD               	subwfb	postdec2,f,c
 10093  010146                     l9392:
 10094                           
 10095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10096                           ;stkvar	_g @ sp[(-56)+16]
 10097  010146  0ED8               	movlw	-40
 10098  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10099  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10100  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10101  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10102  010160  EC68  F0AF         	call	___fpclassifyf	;wreg free
 10103  010164  0432               	decf	btemp^0,w,c
 10104  010166  1033               	iorwf	(btemp+1)^0,w,c
 10105  010168  A4D8               	btfss	status,2,c
 10106  01016A  D076               	goto	l9410
 10107  01016C  0EBF               	movlw	191
 10108  01016E  6E3C               	movwf	(btemp+10)^0,c
 10109  010170  0EFF               	movlw	255
 10110  010172  6E3D               	movwf	(btemp+11)^0,c
 10111                           
 10112                           ;stkvar	_c @ sp[(-56)+-7]
 10113  010174  0EC1               	movlw	-63
 10114  010176  50E3               	movf	plusw1,w,c
 10115  010178  6E3A               	movwf	(btemp+8)^0,c
 10116  01017A  6A3B               	clrf	(btemp+9)^0,c
 10117  01017C  503C               	movf	(btemp+10)^0,w,c
 10118  01017E  263A               	addwf	(btemp+8)^0,f,c
 10119  010180  503D               	movf	(btemp+11)^0,w,c
 10120  010182  223B               	addwfc	(btemp+9)^0,f,c
 10121  010184  503B               	movf	(btemp+9)^0,w,c
 10122  010186  E106               	bnz	u9140
 10123  010188  0E1A               	movlw	26
 10124  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10125  01018C  B0D8               	btfsc	status,0,c
 10126  01018E  D002               	goto	u9140
 10127  010190  0E01               	movlw	1
 10128  010192  D001               	goto	u9150
 10129  010194                     u9140:
 10130  010194  0E00               	movlw	0
 10131  010196                     u9150:
 10132  010196  6E3C               	movwf	(btemp+10)^0,c
 10133  010198  6A3D               	clrf	(btemp+11)^0,c
 10134                           
 10135                           ;stkvar	_efgtoa$4393 @ sp[(-56)+8]
 10136  01019A  0ED0               	movlw	-48
 10137  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10138  0101A2  0ED1               	movlw	-47
 10139  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10140                           
 10141                           ;stkvar	_efgtoa$4393 @ sp[(-56)+8]
 10142  0101AA  0ED0               	movlw	-48
 10143  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10144  0101B2  0ED1               	movlw	-47
 10145  0101B4  50E3               	movf	plusw1,w,c
 10146  0101B6  1032               	iorwf	btemp^0,w,c
 10147  0101B8  B4D8               	btfsc	status,2,c
 10148  0101BA  D017               	goto	l9402
 10149                           
 10150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10151  0101BC  0EE6               	movlw	low STR_37
 10152  0101BE  6EE6               	movwf	postinc1,c
 10153  0101C0  0EFF               	movlw	high STR_37
 10154  0101C2  6EE6               	movwf	postinc1,c
 10155                           
 10156                           ;stkvar	_n @ sp[(-58)+32]
 10157  0101C4  0E78               	movlw	low _dbuf
 10158  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10159  0101C8  0E01               	movlw	high _dbuf
 10160  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10161  0101CC  0EE6               	movlw	-26
 10162  0101CE  50E3               	movf	plusw1,w,c
 10163  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10164  0101D2  0EE7               	movlw	-25
 10165  0101D4  50E3               	movf	plusw1,w,c
 10166  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10167  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10168  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10169  0101E4  EC22  F0B7         	call	_strcpy	;wreg free
 10170                           
 10171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10172  0101E8  D016               	goto	l9404
 10173  0101EA                     l9402:
 10174                           
 10175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10176  0101EA  0EEE               	movlw	low STR_38
 10177  0101EC  6EE6               	movwf	postinc1,c
 10178  0101EE  0EFF               	movlw	high STR_38
 10179  0101F0  6EE6               	movwf	postinc1,c
 10180                           
 10181                           ;stkvar	_n @ sp[(-58)+32]
 10182  0101F2  0E78               	movlw	low _dbuf
 10183  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10184  0101F6  0E01               	movlw	high _dbuf
 10185  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10186  0101FA  0EE6               	movlw	-26
 10187  0101FC  50E3               	movf	plusw1,w,c
 10188  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10189  010200  0EE7               	movlw	-25
 10190  010202  50E3               	movf	plusw1,w,c
 10191  010204  223D               	addwfc	(btemp+11)^0,f,c
 10192  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10193  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10194  010212  EC22  F0B7         	call	_strcpy	;wreg free
 10195  010216                     l9404:
 10196                           
 10197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10198                           ;stkvar	_w @ sp[(-56)+38]
 10199  010216  50E1               	movf	fsr1l,w,c
 10200  010218  0FEE               	addlw	-18
 10201  01021A  6ED9               	movwf	fsr2l,c
 10202  01021C  50E2               	movf	fsr1h,w,c
 10203  01021E  6EDA               	movwf	fsr2h,c
 10204  010220  0EFF               	movlw	255
 10205  010222  22DA               	addwfc	fsr2h,f,c
 10206  010224  0EFD               	movlw	253
 10207  010226  26DE               	addwf	postinc2,f,c
 10208  010228  0EFF               	movlw	255
 10209  01022A  22DD               	addwfc	postdec2,f,c
 10210  01022C                     l9406:
 10211                           
 10212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10213                           ;stkvar	_w @ sp[(-56)+38]
 10214  01022C  0EEE               	movlw	-18
 10215  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10216  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10217  01023A  0E78               	movlw	low _dbuf
 10218  01023C  6EE6               	movwf	postinc1,c
 10219  01023E  0E01               	movlw	high _dbuf
 10220  010240  6EE6               	movwf	postinc1,c
 10221                           
 10222                           ;stkvar	_fp @ sp[(-60)+-2]
 10223  010242  0EC2               	movlw	-62
 10224  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10225  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10226  010250  EC9D  F0B4         	call	_pad	;wreg free
 10227  010254  EF1D  F089         	goto	l1869
 10228  010258                     l9410:
 10229                           
 10230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10231                           ;stkvar	_g @ sp[(-56)+16]
 10232  010258  0ED8               	movlw	-40
 10233  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10234  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10235  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10236  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10237  010272  EC68  F0AF         	call	___fpclassifyf	;wreg free
 10238  010276  5032               	movf	btemp^0,w,c
 10239  010278  1033               	iorwf	(btemp+1)^0,w,c
 10240  01027A  A4D8               	btfss	status,2,c
 10241  01027C  D056               	goto	l9428
 10242  01027E  0EBF               	movlw	191
 10243  010280  6E3C               	movwf	(btemp+10)^0,c
 10244  010282  0EFF               	movlw	255
 10245  010284  6E3D               	movwf	(btemp+11)^0,c
 10246                           
 10247                           ;stkvar	_c @ sp[(-56)+-7]
 10248  010286  0EC1               	movlw	-63
 10249  010288  50E3               	movf	plusw1,w,c
 10250  01028A  6E3A               	movwf	(btemp+8)^0,c
 10251  01028C  6A3B               	clrf	(btemp+9)^0,c
 10252  01028E  503C               	movf	(btemp+10)^0,w,c
 10253  010290  263A               	addwf	(btemp+8)^0,f,c
 10254  010292  503D               	movf	(btemp+11)^0,w,c
 10255  010294  223B               	addwfc	(btemp+9)^0,f,c
 10256  010296  503B               	movf	(btemp+9)^0,w,c
 10257  010298  E106               	bnz	u9180
 10258  01029A  0E1A               	movlw	26
 10259  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10260  01029E  B0D8               	btfsc	status,0,c
 10261  0102A0  D002               	goto	u9180
 10262  0102A2  0E01               	movlw	1
 10263  0102A4  D001               	goto	u9190
 10264  0102A6                     u9180:
 10265  0102A6  0E00               	movlw	0
 10266  0102A8                     u9190:
 10267  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10268  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10269                           
 10270                           ;stkvar	_efgtoa$4397 @ sp[(-56)+6]
 10271  0102AC  0ECE               	movlw	-50
 10272  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10273  0102B4  0ECF               	movlw	-49
 10274  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10275                           
 10276                           ;stkvar	_efgtoa$4397 @ sp[(-56)+6]
 10277  0102BC  0ECE               	movlw	-50
 10278  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10279  0102C4  0ECF               	movlw	-49
 10280  0102C6  50E3               	movf	plusw1,w,c
 10281  0102C8  1032               	iorwf	btemp^0,w,c
 10282  0102CA  B4D8               	btfsc	status,2,c
 10283  0102CC  D017               	goto	l9420
 10284                           
 10285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10286  0102CE  0EEA               	movlw	low STR_41
 10287  0102D0  6EE6               	movwf	postinc1,c
 10288  0102D2  0EFF               	movlw	high STR_41
 10289  0102D4  6EE6               	movwf	postinc1,c
 10290                           
 10291                           ;stkvar	_n @ sp[(-58)+32]
 10292  0102D6  0E78               	movlw	low _dbuf
 10293  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10294  0102DA  0E01               	movlw	high _dbuf
 10295  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10296  0102DE  0EE6               	movlw	-26
 10297  0102E0  50E3               	movf	plusw1,w,c
 10298  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10299  0102E4  0EE7               	movlw	-25
 10300  0102E6  50E3               	movf	plusw1,w,c
 10301  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10302  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10303  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10304  0102F6  EC22  F0B7         	call	_strcpy	;wreg free
 10305                           
 10306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10307  0102FA  D78D               	goto	l9404
 10308  0102FC                     l9420:
 10309                           
 10310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10311  0102FC  0EF2               	movlw	low STR_42
 10312  0102FE  6EE6               	movwf	postinc1,c
 10313  010300  0EFF               	movlw	high STR_42
 10314  010302  6EE6               	movwf	postinc1,c
 10315                           
 10316                           ;stkvar	_n @ sp[(-58)+32]
 10317  010304  0E78               	movlw	low _dbuf
 10318  010306  6E3C               	movwf	(btemp+10)^0,c
 10319  010308  0E01               	movlw	high _dbuf
 10320  01030A  6E3D               	movwf	(btemp+11)^0,c
 10321  01030C  0EE6               	movlw	-26
 10322  01030E  50E3               	movf	plusw1,w,c
 10323  010310  263C               	addwf	(btemp+10)^0,f,c
 10324  010312  0EE7               	movlw	-25
 10325  010314  50E3               	movf	plusw1,w,c
 10326  010316  223D               	addwfc	(btemp+11)^0,f,c
 10327  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10328  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10329  010324  EC22  F0B7         	call	_strcpy	;wreg free
 10330  010328  D776               	goto	l9404
 10331  01032A                     l9428:
 10332                           
 10333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10334  01032A  0E00               	movlw	0
 10335  01032C  6E3A               	movwf	(btemp+8)^0,c
 10336  01032E  0E00               	movlw	0
 10337  010330  6E3B               	movwf	(btemp+9)^0,c
 10338  010332  0E80               	movlw	128
 10339  010334  6E3C               	movwf	(btemp+10)^0,c
 10340  010336  0E3F               	movlw	63
 10341  010338  6E3D               	movwf	(btemp+11)^0,c
 10342                           
 10343                           ;stkvar	_u @ sp[(-56)+12]
 10344  01033A  0ED4               	movlw	-44
 10345  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10346  010342  0ED5               	movlw	-43
 10347  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10348  01034A  0ED6               	movlw	-42
 10349  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10350  010352  0ED7               	movlw	-41
 10351  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10352                           
 10353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10354                           ;stkvar	_e @ sp[(-56)+34]
 10355  01035A  0EEA               	movlw	-22
 10356  01035C  6AE3               	clrf	plusw1,c
 10357  01035E  0EEB               	movlw	-21
 10358  010360  6AE3               	clrf	plusw1,c
 10359                           
 10360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10361  010362  0E00               	movlw	0
 10362  010364  6EE6               	movwf	postinc1,c
 10363  010366  0E00               	movlw	0
 10364  010368  6EE6               	movwf	postinc1,c
 10365  01036A  0E00               	movlw	0
 10366  01036C  6EE6               	movwf	postinc1,c
 10367  01036E  0E00               	movlw	0
 10368  010370  6EE6               	movwf	postinc1,c
 10369                           
 10370                           ;stkvar	_g @ sp[(-60)+16]
 10371  010372  0ED4               	movlw	-44
 10372  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10373  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10374  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10375  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10376  01038C  EC8C  F0B7         	call	___fleq	;wreg free
 10377  010390  A032               	btfss	btemp& (0+255),0,c
 10378  010392  D039               	goto	l9440
 10379  010394  D0BC               	goto	u9230
 10380  010396                     l9436:
 10381                           
 10382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10383  010396  0E00               	movlw	0
 10384  010398  6EE6               	movwf	postinc1,c
 10385  01039A  0E00               	movlw	0
 10386  01039C  6EE6               	movwf	postinc1,c
 10387  01039E  0E20               	movlw	32
 10388  0103A0  6EE6               	movwf	postinc1,c
 10389  0103A2  0E41               	movlw	65
 10390  0103A4  6EE6               	movwf	postinc1,c
 10391                           
 10392                           ;stkvar	_u @ sp[(-60)+12]
 10393  0103A6  0ED0               	movlw	-48
 10394  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10395  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10396  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10397  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10398  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10399                           
 10400                           ;stkvar	_u @ sp[(-56)+12]
 10401  0103C4  0ED4               	movlw	-44
 10402  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10403  0103CC  0ED5               	movlw	-43
 10404  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10405  0103D4  0ED6               	movlw	-42
 10406  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10407  0103DC  0ED7               	movlw	-41
 10408  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10409                           
 10410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10411                           ;stkvar	_e @ sp[(-56)+34]
 10412  0103E4  0EEA               	movlw	-22
 10413  0103E6  50E3               	movf	plusw1,w,c
 10414  0103E8  0F01               	addlw	1
 10415  0103EA  6E32               	movwf	btemp^0,c
 10416  0103EC  0EEA               	movlw	-22
 10417  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10418  0103F4  6A32               	clrf	btemp^0,c
 10419  0103F6  0EEB               	movlw	-21
 10420  0103F8  50E3               	movf	plusw1,w,c
 10421  0103FA  2032               	addwfc	btemp^0,w,c
 10422  0103FC  6E32               	movwf	btemp^0,c
 10423  0103FE  0EEB               	movlw	-21
 10424  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10425  010406                     l9440:
 10426                           
 10427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10428  010406  0E00               	movlw	0
 10429  010408  6EE6               	movwf	postinc1,c
 10430  01040A  0E00               	movlw	0
 10431  01040C  6EE6               	movwf	postinc1,c
 10432  01040E  0E20               	movlw	32
 10433  010410  6EE6               	movwf	postinc1,c
 10434  010412  0E41               	movlw	65
 10435  010414  6EE6               	movwf	postinc1,c
 10436                           
 10437                           ;stkvar	_u @ sp[(-60)+12]
 10438  010416  0ED0               	movlw	-48
 10439  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10440  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10441  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10442  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10443  010430  ECC1  F08E         	call	___flmul	;wreg free
 10444  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10445  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10446  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10447  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10448                           
 10449                           ;stkvar	_g @ sp[(-60)+16]
 10450  01044C  0ED4               	movlw	-44
 10451  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10452  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10453  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10454  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10455  010466  ECEC  F0B0         	call	___flge	;wreg free
 10456  01046A  A032               	btfss	btemp& (0+255),0,c
 10457  01046C  D032               	goto	l9446
 10458  01046E  D793               	goto	l9436
 10459  010470                     l9442:
 10460                           
 10461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10462  010470  0E00               	movlw	0
 10463  010472  6EE6               	movwf	postinc1,c
 10464  010474  0E00               	movlw	0
 10465  010476  6EE6               	movwf	postinc1,c
 10466  010478  0E20               	movlw	32
 10467  01047A  6EE6               	movwf	postinc1,c
 10468  01047C  0E41               	movlw	65
 10469  01047E  6EE6               	movwf	postinc1,c
 10470                           
 10471                           ;stkvar	_u @ sp[(-60)+12]
 10472  010480  0ED0               	movlw	-48
 10473  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10474  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10475  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10476  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10477  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10478                           
 10479                           ;stkvar	_u @ sp[(-56)+12]
 10480  01049E  0ED4               	movlw	-44
 10481  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10482  0104A6  0ED5               	movlw	-43
 10483  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10484  0104AE  0ED6               	movlw	-42
 10485  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10486  0104B6  0ED7               	movlw	-41
 10487  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10488                           
 10489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10490                           ;stkvar	_e @ sp[(-56)+34]
 10491  0104BE  50E1               	movf	fsr1l,w,c
 10492  0104C0  0FEA               	addlw	-22
 10493  0104C2  6ED9               	movwf	fsr2l,c
 10494  0104C4  50E2               	movf	fsr1h,w,c
 10495  0104C6  6EDA               	movwf	fsr2h,c
 10496  0104C8  0EFF               	movlw	255
 10497  0104CA  22DA               	addwfc	fsr2h,f,c
 10498  0104CC  06DE               	decf	postinc2,f,c
 10499  0104CE  0E00               	movlw	0
 10500  0104D0  5ADD               	subwfb	postdec2,f,c
 10501  0104D2                     l9446:
 10502                           
 10503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10504                           ;stkvar	_u @ sp[(-56)+12]
 10505  0104D2  0ED4               	movlw	-44
 10506  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10507  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10508  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10509  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10510                           
 10511                           ;stkvar	_g @ sp[(-60)+16]
 10512  0104EC  0ED4               	movlw	-44
 10513  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10514  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10515  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10516  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10517  010506  ECEC  F0B0         	call	___flge	;wreg free
 10518  01050A  A032               	btfss	btemp& (0+255),0,c
 10519  01050C  D7B1               	goto	l9442
 10520  01050E                     u9230:
 10521                           
 10522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10523                           ;stkvar	_c @ sp[(-56)+-7]
 10524  01050E  0EC1               	movlw	-63
 10525  010510  50E3               	movf	plusw1,w,c
 10526  010512  6EE6               	movwf	postinc1,c
 10527  010514  0E00               	movlw	0
 10528  010516  6EE6               	movwf	postinc1,c
 10529  010518  ECFD  F0BA         	call	_tolower	;wreg free
 10530                           
 10531                           ;stkvar	_mode @ sp[(-56)+54]
 10532  01051C  0EFE               	movlw	-2
 10533  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10534                           
 10535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10536                           ;stkvar	_mode @ sp[(-56)+54]
 10537                           ;stkvar	_nmode @ sp[(-56)+55]
 10538  010524  0EFE               	movlw	-2
 10539  010526  006F FF8C  F032    	movff	plusw1,btemp
 10540  01052C  0EFF               	movlw	-1
 10541  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10542                           
 10543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10544                           ;stkvar	_mode @ sp[(-56)+54]
 10545  010534  0EFE               	movlw	-2
 10546  010536  006F FF8C  F032    	movff	plusw1,btemp
 10547  01053C  0E67               	movlw	103
 10548  01053E  1832               	xorwf	btemp^0,w,c
 10549  010540  A4D8               	btfss	status,2,c
 10550  010542  D025               	goto	l9464
 10551                           
 10552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10553  010544  501D               	movf	_prec^0,w,c
 10554  010546  101E               	iorwf	(_prec+1)^0,w,c
 10555  010548  A4D8               	btfss	status,2,c
 10556  01054A  D004               	goto	l9458
 10557                           
 10558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10559  01054C  0E00               	movlw	0
 10560  01054E  6E1E               	movwf	(_prec+1)^0,c
 10561  010550  0E01               	movlw	1
 10562  010552  6E1D               	movwf	_prec^0,c
 10563  010554                     l9458:
 10564                           
 10565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10566  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10567  010556  D005               	goto	u9260
 10568  010558  501E               	movf	(_prec+1)^0,w,c
 10569  01055A  E110               	bnz	l9462
 10570  01055C  041D               	decf	_prec^0,w,c
 10571  01055E  B0D8               	btfsc	status,0,c
 10572  010560  D00D               	goto	l9462
 10573  010562                     u9260:
 10574  010562  0E06               	movlw	6
 10575  010564  6E3C               	movwf	(btemp+10)^0,c
 10576  010566  0E00               	movlw	0
 10577  010568  6E3D               	movwf	(btemp+11)^0,c
 10578                           
 10579                           ;stkvar	_p @ sp[(-56)+40]
 10580  01056A  0EF0               	movlw	-16
 10581  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10582  010572  0EF1               	movlw	-15
 10583  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10584  01057A  D00C               	goto	l9470
 10585  01057C                     l9462:
 10586                           
 10587                           ;stkvar	_p @ sp[(-56)+40]
 10588  01057C  0EF0               	movlw	-16
 10589  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10590  010584  0EF1               	movlw	-15
 10591  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10592  01058C  D003               	goto	l9470
 10593  01058E                     l9464:
 10594                           
 10595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10596  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10597  010590  D7F5               	goto	l9462
 10598  010592  D7E7               	goto	u9260
 10599  010594                     l9470:
 10600                           
 10601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10602                           ;stkvar	_mode @ sp[(-56)+54]
 10603  010594  0EFE               	movlw	-2
 10604  010596  006F FF8C  F032    	movff	plusw1,btemp
 10605  01059C  0E67               	movlw	103
 10606  01059E  1832               	xorwf	btemp^0,w,c
 10607  0105A0  A4D8               	btfss	status,2,c
 10608  0105A2  D02F               	goto	l9480
 10609                           
 10610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10611                           ;stkvar	_e @ sp[(-56)+34]
 10612  0105A4  0EEB               	movlw	-21
 10613  0105A6  AEE3               	btfss	plusw1,7,c
 10614  0105A8  D00E               	goto	u9290
 10615  0105AA  0EEA               	movlw	-22
 10616  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10617  0105B2  0EFC               	movlw	252
 10618  0105B4  5E32               	subwf	btemp^0,f,c
 10619  0105B6  0EEB               	movlw	-21
 10620  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10621  0105BE  0EFF               	movlw	255
 10622  0105C0  5A32               	subwfb	btemp^0,f,c
 10623  0105C2  A0D8               	btfss	status,0,c
 10624  0105C4  D018               	goto	l9478
 10625  0105C6                     u9290:
 10626                           
 10627                           ;stkvar	_e @ sp[(-56)+34]
 10628                           ;stkvar	_p @ sp[(-56)+40]
 10629  0105C6  0EF0               	movlw	-16
 10630  0105C8  50E3               	movf	plusw1,w,c
 10631  0105CA  0FFF               	addlw	255
 10632  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10633  0105CE  0EF1               	movlw	-15
 10634  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10635  0105D6  0EFF               	movlw	255
 10636  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10637  0105DA  0EEA               	movlw	-22
 10638  0105DC  50E3               	movf	plusw1,w,c
 10639  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10640  0105E0  503D               	movf	(btemp+11)^0,w,c
 10641  0105E2  0A80               	xorlw	128
 10642  0105E4  6E32               	movwf	btemp^0,c
 10643  0105E6  0EEB               	movlw	-21
 10644  0105E8  50E3               	movf	plusw1,w,c
 10645  0105EA  0A80               	xorlw	128
 10646  0105EC  5832               	subwfb	btemp^0,w,c
 10647  0105EE  A0D8               	btfss	status,0,c
 10648  0105F0  D002               	goto	l9478
 10649                           
 10650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10651  0105F2  0E66               	movlw	102
 10652  0105F4  D001               	goto	L8
 10653  0105F6                     l9478:
 10654                           
 10655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10656  0105F6  0E65               	movlw	101
 10657  0105F8                     L8:
 10658  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10659                           
 10660                           ;stkvar	_nmode @ sp[(-56)+55]
 10661  0105FA  0EFF               	movlw	-1
 10662  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10663  010602                     l9480:
 10664                           
 10665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10666                           ;stkvar	_p @ sp[(-56)+40]
 10667                           ;stkvar	_m @ sp[(-56)+48]
 10668  010602  0EF0               	movlw	-16
 10669  010604  006F FF8C  F032    	movff	plusw1,btemp
 10670  01060A  0EF8               	movlw	-8
 10671  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10672  010612  0EF1               	movlw	-15
 10673  010614  006F FF8C  F032    	movff	plusw1,btemp
 10674  01061A  0EF9               	movlw	-7
 10675  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10676                           
 10677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10678                           ;stkvar	_mode @ sp[(-56)+54]
 10679  010622  0EFE               	movlw	-2
 10680  010624  006F FF8C  F032    	movff	plusw1,btemp
 10681  01062A  0E67               	movlw	103
 10682  01062C  1832               	xorwf	btemp^0,w,c
 10683  01062E  A4D8               	btfss	status,2,c
 10684  010630  D00B               	goto	u9330
 10685                           
 10686                           ;stkvar	_nmode @ sp[(-56)+55]
 10687  010632  0EFF               	movlw	-1
 10688  010634  006F FF8C  F032    	movff	plusw1,btemp
 10689  01063A  0E66               	movlw	102
 10690  01063C  1832               	xorwf	btemp^0,w,c
 10691  01063E  A4D8               	btfss	status,2,c
 10692  010640  D014               	goto	l1898
 10693                           
 10694                           ;stkvar	_e @ sp[(-56)+34]
 10695  010642  0EEB               	movlw	-21
 10696  010644  AEE3               	btfss	plusw1,7,c
 10697  010646  D011               	goto	l1898
 10698  010648                     u9330:
 10699                           
 10700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10701                           ;stkvar	_m @ sp[(-56)+48]
 10702  010648  0EF8               	movlw	-8
 10703  01064A  50E3               	movf	plusw1,w,c
 10704  01064C  0F01               	addlw	1
 10705  01064E  6E32               	movwf	btemp^0,c
 10706  010650  0EF8               	movlw	-8
 10707  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 10708  010658  6A32               	clrf	btemp^0,c
 10709  01065A  0EF9               	movlw	-7
 10710  01065C  50E3               	movf	plusw1,w,c
 10711  01065E  2032               	addwfc	btemp^0,w,c
 10712  010660  6E32               	movwf	btemp^0,c
 10713  010662  0EF9               	movlw	-7
 10714  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 10715  01066A                     l1898:
 10716                           
 10717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10718                           ;stkvar	_nmode @ sp[(-56)+55]
 10719  01066A  0EFF               	movlw	-1
 10720  01066C  006F FF8C  F032    	movff	plusw1,btemp
 10721  010672  0E66               	movlw	102
 10722  010674  1832               	xorwf	btemp^0,w,c
 10723  010676  A4D8               	btfss	status,2,c
 10724  010678  D03B               	goto	l9500
 10725                           
 10726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10727                           ;stkvar	_e @ sp[(-56)+34]
 10728  01067A  0EEB               	movlw	-21
 10729  01067C  AEE3               	btfss	plusw1,7,c
 10730  01067E  D01C               	goto	l9496
 10731                           
 10732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10733  010680  0E00               	movlw	0
 10734  010682  6E3A               	movwf	(btemp+8)^0,c
 10735  010684  0E00               	movlw	0
 10736  010686  6E3B               	movwf	(btemp+9)^0,c
 10737  010688  0E80               	movlw	128
 10738  01068A  6E3C               	movwf	(btemp+10)^0,c
 10739  01068C  0E3F               	movlw	63
 10740  01068E  6E3D               	movwf	(btemp+11)^0,c
 10741                           
 10742                           ;stkvar	_u @ sp[(-56)+12]
 10743  010690  0ED4               	movlw	-44
 10744  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10745  010698  0ED5               	movlw	-43
 10746  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10747  0106A0  0ED6               	movlw	-42
 10748  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10749  0106A8  0ED7               	movlw	-41
 10750  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10751                           
 10752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10753                           ;stkvar	_e @ sp[(-56)+34]
 10754  0106B0  0EEA               	movlw	-22
 10755  0106B2  6AE3               	clrf	plusw1,c
 10756  0106B4  0EEB               	movlw	-21
 10757  0106B6  6AE3               	clrf	plusw1,c
 10758  0106B8                     l9496:
 10759                           
 10760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10761                           ;stkvar	_mode @ sp[(-56)+54]
 10762  0106B8  0EFE               	movlw	-2
 10763  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 10764  0106C0  0E67               	movlw	103
 10765  0106C2  1832               	xorwf	btemp^0,w,c
 10766  0106C4  B4D8               	btfsc	status,2,c
 10767  0106C6  D014               	goto	l9500
 10768                           
 10769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10770                           ;stkvar	_e @ sp[(-56)+34]
 10771                           ;stkvar	_m @ sp[(-56)+48]
 10772  0106C8  0EF8               	movlw	-8
 10773  0106CA  50E3               	movf	plusw1,w,c
 10774  0106CC  6E32               	movwf	btemp^0,c
 10775  0106CE  0EEA               	movlw	-22
 10776  0106D0  50E3               	movf	plusw1,w,c
 10777  0106D2  2632               	addwf	btemp^0,f,c
 10778  0106D4  0EF8               	movlw	-8
 10779  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10780  0106DC  0EF9               	movlw	-7
 10781  0106DE  50E3               	movf	plusw1,w,c
 10782  0106E0  6E32               	movwf	btemp^0,c
 10783  0106E2  0EEB               	movlw	-21
 10784  0106E4  50E3               	movf	plusw1,w,c
 10785  0106E6  2232               	addwfc	btemp^0,f,c
 10786  0106E8  0EF9               	movlw	-7
 10787  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10788  0106F0                     l9500:
 10789                           
 10790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10791                           ;stkvar	_i @ sp[(-56)+36]
 10792  0106F0  0EEC               	movlw	-20
 10793  0106F2  6AE3               	clrf	plusw1,c
 10794  0106F4  0EED               	movlw	-19
 10795  0106F6  6AE3               	clrf	plusw1,c
 10796                           
 10797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10798                           ;stkvar	_g @ sp[(-56)+16]
 10799  0106F8  0ED8               	movlw	-40
 10800  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 10801  010700  0ED9               	movlw	-39
 10802  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 10803  010708  0EDA               	movlw	-38
 10804  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10805  010710  0EDB               	movlw	-37
 10806  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 10807                           
 10808                           ;stkvar	_h @ sp[(-56)+24]
 10809  010718  0EE0               	movlw	-32
 10810  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10811  010720  0EE1               	movlw	-31
 10812  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10813  010728  0EE2               	movlw	-30
 10814  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10815  010730  0EE3               	movlw	-29
 10816  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10817                           
 10818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10819                           ;stkvar	_u @ sp[(-56)+12]
 10820  010738  0ED4               	movlw	-44
 10821  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 10822  010740  0ED5               	movlw	-43
 10823  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 10824  010748  0ED6               	movlw	-42
 10825  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10826  010750  0ED7               	movlw	-41
 10827  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 10828                           
 10829                           ;stkvar	_ou @ sp[(-56)+28]
 10830  010758  0EE4               	movlw	-28
 10831  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10832  010760  0EE5               	movlw	-27
 10833  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10834  010768  0EE6               	movlw	-26
 10835  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10836  010770  0EE7               	movlw	-25
 10837  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10838                           
 10839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10840  010778  D0D6               	goto	l9516
 10841  01077A                     l9506:
 10842                           
 10843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10844                           ;stkvar	_u @ sp[(-56)+12]
 10845  01077A  0ED4               	movlw	-44
 10846  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10847  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10848  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10849  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10850                           
 10851                           ;stkvar	_h @ sp[(-60)+24]
 10852  010794  0EDC               	movlw	-36
 10853  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10854  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10855  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10856  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10857  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10858  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 10859  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10860  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10861  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10862  0107CA  EC43  F0A2         	call	_floorf	;wreg free
 10863                           
 10864                           ;stkvar	_l @ sp[(-56)+20]
 10865  0107CE  0EDC               	movlw	-36
 10866  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10867  0107D6  0EDD               	movlw	-35
 10868  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10869  0107DE  0EDE               	movlw	-34
 10870  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10871  0107E6  0EDF               	movlw	-33
 10872  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10873                           
 10874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10875                           ;stkvar	_l @ sp[(-56)+20]
 10876  0107EE  0EDC               	movlw	-36
 10877  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10878  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10879  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10880  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10881  010808  EC33  F0B0         	call	___fltol	;wreg free
 10882  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 10883  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 10884                           
 10885                           ;stkvar	_d @ sp[(-56)+44]
 10886  010818  0EF4               	movlw	-12
 10887  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10888  010820  0EF5               	movlw	-11
 10889  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10890                           
 10891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10892                           ;stkvar	_u @ sp[(-56)+12]
 10893  010828  0ED4               	movlw	-44
 10894  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10895  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10896  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10897  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10898                           
 10899                           ;stkvar	_l @ sp[(-60)+20]
 10900  010842  0ED8               	movlw	-40
 10901  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10902  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10903  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10904  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10905  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10906  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 10907  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10908  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10909  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10910                           
 10911                           ;stkvar	_h @ sp[(-60)+24]
 10912  010878  0EDC               	movlw	-36
 10913  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10914  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10915  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10916  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10917  010892  ECA3  F0BE         	call	___flsub	;wreg free
 10918                           
 10919                           ;stkvar	_h @ sp[(-56)+24]
 10920  010896  0EE0               	movlw	-32
 10921  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 10922  01089E  0EE1               	movlw	-31
 10923  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10924  0108A6  0EE2               	movlw	-30
 10925  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10926  0108AE  0EE3               	movlw	-29
 10927  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10928                           
 10929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10930  0108B6  0E00               	movlw	0
 10931  0108B8  6EE6               	movwf	postinc1,c
 10932  0108BA  0E00               	movlw	0
 10933  0108BC  6EE6               	movwf	postinc1,c
 10934  0108BE  0E20               	movlw	32
 10935  0108C0  6EE6               	movwf	postinc1,c
 10936  0108C2  0E41               	movlw	65
 10937  0108C4  6EE6               	movwf	postinc1,c
 10938                           
 10939                           ;stkvar	_u @ sp[(-60)+12]
 10940  0108C6  0ED0               	movlw	-48
 10941  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10942  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10943  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10944  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10945  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 10946                           
 10947                           ;stkvar	_u @ sp[(-56)+12]
 10948  0108E4  0ED4               	movlw	-44
 10949  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10950  0108EC  0ED5               	movlw	-43
 10951  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10952  0108F4  0ED6               	movlw	-42
 10953  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10954  0108FC  0ED7               	movlw	-41
 10955  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10956                           
 10957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10958                           ;stkvar	_i @ sp[(-56)+36]
 10959  010904  0EEC               	movlw	-20
 10960  010906  50E3               	movf	plusw1,w,c
 10961  010908  0F01               	addlw	1
 10962  01090A  6E32               	movwf	btemp^0,c
 10963  01090C  0EEC               	movlw	-20
 10964  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10965  010914  6A32               	clrf	btemp^0,c
 10966  010916  0EED               	movlw	-19
 10967  010918  50E3               	movf	plusw1,w,c
 10968  01091A  2032               	addwfc	btemp^0,w,c
 10969  01091C  6E32               	movwf	btemp^0,c
 10970  01091E  0EED               	movlw	-19
 10971  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 10972  010926                     l9516:
 10973                           
 10974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10975                           ;stkvar	_m @ sp[(-56)+48]
 10976                           ;stkvar	_i @ sp[(-56)+36]
 10977  010926  50E1               	movf	fsr1l,w,c
 10978  010928  0FEC               	addlw	-20
 10979  01092A  6ED9               	movwf	fsr2l,c
 10980  01092C  50E2               	movf	fsr1h,w,c
 10981  01092E  6EDA               	movwf	fsr2h,c
 10982  010930  0EFF               	movlw	255
 10983  010932  22DA               	addwfc	fsr2h,f,c
 10984  010934  0EF8               	movlw	-8
 10985  010936  50E3               	movf	plusw1,w,c
 10986  010938  5CDE               	subwf	postinc2,w,c
 10987  01093A  50DE               	movf	postinc2,w,c
 10988  01093C  0A80               	xorlw	128
 10989  01093E  6E32               	movwf	btemp^0,c
 10990  010940  0EF9               	movlw	-7
 10991  010942  50E3               	movf	plusw1,w,c
 10992  010944  0A80               	xorlw	128
 10993  010946  5832               	subwfb	btemp^0,w,c
 10994  010948  A0D8               	btfss	status,0,c
 10995  01094A  D717               	goto	l9506
 10996                           
 10997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10998  01094C  0E00               	movlw	0
 10999  01094E  6EE6               	movwf	postinc1,c
 11000  010950  0E00               	movlw	0
 11001  010952  6EE6               	movwf	postinc1,c
 11002  010954  0EA0               	movlw	160
 11003  010956  6EE6               	movwf	postinc1,c
 11004  010958  0E40               	movlw	64
 11005  01095A  6EE6               	movwf	postinc1,c
 11006                           
 11007                           ;stkvar	_u @ sp[(-60)+12]
 11008  01095C  0ED0               	movlw	-48
 11009  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11010  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11011  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11012  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11013  010976  ECC1  F08E         	call	___flmul	;wreg free
 11014                           
 11015                           ;stkvar	_l @ sp[(-56)+20]
 11016  01097A  0EDC               	movlw	-36
 11017  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11018  010982  0EDD               	movlw	-35
 11019  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11020  01098A  0EDE               	movlw	-34
 11021  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11022  010992  0EDF               	movlw	-33
 11023  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11024                           
 11025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11026                           ;stkvar	_l @ sp[(-56)+20]
 11027  01099A  0EDC               	movlw	-36
 11028  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11029  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11030  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11031  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11032                           
 11033                           ;stkvar	_h @ sp[(-60)+24]
 11034  0109B4  0EDC               	movlw	-36
 11035  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11036  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11037  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11038  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11039  0109CE  ECEC  F0B0         	call	___flge	;wreg free
 11040  0109D2  A032               	btfss	btemp& (0+255),0,c
 11041  0109D4  D021               	goto	u9400
 11042                           
 11043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11044                           ;stkvar	_l @ sp[(-56)+20]
 11045                           
 11046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11047                           
 11048                           ;stkvar	_l @ sp[(-56)+20]
 11049                           
 11050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11051  0109D6  0EDC               	movlw	-36
 11052  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11053  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11054  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11055  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11056                           
 11057                           ;stkvar	_h @ sp[(-60)+24]
 11058  0109F0  0EDC               	movlw	-36
 11059  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11060  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11061  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11062  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11063  010A0A  EC8C  F0B7         	call	___fleq	;wreg free
 11064  010A0E  A032               	btfss	btemp& (0+255),0,c
 11065  010A10  D01B               	goto	l9530
 11066                           
 11067                           ;stkvar	_d @ sp[(-56)+44]
 11068  010A12  0EF4               	movlw	-12
 11069  010A14  B0E3               	btfsc	plusw1,0,c
 11070  010A16  D018               	goto	l9530
 11071  010A18                     u9400:
 11072                           
 11073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11074  010A18  0E00               	movlw	0
 11075  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11076  010A1C  0E00               	movlw	0
 11077  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11078  010A20  0E00               	movlw	0
 11079  010A22  6E3C               	movwf	(btemp+10)^0,c
 11080  010A24  0E00               	movlw	0
 11081  010A26  6E3D               	movwf	(btemp+11)^0,c
 11082                           
 11083                           ;stkvar	_l @ sp[(-56)+20]
 11084  010A28  0EDC               	movlw	-36
 11085  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11086  010A30  0EDD               	movlw	-35
 11087  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11088  010A38  0EDE               	movlw	-34
 11089  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11090  010A40  0EDF               	movlw	-33
 11091  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11092  010A48                     l9530:
 11093                           
 11094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11095                           ;stkvar	_l @ sp[(-56)+20]
 11096  010A48  0EDC               	movlw	-36
 11097  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11098  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11099  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11100  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11101                           
 11102                           ;stkvar	_g @ sp[(-60)+16]
 11103  010A62  0ED4               	movlw	-44
 11104  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11105  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11106  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11107  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11108  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11109                           
 11110                           ;stkvar	_h @ sp[(-56)+24]
 11111  010A80  0EE0               	movlw	-32
 11112  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11113  010A88  0EE1               	movlw	-31
 11114  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11115  010A90  0EE2               	movlw	-30
 11116  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11117  010A98  0EE3               	movlw	-29
 11118  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11119                           
 11120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11121                           ;stkvar	_ou @ sp[(-56)+28]
 11122  010AA0  0EE4               	movlw	-28
 11123  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11124  010AA8  0EE5               	movlw	-27
 11125  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11126  010AB0  0EE6               	movlw	-26
 11127  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11128  010AB8  0EE7               	movlw	-25
 11129  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11130                           
 11131                           ;stkvar	_u @ sp[(-56)+12]
 11132  010AC0  0ED4               	movlw	-44
 11133  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11134  010AC8  0ED5               	movlw	-43
 11135  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11136  010AD0  0ED6               	movlw	-42
 11137  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11138  010AD8  0ED7               	movlw	-41
 11139  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11140                           
 11141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11142                           ;stkvar	_nmode @ sp[(-56)+55]
 11143  010AE0  0EFF               	movlw	-1
 11144  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11145  010AE8  0E65               	movlw	101
 11146  010AEA  1832               	xorwf	btemp^0,w,c
 11147  010AEC  B4D8               	btfsc	status,2,c
 11148  010AEE  D011               	goto	l9538
 11149                           
 11150                           ;stkvar	_e @ sp[(-56)+34]
 11151                           ;stkvar	_ne @ sp[(-56)+46]
 11152  010AF0  0EEA               	movlw	-22
 11153  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11154  010AF8  0EF6               	movlw	-10
 11155  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11156  010B00  0EEB               	movlw	-21
 11157  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11158  010B08  0EF7               	movlw	-9
 11159  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11160  010B10  D004               	goto	l1913
 11161  010B12                     l9538:
 11162                           
 11163                           ;stkvar	_ne @ sp[(-56)+46]
 11164  010B12  0EF6               	movlw	-10
 11165  010B14  6AE3               	clrf	plusw1,c
 11166  010B16  0EF7               	movlw	-9
 11167  010B18  6AE3               	clrf	plusw1,c
 11168  010B1A                     l1913:
 11169                           
 11170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11171                           ;stkvar	_pp @ sp[(-56)+50]
 11172  010B1A  0EFA               	movlw	-6
 11173  010B1C  6AE3               	clrf	plusw1,c
 11174  010B1E  0EFB               	movlw	-5
 11175  010B20  6AE3               	clrf	plusw1,c
 11176                           
 11177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11178                           ;stkvar	_t @ sp[(-56)+52]
 11179  010B22  0EFC               	movlw	-4
 11180  010B24  6AE3               	clrf	plusw1,c
 11181  010B26  0EFD               	movlw	-3
 11182  010B28  6AE3               	clrf	plusw1,c
 11183                           
 11184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11185                           ;stkvar	_i @ sp[(-56)+36]
 11186  010B2A  0EEC               	movlw	-20
 11187  010B2C  6AE3               	clrf	plusw1,c
 11188  010B2E  0EED               	movlw	-19
 11189  010B30  6AE3               	clrf	plusw1,c
 11190                           
 11191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11192  010B32  D1B7               	goto	l9590
 11193  010B34                     l9540:
 11194                           
 11195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11196                           ;stkvar	_u @ sp[(-56)+12]
 11197  010B34  0ED4               	movlw	-44
 11198  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11199  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11200  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11201  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11202                           
 11203                           ;stkvar	_h @ sp[(-60)+24]
 11204  010B4E  0EDC               	movlw	-36
 11205  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11206  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11207  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11208  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11209  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11210  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11211  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11212  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11213  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11214  010B84  EC43  F0A2         	call	_floorf	;wreg free
 11215                           
 11216                           ;stkvar	_l @ sp[(-56)+20]
 11217  010B88  0EDC               	movlw	-36
 11218  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11219  010B90  0EDD               	movlw	-35
 11220  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11221  010B98  0EDE               	movlw	-34
 11222  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11223  010BA0  0EDF               	movlw	-33
 11224  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11225                           
 11226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11227                           ;stkvar	_l @ sp[(-56)+20]
 11228  010BA8  0EDC               	movlw	-36
 11229  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11230  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11231  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11232  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11233  010BC2  EC33  F0B0         	call	___fltol	;wreg free
 11234  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11235  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11236                           
 11237                           ;stkvar	_d @ sp[(-56)+44]
 11238  010BD2  0EF4               	movlw	-12
 11239  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11240  010BDA  0EF5               	movlw	-11
 11241  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11242                           
 11243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11244  010BE2  B81F               	btfsc	_flags^0,4,c
 11245  010BE4  D026               	goto	l9554
 11246                           
 11247                           ;stkvar	_d @ sp[(-56)+44]
 11248  010BE6  0EF4               	movlw	-12
 11249  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11250  010BEE  0EF5               	movlw	-11
 11251  010BF0  50E3               	movf	plusw1,w,c
 11252  010BF2  1032               	iorwf	btemp^0,w,c
 11253  010BF4  A4D8               	btfss	status,2,c
 11254  010BF6  D01D               	goto	l9554
 11255                           
 11256                           ;stkvar	_mode @ sp[(-56)+54]
 11257  010BF8  0EFE               	movlw	-2
 11258  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11259  010C00  0E67               	movlw	103
 11260  010C02  1832               	xorwf	btemp^0,w,c
 11261  010C04  A4D8               	btfss	status,2,c
 11262  010C06  D015               	goto	l9554
 11263                           
 11264                           ;stkvar	_ne @ sp[(-56)+46]
 11265  010C08  0EF7               	movlw	-9
 11266  010C0A  AEE3               	btfss	plusw1,7,c
 11267  010C0C  D012               	goto	l9554
 11268                           
 11269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11270                           ;stkvar	_t @ sp[(-56)+52]
 11271  010C0E  0EFC               	movlw	-4
 11272  010C10  50E3               	movf	plusw1,w,c
 11273  010C12  0F01               	addlw	1
 11274  010C14  6E32               	movwf	btemp^0,c
 11275  010C16  0EFC               	movlw	-4
 11276  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11277  010C1E  6A32               	clrf	btemp^0,c
 11278  010C20  0EFD               	movlw	-3
 11279  010C22  50E3               	movf	plusw1,w,c
 11280  010C24  2032               	addwfc	btemp^0,w,c
 11281  010C26  6E32               	movwf	btemp^0,c
 11282  010C28  0EFD               	movlw	-3
 11283  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11284                           
 11285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11286  010C30  D0AF               	goto	l9582
 11287  010C32                     l9554:
 11288                           
 11289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11290                           ;stkvar	_pp @ sp[(-56)+50]
 11291  010C32  0EFA               	movlw	-6
 11292  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11293  010C3A  0EFB               	movlw	-5
 11294  010C3C  50E3               	movf	plusw1,w,c
 11295  010C3E  1032               	iorwf	btemp^0,w,c
 11296  010C40  A4D8               	btfss	status,2,c
 11297  010C42  D070               	goto	l9574
 11298                           
 11299                           ;stkvar	_ne @ sp[(-56)+46]
 11300  010C44  0EF7               	movlw	-9
 11301  010C46  AEE3               	btfss	plusw1,7,c
 11302  010C48  D06D               	goto	l9574
 11303                           
 11304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11305                           ;stkvar	_n @ sp[(-56)+32]
 11306  010C4A  0EE8               	movlw	-24
 11307  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11308  010C52  0EE9               	movlw	-23
 11309  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11310  010C5A  0E78               	movlw	low _dbuf
 11311  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11312  010C5E  6ED9               	movwf	fsr2l,c
 11313  010C60  0E01               	movlw	high _dbuf
 11314  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11315  010C64  6EDA               	movwf	fsr2h,c
 11316  010C66  0E2E               	movlw	46
 11317  010C68  6EDF               	movwf	indf2,c
 11318                           
 11319                           ;stkvar	_n @ sp[(-56)+32]
 11320  010C6A  0EE8               	movlw	-24
 11321  010C6C  50E3               	movf	plusw1,w,c
 11322  010C6E  0F01               	addlw	1
 11323  010C70  6E32               	movwf	btemp^0,c
 11324  010C72  0EE8               	movlw	-24
 11325  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11326  010C7A  6A32               	clrf	btemp^0,c
 11327  010C7C  0EE9               	movlw	-23
 11328  010C7E  50E3               	movf	plusw1,w,c
 11329  010C80  2032               	addwfc	btemp^0,w,c
 11330  010C82  6E32               	movwf	btemp^0,c
 11331  010C84  0EE9               	movlw	-23
 11332  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11333                           
 11334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11335                           ;stkvar	_w @ sp[(-56)+38]
 11336  010C8C  50E1               	movf	fsr1l,w,c
 11337  010C8E  0FEE               	addlw	-18
 11338  010C90  6ED9               	movwf	fsr2l,c
 11339  010C92  50E2               	movf	fsr1h,w,c
 11340  010C94  6EDA               	movwf	fsr2h,c
 11341  010C96  0EFF               	movlw	255
 11342  010C98  22DA               	addwfc	fsr2h,f,c
 11343  010C9A  06DE               	decf	postinc2,f,c
 11344  010C9C  0E00               	movlw	0
 11345  010C9E  5ADD               	subwfb	postdec2,f,c
 11346                           
 11347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11348  010CA0  0E01               	movlw	1
 11349  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11350  010CA4  0E00               	movlw	0
 11351  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11352                           
 11353                           ;stkvar	_pp @ sp[(-56)+50]
 11354  010CA8  0EFA               	movlw	-6
 11355  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11356  010CB0  0EFB               	movlw	-5
 11357  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11358  010CB8  D035               	goto	l9574
 11359  010CBA                     l9566:
 11360                           
 11361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11362                           ;stkvar	_n @ sp[(-56)+32]
 11363  010CBA  0EE8               	movlw	-24
 11364  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11365  010CC2  0EE9               	movlw	-23
 11366  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11367  010CCA  0E78               	movlw	low _dbuf
 11368  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11369  010CCE  6ED9               	movwf	fsr2l,c
 11370  010CD0  0E01               	movlw	high _dbuf
 11371  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11372  010CD4  6EDA               	movwf	fsr2h,c
 11373  010CD6  0E30               	movlw	48
 11374  010CD8  6EDF               	movwf	indf2,c
 11375                           
 11376                           ;stkvar	_n @ sp[(-56)+32]
 11377  010CDA  0EE8               	movlw	-24
 11378  010CDC  50E3               	movf	plusw1,w,c
 11379  010CDE  0F01               	addlw	1
 11380  010CE0  6E32               	movwf	btemp^0,c
 11381  010CE2  0EE8               	movlw	-24
 11382  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11383  010CEA  6A32               	clrf	btemp^0,c
 11384  010CEC  0EE9               	movlw	-23
 11385  010CEE  50E3               	movf	plusw1,w,c
 11386  010CF0  2032               	addwfc	btemp^0,w,c
 11387  010CF2  6E32               	movwf	btemp^0,c
 11388  010CF4  0EE9               	movlw	-23
 11389  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11390                           
 11391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11392                           ;stkvar	_w @ sp[(-56)+38]
 11393  010CFC  50E1               	movf	fsr1l,w,c
 11394  010CFE  0FEE               	addlw	-18
 11395  010D00  6ED9               	movwf	fsr2l,c
 11396  010D02  50E2               	movf	fsr1h,w,c
 11397  010D04  6EDA               	movwf	fsr2h,c
 11398  010D06  0EFF               	movlw	255
 11399  010D08  22DA               	addwfc	fsr2h,f,c
 11400  010D0A  06DE               	decf	postinc2,f,c
 11401  010D0C  0E00               	movlw	0
 11402  010D0E  5ADD               	subwfb	postdec2,f,c
 11403                           
 11404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11405                           ;stkvar	_t @ sp[(-56)+52]
 11406  010D10  50E1               	movf	fsr1l,w,c
 11407  010D12  0FFC               	addlw	-4
 11408  010D14  6ED9               	movwf	fsr2l,c
 11409  010D16  50E2               	movf	fsr1h,w,c
 11410  010D18  6EDA               	movwf	fsr2h,c
 11411  010D1A  0EFF               	movlw	255
 11412  010D1C  22DA               	addwfc	fsr2h,f,c
 11413  010D1E  06DE               	decf	postinc2,f,c
 11414  010D20  0E00               	movlw	0
 11415  010D22  5ADD               	subwfb	postdec2,f,c
 11416  010D24                     l9574:
 11417                           
 11418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11419                           ;stkvar	_t @ sp[(-56)+52]
 11420  010D24  0EFC               	movlw	-4
 11421  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11422  010D2C  0EFD               	movlw	-3
 11423  010D2E  50E3               	movf	plusw1,w,c
 11424  010D30  1032               	iorwf	btemp^0,w,c
 11425  010D32  A4D8               	btfss	status,2,c
 11426  010D34  D7C2               	goto	l9566
 11427                           
 11428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11429                           ;stkvar	_n @ sp[(-56)+32]
 11430  010D36  0EE8               	movlw	-24
 11431  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11432  010D3E  0EE9               	movlw	-23
 11433  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11434  010D46  0E78               	movlw	low _dbuf
 11435  010D48  243C               	addwf	(btemp+10)^0,w,c
 11436  010D4A  6ED9               	movwf	fsr2l,c
 11437  010D4C  0E01               	movlw	high _dbuf
 11438  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11439  010D50  6EDA               	movwf	fsr2h,c
 11440                           
 11441                           ;stkvar	_d @ sp[(-56)+44]
 11442  010D52  0EF4               	movlw	-12
 11443  010D54  50E3               	movf	plusw1,w,c
 11444  010D56  0F30               	addlw	48
 11445  010D58  6EDF               	movwf	indf2,c
 11446                           
 11447                           ;stkvar	_n @ sp[(-56)+32]
 11448  010D5A  0EE8               	movlw	-24
 11449  010D5C  50E3               	movf	plusw1,w,c
 11450  010D5E  0F01               	addlw	1
 11451  010D60  6E32               	movwf	btemp^0,c
 11452  010D62  0EE8               	movlw	-24
 11453  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11454  010D6A  6A32               	clrf	btemp^0,c
 11455  010D6C  0EE9               	movlw	-23
 11456  010D6E  50E3               	movf	plusw1,w,c
 11457  010D70  2032               	addwfc	btemp^0,w,c
 11458  010D72  6E32               	movwf	btemp^0,c
 11459  010D74  0EE9               	movlw	-23
 11460  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11463                           ;stkvar	_w @ sp[(-56)+38]
 11464  010D7C  50E1               	movf	fsr1l,w,c
 11465  010D7E  0FEE               	addlw	-18
 11466  010D80  6ED9               	movwf	fsr2l,c
 11467  010D82  50E2               	movf	fsr1h,w,c
 11468  010D84  6EDA               	movwf	fsr2h,c
 11469  010D86  0EFF               	movlw	255
 11470  010D88  22DA               	addwfc	fsr2h,f,c
 11471  010D8A  06DE               	decf	postinc2,f,c
 11472  010D8C  0E00               	movlw	0
 11473  010D8E  5ADD               	subwfb	postdec2,f,c
 11474  010D90                     l9582:
 11475                           
 11476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11477                           ;stkvar	_u @ sp[(-56)+12]
 11478  010D90  0ED4               	movlw	-44
 11479  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11480  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11481  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11482  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11483                           
 11484                           ;stkvar	_l @ sp[(-60)+20]
 11485  010DAA  0ED8               	movlw	-40
 11486  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11487  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11488  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11489  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11490  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11491  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11492  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11493  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11494  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11495                           
 11496                           ;stkvar	_h @ sp[(-60)+24]
 11497  010DE0  0EDC               	movlw	-36
 11498  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11499  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11500  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11501  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11502  010DFA  ECA3  F0BE         	call	___flsub	;wreg free
 11503                           
 11504                           ;stkvar	_h @ sp[(-56)+24]
 11505  010DFE  0EE0               	movlw	-32
 11506  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11507  010E06  0EE1               	movlw	-31
 11508  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11509  010E0E  0EE2               	movlw	-30
 11510  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11511  010E16  0EE3               	movlw	-29
 11512  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11513                           
 11514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11515  010E1E  0E00               	movlw	0
 11516  010E20  6EE6               	movwf	postinc1,c
 11517  010E22  0E00               	movlw	0
 11518  010E24  6EE6               	movwf	postinc1,c
 11519  010E26  0E20               	movlw	32
 11520  010E28  6EE6               	movwf	postinc1,c
 11521  010E2A  0E41               	movlw	65
 11522  010E2C  6EE6               	movwf	postinc1,c
 11523                           
 11524                           ;stkvar	_u @ sp[(-60)+12]
 11525  010E2E  0ED0               	movlw	-48
 11526  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11527  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11528  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11529  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11530  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11531                           
 11532                           ;stkvar	_u @ sp[(-56)+12]
 11533  010E4C  0ED4               	movlw	-44
 11534  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11535  010E54  0ED5               	movlw	-43
 11536  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11537  010E5C  0ED6               	movlw	-42
 11538  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11539  010E64  0ED7               	movlw	-41
 11540  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11541                           
 11542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11543                           ;stkvar	_ne @ sp[(-56)+46]
 11544  010E6C  50E1               	movf	fsr1l,w,c
 11545  010E6E  0FF6               	addlw	-10
 11546  010E70  6ED9               	movwf	fsr2l,c
 11547  010E72  50E2               	movf	fsr1h,w,c
 11548  010E74  6EDA               	movwf	fsr2h,c
 11549  010E76  0EFF               	movlw	255
 11550  010E78  22DA               	addwfc	fsr2h,f,c
 11551  010E7A  06DE               	decf	postinc2,f,c
 11552  010E7C  0E00               	movlw	0
 11553  010E7E  5ADD               	subwfb	postdec2,f,c
 11554                           
 11555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11556                           ;stkvar	_i @ sp[(-56)+36]
 11557  010E80  0EEC               	movlw	-20
 11558  010E82  50E3               	movf	plusw1,w,c
 11559  010E84  0F01               	addlw	1
 11560  010E86  6E32               	movwf	btemp^0,c
 11561  010E88  0EEC               	movlw	-20
 11562  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11563  010E90  6A32               	clrf	btemp^0,c
 11564  010E92  0EED               	movlw	-19
 11565  010E94  50E3               	movf	plusw1,w,c
 11566  010E96  2032               	addwfc	btemp^0,w,c
 11567  010E98  6E32               	movwf	btemp^0,c
 11568  010E9A  0EED               	movlw	-19
 11569  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11570  010EA2                     l9590:
 11571                           
 11572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11573                           ;stkvar	_m @ sp[(-56)+48]
 11574                           ;stkvar	_i @ sp[(-56)+36]
 11575  010EA2  50E1               	movf	fsr1l,w,c
 11576  010EA4  0FEC               	addlw	-20
 11577  010EA6  6ED9               	movwf	fsr2l,c
 11578  010EA8  50E2               	movf	fsr1h,w,c
 11579  010EAA  6EDA               	movwf	fsr2h,c
 11580  010EAC  0EFF               	movlw	255
 11581  010EAE  22DA               	addwfc	fsr2h,f,c
 11582  010EB0  0EF8               	movlw	-8
 11583  010EB2  50E3               	movf	plusw1,w,c
 11584  010EB4  5CDE               	subwf	postinc2,w,c
 11585  010EB6  50DE               	movf	postinc2,w,c
 11586  010EB8  0A80               	xorlw	128
 11587  010EBA  6E32               	movwf	btemp^0,c
 11588  010EBC  0EF9               	movlw	-7
 11589  010EBE  50E3               	movf	plusw1,w,c
 11590  010EC0  0A80               	xorlw	128
 11591  010EC2  5832               	subwfb	btemp^0,w,c
 11592  010EC4  B0D8               	btfsc	status,0,c
 11593  010EC6  D00E               	goto	u9500
 11594                           
 11595                           ;stkvar	_n @ sp[(-56)+32]
 11596  010EC8  0EE9               	movlw	-23
 11597  010ECA  BEE3               	btfsc	plusw1,7,c
 11598  010ECC  D633               	goto	l9540
 11599  010ECE  0EE9               	movlw	-23
 11600  010ED0  50E3               	movf	plusw1,w,c
 11601  010ED2  E108               	bnz	u9500
 11602  010ED4  0EE8               	movlw	-24
 11603  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11604  010EDC  0E4B               	movlw	75
 11605  010EDE  5E32               	subwf	btemp^0,f,c
 11606  010EE0  A0D8               	btfss	status,0,c
 11607  010EE2  D628               	goto	l9540
 11608  010EE4                     u9500:
 11609                           
 11610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11611                           ;stkvar	_pp @ sp[(-56)+50]
 11612  010EE4  0EFA               	movlw	-6
 11613  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11614  010EEC  0EFB               	movlw	-5
 11615  010EEE  50E3               	movf	plusw1,w,c
 11616  010EF0  1032               	iorwf	btemp^0,w,c
 11617  010EF2  B4D8               	btfsc	status,2,c
 11618  010EF4  A81F               	btfss	_flags^0,4,c
 11619  010EF6  D021               	goto	l9602
 11620                           
 11621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11622                           ;stkvar	_n @ sp[(-56)+32]
 11623  010EF8  0EE8               	movlw	-24
 11624  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11625  010F00  0EE9               	movlw	-23
 11626  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11627  010F08  0E78               	movlw	low _dbuf
 11628  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11629  010F0C  6ED9               	movwf	fsr2l,c
 11630  010F0E  0E01               	movlw	high _dbuf
 11631  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11632  010F12  6EDA               	movwf	fsr2h,c
 11633  010F14  0E2E               	movlw	46
 11634  010F16  6EDF               	movwf	indf2,c
 11635                           
 11636                           ;stkvar	_n @ sp[(-56)+32]
 11637  010F18  0EE8               	movlw	-24
 11638  010F1A  50E3               	movf	plusw1,w,c
 11639  010F1C  0F01               	addlw	1
 11640  010F1E  6E32               	movwf	btemp^0,c
 11641  010F20  0EE8               	movlw	-24
 11642  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11643  010F28  6A32               	clrf	btemp^0,c
 11644  010F2A  0EE9               	movlw	-23
 11645  010F2C  50E3               	movf	plusw1,w,c
 11646  010F2E  2032               	addwfc	btemp^0,w,c
 11647  010F30  6E32               	movwf	btemp^0,c
 11648  010F32  0EE9               	movlw	-23
 11649  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11650  010F3A                     l9602:
 11651                           
 11652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11653                           ;stkvar	_n @ sp[(-56)+32]
 11654  010F3A  0EE8               	movlw	-24
 11655  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11656  010F42  0EE9               	movlw	-23
 11657  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11658  010F4A  0E78               	movlw	low _dbuf
 11659  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11660  010F4E  6ED9               	movwf	fsr2l,c
 11661  010F50  0E01               	movlw	high _dbuf
 11662  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11663  010F54  6EDA               	movwf	fsr2h,c
 11664  010F56  0E00               	movlw	0
 11665  010F58  6EDF               	movwf	indf2,c
 11666                           
 11667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11668                           ;stkvar	_nmode @ sp[(-56)+55]
 11669  010F5A  0EFF               	movlw	-1
 11670  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11671  010F62  0E65               	movlw	101
 11672  010F64  1832               	xorwf	btemp^0,w,c
 11673  010F66  A4D8               	btfss	status,2,c
 11674  010F68  EF16  F081         	goto	l9406
 11675                           
 11676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11677  010F6C  0E4F               	movlw	79
 11678  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11679  010F70  0E00               	movlw	0
 11680  010F72  6E3D               	movwf	(btemp+11)^0,c
 11681                           
 11682                           ;stkvar	_i @ sp[(-56)+36]
 11683  010F74  0EEC               	movlw	-20
 11684  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11685  010F7C  0EED               	movlw	-19
 11686  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11687                           
 11688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11689                           ;stkvar	_i @ sp[(-56)+36]
 11690  010F84  0EEC               	movlw	-20
 11691  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11692  010F8C  0EED               	movlw	-19
 11693  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11694  010F94  0E78               	movlw	low _dbuf
 11695  010F96  243C               	addwf	(btemp+10)^0,w,c
 11696  010F98  6ED9               	movwf	fsr2l,c
 11697  010F9A  0E01               	movlw	high _dbuf
 11698  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 11699  010F9E  6EDA               	movwf	fsr2h,c
 11700  010FA0  0E00               	movlw	0
 11701  010FA2  6EDF               	movwf	indf2,c
 11702                           
 11703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11704                           ;stkvar	_sign @ sp[(-56)+42]
 11705  010FA4  0EF2               	movlw	-14
 11706  010FA6  6AE3               	clrf	plusw1,c
 11707  010FA8  0EF3               	movlw	-13
 11708  010FAA  6AE3               	clrf	plusw1,c
 11709                           
 11710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11711                           ;stkvar	_e @ sp[(-56)+34]
 11712  010FAC  0EEB               	movlw	-21
 11713  010FAE  AEE3               	btfss	plusw1,7,c
 11714  010FB0  D012               	goto	l9616
 11715                           
 11716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11717  010FB2  0E01               	movlw	1
 11718  010FB4  6E3C               	movwf	(btemp+10)^0,c
 11719  010FB6  0E00               	movlw	0
 11720  010FB8  6E3D               	movwf	(btemp+11)^0,c
 11721                           
 11722                           ;stkvar	_sign @ sp[(-56)+42]
 11723  010FBA  0EF2               	movlw	-14
 11724  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11725  010FC2  0EF3               	movlw	-13
 11726  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11727                           
 11728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11729                           ;stkvar	_e @ sp[(-56)+34]
 11730                           ;stkvar	_e @ sp[(-56)+34]
 11731  010FCA  0EEA               	movlw	-22
 11732  010FCC  6CE3               	negf	plusw1,c
 11733  010FCE  0EEB               	movlw	-21
 11734  010FD0  1EE3               	comf	plusw1,f,c
 11735  010FD2  B0D8               	btfsc	status,0,c
 11736  010FD4  2AE3               	incf	plusw1,f,c
 11737  010FD6                     l9616:
 11738                           
 11739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11740  010FD6  0E02               	movlw	2
 11741  010FD8  6E3C               	movwf	(btemp+10)^0,c
 11742  010FDA  0E00               	movlw	0
 11743  010FDC  6E3D               	movwf	(btemp+11)^0,c
 11744                           
 11745                           ;stkvar	_p @ sp[(-56)+40]
 11746  010FDE  0EF0               	movlw	-16
 11747  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11748  010FE6  0EF1               	movlw	-15
 11749  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11750                           
 11751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11752  010FEE  D051               	goto	l9628
 11753  010FF0                     l9618:
 11754                           
 11755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11756                           ;stkvar	_i @ sp[(-56)+36]
 11757  010FF0  50E1               	movf	fsr1l,w,c
 11758  010FF2  0FEC               	addlw	-20
 11759  010FF4  6ED9               	movwf	fsr2l,c
 11760  010FF6  50E2               	movf	fsr1h,w,c
 11761  010FF8  6EDA               	movwf	fsr2h,c
 11762  010FFA  0EFF               	movlw	255
 11763  010FFC  22DA               	addwfc	fsr2h,f,c
 11764  010FFE  06DE               	decf	postinc2,f,c
 11765  011000  0E00               	movlw	0
 11766  011002  5ADD               	subwfb	postdec2,f,c
 11767                           
 11768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11769                           ;stkvar	_i @ sp[(-56)+36]
 11770  011004  0EEC               	movlw	-20
 11771  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 11772  01100C  0EED               	movlw	-19
 11773  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11774  011014  0E78               	movlw	low _dbuf
 11775  011016  243C               	addwf	(btemp+10)^0,w,c
 11776  011018  6ED9               	movwf	fsr2l,c
 11777  01101A  0E01               	movlw	high _dbuf
 11778  01101C  203D               	addwfc	(btemp+11)^0,w,c
 11779  01101E  6EDA               	movwf	fsr2h,c
 11780  011020  0E0A               	movlw	10
 11781  011022  6EE6               	movwf	postinc1,c
 11782  011024  0E00               	movlw	0
 11783  011026  6EE6               	movwf	postinc1,c
 11784                           
 11785                           ;stkvar	_e @ sp[(-58)+34]
 11786  011028  0EE8               	movlw	-24
 11787  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11788  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11789  011036  EC11  F0B4         	call	___awmod	;wreg free
 11790  01103A  5032               	movf	btemp^0,w,c
 11791  01103C  0F30               	addlw	48
 11792  01103E  6EDF               	movwf	indf2,c
 11793                           
 11794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11795  011040  0E0A               	movlw	10
 11796  011042  6EE6               	movwf	postinc1,c
 11797  011044  0E00               	movlw	0
 11798  011046  6EE6               	movwf	postinc1,c
 11799                           
 11800                           ;stkvar	_e @ sp[(-58)+34]
 11801  011048  0EE8               	movlw	-24
 11802  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11803  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11804  011056  EC9D  F0B1         	call	___awdiv	;wreg free
 11805                           
 11806                           ;stkvar	_e @ sp[(-56)+34]
 11807  01105A  0EEA               	movlw	-22
 11808  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11809  011062  0EEB               	movlw	-21
 11810  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11811                           
 11812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11813                           ;stkvar	_p @ sp[(-56)+40]
 11814  01106A  50E1               	movf	fsr1l,w,c
 11815  01106C  0FF0               	addlw	-16
 11816  01106E  6ED9               	movwf	fsr2l,c
 11817  011070  50E2               	movf	fsr1h,w,c
 11818  011072  6EDA               	movwf	fsr2h,c
 11819  011074  0EFF               	movlw	255
 11820  011076  22DA               	addwfc	fsr2h,f,c
 11821  011078  06DE               	decf	postinc2,f,c
 11822  01107A  0E00               	movlw	0
 11823  01107C  5ADD               	subwfb	postdec2,f,c
 11824                           
 11825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11826                           ;stkvar	_w @ sp[(-56)+38]
 11827  01107E  50E1               	movf	fsr1l,w,c
 11828  011080  0FEE               	addlw	-18
 11829  011082  6ED9               	movwf	fsr2l,c
 11830  011084  50E2               	movf	fsr1h,w,c
 11831  011086  6EDA               	movwf	fsr2h,c
 11832  011088  0EFF               	movlw	255
 11833  01108A  22DA               	addwfc	fsr2h,f,c
 11834  01108C  06DE               	decf	postinc2,f,c
 11835  01108E  0E00               	movlw	0
 11836  011090  5ADD               	subwfb	postdec2,f,c
 11837  011092                     l9628:
 11838                           
 11839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11840                           ;stkvar	_e @ sp[(-56)+34]
 11841  011092  0EEA               	movlw	-22
 11842  011094  006F FF8C  F032    	movff	plusw1,btemp
 11843  01109A  0EEB               	movlw	-21
 11844  01109C  50E3               	movf	plusw1,w,c
 11845  01109E  1032               	iorwf	btemp^0,w,c
 11846  0110A0  A4D8               	btfss	status,2,c
 11847  0110A2  D7A6               	goto	l9618
 11848                           
 11849                           ;stkvar	_p @ sp[(-56)+40]
 11850  0110A4  0EF1               	movlw	-15
 11851  0110A6  BEE3               	btfsc	plusw1,7,c
 11852  0110A8  D007               	goto	u9560
 11853  0110AA  0EF1               	movlw	-15
 11854  0110AC  50E3               	movf	plusw1,w,c
 11855  0110AE  E1A0               	bnz	l9618
 11856  0110B0  0EF0               	movlw	-16
 11857  0110B2  04E3               	decf	plusw1,w,c
 11858  0110B4  B0D8               	btfsc	status,0,c
 11859  0110B6  D79C               	goto	l9618
 11860  0110B8                     u9560:
 11861                           
 11862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11863                           ;stkvar	_i @ sp[(-56)+36]
 11864  0110B8  50E1               	movf	fsr1l,w,c
 11865  0110BA  0FEC               	addlw	-20
 11866  0110BC  6ED9               	movwf	fsr2l,c
 11867  0110BE  50E2               	movf	fsr1h,w,c
 11868  0110C0  6EDA               	movwf	fsr2h,c
 11869  0110C2  0EFF               	movlw	255
 11870  0110C4  22DA               	addwfc	fsr2h,f,c
 11871  0110C6  06DE               	decf	postinc2,f,c
 11872  0110C8  0E00               	movlw	0
 11873  0110CA  5ADD               	subwfb	postdec2,f,c
 11874                           
 11875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11876                           ;stkvar	_sign @ sp[(-56)+42]
 11877  0110CC  0EF2               	movlw	-14
 11878  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 11879  0110D4  0EF3               	movlw	-13
 11880  0110D6  50E3               	movf	plusw1,w,c
 11881  0110D8  1032               	iorwf	btemp^0,w,c
 11882  0110DA  A4D8               	btfss	status,2,c
 11883  0110DC  D002               	goto	l9638
 11884  0110DE  0E2B               	movlw	43
 11885  0110E0  D001               	goto	L9
 11886  0110E2                     l9638:
 11887  0110E2  0E2D               	movlw	45
 11888  0110E4                     L9:
 11889  0110E4  6E3C               	movwf	(btemp+10)^0,c
 11890  0110E6  0E00               	movlw	0
 11891  0110E8  6E3D               	movwf	(btemp+11)^0,c
 11892                           
 11893                           ;stkvar	_efgtoa$4401 @ sp[(-56)+4]
 11894  0110EA  0ECC               	movlw	-52
 11895  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11896  0110F2  0ECD               	movlw	-51
 11897  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11898                           
 11899                           ;stkvar	_efgtoa$4401 @ sp[(-56)+4]
 11900                           ;stkvar	_i @ sp[(-56)+36]
 11901  0110FA  0EEC               	movlw	-20
 11902  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11903  011102  0EED               	movlw	-19
 11904  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 11905  01110A  0E78               	movlw	low _dbuf
 11906  01110C  243C               	addwf	(btemp+10)^0,w,c
 11907  01110E  6ED9               	movwf	fsr2l,c
 11908  011110  0E01               	movlw	high _dbuf
 11909  011112  203D               	addwfc	(btemp+11)^0,w,c
 11910  011114  6EDA               	movwf	fsr2h,c
 11911  011116  0ECC               	movlw	-52
 11912  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11913                           
 11914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11915                           ;stkvar	_w @ sp[(-56)+38]
 11916  01111E  50E1               	movf	fsr1l,w,c
 11917  011120  0FEE               	addlw	-18
 11918  011122  6ED9               	movwf	fsr2l,c
 11919  011124  50E2               	movf	fsr1h,w,c
 11920  011126  6EDA               	movwf	fsr2h,c
 11921  011128  0EFF               	movlw	255
 11922  01112A  22DA               	addwfc	fsr2h,f,c
 11923  01112C  06DE               	decf	postinc2,f,c
 11924  01112E  0E00               	movlw	0
 11925  011130  5ADD               	subwfb	postdec2,f,c
 11926                           
 11927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11928                           ;stkvar	_i @ sp[(-56)+36]
 11929  011132  50E1               	movf	fsr1l,w,c
 11930  011134  0FEC               	addlw	-20
 11931  011136  6ED9               	movwf	fsr2l,c
 11932  011138  50E2               	movf	fsr1h,w,c
 11933  01113A  6EDA               	movwf	fsr2h,c
 11934  01113C  0EFF               	movlw	255
 11935  01113E  22DA               	addwfc	fsr2h,f,c
 11936  011140  06DE               	decf	postinc2,f,c
 11937  011142  0E00               	movlw	0
 11938  011144  5ADD               	subwfb	postdec2,f,c
 11939  011146  0EBF               	movlw	191
 11940  011148  6E3C               	movwf	(btemp+10)^0,c
 11941  01114A  0EFF               	movlw	255
 11942  01114C  6E3D               	movwf	(btemp+11)^0,c
 11943                           
 11944                           ;stkvar	_c @ sp[(-56)+-7]
 11945  01114E  0EC1               	movlw	-63
 11946  011150  50E3               	movf	plusw1,w,c
 11947  011152  6E3A               	movwf	(btemp+8)^0,c
 11948  011154  6A3B               	clrf	(btemp+9)^0,c
 11949  011156  503C               	movf	(btemp+10)^0,w,c
 11950  011158  263A               	addwf	(btemp+8)^0,f,c
 11951  01115A  503D               	movf	(btemp+11)^0,w,c
 11952  01115C  223B               	addwfc	(btemp+9)^0,f,c
 11953  01115E  503B               	movf	(btemp+9)^0,w,c
 11954  011160  E106               	bnz	u9580
 11955  011162  0E1A               	movlw	26
 11956  011164  5C3A               	subwf	(btemp+8)^0,w,c
 11957  011166  B0D8               	btfsc	status,0,c
 11958  011168  D002               	goto	u9580
 11959  01116A  0E01               	movlw	1
 11960  01116C  D001               	goto	u9590
 11961  01116E                     u9580:
 11962  01116E  0E00               	movlw	0
 11963  011170                     u9590:
 11964  011170  6E3C               	movwf	(btemp+10)^0,c
 11965  011172  6A3D               	clrf	(btemp+11)^0,c
 11966                           
 11967                           ;stkvar	_efgtoa$4403 @ sp[(-56)+0]
 11968  011174  0EC8               	movlw	-56
 11969  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11970  01117C  0EC9               	movlw	-55
 11971  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11972                           
 11973                           ;stkvar	_efgtoa$4403 @ sp[(-56)+0]
 11974  011184  0EC8               	movlw	-56
 11975  011186  006F FF8C  F032    	movff	plusw1,btemp
 11976  01118C  0EC9               	movlw	-55
 11977  01118E  50E3               	movf	plusw1,w,c
 11978  011190  1032               	iorwf	btemp^0,w,c
 11979  011192  A4D8               	btfss	status,2,c
 11980  011194  D002               	goto	l9654
 11981  011196  0E65               	movlw	101
 11982  011198  D001               	goto	L10
 11983  01119A                     l9654:
 11984  01119A  0E45               	movlw	69
 11985  01119C                     L10:
 11986  01119C  6E3C               	movwf	(btemp+10)^0,c
 11987  01119E  0E00               	movlw	0
 11988  0111A0  6E3D               	movwf	(btemp+11)^0,c
 11989                           
 11990                           ;stkvar	_efgtoa$4402 @ sp[(-56)+2]
 11991  0111A2  0ECA               	movlw	-54
 11992  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11993  0111AA  0ECB               	movlw	-53
 11994  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11995                           
 11996                           ;stkvar	_efgtoa$4402 @ sp[(-56)+2]
 11997                           ;stkvar	_i @ sp[(-56)+36]
 11998  0111B2  0EEC               	movlw	-20
 11999  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12000  0111BA  0EED               	movlw	-19
 12001  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12002  0111C2  0E78               	movlw	low _dbuf
 12003  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12004  0111C6  6ED9               	movwf	fsr2l,c
 12005  0111C8  0E01               	movlw	high _dbuf
 12006  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12007  0111CC  6EDA               	movwf	fsr2h,c
 12008  0111CE  0ECA               	movlw	-54
 12009  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12010                           
 12011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12012                           ;stkvar	_w @ sp[(-56)+38]
 12013  0111D6  50E1               	movf	fsr1l,w,c
 12014  0111D8  0FEE               	addlw	-18
 12015  0111DA  6ED9               	movwf	fsr2l,c
 12016  0111DC  50E2               	movf	fsr1h,w,c
 12017  0111DE  6EDA               	movwf	fsr2h,c
 12018  0111E0  0EFF               	movlw	255
 12019  0111E2  22DA               	addwfc	fsr2h,f,c
 12020  0111E4  06DE               	decf	postinc2,f,c
 12021  0111E6  0E00               	movlw	0
 12022  0111E8  5ADD               	subwfb	postdec2,f,c
 12023                           
 12024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12025                           ;stkvar	_i @ sp[(-56)+36]
 12026  0111EA  0EEC               	movlw	-20
 12027  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12028  0111F2  0EED               	movlw	-19
 12029  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12030  0111FA  0E78               	movlw	low _dbuf
 12031  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12032  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12033  011200  0E01               	movlw	high _dbuf
 12034  011202  203D               	addwfc	(btemp+11)^0,w,c
 12035  011204  6E3B               	movwf	(btemp+9)^0,c
 12036  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12037  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12038                           
 12039                           ;stkvar	_n @ sp[(-58)+32]
 12040  011212  0E78               	movlw	low _dbuf
 12041  011214  6E3C               	movwf	(btemp+10)^0,c
 12042  011216  0E01               	movlw	high _dbuf
 12043  011218  6E3D               	movwf	(btemp+11)^0,c
 12044  01121A  0EE6               	movlw	-26
 12045  01121C  50E3               	movf	plusw1,w,c
 12046  01121E  263C               	addwf	(btemp+10)^0,f,c
 12047  011220  0EE7               	movlw	-25
 12048  011222  50E3               	movf	plusw1,w,c
 12049  011224  223D               	addwfc	(btemp+11)^0,f,c
 12050  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12051  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12052  011232  EC22  F0B7         	call	_strcpy	;wreg free
 12053  011236  EF16  F081         	goto	l9406
 12054  01123A                     l1869:
 12055                           
 12056                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12057  01123A  0EC1               	movlw	193
 12058  01123C  26E1               	addwf	fsr1l,f,c
 12059  01123E  0EFF               	movlw	255
 12060  011240  22E2               	addwfc	fsr1h,f,c
 12061  011242  0012               	return		;funcret
 12062  011244                     __end_of_efgtoa:
 12063                           	opt callstack 0
 12064                           
 12065 ;; *************** function _tolower *****************
 12066 ;; Defined at:
 12067 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;  c               2  [STACK] int 
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;		None
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  2  [STACK] int 
 12074 ;; Registers used:
 12075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/5
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12085 ;;Total ram usage:        0 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:    7
 12088 ;; This function calls:
 12089 ;;		_isupper
 12090 ;; This function is called by:
 12091 ;;		_efgtoa
 12092 ;;		_vfpfcnvrt
 12093 ;; This function uses a reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text44
 12097  0175FA                     __ptext44:
 12098                           	opt callstack 0
 12099  0175FA                     _tolower:
 12100                           	opt callstack 0
 12101                           
 12102                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12103  0175FA  52E6               	movf	postinc1,f,c
 12104  0175FC  52E6               	movf	postinc1,f,c
 12105                           
 12106                           ;stkvar	_c @ sp[(-2)+-2]
 12107                           
 12108                           ;incstack = 0
 12109  0175FE  0EFC               	movlw	-4
 12110  017600  50E3               	movf	plusw1,w,c
 12111  017602  0FBF               	addlw	191
 12112  017604  6E3C               	movwf	(btemp+10)^0,c
 12113  017606  0EFD               	movlw	-3
 12114  017608  006F FF8C  F03D    	movff	plusw1,btemp+11
 12115  01760E  0EFF               	movlw	255
 12116  017610  223D               	addwfc	(btemp+11)^0,f,c
 12117  017612  503D               	movf	(btemp+11)^0,w,c
 12118  017614  E106               	bnz	u5100
 12119  017616  0E1A               	movlw	26
 12120  017618  5C3C               	subwf	(btemp+10)^0,w,c
 12121  01761A  B0D8               	btfsc	status,0,c
 12122  01761C  D002               	goto	u5100
 12123  01761E  0E01               	movlw	1
 12124  017620  D001               	goto	u5110
 12125  017622                     u5100:
 12126  017622  0E00               	movlw	0
 12127  017624                     u5110:
 12128  017624  6E3C               	movwf	(btemp+10)^0,c
 12129  017626  6A3D               	clrf	(btemp+11)^0,c
 12130                           
 12131                           ;stkvar	_tolower$5069 @ sp[(-2)+0]
 12132  017628  0EFE               	movlw	-2
 12133  01762A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12134  017630  0EFF               	movlw	-1
 12135  017632  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12136                           
 12137                           ;stkvar	_tolower$5069 @ sp[(-2)+0]
 12138  017638  0EFE               	movlw	-2
 12139  01763A  006F FF8C  F032    	movff	plusw1,btemp
 12140  017640  0EFF               	movlw	-1
 12141  017642  50E3               	movf	plusw1,w,c
 12142  017644  1032               	iorwf	btemp^0,w,c
 12143  017646  B4D8               	btfsc	status,2,c
 12144  017648  D00D               	goto	l6432
 12145                           
 12146                           ;stkvar	_c @ sp[(-2)+-2]
 12147  01764A  0EFC               	movlw	-4
 12148  01764C  006F FF8C  F032    	movff	plusw1,btemp
 12149  017652  0EFD               	movlw	-3
 12150  017654  006F FF8C  F033    	movff	plusw1,btemp+1
 12151  01765A  0E20               	movlw	32
 12152  01765C  1232               	iorwf	btemp^0,f,c
 12153  01765E  0E00               	movlw	0
 12154  017660  1233               	iorwf	(btemp+1)^0,f,c
 12155  017662  D008               	goto	l2892
 12156  017664                     l6432:
 12157                           
 12158                           ;stkvar	_c @ sp[(-2)+-2]
 12159  017664  0EFC               	movlw	-4
 12160  017666  006F FF8C  F032    	movff	plusw1,btemp
 12161  01766C  0EFD               	movlw	-3
 12162  01766E  006F FF8C  F033    	movff	plusw1,btemp+1
 12163  017674                     l2892:
 12164                           
 12165                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12166  017674  52E5               	movf	postdec1,f,c
 12167  017676  52E5               	movf	postdec1,f,c
 12168  017678  52E5               	movf	postdec1,f,c
 12169  01767A  52E5               	movf	postdec1,f,c
 12170  01767C  0012               	return		;funcret
 12171  01767E                     __end_of_tolower:
 12172                           	opt callstack 0
 12173                           
 12174 ;; *************** function _isupper *****************
 12175 ;; Defined at:
 12176 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12177 ;; Parameters:    Size  Location     Type
 12178 ;;  c               2  [STACK] int 
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;		None
 12181 ;; Return value:  Size  Location     Type
 12182 ;;                  2  [STACK] int 
 12183 ;; Registers used:
 12184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12185 ;; Tracked objects:
 12186 ;;		On entry : 0/0
 12187 ;;		On exit  : 0/0
 12188 ;;		Unchanged: 0/0
 12189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12194 ;;Total ram usage:        0 bytes
 12195 ;; Hardware stack levels used:    1
 12196 ;; Hardware stack levels required when called:    6
 12197 ;; This function calls:
 12198 ;;		Nothing
 12199 ;; This function is called by:
 12200 ;;		_efgtoa
 12201 ;;		_xtoa
 12202 ;;		_vfpfcnvrt
 12203 ;;		_tolower
 12204 ;; This function uses a reentrant model
 12205 ;;
 12206                           
 12207                           	psect	text45
 12208  0180DA                     __ptext45:
 12209                           	opt callstack 0
 12210  0180DA                     _isupper:
 12211                           	opt callstack 17
 12212                           
 12213                           ;stkvar	_c @ sp[(0)+-2]
 12214                           
 12215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12216                           ;incstack = 0
 12217  0180DA  0EFE               	movlw	-2
 12218  0180DC  50E3               	movf	plusw1,w,c
 12219  0180DE  0FBF               	addlw	191
 12220  0180E0  6E3C               	movwf	(btemp+10)^0,c
 12221  0180E2  0EFF               	movlw	-1
 12222  0180E4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12223  0180EA  0EFF               	movlw	255
 12224  0180EC  223D               	addwfc	(btemp+11)^0,f,c
 12225  0180EE  503D               	movf	(btemp+11)^0,w,c
 12226  0180F0  E106               	bnz	u4500
 12227  0180F2  0E1A               	movlw	26
 12228  0180F4  5C3C               	subwf	(btemp+10)^0,w,c
 12229  0180F6  B0D8               	btfsc	status,0,c
 12230  0180F8  D002               	goto	u4500
 12231  0180FA  0E01               	movlw	1
 12232  0180FC  D001               	goto	u4510
 12233  0180FE                     u4500:
 12234  0180FE  0E00               	movlw	0
 12235  018100                     u4510:
 12236  018100  6E32               	movwf	btemp^0,c
 12237  018102  6A33               	clrf	(btemp+1)^0,c
 12238                           
 12239                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12240  018104  52E5               	movf	postdec1,f,c
 12241  018106  52E5               	movf	postdec1,f,c
 12242  018108  0012               	return		;funcret
 12243  01810A                     __end_of_isupper:
 12244                           	opt callstack 0
 12245                           
 12246 ;; *************** function _strcpy *****************
 12247 ;; Defined at:
 12248 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;  dest            2  [STACK] PTR unsigned char 
 12251 ;;		 -> dbuf(80), 
 12252 ;;  src             2  [STACK] PTR const unsigned char 
 12253 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12254 ;;		 -> dbuf(80), 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  d               2  [STACK] PTR unsigned char 
 12257 ;;		 -> dbuf(80), 
 12258 ;;  s               2  [STACK] PTR const unsigned char 
 12259 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12260 ;;		 -> dbuf(80), 
 12261 ;; Return value:  Size  Location     Type
 12262 ;;                  2  [STACK] PTR unsigned char 
 12263 ;; Registers used:
 12264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12265 ;; Tracked objects:
 12266 ;;		On entry : 0/5
 12267 ;;		On exit  : 0/0
 12268 ;;		Unchanged: 0/0
 12269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12274 ;;Total ram usage:        0 bytes
 12275 ;; Hardware stack levels used:    1
 12276 ;; Hardware stack levels required when called:    6
 12277 ;; This function calls:
 12278 ;;		Nothing
 12279 ;; This function is called by:
 12280 ;;		_efgtoa
 12281 ;; This function uses a reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text46
 12285  016E44                     __ptext46:
 12286                           	opt callstack 0
 12287  016E44                     _strcpy:
 12288                           	opt callstack 0
 12289                           
 12290                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12291  016E44  52E6               	movf	postinc1,f,c
 12292  016E46  52E6               	movf	postinc1,f,c
 12293  016E48  52E6               	movf	postinc1,f,c
 12294  016E4A  52E6               	movf	postinc1,f,c
 12295                           
 12296                           ;stkvar	_src @ sp[(-4)+-4]
 12297                           
 12298                           ;incstack = 0
 12299  016E4C  0EF8               	movlw	-8
 12300  016E4E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12301  016E54  0EF9               	movlw	-7
 12302  016E56  006F FF8C  F03D    	movff	plusw1,btemp+11
 12303                           
 12304                           ;stkvar	_s @ sp[(-4)+2]
 12305  016E5C  0EFF               	movlw	-1
 12306  016E5E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12307  016E64  0EFE               	movlw	-2
 12308  016E66  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12309                           
 12310                           ;stkvar	_dest @ sp[(-4)+-2]
 12311  016E6C  0EFA               	movlw	-6
 12312  016E6E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12313  016E74  0EFB               	movlw	-5
 12314  016E76  006F FF8C  F03D    	movff	plusw1,btemp+11
 12315                           
 12316                           ;stkvar	_d @ sp[(-4)+0]
 12317  016E7C  0EFD               	movlw	-3
 12318  016E7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12319  016E84  0EFC               	movlw	-4
 12320  016E86  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12321  016E8C                     l9280:
 12322                           
 12323                           ;stkvar	_s @ sp[(-4)+2]
 12324  016E8C  50E1               	movf	fsr1l,w,c
 12325  016E8E  0FFE               	addlw	-2
 12326  016E90  6ED9               	movwf	fsr2l,c
 12327  016E92  50E2               	movf	fsr1h,w,c
 12328  016E94  6EDA               	movwf	fsr2h,c
 12329  016E96  0EFF               	movlw	255
 12330  016E98  22DA               	addwfc	fsr2h,f,c
 12331  016E9A  006F FF7C  F03C    	movff	indf2,btemp+10
 12332  016EA0  0E01               	movlw	1
 12333  016EA2  26DE               	addwf	postinc2,f,c
 12334  016EA4  006F FF7C  F03D    	movff	indf2,btemp+11
 12335  016EAA  0E00               	movlw	0
 12336  016EAC  22DD               	addwfc	postdec2,f,c
 12337  016EAE  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12338  016EB4  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12339  016EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 12340  016EBC  6EF8               	movwf	tblptru,c
 12341                           
 12342                           ;stkvar	_d @ sp[(-4)+0]
 12343  016EBE  50E1               	movf	fsr1l,w,c
 12344  016EC0  0FFC               	addlw	-4
 12345  016EC2  6ED9               	movwf	fsr2l,c
 12346  016EC4  50E2               	movf	fsr1h,w,c
 12347  016EC6  6EDA               	movwf	fsr2h,c
 12348  016EC8  0EFF               	movlw	255
 12349  016ECA  22DA               	addwfc	fsr2h,f,c
 12350  016ECC  006F FF7C  F03C    	movff	indf2,btemp+10
 12351  016ED2  0E01               	movlw	1
 12352  016ED4  26DE               	addwf	postinc2,f,c
 12353  016ED6  006F FF7C  F03D    	movff	indf2,btemp+11
 12354  016EDC  0E00               	movlw	0
 12355  016EDE  22DD               	addwfc	postdec2,f,c
 12356  016EE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12357  016EE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12358  016EEC  0E1F               	movlw	(high __ramtop+-1)
 12359  016EEE  64F7               	cpfsgt	tblptrh,c
 12360  016EF0  D003               	bra	u8897
 12361  016EF2  0008               	tblrd		*
 12362  016EF4  50F5               	movf	tablat,w,c
 12363  016EF6  D007               	bra	u8890
 12364  016EF8                     u8897:
 12365  016EF8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12366  016EFE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12367  016F04  50EF               	movf	indf0,w,c
 12368  016F06                     u8890:
 12369  016F06  6EDF               	movwf	indf2,c
 12370  016F08  50DF               	movf	indf2,w,c
 12371  016F0A  A4D8               	btfss	status,2,c
 12372  016F0C  D7BF               	goto	l9280
 12373                           
 12374                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12375  016F0E  0EF8               	movlw	248
 12376  016F10  26E1               	addwf	fsr1l,f,c
 12377  016F12  0EFF               	movlw	255
 12378  016F14  22E2               	addwfc	fsr1h,f,c
 12379  016F16  0012               	return		;funcret
 12380  016F18                     __end_of_strcpy:
 12381                           	opt callstack 0
 12382                           
 12383 ;; *************** function _floorf *****************
 12384 ;; Defined at:
 12385 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  x               4  [STACK] float 
 12388 ;; Auto vars:     Size  Location     Type
 12389 ;;  u               4  [STACK] struct .
 12390 ;;  m               4  [STACK] unsigned long 
 12391 ;;  e               2  [STACK] int 
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  4  [STACK] float 
 12394 ;; Registers used:
 12395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/5
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12405 ;;Total ram usage:        0 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; Hardware stack levels required when called:    6
 12408 ;; This function calls:
 12409 ;;		Nothing
 12410 ;; This function is called by:
 12411 ;;		_efgtoa
 12412 ;; This function uses a reentrant model
 12413 ;;
 12414                           
 12415                           	psect	text47
 12416  014486                     __ptext47:
 12417                           	opt callstack 0
 12418  014486                     _floorf:
 12419                           	opt callstack 0
 12420                           
 12421                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12422  014486  0E0A               	movlw	10
 12423  014488  26E1               	addwf	fsr1l,f,c
 12424  01448A  0E00               	movlw	0
 12425  01448C  22E2               	addwfc	fsr1h,f,c
 12426                           
 12427                           ;incstack = 0
 12428  01448E  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12429  014494  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12430  01449A  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12431  0144A0  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12432                           
 12433                           ;stkvar	_u @ sp[(-10)+0]
 12434  0144A6  0EF6               	movlw	-10
 12435  0144A8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12436  0144AE  0EF7               	movlw	-9
 12437  0144B0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12438  0144B6  0EF8               	movlw	-8
 12439  0144B8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12440  0144BE  0EF9               	movlw	-7
 12441  0144C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12442                           
 12443                           ;stkvar	_x @ sp[(-10)+-4]
 12444  0144C6  0EF2               	movlw	-14
 12445  0144C8  006F FF8C  F03A    	movff	plusw1,btemp+8
 12446  0144CE  0EF3               	movlw	-13
 12447  0144D0  006F FF8C  F03B    	movff	plusw1,btemp+9
 12448  0144D6  0EF4               	movlw	-12
 12449  0144D8  006F FF8C  F03C    	movff	plusw1,btemp+10
 12450  0144DE  0EF5               	movlw	-11
 12451  0144E0  006F FF8C  F03D    	movff	plusw1,btemp+11
 12452                           
 12453                           ;stkvar	_u @ sp[(-10)+0]
 12454  0144E6  0EF6               	movlw	-10
 12455  0144E8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12456  0144EE  0EF7               	movlw	-9
 12457  0144F0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12458  0144F6  0EF8               	movlw	-8
 12459  0144F8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12460  0144FE  0EF9               	movlw	-7
 12461  014500  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12462  014506  0E81               	movlw	129
 12463  014508  6E3C               	movwf	(btemp+10)^0,c
 12464  01450A  0EFF               	movlw	255
 12465  01450C  6E3D               	movwf	(btemp+11)^0,c
 12466                           
 12467                           ;stkvar	_u @ sp[(-10)+0]
 12468  01450E  0EF6               	movlw	-10
 12469  014510  006F FF8C  F036    	movff	plusw1,btemp+4
 12470  014516  0EF7               	movlw	-9
 12471  014518  006F FF8C  F037    	movff	plusw1,btemp+5
 12472  01451E  0EF8               	movlw	-8
 12473  014520  006F FF8C  F038    	movff	plusw1,btemp+6
 12474  014526  0EF9               	movlw	-7
 12475  014528  006F FF8C  F039    	movff	plusw1,btemp+7
 12476  01452E  0E18               	movlw	24
 12477  014530  D005               	goto	u5130
 12478  014532                     u5135:
 12479  014532  90D8               	bcf	status,0,c
 12480  014534  3239               	rrcf	(btemp+7)^0,f,c
 12481  014536  3238               	rrcf	(btemp+6)^0,f,c
 12482  014538  3237               	rrcf	(btemp+5)^0,f,c
 12483  01453A  3236               	rrcf	(btemp+4)^0,f,c
 12484  01453C                     u5130:
 12485  01453C  2EE8               	decfsz	wreg,f,c
 12486  01453E  D7F9               	goto	u5135
 12487  014540  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12488  014546  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12489  01454C  0EFF               	movlw	255
 12490  01454E  163A               	andwf	(btemp+8)^0,f,c
 12491  014550  0E00               	movlw	0
 12492  014552  163B               	andwf	(btemp+9)^0,f,c
 12493  014554  503C               	movf	(btemp+10)^0,w,c
 12494  014556  263A               	addwf	(btemp+8)^0,f,c
 12495  014558  503D               	movf	(btemp+11)^0,w,c
 12496  01455A  223B               	addwfc	(btemp+9)^0,f,c
 12497                           
 12498                           ;stkvar	_e @ sp[(-10)+8]
 12499  01455C  0EFE               	movlw	-2
 12500  01455E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12501  014564  0EFF               	movlw	-1
 12502  014566  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12503                           
 12504                           ;stkvar	_e @ sp[(-10)+8]
 12505  01456C  0EFF               	movlw	-1
 12506  01456E  BEE3               	btfsc	plusw1,7,c
 12507  014570  D019               	goto	l6446
 12508  014572  0EFF               	movlw	-1
 12509  014574  50E3               	movf	plusw1,w,c
 12510  014576  E108               	bnz	u5140
 12511  014578  0EFE               	movlw	-2
 12512  01457A  006F FF8C  F032    	movff	plusw1,btemp
 12513  014580  0E17               	movlw	23
 12514  014582  5E32               	subwf	btemp^0,f,c
 12515  014584  A0D8               	btfss	status,0,c
 12516  014586  D00E               	goto	l6446
 12517  014588                     u5140:
 12518                           
 12519                           ;stkvar	_x @ sp[(-10)+-4]
 12520  014588  0EF2               	movlw	-14
 12521  01458A  006F FF8C  F032    	movff	plusw1,btemp
 12522  014590  0EF3               	movlw	-13
 12523  014592  006F FF8C  F033    	movff	plusw1,btemp+1
 12524  014598  0EF4               	movlw	-12
 12525  01459A  006F FF8C  F034    	movff	plusw1,btemp+2
 12526  0145A0  0EF5               	movlw	-11
 12527  0145A2  D11F               	goto	L11
 12528  0145A4                     l6446:
 12529                           
 12530                           ;stkvar	_e @ sp[(-10)+8]
 12531  0145A4  0EFF               	movlw	-1
 12532  0145A6  BEE3               	btfsc	plusw1,7,c
 12533  0145A8  D0B4               	goto	l6462
 12534                           
 12535                           ;stkvar	_e @ sp[(-10)+8]
 12536  0145AA  0EFE               	movlw	-2
 12537  0145AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12538  0145B2  0EFF               	movlw	255
 12539  0145B4  6E36               	movwf	(btemp+4)^0,c
 12540  0145B6  0EFF               	movlw	255
 12541  0145B8  6E37               	movwf	(btemp+5)^0,c
 12542  0145BA  0E7F               	movlw	127
 12543  0145BC  6E38               	movwf	(btemp+6)^0,c
 12544  0145BE  0E00               	movlw	0
 12545  0145C0  6E39               	movwf	(btemp+7)^0,c
 12546  0145C2                     u5165:
 12547  0145C2  663D               	tstfsz	(btemp+11)^0,c
 12548  0145C4  D001               	goto	u5166
 12549  0145C6  D007               	goto	u5167
 12550  0145C8                     u5166:
 12551  0145C8  3439               	rlcf	(btemp+7)^0,w,c
 12552  0145CA  3239               	rrcf	(btemp+7)^0,f,c
 12553  0145CC  3238               	rrcf	(btemp+6)^0,f,c
 12554  0145CE  3237               	rrcf	(btemp+5)^0,f,c
 12555  0145D0  3236               	rrcf	(btemp+4)^0,f,c
 12556  0145D2  2E3D               	decfsz	(btemp+11)^0,f,c
 12557  0145D4  D7F6               	goto	u5165
 12558  0145D6                     u5167:
 12559                           
 12560                           ;stkvar	_m @ sp[(-10)+4]
 12561  0145D6  0EFA               	movlw	-6
 12562  0145D8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12563  0145DE  0EFB               	movlw	-5
 12564  0145E0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12565  0145E6  0EFC               	movlw	-4
 12566  0145E8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12567  0145EE  0EFD               	movlw	-3
 12568  0145F0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12569                           
 12570                           ;stkvar	_m @ sp[(-10)+4]
 12571                           ;stkvar	_u @ sp[(-10)+0]
 12572  0145F6  0EF6               	movlw	-10
 12573  0145F8  006F FF8C  F03A    	movff	plusw1,btemp+8
 12574  0145FE  0EF7               	movlw	-9
 12575  014600  006F FF8C  F03B    	movff	plusw1,btemp+9
 12576  014606  0EF8               	movlw	-8
 12577  014608  006F FF8C  F03C    	movff	plusw1,btemp+10
 12578  01460E  0EF9               	movlw	-7
 12579  014610  006F FF8C  F03D    	movff	plusw1,btemp+11
 12580  014616  0EFA               	movlw	-6
 12581  014618  50E3               	movf	plusw1,w,c
 12582  01461A  163A               	andwf	(btemp+8)^0,f,c
 12583  01461C  0EFB               	movlw	-5
 12584  01461E  50E3               	movf	plusw1,w,c
 12585  014620  163B               	andwf	(btemp+9)^0,f,c
 12586  014622  0EFC               	movlw	-4
 12587  014624  50E3               	movf	plusw1,w,c
 12588  014626  163C               	andwf	(btemp+10)^0,f,c
 12589  014628  0EFD               	movlw	-3
 12590  01462A  50E3               	movf	plusw1,w,c
 12591  01462C  163D               	andwf	(btemp+11)^0,f,c
 12592  01462E  503A               	movf	(btemp+8)^0,w,c
 12593  014630  103B               	iorwf	(btemp+9)^0,w,c
 12594  014632  103C               	iorwf	(btemp+10)^0,w,c
 12595  014634  103D               	iorwf	(btemp+11)^0,w,c
 12596  014636  B4D8               	btfsc	status,2,c
 12597  014638  D7A7               	goto	u5140
 12598                           
 12599                           ;stkvar	_u @ sp[(-10)+0]
 12600  01463A  0EF6               	movlw	-10
 12601  01463C  006F FF8C  F03A    	movff	plusw1,btemp+8
 12602  014642  0EF7               	movlw	-9
 12603  014644  006F FF8C  F03B    	movff	plusw1,btemp+9
 12604  01464A  0EF8               	movlw	-8
 12605  01464C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12606  014652  0EF9               	movlw	-7
 12607  014654  006F FF8C  F03D    	movff	plusw1,btemp+11
 12608  01465A  0E20               	movlw	32
 12609  01465C  D005               	goto	u5180
 12610  01465E                     u5185:
 12611  01465E  90D8               	bcf	status,0,c
 12612  014660  323D               	rrcf	(btemp+11)^0,f,c
 12613  014662  323C               	rrcf	(btemp+10)^0,f,c
 12614  014664  323B               	rrcf	(btemp+9)^0,f,c
 12615  014666  323A               	rrcf	(btemp+8)^0,f,c
 12616  014668                     u5180:
 12617  014668  2EE8               	decfsz	wreg,f,c
 12618  01466A  D7F9               	goto	u5185
 12619  01466C  503A               	movf	(btemp+8)^0,w,c
 12620  01466E  B4D8               	btfsc	status,2,c
 12621  014670  D028               	goto	l6460
 12622                           
 12623                           ;stkvar	_m @ sp[(-10)+4]
 12624                           ;stkvar	_u @ sp[(-10)+0]
 12625  014672  0EF6               	movlw	-10
 12626  014674  50E3               	movf	plusw1,w,c
 12627  014676  6E32               	movwf	btemp^0,c
 12628  014678  0EFA               	movlw	-6
 12629  01467A  50E3               	movf	plusw1,w,c
 12630  01467C  2632               	addwf	btemp^0,f,c
 12631  01467E  0EF6               	movlw	-10
 12632  014680  0060  F0CB  FFE3   	movff	btemp,plusw1
 12633  014686  0EF7               	movlw	-9
 12634  014688  50E3               	movf	plusw1,w,c
 12635  01468A  6E32               	movwf	btemp^0,c
 12636  01468C  0EFB               	movlw	-5
 12637  01468E  50E3               	movf	plusw1,w,c
 12638  014690  2232               	addwfc	btemp^0,f,c
 12639  014692  0EF7               	movlw	-9
 12640  014694  0060  F0CB  FFE3   	movff	btemp,plusw1
 12641  01469A  0EF8               	movlw	-8
 12642  01469C  50E3               	movf	plusw1,w,c
 12643  01469E  6E32               	movwf	btemp^0,c
 12644  0146A0  0EFC               	movlw	-4
 12645  0146A2  50E3               	movf	plusw1,w,c
 12646  0146A4  2232               	addwfc	btemp^0,f,c
 12647  0146A6  0EF8               	movlw	-8
 12648  0146A8  0060  F0CB  FFE3   	movff	btemp,plusw1
 12649  0146AE  0EF9               	movlw	-7
 12650  0146B0  50E3               	movf	plusw1,w,c
 12651  0146B2  6E32               	movwf	btemp^0,c
 12652  0146B4  0EFD               	movlw	-3
 12653  0146B6  50E3               	movf	plusw1,w,c
 12654  0146B8  2232               	addwfc	btemp^0,f,c
 12655  0146BA  0EF9               	movlw	-7
 12656  0146BC  0060  F0CB  FFE3   	movff	btemp,plusw1
 12657  0146C2                     l6460:
 12658                           
 12659                           ;stkvar	_m @ sp[(-10)+4]
 12660  0146C2  0EFA               	movlw	-6
 12661  0146C4  006F FF8C  F03A    	movff	plusw1,btemp+8
 12662  0146CA  0EFB               	movlw	-5
 12663  0146CC  006F FF8C  F03B    	movff	plusw1,btemp+9
 12664  0146D2  0EFC               	movlw	-4
 12665  0146D4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12666  0146DA  0EFD               	movlw	-3
 12667  0146DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12668  0146E2  1C3A               	comf	(btemp+8)^0,w,c
 12669  0146E4  6E36               	movwf	(btemp+4)^0,c
 12670  0146E6  1C3B               	comf	(btemp+9)^0,w,c
 12671  0146E8  6E37               	movwf	(btemp+5)^0,c
 12672  0146EA  1C3C               	comf	(btemp+10)^0,w,c
 12673  0146EC  6E38               	movwf	(btemp+6)^0,c
 12674  0146EE  1C3D               	comf	(btemp+11)^0,w,c
 12675  0146F0  6E39               	movwf	(btemp+7)^0,c
 12676                           
 12677                           ;stkvar	_u @ sp[(-10)+0]
 12678  0146F2  50E1               	movf	fsr1l,w,c
 12679  0146F4  0FF6               	addlw	-10
 12680  0146F6  6ED9               	movwf	fsr2l,c
 12681  0146F8  50E2               	movf	fsr1h,w,c
 12682  0146FA  6EDA               	movwf	fsr2h,c
 12683  0146FC  0EFF               	movlw	255
 12684  0146FE  22DA               	addwfc	fsr2h,f,c
 12685  014700  5036               	movf	(btemp+4)^0,w,c
 12686  014702  16DE               	andwf	postinc2,f,c
 12687  014704  5037               	movf	(btemp+5)^0,w,c
 12688  014706  16DE               	andwf	postinc2,f,c
 12689  014708  5038               	movf	(btemp+6)^0,w,c
 12690  01470A  16DE               	andwf	postinc2,f,c
 12691  01470C  5039               	movf	(btemp+7)^0,w,c
 12692  01470E  16DE               	andwf	postinc2,f,c
 12693  014710  D05B               	goto	l6470
 12694  014712                     l6462:
 12695                           
 12696                           ;stkvar	_u @ sp[(-10)+0]
 12697  014712  0EF6               	movlw	-10
 12698  014714  006F FF8C  F03A    	movff	plusw1,btemp+8
 12699  01471A  0EF7               	movlw	-9
 12700  01471C  006F FF8C  F03B    	movff	plusw1,btemp+9
 12701  014722  0EF8               	movlw	-8
 12702  014724  006F FF8C  F03C    	movff	plusw1,btemp+10
 12703  01472A  0EF9               	movlw	-7
 12704  01472C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12705  014732  0E20               	movlw	32
 12706  014734  D005               	goto	u5200
 12707  014736                     u5205:
 12708  014736  90D8               	bcf	status,0,c
 12709  014738  323D               	rrcf	(btemp+11)^0,f,c
 12710  01473A  323C               	rrcf	(btemp+10)^0,f,c
 12711  01473C  323B               	rrcf	(btemp+9)^0,f,c
 12712  01473E  323A               	rrcf	(btemp+8)^0,f,c
 12713  014740                     u5200:
 12714  014740  2EE8               	decfsz	wreg,f,c
 12715  014742  D7F9               	goto	u5205
 12716  014744  663A               	tstfsz	(btemp+8)^0,c
 12717  014746  D009               	goto	l6466
 12718                           
 12719                           ;stkvar	_u @ sp[(-10)+0]
 12720  014748  0EF6               	movlw	-10
 12721  01474A  6AE3               	clrf	plusw1,c
 12722  01474C  0EF7               	movlw	-9
 12723  01474E  6AE3               	clrf	plusw1,c
 12724  014750  0EF8               	movlw	-8
 12725  014752  6AE3               	clrf	plusw1,c
 12726  014754  0EF9               	movlw	-7
 12727  014756  6AE3               	clrf	plusw1,c
 12728  014758  D037               	goto	l6470
 12729  01475A                     l6466:
 12730                           
 12731                           ;stkvar	_u @ sp[(-10)+0]
 12732  01475A  0EF6               	movlw	-10
 12733  01475C  006F FF8C  F03A    	movff	plusw1,btemp+8
 12734  014762  0EF7               	movlw	-9
 12735  014764  006F FF8C  F03B    	movff	plusw1,btemp+9
 12736  01476A  0EF8               	movlw	-8
 12737  01476C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12738  014772  0EF9               	movlw	-7
 12739  014774  006F FF8C  F03D    	movff	plusw1,btemp+11
 12740  01477A  90D8               	bcf	status,0,c
 12741  01477C  343A               	rlcf	(btemp+8)^0,w,c
 12742  01477E  6E36               	movwf	(btemp+4)^0,c
 12743  014780  343B               	rlcf	(btemp+9)^0,w,c
 12744  014782  6E37               	movwf	(btemp+5)^0,c
 12745  014784  343C               	rlcf	(btemp+10)^0,w,c
 12746  014786  6E38               	movwf	(btemp+6)^0,c
 12747  014788  343D               	rlcf	(btemp+11)^0,w,c
 12748  01478A  6E39               	movwf	(btemp+7)^0,c
 12749  01478C  5036               	movf	(btemp+4)^0,w,c
 12750  01478E  1037               	iorwf	(btemp+5)^0,w,c
 12751  014790  1038               	iorwf	(btemp+6)^0,w,c
 12752  014792  1039               	iorwf	(btemp+7)^0,w,c
 12753  014794  B4D8               	btfsc	status,2,c
 12754  014796  D018               	goto	l6470
 12755  014798  0E00               	movlw	0
 12756  01479A  6E3A               	movwf	(btemp+8)^0,c
 12757  01479C  0E00               	movlw	0
 12758  01479E  6E3B               	movwf	(btemp+9)^0,c
 12759  0147A0  0E80               	movlw	128
 12760  0147A2  6E3C               	movwf	(btemp+10)^0,c
 12761  0147A4  0EBF               	movlw	191
 12762  0147A6  6E3D               	movwf	(btemp+11)^0,c
 12763                           
 12764                           ;stkvar	_u @ sp[(-10)+0]
 12765  0147A8  0EF6               	movlw	-10
 12766  0147AA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12767  0147B0  0EF7               	movlw	-9
 12768  0147B2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12769  0147B8  0EF8               	movlw	-8
 12770  0147BA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12771  0147C0  0EF9               	movlw	-7
 12772  0147C2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12773  0147C8                     l6470:
 12774                           
 12775                           ;stkvar	_u @ sp[(-10)+0]
 12776  0147C8  0EF6               	movlw	-10
 12777  0147CA  006F FF8C  F032    	movff	plusw1,btemp
 12778  0147D0  0EF7               	movlw	-9
 12779  0147D2  006F FF8C  F033    	movff	plusw1,btemp+1
 12780  0147D8  0EF8               	movlw	-8
 12781  0147DA  006F FF8C  F034    	movff	plusw1,btemp+2
 12782  0147E0  0EF9               	movlw	-7
 12783  0147E2                     L11:
 12784  0147E2  006F FF8C  F035    	movff	plusw1,btemp+3
 12785                           
 12786                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12787  0147E8  0EF2               	movlw	242
 12788  0147EA  26E1               	addwf	fsr1l,f,c
 12789  0147EC  0EFF               	movlw	255
 12790  0147EE  22E2               	addwfc	fsr1h,f,c
 12791  0147F0  0012               	return		;funcret
 12792  0147F2                     __end_of_floorf:
 12793                           	opt callstack 0
 12794                           
 12795 ;; *************** function ___fpclassifyf *****************
 12796 ;; Defined at:
 12797 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;  x               4  [STACK] float 
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;  u               4  [STACK] struct .
 12802 ;;  e               2  [STACK] int 
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  2  [STACK] int 
 12805 ;; Registers used:
 12806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12807 ;; Tracked objects:
 12808 ;;		On entry : 0/5
 12809 ;;		On exit  : 0/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12816 ;;Total ram usage:        0 bytes
 12817 ;; Hardware stack levels used:    1
 12818 ;; Hardware stack levels required when called:    6
 12819 ;; This function calls:
 12820 ;;		Nothing
 12821 ;; This function is called by:
 12822 ;;		_efgtoa
 12823 ;; This function uses a reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text48
 12827  015ED0                     __ptext48:
 12828                           	opt callstack 0
 12829  015ED0                     ___fpclassifyf:
 12830                           	opt callstack 0
 12831                           
 12832                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12833  015ED0  0E06               	movlw	6
 12834  015ED2  26E1               	addwf	fsr1l,f,c
 12835  015ED4  0E00               	movlw	0
 12836  015ED6  22E2               	addwfc	fsr1h,f,c
 12837                           
 12838                           ;incstack = 0
 12839  015ED8  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 12840  015EDE  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 12841  015EE4  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 12842  015EEA  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 12843                           
 12844                           ;stkvar	_u @ sp[(-6)+0]
 12845  015EF0  0EFA               	movlw	-6
 12846  015EF2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12847  015EF8  0EFB               	movlw	-5
 12848  015EFA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12849  015F00  0EFC               	movlw	-4
 12850  015F02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12851  015F08  0EFD               	movlw	-3
 12852  015F0A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12853                           
 12854                           ;stkvar	_x @ sp[(-6)+-4]
 12855  015F10  0EF6               	movlw	-10
 12856  015F12  006F FF8C  F03A    	movff	plusw1,btemp+8
 12857  015F18  0EF7               	movlw	-9
 12858  015F1A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12859  015F20  0EF8               	movlw	-8
 12860  015F22  006F FF8C  F03C    	movff	plusw1,btemp+10
 12861  015F28  0EF9               	movlw	-7
 12862  015F2A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12863                           
 12864                           ;stkvar	_u @ sp[(-6)+0]
 12865  015F30  0EFA               	movlw	-6
 12866  015F32  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12867  015F38  0EFB               	movlw	-5
 12868  015F3A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12869  015F40  0EFC               	movlw	-4
 12870  015F42  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12871  015F48  0EFD               	movlw	-3
 12872  015F4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12873                           
 12874                           ;stkvar	_u @ sp[(-6)+0]
 12875  015F50  0EFA               	movlw	-6
 12876  015F52  006F FF8C  F03A    	movff	plusw1,btemp+8
 12877  015F58  0EFB               	movlw	-5
 12878  015F5A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12879  015F60  0EFC               	movlw	-4
 12880  015F62  006F FF8C  F03C    	movff	plusw1,btemp+10
 12881  015F68  0EFD               	movlw	-3
 12882  015F6A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12883  015F70  0E18               	movlw	24
 12884  015F72  D005               	goto	u5010
 12885  015F74                     u5015:
 12886  015F74  90D8               	bcf	status,0,c
 12887  015F76  323D               	rrcf	(btemp+11)^0,f,c
 12888  015F78  323C               	rrcf	(btemp+10)^0,f,c
 12889  015F7A  323B               	rrcf	(btemp+9)^0,f,c
 12890  015F7C  323A               	rrcf	(btemp+8)^0,f,c
 12891  015F7E                     u5010:
 12892  015F7E  2EE8               	decfsz	wreg,f,c
 12893  015F80  D7F9               	goto	u5015
 12894  015F82  0060  F0E8  F038   	movff	btemp+8,btemp+6
 12895  015F88  0060  F0EC  F039   	movff	btemp+9,btemp+7
 12896  015F8E  0EFF               	movlw	255
 12897  015F90  1638               	andwf	(btemp+6)^0,f,c
 12898  015F92  0E00               	movlw	0
 12899  015F94  1639               	andwf	(btemp+7)^0,f,c
 12900                           
 12901                           ;stkvar	_e @ sp[(-6)+4]
 12902  015F96  0EFE               	movlw	-2
 12903  015F98  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12904  015F9E  0EFF               	movlw	-1
 12905  015FA0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12906                           
 12907                           ;stkvar	_e @ sp[(-6)+4]
 12908  015FA6  0EFE               	movlw	-2
 12909  015FA8  006F FF8C  F032    	movff	plusw1,btemp
 12910  015FAE  0EFF               	movlw	-1
 12911  015FB0  50E3               	movf	plusw1,w,c
 12912  015FB2  1032               	iorwf	btemp^0,w,c
 12913  015FB4  A4D8               	btfss	status,2,c
 12914  015FB6  D023               	goto	l6408
 12915                           
 12916                           ;stkvar	_u @ sp[(-6)+0]
 12917  015FB8  0EFA               	movlw	-6
 12918  015FBA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12919  015FC0  0EFB               	movlw	-5
 12920  015FC2  006F FF8C  F03B    	movff	plusw1,btemp+9
 12921  015FC8  0EFC               	movlw	-4
 12922  015FCA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12923  015FD0  0EFD               	movlw	-3
 12924  015FD2  006F FF8C  F03D    	movff	plusw1,btemp+11
 12925  015FD8  90D8               	bcf	status,0,c
 12926  015FDA  343A               	rlcf	(btemp+8)^0,w,c
 12927  015FDC  6E36               	movwf	(btemp+4)^0,c
 12928  015FDE  343B               	rlcf	(btemp+9)^0,w,c
 12929  015FE0  6E37               	movwf	(btemp+5)^0,c
 12930  015FE2  343C               	rlcf	(btemp+10)^0,w,c
 12931  015FE4  6E38               	movwf	(btemp+6)^0,c
 12932  015FE6  343D               	rlcf	(btemp+11)^0,w,c
 12933  015FE8  6E39               	movwf	(btemp+7)^0,c
 12934  015FEA  5036               	movf	(btemp+4)^0,w,c
 12935  015FEC  1037               	iorwf	(btemp+5)^0,w,c
 12936  015FEE  1038               	iorwf	(btemp+6)^0,w,c
 12937  015FF0  1039               	iorwf	(btemp+7)^0,w,c
 12938  015FF2  A4D8               	btfss	status,2,c
 12939  015FF4  D002               	goto	l6404
 12940  015FF6  0E02               	movlw	2
 12941  015FF8  D02E               	goto	L12
 12942  015FFA                     l6404:
 12943  015FFA  0E03               	movlw	3
 12944  015FFC  D02C               	goto	L12
 12945  015FFE                     l6408:
 12946                           
 12947                           ;stkvar	_e @ sp[(-6)+4]
 12948  015FFE  0EFE               	movlw	-2
 12949  016000  28E3               	incf	plusw1,w,c
 12950  016002  E128               	bnz	l6414
 12951  016004  0EFF               	movlw	-1
 12952  016006  50E3               	movf	plusw1,w,c
 12953  016008  A4D8               	btfss	status,2,c
 12954  01600A  D024               	goto	l6414
 12955                           
 12956                           ;stkvar	_u @ sp[(-6)+0]
 12957  01600C  0EFA               	movlw	-6
 12958  01600E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12959  016014  0EFB               	movlw	-5
 12960  016016  006F FF8C  F03B    	movff	plusw1,btemp+9
 12961  01601C  0EFC               	movlw	-4
 12962  01601E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12963  016024  0EFD               	movlw	-3
 12964  016026  006F FF8C  F03D    	movff	plusw1,btemp+11
 12965  01602C  0E09               	movlw	9
 12966  01602E                     u5055:
 12967  01602E  90D8               	bcf	status,0,c
 12968  016030  363A               	rlcf	(btemp+8)^0,f,c
 12969  016032  363B               	rlcf	(btemp+9)^0,f,c
 12970  016034  363C               	rlcf	(btemp+10)^0,f,c
 12971  016036  363D               	rlcf	(btemp+11)^0,f,c
 12972  016038  2EE8               	decfsz	wreg,f,c
 12973  01603A  D7F9               	goto	u5055
 12974  01603C  503A               	movf	(btemp+8)^0,w,c
 12975  01603E  103B               	iorwf	(btemp+9)^0,w,c
 12976  016040  103C               	iorwf	(btemp+10)^0,w,c
 12977  016042  103D               	iorwf	(btemp+11)^0,w,c
 12978  016044  A4D8               	btfss	status,2,c
 12979  016046  D002               	goto	u5060
 12980  016048  0E01               	movlw	1
 12981  01604A  D001               	goto	u5070
 12982  01604C                     u5060:
 12983  01604C  0E00               	movlw	0
 12984  01604E                     u5070:
 12985  01604E  6E32               	movwf	btemp^0,c
 12986  016050  6A33               	clrf	(btemp+1)^0,c
 12987  016052  D004               	goto	l2728
 12988  016054                     l6414:
 12989  016054  0E04               	movlw	4
 12990  016056                     L12:
 12991  016056  6E32               	movwf	btemp^0,c
 12992  016058  0E00               	movlw	0
 12993  01605A  6E33               	movwf	(btemp+1)^0,c
 12994  01605C                     l2728:
 12995                           
 12996                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12997  01605C  0EF6               	movlw	246
 12998  01605E  26E1               	addwf	fsr1l,f,c
 12999  016060  0EFF               	movlw	255
 13000  016062  22E2               	addwfc	fsr1h,f,c
 13001  016064  0012               	return		;funcret
 13002  016066                     __end_of___fpclassifyf:
 13003                           	opt callstack 0
 13004                           
 13005 ;; *************** function ___fltol *****************
 13006 ;; Defined at:
 13007 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  f1              4  [STACK] int 
 13010 ;; Auto vars:     Size  Location     Type
 13011 ;;  exp1            1  [STACK] unsigned char 
 13012 ;;  sign1           1  [STACK] unsigned char 
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  4  [STACK] long 
 13015 ;; Registers used:
 13016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/5
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13026 ;;Total ram usage:        0 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:    6
 13029 ;; This function calls:
 13030 ;;		Nothing
 13031 ;; This function is called by:
 13032 ;;		_efgtoa
 13033 ;; This function uses a reentrant model
 13034 ;;
 13035                           
 13036                           	psect	text49
 13037  016066                     __ptext49:
 13038                           	opt callstack 0
 13039  016066                     ___fltol:
 13040                           	opt callstack 0
 13041                           
 13042                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13043  016066  52E6               	movf	postinc1,f,c
 13044  016068  52E6               	movf	postinc1,f,c
 13045                           
 13046                           ;stkvar	_f1 @ sp[(-2)+-4]
 13047                           
 13048                           ;incstack = 0
 13049  01606A  0EFA               	movlw	-6
 13050  01606C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13051  016072  0EFB               	movlw	-5
 13052  016074  006F FF8C  F03B    	movff	plusw1,btemp+9
 13053  01607A  0EFC               	movlw	-4
 13054  01607C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13055  016082  0EFD               	movlw	-3
 13056  016084  006F FF8C  F03D    	movff	plusw1,btemp+11
 13057  01608A  0E18               	movlw	24
 13058  01608C  D005               	goto	u6220
 13059  01608E                     u6225:
 13060  01608E  90D8               	bcf	status,0,c
 13061  016090  323D               	rrcf	(btemp+11)^0,f,c
 13062  016092  323C               	rrcf	(btemp+10)^0,f,c
 13063  016094  323B               	rrcf	(btemp+9)^0,f,c
 13064  016096  323A               	rrcf	(btemp+8)^0,f,c
 13065  016098                     u6220:
 13066  016098  2EE8               	decfsz	wreg,f,c
 13067  01609A  D7F9               	goto	u6225
 13068                           
 13069                           ;stkvar	_exp1 @ sp[(-2)+0]
 13070  01609C  0EFE               	movlw	-2
 13071  01609E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13072  0160A4  0EFE               	movlw	-2
 13073  0160A6  50E3               	movf	plusw1,w,c
 13074  0160A8  A4D8               	btfss	status,2,c
 13075  0160AA  D006               	goto	l7034
 13076  0160AC                     u6230:
 13077  0160AC  0E00               	movlw	0
 13078  0160AE  6E32               	movwf	btemp^0,c
 13079  0160B0  6A33               	clrf	(btemp+1)^0,c
 13080  0160B2  6A34               	clrf	(btemp+2)^0,c
 13081  0160B4  6A35               	clrf	(btemp+3)^0,c
 13082  0160B6  D08B               	goto	l2344
 13083  0160B8                     l7034:
 13084                           
 13085                           ;stkvar	_f1 @ sp[(-2)+-4]
 13086  0160B8  0EFA               	movlw	-6
 13087  0160BA  006F FF8C  F03A    	movff	plusw1,btemp+8
 13088  0160C0  0EFB               	movlw	-5
 13089  0160C2  006F FF8C  F03B    	movff	plusw1,btemp+9
 13090  0160C8  0EFC               	movlw	-4
 13091  0160CA  006F FF8C  F03C    	movff	plusw1,btemp+10
 13092  0160D0  0EFD               	movlw	-3
 13093  0160D2  006F FF8C  F03D    	movff	plusw1,btemp+11
 13094  0160D8  0E20               	movlw	32
 13095  0160DA  D005               	goto	u6240
 13096  0160DC                     u6245:
 13097  0160DC  90D8               	bcf	status,0,c
 13098  0160DE  323D               	rrcf	(btemp+11)^0,f,c
 13099  0160E0  323C               	rrcf	(btemp+10)^0,f,c
 13100  0160E2  323B               	rrcf	(btemp+9)^0,f,c
 13101  0160E4  323A               	rrcf	(btemp+8)^0,f,c
 13102  0160E6                     u6240:
 13103  0160E6  2EE8               	decfsz	wreg,f,c
 13104  0160E8  D7F9               	goto	u6245
 13105                           
 13106                           ;stkvar	_sign1 @ sp[(-2)+1]
 13107  0160EA  0EFF               	movlw	-1
 13108  0160EC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13109                           
 13110                           ;stkvar	_f1 @ sp[(-2)+-4]
 13111  0160F2  0EFC               	movlw	-4
 13112  0160F4  8EE3               	bsf	plusw1,7,c
 13113                           
 13114                           ;stkvar	_f1 @ sp[(-2)+-4]
 13115  0160F6  50E1               	movf	fsr1l,w,c
 13116  0160F8  0FFA               	addlw	-6
 13117  0160FA  6ED9               	movwf	fsr2l,c
 13118  0160FC  50E2               	movf	fsr1h,w,c
 13119  0160FE  6EDA               	movwf	fsr2h,c
 13120  016100  0EFF               	movlw	255
 13121  016102  22DA               	addwfc	fsr2h,f,c
 13122  016104  0EFF               	movlw	255
 13123  016106  16DE               	andwf	postinc2,f,c
 13124  016108  0EFF               	movlw	255
 13125  01610A  16DE               	andwf	postinc2,f,c
 13126  01610C  0EFF               	movlw	255
 13127  01610E  16DE               	andwf	postinc2,f,c
 13128  016110  0E00               	movlw	0
 13129  016112  16DE               	andwf	postinc2,f,c
 13130                           
 13131                           ;stkvar	_exp1 @ sp[(-2)+0]
 13132  016114  0EFE               	movlw	-2
 13133  016116  006F FF8C  F032    	movff	plusw1,btemp
 13134  01611C  0E96               	movlw	150
 13135  01611E  5E32               	subwf	btemp^0,f,c
 13136  016120  0EFE               	movlw	-2
 13137  016122  0060  F0CB  FFE3   	movff	btemp,plusw1
 13138                           
 13139                           ;stkvar	_exp1 @ sp[(-2)+0]
 13140  016128  0EFE               	movlw	-2
 13141  01612A  AEE3               	btfss	plusw1,7,c
 13142  01612C  D014               	goto	l7052
 13143                           
 13144                           ;stkvar	_exp1 @ sp[(-2)+0]
 13145  01612E  0EFE               	movlw	-2
 13146  016130  50E3               	movf	plusw1,w,c
 13147  016132  0A80               	xorlw	128
 13148  016134  0F97               	addlw	151
 13149  016136  A0D8               	btfss	status,0,c
 13150  016138  D7B9               	goto	u6230
 13151  01613A                     l7050:
 13152                           
 13153                           ;stkvar	_f1 @ sp[(-2)+-4]
 13154  01613A  90D8               	bcf	status,0,c
 13155  01613C  0EFD               	movlw	-3
 13156  01613E  32E3               	rrcf	plusw1,f,c
 13157  016140  0EFC               	movlw	-4
 13158  016142  32E3               	rrcf	plusw1,f,c
 13159  016144  0EFB               	movlw	-5
 13160  016146  32E3               	rrcf	plusw1,f,c
 13161  016148  0EFA               	movlw	-6
 13162  01614A  32E3               	rrcf	plusw1,f,c
 13163                           
 13164                           ;stkvar	_exp1 @ sp[(-2)+0]
 13165  01614C  0EFE               	movlw	-2
 13166  01614E  2AE3               	incf	plusw1,f,c
 13167  016150  B4D8               	btfsc	status,2,c
 13168  016152  D018               	goto	u6290
 13169  016154  D7F2               	goto	l7050
 13170  016156                     l7052:
 13171                           
 13172                           ;stkvar	_exp1 @ sp[(-2)+0]
 13173  016156  0EFE               	movlw	-2
 13174  016158  006F FF8C  F032    	movff	plusw1,btemp
 13175  01615E  0E1F               	movlw	31
 13176  016160  6432               	cpfsgt	btemp^0,c
 13177  016162  D00C               	goto	l7060
 13178  016164  D7A3               	goto	u6230
 13179  016166                     l7058:
 13180                           
 13181                           ;stkvar	_f1 @ sp[(-2)+-4]
 13182  016166  90D8               	bcf	status,0,c
 13183  016168  0EFA               	movlw	-6
 13184  01616A  36E3               	rlcf	plusw1,f,c
 13185  01616C  0EFB               	movlw	-5
 13186  01616E  36E3               	rlcf	plusw1,f,c
 13187  016170  0EFC               	movlw	-4
 13188  016172  36E3               	rlcf	plusw1,f,c
 13189  016174  0EFD               	movlw	-3
 13190  016176  36E3               	rlcf	plusw1,f,c
 13191                           
 13192                           ;stkvar	_exp1 @ sp[(-2)+0]
 13193  016178  0EFE               	movlw	-2
 13194  01617A  06E3               	decf	plusw1,f,c
 13195  01617C                     l7060:
 13196                           
 13197                           ;stkvar	_exp1 @ sp[(-2)+0]
 13198  01617C  0EFE               	movlw	-2
 13199  01617E  50E3               	movf	plusw1,w,c
 13200  016180  A4D8               	btfss	status,2,c
 13201  016182  D7F1               	goto	l7058
 13202  016184                     u6290:
 13203                           
 13204                           ;stkvar	_sign1 @ sp[(-2)+1]
 13205  016184  0EFF               	movlw	-1
 13206  016186  50E3               	movf	plusw1,w,c
 13207  016188  B4D8               	btfsc	status,2,c
 13208  01618A  D011               	goto	u6310
 13209                           
 13210                           ;stkvar	_f1 @ sp[(-2)+-4]
 13211                           ;stkvar	_f1 @ sp[(-2)+-4]
 13212  01618C  0EFA               	movlw	-6
 13213  01618E  6CE3               	negf	plusw1,c
 13214  016190  0EFB               	movlw	-5
 13215  016192  1EE3               	comf	plusw1,f,c
 13216  016194  0EFC               	movlw	-4
 13217  016196  1EE3               	comf	plusw1,f,c
 13218  016198  0EFD               	movlw	-3
 13219  01619A  1EE3               	comf	plusw1,f,c
 13220  01619C  E308               	bnc	u6310
 13221  01619E  0EFB               	movlw	-5
 13222  0161A0  2AE3               	incf	plusw1,f,c
 13223  0161A2  E305               	bnc	u6310
 13224  0161A4  0EFC               	movlw	-4
 13225  0161A6  2AE3               	incf	plusw1,f,c
 13226  0161A8  E302               	bnc	u6310
 13227  0161AA  0EFD               	movlw	-3
 13228  0161AC  2AE3               	incf	plusw1,f,c
 13229  0161AE                     u6310:
 13230                           
 13231                           ;stkvar	_f1 @ sp[(-2)+-4]
 13232  0161AE  0EFA               	movlw	-6
 13233  0161B0  006F FF8C  F032    	movff	plusw1,btemp
 13234  0161B6  0EFB               	movlw	-5
 13235  0161B8  006F FF8C  F033    	movff	plusw1,btemp+1
 13236  0161BE  0EFC               	movlw	-4
 13237  0161C0  006F FF8C  F034    	movff	plusw1,btemp+2
 13238  0161C6  0EFD               	movlw	-3
 13239  0161C8  006F FF8C  F035    	movff	plusw1,btemp+3
 13240  0161CE                     l2344:
 13241                           
 13242                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13243  0161CE  0EFA               	movlw	250
 13244  0161D0  26E1               	addwf	fsr1l,f,c
 13245  0161D2  0EFF               	movlw	255
 13246  0161D4  22E2               	addwfc	fsr1h,f,c
 13247  0161D6  0012               	return		;funcret
 13248  0161D8                     __end_of___fltol:
 13249                           	opt callstack 0
 13250                           
 13251 ;; *************** function ___flneg *****************
 13252 ;; Defined at:
 13253 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;  f1              4  [STACK] long 
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;		None
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  4  [STACK] long 
 13260 ;; Registers used:
 13261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/5
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13271 ;;Total ram usage:        0 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; Hardware stack levels required when called:    6
 13274 ;; This function calls:
 13275 ;;		Nothing
 13276 ;; This function is called by:
 13277 ;;		_efgtoa
 13278 ;; This function uses a reentrant model
 13279 ;;
 13280                           
 13281                           	psect	text50
 13282  017CB8                     __ptext50:
 13283                           	opt callstack 0
 13284  017CB8                     ___flneg:
 13285                           	opt callstack 17
 13286                           
 13287                           ;stkvar	_f1 @ sp[(0)+-4]
 13288                           
 13289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13290                           ;incstack = 0
 13291  017CB8  0EFC               	movlw	-4
 13292  017CBA  50E3               	movf	plusw1,w,c
 13293  017CBC  E10A               	bnz	u6210
 13294  017CBE  0EFD               	movlw	-3
 13295  017CC0  50E3               	movf	plusw1,w,c
 13296  017CC2  E107               	bnz	u6210
 13297  017CC4  0EFE               	movlw	-2
 13298  017CC6  50E3               	movf	plusw1,w,c
 13299  017CC8  E104               	bnz	u6210
 13300  017CCA  0EFF               	movlw	-1
 13301  017CCC  50E3               	movf	plusw1,w,c
 13302  017CCE  B4D8               	btfsc	status,2,c
 13303  017CD0  D002               	goto	l7024
 13304  017CD2                     u6210:
 13305                           
 13306                           ;stkvar	_f1 @ sp[(0)+-4]
 13307  017CD2  0EFF               	movlw	-1
 13308  017CD4  7EE3               	btg	plusw1,7,c
 13309  017CD6                     l7024:
 13310                           
 13311                           ;stkvar	_f1 @ sp[(0)+-4]
 13312  017CD6  0EFC               	movlw	-4
 13313  017CD8  006F FF8C  F032    	movff	plusw1,btemp
 13314  017CDE  0EFD               	movlw	-3
 13315  017CE0  006F FF8C  F033    	movff	plusw1,btemp+1
 13316  017CE6  0EFE               	movlw	-2
 13317  017CE8  006F FF8C  F034    	movff	plusw1,btemp+2
 13318  017CEE  0EFF               	movlw	-1
 13319  017CF0  006F FF8C  F035    	movff	plusw1,btemp+3
 13320                           
 13321                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13322  017CF6  52E5               	movf	postdec1,f,c
 13323  017CF8  52E5               	movf	postdec1,f,c
 13324  017CFA  52E5               	movf	postdec1,f,c
 13325  017CFC  52E5               	movf	postdec1,f,c
 13326  017CFE  0012               	return		;funcret
 13327  017D00                     __end_of___flneg:
 13328                           	opt callstack 0
 13329                           
 13330 ;; *************** function ___flge *****************
 13331 ;; Defined at:
 13332 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  ff1             4  [STACK] long 
 13335 ;;  ff2             4  [STACK] long 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;		None               void
 13340 ;; Registers used:
 13341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/5
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13351 ;;Total ram usage:        0 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:    6
 13354 ;; This function calls:
 13355 ;;		Nothing
 13356 ;; This function is called by:
 13357 ;;		_efgtoa
 13358 ;; This function uses a reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text51
 13362  0161D8                     __ptext51:
 13363                           	opt callstack 0
 13364  0161D8                     ___flge:
 13365                           	opt callstack 17
 13366                           
 13367                           ;stkvar	_ff1 @ sp[(0)+-4]
 13368                           
 13369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13370                           ;incstack = 0
 13371  0161D8  50E1               	movf	fsr1l,w,c
 13372  0161DA  0FFC               	addlw	-4
 13373  0161DC  6ED9               	movwf	fsr2l,c
 13374  0161DE  50E2               	movf	fsr1h,w,c
 13375  0161E0  6EDA               	movwf	fsr2h,c
 13376  0161E2  0EFF               	movlw	255
 13377  0161E4  22DA               	addwfc	fsr2h,f,c
 13378  0161E6  0E00               	movlw	0
 13379  0161E8  14DE               	andwf	postinc2,w,c
 13380  0161EA  6E3A               	movwf	(btemp+8)^0,c
 13381  0161EC  0E00               	movlw	0
 13382  0161EE  14DE               	andwf	postinc2,w,c
 13383  0161F0  6E3B               	movwf	(btemp+9)^0,c
 13384  0161F2  0E80               	movlw	128
 13385  0161F4  14DE               	andwf	postinc2,w,c
 13386  0161F6  6E3C               	movwf	(btemp+10)^0,c
 13387  0161F8  0E7F               	movlw	127
 13388  0161FA  14DE               	andwf	postinc2,w,c
 13389  0161FC  6E3D               	movwf	(btemp+11)^0,c
 13390  0161FE  503A               	movf	(btemp+8)^0,w,c
 13391  016200  103B               	iorwf	(btemp+9)^0,w,c
 13392  016202  103C               	iorwf	(btemp+10)^0,w,c
 13393  016204  103D               	iorwf	(btemp+11)^0,w,c
 13394  016206  A4D8               	btfss	status,2,c
 13395  016208  D008               	goto	l6998
 13396                           
 13397                           ;stkvar	_ff1 @ sp[(0)+-4]
 13398  01620A  0EFC               	movlw	-4
 13399  01620C  6AE3               	clrf	plusw1,c
 13400  01620E  0EFD               	movlw	-3
 13401  016210  6AE3               	clrf	plusw1,c
 13402  016212  0EFE               	movlw	-2
 13403  016214  6AE3               	clrf	plusw1,c
 13404  016216  0EFF               	movlw	-1
 13405  016218  6AE3               	clrf	plusw1,c
 13406  01621A                     l6998:
 13407                           
 13408                           ;stkvar	_ff2 @ sp[(0)+-8]
 13409  01621A  50E1               	movf	fsr1l,w,c
 13410  01621C  0FF8               	addlw	-8
 13411  01621E  6ED9               	movwf	fsr2l,c
 13412  016220  50E2               	movf	fsr1h,w,c
 13413  016222  6EDA               	movwf	fsr2h,c
 13414  016224  0EFF               	movlw	255
 13415  016226  22DA               	addwfc	fsr2h,f,c
 13416  016228  0E00               	movlw	0
 13417  01622A  14DE               	andwf	postinc2,w,c
 13418  01622C  6E3A               	movwf	(btemp+8)^0,c
 13419  01622E  0E00               	movlw	0
 13420  016230  14DE               	andwf	postinc2,w,c
 13421  016232  6E3B               	movwf	(btemp+9)^0,c
 13422  016234  0E80               	movlw	128
 13423  016236  14DE               	andwf	postinc2,w,c
 13424  016238  6E3C               	movwf	(btemp+10)^0,c
 13425  01623A  0E7F               	movlw	127
 13426  01623C  14DE               	andwf	postinc2,w,c
 13427  01623E  6E3D               	movwf	(btemp+11)^0,c
 13428  016240  503A               	movf	(btemp+8)^0,w,c
 13429  016242  103B               	iorwf	(btemp+9)^0,w,c
 13430  016244  103C               	iorwf	(btemp+10)^0,w,c
 13431  016246  103D               	iorwf	(btemp+11)^0,w,c
 13432  016248  A4D8               	btfss	status,2,c
 13433  01624A  D008               	goto	l2310
 13434                           
 13435                           ;stkvar	_ff2 @ sp[(0)+-8]
 13436  01624C  0EF8               	movlw	-8
 13437  01624E  6AE3               	clrf	plusw1,c
 13438  016250  0EF9               	movlw	-7
 13439  016252  6AE3               	clrf	plusw1,c
 13440  016254  0EFA               	movlw	-6
 13441  016256  6AE3               	clrf	plusw1,c
 13442  016258  0EFB               	movlw	-5
 13443  01625A  6AE3               	clrf	plusw1,c
 13444  01625C                     l2310:
 13445                           
 13446                           ;stkvar	_ff1 @ sp[(0)+-4]
 13447  01625C  0EFF               	movlw	-1
 13448  01625E  AEE3               	btfss	plusw1,7,c
 13449  016260  D024               	goto	l7004
 13450                           
 13451                           ;stkvar	_ff1 @ sp[(0)+-4]
 13452  016262  0E00               	movlw	0
 13453  016264  6E3A               	movwf	(btemp+8)^0,c
 13454  016266  0E00               	movlw	0
 13455  016268  6E3B               	movwf	(btemp+9)^0,c
 13456  01626A  0E00               	movlw	0
 13457  01626C  6E3C               	movwf	(btemp+10)^0,c
 13458  01626E  0E80               	movlw	128
 13459  016270  6E3D               	movwf	(btemp+11)^0,c
 13460  016272  0EFC               	movlw	-4
 13461  016274  50E3               	movf	plusw1,w,c
 13462  016276  5E3A               	subwf	(btemp+8)^0,f,c
 13463  016278  0EFD               	movlw	-3
 13464  01627A  50E3               	movf	plusw1,w,c
 13465  01627C  5A3B               	subwfb	(btemp+9)^0,f,c
 13466  01627E  0EFE               	movlw	-2
 13467  016280  50E3               	movf	plusw1,w,c
 13468  016282  5A3C               	subwfb	(btemp+10)^0,f,c
 13469  016284  0EFF               	movlw	-1
 13470  016286  50E3               	movf	plusw1,w,c
 13471  016288  5A3D               	subwfb	(btemp+11)^0,f,c
 13472                           
 13473                           ;stkvar	_ff1 @ sp[(0)+-4]
 13474  01628A  0EFC               	movlw	-4
 13475  01628C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13476  016292  0EFD               	movlw	-3
 13477  016294  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13478  01629A  0EFE               	movlw	-2
 13479  01629C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13480  0162A2  0EFF               	movlw	-1
 13481  0162A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13482  0162AA                     l7004:
 13483                           
 13484                           ;stkvar	_ff2 @ sp[(0)+-8]
 13485  0162AA  0EFB               	movlw	-5
 13486  0162AC  AEE3               	btfss	plusw1,7,c
 13487  0162AE  D024               	goto	l7008
 13488                           
 13489                           ;stkvar	_ff2 @ sp[(0)+-8]
 13490  0162B0  0E00               	movlw	0
 13491  0162B2  6E3A               	movwf	(btemp+8)^0,c
 13492  0162B4  0E00               	movlw	0
 13493  0162B6  6E3B               	movwf	(btemp+9)^0,c
 13494  0162B8  0E00               	movlw	0
 13495  0162BA  6E3C               	movwf	(btemp+10)^0,c
 13496  0162BC  0E80               	movlw	128
 13497  0162BE  6E3D               	movwf	(btemp+11)^0,c
 13498  0162C0  0EF8               	movlw	-8
 13499  0162C2  50E3               	movf	plusw1,w,c
 13500  0162C4  5E3A               	subwf	(btemp+8)^0,f,c
 13501  0162C6  0EF9               	movlw	-7
 13502  0162C8  50E3               	movf	plusw1,w,c
 13503  0162CA  5A3B               	subwfb	(btemp+9)^0,f,c
 13504  0162CC  0EFA               	movlw	-6
 13505  0162CE  50E3               	movf	plusw1,w,c
 13506  0162D0  5A3C               	subwfb	(btemp+10)^0,f,c
 13507  0162D2  0EFB               	movlw	-5
 13508  0162D4  50E3               	movf	plusw1,w,c
 13509  0162D6  5A3D               	subwfb	(btemp+11)^0,f,c
 13510                           
 13511                           ;stkvar	_ff2 @ sp[(0)+-8]
 13512  0162D8  0EF8               	movlw	-8
 13513  0162DA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13514  0162E0  0EF9               	movlw	-7
 13515  0162E2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13516  0162E8  0EFA               	movlw	-6
 13517  0162EA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13518  0162F0  0EFB               	movlw	-5
 13519  0162F2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13520  0162F8                     l7008:
 13521                           
 13522                           ;stkvar	_ff1 @ sp[(0)+-4]
 13523  0162F8  0EFF               	movlw	-1
 13524  0162FA  7EE3               	btg	plusw1,7,c
 13525                           
 13526                           ;stkvar	_ff2 @ sp[(0)+-8]
 13527  0162FC  0EFB               	movlw	-5
 13528  0162FE  7EE3               	btg	plusw1,7,c
 13529                           
 13530                           ;stkvar	_ff2 @ sp[(0)+-8]
 13531                           ;stkvar	_ff1 @ sp[(0)+-4]
 13532  016300  50E1               	movf	fsr1l,w,c
 13533  016302  0FFC               	addlw	-4
 13534  016304  6ED9               	movwf	fsr2l,c
 13535  016306  50E2               	movf	fsr1h,w,c
 13536  016308  6EDA               	movwf	fsr2h,c
 13537  01630A  0EFF               	movlw	255
 13538  01630C  22DA               	addwfc	fsr2h,f,c
 13539  01630E  0EF8               	movlw	-8
 13540  016310  50E3               	movf	plusw1,w,c
 13541  016312  5CDE               	subwf	postinc2,w,c
 13542  016314  0EF9               	movlw	-7
 13543  016316  50E3               	movf	plusw1,w,c
 13544  016318  58DE               	subwfb	postinc2,w,c
 13545  01631A  0EFA               	movlw	-6
 13546  01631C  50E3               	movf	plusw1,w,c
 13547  01631E  58DE               	subwfb	postinc2,w,c
 13548  016320  0EFB               	movlw	-5
 13549  016322  50E3               	movf	plusw1,w,c
 13550  016324  58DE               	subwfb	postinc2,w,c
 13551  016326  B0D8               	btfsc	status,0,c
 13552  016328  D002               	goto	l7016
 13553  01632A  9032               	bcf	btemp& (0+255),0,c
 13554  01632C  D001               	goto	l2317
 13555  01632E                     l7016:
 13556  01632E  8032               	bsf	btemp& (0+255),0,c
 13557  016330                     l2317:
 13558                           
 13559                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 13560  016330  0EF8               	movlw	248
 13561  016332  26E1               	addwf	fsr1l,f,c
 13562  016334  0EFF               	movlw	255
 13563  016336  22E2               	addwfc	fsr1h,f,c
 13564  016338  0012               	return		;funcret
 13565  01633A                     __end_of___flge:
 13566                           	opt callstack 0
 13567                           
 13568 ;; *************** function ___fleq *****************
 13569 ;; Defined at:
 13570 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;  ff1             4  [STACK] long 
 13573 ;;  ff2             4  [STACK] long 
 13574 ;; Auto vars:     Size  Location     Type
 13575 ;;		None
 13576 ;; Return value:  Size  Location     Type
 13577 ;;		None               void
 13578 ;; Registers used:
 13579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/5
 13582 ;;		On exit  : 0/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13589 ;;Total ram usage:        0 bytes
 13590 ;; Hardware stack levels used:    1
 13591 ;; Hardware stack levels required when called:    6
 13592 ;; This function calls:
 13593 ;;		Nothing
 13594 ;; This function is called by:
 13595 ;;		_efgtoa
 13596 ;; This function uses a reentrant model
 13597 ;;
 13598                           
 13599                           	psect	text52
 13600  016F18                     __ptext52:
 13601                           	opt callstack 0
 13602  016F18                     ___fleq:
 13603                           	opt callstack 17
 13604                           
 13605                           ;stkvar	_ff1 @ sp[(0)+-4]
 13606                           
 13607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13608                           ;incstack = 0
 13609  016F18  50E1               	movf	fsr1l,w,c
 13610  016F1A  0FFC               	addlw	-4
 13611  016F1C  6ED9               	movwf	fsr2l,c
 13612  016F1E  50E2               	movf	fsr1h,w,c
 13613  016F20  6EDA               	movwf	fsr2h,c
 13614  016F22  0EFF               	movlw	255
 13615  016F24  22DA               	addwfc	fsr2h,f,c
 13616  016F26  0E00               	movlw	0
 13617  016F28  14DE               	andwf	postinc2,w,c
 13618  016F2A  6E3A               	movwf	(btemp+8)^0,c
 13619  016F2C  0E00               	movlw	0
 13620  016F2E  14DE               	andwf	postinc2,w,c
 13621  016F30  6E3B               	movwf	(btemp+9)^0,c
 13622  016F32  0E80               	movlw	128
 13623  016F34  14DE               	andwf	postinc2,w,c
 13624  016F36  6E3C               	movwf	(btemp+10)^0,c
 13625  016F38  0E7F               	movlw	127
 13626  016F3A  14DE               	andwf	postinc2,w,c
 13627  016F3C  6E3D               	movwf	(btemp+11)^0,c
 13628  016F3E  503A               	movf	(btemp+8)^0,w,c
 13629  016F40  103B               	iorwf	(btemp+9)^0,w,c
 13630  016F42  103C               	iorwf	(btemp+10)^0,w,c
 13631  016F44  103D               	iorwf	(btemp+11)^0,w,c
 13632  016F46  A4D8               	btfss	status,2,c
 13633  016F48  D008               	goto	l6982
 13634                           
 13635                           ;stkvar	_ff1 @ sp[(0)+-4]
 13636  016F4A  0EFC               	movlw	-4
 13637  016F4C  6AE3               	clrf	plusw1,c
 13638  016F4E  0EFD               	movlw	-3
 13639  016F50  6AE3               	clrf	plusw1,c
 13640  016F52  0EFE               	movlw	-2
 13641  016F54  6AE3               	clrf	plusw1,c
 13642  016F56  0EFF               	movlw	-1
 13643  016F58  6AE3               	clrf	plusw1,c
 13644  016F5A                     l6982:
 13645                           
 13646                           ;stkvar	_ff2 @ sp[(0)+-8]
 13647  016F5A  50E1               	movf	fsr1l,w,c
 13648  016F5C  0FF8               	addlw	-8
 13649  016F5E  6ED9               	movwf	fsr2l,c
 13650  016F60  50E2               	movf	fsr1h,w,c
 13651  016F62  6EDA               	movwf	fsr2h,c
 13652  016F64  0EFF               	movlw	255
 13653  016F66  22DA               	addwfc	fsr2h,f,c
 13654  016F68  0E00               	movlw	0
 13655  016F6A  14DE               	andwf	postinc2,w,c
 13656  016F6C  6E3A               	movwf	(btemp+8)^0,c
 13657  016F6E  0E00               	movlw	0
 13658  016F70  14DE               	andwf	postinc2,w,c
 13659  016F72  6E3B               	movwf	(btemp+9)^0,c
 13660  016F74  0E80               	movlw	128
 13661  016F76  14DE               	andwf	postinc2,w,c
 13662  016F78  6E3C               	movwf	(btemp+10)^0,c
 13663  016F7A  0E7F               	movlw	127
 13664  016F7C  14DE               	andwf	postinc2,w,c
 13665  016F7E  6E3D               	movwf	(btemp+11)^0,c
 13666  016F80  503A               	movf	(btemp+8)^0,w,c
 13667  016F82  103B               	iorwf	(btemp+9)^0,w,c
 13668  016F84  103C               	iorwf	(btemp+10)^0,w,c
 13669  016F86  103D               	iorwf	(btemp+11)^0,w,c
 13670  016F88  A4D8               	btfss	status,2,c
 13671  016F8A  D008               	goto	l6986
 13672                           
 13673                           ;stkvar	_ff2 @ sp[(0)+-8]
 13674  016F8C  0EF8               	movlw	-8
 13675  016F8E  6AE3               	clrf	plusw1,c
 13676  016F90  0EF9               	movlw	-7
 13677  016F92  6AE3               	clrf	plusw1,c
 13678  016F94  0EFA               	movlw	-6
 13679  016F96  6AE3               	clrf	plusw1,c
 13680  016F98  0EFB               	movlw	-5
 13681  016F9A  6AE3               	clrf	plusw1,c
 13682  016F9C                     l6986:
 13683                           
 13684                           ;stkvar	_ff2 @ sp[(0)+-8]
 13685                           ;stkvar	_ff1 @ sp[(0)+-4]
 13686  016F9C  50E1               	movf	fsr1l,w,c
 13687  016F9E  0FFC               	addlw	-4
 13688  016FA0  6ED9               	movwf	fsr2l,c
 13689  016FA2  50E2               	movf	fsr1h,w,c
 13690  016FA4  6EDA               	movwf	fsr2h,c
 13691  016FA6  0EFF               	movlw	255
 13692  016FA8  22DA               	addwfc	fsr2h,f,c
 13693  016FAA  0EF8               	movlw	-8
 13694  016FAC  50E3               	movf	plusw1,w,c
 13695  016FAE  18DE               	xorwf	postinc2,w,c
 13696  016FB0  E10D               	bnz	u6150
 13697  016FB2  0EF9               	movlw	-7
 13698  016FB4  50E3               	movf	plusw1,w,c
 13699  016FB6  18DE               	xorwf	postinc2,w,c
 13700  016FB8  E109               	bnz	u6150
 13701  016FBA  0EFA               	movlw	-6
 13702  016FBC  50E3               	movf	plusw1,w,c
 13703  016FBE  18DE               	xorwf	postinc2,w,c
 13704  016FC0  E105               	bnz	u6150
 13705  016FC2  0EFB               	movlw	-5
 13706  016FC4  50E3               	movf	plusw1,w,c
 13707  016FC6  18DE               	xorwf	postinc2,w,c
 13708  016FC8  B4D8               	btfsc	status,2,c
 13709  016FCA  D002               	goto	l6990
 13710  016FCC                     u6150:
 13711  016FCC  9032               	bcf	btemp& (0+255),0,c
 13712  016FCE  D001               	goto	l2306
 13713  016FD0                     l6990:
 13714  016FD0  8032               	bsf	btemp& (0+255),0,c
 13715  016FD2                     l2306:
 13716                           
 13717                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 13718  016FD2  0EF8               	movlw	248
 13719  016FD4  26E1               	addwf	fsr1l,f,c
 13720  016FD6  0EFF               	movlw	255
 13721  016FD8  22E2               	addwfc	fsr1h,f,c
 13722  016FDA  0012               	return		;funcret
 13723  016FDC                     __end_of___fleq:
 13724                           	opt callstack 0
 13725                           
 13726 ;; *************** function ___fldiv *****************
 13727 ;; Defined at:
 13728 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;  b               4  [STACK] long 
 13731 ;;  a               4  [STACK] long 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;  grs             4  [STACK] unsigned long 
 13734 ;;  rem             4  [STACK] unsigned long 
 13735 ;;  new_exp         2  [STACK] short 
 13736 ;;  aexp            1  [STACK] unsigned char 
 13737 ;;  bexp            1  [STACK] unsigned char 
 13738 ;;  sign            1  [STACK] unsigned char 
 13739 ;; Return value:  Size  Location     Type
 13740 ;;                  4  [STACK] unsigned char 
 13741 ;; Registers used:
 13742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13743 ;; Tracked objects:
 13744 ;;		On entry : 0/39
 13745 ;;		On exit  : 0/0
 13746 ;;		Unchanged: 0/0
 13747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13752 ;;Total ram usage:        0 bytes
 13753 ;; Hardware stack levels used:    1
 13754 ;; Hardware stack levels required when called:    6
 13755 ;; This function calls:
 13756 ;;		Nothing
 13757 ;; This function is called by:
 13758 ;;		_conv_raw_result
 13759 ;;		_efgtoa
 13760 ;; This function uses a reentrant model
 13761 ;;
 13762                           
 13763                           	psect	text53
 13764  012D68                     __ptext53:
 13765                           	opt callstack 0
 13766  012D68                     ___fldiv:
 13767                           	opt callstack 0
 13768                           
 13769                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13770  012D68  0E0D               	movlw	13
 13771  012D6A  26E1               	addwf	fsr1l,f,c
 13772  012D6C  0E00               	movlw	0
 13773  012D6E  22E2               	addwfc	fsr1h,f,c
 13774                           
 13775                           ;stkvar	_b @ sp[(-13)+-4]
 13776                           
 13777                           ;incstack = 0
 13778  012D70  0EF2               	movlw	242
 13779  012D72  24E1               	addwf	fsr1l,w,c
 13780  012D74  6ED9               	movwf	fsr2l,c
 13781  012D76  0EFF               	movlw	255
 13782  012D78  20E2               	addwfc	fsr1h,w,c
 13783  012D7A  6EDA               	movwf	fsr2h,c
 13784  012D7C  50DF               	movf	indf2,w,c
 13785  012D7E  6E3D               	movwf	(btemp+11)^0,c
 13786  012D80  0E80               	movlw	128
 13787  012D82  163D               	andwf	(btemp+11)^0,f,c
 13788                           
 13789                           ;stkvar	_sign @ sp[(-13)+12]
 13790  012D84  0EFF               	movlw	-1
 13791  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13792                           
 13793                           ;stkvar	_b @ sp[(-13)+-4]
 13794  012D8C  0EF2               	movlw	242
 13795  012D8E  24E1               	addwf	fsr1l,w,c
 13796  012D90  6ED9               	movwf	fsr2l,c
 13797  012D92  0EFF               	movlw	255
 13798  012D94  20E2               	addwfc	fsr1h,w,c
 13799  012D96  6EDA               	movwf	fsr2h,c
 13800  012D98  50DF               	movf	indf2,w,c
 13801  012D9A  6E3D               	movwf	(btemp+11)^0,c
 13802  012D9C  90D8               	bcf	status,0,c
 13803  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 13804  012DA0  6E3C               	movwf	(btemp+10)^0,c
 13805                           
 13806                           ;stkvar	_bexp @ sp[(-13)+11]
 13807  012DA2  0EFE               	movlw	-2
 13808  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13809                           
 13810                           ;stkvar	_b @ sp[(-13)+-4]
 13811  012DAA  0EF1               	movlw	241
 13812  012DAC  24E1               	addwf	fsr1l,w,c
 13813  012DAE  6ED9               	movwf	fsr2l,c
 13814  012DB0  0EFF               	movlw	255
 13815  012DB2  20E2               	addwfc	fsr1h,w,c
 13816  012DB4  6EDA               	movwf	fsr2h,c
 13817  012DB6  AEDF               	btfss	indf2,7,c
 13818  012DB8  D002               	goto	l6584
 13819                           
 13820                           ;stkvar	_bexp @ sp[(-13)+11]
 13821  012DBA  0EFE               	movlw	-2
 13822  012DBC  80E3               	bsf	plusw1,0,c
 13823  012DBE                     l6584:
 13824                           
 13825                           ;stkvar	_bexp @ sp[(-13)+11]
 13826  012DBE  0EFE               	movlw	-2
 13827  012DC0  50E3               	movf	plusw1,w,c
 13828  012DC2  B4D8               	btfsc	status,2,c
 13829  012DC4  D027               	goto	l6594
 13830                           
 13831                           ;stkvar	_bexp @ sp[(-13)+11]
 13832  012DC6  0EFE               	movlw	-2
 13833  012DC8  28E3               	incf	plusw1,w,c
 13834  012DCA  A4D8               	btfss	status,2,c
 13835  012DCC  D018               	goto	l6590
 13836  012DCE  0E00               	movlw	0
 13837  012DD0  6E3A               	movwf	(btemp+8)^0,c
 13838  012DD2  0E00               	movlw	0
 13839  012DD4  6E3B               	movwf	(btemp+9)^0,c
 13840  012DD6  0E00               	movlw	0
 13841  012DD8  6E3C               	movwf	(btemp+10)^0,c
 13842  012DDA  0E00               	movlw	0
 13843  012DDC  6E3D               	movwf	(btemp+11)^0,c
 13844                           
 13845                           ;stkvar	_b @ sp[(-13)+-4]
 13846  012DDE  0EEF               	movlw	-17
 13847  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13848  012DE6  0EF0               	movlw	-16
 13849  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13850  012DEE  0EF1               	movlw	-15
 13851  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13852  012DF6  0EF2               	movlw	-14
 13853  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13854  012DFE                     l6590:
 13855                           
 13856                           ;stkvar	_b @ sp[(-13)+-4]
 13857  012DFE  0EF1               	movlw	-15
 13858  012E00  8EE3               	bsf	plusw1,7,c
 13859                           
 13860                           ;stkvar	_b @ sp[(-13)+-4]
 13861  012E02  0EF2               	movlw	242
 13862  012E04  24E1               	addwf	fsr1l,w,c
 13863  012E06  6ED9               	movwf	fsr2l,c
 13864  012E08  0EFF               	movlw	255
 13865  012E0A  20E2               	addwfc	fsr1h,w,c
 13866  012E0C  6EDA               	movwf	fsr2h,c
 13867  012E0E  0E00               	movlw	0
 13868  012E10  6EDF               	movwf	indf2,c
 13869  012E12  D018               	goto	l6596
 13870  012E14                     l6594:
 13871  012E14  0E00               	movlw	0
 13872  012E16  6E3A               	movwf	(btemp+8)^0,c
 13873  012E18  0E00               	movlw	0
 13874  012E1A  6E3B               	movwf	(btemp+9)^0,c
 13875  012E1C  0E00               	movlw	0
 13876  012E1E  6E3C               	movwf	(btemp+10)^0,c
 13877  012E20  0E00               	movlw	0
 13878  012E22  6E3D               	movwf	(btemp+11)^0,c
 13879                           
 13880                           ;stkvar	_b @ sp[(-13)+-4]
 13881  012E24  0EEF               	movlw	-17
 13882  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13883  012E2C  0EF0               	movlw	-16
 13884  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13885  012E34  0EF1               	movlw	-15
 13886  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13887  012E3C  0EF2               	movlw	-14
 13888  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13889  012E44                     l6596:
 13890                           
 13891                           ;stkvar	_a @ sp[(-13)+-8]
 13892  012E44  0EEE               	movlw	238
 13893  012E46  24E1               	addwf	fsr1l,w,c
 13894  012E48  6ED9               	movwf	fsr2l,c
 13895  012E4A  0EFF               	movlw	255
 13896  012E4C  20E2               	addwfc	fsr1h,w,c
 13897  012E4E  6EDA               	movwf	fsr2h,c
 13898  012E50  50DF               	movf	indf2,w,c
 13899  012E52  6E3D               	movwf	(btemp+11)^0,c
 13900  012E54  0E80               	movlw	128
 13901  012E56  163D               	andwf	(btemp+11)^0,f,c
 13902                           
 13903                           ;stkvar	_sign @ sp[(-13)+12]
 13904  012E58  50E1               	movf	fsr1l,w,c
 13905  012E5A  0FFF               	addlw	-1
 13906  012E5C  6ED9               	movwf	fsr2l,c
 13907  012E5E  50E2               	movf	fsr1h,w,c
 13908  012E60  6EDA               	movwf	fsr2h,c
 13909  012E62  0EFF               	movlw	255
 13910  012E64  22DA               	addwfc	fsr2h,f,c
 13911  012E66  503D               	movf	(btemp+11)^0,w,c
 13912  012E68  1ADF               	xorwf	indf2,f,c
 13913                           
 13914                           ;stkvar	_a @ sp[(-13)+-8]
 13915  012E6A  0EEE               	movlw	238
 13916  012E6C  24E1               	addwf	fsr1l,w,c
 13917  012E6E  6ED9               	movwf	fsr2l,c
 13918  012E70  0EFF               	movlw	255
 13919  012E72  20E2               	addwfc	fsr1h,w,c
 13920  012E74  6EDA               	movwf	fsr2h,c
 13921  012E76  50DF               	movf	indf2,w,c
 13922  012E78  6E3D               	movwf	(btemp+11)^0,c
 13923  012E7A  90D8               	bcf	status,0,c
 13924  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 13925  012E7E  6E3C               	movwf	(btemp+10)^0,c
 13926                           
 13927                           ;stkvar	_aexp @ sp[(-13)+10]
 13928  012E80  0EFD               	movlw	-3
 13929  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13930                           
 13931                           ;stkvar	_a @ sp[(-13)+-8]
 13932  012E88  0EED               	movlw	237
 13933  012E8A  24E1               	addwf	fsr1l,w,c
 13934  012E8C  6ED9               	movwf	fsr2l,c
 13935  012E8E  0EFF               	movlw	255
 13936  012E90  20E2               	addwfc	fsr1h,w,c
 13937  012E92  6EDA               	movwf	fsr2h,c
 13938  012E94  AEDF               	btfss	indf2,7,c
 13939  012E96  D002               	goto	l6604
 13940                           
 13941                           ;stkvar	_aexp @ sp[(-13)+10]
 13942  012E98  0EFD               	movlw	-3
 13943  012E9A  80E3               	bsf	plusw1,0,c
 13944  012E9C                     l6604:
 13945                           
 13946                           ;stkvar	_aexp @ sp[(-13)+10]
 13947  012E9C  0EFD               	movlw	-3
 13948  012E9E  50E3               	movf	plusw1,w,c
 13949  012EA0  B4D8               	btfsc	status,2,c
 13950  012EA2  D027               	goto	l6614
 13951                           
 13952                           ;stkvar	_aexp @ sp[(-13)+10]
 13953  012EA4  0EFD               	movlw	-3
 13954  012EA6  28E3               	incf	plusw1,w,c
 13955  012EA8  A4D8               	btfss	status,2,c
 13956  012EAA  D018               	goto	l6610
 13957  012EAC  0E00               	movlw	0
 13958  012EAE  6E3A               	movwf	(btemp+8)^0,c
 13959  012EB0  0E00               	movlw	0
 13960  012EB2  6E3B               	movwf	(btemp+9)^0,c
 13961  012EB4  0E00               	movlw	0
 13962  012EB6  6E3C               	movwf	(btemp+10)^0,c
 13963  012EB8  0E00               	movlw	0
 13964  012EBA  6E3D               	movwf	(btemp+11)^0,c
 13965                           
 13966                           ;stkvar	_a @ sp[(-13)+-8]
 13967  012EBC  0EEB               	movlw	-21
 13968  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13969  012EC4  0EEC               	movlw	-20
 13970  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13971  012ECC  0EED               	movlw	-19
 13972  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13973  012ED4  0EEE               	movlw	-18
 13974  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13975  012EDC                     l6610:
 13976                           
 13977                           ;stkvar	_a @ sp[(-13)+-8]
 13978  012EDC  0EED               	movlw	-19
 13979  012EDE  8EE3               	bsf	plusw1,7,c
 13980                           
 13981                           ;stkvar	_a @ sp[(-13)+-8]
 13982  012EE0  0EEE               	movlw	238
 13983  012EE2  24E1               	addwf	fsr1l,w,c
 13984  012EE4  6ED9               	movwf	fsr2l,c
 13985  012EE6  0EFF               	movlw	255
 13986  012EE8  20E2               	addwfc	fsr1h,w,c
 13987  012EEA  6EDA               	movwf	fsr2h,c
 13988  012EEC  0E00               	movlw	0
 13989  012EEE  6EDF               	movwf	indf2,c
 13990  012EF0  D018               	goto	l6616
 13991  012EF2                     l6614:
 13992  012EF2  0E00               	movlw	0
 13993  012EF4  6E3A               	movwf	(btemp+8)^0,c
 13994  012EF6  0E00               	movlw	0
 13995  012EF8  6E3B               	movwf	(btemp+9)^0,c
 13996  012EFA  0E00               	movlw	0
 13997  012EFC  6E3C               	movwf	(btemp+10)^0,c
 13998  012EFE  0E00               	movlw	0
 13999  012F00  6E3D               	movwf	(btemp+11)^0,c
 14000                           
 14001                           ;stkvar	_a @ sp[(-13)+-8]
 14002  012F02  0EEB               	movlw	-21
 14003  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14004  012F0A  0EEC               	movlw	-20
 14005  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14006  012F12  0EED               	movlw	-19
 14007  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14008  012F1A  0EEE               	movlw	-18
 14009  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14010  012F22                     l6616:
 14011                           
 14012                           ;stkvar	_a @ sp[(-13)+-8]
 14013  012F22  0EEB               	movlw	-21
 14014  012F24  50E3               	movf	plusw1,w,c
 14015  012F26  E139               	bnz	l6628
 14016  012F28  0EEC               	movlw	-20
 14017  012F2A  50E3               	movf	plusw1,w,c
 14018  012F2C  E136               	bnz	l6628
 14019  012F2E  0EED               	movlw	-19
 14020  012F30  50E3               	movf	plusw1,w,c
 14021  012F32  E133               	bnz	l6628
 14022  012F34  0EEE               	movlw	-18
 14023  012F36  50E3               	movf	plusw1,w,c
 14024  012F38  A4D8               	btfss	status,2,c
 14025  012F3A  D02F               	goto	l6628
 14026                           
 14027                           ;stkvar	_b @ sp[(-13)+-4]
 14028  012F3C  0EEF               	movlw	-17
 14029  012F3E  6AE3               	clrf	plusw1,c
 14030  012F40  0EF0               	movlw	-16
 14031  012F42  6AE3               	clrf	plusw1,c
 14032  012F44  0EF1               	movlw	-15
 14033  012F46  6AE3               	clrf	plusw1,c
 14034  012F48  0EF2               	movlw	-14
 14035  012F4A  6AE3               	clrf	plusw1,c
 14036                           
 14037                           ;stkvar	_b @ sp[(-13)+-4]
 14038  012F4C  0EF1               	movlw	241
 14039  012F4E  24E1               	addwf	fsr1l,w,c
 14040  012F50  6ED9               	movwf	fsr2l,c
 14041  012F52  0EFF               	movlw	255
 14042  012F54  20E2               	addwfc	fsr1h,w,c
 14043  012F56  6EDA               	movwf	fsr2h,c
 14044  012F58  0E80               	movlw	128
 14045  012F5A  12DE               	iorwf	postinc2,f,c
 14046  012F5C  0E7F               	movlw	127
 14047  012F5E  12DD               	iorwf	postdec2,f,c
 14048  012F60                     l6622:
 14049                           
 14050                           ;stkvar	_sign @ sp[(-13)+12]
 14051  012F60  0EFF               	movlw	-1
 14052  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 14053                           
 14054                           ;stkvar	_b @ sp[(-13)+-4]
 14055  012F68  0EF2               	movlw	242
 14056  012F6A  24E1               	addwf	fsr1l,w,c
 14057  012F6C  6ED9               	movwf	fsr2l,c
 14058  012F6E  0EFF               	movlw	255
 14059  012F70  20E2               	addwfc	fsr1h,w,c
 14060  012F72  6EDA               	movwf	fsr2h,c
 14061  012F74  503D               	movf	(btemp+11)^0,w,c
 14062  012F76  12DF               	iorwf	indf2,f,c
 14063                           
 14064                           ;stkvar	_b @ sp[(-13)+-4]
 14065  012F78  0EEF               	movlw	-17
 14066  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 14067  012F80  0EF0               	movlw	-16
 14068  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 14069  012F88  0EF1               	movlw	-15
 14070  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 14071  012F90  0EF2               	movlw	-14
 14072  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 14073  012F98  D19F               	goto	l2629
 14074  012F9A                     l6628:
 14075                           
 14076                           ;stkvar	_bexp @ sp[(-13)+11]
 14077  012F9A  0EFE               	movlw	-2
 14078  012F9C  50E3               	movf	plusw1,w,c
 14079  012F9E  A4D8               	btfss	status,2,c
 14080  012FA0  D009               	goto	l6636
 14081  012FA2  0E00               	movlw	0
 14082  012FA4  6E32               	movwf	btemp^0,c
 14083  012FA6  0E00               	movlw	0
 14084  012FA8  6E33               	movwf	(btemp+1)^0,c
 14085  012FAA  0E00               	movlw	0
 14086  012FAC  6E34               	movwf	(btemp+2)^0,c
 14087  012FAE  0E00               	movlw	0
 14088  012FB0  6E35               	movwf	(btemp+3)^0,c
 14089  012FB2  D192               	goto	l2629
 14090  012FB4                     l6636:
 14091                           
 14092                           ;stkvar	_bexp @ sp[(-13)+11]
 14093  012FB4  0EFE               	movlw	-2
 14094  012FB6  50E3               	movf	plusw1,w,c
 14095  012FB8  6E3C               	movwf	(btemp+10)^0,c
 14096  012FBA  6A3D               	clrf	(btemp+11)^0,c
 14097                           
 14098                           ;stkvar	_aexp @ sp[(-13)+10]
 14099  012FBC  0EFD               	movlw	-3
 14100  012FBE  50E3               	movf	plusw1,w,c
 14101  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 14102  012FC2  0E00               	movlw	0
 14103  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 14104  012FC6  0E7F               	movlw	127
 14105  012FC8  263C               	addwf	(btemp+10)^0,f,c
 14106  012FCA  0E00               	movlw	0
 14107  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 14108                           
 14109                           ;stkvar	_new_exp @ sp[(-13)+8]
 14110  012FCE  0EFB               	movlw	-5
 14111  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14112  012FD6  0EFC               	movlw	-4
 14113  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14114                           
 14115                           ;stkvar	_b @ sp[(-13)+-4]
 14116  012FDE  0EEF               	movlw	-17
 14117  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14118  012FE6  0EF0               	movlw	-16
 14119  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14120  012FEE  0EF1               	movlw	-15
 14121  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 14122  012FF6  0EF2               	movlw	-14
 14123  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 14124                           
 14125                           ;stkvar	_rem @ sp[(-13)+4]
 14126  012FFE  0EF7               	movlw	-9
 14127  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14128  013006  0EF8               	movlw	-8
 14129  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14130  01300E  0EF9               	movlw	-7
 14131  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14132  013016  0EFA               	movlw	-6
 14133  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14134                           
 14135                           ;stkvar	_b @ sp[(-13)+-4]
 14136  01301E  0EEF               	movlw	-17
 14137  013020  6AE3               	clrf	plusw1,c
 14138  013022  0EF0               	movlw	-16
 14139  013024  6AE3               	clrf	plusw1,c
 14140  013026  0EF1               	movlw	-15
 14141  013028  6AE3               	clrf	plusw1,c
 14142  01302A  0EF2               	movlw	-14
 14143  01302C  6AE3               	clrf	plusw1,c
 14144                           
 14145                           ;stkvar	_grs @ sp[(-13)+0]
 14146  01302E  0EF3               	movlw	-13
 14147  013030  6AE3               	clrf	plusw1,c
 14148  013032  0EF4               	movlw	-12
 14149  013034  6AE3               	clrf	plusw1,c
 14150  013036  0EF5               	movlw	-11
 14151  013038  6AE3               	clrf	plusw1,c
 14152  01303A  0EF6               	movlw	-10
 14153  01303C  6AE3               	clrf	plusw1,c
 14154                           
 14155                           ;stkvar	_aexp @ sp[(-13)+10]
 14156  01303E  0EFD               	movlw	-3
 14157  013040  6AE3               	clrf	plusw1,c
 14158  013042  D050               	goto	l6664
 14159  013044                     l6646:
 14160                           
 14161                           ;stkvar	_aexp @ sp[(-13)+10]
 14162  013044  0EFD               	movlw	-3
 14163  013046  50E3               	movf	plusw1,w,c
 14164  013048  B4D8               	btfsc	status,2,c
 14165  01304A  D020               	goto	l6656
 14166                           
 14167                           ;stkvar	_rem @ sp[(-13)+4]
 14168  01304C  90D8               	bcf	status,0,c
 14169  01304E  0EF7               	movlw	-9
 14170  013050  36E3               	rlcf	plusw1,f,c
 14171  013052  0EF8               	movlw	-8
 14172  013054  36E3               	rlcf	plusw1,f,c
 14173  013056  0EF9               	movlw	-7
 14174  013058  36E3               	rlcf	plusw1,f,c
 14175  01305A  0EFA               	movlw	-6
 14176  01305C  36E3               	rlcf	plusw1,f,c
 14177                           
 14178                           ;stkvar	_b @ sp[(-13)+-4]
 14179  01305E  90D8               	bcf	status,0,c
 14180  013060  0EEF               	movlw	-17
 14181  013062  36E3               	rlcf	plusw1,f,c
 14182  013064  0EF0               	movlw	-16
 14183  013066  36E3               	rlcf	plusw1,f,c
 14184  013068  0EF1               	movlw	-15
 14185  01306A  36E3               	rlcf	plusw1,f,c
 14186  01306C  0EF2               	movlw	-14
 14187  01306E  36E3               	rlcf	plusw1,f,c
 14188                           
 14189                           ;stkvar	_grs @ sp[(-13)+0]
 14190  013070  0EF6               	movlw	-10
 14191  013072  AEE3               	btfss	plusw1,7,c
 14192  013074  D002               	goto	l6654
 14193                           
 14194                           ;stkvar	_b @ sp[(-13)+-4]
 14195  013076  0EEF               	movlw	-17
 14196  013078  80E3               	bsf	plusw1,0,c
 14197  01307A                     l6654:
 14198                           
 14199                           ;stkvar	_grs @ sp[(-13)+0]
 14200  01307A  90D8               	bcf	status,0,c
 14201  01307C  0EF3               	movlw	-13
 14202  01307E  36E3               	rlcf	plusw1,f,c
 14203  013080  0EF4               	movlw	-12
 14204  013082  36E3               	rlcf	plusw1,f,c
 14205  013084  0EF5               	movlw	-11
 14206  013086  36E3               	rlcf	plusw1,f,c
 14207  013088  0EF6               	movlw	-10
 14208  01308A  36E3               	rlcf	plusw1,f,c
 14209  01308C                     l6656:
 14210                           
 14211                           ;stkvar	_a @ sp[(-13)+-8]
 14212                           ;stkvar	_rem @ sp[(-13)+4]
 14213  01308C  50E1               	movf	fsr1l,w,c
 14214  01308E  0FF7               	addlw	-9
 14215  013090  6ED9               	movwf	fsr2l,c
 14216  013092  50E2               	movf	fsr1h,w,c
 14217  013094  6EDA               	movwf	fsr2h,c
 14218  013096  0EFF               	movlw	255
 14219  013098  22DA               	addwfc	fsr2h,f,c
 14220  01309A  0EEB               	movlw	-21
 14221  01309C  50E3               	movf	plusw1,w,c
 14222  01309E  5CDE               	subwf	postinc2,w,c
 14223  0130A0  0EEC               	movlw	-20
 14224  0130A2  50E3               	movf	plusw1,w,c
 14225  0130A4  58DE               	subwfb	postinc2,w,c
 14226  0130A6  0EED               	movlw	-19
 14227  0130A8  50E3               	movf	plusw1,w,c
 14228  0130AA  58DE               	subwfb	postinc2,w,c
 14229  0130AC  0EEE               	movlw	-18
 14230  0130AE  50E3               	movf	plusw1,w,c
 14231  0130B0  58DE               	subwfb	postinc2,w,c
 14232  0130B2  A0D8               	btfss	status,0,c
 14233  0130B4  D015               	goto	l6662
 14234                           
 14235                           ;stkvar	_grs @ sp[(-13)+0]
 14236  0130B6  0EF6               	movlw	-10
 14237  0130B8  8CE3               	bsf	plusw1,6,c
 14238                           
 14239                           ;stkvar	_a @ sp[(-13)+-8]
 14240                           ;stkvar	_rem @ sp[(-13)+4]
 14241  0130BA  50E1               	movf	fsr1l,w,c
 14242  0130BC  0FF7               	addlw	-9
 14243  0130BE  6ED9               	movwf	fsr2l,c
 14244  0130C0  50E2               	movf	fsr1h,w,c
 14245  0130C2  6EDA               	movwf	fsr2h,c
 14246  0130C4  0EFF               	movlw	255
 14247  0130C6  22DA               	addwfc	fsr2h,f,c
 14248  0130C8  0EEB               	movlw	-21
 14249  0130CA  50E3               	movf	plusw1,w,c
 14250  0130CC  5EDE               	subwf	postinc2,f,c
 14251  0130CE  0EEC               	movlw	-20
 14252  0130D0  50E3               	movf	plusw1,w,c
 14253  0130D2  5ADE               	subwfb	postinc2,f,c
 14254  0130D4  0EED               	movlw	-19
 14255  0130D6  50E3               	movf	plusw1,w,c
 14256  0130D8  5ADE               	subwfb	postinc2,f,c
 14257  0130DA  0EEE               	movlw	-18
 14258  0130DC  50E3               	movf	plusw1,w,c
 14259  0130DE  5ADE               	subwfb	postinc2,f,c
 14260  0130E0                     l6662:
 14261                           
 14262                           ;stkvar	_aexp @ sp[(-13)+10]
 14263  0130E0  0EFD               	movlw	-3
 14264  0130E2  2AE3               	incf	plusw1,f,c
 14265  0130E4                     l6664:
 14266                           
 14267                           ;stkvar	_aexp @ sp[(-13)+10]
 14268  0130E4  0EFD               	movlw	-3
 14269  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 14270  0130EC  0E19               	movlw	25
 14271  0130EE  6432               	cpfsgt	btemp^0,c
 14272  0130F0  D7A9               	goto	l6646
 14273                           
 14274                           ;stkvar	_rem @ sp[(-13)+4]
 14275  0130F2  0EF7               	movlw	-9
 14276  0130F4  50E3               	movf	plusw1,w,c
 14277  0130F6  E10A               	bnz	u5650
 14278  0130F8  0EF8               	movlw	-8
 14279  0130FA  50E3               	movf	plusw1,w,c
 14280  0130FC  E107               	bnz	u5650
 14281  0130FE  0EF9               	movlw	-7
 14282  013100  50E3               	movf	plusw1,w,c
 14283  013102  E104               	bnz	u5650
 14284  013104  0EFA               	movlw	-6
 14285  013106  50E3               	movf	plusw1,w,c
 14286  013108  B4D8               	btfsc	status,2,c
 14287  01310A  D024               	goto	l6680
 14288  01310C                     u5650:
 14289                           
 14290                           ;stkvar	_grs @ sp[(-13)+0]
 14291  01310C  0EF3               	movlw	-13
 14292  01310E  80E3               	bsf	plusw1,0,c
 14293  013110  D021               	goto	l6680
 14294  013112                     l6670:
 14295                           
 14296                           ;stkvar	_b @ sp[(-13)+-4]
 14297  013112  90D8               	bcf	status,0,c
 14298  013114  0EEF               	movlw	-17
 14299  013116  36E3               	rlcf	plusw1,f,c
 14300  013118  0EF0               	movlw	-16
 14301  01311A  36E3               	rlcf	plusw1,f,c
 14302  01311C  0EF1               	movlw	-15
 14303  01311E  36E3               	rlcf	plusw1,f,c
 14304  013120  0EF2               	movlw	-14
 14305  013122  36E3               	rlcf	plusw1,f,c
 14306                           
 14307                           ;stkvar	_grs @ sp[(-13)+0]
 14308  013124  0EF6               	movlw	-10
 14309  013126  AEE3               	btfss	plusw1,7,c
 14310  013128  D002               	goto	l6676
 14311                           
 14312                           ;stkvar	_b @ sp[(-13)+-4]
 14313  01312A  0EEF               	movlw	-17
 14314  01312C  80E3               	bsf	plusw1,0,c
 14315  01312E                     l6676:
 14316                           
 14317                           ;stkvar	_grs @ sp[(-13)+0]
 14318  01312E  90D8               	bcf	status,0,c
 14319  013130  0EF3               	movlw	-13
 14320  013132  36E3               	rlcf	plusw1,f,c
 14321  013134  0EF4               	movlw	-12
 14322  013136  36E3               	rlcf	plusw1,f,c
 14323  013138  0EF5               	movlw	-11
 14324  01313A  36E3               	rlcf	plusw1,f,c
 14325  01313C  0EF6               	movlw	-10
 14326  01313E  36E3               	rlcf	plusw1,f,c
 14327                           
 14328                           ;stkvar	_new_exp @ sp[(-13)+8]
 14329  013140  50E1               	movf	fsr1l,w,c
 14330  013142  0FFB               	addlw	-5
 14331  013144  6ED9               	movwf	fsr2l,c
 14332  013146  50E2               	movf	fsr1h,w,c
 14333  013148  6EDA               	movwf	fsr2h,c
 14334  01314A  0EFF               	movlw	255
 14335  01314C  22DA               	addwfc	fsr2h,f,c
 14336  01314E  06DE               	decf	postinc2,f,c
 14337  013150  0E00               	movlw	0
 14338  013152  5ADD               	subwfb	postdec2,f,c
 14339  013154                     l6680:
 14340                           
 14341                           ;stkvar	_b @ sp[(-13)+-4]
 14342  013154  0EF1               	movlw	-15
 14343  013156  AEE3               	btfss	plusw1,7,c
 14344  013158  D7DC               	goto	l6670
 14345                           
 14346                           ;stkvar	_aexp @ sp[(-13)+10]
 14347  01315A  0EFD               	movlw	-3
 14348  01315C  6AE3               	clrf	plusw1,c
 14349                           
 14350                           ;stkvar	_grs @ sp[(-13)+0]
 14351  01315E  0EF6               	movlw	-10
 14352  013160  AEE3               	btfss	plusw1,7,c
 14353  013162  D020               	goto	l6694
 14354                           
 14355                           ;stkvar	_grs @ sp[(-13)+0]
 14356  013164  50E1               	movf	fsr1l,w,c
 14357  013166  0FF3               	addlw	-13
 14358  013168  6ED9               	movwf	fsr2l,c
 14359  01316A  50E2               	movf	fsr1h,w,c
 14360  01316C  6EDA               	movwf	fsr2h,c
 14361  01316E  0EFF               	movlw	255
 14362  013170  22DA               	addwfc	fsr2h,f,c
 14363  013172  0EFF               	movlw	255
 14364  013174  14DE               	andwf	postinc2,w,c
 14365  013176  6E3A               	movwf	(btemp+8)^0,c
 14366  013178  0EFF               	movlw	255
 14367  01317A  14DE               	andwf	postinc2,w,c
 14368  01317C  6E3B               	movwf	(btemp+9)^0,c
 14369  01317E  0EFF               	movlw	255
 14370  013180  14DE               	andwf	postinc2,w,c
 14371  013182  6E3C               	movwf	(btemp+10)^0,c
 14372  013184  0E7F               	movlw	127
 14373  013186  14DE               	andwf	postinc2,w,c
 14374  013188  6E3D               	movwf	(btemp+11)^0,c
 14375  01318A  503A               	movf	(btemp+8)^0,w,c
 14376  01318C  103B               	iorwf	(btemp+9)^0,w,c
 14377  01318E  103C               	iorwf	(btemp+10)^0,w,c
 14378  013190  103D               	iorwf	(btemp+11)^0,w,c
 14379  013192  B4D8               	btfsc	status,2,c
 14380  013194  D004               	goto	l6690
 14381  013196                     u5690:
 14382                           
 14383                           ;stkvar	_aexp @ sp[(-13)+10]
 14384  013196  0EFD               	movlw	-3
 14385  013198  6AE3               	clrf	plusw1,c
 14386  01319A  2AE3               	incf	plusw1,f,c
 14387  01319C  D003               	goto	l6694
 14388  01319E                     l6690:
 14389                           
 14390                           ;stkvar	_b @ sp[(-13)+-4]
 14391  01319E  0EEF               	movlw	-17
 14392  0131A0  B0E3               	btfsc	plusw1,0,c
 14393  0131A2  D7F9               	goto	u5690
 14394  0131A4                     l6694:
 14395                           
 14396                           ;stkvar	_aexp @ sp[(-13)+10]
 14397  0131A4  0EFD               	movlw	-3
 14398  0131A6  50E3               	movf	plusw1,w,c
 14399  0131A8  B4D8               	btfsc	status,2,c
 14400  0131AA  D036               	goto	l6704
 14401                           
 14402                           ;stkvar	_b @ sp[(-13)+-4]
 14403  0131AC  50E1               	movf	fsr1l,w,c
 14404  0131AE  0FEF               	addlw	-17
 14405  0131B0  6ED9               	movwf	fsr2l,c
 14406  0131B2  50E2               	movf	fsr1h,w,c
 14407  0131B4  6EDA               	movwf	fsr2h,c
 14408  0131B6  0EFF               	movlw	255
 14409  0131B8  22DA               	addwfc	fsr2h,f,c
 14410  0131BA  2ADE               	incf	postinc2,f,c
 14411  0131BC  0E00               	movlw	0
 14412  0131BE  22DE               	addwfc	postinc2,f,c
 14413  0131C0  22DE               	addwfc	postinc2,f,c
 14414  0131C2  22DE               	addwfc	postinc2,f,c
 14415                           
 14416                           ;stkvar	_b @ sp[(-13)+-4]
 14417  0131C4  0EF2               	movlw	-14
 14418  0131C6  A0E3               	btfss	plusw1,0,c
 14419  0131C8  D027               	goto	l6704
 14420  0131CA  0E01               	movlw	1
 14421  0131CC  6E3D               	movwf	(btemp+11)^0,c
 14422                           
 14423                           ;stkvar	_b @ sp[(-13)+-4]
 14424  0131CE  50E1               	movf	fsr1l,w,c
 14425  0131D0  0FEF               	addlw	-17
 14426  0131D2  6ED9               	movwf	fsr2l,c
 14427  0131D4  50E2               	movf	fsr1h,w,c
 14428  0131D6  6EDA               	movwf	fsr2h,c
 14429  0131D8  0EFF               	movlw	255
 14430  0131DA  22DA               	addwfc	fsr2h,f,c
 14431  0131DC  283D               	incf	(btemp+11)^0,w,c
 14432  0131DE  52DE               	movf	postinc2,f,c
 14433  0131E0  D008               	goto	u5730
 14434  0131E2                     u5735:
 14435  0131E2  52DE               	movf	postinc2,f,c
 14436  0131E4  90D8               	bcf	status,0,c
 14437  0131E6  BEDC               	btfsc	preinc2,7,c
 14438  0131E8  80D8               	bsf	status,0,c
 14439  0131EA  32DD               	rrcf	postdec2,f,c
 14440  0131EC  32DD               	rrcf	postdec2,f,c
 14441  0131EE  32DD               	rrcf	postdec2,f,c
 14442  0131F0  32DE               	rrcf	postinc2,f,c
 14443  0131F2                     u5730:
 14444  0131F2  2EE8               	decfsz	wreg,f,c
 14445  0131F4  D7F6               	goto	u5735
 14446                           
 14447                           ;stkvar	_new_exp @ sp[(-13)+8]
 14448  0131F6  0EFB               	movlw	-5
 14449  0131F8  50E3               	movf	plusw1,w,c
 14450  0131FA  0F01               	addlw	1
 14451  0131FC  6E32               	movwf	btemp^0,c
 14452  0131FE  0EFB               	movlw	-5
 14453  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 14454  013206  6A32               	clrf	btemp^0,c
 14455  013208  0EFC               	movlw	-4
 14456  01320A  50E3               	movf	plusw1,w,c
 14457  01320C  2032               	addwfc	btemp^0,w,c
 14458  01320E  6E32               	movwf	btemp^0,c
 14459  013210  0EFC               	movlw	-4
 14460  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 14461  013218                     l6704:
 14462                           
 14463                           ;stkvar	_new_exp @ sp[(-13)+8]
 14464  013218  0EFC               	movlw	-4
 14465  01321A  BEE3               	btfsc	plusw1,7,c
 14466  01321C  D01B               	goto	l6710
 14467  01321E  0EFC               	movlw	-4
 14468  013220  50E3               	movf	plusw1,w,c
 14469  013222  E104               	bnz	u5740
 14470  013224  0EFB               	movlw	-5
 14471  013226  28E3               	incf	plusw1,w,c
 14472  013228  A0D8               	btfss	status,0,c
 14473  01322A  D014               	goto	l6710
 14474  01322C                     u5740:
 14475  01322C  0EFF               	movlw	255
 14476  01322E  6E3C               	movwf	(btemp+10)^0,c
 14477  013230  0E00               	movlw	0
 14478  013232  6E3D               	movwf	(btemp+11)^0,c
 14479                           
 14480                           ;stkvar	_new_exp @ sp[(-13)+8]
 14481  013234  0EFB               	movlw	-5
 14482  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14483  01323C  0EFC               	movlw	-4
 14484  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14485                           
 14486                           ;stkvar	_b @ sp[(-13)+-4]
 14487  013244  0EEF               	movlw	-17
 14488  013246  6AE3               	clrf	plusw1,c
 14489  013248  0EF0               	movlw	-16
 14490  01324A  6AE3               	clrf	plusw1,c
 14491  01324C  0EF1               	movlw	-15
 14492  01324E  6AE3               	clrf	plusw1,c
 14493  013250  0EF2               	movlw	-14
 14494  013252  6AE3               	clrf	plusw1,c
 14495  013254                     l6710:
 14496                           
 14497                           ;stkvar	_new_exp @ sp[(-13)+8]
 14498  013254  0EFC               	movlw	-4
 14499  013256  BEE3               	btfsc	plusw1,7,c
 14500  013258  D007               	goto	u5750
 14501  01325A  0EFC               	movlw	-4
 14502  01325C  50E3               	movf	plusw1,w,c
 14503  01325E  E112               	bnz	l6716
 14504  013260  0EFB               	movlw	-5
 14505  013262  04E3               	decf	plusw1,w,c
 14506  013264  B0D8               	btfsc	status,0,c
 14507  013266  D00E               	goto	l6716
 14508  013268                     u5750:
 14509                           
 14510                           ;stkvar	_new_exp @ sp[(-13)+8]
 14511  013268  0EFB               	movlw	-5
 14512  01326A  6AE3               	clrf	plusw1,c
 14513  01326C  0EFC               	movlw	-4
 14514  01326E  6AE3               	clrf	plusw1,c
 14515                           
 14516                           ;stkvar	_b @ sp[(-13)+-4]
 14517  013270  0EEF               	movlw	-17
 14518  013272  6AE3               	clrf	plusw1,c
 14519  013274  0EF0               	movlw	-16
 14520  013276  6AE3               	clrf	plusw1,c
 14521  013278  0EF1               	movlw	-15
 14522  01327A  6AE3               	clrf	plusw1,c
 14523  01327C  0EF2               	movlw	-14
 14524  01327E  6AE3               	clrf	plusw1,c
 14525                           
 14526                           ;stkvar	_sign @ sp[(-13)+12]
 14527  013280  0EFF               	movlw	-1
 14528  013282  6AE3               	clrf	plusw1,c
 14529  013284                     l6716:
 14530                           
 14531                           ;stkvar	_new_exp @ sp[(-13)+8]
 14532                           ;stkvar	_bexp @ sp[(-13)+11]
 14533  013284  0EFB               	movlw	-5
 14534  013286  006F FF8C  F032    	movff	plusw1,btemp
 14535  01328C  0EFE               	movlw	-2
 14536  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 14537                           
 14538                           ;stkvar	_bexp @ sp[(-13)+11]
 14539  013294  0EFE               	movlw	-2
 14540  013296  A0E3               	btfss	plusw1,0,c
 14541  013298  D009               	goto	l6722
 14542                           
 14543                           ;stkvar	_b @ sp[(-13)+-4]
 14544  01329A  0EF1               	movlw	241
 14545  01329C  24E1               	addwf	fsr1l,w,c
 14546  01329E  6ED9               	movwf	fsr2l,c
 14547  0132A0  0EFF               	movlw	255
 14548  0132A2  20E2               	addwfc	fsr1h,w,c
 14549  0132A4  6EDA               	movwf	fsr2h,c
 14550  0132A6  0E00               	movlw	0
 14551  0132A8  8EDB               	bsf	plusw2,7,c
 14552  0132AA  D008               	goto	l6724
 14553  0132AC                     l6722:
 14554                           
 14555                           ;stkvar	_b @ sp[(-13)+-4]
 14556  0132AC  0EF1               	movlw	241
 14557  0132AE  24E1               	addwf	fsr1l,w,c
 14558  0132B0  6ED9               	movwf	fsr2l,c
 14559  0132B2  0EFF               	movlw	255
 14560  0132B4  20E2               	addwfc	fsr1h,w,c
 14561  0132B6  6EDA               	movwf	fsr2h,c
 14562  0132B8  0E7F               	movlw	127
 14563  0132BA  16DF               	andwf	indf2,f,c
 14564  0132BC                     l6724:
 14565                           
 14566                           ;stkvar	_b @ sp[(-13)+-4]
 14567  0132BC  0EF2               	movlw	242
 14568  0132BE  24E1               	addwf	fsr1l,w,c
 14569  0132C0  6ED9               	movwf	fsr2l,c
 14570  0132C2  0EFF               	movlw	255
 14571  0132C4  20E2               	addwfc	fsr1h,w,c
 14572  0132C6  6EDA               	movwf	fsr2h,c
 14573                           
 14574                           ;stkvar	_bexp @ sp[(-13)+11]
 14575  0132C8  0EFE               	movlw	-2
 14576  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 14577  0132D0  90D8               	bcf	status,0,c
 14578  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 14579  0132D4  6EDF               	movwf	indf2,c
 14580  0132D6  D644               	goto	l6622
 14581  0132D8                     l2629:
 14582                           
 14583                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 14584  0132D8  0EEB               	movlw	235
 14585  0132DA  26E1               	addwf	fsr1l,f,c
 14586  0132DC  0EFF               	movlw	255
 14587  0132DE  22E2               	addwfc	fsr1h,f,c
 14588  0132E0  0012               	return		;funcret
 14589  0132E2                     __end_of___fldiv:
 14590                           	opt callstack 0
 14591                           
 14592 ;; *************** function ___awmod *****************
 14593 ;; Defined at:
 14594 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;  dividend        2  [STACK] int 
 14597 ;;  divisor         2  [STACK] int 
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  sign            1  [STACK] unsigned char 
 14600 ;;  counter         1  [STACK] unsigned char 
 14601 ;; Return value:  Size  Location     Type
 14602 ;;                  2  [STACK] int 
 14603 ;; Registers used:
 14604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14605 ;; Tracked objects:
 14606 ;;		On entry : 0/5
 14607 ;;		On exit  : 0/0
 14608 ;;		Unchanged: 0/0
 14609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14614 ;;Total ram usage:        0 bytes
 14615 ;; Hardware stack levels used:    1
 14616 ;; Hardware stack levels required when called:    6
 14617 ;; This function calls:
 14618 ;;		Nothing
 14619 ;; This function is called by:
 14620 ;;		_efgtoa
 14621 ;; This function uses a reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text54
 14625  016822                     __ptext54:
 14626                           	opt callstack 0
 14627  016822                     ___awmod:
 14628                           	opt callstack 0
 14629                           
 14630                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14631  016822  52E6               	movf	postinc1,f,c
 14632  016824  52E6               	movf	postinc1,f,c
 14633                           
 14634                           ;stkvar	_sign @ sp[(-2)+0]
 14635                           
 14636                           ;incstack = 0
 14637  016826  0EFE               	movlw	-2
 14638  016828  6AE3               	clrf	plusw1,c
 14639                           
 14640                           ;stkvar	_dividend @ sp[(-2)+-2]
 14641  01682A  0EFD               	movlw	-3
 14642  01682C  AEE3               	btfss	plusw1,7,c
 14643  01682E  D009               	goto	l6948
 14644                           
 14645                           ;stkvar	_dividend @ sp[(-2)+-2]
 14646                           ;stkvar	_dividend @ sp[(-2)+-2]
 14647  016830  0EFC               	movlw	-4
 14648  016832  6CE3               	negf	plusw1,c
 14649  016834  0EFD               	movlw	-3
 14650  016836  1EE3               	comf	plusw1,f,c
 14651  016838  B0D8               	btfsc	status,0,c
 14652  01683A  2AE3               	incf	plusw1,f,c
 14653                           
 14654                           ;stkvar	_sign @ sp[(-2)+0]
 14655  01683C  0EFE               	movlw	-2
 14656  01683E  6AE3               	clrf	plusw1,c
 14657  016840  2AE3               	incf	plusw1,f,c
 14658  016842                     l6948:
 14659                           
 14660                           ;stkvar	_divisor @ sp[(-2)+-4]
 14661  016842  0EFB               	movlw	-5
 14662  016844  AEE3               	btfss	plusw1,7,c
 14663  016846  D006               	goto	l6952
 14664                           
 14665                           ;stkvar	_divisor @ sp[(-2)+-4]
 14666                           ;stkvar	_divisor @ sp[(-2)+-4]
 14667  016848  0EFA               	movlw	-6
 14668  01684A  6CE3               	negf	plusw1,c
 14669  01684C  0EFB               	movlw	-5
 14670  01684E  1EE3               	comf	plusw1,f,c
 14671  016850  B0D8               	btfsc	status,0,c
 14672  016852  2AE3               	incf	plusw1,f,c
 14673  016854                     l6952:
 14674                           
 14675                           ;stkvar	_divisor @ sp[(-2)+-4]
 14676  016854  0EFA               	movlw	-6
 14677  016856  006F FF8C  F032    	movff	plusw1,btemp
 14678  01685C  0EFB               	movlw	-5
 14679  01685E  50E3               	movf	plusw1,w,c
 14680  016860  1032               	iorwf	btemp^0,w,c
 14681  016862  B4D8               	btfsc	status,2,c
 14682  016864  D053               	goto	u6110
 14683                           
 14684                           ;stkvar	_counter @ sp[(-2)+1]
 14685  016866  0EFF               	movlw	-1
 14686  016868  6AE3               	clrf	plusw1,c
 14687  01686A  D012               	goto	L13
 14688  01686C                     l6956:
 14689                           
 14690                           ;stkvar	_divisor @ sp[(-2)+-4]
 14691  01686C  0EFA               	movlw	-6
 14692  01686E  50E3               	movf	plusw1,w,c
 14693  016870  90D8               	bcf	status,0,c
 14694  016872  34E8               	rlcf	wreg,w,c
 14695  016874  6E32               	movwf	btemp^0,c
 14696  016876  0EFA               	movlw	-6
 14697  016878  0060  F0CB  FFE3   	movff	btemp,plusw1
 14698  01687E  0EFB               	movlw	-5
 14699  016880  50E3               	movf	plusw1,w,c
 14700  016882  34E8               	rlcf	wreg,w,c
 14701  016884  6E32               	movwf	btemp^0,c
 14702  016886  0EFB               	movlw	-5
 14703  016888  0060  F0CB  FFE3   	movff	btemp,plusw1
 14704                           
 14705                           ;stkvar	_counter @ sp[(-2)+1]
 14706  01688E  0EFF               	movlw	-1
 14707  016890                     L13:
 14708  016890  2AE3               	incf	plusw1,f,c
 14709                           
 14710                           ;stkvar	_divisor @ sp[(-2)+-4]
 14711  016892  0EFB               	movlw	-5
 14712  016894  AEE3               	btfss	plusw1,7,c
 14713  016896  D7EA               	goto	l6956
 14714  016898                     u6090:
 14715                           
 14716                           ;stkvar	_divisor @ sp[(-2)+-4]
 14717  016898  0EFA               	movlw	-6
 14718  01689A  006F FF8C  F03C    	movff	plusw1,btemp+10
 14719  0168A0  0EFB               	movlw	-5
 14720  0168A2  006F FF8C  F03D    	movff	plusw1,btemp+11
 14721                           
 14722                           ;stkvar	_dividend @ sp[(-2)+-2]
 14723  0168A8  0EFC               	movlw	-4
 14724  0168AA  006F FF8C  F03A    	movff	plusw1,btemp+8
 14725  0168B0  0EFD               	movlw	-3
 14726  0168B2  006F FF8C  F03B    	movff	plusw1,btemp+9
 14727  0168B8  503C               	movf	(btemp+10)^0,w,c
 14728  0168BA  5C3A               	subwf	(btemp+8)^0,w,c
 14729  0168BC  503D               	movf	(btemp+11)^0,w,c
 14730  0168BE  583B               	subwfb	(btemp+9)^0,w,c
 14731  0168C0  A0D8               	btfss	status,0,c
 14732  0168C2  D014               	goto	l6966
 14733                           
 14734                           ;stkvar	_divisor @ sp[(-2)+-4]
 14735                           ;stkvar	_dividend @ sp[(-2)+-2]
 14736  0168C4  0EFC               	movlw	-4
 14737  0168C6  50E3               	movf	plusw1,w,c
 14738  0168C8  6E32               	movwf	btemp^0,c
 14739  0168CA  0EFA               	movlw	-6
 14740  0168CC  50E3               	movf	plusw1,w,c
 14741  0168CE  5E32               	subwf	btemp^0,f,c
 14742  0168D0  0EFC               	movlw	-4
 14743  0168D2  0060  F0CB  FFE3   	movff	btemp,plusw1
 14744  0168D8  0EFD               	movlw	-3
 14745  0168DA  50E3               	movf	plusw1,w,c
 14746  0168DC  6E32               	movwf	btemp^0,c
 14747  0168DE  0EFB               	movlw	-5
 14748  0168E0  50E3               	movf	plusw1,w,c
 14749  0168E2  5A32               	subwfb	btemp^0,f,c
 14750  0168E4  0EFD               	movlw	-3
 14751  0168E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 14752  0168EC                     l6966:
 14753                           
 14754                           ;stkvar	_divisor @ sp[(-2)+-4]
 14755  0168EC  90D8               	bcf	status,0,c
 14756  0168EE  0EFB               	movlw	-5
 14757  0168F0  32E3               	rrcf	plusw1,f,c
 14758  0168F2  0EFA               	movlw	-6
 14759  0168F4  32E3               	rrcf	plusw1,f,c
 14760                           
 14761                           ;stkvar	_counter @ sp[(-2)+1]
 14762  0168F6  0EFF               	movlw	-1
 14763  0168F8  50E3               	movf	plusw1,w,c
 14764  0168FA  6E32               	movwf	btemp^0,c
 14765  0168FC  0E01               	movlw	1
 14766  0168FE  5E32               	subwf	btemp^0,f,c
 14767  016900  0EFF               	movlw	-1
 14768  016902  0060  F0CB  FFE3   	movff	btemp,plusw1
 14769  016908  A4D8               	btfss	status,2,c
 14770  01690A  D7C6               	goto	u6090
 14771  01690C                     u6110:
 14772                           
 14773                           ;stkvar	_sign @ sp[(-2)+0]
 14774  01690C  0EFE               	movlw	-2
 14775  01690E  50E3               	movf	plusw1,w,c
 14776  016910  B4D8               	btfsc	status,2,c
 14777  016912  D006               	goto	l6974
 14778                           
 14779                           ;stkvar	_dividend @ sp[(-2)+-2]
 14780                           ;stkvar	_dividend @ sp[(-2)+-2]
 14781  016914  0EFC               	movlw	-4
 14782  016916  6CE3               	negf	plusw1,c
 14783  016918  0EFD               	movlw	-3
 14784  01691A  1EE3               	comf	plusw1,f,c
 14785  01691C  B0D8               	btfsc	status,0,c
 14786  01691E  2AE3               	incf	plusw1,f,c
 14787  016920                     l6974:
 14788                           
 14789                           ;stkvar	_dividend @ sp[(-2)+-2]
 14790  016920  0EFC               	movlw	-4
 14791  016922  006F FF8C  F032    	movff	plusw1,btemp
 14792  016928  0EFD               	movlw	-3
 14793  01692A  006F FF8C  F033    	movff	plusw1,btemp+1
 14794                           
 14795                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14796  016930  0EFA               	movlw	250
 14797  016932  26E1               	addwf	fsr1l,f,c
 14798  016934  0EFF               	movlw	255
 14799  016936  22E2               	addwfc	fsr1h,f,c
 14800  016938  0012               	return		;funcret
 14801  01693A                     __end_of___awmod:
 14802                           	opt callstack 0
 14803                           
 14804 ;; *************** function ___awdiv *****************
 14805 ;; Defined at:
 14806 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;  dividend        2  [STACK] int 
 14809 ;;  divisor         2  [STACK] int 
 14810 ;; Auto vars:     Size  Location     Type
 14811 ;;  quotient        2  [STACK] int 
 14812 ;;  sign            1  [STACK] unsigned char 
 14813 ;;  counter         1  [STACK] unsigned char 
 14814 ;; Return value:  Size  Location     Type
 14815 ;;                  2  [STACK] int 
 14816 ;; Registers used:
 14817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14818 ;; Tracked objects:
 14819 ;;		On entry : 0/5
 14820 ;;		On exit  : 0/0
 14821 ;;		Unchanged: 0/0
 14822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14827 ;;Total ram usage:        0 bytes
 14828 ;; Hardware stack levels used:    1
 14829 ;; Hardware stack levels required when called:    6
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		_efgtoa
 14834 ;; This function uses a reentrant model
 14835 ;;
 14836                           
 14837                           	psect	text55
 14838  01633A                     __ptext55:
 14839                           	opt callstack 0
 14840  01633A                     ___awdiv:
 14841                           	opt callstack 0
 14842                           
 14843                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14844  01633A  52E6               	movf	postinc1,f,c
 14845  01633C  52E6               	movf	postinc1,f,c
 14846  01633E  52E6               	movf	postinc1,f,c
 14847  016340  52E6               	movf	postinc1,f,c
 14848                           
 14849                           ;stkvar	_sign @ sp[(-4)+2]
 14850                           
 14851                           ;incstack = 0
 14852  016342  0EFE               	movlw	-2
 14853  016344  6AE3               	clrf	plusw1,c
 14854                           
 14855                           ;stkvar	_divisor @ sp[(-4)+-4]
 14856  016346  0EF9               	movlw	-7
 14857  016348  AEE3               	btfss	plusw1,7,c
 14858  01634A  D009               	goto	l6902
 14859                           
 14860                           ;stkvar	_divisor @ sp[(-4)+-4]
 14861                           ;stkvar	_divisor @ sp[(-4)+-4]
 14862  01634C  0EF8               	movlw	-8
 14863  01634E  6CE3               	negf	plusw1,c
 14864  016350  0EF9               	movlw	-7
 14865  016352  1EE3               	comf	plusw1,f,c
 14866  016354  B0D8               	btfsc	status,0,c
 14867  016356  2AE3               	incf	plusw1,f,c
 14868                           
 14869                           ;stkvar	_sign @ sp[(-4)+2]
 14870  016358  0EFE               	movlw	-2
 14871  01635A  6AE3               	clrf	plusw1,c
 14872  01635C  2AE3               	incf	plusw1,f,c
 14873  01635E                     l6902:
 14874                           
 14875                           ;stkvar	_dividend @ sp[(-4)+-2]
 14876  01635E  0EFB               	movlw	-5
 14877  016360  AEE3               	btfss	plusw1,7,c
 14878  016362  D008               	goto	l6908
 14879                           
 14880                           ;stkvar	_dividend @ sp[(-4)+-2]
 14881                           ;stkvar	_dividend @ sp[(-4)+-2]
 14882  016364  0EFA               	movlw	-6
 14883  016366  6CE3               	negf	plusw1,c
 14884  016368  0EFB               	movlw	-5
 14885  01636A  1EE3               	comf	plusw1,f,c
 14886  01636C  B0D8               	btfsc	status,0,c
 14887  01636E  2AE3               	incf	plusw1,f,c
 14888                           
 14889                           ;stkvar	_sign @ sp[(-4)+2]
 14890  016370  0EFE               	movlw	-2
 14891  016372  70E3               	btg	plusw1,0,c
 14892  016374                     l6908:
 14893                           
 14894                           ;stkvar	_quotient @ sp[(-4)+0]
 14895  016374  0EFC               	movlw	-4
 14896  016376  6AE3               	clrf	plusw1,c
 14897  016378  0EFD               	movlw	-3
 14898  01637A  6AE3               	clrf	plusw1,c
 14899                           
 14900                           ;stkvar	_divisor @ sp[(-4)+-4]
 14901  01637C  0EF8               	movlw	-8
 14902  01637E  006F FF8C  F032    	movff	plusw1,btemp
 14903  016384  0EF9               	movlw	-7
 14904  016386  50E3               	movf	plusw1,w,c
 14905  016388  1032               	iorwf	btemp^0,w,c
 14906  01638A  B4D8               	btfsc	status,2,c
 14907  01638C  D066               	goto	u6040
 14908                           
 14909                           ;stkvar	_counter @ sp[(-4)+3]
 14910  01638E  0EFF               	movlw	-1
 14911  016390  6AE3               	clrf	plusw1,c
 14912  016392  D012               	goto	L14
 14913  016394                     l6914:
 14914                           
 14915                           ;stkvar	_divisor @ sp[(-4)+-4]
 14916  016394  0EF8               	movlw	-8
 14917  016396  50E3               	movf	plusw1,w,c
 14918  016398  90D8               	bcf	status,0,c
 14919  01639A  34E8               	rlcf	wreg,w,c
 14920  01639C  6E32               	movwf	btemp^0,c
 14921  01639E  0EF8               	movlw	-8
 14922  0163A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 14923  0163A6  0EF9               	movlw	-7
 14924  0163A8  50E3               	movf	plusw1,w,c
 14925  0163AA  34E8               	rlcf	wreg,w,c
 14926  0163AC  6E32               	movwf	btemp^0,c
 14927  0163AE  0EF9               	movlw	-7
 14928  0163B0  0060  F0CB  FFE3   	movff	btemp,plusw1
 14929                           
 14930                           ;stkvar	_counter @ sp[(-4)+3]
 14931  0163B6  0EFF               	movlw	-1
 14932  0163B8                     L14:
 14933  0163B8  2AE3               	incf	plusw1,f,c
 14934                           
 14935                           ;stkvar	_divisor @ sp[(-4)+-4]
 14936  0163BA  0EF9               	movlw	-7
 14937  0163BC  AEE3               	btfss	plusw1,7,c
 14938  0163BE  D7EA               	goto	l6914
 14939  0163C0                     u6020:
 14940                           
 14941                           ;stkvar	_quotient @ sp[(-4)+0]
 14942  0163C0  0EFC               	movlw	-4
 14943  0163C2  50E3               	movf	plusw1,w,c
 14944  0163C4  90D8               	bcf	status,0,c
 14945  0163C6  34E8               	rlcf	wreg,w,c
 14946  0163C8  6E32               	movwf	btemp^0,c
 14947  0163CA  0EFC               	movlw	-4
 14948  0163CC  0060  F0CB  FFE3   	movff	btemp,plusw1
 14949  0163D2  0EFD               	movlw	-3
 14950  0163D4  50E3               	movf	plusw1,w,c
 14951  0163D6  34E8               	rlcf	wreg,w,c
 14952  0163D8  6E32               	movwf	btemp^0,c
 14953  0163DA  0EFD               	movlw	-3
 14954  0163DC  0060  F0CB  FFE3   	movff	btemp,plusw1
 14955                           
 14956                           ;stkvar	_divisor @ sp[(-4)+-4]
 14957  0163E2  0EF8               	movlw	-8
 14958  0163E4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14959  0163EA  0EF9               	movlw	-7
 14960  0163EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14961                           
 14962                           ;stkvar	_dividend @ sp[(-4)+-2]
 14963  0163F2  0EFA               	movlw	-6
 14964  0163F4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14965  0163FA  0EFB               	movlw	-5
 14966  0163FC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14967  016402  503C               	movf	(btemp+10)^0,w,c
 14968  016404  5C3A               	subwf	(btemp+8)^0,w,c
 14969  016406  503D               	movf	(btemp+11)^0,w,c
 14970  016408  583B               	subwfb	(btemp+9)^0,w,c
 14971  01640A  A0D8               	btfss	status,0,c
 14972  01640C  D016               	goto	l6928
 14973                           
 14974                           ;stkvar	_divisor @ sp[(-4)+-4]
 14975                           ;stkvar	_dividend @ sp[(-4)+-2]
 14976  01640E  0EFA               	movlw	-6
 14977  016410  50E3               	movf	plusw1,w,c
 14978  016412  6E32               	movwf	btemp^0,c
 14979  016414  0EF8               	movlw	-8
 14980  016416  50E3               	movf	plusw1,w,c
 14981  016418  5E32               	subwf	btemp^0,f,c
 14982  01641A  0EFA               	movlw	-6
 14983  01641C  0060  F0CB  FFE3   	movff	btemp,plusw1
 14984  016422  0EFB               	movlw	-5
 14985  016424  50E3               	movf	plusw1,w,c
 14986  016426  6E32               	movwf	btemp^0,c
 14987  016428  0EF9               	movlw	-7
 14988  01642A  50E3               	movf	plusw1,w,c
 14989  01642C  5A32               	subwfb	btemp^0,f,c
 14990  01642E  0EFB               	movlw	-5
 14991  016430  0060  F0CB  FFE3   	movff	btemp,plusw1
 14992                           
 14993                           ;stkvar	_quotient @ sp[(-4)+0]
 14994  016436  0EFC               	movlw	-4
 14995  016438  80E3               	bsf	plusw1,0,c
 14996  01643A                     l6928:
 14997                           
 14998                           ;stkvar	_divisor @ sp[(-4)+-4]
 14999  01643A  90D8               	bcf	status,0,c
 15000  01643C  0EF9               	movlw	-7
 15001  01643E  32E3               	rrcf	plusw1,f,c
 15002  016440  0EF8               	movlw	-8
 15003  016442  32E3               	rrcf	plusw1,f,c
 15004                           
 15005                           ;stkvar	_counter @ sp[(-4)+3]
 15006  016444  0EFF               	movlw	-1
 15007  016446  50E3               	movf	plusw1,w,c
 15008  016448  6E32               	movwf	btemp^0,c
 15009  01644A  0E01               	movlw	1
 15010  01644C  5E32               	subwf	btemp^0,f,c
 15011  01644E  0EFF               	movlw	-1
 15012  016450  0060  F0CB  FFE3   	movff	btemp,plusw1
 15013  016456  A4D8               	btfss	status,2,c
 15014  016458  D7B3               	goto	u6020
 15015  01645A                     u6040:
 15016                           
 15017                           ;stkvar	_sign @ sp[(-4)+2]
 15018  01645A  0EFE               	movlw	-2
 15019  01645C  50E3               	movf	plusw1,w,c
 15020  01645E  B4D8               	btfsc	status,2,c
 15021  016460  D006               	goto	l6936
 15022                           
 15023                           ;stkvar	_quotient @ sp[(-4)+0]
 15024                           ;stkvar	_quotient @ sp[(-4)+0]
 15025  016462  0EFC               	movlw	-4
 15026  016464  6CE3               	negf	plusw1,c
 15027  016466  0EFD               	movlw	-3
 15028  016468  1EE3               	comf	plusw1,f,c
 15029  01646A  B0D8               	btfsc	status,0,c
 15030  01646C  2AE3               	incf	plusw1,f,c
 15031  01646E                     l6936:
 15032                           
 15033                           ;stkvar	_quotient @ sp[(-4)+0]
 15034  01646E  0EFC               	movlw	-4
 15035  016470  006F FF8C  F032    	movff	plusw1,btemp
 15036  016476  0EFD               	movlw	-3
 15037  016478  006F FF8C  F033    	movff	plusw1,btemp+1
 15038                           
 15039                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15040  01647E  0EF8               	movlw	248
 15041  016480  26E1               	addwf	fsr1l,f,c
 15042  016482  0EFF               	movlw	255
 15043  016484  22E2               	addwfc	fsr1h,f,c
 15044  016486  0012               	return		;funcret
 15045  016488                     __end_of___awdiv:
 15046                           	opt callstack 0
 15047                           
 15048 ;; *************** function _dtoa *****************
 15049 ;; Defined at:
 15050 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15053 ;;		 -> f(6), NULL(0), 
 15054 ;;  d               8  [STACK] long long 
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;  n               8  [STACK] long long 
 15057 ;;  i               2  [STACK] int 
 15058 ;;  s               2  [STACK] int 
 15059 ;;  w               2  [STACK] int 
 15060 ;;  p               2  [STACK] int 
 15061 ;; Return value:  Size  Location     Type
 15062 ;;                  2  [STACK] int 
 15063 ;; Registers used:
 15064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15065 ;; Tracked objects:
 15066 ;;		On entry : 0/5
 15067 ;;		On exit  : 0/0
 15068 ;;		Unchanged: 0/0
 15069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15074 ;;Total ram usage:        0 bytes
 15075 ;; Hardware stack levels used:    1
 15076 ;; Hardware stack levels required when called:   11
 15077 ;; This function calls:
 15078 ;;		___aodiv
 15079 ;;		___aomod
 15080 ;;		_abs
 15081 ;;		_pad
 15082 ;; This function is called by:
 15083 ;;		_vfpfcnvrt
 15084 ;; This function uses a reentrant model
 15085 ;;
 15086                           
 15087                           	psect	text56
 15088  013C4C                     __ptext56:
 15089                           	opt callstack 0
 15090  013C4C                     _dtoa:
 15091                           	opt callstack 0
 15092                           
 15093                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15094  013C4C  0E12               	movlw	18
 15095  013C4E  26E1               	addwf	fsr1l,f,c
 15096  013C50  0E00               	movlw	0
 15097  013C52  22E2               	addwfc	fsr1h,f,c
 15098                           
 15099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 15100                           ;stkvar	_d @ sp[(-18)+-10]
 15101                           
 15102                           ;incstack = 0
 15103  013C54  0EE4               	movlw	228
 15104  013C56  24E1               	addwf	fsr1l,w,c
 15105  013C58  6ED9               	movwf	fsr2l,c
 15106  013C5A  0EFF               	movlw	255
 15107  013C5C  20E2               	addwfc	fsr1h,w,c
 15108  013C5E  6EDA               	movwf	fsr2h,c
 15109                           
 15110                           ;stkvar	_n @ sp[(-18)+2]
 15111  013C60  0E08               	movlw	8
 15112  013C62  6E32               	movwf	btemp^0,c
 15113  013C64  0EF0               	movlw	-16
 15114  013C66                     us892999:
 15115  013C66  006F FF7B FFE3     	movff	postinc2,plusw1
 15116  013C6C  28E8               	incf	wreg,w,c
 15117  013C6E  2E32               	decfsz	btemp^0,f,c
 15118  013C70  D7FA               	bra	us892999
 15119                           
 15120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 15121                           ;stkvar	_n @ sp[(-18)+2]
 15122  013C72  0EF7               	movlw	-9
 15123  013C74  AEE3               	btfss	plusw1,7,c
 15124  013C76  D002               	goto	u8930
 15125  013C78  0E01               	movlw	1
 15126  013C7A  D001               	goto	u8940
 15127  013C7C                     u8930:
 15128  013C7C  0E00               	movlw	0
 15129  013C7E                     u8940:
 15130  013C7E  6E3C               	movwf	(btemp+10)^0,c
 15131  013C80  6A3D               	clrf	(btemp+11)^0,c
 15132                           
 15133                           ;stkvar	_s @ sp[(-18)+12]
 15134  013C82  0EFA               	movlw	-6
 15135  013C84  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15136  013C8A  0EFB               	movlw	-5
 15137  013C8C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15138                           
 15139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 15140                           ;stkvar	_s @ sp[(-18)+12]
 15141  013C92  0EFA               	movlw	-6
 15142  013C94  006F FF8C  F032    	movff	plusw1,btemp
 15143  013C9A  0EFB               	movlw	-5
 15144  013C9C  50E3               	movf	plusw1,w,c
 15145  013C9E  1032               	iorwf	btemp^0,w,c
 15146  013CA0  B4D8               	btfsc	status,2,c
 15147  013CA2  D025               	goto	u8960
 15148                           
 15149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 15150                           ;stkvar	_n @ sp[(-18)+2]
 15151                           ;stkvar	_n @ sp[(-18)+2]
 15152  013CA4  0EF0               	movlw	-16
 15153  013CA6  6CE3               	negf	plusw1,c
 15154  013CA8  0EF1               	movlw	-15
 15155  013CAA  1EE3               	comf	plusw1,f,c
 15156  013CAC  0EF2               	movlw	-14
 15157  013CAE  1EE3               	comf	plusw1,f,c
 15158  013CB0  0EF3               	movlw	-13
 15159  013CB2  1EE3               	comf	plusw1,f,c
 15160  013CB4  0EF4               	movlw	-12
 15161  013CB6  1EE3               	comf	plusw1,f,c
 15162  013CB8  0EF5               	movlw	-11
 15163  013CBA  1EE3               	comf	plusw1,f,c
 15164  013CBC  0EF6               	movlw	-10
 15165  013CBE  1EE3               	comf	plusw1,f,c
 15166  013CC0  0EF7               	movlw	-9
 15167  013CC2  1EE3               	comf	plusw1,f,c
 15168  013CC4  E314               	bnc	u8960
 15169  013CC6  0EF1               	movlw	-15
 15170  013CC8  2AE3               	incf	plusw1,f,c
 15171  013CCA  E311               	bnc	u8960
 15172  013CCC  0EF2               	movlw	-14
 15173  013CCE  2AE3               	incf	plusw1,f,c
 15174  013CD0  E30E               	bnc	u8960
 15175  013CD2  0EF3               	movlw	-13
 15176  013CD4  2AE3               	incf	plusw1,f,c
 15177  013CD6  E30B               	bnc	u8960
 15178  013CD8  0EF4               	movlw	-12
 15179  013CDA  2AE3               	incf	plusw1,f,c
 15180  013CDC  E308               	bnc	u8960
 15181  013CDE  0EF5               	movlw	-11
 15182  013CE0  2AE3               	incf	plusw1,f,c
 15183  013CE2  E305               	bnc	u8960
 15184  013CE4  0EF6               	movlw	-10
 15185  013CE6  2AE3               	incf	plusw1,f,c
 15186  013CE8  E302               	bnc	u8960
 15187  013CEA  0EF7               	movlw	-9
 15188  013CEC  2AE3               	incf	plusw1,f,c
 15189  013CEE                     u8960:
 15190                           
 15191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 15192  013CEE  AE1E               	btfss	(_prec+1)^0,7,c
 15193                           
 15194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 15195  013CF0  921F               	bcf	_flags^0,1,c
 15196                           
 15197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 15198  013CF2  BE1E               	btfsc	(_prec+1)^0,7,c
 15199  013CF4  D005               	goto	u8980
 15200  013CF6  501E               	movf	(_prec+1)^0,w,c
 15201  013CF8  E110               	bnz	l9312
 15202  013CFA  041D               	decf	_prec^0,w,c
 15203  013CFC  B0D8               	btfsc	status,0,c
 15204  013CFE  D00D               	goto	l9312
 15205  013D00                     u8980:
 15206  013D00  0E01               	movlw	1
 15207  013D02  6E3C               	movwf	(btemp+10)^0,c
 15208  013D04  0E00               	movlw	0
 15209  013D06  6E3D               	movwf	(btemp+11)^0,c
 15210                           
 15211                           ;stkvar	_p @ sp[(-18)+16]
 15212  013D08  0EFE               	movlw	-2
 15213  013D0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15214  013D10  0EFF               	movlw	-1
 15215  013D12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15216  013D18  D008               	goto	l1833
 15217  013D1A                     l9312:
 15218                           
 15219                           ;stkvar	_p @ sp[(-18)+16]
 15220  013D1A  0EFE               	movlw	-2
 15221  013D1C  0060  F077  FFE3   	movff	_prec,plusw1
 15222  013D22  0EFF               	movlw	-1
 15223  013D24  0060  F07B  FFE3   	movff	_prec+1,plusw1
 15224  013D2A                     l1833:
 15225                           
 15226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 15227                           ;stkvar	_w @ sp[(-18)+14]
 15228  013D2A  0EFC               	movlw	-4
 15229  013D2C  0060  F06F  FFE3   	movff	_width,plusw1
 15230  013D32  0EFD               	movlw	-3
 15231  013D34  0060  F073  FFE3   	movff	_width+1,plusw1
 15232                           
 15233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 15234                           ;stkvar	_s @ sp[(-18)+12]
 15235  013D3A  0EFA               	movlw	-6
 15236  013D3C  006F FF8C  F032    	movff	plusw1,btemp
 15237  013D42  0EFB               	movlw	-5
 15238  013D44  50E3               	movf	plusw1,w,c
 15239  013D46  1032               	iorwf	btemp^0,w,c
 15240  013D48  A4D8               	btfss	status,2,c
 15241  013D4A  D002               	goto	u9000
 15242  013D4C  A41F               	btfss	_flags^0,2,c
 15243  013D4E  D00A               	goto	l9320
 15244  013D50                     u9000:
 15245                           
 15246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 15247                           ;stkvar	_w @ sp[(-18)+14]
 15248  013D50  50E1               	movf	fsr1l,w,c
 15249  013D52  0FFC               	addlw	-4
 15250  013D54  6ED9               	movwf	fsr2l,c
 15251  013D56  50E2               	movf	fsr1h,w,c
 15252  013D58  6EDA               	movwf	fsr2h,c
 15253  013D5A  0EFF               	movlw	255
 15254  013D5C  22DA               	addwfc	fsr2h,f,c
 15255  013D5E  06DE               	decf	postinc2,f,c
 15256  013D60  0E00               	movlw	0
 15257  013D62  5ADD               	subwfb	postdec2,f,c
 15258  013D64                     l9320:
 15259                           
 15260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 15261  013D64  0E4F               	movlw	79
 15262  013D66  6E3C               	movwf	(btemp+10)^0,c
 15263  013D68  0E00               	movlw	0
 15264  013D6A  6E3D               	movwf	(btemp+11)^0,c
 15265                           
 15266                           ;stkvar	_i @ sp[(-18)+10]
 15267  013D6C  0EF8               	movlw	-8
 15268  013D6E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15269  013D74  0EF9               	movlw	-7
 15270  013D76  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15271                           
 15272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 15273  013D7C  0101               	movlb	1	; () banked
 15274  013D7E  6BC7               	clrf	(_dbuf+79)& (0+255),b
 15275                           
 15276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15277  013D80  D109               	goto	l9334
 15278  013D82                     l9324:
 15279                           
 15280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 15281                           ;stkvar	_i @ sp[(-18)+10]
 15282  013D82  50E1               	movf	fsr1l,w,c
 15283  013D84  0FF8               	addlw	-8
 15284  013D86  6ED9               	movwf	fsr2l,c
 15285  013D88  50E2               	movf	fsr1h,w,c
 15286  013D8A  6EDA               	movwf	fsr2h,c
 15287  013D8C  0EFF               	movlw	255
 15288  013D8E  22DA               	addwfc	fsr2h,f,c
 15289  013D90  06DE               	decf	postinc2,f,c
 15290  013D92  0E00               	movlw	0
 15291  013D94  5ADD               	subwfb	postdec2,f,c
 15292                           
 15293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 15294  013D96  0E0A               	movlw	10
 15295  013D98  6EE6               	movwf	postinc1,c
 15296  013D9A  0E00               	movlw	0
 15297  013D9C  6EE6               	movwf	postinc1,c
 15298  013D9E  0E00               	movlw	0
 15299  013DA0  6EE6               	movwf	postinc1,c
 15300  013DA2  0E00               	movlw	0
 15301  013DA4  6EE6               	movwf	postinc1,c
 15302  013DA6  0E00               	movlw	0
 15303  013DA8  6EE6               	movwf	postinc1,c
 15304  013DAA  0E00               	movlw	0
 15305  013DAC  6EE6               	movwf	postinc1,c
 15306  013DAE  0E00               	movlw	0
 15307  013DB0  6EE6               	movwf	postinc1,c
 15308  013DB2  0E00               	movlw	0
 15309  013DB4  6EE6               	movwf	postinc1,c
 15310                           
 15311                           ;stkvar	_n @ sp[(-26)+2]
 15312  013DB6  50E1               	movf	fsr1l,w,c
 15313  013DB8  0FE8               	addlw	-24
 15314  013DBA  6ED9               	movwf	fsr2l,c
 15315  013DBC  50E2               	movf	fsr1h,w,c
 15316  013DBE  6EDA               	movwf	fsr2h,c
 15317  013DC0  0EFF               	movlw	255
 15318  013DC2  22DA               	addwfc	fsr2h,f,c
 15319  013DC4  006F FF7B FFE6     	movff	postinc2,postinc1
 15320  013DCA  006F FF7B FFE6     	movff	postinc2,postinc1
 15321  013DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 15322  013DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 15323  013DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 15324  013DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 15325  013DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 15326  013DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 15327  013DF4  EC6E  F0AA         	call	___aomod	;wreg free
 15328  013DF8  52E5               	movf	postdec1,f,c
 15329  013DFA  006F FF9C  F049    	movff	indf1,btemp+23
 15330  013E00  52E5               	movf	postdec1,f,c
 15331  013E02  006F FF9C  F048    	movff	indf1,btemp+22
 15332  013E08  52E5               	movf	postdec1,f,c
 15333  013E0A  006F FF9C  F047    	movff	indf1,btemp+21
 15334  013E10  52E5               	movf	postdec1,f,c
 15335  013E12  006F FF9C  F046    	movff	indf1,btemp+20
 15336  013E18  52E5               	movf	postdec1,f,c
 15337  013E1A  006F FF9C  F045    	movff	indf1,btemp+19
 15338  013E20  52E5               	movf	postdec1,f,c
 15339  013E22  006F FF9C  F044    	movff	indf1,btemp+18
 15340  013E28  52E5               	movf	postdec1,f,c
 15341  013E2A  006F FF9C  F043    	movff	indf1,btemp+17
 15342  013E30  52E5               	movf	postdec1,f,c
 15343  013E32  006F FF9C  F042    	movff	indf1,btemp+16
 15344  013E38  0EF8               	movlw	248
 15345  013E3A  26E1               	addwf	fsr1l,f,c
 15346  013E3C  0EFF               	movlw	255
 15347  013E3E  22E2               	addwfc	fsr1h,f,c
 15348  013E40  0060  F108  F03C   	movff	btemp+16,btemp+10
 15349  013E46  0060  F10C  F03D   	movff	btemp+17,btemp+11
 15350  013E4C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15351  013E52  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 15352  013E58  EC80  F0BE         	call	_abs	;wreg free
 15353  013E5C  0E30               	movlw	48
 15354  013E5E  2632               	addwf	btemp^0,f,c
 15355                           
 15356                           ;stkvar	_i @ sp[(-18)+10]
 15357  013E60  0EF8               	movlw	-8
 15358  013E62  006F FF8C  F03C    	movff	plusw1,btemp+10
 15359  013E68  0EF9               	movlw	-7
 15360  013E6A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15361  013E70  0E78               	movlw	low _dbuf
 15362  013E72  243C               	addwf	(btemp+10)^0,w,c
 15363  013E74  6ED9               	movwf	fsr2l,c
 15364  013E76  0E01               	movlw	high _dbuf
 15365  013E78  203D               	addwfc	(btemp+11)^0,w,c
 15366  013E7A  6EDA               	movwf	fsr2h,c
 15367  013E7C  0060  F0CB  FFDF   	movff	btemp,indf2
 15368                           
 15369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 15370                           ;stkvar	_p @ sp[(-18)+16]
 15371  013E82  50E1               	movf	fsr1l,w,c
 15372  013E84  0FFE               	addlw	-2
 15373  013E86  6ED9               	movwf	fsr2l,c
 15374  013E88  50E2               	movf	fsr1h,w,c
 15375  013E8A  6EDA               	movwf	fsr2h,c
 15376  013E8C  0EFF               	movlw	255
 15377  013E8E  22DA               	addwfc	fsr2h,f,c
 15378  013E90  06DE               	decf	postinc2,f,c
 15379  013E92  0E00               	movlw	0
 15380  013E94  5ADD               	subwfb	postdec2,f,c
 15381                           
 15382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 15383                           ;stkvar	_w @ sp[(-18)+14]
 15384  013E96  50E1               	movf	fsr1l,w,c
 15385  013E98  0FFC               	addlw	-4
 15386  013E9A  6ED9               	movwf	fsr2l,c
 15387  013E9C  50E2               	movf	fsr1h,w,c
 15388  013E9E  6EDA               	movwf	fsr2h,c
 15389  013EA0  0EFF               	movlw	255
 15390  013EA2  22DA               	addwfc	fsr2h,f,c
 15391  013EA4  06DE               	decf	postinc2,f,c
 15392  013EA6  0E00               	movlw	0
 15393  013EA8  5ADD               	subwfb	postdec2,f,c
 15394                           
 15395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 15396  013EAA  0E0A               	movlw	10
 15397  013EAC  6EE6               	movwf	postinc1,c
 15398  013EAE  0E00               	movlw	0
 15399  013EB0  6EE6               	movwf	postinc1,c
 15400  013EB2  0E00               	movlw	0
 15401  013EB4  6EE6               	movwf	postinc1,c
 15402  013EB6  0E00               	movlw	0
 15403  013EB8  6EE6               	movwf	postinc1,c
 15404  013EBA  0E00               	movlw	0
 15405  013EBC  6EE6               	movwf	postinc1,c
 15406  013EBE  0E00               	movlw	0
 15407  013EC0  6EE6               	movwf	postinc1,c
 15408  013EC2  0E00               	movlw	0
 15409  013EC4  6EE6               	movwf	postinc1,c
 15410  013EC6  0E00               	movlw	0
 15411  013EC8  6EE6               	movwf	postinc1,c
 15412                           
 15413                           ;stkvar	_n @ sp[(-26)+2]
 15414  013ECA  50E1               	movf	fsr1l,w,c
 15415  013ECC  0FE8               	addlw	-24
 15416  013ECE  6ED9               	movwf	fsr2l,c
 15417  013ED0  50E2               	movf	fsr1h,w,c
 15418  013ED2  6EDA               	movwf	fsr2h,c
 15419  013ED4  0EFF               	movlw	255
 15420  013ED6  22DA               	addwfc	fsr2h,f,c
 15421  013ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 15422  013EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 15423  013EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 15424  013EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 15425  013EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 15426  013EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 15427  013EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 15428  013F02  006F FF7B FFE6     	movff	postinc2,postinc1
 15429  013F08  ECCE  F0A6         	call	___aodiv	;wreg free
 15430  013F0C  52E5               	movf	postdec1,f,c
 15431  013F0E  006F FF9C  F049    	movff	indf1,btemp+23
 15432  013F14  52E5               	movf	postdec1,f,c
 15433  013F16  006F FF9C  F048    	movff	indf1,btemp+22
 15434  013F1C  52E5               	movf	postdec1,f,c
 15435  013F1E  006F FF9C  F047    	movff	indf1,btemp+21
 15436  013F24  52E5               	movf	postdec1,f,c
 15437  013F26  006F FF9C  F046    	movff	indf1,btemp+20
 15438  013F2C  52E5               	movf	postdec1,f,c
 15439  013F2E  006F FF9C  F045    	movff	indf1,btemp+19
 15440  013F34  52E5               	movf	postdec1,f,c
 15441  013F36  006F FF9C  F044    	movff	indf1,btemp+18
 15442  013F3C  52E5               	movf	postdec1,f,c
 15443  013F3E  006F FF9C  F043    	movff	indf1,btemp+17
 15444  013F44  52E5               	movf	postdec1,f,c
 15445  013F46  006F FF9C  F042    	movff	indf1,btemp+16
 15446  013F4C  0EF8               	movlw	248
 15447  013F4E  26E1               	addwf	fsr1l,f,c
 15448  013F50  0EFF               	movlw	255
 15449  013F52  22E2               	addwfc	fsr1h,f,c
 15450                           
 15451                           ;stkvar	_n @ sp[(-18)+2]
 15452  013F54  0EF0               	movlw	-16
 15453  013F56  0060  F10B  FFE3   	movff	btemp+16,plusw1
 15454  013F5C  0EF1               	movlw	-15
 15455  013F5E  0060  F10F  FFE3   	movff	btemp+17,plusw1
 15456  013F64  0EF2               	movlw	-14
 15457  013F66  0060  F113  FFE3   	movff	btemp+18,plusw1
 15458  013F6C  0EF3               	movlw	-13
 15459  013F6E  0060  F117  FFE3   	movff	btemp+19,plusw1
 15460  013F74  0EF4               	movlw	-12
 15461  013F76  0060  F11B  FFE3   	movff	btemp+20,plusw1
 15462  013F7C  0EF5               	movlw	-11
 15463  013F7E  0060  F11F  FFE3   	movff	btemp+21,plusw1
 15464  013F84  0EF6               	movlw	-10
 15465  013F86  0060  F123  FFE3   	movff	btemp+22,plusw1
 15466  013F8C  0EF7               	movlw	-9
 15467  013F8E  0060  F127  FFE3   	movff	btemp+23,plusw1
 15468  013F94                     l9334:
 15469                           
 15470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15471                           ;stkvar	_i @ sp[(-18)+10]
 15472  013F94  0EF9               	movlw	-7
 15473  013F96  BEE3               	btfsc	plusw1,7,c
 15474  013F98  D036               	goto	u9050
 15475  013F9A  0EF9               	movlw	-7
 15476  013F9C  50E3               	movf	plusw1,w,c
 15477  013F9E  E104               	bnz	u9010
 15478  013FA0  0EF8               	movlw	-8
 15479  013FA2  04E3               	decf	plusw1,w,c
 15480  013FA4  A0D8               	btfss	status,0,c
 15481  013FA6  D02F               	goto	u9050
 15482  013FA8                     u9010:
 15483                           
 15484                           ;stkvar	_n @ sp[(-18)+2]
 15485  013FA8  0EF0               	movlw	-16
 15486  013FAA  50E3               	movf	plusw1,w,c
 15487  013FAC  E115               	bnz	u9021
 15488  013FAE  0EF1               	movlw	-15
 15489  013FB0  50E3               	movf	plusw1,w,c
 15490  013FB2  E112               	bnz	u9021
 15491  013FB4  0EF2               	movlw	-14
 15492  013FB6  50E3               	movf	plusw1,w,c
 15493  013FB8  E10F               	bnz	u9021
 15494  013FBA  0EF3               	movlw	-13
 15495  013FBC  50E3               	movf	plusw1,w,c
 15496  013FBE  E10C               	bnz	u9021
 15497  013FC0  0EF4               	movlw	-12
 15498  013FC2  50E3               	movf	plusw1,w,c
 15499  013FC4  E109               	bnz	u9021
 15500  013FC6  0EF5               	movlw	-11
 15501  013FC8  50E3               	movf	plusw1,w,c
 15502  013FCA  E106               	bnz	u9021
 15503  013FCC  0EF6               	movlw	-10
 15504  013FCE  50E3               	movf	plusw1,w,c
 15505  013FD0  E103               	bnz	u9021
 15506  013FD2  0EF7               	movlw	-9
 15507  013FD4  50E3               	movf	plusw1,w,c
 15508  013FD6  A4D8               	btfss	status,2,c
 15509  013FD8                     u9021:
 15510  013FD8  D6D4               	goto	l9324
 15511                           
 15512                           ;stkvar	_p @ sp[(-18)+16]
 15513  013FDA  0EFF               	movlw	-1
 15514  013FDC  BEE3               	btfsc	plusw1,7,c
 15515  013FDE  D007               	goto	u9030
 15516  013FE0  0EFF               	movlw	-1
 15517  013FE2  50E3               	movf	plusw1,w,c
 15518  013FE4  E103               	bnz	u9031
 15519  013FE6  0EFE               	movlw	-2
 15520  013FE8  04E3               	decf	plusw1,w,c
 15521  013FEA  B0D8               	btfsc	status,0,c
 15522  013FEC                     u9031:
 15523  013FEC  D6CA               	goto	l9324
 15524  013FEE                     u9030:
 15525                           
 15526                           ;stkvar	_w @ sp[(-18)+14]
 15527  013FEE  0EFD               	movlw	-3
 15528  013FF0  BEE3               	btfsc	plusw1,7,c
 15529  013FF2  D009               	goto	u9050
 15530  013FF4  0EFD               	movlw	-3
 15531  013FF6  50E3               	movf	plusw1,w,c
 15532  013FF8  E104               	bnz	u9040
 15533  013FFA  0EFC               	movlw	-4
 15534  013FFC  04E3               	decf	plusw1,w,c
 15535  013FFE  A0D8               	btfss	status,0,c
 15536  014000  D002               	goto	u9050
 15537  014002                     u9040:
 15538  014002  B21F               	btfsc	_flags^0,1,c
 15539  014004  D6BE               	goto	l9324
 15540  014006                     u9050:
 15541                           
 15542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 15543                           ;stkvar	_s @ sp[(-18)+12]
 15544  014006  0EFA               	movlw	-6
 15545  014008  006F FF8C  F032    	movff	plusw1,btemp
 15546  01400E  0EFB               	movlw	-5
 15547  014010  50E3               	movf	plusw1,w,c
 15548  014012  1032               	iorwf	btemp^0,w,c
 15549  014014  A4D8               	btfss	status,2,c
 15550  014016  D002               	goto	u9070
 15551  014018  A41F               	btfss	_flags^0,2,c
 15552  01401A  D033               	goto	l9358
 15553  01401C                     u9070:
 15554                           
 15555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 15556                           ;stkvar	_i @ sp[(-18)+10]
 15557  01401C  50E1               	movf	fsr1l,w,c
 15558  01401E  0FF8               	addlw	-8
 15559  014020  6ED9               	movwf	fsr2l,c
 15560  014022  50E2               	movf	fsr1h,w,c
 15561  014024  6EDA               	movwf	fsr2h,c
 15562  014026  0EFF               	movlw	255
 15563  014028  22DA               	addwfc	fsr2h,f,c
 15564  01402A  06DE               	decf	postinc2,f,c
 15565  01402C  0E00               	movlw	0
 15566  01402E  5ADD               	subwfb	postdec2,f,c
 15567                           
 15568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 15569                           ;stkvar	_s @ sp[(-18)+12]
 15570  014030  0EFA               	movlw	-6
 15571  014032  006F FF8C  F032    	movff	plusw1,btemp
 15572  014038  0EFB               	movlw	-5
 15573  01403A  50E3               	movf	plusw1,w,c
 15574  01403C  1032               	iorwf	btemp^0,w,c
 15575  01403E  A4D8               	btfss	status,2,c
 15576  014040  D002               	goto	l9354
 15577  014042  0E2B               	movlw	43
 15578  014044  D001               	goto	L15
 15579  014046                     l9354:
 15580  014046  0E2D               	movlw	45
 15581  014048                     L15:
 15582  014048  6E3C               	movwf	(btemp+10)^0,c
 15583  01404A  0E00               	movlw	0
 15584  01404C  6E3D               	movwf	(btemp+11)^0,c
 15585                           
 15586                           ;stkvar	_dtoa$4369 @ sp[(-18)+0]
 15587  01404E  0EEE               	movlw	-18
 15588  014050  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15589  014056  0EEF               	movlw	-17
 15590  014058  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15591                           
 15592                           ;stkvar	_dtoa$4369 @ sp[(-18)+0]
 15593                           ;stkvar	_i @ sp[(-18)+10]
 15594  01405E  0EF8               	movlw	-8
 15595  014060  006F FF8C  F03C    	movff	plusw1,btemp+10
 15596  014066  0EF9               	movlw	-7
 15597  014068  006F FF8C  F03D    	movff	plusw1,btemp+11
 15598  01406E  0E78               	movlw	low _dbuf
 15599  014070  243C               	addwf	(btemp+10)^0,w,c
 15600  014072  6ED9               	movwf	fsr2l,c
 15601  014074  0E01               	movlw	high _dbuf
 15602  014076  203D               	addwfc	(btemp+11)^0,w,c
 15603  014078  6EDA               	movwf	fsr2h,c
 15604  01407A  0EEE               	movlw	-18
 15605  01407C  006F FF8F FFDF     	movff	plusw1,indf2
 15606  014082                     l9358:
 15607                           
 15608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 15609                           ;stkvar	_w @ sp[(-18)+14]
 15610  014082  0EFC               	movlw	-4
 15611  014084  006F FF8F FFE6     	movff	plusw1,postinc1
 15612  01408A  006F FF8F FFE6     	movff	plusw1,postinc1
 15613                           
 15614                           ;stkvar	_i @ sp[(-20)+10]
 15615  014090  0E78               	movlw	low _dbuf
 15616  014092  6E3C               	movwf	(btemp+10)^0,c
 15617  014094  0E01               	movlw	high _dbuf
 15618  014096  6E3D               	movwf	(btemp+11)^0,c
 15619  014098  0EF6               	movlw	-10
 15620  01409A  50E3               	movf	plusw1,w,c
 15621  01409C  263C               	addwf	(btemp+10)^0,f,c
 15622  01409E  0EF7               	movlw	-9
 15623  0140A0  50E3               	movf	plusw1,w,c
 15624  0140A2  223D               	addwfc	(btemp+11)^0,f,c
 15625  0140A4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15626  0140AA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 15627                           
 15628                           ;stkvar	_fp @ sp[(-22)+-2]
 15629  0140B0  0EE8               	movlw	-24
 15630  0140B2  006F FF8F FFE6     	movff	plusw1,postinc1
 15631  0140B8  006F FF8F FFE6     	movff	plusw1,postinc1
 15632  0140BE  EC9D  F0B4         	call	_pad	;wreg free
 15633                           
 15634                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15635  0140C2  0EE4               	movlw	228
 15636  0140C4  26E1               	addwf	fsr1l,f,c
 15637  0140C6  0EFF               	movlw	255
 15638  0140C8  22E2               	addwfc	fsr1h,f,c
 15639  0140CA  0012               	return		;funcret
 15640  0140CC                     __end_of_dtoa:
 15641                           	opt callstack 0
 15642                           
 15643 ;; *************** function _abs *****************
 15644 ;; Defined at:
 15645 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 15646 ;; Parameters:    Size  Location     Type
 15647 ;;  a               2  [STACK] int 
 15648 ;; Auto vars:     Size  Location     Type
 15649 ;;		None
 15650 ;; Return value:  Size  Location     Type
 15651 ;;                  2  [STACK] int 
 15652 ;; Registers used:
 15653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 15654 ;; Tracked objects:
 15655 ;;		On entry : 0/1
 15656 ;;		On exit  : 0/0
 15657 ;;		Unchanged: 0/0
 15658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15663 ;;Total ram usage:        0 bytes
 15664 ;; Hardware stack levels used:    1
 15665 ;; Hardware stack levels required when called:    6
 15666 ;; This function calls:
 15667 ;;		Nothing
 15668 ;; This function is called by:
 15669 ;;		_dtoa
 15670 ;; This function uses a reentrant model
 15671 ;;
 15672                           
 15673                           	psect	text57
 15674  017D00                     __ptext57:
 15675                           	opt callstack 0
 15676  017D00                     _abs:
 15677                           	opt callstack 17
 15678                           
 15679                           ;stkvar	_a @ sp[(0)+-2]
 15680                           
 15681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15682                           ;incstack = 0
 15683  017D00  0EFF               	movlw	-1
 15684  017D02  BEE3               	btfsc	plusw1,7,c
 15685  017D04  D007               	goto	u5000
 15686  017D06  0EFF               	movlw	-1
 15687  017D08  50E3               	movf	plusw1,w,c
 15688  017D0A  E112               	bnz	l6390
 15689  017D0C  0EFE               	movlw	-2
 15690  017D0E  04E3               	decf	plusw1,w,c
 15691  017D10  B0D8               	btfsc	status,0,c
 15692  017D12  D00E               	goto	l6390
 15693  017D14                     u5000:
 15694                           
 15695                           ;stkvar	_a @ sp[(0)+-2]
 15696  017D14  0EFE               	movlw	-2
 15697  017D16  006F FF8C  F032    	movff	plusw1,btemp
 15698  017D1C  1E32               	comf	btemp^0,f,c
 15699  017D1E  0EFF               	movlw	-1
 15700  017D20  006F FF8C  F033    	movff	plusw1,btemp+1
 15701  017D26  1E33               	comf	(btemp+1)^0,f,c
 15702  017D28  2A32               	incf	btemp^0,f,c
 15703  017D2A  B4D8               	btfsc	status,2,c
 15704  017D2C  2A33               	incf	(btemp+1)^0,f,c
 15705  017D2E  D008               	goto	l2736
 15706  017D30                     l6390:
 15707                           
 15708                           ;stkvar	_a @ sp[(0)+-2]
 15709  017D30  0EFE               	movlw	-2
 15710  017D32  006F FF8C  F032    	movff	plusw1,btemp
 15711  017D38  0EFF               	movlw	-1
 15712  017D3A  006F FF8C  F033    	movff	plusw1,btemp+1
 15713  017D40                     l2736:
 15714                           
 15715                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 15716  017D40  52E5               	movf	postdec1,f,c
 15717  017D42  52E5               	movf	postdec1,f,c
 15718  017D44  0012               	return		;funcret
 15719  017D46                     __end_of_abs:
 15720                           	opt callstack 0
 15721                           
 15722 ;; *************** function ___aomod *****************
 15723 ;; Defined at:
 15724 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;  dividend        8  [STACK] long long 
 15727 ;;  divisor         8  [STACK] long long 
 15728 ;; Auto vars:     Size  Location     Type
 15729 ;;  sign            1  [STACK] unsigned char 
 15730 ;;  counter         1  [STACK] unsigned char 
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  8  [STACK] long long 
 15733 ;; Registers used:
 15734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/1
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15744 ;;Total ram usage:        0 bytes
 15745 ;; Hardware stack levels used:    1
 15746 ;; Hardware stack levels required when called:    6
 15747 ;; This function calls:
 15748 ;;		Nothing
 15749 ;; This function is called by:
 15750 ;;		_dtoa
 15751 ;; This function uses a reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text58
 15755  0154DC                     __ptext58:
 15756                           	opt callstack 0
 15757  0154DC                     ___aomod:
 15758                           	opt callstack 0
 15759                           
 15760                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15761  0154DC  52E6               	movf	postinc1,f,c
 15762  0154DE  52E6               	movf	postinc1,f,c
 15763                           
 15764                           ;stkvar	_sign @ sp[(-2)+0]
 15765                           
 15766                           ;incstack = 0
 15767  0154E0  0EFE               	movlw	-2
 15768  0154E2  6AE3               	clrf	plusw1,c
 15769                           
 15770                           ;stkvar	_dividend @ sp[(-2)+-8]
 15771  0154E4  0EFD               	movlw	-3
 15772  0154E6  AEE3               	btfss	plusw1,7,c
 15773  0154E8  D028               	goto	l6548
 15774                           
 15775                           ;stkvar	_dividend @ sp[(-2)+-8]
 15776                           ;stkvar	_dividend @ sp[(-2)+-8]
 15777  0154EA  0EF6               	movlw	-10
 15778  0154EC  6CE3               	negf	plusw1,c
 15779  0154EE  0EF7               	movlw	-9
 15780  0154F0  1EE3               	comf	plusw1,f,c
 15781  0154F2  0EF8               	movlw	-8
 15782  0154F4  1EE3               	comf	plusw1,f,c
 15783  0154F6  0EF9               	movlw	-7
 15784  0154F8  1EE3               	comf	plusw1,f,c
 15785  0154FA  0EFA               	movlw	-6
 15786  0154FC  1EE3               	comf	plusw1,f,c
 15787  0154FE  0EFB               	movlw	-5
 15788  015500  1EE3               	comf	plusw1,f,c
 15789  015502  0EFC               	movlw	-4
 15790  015504  1EE3               	comf	plusw1,f,c
 15791  015506  0EFD               	movlw	-3
 15792  015508  1EE3               	comf	plusw1,f,c
 15793  01550A  E314               	bnc	u5430
 15794  01550C  0EF7               	movlw	-9
 15795  01550E  2AE3               	incf	plusw1,f,c
 15796  015510  E311               	bnc	u5430
 15797  015512  0EF8               	movlw	-8
 15798  015514  2AE3               	incf	plusw1,f,c
 15799  015516  E30E               	bnc	u5430
 15800  015518  0EF9               	movlw	-7
 15801  01551A  2AE3               	incf	plusw1,f,c
 15802  01551C  E30B               	bnc	u5430
 15803  01551E  0EFA               	movlw	-6
 15804  015520  2AE3               	incf	plusw1,f,c
 15805  015522  E308               	bnc	u5430
 15806  015524  0EFB               	movlw	-5
 15807  015526  2AE3               	incf	plusw1,f,c
 15808  015528  E305               	bnc	u5430
 15809  01552A  0EFC               	movlw	-4
 15810  01552C  2AE3               	incf	plusw1,f,c
 15811  01552E  E302               	bnc	u5430
 15812  015530  0EFD               	movlw	-3
 15813  015532  2AE3               	incf	plusw1,f,c
 15814  015534                     u5430:
 15815                           
 15816                           ;stkvar	_sign @ sp[(-2)+0]
 15817  015534  0EFE               	movlw	-2
 15818  015536  6AE3               	clrf	plusw1,c
 15819  015538  2AE3               	incf	plusw1,f,c
 15820  01553A                     l6548:
 15821                           
 15822                           ;stkvar	_divisor @ sp[(-2)+-16]
 15823  01553A  0EF5               	movlw	-11
 15824  01553C  AEE3               	btfss	plusw1,7,c
 15825  01553E  D025               	goto	u5450
 15826                           
 15827                           ;stkvar	_divisor @ sp[(-2)+-16]
 15828                           ;stkvar	_divisor @ sp[(-2)+-16]
 15829  015540  0EEE               	movlw	-18
 15830  015542  6CE3               	negf	plusw1,c
 15831  015544  0EEF               	movlw	-17
 15832  015546  1EE3               	comf	plusw1,f,c
 15833  015548  0EF0               	movlw	-16
 15834  01554A  1EE3               	comf	plusw1,f,c
 15835  01554C  0EF1               	movlw	-15
 15836  01554E  1EE3               	comf	plusw1,f,c
 15837  015550  0EF2               	movlw	-14
 15838  015552  1EE3               	comf	plusw1,f,c
 15839  015554  0EF3               	movlw	-13
 15840  015556  1EE3               	comf	plusw1,f,c
 15841  015558  0EF4               	movlw	-12
 15842  01555A  1EE3               	comf	plusw1,f,c
 15843  01555C  0EF5               	movlw	-11
 15844  01555E  1EE3               	comf	plusw1,f,c
 15845  015560  E314               	bnc	u5450
 15846  015562  0EEF               	movlw	-17
 15847  015564  2AE3               	incf	plusw1,f,c
 15848  015566  E311               	bnc	u5450
 15849  015568  0EF0               	movlw	-16
 15850  01556A  2AE3               	incf	plusw1,f,c
 15851  01556C  E30E               	bnc	u5450
 15852  01556E  0EF1               	movlw	-15
 15853  015570  2AE3               	incf	plusw1,f,c
 15854  015572  E30B               	bnc	u5450
 15855  015574  0EF2               	movlw	-14
 15856  015576  2AE3               	incf	plusw1,f,c
 15857  015578  E308               	bnc	u5450
 15858  01557A  0EF3               	movlw	-13
 15859  01557C  2AE3               	incf	plusw1,f,c
 15860  01557E  E305               	bnc	u5450
 15861  015580  0EF4               	movlw	-12
 15862  015582  2AE3               	incf	plusw1,f,c
 15863  015584  E302               	bnc	u5450
 15864  015586  0EF5               	movlw	-11
 15865  015588  2AE3               	incf	plusw1,f,c
 15866  01558A                     u5450:
 15867                           
 15868                           ;stkvar	_divisor @ sp[(-2)+-16]
 15869  01558A  0EEE               	movlw	-18
 15870  01558C  50E3               	movf	plusw1,w,c
 15871  01558E  E116               	bnz	u5460
 15872  015590  0EEF               	movlw	-17
 15873  015592  50E3               	movf	plusw1,w,c
 15874  015594  E113               	bnz	u5460
 15875  015596  0EF0               	movlw	-16
 15876  015598  50E3               	movf	plusw1,w,c
 15877  01559A  E110               	bnz	u5460
 15878  01559C  0EF1               	movlw	-15
 15879  01559E  50E3               	movf	plusw1,w,c
 15880  0155A0  E10D               	bnz	u5460
 15881  0155A2  0EF2               	movlw	-14
 15882  0155A4  50E3               	movf	plusw1,w,c
 15883  0155A6  E10A               	bnz	u5460
 15884  0155A8  0EF3               	movlw	-13
 15885  0155AA  50E3               	movf	plusw1,w,c
 15886  0155AC  E107               	bnz	u5460
 15887  0155AE  0EF4               	movlw	-12
 15888  0155B0  50E3               	movf	plusw1,w,c
 15889  0155B2  E104               	bnz	u5460
 15890  0155B4  0EF5               	movlw	-11
 15891  0155B6  50E3               	movf	plusw1,w,c
 15892  0155B8  B4D8               	btfsc	status,2,c
 15893  0155BA  D075               	goto	u5490
 15894  0155BC                     u5460:
 15895                           
 15896                           ;stkvar	_counter @ sp[(-2)+1]
 15897  0155BC  0EFF               	movlw	-1
 15898  0155BE  6AE3               	clrf	plusw1,c
 15899  0155C0  D012               	goto	L16
 15900  0155C2                     l6556:
 15901                           
 15902                           ;stkvar	_divisor @ sp[(-2)+-16]
 15903  0155C2  90D8               	bcf	status,0,c
 15904  0155C4  0EEE               	movlw	-18
 15905  0155C6  36E3               	rlcf	plusw1,f,c
 15906  0155C8  0EEF               	movlw	-17
 15907  0155CA  36E3               	rlcf	plusw1,f,c
 15908  0155CC  0EF0               	movlw	-16
 15909  0155CE  36E3               	rlcf	plusw1,f,c
 15910  0155D0  0EF1               	movlw	-15
 15911  0155D2  36E3               	rlcf	plusw1,f,c
 15912  0155D4  0EF2               	movlw	-14
 15913  0155D6  36E3               	rlcf	plusw1,f,c
 15914  0155D8  0EF3               	movlw	-13
 15915  0155DA  36E3               	rlcf	plusw1,f,c
 15916  0155DC  0EF4               	movlw	-12
 15917  0155DE  36E3               	rlcf	plusw1,f,c
 15918  0155E0  0EF5               	movlw	-11
 15919  0155E2  36E3               	rlcf	plusw1,f,c
 15920                           
 15921                           ;stkvar	_counter @ sp[(-2)+1]
 15922  0155E4  0EFF               	movlw	-1
 15923  0155E6                     L16:
 15924  0155E6  2AE3               	incf	plusw1,f,c
 15925                           
 15926                           ;stkvar	_divisor @ sp[(-2)+-16]
 15927  0155E8  0EF5               	movlw	-11
 15928  0155EA  AEE3               	btfss	plusw1,7,c
 15929  0155EC  D7EA               	goto	l6556
 15930  0155EE                     u5470:
 15931                           
 15932                           ;stkvar	_divisor @ sp[(-2)+-16]
 15933                           ;stkvar	_dividend @ sp[(-2)+-8]
 15934  0155EE  50E1               	movf	fsr1l,w,c
 15935  0155F0  0FF6               	addlw	-10
 15936  0155F2  6ED9               	movwf	fsr2l,c
 15937  0155F4  50E2               	movf	fsr1h,w,c
 15938  0155F6  6EDA               	movwf	fsr2h,c
 15939  0155F8  0EFF               	movlw	255
 15940  0155FA  22DA               	addwfc	fsr2h,f,c
 15941  0155FC  0EEE               	movlw	-18
 15942  0155FE  50E3               	movf	plusw1,w,c
 15943  015600  5CDE               	subwf	postinc2,w,c
 15944  015602  0EEF               	movlw	-17
 15945  015604  50E3               	movf	plusw1,w,c
 15946  015606  58DE               	subwfb	postinc2,w,c
 15947  015608  0EF0               	movlw	-16
 15948  01560A  50E3               	movf	plusw1,w,c
 15949  01560C  58DE               	subwfb	postinc2,w,c
 15950  01560E  0EF1               	movlw	-15
 15951  015610  50E3               	movf	plusw1,w,c
 15952  015612  58DE               	subwfb	postinc2,w,c
 15953  015614  0EF2               	movlw	-14
 15954  015616  50E3               	movf	plusw1,w,c
 15955  015618  58DE               	subwfb	postinc2,w,c
 15956  01561A  0EF3               	movlw	-13
 15957  01561C  50E3               	movf	plusw1,w,c
 15958  01561E  58DE               	subwfb	postinc2,w,c
 15959  015620  0EF4               	movlw	-12
 15960  015622  50E3               	movf	plusw1,w,c
 15961  015624  58DE               	subwfb	postinc2,w,c
 15962  015626  0EF5               	movlw	-11
 15963  015628  50E3               	movf	plusw1,w,c
 15964  01562A  58DE               	subwfb	postinc2,w,c
 15965  01562C  A0D8               	btfss	status,0,c
 15966  01562E  D01F               	goto	l6564
 15967                           
 15968                           ;stkvar	_divisor @ sp[(-2)+-16]
 15969                           ;stkvar	_dividend @ sp[(-2)+-8]
 15970  015630  50E1               	movf	fsr1l,w,c
 15971  015632  0FF6               	addlw	-10
 15972  015634  6ED9               	movwf	fsr2l,c
 15973  015636  50E2               	movf	fsr1h,w,c
 15974  015638  6EDA               	movwf	fsr2h,c
 15975  01563A  0EFF               	movlw	255
 15976  01563C  22DA               	addwfc	fsr2h,f,c
 15977  01563E  0EEE               	movlw	-18
 15978  015640  50E3               	movf	plusw1,w,c
 15979  015642  5EDE               	subwf	postinc2,f,c
 15980  015644  0EEF               	movlw	-17
 15981  015646  50E3               	movf	plusw1,w,c
 15982  015648  5ADE               	subwfb	postinc2,f,c
 15983  01564A  0EF0               	movlw	-16
 15984  01564C  50E3               	movf	plusw1,w,c
 15985  01564E  5ADE               	subwfb	postinc2,f,c
 15986  015650  0EF1               	movlw	-15
 15987  015652  50E3               	movf	plusw1,w,c
 15988  015654  5ADE               	subwfb	postinc2,f,c
 15989  015656  0EF2               	movlw	-14
 15990  015658  50E3               	movf	plusw1,w,c
 15991  01565A  5ADE               	subwfb	postinc2,f,c
 15992  01565C  0EF3               	movlw	-13
 15993  01565E  50E3               	movf	plusw1,w,c
 15994  015660  5ADE               	subwfb	postinc2,f,c
 15995  015662  0EF4               	movlw	-12
 15996  015664  50E3               	movf	plusw1,w,c
 15997  015666  5ADE               	subwfb	postinc2,f,c
 15998  015668  0EF5               	movlw	-11
 15999  01566A  50E3               	movf	plusw1,w,c
 16000  01566C  5ADE               	subwfb	postinc2,f,c
 16001  01566E                     l6564:
 16002                           
 16003                           ;stkvar	_divisor @ sp[(-2)+-16]
 16004  01566E  90D8               	bcf	status,0,c
 16005  015670  0EF5               	movlw	-11
 16006  015672  32E3               	rrcf	plusw1,f,c
 16007  015674  0EF4               	movlw	-12
 16008  015676  32E3               	rrcf	plusw1,f,c
 16009  015678  0EF3               	movlw	-13
 16010  01567A  32E3               	rrcf	plusw1,f,c
 16011  01567C  0EF2               	movlw	-14
 16012  01567E  32E3               	rrcf	plusw1,f,c
 16013  015680  0EF1               	movlw	-15
 16014  015682  32E3               	rrcf	plusw1,f,c
 16015  015684  0EF0               	movlw	-16
 16016  015686  32E3               	rrcf	plusw1,f,c
 16017  015688  0EEF               	movlw	-17
 16018  01568A  32E3               	rrcf	plusw1,f,c
 16019  01568C  0EEE               	movlw	-18
 16020  01568E  32E3               	rrcf	plusw1,f,c
 16021                           
 16022                           ;stkvar	_counter @ sp[(-2)+1]
 16023  015690  0EFF               	movlw	-1
 16024  015692  50E3               	movf	plusw1,w,c
 16025  015694  6E32               	movwf	btemp^0,c
 16026  015696  0E01               	movlw	1
 16027  015698  5E32               	subwf	btemp^0,f,c
 16028  01569A  0EFF               	movlw	-1
 16029  01569C  0060  F0CB  FFE3   	movff	btemp,plusw1
 16030  0156A2  A4D8               	btfss	status,2,c
 16031  0156A4  D7A4               	goto	u5470
 16032  0156A6                     u5490:
 16033                           
 16034                           ;stkvar	_sign @ sp[(-2)+0]
 16035  0156A6  0EFE               	movlw	-2
 16036  0156A8  50E3               	movf	plusw1,w,c
 16037  0156AA  B4D8               	btfsc	status,2,c
 16038  0156AC  D025               	goto	u5510
 16039                           
 16040                           ;stkvar	_dividend @ sp[(-2)+-8]
 16041                           ;stkvar	_dividend @ sp[(-2)+-8]
 16042  0156AE  0EF6               	movlw	-10
 16043  0156B0  6CE3               	negf	plusw1,c
 16044  0156B2  0EF7               	movlw	-9
 16045  0156B4  1EE3               	comf	plusw1,f,c
 16046  0156B6  0EF8               	movlw	-8
 16047  0156B8  1EE3               	comf	plusw1,f,c
 16048  0156BA  0EF9               	movlw	-7
 16049  0156BC  1EE3               	comf	plusw1,f,c
 16050  0156BE  0EFA               	movlw	-6
 16051  0156C0  1EE3               	comf	plusw1,f,c
 16052  0156C2  0EFB               	movlw	-5
 16053  0156C4  1EE3               	comf	plusw1,f,c
 16054  0156C6  0EFC               	movlw	-4
 16055  0156C8  1EE3               	comf	plusw1,f,c
 16056  0156CA  0EFD               	movlw	-3
 16057  0156CC  1EE3               	comf	plusw1,f,c
 16058  0156CE  E314               	bnc	u5510
 16059  0156D0  0EF7               	movlw	-9
 16060  0156D2  2AE3               	incf	plusw1,f,c
 16061  0156D4  E311               	bnc	u5510
 16062  0156D6  0EF8               	movlw	-8
 16063  0156D8  2AE3               	incf	plusw1,f,c
 16064  0156DA  E30E               	bnc	u5510
 16065  0156DC  0EF9               	movlw	-7
 16066  0156DE  2AE3               	incf	plusw1,f,c
 16067  0156E0  E30B               	bnc	u5510
 16068  0156E2  0EFA               	movlw	-6
 16069  0156E4  2AE3               	incf	plusw1,f,c
 16070  0156E6  E308               	bnc	u5510
 16071  0156E8  0EFB               	movlw	-5
 16072  0156EA  2AE3               	incf	plusw1,f,c
 16073  0156EC  E305               	bnc	u5510
 16074  0156EE  0EFC               	movlw	-4
 16075  0156F0  2AE3               	incf	plusw1,f,c
 16076  0156F2  E302               	bnc	u5510
 16077  0156F4  0EFD               	movlw	-3
 16078  0156F6  2AE3               	incf	plusw1,f,c
 16079  0156F8                     u5510:
 16080                           
 16081                           ;stkvar	_dividend @ sp[(-2)+-8]
 16082  0156F8  0EF6               	movlw	246
 16083  0156FA  24E1               	addwf	fsr1l,w,c
 16084  0156FC  6ED9               	movwf	fsr2l,c
 16085  0156FE  0EFF               	movlw	255
 16086  015700  20E2               	addwfc	fsr1h,w,c
 16087  015702  6EDA               	movwf	fsr2h,c
 16088                           
 16089                           ;stkvar	?___aomod @ sp[(-2)+-8]
 16090  015704  0E08               	movlw	8
 16091  015706  6E32               	movwf	btemp^0,c
 16092  015708  0EF6               	movlw	-10
 16093  01570A                     us552999:
 16094  01570A  006F FF7B FFE3     	movff	postinc2,plusw1
 16095  015710  28E8               	incf	wreg,w,c
 16096  015712  2E32               	decfsz	btemp^0,f,c
 16097  015714  D7FA               	bra	us552999
 16098                           
 16099                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16100  015716  52E5               	movf	postdec1,f,c
 16101  015718  52E5               	movf	postdec1,f,c
 16102  01571A  0012               	return		;funcret
 16103  01571C                     __end_of___aomod:
 16104                           	opt callstack 0
 16105                           
 16106 ;; *************** function ___aodiv *****************
 16107 ;; Defined at:
 16108 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  dividend        8  [STACK] long long 
 16111 ;;  divisor         8  [STACK] long long 
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;  quotient        8  [STACK] long long 
 16114 ;;  sign            1  [STACK] unsigned char 
 16115 ;;  counter         1  [STACK] unsigned char 
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  8  [STACK] long long 
 16118 ;; Registers used:
 16119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/1
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16129 ;;Total ram usage:        0 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:    6
 16132 ;; This function calls:
 16133 ;;		Nothing
 16134 ;; This function is called by:
 16135 ;;		_dtoa
 16136 ;; This function uses a reentrant model
 16137 ;;
 16138                           
 16139                           	psect	text59
 16140  014D9C                     __ptext59:
 16141                           	opt callstack 0
 16142  014D9C                     ___aodiv:
 16143                           	opt callstack 0
 16144                           
 16145                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 16146  014D9C  0E0A               	movlw	10
 16147  014D9E  26E1               	addwf	fsr1l,f,c
 16148  014DA0  0E00               	movlw	0
 16149  014DA2  22E2               	addwfc	fsr1h,f,c
 16150                           
 16151                           ;stkvar	_sign @ sp[(-10)+8]
 16152                           
 16153                           ;incstack = 0
 16154  014DA4  0EFE               	movlw	-2
 16155  014DA6  6AE3               	clrf	plusw1,c
 16156                           
 16157                           ;stkvar	_divisor @ sp[(-10)+-16]
 16158  014DA8  0EED               	movlw	-19
 16159  014DAA  AEE3               	btfss	plusw1,7,c
 16160  014DAC  D028               	goto	l6504
 16161                           
 16162                           ;stkvar	_divisor @ sp[(-10)+-16]
 16163                           ;stkvar	_divisor @ sp[(-10)+-16]
 16164  014DAE  0EE6               	movlw	-26
 16165  014DB0  6CE3               	negf	plusw1,c
 16166  014DB2  0EE7               	movlw	-25
 16167  014DB4  1EE3               	comf	plusw1,f,c
 16168  014DB6  0EE8               	movlw	-24
 16169  014DB8  1EE3               	comf	plusw1,f,c
 16170  014DBA  0EE9               	movlw	-23
 16171  014DBC  1EE3               	comf	plusw1,f,c
 16172  014DBE  0EEA               	movlw	-22
 16173  014DC0  1EE3               	comf	plusw1,f,c
 16174  014DC2  0EEB               	movlw	-21
 16175  014DC4  1EE3               	comf	plusw1,f,c
 16176  014DC6  0EEC               	movlw	-20
 16177  014DC8  1EE3               	comf	plusw1,f,c
 16178  014DCA  0EED               	movlw	-19
 16179  014DCC  1EE3               	comf	plusw1,f,c
 16180  014DCE  E314               	bnc	u5310
 16181  014DD0  0EE7               	movlw	-25
 16182  014DD2  2AE3               	incf	plusw1,f,c
 16183  014DD4  E311               	bnc	u5310
 16184  014DD6  0EE8               	movlw	-24
 16185  014DD8  2AE3               	incf	plusw1,f,c
 16186  014DDA  E30E               	bnc	u5310
 16187  014DDC  0EE9               	movlw	-23
 16188  014DDE  2AE3               	incf	plusw1,f,c
 16189  014DE0  E30B               	bnc	u5310
 16190  014DE2  0EEA               	movlw	-22
 16191  014DE4  2AE3               	incf	plusw1,f,c
 16192  014DE6  E308               	bnc	u5310
 16193  014DE8  0EEB               	movlw	-21
 16194  014DEA  2AE3               	incf	plusw1,f,c
 16195  014DEC  E305               	bnc	u5310
 16196  014DEE  0EEC               	movlw	-20
 16197  014DF0  2AE3               	incf	plusw1,f,c
 16198  014DF2  E302               	bnc	u5310
 16199  014DF4  0EED               	movlw	-19
 16200  014DF6  2AE3               	incf	plusw1,f,c
 16201  014DF8                     u5310:
 16202                           
 16203                           ;stkvar	_sign @ sp[(-10)+8]
 16204  014DF8  0EFE               	movlw	-2
 16205  014DFA  6AE3               	clrf	plusw1,c
 16206  014DFC  2AE3               	incf	plusw1,f,c
 16207  014DFE                     l6504:
 16208                           
 16209                           ;stkvar	_dividend @ sp[(-10)+-8]
 16210  014DFE  0EF5               	movlw	-11
 16211  014E00  AEE3               	btfss	plusw1,7,c
 16212  014E02  D027               	goto	l6510
 16213                           
 16214                           ;stkvar	_dividend @ sp[(-10)+-8]
 16215                           ;stkvar	_dividend @ sp[(-10)+-8]
 16216  014E04  0EEE               	movlw	-18
 16217  014E06  6CE3               	negf	plusw1,c
 16218  014E08  0EEF               	movlw	-17
 16219  014E0A  1EE3               	comf	plusw1,f,c
 16220  014E0C  0EF0               	movlw	-16
 16221  014E0E  1EE3               	comf	plusw1,f,c
 16222  014E10  0EF1               	movlw	-15
 16223  014E12  1EE3               	comf	plusw1,f,c
 16224  014E14  0EF2               	movlw	-14
 16225  014E16  1EE3               	comf	plusw1,f,c
 16226  014E18  0EF3               	movlw	-13
 16227  014E1A  1EE3               	comf	plusw1,f,c
 16228  014E1C  0EF4               	movlw	-12
 16229  014E1E  1EE3               	comf	plusw1,f,c
 16230  014E20  0EF5               	movlw	-11
 16231  014E22  1EE3               	comf	plusw1,f,c
 16232  014E24  E314               	bnc	u5330
 16233  014E26  0EEF               	movlw	-17
 16234  014E28  2AE3               	incf	plusw1,f,c
 16235  014E2A  E311               	bnc	u5330
 16236  014E2C  0EF0               	movlw	-16
 16237  014E2E  2AE3               	incf	plusw1,f,c
 16238  014E30  E30E               	bnc	u5330
 16239  014E32  0EF1               	movlw	-15
 16240  014E34  2AE3               	incf	plusw1,f,c
 16241  014E36  E30B               	bnc	u5330
 16242  014E38  0EF2               	movlw	-14
 16243  014E3A  2AE3               	incf	plusw1,f,c
 16244  014E3C  E308               	bnc	u5330
 16245  014E3E  0EF3               	movlw	-13
 16246  014E40  2AE3               	incf	plusw1,f,c
 16247  014E42  E305               	bnc	u5330
 16248  014E44  0EF4               	movlw	-12
 16249  014E46  2AE3               	incf	plusw1,f,c
 16250  014E48  E302               	bnc	u5330
 16251  014E4A  0EF5               	movlw	-11
 16252  014E4C  2AE3               	incf	plusw1,f,c
 16253  014E4E                     u5330:
 16254                           
 16255                           ;stkvar	_sign @ sp[(-10)+8]
 16256  014E4E  0EFE               	movlw	-2
 16257  014E50  70E3               	btg	plusw1,0,c
 16258  014E52                     l6510:
 16259                           
 16260                           ;stkvar	_quotient @ sp[(-10)+0]
 16261  014E52  0E07               	movlw	7
 16262  014E54  6E32               	movwf	btemp^0,c
 16263  014E56  0EF6               	movlw	-10
 16264  014E58                     u5341:
 16265  014E58  6AE3               	clrf	plusw1,c
 16266  014E5A  2AE8               	incf	wreg,f,c
 16267  014E5C  0632               	decf	btemp^0,f,c
 16268  014E5E  E2FC               	bc	u5341
 16269                           
 16270                           ;stkvar	_divisor @ sp[(-10)+-16]
 16271  014E60  0EE6               	movlw	-26
 16272  014E62  50E3               	movf	plusw1,w,c
 16273  014E64  E116               	bnz	u5350
 16274  014E66  0EE7               	movlw	-25
 16275  014E68  50E3               	movf	plusw1,w,c
 16276  014E6A  E113               	bnz	u5350
 16277  014E6C  0EE8               	movlw	-24
 16278  014E6E  50E3               	movf	plusw1,w,c
 16279  014E70  E110               	bnz	u5350
 16280  014E72  0EE9               	movlw	-23
 16281  014E74  50E3               	movf	plusw1,w,c
 16282  014E76  E10D               	bnz	u5350
 16283  014E78  0EEA               	movlw	-22
 16284  014E7A  50E3               	movf	plusw1,w,c
 16285  014E7C  E10A               	bnz	u5350
 16286  014E7E  0EEB               	movlw	-21
 16287  014E80  50E3               	movf	plusw1,w,c
 16288  014E82  E107               	bnz	u5350
 16289  014E84  0EEC               	movlw	-20
 16290  014E86  50E3               	movf	plusw1,w,c
 16291  014E88  E104               	bnz	u5350
 16292  014E8A  0EED               	movlw	-19
 16293  014E8C  50E3               	movf	plusw1,w,c
 16294  014E8E  B4D8               	btfsc	status,2,c
 16295  014E90  D088               	goto	u5380
 16296  014E92                     u5350:
 16297                           
 16298                           ;stkvar	_counter @ sp[(-10)+9]
 16299  014E92  0EFF               	movlw	-1
 16300  014E94  6AE3               	clrf	plusw1,c
 16301  014E96  D012               	goto	L17
 16302  014E98                     l6516:
 16303                           
 16304                           ;stkvar	_divisor @ sp[(-10)+-16]
 16305  014E98  90D8               	bcf	status,0,c
 16306  014E9A  0EE6               	movlw	-26
 16307  014E9C  36E3               	rlcf	plusw1,f,c
 16308  014E9E  0EE7               	movlw	-25
 16309  014EA0  36E3               	rlcf	plusw1,f,c
 16310  014EA2  0EE8               	movlw	-24
 16311  014EA4  36E3               	rlcf	plusw1,f,c
 16312  014EA6  0EE9               	movlw	-23
 16313  014EA8  36E3               	rlcf	plusw1,f,c
 16314  014EAA  0EEA               	movlw	-22
 16315  014EAC  36E3               	rlcf	plusw1,f,c
 16316  014EAE  0EEB               	movlw	-21
 16317  014EB0  36E3               	rlcf	plusw1,f,c
 16318  014EB2  0EEC               	movlw	-20
 16319  014EB4  36E3               	rlcf	plusw1,f,c
 16320  014EB6  0EED               	movlw	-19
 16321  014EB8  36E3               	rlcf	plusw1,f,c
 16322                           
 16323                           ;stkvar	_counter @ sp[(-10)+9]
 16324  014EBA  0EFF               	movlw	-1
 16325  014EBC                     L17:
 16326  014EBC  2AE3               	incf	plusw1,f,c
 16327                           
 16328                           ;stkvar	_divisor @ sp[(-10)+-16]
 16329  014EBE  0EED               	movlw	-19
 16330  014EC0  AEE3               	btfss	plusw1,7,c
 16331  014EC2  D7EA               	goto	l6516
 16332  014EC4                     u5360:
 16333                           
 16334                           ;stkvar	_quotient @ sp[(-10)+0]
 16335  014EC4  90D8               	bcf	status,0,c
 16336  014EC6  0EF6               	movlw	-10
 16337  014EC8  36E3               	rlcf	plusw1,f,c
 16338  014ECA  0EF7               	movlw	-9
 16339  014ECC  36E3               	rlcf	plusw1,f,c
 16340  014ECE  0EF8               	movlw	-8
 16341  014ED0  36E3               	rlcf	plusw1,f,c
 16342  014ED2  0EF9               	movlw	-7
 16343  014ED4  36E3               	rlcf	plusw1,f,c
 16344  014ED6  0EFA               	movlw	-6
 16345  014ED8  36E3               	rlcf	plusw1,f,c
 16346  014EDA  0EFB               	movlw	-5
 16347  014EDC  36E3               	rlcf	plusw1,f,c
 16348  014EDE  0EFC               	movlw	-4
 16349  014EE0  36E3               	rlcf	plusw1,f,c
 16350  014EE2  0EFD               	movlw	-3
 16351  014EE4  36E3               	rlcf	plusw1,f,c
 16352                           
 16353                           ;stkvar	_divisor @ sp[(-10)+-16]
 16354                           ;stkvar	_dividend @ sp[(-10)+-8]
 16355  014EE6  50E1               	movf	fsr1l,w,c
 16356  014EE8  0FEE               	addlw	-18
 16357  014EEA  6ED9               	movwf	fsr2l,c
 16358  014EEC  50E2               	movf	fsr1h,w,c
 16359  014EEE  6EDA               	movwf	fsr2h,c
 16360  014EF0  0EFF               	movlw	255
 16361  014EF2  22DA               	addwfc	fsr2h,f,c
 16362  014EF4  0EE6               	movlw	-26
 16363  014EF6  50E3               	movf	plusw1,w,c
 16364  014EF8  5CDE               	subwf	postinc2,w,c
 16365  014EFA  0EE7               	movlw	-25
 16366  014EFC  50E3               	movf	plusw1,w,c
 16367  014EFE  58DE               	subwfb	postinc2,w,c
 16368  014F00  0EE8               	movlw	-24
 16369  014F02  50E3               	movf	plusw1,w,c
 16370  014F04  58DE               	subwfb	postinc2,w,c
 16371  014F06  0EE9               	movlw	-23
 16372  014F08  50E3               	movf	plusw1,w,c
 16373  014F0A  58DE               	subwfb	postinc2,w,c
 16374  014F0C  0EEA               	movlw	-22
 16375  014F0E  50E3               	movf	plusw1,w,c
 16376  014F10  58DE               	subwfb	postinc2,w,c
 16377  014F12  0EEB               	movlw	-21
 16378  014F14  50E3               	movf	plusw1,w,c
 16379  014F16  58DE               	subwfb	postinc2,w,c
 16380  014F18  0EEC               	movlw	-20
 16381  014F1A  50E3               	movf	plusw1,w,c
 16382  014F1C  58DE               	subwfb	postinc2,w,c
 16383  014F1E  0EED               	movlw	-19
 16384  014F20  50E3               	movf	plusw1,w,c
 16385  014F22  58DE               	subwfb	postinc2,w,c
 16386  014F24  A0D8               	btfss	status,0,c
 16387  014F26  D021               	goto	l6528
 16388                           
 16389                           ;stkvar	_divisor @ sp[(-10)+-16]
 16390                           ;stkvar	_dividend @ sp[(-10)+-8]
 16391  014F28  50E1               	movf	fsr1l,w,c
 16392  014F2A  0FEE               	addlw	-18
 16393  014F2C  6ED9               	movwf	fsr2l,c
 16394  014F2E  50E2               	movf	fsr1h,w,c
 16395  014F30  6EDA               	movwf	fsr2h,c
 16396  014F32  0EFF               	movlw	255
 16397  014F34  22DA               	addwfc	fsr2h,f,c
 16398  014F36  0EE6               	movlw	-26
 16399  014F38  50E3               	movf	plusw1,w,c
 16400  014F3A  5EDE               	subwf	postinc2,f,c
 16401  014F3C  0EE7               	movlw	-25
 16402  014F3E  50E3               	movf	plusw1,w,c
 16403  014F40  5ADE               	subwfb	postinc2,f,c
 16404  014F42  0EE8               	movlw	-24
 16405  014F44  50E3               	movf	plusw1,w,c
 16406  014F46  5ADE               	subwfb	postinc2,f,c
 16407  014F48  0EE9               	movlw	-23
 16408  014F4A  50E3               	movf	plusw1,w,c
 16409  014F4C  5ADE               	subwfb	postinc2,f,c
 16410  014F4E  0EEA               	movlw	-22
 16411  014F50  50E3               	movf	plusw1,w,c
 16412  014F52  5ADE               	subwfb	postinc2,f,c
 16413  014F54  0EEB               	movlw	-21
 16414  014F56  50E3               	movf	plusw1,w,c
 16415  014F58  5ADE               	subwfb	postinc2,f,c
 16416  014F5A  0EEC               	movlw	-20
 16417  014F5C  50E3               	movf	plusw1,w,c
 16418  014F5E  5ADE               	subwfb	postinc2,f,c
 16419  014F60  0EED               	movlw	-19
 16420  014F62  50E3               	movf	plusw1,w,c
 16421  014F64  5ADE               	subwfb	postinc2,f,c
 16422                           
 16423                           ;stkvar	_quotient @ sp[(-10)+0]
 16424  014F66  0EF6               	movlw	-10
 16425  014F68  80E3               	bsf	plusw1,0,c
 16426  014F6A                     l6528:
 16427                           
 16428                           ;stkvar	_divisor @ sp[(-10)+-16]
 16429  014F6A  90D8               	bcf	status,0,c
 16430  014F6C  0EED               	movlw	-19
 16431  014F6E  32E3               	rrcf	plusw1,f,c
 16432  014F70  0EEC               	movlw	-20
 16433  014F72  32E3               	rrcf	plusw1,f,c
 16434  014F74  0EEB               	movlw	-21
 16435  014F76  32E3               	rrcf	plusw1,f,c
 16436  014F78  0EEA               	movlw	-22
 16437  014F7A  32E3               	rrcf	plusw1,f,c
 16438  014F7C  0EE9               	movlw	-23
 16439  014F7E  32E3               	rrcf	plusw1,f,c
 16440  014F80  0EE8               	movlw	-24
 16441  014F82  32E3               	rrcf	plusw1,f,c
 16442  014F84  0EE7               	movlw	-25
 16443  014F86  32E3               	rrcf	plusw1,f,c
 16444  014F88  0EE6               	movlw	-26
 16445  014F8A  32E3               	rrcf	plusw1,f,c
 16446                           
 16447                           ;stkvar	_counter @ sp[(-10)+9]
 16448  014F8C  0EFF               	movlw	-1
 16449  014F8E  50E3               	movf	plusw1,w,c
 16450  014F90  6E32               	movwf	btemp^0,c
 16451  014F92  0E01               	movlw	1
 16452  014F94  5E32               	subwf	btemp^0,f,c
 16453  014F96  0EFF               	movlw	-1
 16454  014F98  0060  F0CB  FFE3   	movff	btemp,plusw1
 16455  014F9E  A4D8               	btfss	status,2,c
 16456  014FA0  D791               	goto	u5360
 16457  014FA2                     u5380:
 16458                           
 16459                           ;stkvar	_sign @ sp[(-10)+8]
 16460  014FA2  0EFE               	movlw	-2
 16461  014FA4  50E3               	movf	plusw1,w,c
 16462  014FA6  B4D8               	btfsc	status,2,c
 16463  014FA8  D025               	goto	u5400
 16464                           
 16465                           ;stkvar	_quotient @ sp[(-10)+0]
 16466                           ;stkvar	_quotient @ sp[(-10)+0]
 16467  014FAA  0EF6               	movlw	-10
 16468  014FAC  6CE3               	negf	plusw1,c
 16469  014FAE  0EF7               	movlw	-9
 16470  014FB0  1EE3               	comf	plusw1,f,c
 16471  014FB2  0EF8               	movlw	-8
 16472  014FB4  1EE3               	comf	plusw1,f,c
 16473  014FB6  0EF9               	movlw	-7
 16474  014FB8  1EE3               	comf	plusw1,f,c
 16475  014FBA  0EFA               	movlw	-6
 16476  014FBC  1EE3               	comf	plusw1,f,c
 16477  014FBE  0EFB               	movlw	-5
 16478  014FC0  1EE3               	comf	plusw1,f,c
 16479  014FC2  0EFC               	movlw	-4
 16480  014FC4  1EE3               	comf	plusw1,f,c
 16481  014FC6  0EFD               	movlw	-3
 16482  014FC8  1EE3               	comf	plusw1,f,c
 16483  014FCA  E314               	bnc	u5400
 16484  014FCC  0EF7               	movlw	-9
 16485  014FCE  2AE3               	incf	plusw1,f,c
 16486  014FD0  E311               	bnc	u5400
 16487  014FD2  0EF8               	movlw	-8
 16488  014FD4  2AE3               	incf	plusw1,f,c
 16489  014FD6  E30E               	bnc	u5400
 16490  014FD8  0EF9               	movlw	-7
 16491  014FDA  2AE3               	incf	plusw1,f,c
 16492  014FDC  E30B               	bnc	u5400
 16493  014FDE  0EFA               	movlw	-6
 16494  014FE0  2AE3               	incf	plusw1,f,c
 16495  014FE2  E308               	bnc	u5400
 16496  014FE4  0EFB               	movlw	-5
 16497  014FE6  2AE3               	incf	plusw1,f,c
 16498  014FE8  E305               	bnc	u5400
 16499  014FEA  0EFC               	movlw	-4
 16500  014FEC  2AE3               	incf	plusw1,f,c
 16501  014FEE  E302               	bnc	u5400
 16502  014FF0  0EFD               	movlw	-3
 16503  014FF2  2AE3               	incf	plusw1,f,c
 16504  014FF4                     u5400:
 16505                           
 16506                           ;stkvar	_quotient @ sp[(-10)+0]
 16507  014FF4  0EF6               	movlw	246
 16508  014FF6  24E1               	addwf	fsr1l,w,c
 16509  014FF8  6ED9               	movwf	fsr2l,c
 16510  014FFA  0EFF               	movlw	255
 16511  014FFC  20E2               	addwfc	fsr1h,w,c
 16512  014FFE  6EDA               	movwf	fsr2h,c
 16513                           
 16514                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 16515  015000  0E08               	movlw	8
 16516  015002  6E32               	movwf	btemp^0,c
 16517  015004  0EEE               	movlw	-18
 16518  015006                     us541999:
 16519  015006  006F FF7B FFE3     	movff	postinc2,plusw1
 16520  01500C  28E8               	incf	wreg,w,c
 16521  01500E  2E32               	decfsz	btemp^0,f,c
 16522  015010  D7FA               	bra	us541999
 16523                           
 16524                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 16525  015012  0EF6               	movlw	246
 16526  015014  26E1               	addwf	fsr1l,f,c
 16527  015016  0EFF               	movlw	255
 16528  015018  22E2               	addwfc	fsr1h,f,c
 16529  01501A  0012               	return		;funcret
 16530  01501C                     __end_of___aodiv:
 16531                           	opt callstack 0
 16532                           
 16533 ;; *************** function _ctoa *****************
 16534 ;; Defined at:
 16535 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16538 ;;		 -> f(6), NULL(0), 
 16539 ;;  c               1  [STACK] unsigned char 
 16540 ;; Auto vars:     Size  Location     Type
 16541 ;;  w               2  [STACK] int 
 16542 ;;  l               2    0        int 
 16543 ;; Return value:  Size  Location     Type
 16544 ;;                  2  [STACK] int 
 16545 ;; Registers used:
 16546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16547 ;; Tracked objects:
 16548 ;;		On entry : 0/5
 16549 ;;		On exit  : 0/0
 16550 ;;		Unchanged: 0/0
 16551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16556 ;;Total ram usage:        0 bytes
 16557 ;; Hardware stack levels used:    1
 16558 ;; Hardware stack levels required when called:   11
 16559 ;; This function calls:
 16560 ;;		_pad
 16561 ;; This function is called by:
 16562 ;;		_vfpfcnvrt
 16563 ;; This function uses a reentrant model
 16564 ;;
 16565                           
 16566                           	psect	text60
 16567  0174EE                     __ptext60:
 16568                           	opt callstack 0
 16569  0174EE                     _ctoa:
 16570                           	opt callstack 0
 16571                           
 16572                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16573  0174EE  52E6               	movf	postinc1,f,c
 16574  0174F0  52E6               	movf	postinc1,f,c
 16575                           
 16576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 16577                           
 16578                           ;incstack = 0
 16579  0174F2  501B               	movf	_width^0,w,c
 16580  0174F4  101C               	iorwf	(_width+1)^0,w,c
 16581  0174F6  A4D8               	btfss	status,2,c
 16582  0174F8  D009               	goto	l9286
 16583                           
 16584                           ;stkvar	_w @ sp[(-2)+0]
 16585  0174FA  0EFE               	movlw	-2
 16586  0174FC  0060  F06F  FFE3   	movff	_width,plusw1
 16587  017502  0EFF               	movlw	-1
 16588  017504  0060  F073  FFE3   	movff	_width+1,plusw1
 16589  01750A  D016               	goto	l9288
 16590  01750C                     l9286:
 16591  01750C  0EFF               	movlw	255
 16592  01750E  6E3C               	movwf	(btemp+10)^0,c
 16593  017510  0EFF               	movlw	255
 16594  017512  6E3D               	movwf	(btemp+11)^0,c
 16595  017514  0060  F06C  F03A   	movff	_width,btemp+8
 16596  01751A  0060  F070  F03B   	movff	_width+1,btemp+9
 16597  017520  503C               	movf	(btemp+10)^0,w,c
 16598  017522  263A               	addwf	(btemp+8)^0,f,c
 16599  017524  503D               	movf	(btemp+11)^0,w,c
 16600  017526  223B               	addwfc	(btemp+9)^0,f,c
 16601                           
 16602                           ;stkvar	_w @ sp[(-2)+0]
 16603  017528  0EFE               	movlw	-2
 16604  01752A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16605  017530  0EFF               	movlw	-1
 16606  017532  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16607  017538                     l9288:
 16608                           
 16609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 16610                           ;stkvar	_c @ sp[(-2)+-3]
 16611  017538  0EFB               	movlw	-5
 16612  01753A  006F FF8C  F178    	movff	plusw1,_dbuf
 16613                           
 16614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 16615  017540  0101               	movlb	1	; () banked
 16616  017542  6B79               	clrf	(_dbuf+1)& (0+255),b
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 16620                           ;stkvar	_w @ sp[(-2)+0]
 16621  017544  0EFE               	movlw	-2
 16622  017546  006F FF8F FFE6     	movff	plusw1,postinc1
 16623  01754C  006F FF8F FFE6     	movff	plusw1,postinc1
 16624  017552  0E78               	movlw	low _dbuf
 16625  017554  6EE6               	movwf	postinc1,c
 16626  017556  0E01               	movlw	high _dbuf
 16627  017558  6EE6               	movwf	postinc1,c
 16628                           
 16629                           ;stkvar	_fp @ sp[(-6)+-2]
 16630  01755A  0EF8               	movlw	-8
 16631  01755C  006F FF8F FFE6     	movff	plusw1,postinc1
 16632  017562  006F FF8F FFE6     	movff	plusw1,postinc1
 16633  017568  EC9D  F0B4         	call	_pad	;wreg free
 16634                           
 16635                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 16636  01756C  0EFB               	movlw	251
 16637  01756E  26E1               	addwf	fsr1l,f,c
 16638  017570  0EFF               	movlw	255
 16639  017572  22E2               	addwfc	fsr1h,f,c
 16640  017574  0012               	return		;funcret
 16641  017576                     __end_of_ctoa:
 16642                           	opt callstack 0
 16643                           
 16644 ;; *************** function _pad *****************
 16645 ;; Defined at:
 16646 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16647 ;; Parameters:    Size  Location     Type
 16648 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16649 ;;		 -> f(6), NULL(0), 
 16650 ;;  buf             2  [STACK] PTR unsigned char 
 16651 ;;		 -> dbuf(80), 
 16652 ;;  p               2  [STACK] int 
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;  w               2  [STACK] int 
 16655 ;;  i               2  [STACK] int 
 16656 ;; Return value:  Size  Location     Type
 16657 ;;                  2  [STACK] int 
 16658 ;; Registers used:
 16659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16660 ;; Tracked objects:
 16661 ;;		On entry : 0/1
 16662 ;;		On exit  : 0/0
 16663 ;;		Unchanged: 0/0
 16664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16669 ;;Total ram usage:        0 bytes
 16670 ;; Hardware stack levels used:    1
 16671 ;; Hardware stack levels required when called:   10
 16672 ;; This function calls:
 16673 ;;		_fputc
 16674 ;;		_fputs
 16675 ;;		_strlen
 16676 ;; This function is called by:
 16677 ;;		_ctoa
 16678 ;;		_dtoa
 16679 ;;		_efgtoa
 16680 ;;		_xtoa
 16681 ;; This function uses a reentrant model
 16682 ;;
 16683                           
 16684                           	psect	text61
 16685  01693A                     __ptext61:
 16686                           	opt callstack 0
 16687  01693A                     _pad:
 16688                           	opt callstack 0
 16689                           
 16690                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16691  01693A  52E6               	movf	postinc1,f,c
 16692  01693C  52E6               	movf	postinc1,f,c
 16693  01693E  52E6               	movf	postinc1,f,c
 16694  016940  52E6               	movf	postinc1,f,c
 16695                           
 16696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 16697                           
 16698                           ;incstack = 0
 16699  016942  A01F               	btfss	_flags^0,0,c
 16700  016944  D010               	goto	l9260
 16701                           
 16702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 16703                           ;stkvar	_fp @ sp[(-4)+-2]
 16704  016946  0EFA               	movlw	-6
 16705  016948  006F FF8F FFE6     	movff	plusw1,postinc1
 16706  01694E  006F FF8F FFE6     	movff	plusw1,postinc1
 16707                           
 16708                           ;stkvar	_buf @ sp[(-6)+-4]
 16709  016954  0EF6               	movlw	-10
 16710  016956  006F FF8F FFE6     	movff	plusw1,postinc1
 16711  01695C  006F FF8F FFE6     	movff	plusw1,postinc1
 16712  016962  EC99  F0B9         	call	_fputs	;wreg free
 16713  016966                     l9260:
 16714                           
 16715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 16716                           ;stkvar	_p @ sp[(-4)+-6]
 16717  016966  0EF7               	movlw	-9
 16718  016968  BEE3               	btfsc	plusw1,7,c
 16719  01696A  D011               	goto	l9264
 16720                           
 16721                           ;stkvar	_p @ sp[(-4)+-6]
 16722                           ;stkvar	_w @ sp[(-4)+0]
 16723  01696C  0EF6               	movlw	-10
 16724  01696E  006F FF8C  F032    	movff	plusw1,btemp
 16725  016974  0EFC               	movlw	-4
 16726  016976  0060  F0CB  FFE3   	movff	btemp,plusw1
 16727  01697C  0EF7               	movlw	-9
 16728  01697E  006F FF8C  F032    	movff	plusw1,btemp
 16729  016984  0EFD               	movlw	-3
 16730  016986  0060  F0CB  FFE3   	movff	btemp,plusw1
 16731  01698C  D004               	goto	l1813
 16732  01698E                     l9264:
 16733                           
 16734                           ;stkvar	_w @ sp[(-4)+0]
 16735  01698E  0EFC               	movlw	-4
 16736  016990  6AE3               	clrf	plusw1,c
 16737  016992  0EFD               	movlw	-3
 16738  016994  6AE3               	clrf	plusw1,c
 16739  016996                     l1813:
 16740                           
 16741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 16742                           ;stkvar	_i @ sp[(-4)+2]
 16743  016996  0EFE               	movlw	-2
 16744  016998  6AE3               	clrf	plusw1,c
 16745  01699A  0EFF               	movlw	-1
 16746  01699C  6AE3               	clrf	plusw1,c
 16747                           
 16748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 16749  01699E  D01E               	goto	l9270
 16750  0169A0                     l9266:
 16751                           
 16752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 16753                           ;stkvar	_fp @ sp[(-4)+-2]
 16754  0169A0  0EFA               	movlw	-6
 16755  0169A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16756  0169A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16757  0169AE  0E20               	movlw	32
 16758  0169B0  6EE6               	movwf	postinc1,c
 16759  0169B2  0E00               	movlw	0
 16760  0169B4  6EE6               	movwf	postinc1,c
 16761  0169B6  EC7F  F0B3         	call	_fputc	;wreg free
 16762                           
 16763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 16764                           ;stkvar	_i @ sp[(-4)+2]
 16765  0169BA  0EFE               	movlw	-2
 16766  0169BC  50E3               	movf	plusw1,w,c
 16767  0169BE  0F01               	addlw	1
 16768  0169C0  6E32               	movwf	btemp^0,c
 16769  0169C2  0EFE               	movlw	-2
 16770  0169C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 16771  0169CA  6A32               	clrf	btemp^0,c
 16772  0169CC  0EFF               	movlw	-1
 16773  0169CE  50E3               	movf	plusw1,w,c
 16774  0169D0  2032               	addwfc	btemp^0,w,c
 16775  0169D2  6E32               	movwf	btemp^0,c
 16776  0169D4  0EFF               	movlw	-1
 16777  0169D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 16778  0169DC                     l9270:
 16779                           
 16780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 16781                           ;stkvar	_w @ sp[(-4)+0]
 16782                           ;stkvar	_i @ sp[(-4)+2]
 16783  0169DC  50E1               	movf	fsr1l,w,c
 16784  0169DE  0FFE               	addlw	-2
 16785  0169E0  6ED9               	movwf	fsr2l,c
 16786  0169E2  50E2               	movf	fsr1h,w,c
 16787  0169E4  6EDA               	movwf	fsr2h,c
 16788  0169E6  0EFF               	movlw	255
 16789  0169E8  22DA               	addwfc	fsr2h,f,c
 16790  0169EA  0EFC               	movlw	-4
 16791  0169EC  50E3               	movf	plusw1,w,c
 16792  0169EE  5CDE               	subwf	postinc2,w,c
 16793  0169F0  50DE               	movf	postinc2,w,c
 16794  0169F2  0A80               	xorlw	128
 16795  0169F4  6E32               	movwf	btemp^0,c
 16796  0169F6  0EFD               	movlw	-3
 16797  0169F8  50E3               	movf	plusw1,w,c
 16798  0169FA  0A80               	xorlw	128
 16799  0169FC  5832               	subwfb	btemp^0,w,c
 16800  0169FE  A0D8               	btfss	status,0,c
 16801  016A00  D7CF               	goto	l9266
 16802                           
 16803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 16804  016A02  B01F               	btfsc	_flags^0,0,c
 16805  016A04  D010               	goto	l9274
 16806                           
 16807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 16808                           ;stkvar	_fp @ sp[(-4)+-2]
 16809  016A06  0EFA               	movlw	-6
 16810  016A08  006F FF8F FFE6     	movff	plusw1,postinc1
 16811  016A0E  006F FF8F FFE6     	movff	plusw1,postinc1
 16812                           
 16813                           ;stkvar	_buf @ sp[(-6)+-4]
 16814  016A14  0EF6               	movlw	-10
 16815  016A16  006F FF8F FFE6     	movff	plusw1,postinc1
 16816  016A1C  006F FF8F FFE6     	movff	plusw1,postinc1
 16817  016A22  EC99  F0B9         	call	_fputs	;wreg free
 16818  016A26                     l9274:
 16819                           
 16820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 16821                           ;stkvar	_w @ sp[(-4)+0]
 16822                           ;stkvar	_buf @ sp[(-4)+-4]
 16823  016A26  0EF8               	movlw	-8
 16824  016A28  006F FF8F FFE6     	movff	plusw1,postinc1
 16825  016A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 16826  016A34  EC48  F0B9         	call	_strlen	;wreg free
 16827  016A38  0EFC               	movlw	-4
 16828  016A3A  50E3               	movf	plusw1,w,c
 16829  016A3C  2632               	addwf	btemp^0,f,c
 16830  016A3E  0EFD               	movlw	-3
 16831  016A40  50E3               	movf	plusw1,w,c
 16832  016A42  2233               	addwfc	(btemp+1)^0,f,c
 16833                           
 16834                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 16835  016A44  0EF6               	movlw	246
 16836  016A46  26E1               	addwf	fsr1l,f,c
 16837  016A48  0EFF               	movlw	255
 16838  016A4A  22E2               	addwfc	fsr1h,f,c
 16839  016A4C  0012               	return		;funcret
 16840  016A4E                     __end_of_pad:
 16841                           	opt callstack 0
 16842                           
 16843 ;; *************** function _strlen *****************
 16844 ;; Defined at:
 16845 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 16846 ;; Parameters:    Size  Location     Type
 16847 ;;  s               2  [STACK] PTR const unsigned char 
 16848 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 16849 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 16850 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;  a               2  [STACK] PTR const unsigned char 
 16853 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 16854 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 16855 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  2  [STACK] unsigned int 
 16858 ;; Registers used:
 16859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/0
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16869 ;;Total ram usage:        0 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; Hardware stack levels required when called:    6
 16872 ;; This function calls:
 16873 ;;		Nothing
 16874 ;; This function is called by:
 16875 ;;		_eaDogM_WriteString
 16876 ;;		_pad
 16877 ;;		_stoa
 16878 ;; This function uses a reentrant model
 16879 ;;
 16880                           
 16881                           	psect	text62
 16882  017290                     __ptext62:
 16883                           	opt callstack 0
 16884  017290                     _strlen:
 16885                           	opt callstack 0
 16886                           
 16887                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16888  017290  52E6               	movf	postinc1,f,c
 16889  017292  52E6               	movf	postinc1,f,c
 16890                           
 16891                           ;stkvar	_s @ sp[(-2)+-2]
 16892                           
 16893                           ;incstack = 0
 16894  017294  0EFC               	movlw	-4
 16895  017296  006F FF8C  F03C    	movff	plusw1,btemp+10
 16896  01729C  0EFD               	movlw	-3
 16897  01729E  006F FF8C  F03D    	movff	plusw1,btemp+11
 16898                           
 16899                           ;stkvar	_a @ sp[(-2)+0]
 16900  0172A4  0EFF               	movlw	-1
 16901  0172A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16902  0172AC  0EFE               	movlw	-2
 16903  0172AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16904  0172B4  D011               	goto	l6122
 16905  0172B6                     l6120:
 16906                           
 16907                           ;stkvar	_s @ sp[(-2)+-2]
 16908  0172B6  0EFC               	movlw	-4
 16909  0172B8  50E3               	movf	plusw1,w,c
 16910  0172BA  0F01               	addlw	1
 16911  0172BC  6E32               	movwf	btemp^0,c
 16912  0172BE  0EFC               	movlw	-4
 16913  0172C0  0060  F0CB  FFE3   	movff	btemp,plusw1
 16914  0172C6  6A32               	clrf	btemp^0,c
 16915  0172C8  0EFD               	movlw	-3
 16916  0172CA  50E3               	movf	plusw1,w,c
 16917  0172CC  2032               	addwfc	btemp^0,w,c
 16918  0172CE  6E32               	movwf	btemp^0,c
 16919  0172D0  0EFD               	movlw	-3
 16920  0172D2  0060  F0CB  FFE3   	movff	btemp,plusw1
 16921  0172D8                     l6122:
 16922                           
 16923                           ;stkvar	_s @ sp[(-2)+-2]
 16924  0172D8  0EFC               	movlw	-4
 16925  0172DA  006F FF8F FFF6     	movff	plusw1,tblptrl
 16926  0172E0  0EFD               	movlw	-3
 16927  0172E2  006F FF8F FFF7     	movff	plusw1,tblptrh
 16928  0172E8  0E00               	movlw	low (__mediumconst shr (0+16))
 16929  0172EA  6EF8               	movwf	tblptru,c
 16930  0172EC  0E1F               	movlw	(high __ramtop+-1)
 16931  0172EE  64F7               	cpfsgt	tblptrh,c
 16932  0172F0  D003               	bra	u4477
 16933  0172F2  0008               	tblrd		*
 16934  0172F4  50F5               	movf	tablat,w,c
 16935  0172F6  D007               	bra	u4470
 16936  0172F8                     u4477:
 16937  0172F8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16938  0172FE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16939  017304  50EF               	movf	indf0,w,c
 16940  017306                     u4470:
 16941  017306  0900               	iorlw	0
 16942  017308  A4D8               	btfss	status,2,c
 16943  01730A  D7D5               	goto	l6120
 16944                           
 16945                           ;stkvar	_a @ sp[(-2)+0]
 16946                           ;stkvar	_s @ sp[(-2)+-2]
 16947  01730C  0EFC               	movlw	-4
 16948  01730E  006F FF8C  F032    	movff	plusw1,btemp
 16949  017314  0EFD               	movlw	-3
 16950  017316  006F FF8C  F033    	movff	plusw1,btemp+1
 16951  01731C  0EFE               	movlw	-2
 16952  01731E  50E3               	movf	plusw1,w,c
 16953  017320  5E32               	subwf	btemp^0,f,c
 16954  017322  0EFF               	movlw	-1
 16955  017324  50E3               	movf	plusw1,w,c
 16956  017326  5A33               	subwfb	(btemp+1)^0,f,c
 16957                           
 16958                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16959  017328  52E5               	movf	postdec1,f,c
 16960  01732A  52E5               	movf	postdec1,f,c
 16961  01732C  52E5               	movf	postdec1,f,c
 16962  01732E  52E5               	movf	postdec1,f,c
 16963  017330  0012               	return		;funcret
 16964  017332                     __end_of_strlen:
 16965                           	opt callstack 0
 16966                           
 16967 ;; *************** function _fputs *****************
 16968 ;; Defined at:
 16969 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;  s               2  [STACK] PTR const unsigned char 
 16972 ;;		 -> dbuf(80), 
 16973 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16974 ;;		 -> f(6), NULL(0), 
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;  i               2  [STACK] int 
 16977 ;;  c               1  [STACK] unsigned char 
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  2  [STACK] int 
 16980 ;; Registers used:
 16981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/1
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16991 ;;Total ram usage:        0 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; Hardware stack levels required when called:    9
 16994 ;; This function calls:
 16995 ;;		_fputc
 16996 ;; This function is called by:
 16997 ;;		_pad
 16998 ;; This function uses a reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text63
 17002  017332                     __ptext63:
 17003                           	opt callstack 0
 17004  017332                     _fputs:
 17005                           	opt callstack 0
 17006                           
 17007                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17008  017332  52E6               	movf	postinc1,f,c
 17009  017334  52E6               	movf	postinc1,f,c
 17010  017336  52E6               	movf	postinc1,f,c
 17011                           
 17012                           ;stkvar	_i @ sp[(-3)+0]
 17013                           
 17014                           ;incstack = 0
 17015  017338  0EFD               	movlw	-3
 17016  01733A  6AE3               	clrf	plusw1,c
 17017  01733C  0EFE               	movlw	-2
 17018  01733E  6AE3               	clrf	plusw1,c
 17019  017340  D01F               	goto	l9254
 17020  017342                     l9250:
 17021                           
 17022                           ;stkvar	_fp @ sp[(-3)+-4]
 17023  017342  0EF9               	movlw	-7
 17024  017344  006F FF8F FFE6     	movff	plusw1,postinc1
 17025  01734A  006F FF8F FFE6     	movff	plusw1,postinc1
 17026                           
 17027                           ;stkvar	_c @ sp[(-5)+2]
 17028  017350  0EFD               	movlw	-3
 17029  017352  50E3               	movf	plusw1,w,c
 17030  017354  6EE6               	movwf	postinc1,c
 17031  017356  0E00               	movlw	0
 17032  017358  6EE6               	movwf	postinc1,c
 17033  01735A  EC7F  F0B3         	call	_fputc	;wreg free
 17034                           
 17035                           ;stkvar	_i @ sp[(-3)+0]
 17036  01735E  0EFD               	movlw	-3
 17037  017360  50E3               	movf	plusw1,w,c
 17038  017362  0F01               	addlw	1
 17039  017364  6E32               	movwf	btemp^0,c
 17040  017366  0EFD               	movlw	-3
 17041  017368  0060  F0CB  FFE3   	movff	btemp,plusw1
 17042  01736E  6A32               	clrf	btemp^0,c
 17043  017370  0EFE               	movlw	-2
 17044  017372  50E3               	movf	plusw1,w,c
 17045  017374  2032               	addwfc	btemp^0,w,c
 17046  017376  6E32               	movwf	btemp^0,c
 17047  017378  0EFE               	movlw	-2
 17048  01737A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17049  017380                     l9254:
 17050                           
 17051                           ;stkvar	_i @ sp[(-3)+0]
 17052  017380  0EFD               	movlw	-3
 17053  017382  006F FF8C  F03C    	movff	plusw1,btemp+10
 17054  017388  0EFE               	movlw	-2
 17055  01738A  006F FF8C  F03D    	movff	plusw1,btemp+11
 17056                           
 17057                           ;stkvar	_s @ sp[(-3)+-2]
 17058  017390  0EFB               	movlw	-5
 17059  017392  006F FF8C  F03A    	movff	plusw1,btemp+8
 17060  017398  0EFC               	movlw	-4
 17061  01739A  006F FF8C  F03B    	movff	plusw1,btemp+9
 17062  0173A0  503C               	movf	(btemp+10)^0,w,c
 17063  0173A2  243A               	addwf	(btemp+8)^0,w,c
 17064  0173A4  6ED9               	movwf	fsr2l,c
 17065  0173A6  503D               	movf	(btemp+11)^0,w,c
 17066  0173A8  203B               	addwfc	(btemp+9)^0,w,c
 17067  0173AA  6EDA               	movwf	fsr2h,c
 17068  0173AC  50DF               	movf	indf2,w,c
 17069  0173AE  6E3D               	movwf	(btemp+11)^0,c
 17070                           
 17071                           ;stkvar	_c @ sp[(-3)+2]
 17072  0173B0  0EFF               	movlw	-1
 17073  0173B2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17074  0173B8  0EFF               	movlw	-1
 17075  0173BA  50E3               	movf	plusw1,w,c
 17076  0173BC  A4D8               	btfss	status,2,c
 17077  0173BE  D7C1               	goto	l9250
 17078                           
 17079                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17080  0173C0  0EF9               	movlw	249
 17081  0173C2  26E1               	addwf	fsr1l,f,c
 17082  0173C4  0EFF               	movlw	255
 17083  0173C6  22E2               	addwfc	fsr1h,f,c
 17084  0173C8  0012               	return		;funcret
 17085  0173CA                     __end_of_fputs:
 17086                           	opt callstack 0
 17087                           
 17088 ;; *************** function _fputc *****************
 17089 ;; Defined at:
 17090 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  c               2  [STACK] int 
 17093 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17094 ;;		 -> f(6), NULL(0), 
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;		None
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  2  [STACK] int 
 17099 ;; Registers used:
 17100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/5
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17110 ;;Total ram usage:        0 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    8
 17113 ;; This function calls:
 17114 ;;		_putch
 17115 ;; This function is called by:
 17116 ;;		_pad
 17117 ;;		_stoa
 17118 ;;		_vfpfcnvrt
 17119 ;;		_fputs
 17120 ;; This function uses a reentrant model
 17121 ;;
 17122                           
 17123                           	psect	text64
 17124  0166FE                     __ptext64:
 17125                           	opt callstack 0
 17126  0166FE                     _fputc:
 17127                           	opt callstack 13
 17128                           
 17129                           ;stkvar	_fp @ sp[(0)+-4]
 17130                           
 17131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17132                           ;incstack = 0
 17133  0166FE  0EFC               	movlw	-4
 17134  016700  006F FF8C  F032    	movff	plusw1,btemp
 17135  016706  0EFD               	movlw	-3
 17136  016708  50E3               	movf	plusw1,w,c
 17137  01670A  1032               	iorwf	btemp^0,w,c
 17138  01670C  B4D8               	btfsc	status,2,c
 17139  01670E  D009               	goto	u8810
 17140                           
 17141                           ;stkvar	_fp @ sp[(0)+-4]
 17142  016710  0EFC               	movlw	-4
 17143  016712  006F FF8C  F032    	movff	plusw1,btemp
 17144  016718  0EFD               	movlw	-3
 17145  01671A  50E3               	movf	plusw1,w,c
 17146  01671C  1032               	iorwf	btemp^0,w,c
 17147  01671E  A4D8               	btfss	status,2,c
 17148  016720  D006               	goto	l9238
 17149  016722                     u8810:
 17150                           
 17151                           ;stkvar	_c @ sp[(0)+-2]
 17152  016722  0EFE               	movlw	-2
 17153  016724  50E3               	movf	plusw1,w,c
 17154  016726  6EE6               	movwf	postinc1,c
 17155  016728  EC6E  F0C3         	call	_putch	;wreg free
 17156  01672C  D075               	goto	l2831
 17157  01672E                     l9238:
 17158                           
 17159                           ;stkvar	_fp @ sp[(0)+-4]
 17160  01672E  0EFC               	movlw	-4
 17161  016730  006F FF8C  F03C    	movff	plusw1,btemp+10
 17162  016736  0EFD               	movlw	-3
 17163  016738  006F FF8C  F03D    	movff	plusw1,btemp+11
 17164  01673E  0E04               	movlw	4
 17165  016740  243C               	addwf	(btemp+10)^0,w,c
 17166  016742  6ED9               	movwf	fsr2l,c
 17167  016744  0E00               	movlw	0
 17168  016746  203D               	addwfc	(btemp+11)^0,w,c
 17169  016748  6EDA               	movwf	fsr2h,c
 17170  01674A  50DE               	movf	postinc2,w,c
 17171  01674C  10DE               	iorwf	postinc2,w,c
 17172  01674E  B4D8               	btfsc	status,2,c
 17173  016750  D026               	goto	u8830
 17174                           
 17175                           ;stkvar	_fp @ sp[(0)+-4]
 17176  016752  0EFC               	movlw	-4
 17177  016754  006F FF8C  F03C    	movff	plusw1,btemp+10
 17178  01675A  0EFD               	movlw	-3
 17179  01675C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17180  016762  0E04               	movlw	4
 17181  016764  243C               	addwf	(btemp+10)^0,w,c
 17182  016766  6ED9               	movwf	fsr2l,c
 17183  016768  0E00               	movlw	0
 17184  01676A  203D               	addwfc	(btemp+11)^0,w,c
 17185  01676C  6EDA               	movwf	fsr2h,c
 17186                           
 17187                           ;stkvar	_fp @ sp[(0)+-4]
 17188  01676E  0EFC               	movlw	-4
 17189  016770  006F FF8C  F03C    	movff	plusw1,btemp+10
 17190  016776  0EFD               	movlw	-3
 17191  016778  006F FF8C  F03D    	movff	plusw1,btemp+11
 17192  01677E  0E02               	movlw	2
 17193  016780  243C               	addwf	(btemp+10)^0,w,c
 17194  016782  6EE9               	movwf	fsr0l,c
 17195  016784  0E00               	movlw	0
 17196  016786  203D               	addwfc	(btemp+11)^0,w,c
 17197  016788  6EEA               	movwf	fsr0h,c
 17198  01678A  50DE               	movf	postinc2,w,c
 17199  01678C  5CEE               	subwf	postinc0,w,c
 17200  01678E  50EE               	movf	postinc0,w,c
 17201  016790  0A80               	xorlw	128
 17202  016792  6E32               	movwf	btemp^0,c
 17203  016794  50DE               	movf	postinc2,w,c
 17204  016796  0A80               	xorlw	128
 17205  016798  5832               	subwfb	btemp^0,w,c
 17206  01679A  B0D8               	btfsc	status,0,c
 17207  01679C  D03D               	goto	l2831
 17208  01679E                     u8830:
 17209                           
 17210                           ;stkvar	_c @ sp[(0)+-2]
 17211                           ;stkvar	_fp @ sp[(0)+-4]
 17212  01679E  0EFC               	movlw	-4
 17213  0167A0  006F FF8C  F03C    	movff	plusw1,btemp+10
 17214  0167A6  0EFD               	movlw	-3
 17215  0167A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 17216  0167AE  0E02               	movlw	2
 17217  0167B0  243C               	addwf	(btemp+10)^0,w,c
 17218  0167B2  6ED9               	movwf	fsr2l,c
 17219  0167B4  0E00               	movlw	0
 17220  0167B6  203D               	addwfc	(btemp+11)^0,w,c
 17221  0167B8  6EDA               	movwf	fsr2h,c
 17222  0167BA  006F FF78  F03C    	movff	postinc2,btemp+10
 17223  0167C0  006F FF74  F03D    	movff	postdec2,btemp+11
 17224                           
 17225                           ;stkvar	_fp @ sp[(0)+-4]
 17226  0167C6  0EFC               	movlw	-4
 17227  0167C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 17228  0167CE  0EFD               	movlw	-3
 17229  0167D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17230  0167D6  006F FF78  F03A    	movff	postinc2,btemp+8
 17231  0167DC  006F FF74  F03B    	movff	postdec2,btemp+9
 17232  0167E2  503C               	movf	(btemp+10)^0,w,c
 17233  0167E4  243A               	addwf	(btemp+8)^0,w,c
 17234  0167E6  6ED9               	movwf	fsr2l,c
 17235  0167E8  503D               	movf	(btemp+11)^0,w,c
 17236  0167EA  203B               	addwfc	(btemp+9)^0,w,c
 17237  0167EC  6EDA               	movwf	fsr2h,c
 17238  0167EE  0EFE               	movlw	-2
 17239  0167F0  006F FF8F FFDF     	movff	plusw1,indf2
 17240                           
 17241                           ;stkvar	_fp @ sp[(0)+-4]
 17242  0167F6  0EFC               	movlw	-4
 17243  0167F8  006F FF8C  F03C    	movff	plusw1,btemp+10
 17244  0167FE  0EFD               	movlw	-3
 17245  016800  006F FF8C  F03D    	movff	plusw1,btemp+11
 17246  016806  0E02               	movlw	2
 17247  016808  243C               	addwf	(btemp+10)^0,w,c
 17248  01680A  6ED9               	movwf	fsr2l,c
 17249  01680C  0E00               	movlw	0
 17250  01680E  203D               	addwfc	(btemp+11)^0,w,c
 17251  016810  6EDA               	movwf	fsr2h,c
 17252  016812  2ADE               	incf	postinc2,f,c
 17253  016814  0E00               	movlw	0
 17254  016816  22DD               	addwfc	postdec2,f,c
 17255  016818                     l2831:
 17256                           
 17257                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17258  016818  52E5               	movf	postdec1,f,c
 17259  01681A  52E5               	movf	postdec1,f,c
 17260  01681C  52E5               	movf	postdec1,f,c
 17261  01681E  52E5               	movf	postdec1,f,c
 17262  016820  0012               	return		;funcret
 17263  016822                     __end_of_fputc:
 17264                           	opt callstack 0
 17265                           
 17266 ;; *************** function _putch *****************
 17267 ;; Defined at:
 17268 ;;		line 155 in file "eadog.c"
 17269 ;; Parameters:    Size  Location     Type
 17270 ;;  c               1  [STACK] unsigned char 
 17271 ;; Auto vars:     Size  Location     Type
 17272 ;;		None
 17273 ;; Return value:  Size  Location     Type
 17274 ;;                  1  [STACK] void 
 17275 ;; Registers used:
 17276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/5
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17286 ;;Total ram usage:        0 bytes
 17287 ;; Hardware stack levels used:    1
 17288 ;; Hardware stack levels required when called:    7
 17289 ;; This function calls:
 17290 ;;		_ringBufS_put_dma
 17291 ;; This function is called by:
 17292 ;;		_fputc
 17293 ;; This function uses a reentrant model
 17294 ;;
 17295                           
 17296                           	psect	text65
 17297  0186DC                     __ptext65:
 17298                           	opt callstack 0
 17299  0186DC                     _putch:
 17300                           	opt callstack 13
 17301                           
 17302                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 17303                           ;stkvar	_c @ sp[(0)+-1]
 17304                           
 17305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17306                           ;incstack = 0
 17307  0186DC  0EFF               	movlw	-1
 17308  0186DE  50E3               	movf	plusw1,w,c
 17309  0186E0  6EE6               	movwf	postinc1,c
 17310  0186E2  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 17311  0186E8  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 17312  0186EE  EC4C  F0B8         	call	_ringBufS_put_dma	;wreg free
 17313                           
 17314                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 17315  0186F2  52E5               	movf	postdec1,f,c
 17316  0186F4  0012               	return		;funcret
 17317  0186F6                     __end_of_putch:
 17318                           	opt callstack 0
 17319                           
 17320 ;; *************** function _ringBufS_put_dma *****************
 17321 ;; Defined at:
 17322 ;;		line 67 in file "ringbufs.c"
 17323 ;; Parameters:    Size  Location     Type
 17324 ;;  _this           2  [STACK] PTR struct ringBufS_t
 17325 ;;		 -> ring_buf1(67), 
 17326 ;;  c               1  [STACK] const unsigned char 
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;		None
 17329 ;; Return value:  Size  Location     Type
 17330 ;;                  1  [STACK] void 
 17331 ;; Registers used:
 17332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17333 ;; Tracked objects:
 17334 ;;		On entry : 0/5
 17335 ;;		On exit  : 0/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17342 ;;Total ram usage:        0 bytes
 17343 ;; Hardware stack levels used:    1
 17344 ;; Hardware stack levels required when called:    6
 17345 ;; This function calls:
 17346 ;;		Nothing
 17347 ;; This function is called by:
 17348 ;;		_putch
 17349 ;; This function uses a reentrant model
 17350 ;;
 17351                           
 17352                           	psect	text66
 17353  017098                     __ptext66:
 17354                           	opt callstack 0
 17355  017098                     _ringBufS_put_dma:
 17356                           	opt callstack 13
 17357                           
 17358                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 17359                           ;stkvar	__this @ sp[(0)+-2]
 17360                           
 17361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17362                           ;incstack = 0
 17363  017098  0EFE               	movlw	-2
 17364  01709A  006F FF8C  F03C    	movff	plusw1,btemp+10
 17365  0170A0  0EFF               	movlw	-1
 17366  0170A2  006F FF8C  F03D    	movff	plusw1,btemp+11
 17367  0170A8  0E42               	movlw	66
 17368  0170AA  243C               	addwf	(btemp+10)^0,w,c
 17369  0170AC  6ED9               	movwf	fsr2l,c
 17370  0170AE  0E00               	movlw	0
 17371  0170B0  203D               	addwfc	(btemp+11)^0,w,c
 17372  0170B2  6EDA               	movwf	fsr2h,c
 17373  0170B4  0E40               	movlw	64
 17374  0170B6  60DF               	cpfslt	indf2,c
 17375  0170B8  D040               	goto	l1472
 17376                           
 17377                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 17378                           ;stkvar	_c @ sp[(0)+-3]
 17379                           ;stkvar	__this @ sp[(0)+-2]
 17380  0170BA  0EFE               	movlw	-2
 17381  0170BC  006F FF8C  F03C    	movff	plusw1,btemp+10
 17382  0170C2  0EFF               	movlw	-1
 17383  0170C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 17384  0170CA  0E40               	movlw	64
 17385  0170CC  243C               	addwf	(btemp+10)^0,w,c
 17386  0170CE  6ED9               	movwf	fsr2l,c
 17387  0170D0  0E00               	movlw	0
 17388  0170D2  203D               	addwfc	(btemp+11)^0,w,c
 17389  0170D4  6EDA               	movwf	fsr2h,c
 17390  0170D6  50DF               	movf	indf2,w,c
 17391  0170D8  6E3D               	movwf	(btemp+11)^0,c
 17392                           
 17393                           ;stkvar	__this @ sp[(0)+-2]
 17394  0170DA  0EFE               	movlw	-2
 17395  0170DC  006F FF8C  F03A    	movff	plusw1,btemp+8
 17396  0170E2  0EFF               	movlw	-1
 17397  0170E4  006F FF8C  F03B    	movff	plusw1,btemp+9
 17398  0170EA  503D               	movf	(btemp+11)^0,w,c
 17399  0170EC  243A               	addwf	(btemp+8)^0,w,c
 17400  0170EE  6ED9               	movwf	fsr2l,c
 17401  0170F0  0E00               	movlw	0
 17402  0170F2  203B               	addwfc	(btemp+9)^0,w,c
 17403  0170F4  6EDA               	movwf	fsr2h,c
 17404  0170F6  0EFD               	movlw	-3
 17405  0170F8  006F FF8F FFDF     	movff	plusw1,indf2
 17406                           
 17407                           ;ringbufs.c: 71:   ++_this->head;
 17408                           ;stkvar	__this @ sp[(0)+-2]
 17409  0170FE  0EFE               	movlw	-2
 17410  017100  006F FF8C  F03C    	movff	plusw1,btemp+10
 17411  017106  0EFF               	movlw	-1
 17412  017108  006F FF8C  F03D    	movff	plusw1,btemp+11
 17413  01710E  0E40               	movlw	64
 17414  017110  243C               	addwf	(btemp+10)^0,w,c
 17415  017112  6ED9               	movwf	fsr2l,c
 17416  017114  0E00               	movlw	0
 17417  017116  203D               	addwfc	(btemp+11)^0,w,c
 17418  017118  6EDA               	movwf	fsr2h,c
 17419  01711A  2ADF               	incf	indf2,f,c
 17420                           
 17421                           ;ringbufs.c: 72:   ++_this->count;
 17422                           ;stkvar	__this @ sp[(0)+-2]
 17423  01711C  0EFE               	movlw	-2
 17424  01711E  006F FF8C  F03C    	movff	plusw1,btemp+10
 17425  017124  0EFF               	movlw	-1
 17426  017126  006F FF8C  F03D    	movff	plusw1,btemp+11
 17427  01712C  0E42               	movlw	66
 17428  01712E  243C               	addwf	(btemp+10)^0,w,c
 17429  017130  6ED9               	movwf	fsr2l,c
 17430  017132  0E00               	movlw	0
 17431  017134  203D               	addwfc	(btemp+11)^0,w,c
 17432  017136  6EDA               	movwf	fsr2h,c
 17433  017138  2ADF               	incf	indf2,f,c
 17434  01713A                     l1472:
 17435                           
 17436                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 17437  01713A  52E5               	movf	postdec1,f,c
 17438  01713C  52E5               	movf	postdec1,f,c
 17439  01713E  52E5               	movf	postdec1,f,c
 17440  017140  0012               	return		;funcret
 17441  017142                     __end_of_ringBufS_put_dma:
 17442                           	opt callstack 0
 17443                           
 17444 ;; *************** function _atoi *****************
 17445 ;; Defined at:
 17446 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 17447 ;; Parameters:    Size  Location     Type
 17448 ;;  s               2  [STACK] PTR const unsigned char 
 17449 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
 17450 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 17451 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
 17452 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
 17453 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
 17454 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
 17455 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
 17456 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 17457 ;; Auto vars:     Size  Location     Type
 17458 ;;  n               2  [STACK] int 
 17459 ;;  neg             2  [STACK] int 
 17460 ;; Return value:  Size  Location     Type
 17461 ;;                  2  [STACK] int 
 17462 ;; Registers used:
 17463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 17464 ;; Tracked objects:
 17465 ;;		On entry : 0/5
 17466 ;;		On exit  : 0/0
 17467 ;;		Unchanged: 0/0
 17468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17473 ;;Total ram usage:        0 bytes
 17474 ;; Hardware stack levels used:    1
 17475 ;; Hardware stack levels required when called:    7
 17476 ;; This function calls:
 17477 ;;		_isdigit
 17478 ;;		_isspace
 17479 ;; This function is called by:
 17480 ;;		_vfpfcnvrt
 17481 ;; This function uses a reentrant model
 17482 ;;
 17483                           
 17484                           	psect	text67
 17485  01501C                     __ptext67:
 17486                           	opt callstack 0
 17487  01501C                     _atoi:
 17488                           	opt callstack 0
 17489                           
 17490                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17491  01501C  0E09               	movlw	9
 17492  01501E  26E1               	addwf	fsr1l,f,c
 17493  015020  0E00               	movlw	0
 17494  015022  22E2               	addwfc	fsr1h,f,c
 17495                           
 17496                           ;stkvar	_n @ sp[(-9)+5]
 17497                           
 17498                           ;incstack = 0
 17499  015024  0EFC               	movlw	-4
 17500  015026  6AE3               	clrf	plusw1,c
 17501  015028  0EFD               	movlw	-3
 17502  01502A  6AE3               	clrf	plusw1,c
 17503                           
 17504                           ;stkvar	_neg @ sp[(-9)+7]
 17505  01502C  0EFE               	movlw	-2
 17506  01502E  6AE3               	clrf	plusw1,c
 17507  015030  0EFF               	movlw	-1
 17508  015032  6AE3               	clrf	plusw1,c
 17509  015034  D011               	goto	l7594
 17510  015036                     l7592:
 17511                           
 17512                           ;stkvar	_s @ sp[(-9)+-2]
 17513  015036  0EF5               	movlw	-11
 17514  015038  50E3               	movf	plusw1,w,c
 17515  01503A  0F01               	addlw	1
 17516  01503C  6E32               	movwf	btemp^0,c
 17517  01503E  0EF5               	movlw	-11
 17518  015040  0060  F0CB  FFE3   	movff	btemp,plusw1
 17519  015046  6A32               	clrf	btemp^0,c
 17520  015048  0EF6               	movlw	-10
 17521  01504A  50E3               	movf	plusw1,w,c
 17522  01504C  2032               	addwfc	btemp^0,w,c
 17523  01504E  6E32               	movwf	btemp^0,c
 17524  015050  0EF6               	movlw	-10
 17525  015052  0060  F0CB  FFE3   	movff	btemp,plusw1
 17526  015058                     l7594:
 17527                           
 17528                           ;stkvar	_atoi$4921 @ sp[(-9)+4]
 17529  015058  0EFB               	movlw	-5
 17530  01505A  6AE3               	clrf	plusw1,c
 17531  01505C  2AE3               	incf	plusw1,f,c
 17532                           
 17533                           ;stkvar	_s @ sp[(-9)+-2]
 17534  01505E  50E1               	movf	fsr1l,w,c
 17535  015060  0FF5               	addlw	-11
 17536  015062  6ED9               	movwf	fsr2l,c
 17537  015064  50E2               	movf	fsr1h,w,c
 17538  015066  6EDA               	movwf	fsr2h,c
 17539  015068  0EFF               	movlw	255
 17540  01506A  22DA               	addwfc	fsr2h,f,c
 17541  01506C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17542  015072  006F FF77 FFF7     	movff	postdec2,tblptrh
 17543  015078                     	if	0	;tblptru may be non-zero
 17544  015078                     	endif
 17545  015078                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17546  015078  0E00               	movlw	low (__mediumconst shr (0+16))
 17547  01507A  6EF8               	movwf	tblptru,c
 17548  01507C                     	endif
 17549  01507C  0008               	tblrd		*
 17550  01507E  50F5               	movf	tablat,w,c
 17551  015080  0A20               	xorlw	32
 17552  015082  B4D8               	btfsc	status,2,c
 17553  015084  D023               	goto	l7602
 17554  015086  0EF7               	movlw	247
 17555  015088  6E3C               	movwf	(btemp+10)^0,c
 17556  01508A  0EFF               	movlw	255
 17557  01508C  6E3D               	movwf	(btemp+11)^0,c
 17558                           
 17559                           ;stkvar	_s @ sp[(-9)+-2]
 17560  01508E  50E1               	movf	fsr1l,w,c
 17561  015090  0FF5               	addlw	-11
 17562  015092  6ED9               	movwf	fsr2l,c
 17563  015094  50E2               	movf	fsr1h,w,c
 17564  015096  6EDA               	movwf	fsr2h,c
 17565  015098  0EFF               	movlw	255
 17566  01509A  22DA               	addwfc	fsr2h,f,c
 17567  01509C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17568  0150A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 17569  0150A8                     	if	0	;tblptru may be non-zero
 17570  0150A8                     	endif
 17571  0150A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17572  0150A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17573  0150AA  6EF8               	movwf	tblptru,c
 17574  0150AC                     	endif
 17575  0150AC  0008               	tblrd		*
 17576  0150AE  50F5               	movf	tablat,w,c
 17577  0150B0  6E3A               	movwf	(btemp+8)^0,c
 17578  0150B2  6A3B               	clrf	(btemp+9)^0,c
 17579  0150B4  503C               	movf	(btemp+10)^0,w,c
 17580  0150B6  263A               	addwf	(btemp+8)^0,f,c
 17581  0150B8  503D               	movf	(btemp+11)^0,w,c
 17582  0150BA  223B               	addwfc	(btemp+9)^0,f,c
 17583  0150BC  503B               	movf	(btemp+9)^0,w,c
 17584  0150BE  E104               	bnz	u7330
 17585  0150C0  0E05               	movlw	5
 17586  0150C2  5C3A               	subwf	(btemp+8)^0,w,c
 17587  0150C4  A0D8               	btfss	status,0,c
 17588  0150C6  D002               	goto	l7602
 17589  0150C8                     u7330:
 17590                           
 17591                           ;stkvar	_atoi$4921 @ sp[(-9)+4]
 17592  0150C8  0EFB               	movlw	-5
 17593  0150CA  6AE3               	clrf	plusw1,c
 17594  0150CC                     l7602:
 17595                           
 17596                           ;stkvar	_atoi$4921 @ sp[(-9)+4]
 17597  0150CC  0EFB               	movlw	-5
 17598  0150CE  50E3               	movf	plusw1,w,c
 17599  0150D0  6E3C               	movwf	(btemp+10)^0,c
 17600  0150D2  6A3D               	clrf	(btemp+11)^0,c
 17601                           
 17602                           ;stkvar	_atoi$4920 @ sp[(-9)+2]
 17603  0150D4  0EF9               	movlw	-7
 17604  0150D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17605  0150DC  0EFA               	movlw	-6
 17606  0150DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17607                           
 17608                           ;stkvar	_atoi$4920 @ sp[(-9)+2]
 17609  0150E4  0EF9               	movlw	-7
 17610  0150E6  006F FF8C  F032    	movff	plusw1,btemp
 17611  0150EC  0EFA               	movlw	-6
 17612  0150EE  50E3               	movf	plusw1,w,c
 17613  0150F0  1032               	iorwf	btemp^0,w,c
 17614  0150F2  B4D8               	btfsc	status,2,c
 17615  0150F4  D01F               	goto	l7612
 17616  0150F6  D79F               	goto	l7592
 17617  0150F8                     l7608:
 17618  0150F8  0E01               	movlw	1
 17619  0150FA  6E3C               	movwf	(btemp+10)^0,c
 17620  0150FC  0E00               	movlw	0
 17621  0150FE  6E3D               	movwf	(btemp+11)^0,c
 17622                           
 17623                           ;stkvar	_neg @ sp[(-9)+7]
 17624  015100  0EFE               	movlw	-2
 17625  015102  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17626  015108  0EFF               	movlw	-1
 17627  01510A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17628  015110                     l7610:
 17629                           
 17630                           ;stkvar	_s @ sp[(-9)+-2]
 17631  015110  0EF5               	movlw	-11
 17632  015112  50E3               	movf	plusw1,w,c
 17633  015114  0F01               	addlw	1
 17634  015116  6E32               	movwf	btemp^0,c
 17635  015118  0EF5               	movlw	-11
 17636  01511A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17637  015120  6A32               	clrf	btemp^0,c
 17638  015122  0EF6               	movlw	-10
 17639  015124  50E3               	movf	plusw1,w,c
 17640  015126  2032               	addwfc	btemp^0,w,c
 17641  015128  6E32               	movwf	btemp^0,c
 17642  01512A  0EF6               	movlw	-10
 17643  01512C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17644  015132  D053               	goto	l7618
 17645  015134                     l7612:
 17646                           
 17647                           ;stkvar	_s @ sp[(-9)+-2]
 17648  015134  50E1               	movf	fsr1l,w,c
 17649  015136  0FF5               	addlw	-11
 17650  015138  6ED9               	movwf	fsr2l,c
 17651  01513A  50E2               	movf	fsr1h,w,c
 17652  01513C  6EDA               	movwf	fsr2h,c
 17653  01513E  0EFF               	movlw	255
 17654  015140  22DA               	addwfc	fsr2h,f,c
 17655  015142  006F FF7B FFF6     	movff	postinc2,tblptrl
 17656  015148  006F FF77 FFF7     	movff	postdec2,tblptrh
 17657  01514E                     	if	0	;tblptru may be non-zero
 17658  01514E                     	endif
 17659  01514E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17660  01514E  0E00               	movlw	low (__mediumconst shr (0+16))
 17661  015150  6EF8               	movwf	tblptru,c
 17662  015152                     	endif
 17663  015152  0008               	tblrd		*
 17664  015154  50F5               	movf	tablat,w,c
 17665  015156  6E3C               	movwf	(btemp+10)^0,c
 17666  015158  6A3D               	clrf	(btemp+11)^0,c
 17667                           
 17668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17669                           ; Switch size 1, requested type "simple"
 17670                           ; Number of cases is 1, Range of values is 0 to 0
 17671                           ; switch strategies available:
 17672                           ; Name         Instructions Cycles
 17673                           ; simple_byte            4     3 (average)
 17674                           ;	Chosen strategy is simple_byte
 17675  01515A  503D               	movf	(btemp+11)^0,w,c
 17676  01515C  0A00               	xorlw	0	; case 0
 17677  01515E  A4D8               	btfss	status,2,c
 17678  015160  D03C               	goto	l7618
 17679                           
 17680                           ; Switch size 1, requested type "simple"
 17681                           ; Number of cases is 2, Range of values is 43 to 45
 17682                           ; switch strategies available:
 17683                           ; Name         Instructions Cycles
 17684                           ; simple_byte            7     4 (average)
 17685                           ;	Chosen strategy is simple_byte
 17686  015162  503C               	movf	(btemp+10)^0,w,c
 17687  015164  0A2B               	xorlw	43	; case 43
 17688  015166  B4D8               	btfsc	status,2,c
 17689  015168  D7D3               	goto	l7610
 17690  01516A  0A06               	xorlw	6	; case 45
 17691  01516C  B4D8               	btfsc	status,2,c
 17692  01516E  D7C4               	goto	l7608
 17693  015170  D034               	goto	l7618
 17694  015172                     l7614:
 17695                           
 17696                           ;stkvar	_n @ sp[(-9)+5]
 17697  015172  0EFC               	movlw	-4
 17698  015174  006F FF8C  F03C    	movff	plusw1,btemp+10
 17699  01517A  0EFD               	movlw	-3
 17700  01517C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17701  015182  0E0A               	movlw	10
 17702  015184  023C               	mulwf	(btemp+10)^0,c
 17703  015186  006F FFCC  F03A    	movff	prodl,btemp+8
 17704  01518C  006F FFD0  F03B    	movff	prodh,btemp+9
 17705  015192  023D               	mulwf	(btemp+11)^0,c
 17706  015194  50F3               	movf	prodl,w,c
 17707  015196  263B               	addwf	(btemp+9)^0,f,c
 17708                           
 17709                           ;stkvar	_s @ sp[(-9)+-2]
 17710  015198  50E1               	movf	fsr1l,w,c
 17711  01519A  0FF5               	addlw	-11
 17712  01519C  6ED9               	movwf	fsr2l,c
 17713  01519E  50E2               	movf	fsr1h,w,c
 17714  0151A0  6EDA               	movwf	fsr2h,c
 17715  0151A2  0EFF               	movlw	255
 17716  0151A4  22DA               	addwfc	fsr2h,f,c
 17717  0151A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 17718  0151AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 17719  0151B2                     	if	0	;tblptru may be non-zero
 17720  0151B2                     	endif
 17721  0151B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17722  0151B2  0E00               	movlw	low (__mediumconst shr (0+16))
 17723  0151B4  6EF8               	movwf	tblptru,c
 17724  0151B6                     	endif
 17725  0151B6  0008               	tblrd		*
 17726  0151B8  50F5               	movf	tablat,w,c
 17727  0151BA  5E3A               	subwf	(btemp+8)^0,f,c
 17728  0151BC  0E00               	movlw	0
 17729  0151BE  5A3B               	subwfb	(btemp+9)^0,f,c
 17730  0151C0  0E30               	movlw	48
 17731  0151C2  263A               	addwf	(btemp+8)^0,f,c
 17732  0151C4  0E00               	movlw	0
 17733  0151C6  223B               	addwfc	(btemp+9)^0,f,c
 17734                           
 17735                           ;stkvar	_n @ sp[(-9)+5]
 17736  0151C8  0EFC               	movlw	-4
 17737  0151CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17738  0151D0  0EFD               	movlw	-3
 17739  0151D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17740  0151D8  D79B               	goto	l7610
 17741  0151DA                     l7618:
 17742  0151DA  0ED0               	movlw	208
 17743  0151DC  6E3C               	movwf	(btemp+10)^0,c
 17744  0151DE  0EFF               	movlw	255
 17745  0151E0  6E3D               	movwf	(btemp+11)^0,c
 17746                           
 17747                           ;stkvar	_s @ sp[(-9)+-2]
 17748  0151E2  50E1               	movf	fsr1l,w,c
 17749  0151E4  0FF5               	addlw	-11
 17750  0151E6  6ED9               	movwf	fsr2l,c
 17751  0151E8  50E2               	movf	fsr1h,w,c
 17752  0151EA  6EDA               	movwf	fsr2h,c
 17753  0151EC  0EFF               	movlw	255
 17754  0151EE  22DA               	addwfc	fsr2h,f,c
 17755  0151F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 17756  0151F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 17757  0151FC                     	if	0	;tblptru may be non-zero
 17758  0151FC                     	endif
 17759  0151FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17760  0151FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17761  0151FE  6EF8               	movwf	tblptru,c
 17762  015200                     	endif
 17763  015200  0008               	tblrd		*
 17764  015202  50F5               	movf	tablat,w,c
 17765  015204  6E3A               	movwf	(btemp+8)^0,c
 17766  015206  6A3B               	clrf	(btemp+9)^0,c
 17767  015208  503C               	movf	(btemp+10)^0,w,c
 17768  01520A  263A               	addwf	(btemp+8)^0,f,c
 17769  01520C  503D               	movf	(btemp+11)^0,w,c
 17770  01520E  223B               	addwfc	(btemp+9)^0,f,c
 17771  015210  503B               	movf	(btemp+9)^0,w,c
 17772  015212  E106               	bnz	u7350
 17773  015214  0E0A               	movlw	10
 17774  015216  5C3A               	subwf	(btemp+8)^0,w,c
 17775  015218  B0D8               	btfsc	status,0,c
 17776  01521A  D002               	goto	u7350
 17777  01521C  0E01               	movlw	1
 17778  01521E  D001               	goto	u7360
 17779  015220                     u7350:
 17780  015220  0E00               	movlw	0
 17781  015222                     u7360:
 17782  015222  6E3C               	movwf	(btemp+10)^0,c
 17783  015224  6A3D               	clrf	(btemp+11)^0,c
 17784                           
 17785                           ;stkvar	_atoi$4922 @ sp[(-9)+0]
 17786  015226  0EF7               	movlw	-9
 17787  015228  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17788  01522E  0EF8               	movlw	-8
 17789  015230  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17790                           
 17791                           ;stkvar	_atoi$4922 @ sp[(-9)+0]
 17792  015236  0EF7               	movlw	-9
 17793  015238  006F FF8C  F032    	movff	plusw1,btemp
 17794  01523E  0EF8               	movlw	-8
 17795  015240  50E3               	movf	plusw1,w,c
 17796  015242  1032               	iorwf	btemp^0,w,c
 17797  015244  A4D8               	btfss	status,2,c
 17798  015246  D795               	goto	l7614
 17799                           
 17800                           ;stkvar	_neg @ sp[(-9)+7]
 17801  015248  0EFE               	movlw	-2
 17802  01524A  006F FF8C  F032    	movff	plusw1,btemp
 17803  015250  0EFF               	movlw	-1
 17804  015252  50E3               	movf	plusw1,w,c
 17805  015254  1032               	iorwf	btemp^0,w,c
 17806  015256  A4D8               	btfss	status,2,c
 17807  015258  D00E               	goto	l7628
 17808                           
 17809                           ;stkvar	_n @ sp[(-9)+5]
 17810  01525A  0EFC               	movlw	-4
 17811  01525C  006F FF8C  F032    	movff	plusw1,btemp
 17812  015262  1E32               	comf	btemp^0,f,c
 17813  015264  0EFD               	movlw	-3
 17814  015266  006F FF8C  F033    	movff	plusw1,btemp+1
 17815  01526C  1E33               	comf	(btemp+1)^0,f,c
 17816  01526E  2A32               	incf	btemp^0,f,c
 17817  015270  B4D8               	btfsc	status,2,c
 17818  015272  2A33               	incf	(btemp+1)^0,f,c
 17819  015274  D008               	goto	l2767
 17820  015276                     l7628:
 17821                           
 17822                           ;stkvar	_n @ sp[(-9)+5]
 17823  015276  0EFC               	movlw	-4
 17824  015278  006F FF8C  F032    	movff	plusw1,btemp
 17825  01527E  0EFD               	movlw	-3
 17826  015280  006F FF8C  F033    	movff	plusw1,btemp+1
 17827  015286                     l2767:
 17828                           
 17829                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 17830  015286  0EF5               	movlw	245
 17831  015288  26E1               	addwf	fsr1l,f,c
 17832  01528A  0EFF               	movlw	255
 17833  01528C  22E2               	addwfc	fsr1h,f,c
 17834  01528E  0012               	return		;funcret
 17835  015290                     __end_of_atoi:
 17836                           	opt callstack 0
 17837                           
 17838 ;; *************** function _isspace *****************
 17839 ;; Defined at:
 17840 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 17841 ;; Parameters:    Size  Location     Type
 17842 ;;  c               2  [STACK] int 
 17843 ;; Auto vars:     Size  Location     Type
 17844 ;;		None
 17845 ;; Return value:  Size  Location     Type
 17846 ;;                  2  [STACK] int 
 17847 ;; Registers used:
 17848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17849 ;; Tracked objects:
 17850 ;;		On entry : 0/0
 17851 ;;		On exit  : 0/0
 17852 ;;		Unchanged: 0/0
 17853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17858 ;;Total ram usage:        0 bytes
 17859 ;; Hardware stack levels used:    1
 17860 ;; Hardware stack levels required when called:    6
 17861 ;; This function calls:
 17862 ;;		Nothing
 17863 ;; This function is called by:
 17864 ;;		_atoi
 17865 ;; This function uses a reentrant model
 17866 ;;
 17867                           
 17868                           	psect	text68
 17869  017C66                     __ptext68:
 17870                           	opt callstack 0
 17871  017C66                     _isspace:
 17872                           	opt callstack 0
 17873                           
 17874                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17875  017C66  52E6               	movf	postinc1,f,c
 17876                           
 17877                           ;stkvar	_isspace$4960 @ sp[(-1)+0]
 17878                           
 17879                           ;incstack = 0
 17880  017C68  0EFF               	movlw	-1
 17881  017C6A  6AE3               	clrf	plusw1,c
 17882  017C6C  2AE3               	incf	plusw1,f,c
 17883                           
 17884                           ;stkvar	_c @ sp[(-1)+-2]
 17885  017C6E  0EFD               	movlw	-3
 17886  017C70  006F FF8C  F032    	movff	plusw1,btemp
 17887  017C76  0E20               	movlw	32
 17888  017C78  1832               	xorwf	btemp^0,w,c
 17889  017C7A  E104               	bnz	u6320
 17890  017C7C  0EFE               	movlw	-2
 17891  017C7E  50E3               	movf	plusw1,w,c
 17892  017C80  B4D8               	btfsc	status,2,c
 17893  017C82  D012               	goto	l7078
 17894  017C84                     u6320:
 17895                           
 17896                           ;stkvar	_c @ sp[(-1)+-2]
 17897  017C84  0EFD               	movlw	-3
 17898  017C86  50E3               	movf	plusw1,w,c
 17899  017C88  0FF7               	addlw	247
 17900  017C8A  6E3C               	movwf	(btemp+10)^0,c
 17901  017C8C  0EFE               	movlw	-2
 17902  017C8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 17903  017C94  0EFF               	movlw	255
 17904  017C96  223D               	addwfc	(btemp+11)^0,f,c
 17905  017C98  503D               	movf	(btemp+11)^0,w,c
 17906  017C9A  E104               	bnz	u6330
 17907  017C9C  0E05               	movlw	5
 17908  017C9E  5C3C               	subwf	(btemp+10)^0,w,c
 17909  017CA0  A0D8               	btfss	status,0,c
 17910  017CA2  D002               	goto	l7078
 17911  017CA4                     u6330:
 17912                           
 17913                           ;stkvar	_isspace$4960 @ sp[(-1)+0]
 17914  017CA4  0EFF               	movlw	-1
 17915  017CA6  6AE3               	clrf	plusw1,c
 17916  017CA8                     l7078:
 17917                           
 17918                           ;stkvar	_isspace$4960 @ sp[(-1)+0]
 17919  017CA8  0EFF               	movlw	-1
 17920  017CAA  50E3               	movf	plusw1,w,c
 17921  017CAC  6E32               	movwf	btemp^0,c
 17922  017CAE  6A33               	clrf	(btemp+1)^0,c
 17923                           
 17924                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17925  017CB0  52E5               	movf	postdec1,f,c
 17926  017CB2  52E5               	movf	postdec1,f,c
 17927  017CB4  52E5               	movf	postdec1,f,c
 17928  017CB6  0012               	return		;funcret
 17929  017CB8                     __end_of_isspace:
 17930                           	opt callstack 0
 17931                           
 17932 ;; *************** function _isdigit *****************
 17933 ;; Defined at:
 17934 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 17935 ;; Parameters:    Size  Location     Type
 17936 ;;  c               2  [STACK] int 
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;		None
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  2  [STACK] int 
 17941 ;; Registers used:
 17942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17952 ;;Total ram usage:        0 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; Hardware stack levels required when called:    6
 17955 ;; This function calls:
 17956 ;;		Nothing
 17957 ;; This function is called by:
 17958 ;;		_vfpfcnvrt
 17959 ;;		_atoi
 17960 ;; This function uses a reentrant model
 17961 ;;
 17962                           
 17963                           	psect	text69
 17964  01810A                     __ptext69:
 17965                           	opt callstack 0
 17966  01810A                     _isdigit:
 17967                           	opt callstack 18
 17968                           
 17969                           ;stkvar	_c @ sp[(0)+-2]
 17970                           
 17971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17972                           ;incstack = 0
 17973  01810A  0EFE               	movlw	-2
 17974  01810C  50E3               	movf	plusw1,w,c
 17975  01810E  0FD0               	addlw	208
 17976  018110  6E3C               	movwf	(btemp+10)^0,c
 17977  018112  0EFF               	movlw	-1
 17978  018114  006F FF8C  F03D    	movff	plusw1,btemp+11
 17979  01811A  0EFF               	movlw	255
 17980  01811C  223D               	addwfc	(btemp+11)^0,f,c
 17981  01811E  503D               	movf	(btemp+11)^0,w,c
 17982  018120  E106               	bnz	u5280
 17983  018122  0E0A               	movlw	10
 17984  018124  5C3C               	subwf	(btemp+10)^0,w,c
 17985  018126  B0D8               	btfsc	status,0,c
 17986  018128  D002               	goto	u5280
 17987  01812A  0E01               	movlw	1
 17988  01812C  D001               	goto	u5290
 17989  01812E                     u5280:
 17990  01812E  0E00               	movlw	0
 17991  018130                     u5290:
 17992  018130  6E32               	movwf	btemp^0,c
 17993  018132  6A33               	clrf	(btemp+1)^0,c
 17994                           
 17995                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17996  018134  52E5               	movf	postdec1,f,c
 17997  018136  52E5               	movf	postdec1,f,c
 17998  018138  0012               	return		;funcret
 17999  01813A                     __end_of_isdigit:
 18000                           	opt callstack 0
 18001                           
 18002 ;; *************** function _set_vterm *****************
 18003 ;; Defined at:
 18004 ;;		line 107 in file "mconfig.c"
 18005 ;; Parameters:    Size  Location     Type
 18006 ;;  vterm           1  [STACK] const unsigned char 
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;		None
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  1  [STACK] unsigned char 
 18011 ;; Registers used:
 18012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/1
 18015 ;;		On exit  : 3F/5
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18022 ;;Total ram usage:        0 bytes
 18023 ;; Hardware stack levels used:    1
 18024 ;; Hardware stack levels required when called:    6
 18025 ;; This function calls:
 18026 ;;		Nothing
 18027 ;; This function is called by:
 18028 ;;		_main
 18029 ;;		_check_help
 18030 ;; This function uses a reentrant model
 18031 ;;
 18032                           
 18033                           	psect	text70
 18034  0186C0                     __ptext70:
 18035                           	opt callstack 0
 18036  0186C0                     _set_vterm:
 18037                           	opt callstack 24
 18038                           
 18039                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 18040                           ;stkvar	_vterm @ sp[(0)+-1]
 18041                           
 18042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18043                           ;incstack = 0
 18044  0186C0  0EFF               	movlw	-1
 18045  0186C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 18046  0186C8  0E03               	movlw	3
 18047  0186CA  163D               	andwf	(btemp+11)^0,f,c
 18048  0186CC  0105               	movlb	5	; () banked
 18049  0186CE  51D8               	movf	(_D+216)& (0+255),w,b
 18050  0186D0  183D               	xorwf	(btemp+11)^0,w,c
 18051  0186D2  0BFE               	andlw	-2
 18052  0186D4  183D               	xorwf	(btemp+11)^0,w,c
 18053  0186D6  6FD8               	movwf	(_D+216)& (0+255),b
 18054                           
 18055                           ; BSR set to: 5
 18056                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18057  0186D8  52E5               	movf	postdec1,f,c
 18058  0186DA  0012               	return		;funcret
 18059  0186DC                     __end_of_set_vterm:
 18060                           	opt callstack 0
 18061                           
 18062 ;; *************** function _set_temp_display_help *****************
 18063 ;; Defined at:
 18064 ;;		line 211 in file "mconfig.c"
 18065 ;; Parameters:    Size  Location     Type
 18066 ;;  new_response    1  [STACK] const enum E16501
 18067 ;; Auto vars:     Size  Location     Type
 18068 ;;		None
 18069 ;; Return value:  Size  Location     Type
 18070 ;;                  1  [STACK] enum E16501
 18071 ;; Registers used:
 18072 ;;		wreg, fsr1l, fsr1h
 18073 ;; Tracked objects:
 18074 ;;		On entry : 0/5
 18075 ;;		On exit  : 3F/2
 18076 ;;		Unchanged: 0/0
 18077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18082 ;;Total ram usage:        0 bytes
 18083 ;; Hardware stack levels used:    1
 18084 ;; Hardware stack levels required when called:    6
 18085 ;; This function calls:
 18086 ;;		Nothing
 18087 ;; This function is called by:
 18088 ;;		_check_help
 18089 ;; This function uses a reentrant model
 18090 ;;
 18091                           
 18092                           	psect	text71
 18093  0187BA                     __ptext71:
 18094                           	opt callstack 0
 18095  0187BA                     _set_temp_display_help:
 18096                           	opt callstack 23
 18097                           
 18098                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 18099                           
 18100                           ; BSR set to: 5
 18101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18102                           ;incstack = 0
 18103  0187BA  0102               	movlb	2	; () banked
 18104  0187BC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 18105                           
 18106                           ; BSR set to: 2
 18107                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 18108                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18109  0187BE  0EFF               	movlw	-1
 18110  0187C0  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 18111                           
 18112                           ; BSR set to: 2
 18113                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 18114  0187C6  52E5               	movf	postdec1,f,c
 18115  0187C8  0012               	return		;funcret
 18116  0187CA                     __end_of_set_temp_display_help:
 18117                           	opt callstack 0
 18118                           
 18119 ;; *************** function _set_display_info *****************
 18120 ;; Defined at:
 18121 ;;		line 200 in file "mconfig.c"
 18122 ;; Parameters:    Size  Location     Type
 18123 ;;  new_response    1  [STACK] const enum E16501
 18124 ;; Auto vars:     Size  Location     Type
 18125 ;;		None
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  1  [STACK] enum E16986
 18128 ;; Registers used:
 18129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18130 ;; Tracked objects:
 18131 ;;		On entry : 0/39
 18132 ;;		On exit  : 0/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18139 ;;Total ram usage:        0 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; Hardware stack levels required when called:    7
 18142 ;; This function calls:
 18143 ;;		_TimerDone
 18144 ;; This function is called by:
 18145 ;;		_main
 18146 ;;		_check_help
 18147 ;; This function uses a reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text72
 18151  01864A                     __ptext72:
 18152                           	opt callstack 0
 18153  01864A                     _set_display_info:
 18154                           	opt callstack 23
 18155                           
 18156                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 18157                           
 18158                           ; BSR set to: 2
 18159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18160                           ;incstack = 0
 18161  01864A  0E07               	movlw	7
 18162  01864C  6EE6               	movwf	postinc1,c
 18163  01864E  EC9F  F0C2         	call	_TimerDone	;wreg free
 18164  018652  5032               	movf	btemp^0,w,c
 18165  018654  B4D8               	btfsc	status,2,c
 18166  018656  D006               	goto	l1609
 18167                           
 18168                           ;mconfig.c: 205:   old_info = V.response.info;
 18169  018658  0102               	movlb	2	; () banked
 18170  01865A  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 18171                           
 18172                           ; BSR set to: 2
 18173                           ;mconfig.c: 206:   V.response.info = new_response_info;
 18174                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18175  01865C  0EFF               	movlw	-1
 18176  01865E  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 18177  018664                     l1609:
 18178                           
 18179                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18180  018664  52E5               	movf	postdec1,f,c
 18181  018666  0012               	return		;funcret
 18182  018668                     __end_of_set_display_info:
 18183                           	opt callstack 0
 18184                           
 18185 ;; *************** function _mode_lamp_dim *****************
 18186 ;; Defined at:
 18187 ;;		line 13 in file "mconfig.c"
 18188 ;; Parameters:    Size  Location     Type
 18189 ;;  level           2  [STACK] const unsigned short 
 18190 ;; Auto vars:     Size  Location     Type
 18191 ;;		None
 18192 ;; Return value:  Size  Location     Type
 18193 ;;                  1  [STACK] void 
 18194 ;; Registers used:
 18195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18196 ;; Tracked objects:
 18197 ;;		On entry : 0/2
 18198 ;;		On exit  : 0/0
 18199 ;;		Unchanged: 0/0
 18200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18205 ;;Total ram usage:        0 bytes
 18206 ;; Hardware stack levels used:    1
 18207 ;; Hardware stack levels required when called:    7
 18208 ;; This function calls:
 18209 ;;		_PWM8_LoadDutyValue
 18210 ;; This function is called by:
 18211 ;;		_main
 18212 ;;		_check_help
 18213 ;; This function uses a reentrant model
 18214 ;;
 18215                           
 18216                           	psect	text73
 18217  018712                     __ptext73:
 18218                           	opt callstack 0
 18219  018712                     _mode_lamp_dim:
 18220                           	opt callstack 23
 18221                           
 18222                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 18223                           ;stkvar	_level @ sp[(0)+-2]
 18224                           
 18225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18226                           ;incstack = 0
 18227  018712  0EFE               	movlw	-2
 18228  018714  006F FF8F FFE6     	movff	plusw1,postinc1
 18229  01871A  006F FF8F FFE6     	movff	plusw1,postinc1
 18230  018720  EC51  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18231                           
 18232                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 18233  018724  52E5               	movf	postdec1,f,c
 18234  018726  52E5               	movf	postdec1,f,c
 18235  018728  0012               	return		;funcret
 18236  01872A                     __end_of_mode_lamp_dim:
 18237                           	opt callstack 0
 18238                           
 18239 ;; *************** function _mode_lamp_bright *****************
 18240 ;; Defined at:
 18241 ;;		line 18 in file "mconfig.c"
 18242 ;; Parameters:    Size  Location     Type
 18243 ;;		None
 18244 ;; Auto vars:     Size  Location     Type
 18245 ;;		None
 18246 ;; Return value:  Size  Location     Type
 18247 ;;                  1  [STACK] void 
 18248 ;; Registers used:
 18249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18250 ;; Tracked objects:
 18251 ;;		On entry : 0/2
 18252 ;;		On exit  : 0/0
 18253 ;;		Unchanged: 0/0
 18254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18259 ;;Total ram usage:        0 bytes
 18260 ;; Hardware stack levels used:    1
 18261 ;; Hardware stack levels required when called:    7
 18262 ;; This function calls:
 18263 ;;		_PWM8_LoadDutyValue
 18264 ;; This function is called by:
 18265 ;;		_check_help
 18266 ;; This function uses a reentrant model
 18267 ;;
 18268                           
 18269                           	psect	text74
 18270  0187D8                     __ptext74:
 18271                           	opt callstack 0
 18272  0187D8                     _mode_lamp_bright:
 18273                           	opt callstack 22
 18274                           
 18275                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 18276                           
 18277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18278                           ;incstack = 0
 18279  0187D8  0E2C               	movlw	44
 18280  0187DA  6EE6               	movwf	postinc1,c
 18281  0187DC  0E01               	movlw	1
 18282  0187DE  6EE6               	movwf	postinc1,c
 18283  0187E0  EC51  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18284                           
 18285                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 18286  0187E4  0012               	return		;funcret
 18287  0187E6                     __end_of_mode_lamp_bright:
 18288                           	opt callstack 0
 18289                           
 18290 ;; *************** function _PWM8_LoadDutyValue *****************
 18291 ;; Defined at:
 18292 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 18293 ;; Parameters:    Size  Location     Type
 18294 ;;  dutyValue       2  [STACK] unsigned short 
 18295 ;; Auto vars:     Size  Location     Type
 18296 ;;		None
 18297 ;; Return value:  Size  Location     Type
 18298 ;;                  1  [STACK] void 
 18299 ;; Registers used:
 18300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18301 ;; Tracked objects:
 18302 ;;		On entry : 0/2
 18303 ;;		On exit  : 0/0
 18304 ;;		Unchanged: 0/0
 18305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18310 ;;Total ram usage:        0 bytes
 18311 ;; Hardware stack levels used:    1
 18312 ;; Hardware stack levels required when called:    6
 18313 ;; This function calls:
 18314 ;;		Nothing
 18315 ;; This function is called by:
 18316 ;;		_mode_lamp_dim
 18317 ;;		_mode_lamp_bright
 18318 ;; This function uses a reentrant model
 18319 ;;
 18320                           
 18321                           	psect	text75
 18322  017EA2                     __ptext75:
 18323                           	opt callstack 0
 18324  017EA2                     _PWM8_LoadDutyValue:
 18325                           	opt callstack 23
 18326                           
 18327                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18328                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18329                           
 18330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18331                           ;incstack = 0
 18332  017EA2  0EFE               	movlw	-2
 18333  017EA4  006F FF8C  F03C    	movff	plusw1,btemp+10
 18334  017EAA  0EFF               	movlw	-1
 18335  017EAC  006F FF8C  F03D    	movff	plusw1,btemp+11
 18336  017EB2  90D8               	bcf	status,0,c
 18337  017EB4  323D               	rrcf	(btemp+11)^0,f,c
 18338  017EB6  323C               	rrcf	(btemp+10)^0,f,c
 18339  017EB8  90D8               	bcf	status,0,c
 18340  017EBA  323D               	rrcf	(btemp+11)^0,f,c
 18341  017EBC  323C               	rrcf	(btemp+10)^0,f,c
 18342  017EBE  503C               	movf	(btemp+10)^0,w,c
 18343  017EC0  6E61               	movwf	97,c	;volatile
 18344                           
 18345                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 18346                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18347  017EC2  0EFE               	movlw	-2
 18348  017EC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 18349  017ECA  0E03               	movlw	3
 18350  017ECC  163D               	andwf	(btemp+11)^0,f,c
 18351  017ECE  0E06               	movlw	6
 18352  017ED0  6E32               	movwf	btemp^0,c
 18353  017ED2                     u7815:
 18354  017ED2  90D8               	bcf	status,0,c
 18355  017ED4  363D               	rlcf	(btemp+11)^0,f,c
 18356  017ED6  2E32               	decfsz	btemp^0,f,c
 18357  017ED8  D7FC               	goto	u7815
 18358  017EDA  503D               	movf	(btemp+11)^0,w,c
 18359  017EDC  6E60               	movwf	96,c	;volatile
 18360                           
 18361                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 18362  017EDE  52E5               	movf	postdec1,f,c
 18363  017EE0  52E5               	movf	postdec1,f,c
 18364  017EE2  0012               	return		;funcret
 18365  017EE4                     __end_of_PWM8_LoadDutyValue:
 18366                           	opt callstack 0
 18367                           
 18368 ;; *************** function _help_button *****************
 18369 ;; Defined at:
 18370 ;;		line 26 in file "mconfig.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;		None
 18373 ;; Auto vars:     Size  Location     Type
 18374 ;;		None
 18375 ;; Return value:  Size  Location     Type
 18376 ;;                  1  [STACK] _Bool 
 18377 ;; Registers used:
 18378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18379 ;; Tracked objects:
 18380 ;;		On entry : 0/2
 18381 ;;		On exit  : 0/0
 18382 ;;		Unchanged: 0/0
 18383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18388 ;;Total ram usage:        0 bytes
 18389 ;; Hardware stack levels used:    1
 18390 ;; Hardware stack levels required when called:    7
 18391 ;; This function calls:
 18392 ;;		_StartTimer
 18393 ;;		_TimerDone
 18394 ;; This function is called by:
 18395 ;;		_check_help
 18396 ;; This function uses a reentrant model
 18397 ;;
 18398                           
 18399                           	psect	text76
 18400  017F9E                     __ptext76:
 18401                           	opt callstack 0
 18402  017F9E                     _help_button:
 18403                           	opt callstack 22
 18404                           
 18405                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 18406                           
 18407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18408                           ;incstack = 0
 18409  017F9E  B0CB               	btfsc	203,0,c	;volatile
 18410  017FA0  D00C               	goto	l1552
 18411                           
 18412                           ;mconfig.c: 29:   V.help = 1;
 18413  017FA2  0102               	movlb	2	; () banked
 18414  017FA4  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 18415                           
 18416                           ; BSR set to: 2
 18417                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 18418  017FA6  0E08               	movlw	8
 18419  017FA8  6EE6               	movwf	postinc1,c
 18420  017FAA  EC9F  F0C2         	call	_TimerDone	;wreg free
 18421  017FAE  5032               	movf	btemp^0,w,c
 18422  017FB0  B4D8               	btfsc	status,2,c
 18423  017FB2  D003               	goto	l1552
 18424                           
 18425                           ;mconfig.c: 31:    return 1;
 18426  017FB4  0E01               	movlw	1
 18427  017FB6  6E32               	movwf	btemp^0,c
 18428  017FB8  0012               	return	
 18429  017FBA                     l1552:
 18430                           
 18431                           ;mconfig.c: 34:  if (!V.help)
 18432  017FBA  0102               	movlb	2	; () banked
 18433  017FBC  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 18434  017FBE  D008               	goto	l8518
 18435                           
 18436                           ; BSR set to: 2
 18437                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 18438  017FC0  0E2C               	movlw	44
 18439  017FC2  6EE6               	movwf	postinc1,c
 18440  017FC4  0E01               	movlw	1
 18441  017FC6  6EE6               	movwf	postinc1,c
 18442  017FC8  0E08               	movlw	8
 18443  017FCA  6EE6               	movwf	postinc1,c
 18444  017FCC  ECB1  F0BF         	call	_StartTimer	;wreg free
 18445  017FD0                     l8518:
 18446                           
 18447                           ;mconfig.c: 37:  return 0;
 18448  017FD0  0E00               	movlw	0
 18449  017FD2  6E32               	movwf	btemp^0,c
 18450                           
 18451                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 18452  017FD4  0012               	return		;funcret
 18453  017FD6                     __end_of_help_button:
 18454                           	opt callstack 0
 18455                           
 18456 ;; *************** function _TimerDone *****************
 18457 ;; Defined at:
 18458 ;;		line 20 in file "timers.c"
 18459 ;; Parameters:    Size  Location     Type
 18460 ;;  timer           1  [STACK] const unsigned char 
 18461 ;; Auto vars:     Size  Location     Type
 18462 ;;		None
 18463 ;; Return value:  Size  Location     Type
 18464 ;;                  1  [STACK] _Bool 
 18465 ;; Registers used:
 18466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18467 ;; Tracked objects:
 18468 ;;		On entry : 0/39
 18469 ;;		On exit  : 0/0
 18470 ;;		Unchanged: 0/0
 18471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18476 ;;Total ram usage:        0 bytes
 18477 ;; Hardware stack levels used:    1
 18478 ;; Hardware stack levels required when called:    6
 18479 ;; This function calls:
 18480 ;;		Nothing
 18481 ;; This function is called by:
 18482 ;;		_main
 18483 ;;		_WaitMs
 18484 ;;		_help_button
 18485 ;;		_check_help
 18486 ;;		_set_display_info
 18487 ;; This function uses a reentrant model
 18488 ;;
 18489                           
 18490                           	psect	text77
 18491  01853E                     __ptext77:
 18492                           	opt callstack 0
 18493  01853E                     _TimerDone:
 18494                           	opt callstack 23
 18495                           
 18496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18497                           ;incstack = 0
 18498  01853E  0004               	clrwdt		;# 
 18499                           
 18500                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 18501                           ;stkvar	_timer @ sp[(0)+-1]
 18502  018540  0EFF               	movlw	-1
 18503  018542  50E3               	movf	plusw1,w,c
 18504  018544  0D02               	mullw	2
 18505  018546  50F3               	movf	243,w,c
 18506  018548  0F89               	addlw	low _tickCount
 18507  01854A  6ED9               	movwf	fsr2l,c
 18508  01854C  6ADA               	clrf	fsr2h,c
 18509  01854E  50DE               	movf	postinc2,w,c
 18510  018550  10DE               	iorwf	postinc2,w,c
 18511  018552  A4D8               	btfss	status,2,c
 18512  018554  D002               	goto	l7914
 18513                           
 18514                           ;timers.c: 24:   return 1;
 18515  018556  0E01               	movlw	1
 18516  018558  D001               	goto	L18
 18517  01855A                     l7914:
 18518                           
 18519                           ;timers.c: 26:  return 0;
 18520  01855A  0E00               	movlw	0
 18521  01855C                     L18:
 18522  01855C  6E32               	movwf	btemp^0,c
 18523                           
 18524                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18525  01855E  52E5               	movf	postdec1,f,c
 18526  018560  0012               	return		;funcret
 18527  018562                     __end_of_TimerDone:
 18528                           	opt callstack 0
 18529                           
 18530 ;; *************** function _StartTimer *****************
 18531 ;; Defined at:
 18532 ;;		line 12 in file "timers.c"
 18533 ;; Parameters:    Size  Location     Type
 18534 ;;  timer           1  [STACK] const unsigned char 
 18535 ;;  count           2  [STACK] const unsigned short 
 18536 ;; Auto vars:     Size  Location     Type
 18537 ;;		None
 18538 ;; Return value:  Size  Location     Type
 18539 ;;                  1  [STACK] void 
 18540 ;; Registers used:
 18541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18542 ;; Tracked objects:
 18543 ;;		On entry : 0/5
 18544 ;;		On exit  : 0/0
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18551 ;;Total ram usage:        0 bytes
 18552 ;; Hardware stack levels used:    1
 18553 ;; Hardware stack levels required when called:    6
 18554 ;; This function calls:
 18555 ;;		Nothing
 18556 ;; This function is called by:
 18557 ;;		_main
 18558 ;;		_WaitMs
 18559 ;;		_help_button
 18560 ;;		_check_help
 18561 ;; This function uses a reentrant model
 18562 ;;
 18563                           
 18564                           	psect	text78
 18565  017F62                     __ptext78:
 18566                           	opt callstack 0
 18567  017F62                     _StartTimer:
 18568                           	opt callstack 21
 18569                           
 18570                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 18571                           ;stkvar	_count @ sp[(0)+-3]
 18572                           
 18573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18574                           ;incstack = 0
 18575  017F62  0EFD               	movlw	-3
 18576  017F64  006F FF8C  F03C    	movff	plusw1,btemp+10
 18577  017F6A  0EFE               	movlw	-2
 18578  017F6C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18579  017F72  90D8               	bcf	status,0,c
 18580  017F74  343C               	rlcf	(btemp+10)^0,w,c
 18581  017F76  6E3A               	movwf	(btemp+8)^0,c
 18582  017F78  343D               	rlcf	(btemp+11)^0,w,c
 18583  017F7A  6E3B               	movwf	(btemp+9)^0,c
 18584                           
 18585                           ;stkvar	_timer @ sp[(0)+-1]
 18586  017F7C  0EFF               	movlw	-1
 18587  017F7E  50E3               	movf	plusw1,w,c
 18588  017F80  0D02               	mullw	2
 18589  017F82  50F3               	movf	243,w,c
 18590  017F84  0F89               	addlw	low _tickCount
 18591  017F86  6ED9               	movwf	fsr2l,c
 18592  017F88  6ADA               	clrf	fsr2h,c
 18593  017F8A  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 18594  017F90  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 18595                           
 18596                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 18597  017F96  52E5               	movf	postdec1,f,c
 18598  017F98  52E5               	movf	postdec1,f,c
 18599  017F9A  52E5               	movf	postdec1,f,c
 18600  017F9C  0012               	return		;funcret
 18601  017F9E                     __end_of_StartTimer:
 18602                           	opt callstack 0
 18603                           
 18604 ;; *************** function _display_info *****************
 18605 ;; Defined at:
 18606 ;;		line 190 in file "mconfig.c"
 18607 ;; Parameters:    Size  Location     Type
 18608 ;;		None
 18609 ;; Auto vars:     Size  Location     Type
 18610 ;;		None
 18611 ;; Return value:  Size  Location     Type
 18612 ;;                  1  [STACK] enum E16501
 18613 ;; Registers used:
 18614 ;;		btemp
 18615 ;; Tracked objects:
 18616 ;;		On entry : 0/2
 18617 ;;		On exit  : 0/0
 18618 ;;		Unchanged: 0/0
 18619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18624 ;;Total ram usage:        0 bytes
 18625 ;; Hardware stack levels used:    1
 18626 ;; Hardware stack levels required when called:    6
 18627 ;; This function calls:
 18628 ;;		Nothing
 18629 ;; This function is called by:
 18630 ;;		_check_help
 18631 ;; This function uses a reentrant model
 18632 ;;
 18633                           
 18634                           	psect	text79
 18635  01883A                     __ptext79:
 18636                           	opt callstack 0
 18637  01883A                     _display_info:
 18638                           	opt callstack 23
 18639                           
 18640                           ;mconfig.c: 192:  return V.response.info;
 18641                           
 18642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18643                           ;incstack = 0
 18644  01883A  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 18645                           
 18646                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 18647  018840  0012               	return		;funcret
 18648  018842                     __end_of_display_info:
 18649                           	opt callstack 0
 18650                           
 18651 ;; *************** function _display_help *****************
 18652 ;; Defined at:
 18653 ;;		line 195 in file "mconfig.c"
 18654 ;; Parameters:    Size  Location     Type
 18655 ;;		None
 18656 ;; Auto vars:     Size  Location     Type
 18657 ;;		None
 18658 ;; Return value:  Size  Location     Type
 18659 ;;                  1  [STACK] enum E16501
 18660 ;; Registers used:
 18661 ;;		btemp
 18662 ;; Tracked objects:
 18663 ;;		On entry : 3F/2
 18664 ;;		On exit  : 0/0
 18665 ;;		Unchanged: 0/0
 18666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18671 ;;Total ram usage:        0 bytes
 18672 ;; Hardware stack levels used:    1
 18673 ;; Hardware stack levels required when called:    6
 18674 ;; This function calls:
 18675 ;;		Nothing
 18676 ;; This function is called by:
 18677 ;;		_check_help
 18678 ;; This function uses a reentrant model
 18679 ;;
 18680                           
 18681                           	psect	text80
 18682  018842                     __ptext80:
 18683                           	opt callstack 0
 18684  018842                     _display_help:
 18685                           	opt callstack 23
 18686                           
 18687                           ;mconfig.c: 197:  return V.response.help_temp;
 18688                           
 18689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18690                           ;incstack = 0
 18691  018842  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 18692                           
 18693                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 18694  018848  0012               	return		;funcret
 18695  01884A                     __end_of_display_help:
 18696                           	opt callstack 0
 18697                           
 18698 ;; *************** function _check_adc_scan *****************
 18699 ;; Defined at:
 18700 ;;		line 56 in file "daq.c"
 18701 ;; Parameters:    Size  Location     Type
 18702 ;;		None
 18703 ;; Auto vars:     Size  Location     Type
 18704 ;;		None
 18705 ;; Return value:  Size  Location     Type
 18706 ;;                  1  [STACK] _Bool 
 18707 ;; Registers used:
 18708 ;;		btemp
 18709 ;; Tracked objects:
 18710 ;;		On entry : 0/39
 18711 ;;		On exit  : 0/0
 18712 ;;		Unchanged: 0/0
 18713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18718 ;;Total ram usage:        0 bytes
 18719 ;; Hardware stack levels used:    1
 18720 ;; Hardware stack levels required when called:    6
 18721 ;; This function calls:
 18722 ;;		Nothing
 18723 ;; This function is called by:
 18724 ;;		_main
 18725 ;; This function uses a reentrant model
 18726 ;;
 18727                           
 18728                           	psect	text81
 18729  01884A                     __ptext81:
 18730                           	opt callstack 0
 18731  01884A                     _check_adc_scan:
 18732                           	opt callstack 24
 18733                           
 18734                           ;daq.c: 58:  return R.done;
 18735                           
 18736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18737                           ;incstack = 0
 18738  01884A  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 18739                           
 18740                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 18741  018850  0012               	return		;funcret
 18742  018852                     __end_of_check_adc_scan:
 18743                           	opt callstack 0
 18744                           
 18745 ;; *************** function _calc_model_data *****************
 18746 ;; Defined at:
 18747 ;;		line 54 in file "mbmc.c"
 18748 ;; Parameters:    Size  Location     Type
 18749 ;;		None
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;		None
 18752 ;; Return value:  Size  Location     Type
 18753 ;;                  1  [STACK] void 
 18754 ;; Registers used:
 18755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18756 ;; Tracked objects:
 18757 ;;		On entry : 0/39
 18758 ;;		On exit  : 3F/1
 18759 ;;		Unchanged: 0/0
 18760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18765 ;;Total ram usage:        0 bytes
 18766 ;; Hardware stack levels used:    1
 18767 ;; Hardware stack levels required when called:    9
 18768 ;; This function calls:
 18769 ;;		___fladd
 18770 ;;		___flmul
 18771 ;;		___flsub
 18772 ;;		_lp_filter
 18773 ;; This function is called by:
 18774 ;;		_main
 18775 ;; This function uses a reentrant model
 18776 ;;
 18777                           
 18778                           	psect	text82
 18779  015290                     __ptext82:
 18780                           	opt callstack 0
 18781  015290                     _calc_model_data:
 18782                           	opt callstack 21
 18783                           
 18784                           ;mbmc.c: 56:  C.c_bat = C.calc[C_BATT];
 18785                           
 18786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18787                           ;incstack = 0
 18788  015290  C100  F144         	movff	_C,_C+68
 18789  015294  C101  F145         	movff	_C+1,_C+69
 18790  015298  C102  F146         	movff	_C+2,_C+70
 18791  01529C  C103  F147         	movff	_C+3,_C+71
 18792                           
 18793                           ;mbmc.c: 57:  C.c_pv = C.calc[C_PV];
 18794  0152A0  C104  F148         	movff	_C+4,_C+72
 18795  0152A4  C105  F149         	movff	_C+5,_C+73
 18796  0152A8  C106  F14A         	movff	_C+6,_C+74
 18797  0152AC  C107  F14B         	movff	_C+7,_C+75
 18798                           
 18799                           ;mbmc.c: 58:  C.v_bat = C.calc[V_BAT];
 18800  0152B0  C110  F154         	movff	_C+16,_C+84
 18801  0152B4  C111  F155         	movff	_C+17,_C+85
 18802  0152B8  C112  F156         	movff	_C+18,_C+86
 18803  0152BC  C113  F157         	movff	_C+19,_C+87
 18804                           
 18805                           ;mbmc.c: 59:  C.v_pv = C.calc[V_PV];
 18806  0152C0  C114  F150         	movff	_C+20,_C+80
 18807  0152C4  C115  F151         	movff	_C+21,_C+81
 18808  0152C8  C116  F152         	movff	_C+22,_C+82
 18809  0152CC  C117  F153         	movff	_C+23,_C+83
 18810                           
 18811                           ;mbmc.c: 60:  C.v_inverter = C.calc[V_INVERTER];
 18812  0152D0  C130  F164         	movff	_C+48,_C+100
 18813  0152D4  C131  F165         	movff	_C+49,_C+101
 18814  0152D8  C132  F166         	movff	_C+50,_C+102
 18815  0152DC  C133  F167         	movff	_C+51,_C+103
 18816                           
 18817                           ;mbmc.c: 61:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 18818  0152E0  0E01               	movlw	1
 18819  0152E2  6EE6               	movwf	postinc1,c
 18820  0152E4  0E10               	movlw	16
 18821  0152E6  6EE6               	movwf	postinc1,c
 18822  0152E8  0060  F403  FFE6   	movff	_C,postinc1
 18823  0152EE  0060  F407  FFE6   	movff	_C+1,postinc1
 18824  0152F4  0060  F40B  FFE6   	movff	_C+2,postinc1
 18825  0152FA  0060  F40F  FFE6   	movff	_C+3,postinc1
 18826  015300  0060  F413  FFE6   	movff	_C+4,postinc1
 18827  015306  0060  F417  FFE6   	movff	_C+5,postinc1
 18828  01530C  0060  F41B  FFE6   	movff	_C+6,postinc1
 18829  015312  0060  F41F  FFE6   	movff	_C+7,postinc1
 18830  015318  ECA3  F0BE         	call	___flsub	;wreg free
 18831  01531C  0060  F0CB  FFE6   	movff	btemp,postinc1
 18832  015322  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18833  015328  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18834  01532E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18835  015334  EC88  F0AE         	call	_lp_filter	;wreg free
 18836  015338  0060  F0C8  F140   	movff	btemp,_C+64
 18837  01533E  0060  F0CC  F141   	movff	btemp+1,_C+65
 18838  015344  0060  F0D0  F142   	movff	btemp+2,_C+66
 18839  01534A  0060  F0D4  F143   	movff	btemp+3,_C+67
 18840                           
 18841                           ;mbmc.c: 62:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 18842  015350  0E01               	movlw	1
 18843  015352  6EE6               	movwf	postinc1,c
 18844  015354  0E11               	movlw	17
 18845  015356  6EE6               	movwf	postinc1,c
 18846  015358  0060  F553  FFE6   	movff	_C+84,postinc1
 18847  01535E  0060  F557  FFE6   	movff	_C+85,postinc1
 18848  015364  0060  F55B  FFE6   	movff	_C+86,postinc1
 18849  01536A  0060  F55F  FFE6   	movff	_C+87,postinc1
 18850  015370  0060  F503  FFE6   	movff	_C+64,postinc1
 18851  015376  0060  F507  FFE6   	movff	_C+65,postinc1
 18852  01537C  0060  F50B  FFE6   	movff	_C+66,postinc1
 18853  015382  0060  F50F  FFE6   	movff	_C+67,postinc1
 18854  015388  ECC1  F08E         	call	___flmul	;wreg free
 18855  01538C  0060  F0CB  FFE6   	movff	btemp,postinc1
 18856  015392  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18857  015398  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18858  01539E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18859  0153A4  EC88  F0AE         	call	_lp_filter	;wreg free
 18860  0153A8  0060  F0C8  F168   	movff	btemp,_C+104
 18861  0153AE  0060  F0CC  F169   	movff	btemp+1,_C+105
 18862  0153B4  0060  F0D0  F16A   	movff	btemp+2,_C+106
 18863  0153BA  0060  F0D4  F16B   	movff	btemp+3,_C+107
 18864                           
 18865                           ;mbmc.c: 63:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 18866  0153C0  0E01               	movlw	1
 18867  0153C2  6EE6               	movwf	postinc1,c
 18868  0153C4  0E12               	movlw	18
 18869  0153C6  6EE6               	movwf	postinc1,c
 18870  0153C8  0060  F543  FFE6   	movff	_C+80,postinc1
 18871  0153CE  0060  F547  FFE6   	movff	_C+81,postinc1
 18872  0153D4  0060  F54B  FFE6   	movff	_C+82,postinc1
 18873  0153DA  0060  F54F  FFE6   	movff	_C+83,postinc1
 18874  0153E0  0060  F523  FFE6   	movff	_C+72,postinc1
 18875  0153E6  0060  F527  FFE6   	movff	_C+73,postinc1
 18876  0153EC  0060  F52B  FFE6   	movff	_C+74,postinc1
 18877  0153F2  0060  F52F  FFE6   	movff	_C+75,postinc1
 18878  0153F8  ECC1  F08E         	call	___flmul	;wreg free
 18879  0153FC  0060  F0CB  FFE6   	movff	btemp,postinc1
 18880  015402  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18881  015408  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18882  01540E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18883  015414  EC88  F0AE         	call	_lp_filter	;wreg free
 18884  015418  0060  F0C8  F170   	movff	btemp,_C+112
 18885  01541E  0060  F0CC  F171   	movff	btemp+1,_C+113
 18886  015424  0060  F0D0  F172   	movff	btemp+2,_C+114
 18887  01542A  0060  F0D4  F173   	movff	btemp+3,_C+115
 18888                           
 18889                           ;mbmc.c: 64:  C.p_inverter = lp_filter((C.c_load * C.v_inverter)-14.00, 19, 1);
 18890  015430  0E01               	movlw	1
 18891  015432  6EE6               	movwf	postinc1,c
 18892  015434  0E13               	movlw	19
 18893  015436  6EE6               	movwf	postinc1,c
 18894  015438  0E00               	movlw	0
 18895  01543A  6EE6               	movwf	postinc1,c
 18896  01543C  0E00               	movlw	0
 18897  01543E  6EE6               	movwf	postinc1,c
 18898  015440  0E60               	movlw	96
 18899  015442  6EE6               	movwf	postinc1,c
 18900  015444  0EC1               	movlw	193
 18901  015446  6EE6               	movwf	postinc1,c
 18902  015448  0060  F593  FFE6   	movff	_C+100,postinc1
 18903  01544E  0060  F597  FFE6   	movff	_C+101,postinc1
 18904  015454  0060  F59B  FFE6   	movff	_C+102,postinc1
 18905  01545A  0060  F59F  FFE6   	movff	_C+103,postinc1
 18906  015460  0060  F503  FFE6   	movff	_C+64,postinc1
 18907  015466  0060  F507  FFE6   	movff	_C+65,postinc1
 18908  01546C  0060  F50B  FFE6   	movff	_C+66,postinc1
 18909  015472  0060  F50F  FFE6   	movff	_C+67,postinc1
 18910  015478  ECC1  F08E         	call	___flmul	;wreg free
 18911  01547C  0060  F0CB  FFE6   	movff	btemp,postinc1
 18912  015482  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18913  015488  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18914  01548E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18915  015494  ECD6  F092         	call	___fladd	;wreg free
 18916  015498  0060  F0CB  FFE6   	movff	btemp,postinc1
 18917  01549E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18918  0154A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18919  0154AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18920  0154B0  EC88  F0AE         	call	_lp_filter	;wreg free
 18921  0154B4  0060  F0C8  F16C   	movff	btemp,_C+108
 18922  0154BA  0060  F0CC  F16D   	movff	btemp+1,_C+109
 18923  0154C0  0060  F0D0  F16E   	movff	btemp+2,_C+110
 18924  0154C6  0060  F0D4  F16F   	movff	btemp+3,_C+111
 18925                           
 18926                           ;mbmc.c: 68:  if (C.p_inverter<0.0)
 18927  0154CC  0101               	movlb	1	; () banked
 18928  0154CE  AF6F               	btfss	(_C+111)& (0+255),7,b
 18929  0154D0  0012               	return	
 18930                           
 18931                           ; BSR set to: 1
 18932                           ;mbmc.c: 69:   C.p_inverter=0.0;
 18933  0154D2  6B6C               	clrf	(_C+108)& (0+255),b
 18934  0154D4  6B6D               	clrf	(_C+109)& (0+255),b
 18935  0154D6  6B6E               	clrf	(_C+110)& (0+255),b
 18936  0154D8  6B6F               	clrf	(_C+111)& (0+255),b
 18937                           
 18938                           ; BSR set to: 1
 18939                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 18940  0154DA  0012               	return		;funcret
 18941  0154DC                     __end_of_calc_model_data:
 18942                           	opt callstack 0
 18943                           
 18944 ;; *************** function _lp_filter *****************
 18945 ;; Defined at:
 18946 ;;		line 16 in file "mbmc.c"
 18947 ;; Parameters:    Size  Location     Type
 18948 ;;  new             4  [STACK] const float 
 18949 ;;  bn              1  [STACK] const unsigned char 
 18950 ;;  slow            1  [STACK] const char 
 18951 ;; Auto vars:     Size  Location     Type
 18952 ;;  lp_speed        4  [STACK] float 
 18953 ;; Return value:  Size  Location     Type
 18954 ;;                  4  [STACK] float 
 18955 ;; Registers used:
 18956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18957 ;; Tracked objects:
 18958 ;;		On entry : 0/39
 18959 ;;		On exit  : 0/0
 18960 ;;		Unchanged: 0/0
 18961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18966 ;;Total ram usage:        0 bytes
 18967 ;; Hardware stack levels used:    1
 18968 ;; Hardware stack levels required when called:    8
 18969 ;; This function calls:
 18970 ;;		___fladd
 18971 ;;		___flmul
 18972 ;;		___flsub
 18973 ;; This function is called by:
 18974 ;;		_convert_adc_data
 18975 ;;		_calc_model_data
 18976 ;; This function uses a reentrant model
 18977 ;;
 18978                           
 18979                           	psect	text83
 18980  015D10                     __ptext83:
 18981                           	opt callstack 0
 18982  015D10                     _lp_filter:
 18983                           	opt callstack 0
 18984                           
 18985                           ; BSR set to: 1
 18986                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18987  015D10  52E6               	movf	postinc1,f,c
 18988  015D12  52E6               	movf	postinc1,f,c
 18989  015D14  52E6               	movf	postinc1,f,c
 18990  015D16  52E6               	movf	postinc1,f,c
 18991                           
 18992                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16 +4];;mbmc.c: 19:  float lp_speed;;mbmc.c: 2
      +                          1:  if (bn >= 16 +4)
 18993                           ;stkvar	_bn @ sp[(-4)+-5]
 18994                           
 18995                           ;incstack = 0
 18996  015D18  0EF7               	movlw	-9
 18997  015D1A  006F FF8C  F032    	movff	plusw1,btemp
 18998  015D20  0E13               	movlw	19
 18999  015D22  6432               	cpfsgt	btemp^0,c
 19000  015D24  D011               	goto	l8624
 19001  015D26                     u8180:
 19002                           
 19003                           ;mbmc.c: 22:   return new;
 19004                           ;stkvar	_new @ sp[(-4)+-4]
 19005  015D26  0EF8               	movlw	-8
 19006  015D28  006F FF8C  F032    	movff	plusw1,btemp
 19007  015D2E  0EF9               	movlw	-7
 19008  015D30  006F FF8C  F033    	movff	plusw1,btemp+1
 19009  015D36  0EFA               	movlw	-6
 19010  015D38  006F FF8C  F034    	movff	plusw1,btemp+2
 19011  015D3E  0EFB               	movlw	-5
 19012  015D40  006F FF8C  F035    	movff	plusw1,btemp+3
 19013  015D46  D0BF               	goto	l1694
 19014  015D48                     l8624:
 19015                           
 19016                           ;mbmc.c: 24:  if (slow == (-1)) {
 19017                           ;stkvar	_slow @ sp[(-4)+-6]
 19018  015D48  0EF6               	movlw	-10
 19019  015D4A  28E3               	incf	plusw1,w,c
 19020  015D4C  A4D8               	btfss	status,2,c
 19021  015D4E  D012               	goto	l8632
 19022                           
 19023                           ;mbmc.c: 25:   smooth[bn] = 0.0;
 19024                           ;stkvar	_bn @ sp[(-4)+-5]
 19025  015D50  0EF7               	movlw	-9
 19026  015D52  50E3               	movf	plusw1,w,c
 19027  015D54  0D04               	mullw	4
 19028  015D56  0E00               	movlw	low lp_filter@smooth
 19029  015D58  24F3               	addwf	243,w,c
 19030  015D5A  6ED9               	movwf	fsr2l,c
 19031  015D5C  0E03               	movlw	high lp_filter@smooth
 19032  015D5E  20F4               	addwfc	prodh,w,c
 19033  015D60  6EDA               	movwf	fsr2h,c
 19034  015D62  0E00               	movlw	0
 19035  015D64  6EDE               	movwf	postinc2,c
 19036  015D66  0E00               	movlw	0
 19037  015D68  6EDE               	movwf	postinc2,c
 19038  015D6A  0E00               	movlw	0
 19039  015D6C  6EDE               	movwf	postinc2,c
 19040  015D6E  0E00               	movlw	0
 19041  015D70  6EDD               	movwf	postdec2,c
 19042  015D72  D7D9               	goto	u8180
 19043  015D74                     l8632:
 19044                           
 19045                           ;mbmc.c: 29:  if (slow) {
 19046                           ;stkvar	_slow @ sp[(-4)+-6]
 19047  015D74  0EF6               	movlw	-10
 19048  015D76  50E3               	movf	plusw1,w,c
 19049  015D78  B4D8               	btfsc	status,2,c
 19050  015D7A  D008               	goto	l8636
 19051                           
 19052                           ;mbmc.c: 30:   lp_speed = 0.033;
 19053  015D7C  0E02               	movlw	2
 19054  015D7E  6E3A               	movwf	(btemp+8)^0,c
 19055  015D80  0E2B               	movlw	43
 19056  015D82  6E3B               	movwf	(btemp+9)^0,c
 19057  015D84  0E07               	movlw	7
 19058  015D86  6E3C               	movwf	(btemp+10)^0,c
 19059  015D88  0E3D               	movlw	61
 19060  015D8A  D007               	goto	L19
 19061  015D8C                     l8636:
 19062                           
 19063                           ;mbmc.c: 32:   lp_speed = 0.125;
 19064  015D8C  0E00               	movlw	0
 19065  015D8E  6E3A               	movwf	(btemp+8)^0,c
 19066  015D90  0E00               	movlw	0
 19067  015D92  6E3B               	movwf	(btemp+9)^0,c
 19068  015D94  0E00               	movlw	0
 19069  015D96  6E3C               	movwf	(btemp+10)^0,c
 19070  015D98  0E3E               	movlw	62
 19071  015D9A                     L19:
 19072  015D9A  6E3D               	movwf	(btemp+11)^0,c
 19073                           
 19074                           ;stkvar	_lp_speed @ sp[(-4)+0]
 19075  015D9C  0EFC               	movlw	-4
 19076  015D9E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19077  015DA4  0EFD               	movlw	-3
 19078  015DA6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19079  015DAC  0EFE               	movlw	-2
 19080  015DAE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19081  015DB4  0EFF               	movlw	-1
 19082  015DB6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19083                           
 19084                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 19085                           ;stkvar	_bn @ sp[(-4)+-5]
 19086  015DBC  0EF7               	movlw	-9
 19087  015DBE  50E3               	movf	plusw1,w,c
 19088  015DC0  0D04               	mullw	4
 19089  015DC2  0E00               	movlw	low lp_filter@smooth
 19090  015DC4  24F3               	addwf	243,w,c
 19091  015DC6  6ED9               	movwf	fsr2l,c
 19092  015DC8  0E03               	movlw	high lp_filter@smooth
 19093  015DCA  20F4               	addwfc	prodh,w,c
 19094  015DCC  6EDA               	movwf	fsr2h,c
 19095  015DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 19096  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 19097  015DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 19098  015DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 19099                           
 19100                           ;stkvar	_lp_speed @ sp[(-8)+0]
 19101  015DE6  0EF8               	movlw	-8
 19102  015DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19103  015DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19104  015DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19105  015DFA  006F FF8F FFE6     	movff	plusw1,postinc1
 19106                           
 19107                           ;stkvar	_bn @ sp[(-12)+-5]
 19108  015E00  0EEF               	movlw	-17
 19109  015E02  50E3               	movf	plusw1,w,c
 19110  015E04  0D04               	mullw	4
 19111  015E06  0E00               	movlw	low lp_filter@smooth
 19112  015E08  24F3               	addwf	243,w,c
 19113  015E0A  6ED9               	movwf	fsr2l,c
 19114  015E0C  0E03               	movlw	high lp_filter@smooth
 19115  015E0E  20F4               	addwfc	prodh,w,c
 19116  015E10  6EDA               	movwf	fsr2h,c
 19117  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 19118  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 19119  015E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 19120  015E24  006F FF7B FFE6     	movff	postinc2,postinc1
 19121                           
 19122                           ;stkvar	_new @ sp[(-16)+-4]
 19123  015E2A  0EEC               	movlw	-20
 19124  015E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 19125  015E32  006F FF8F FFE6     	movff	plusw1,postinc1
 19126  015E38  006F FF8F FFE6     	movff	plusw1,postinc1
 19127  015E3E  006F FF8F FFE6     	movff	plusw1,postinc1
 19128  015E44  ECA3  F0BE         	call	___flsub	;wreg free
 19129  015E48  0060  F0CB  FFE6   	movff	btemp,postinc1
 19130  015E4E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19131  015E54  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19132  015E5A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19133  015E60  ECC1  F08E         	call	___flmul	;wreg free
 19134  015E64  0060  F0CB  FFE6   	movff	btemp,postinc1
 19135  015E6A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19136  015E70  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19137  015E76  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19138  015E7C  ECD6  F092         	call	___fladd	;wreg free
 19139                           
 19140                           ;stkvar	_bn @ sp[(-4)+-5]
 19141  015E80  0EF7               	movlw	-9
 19142  015E82  50E3               	movf	plusw1,w,c
 19143  015E84  0D04               	mullw	4
 19144  015E86  0E00               	movlw	low lp_filter@smooth
 19145  015E88  24F3               	addwf	243,w,c
 19146  015E8A  6ED9               	movwf	fsr2l,c
 19147  015E8C  0E03               	movlw	high lp_filter@smooth
 19148  015E8E  20F4               	addwfc	prodh,w,c
 19149  015E90  6EDA               	movwf	fsr2h,c
 19150  015E92  0060  F0CB  FFDE   	movff	btemp,postinc2
 19151  015E98  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 19152  015E9E  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 19153  015EA4  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 19154  015EAA  52DD               	movf	postdec2,f,c
 19155  015EAC  52DD               	movf	postdec2,f,c
 19156  015EAE  006F FF78  F032    	movff	postinc2,btemp
 19157  015EB4  006F FF78  F033    	movff	postinc2,btemp+1
 19158  015EBA  006F FF78  F034    	movff	postinc2,btemp+2
 19159  015EC0  006F FF78  F035    	movff	postinc2,btemp+3
 19160  015EC6                     l1694:
 19161                           
 19162                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 19163  015EC6  0EF6               	movlw	246
 19164  015EC8  26E1               	addwf	fsr1l,f,c
 19165  015ECA  0EFF               	movlw	255
 19166  015ECC  22E2               	addwfc	fsr1h,f,c
 19167  015ECE  0012               	return		;funcret
 19168  015ED0                     __end_of_lp_filter:
 19169                           	opt callstack 0
 19170                           
 19171 ;; *************** function ___flsub *****************
 19172 ;; Defined at:
 19173 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19174 ;; Parameters:    Size  Location     Type
 19175 ;;  b               4  [STACK] float 
 19176 ;;  a               4  [STACK] float 
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;		None
 19179 ;; Return value:  Size  Location     Type
 19180 ;;                  4  [STACK] float 
 19181 ;; Registers used:
 19182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19183 ;; Tracked objects:
 19184 ;;		On entry : 0/39
 19185 ;;		On exit  : 0/0
 19186 ;;		Unchanged: 0/0
 19187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19192 ;;Total ram usage:        0 bytes
 19193 ;; Hardware stack levels used:    1
 19194 ;; Hardware stack levels required when called:    7
 19195 ;; This function calls:
 19196 ;;		___fladd
 19197 ;; This function is called by:
 19198 ;;		_conv_raw_result
 19199 ;;		_lp_filter
 19200 ;;		_calc_model_data
 19201 ;;		_efgtoa
 19202 ;; This function uses a reentrant model
 19203 ;;
 19204                           
 19205                           	psect	text84
 19206  017D46                     __ptext84:
 19207                           	opt callstack 0
 19208  017D46                     ___flsub:
 19209                           	opt callstack 16
 19210                           
 19211                           ;stkvar	_a @ sp[(0)+-8]
 19212                           
 19213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19214                           ;incstack = 0
 19215  017D46  0EFB               	movlw	-5
 19216  017D48  7EE3               	btg	plusw1,7,c
 19217                           
 19218                           ;stkvar	_a @ sp[(0)+-8]
 19219  017D4A  0EF8               	movlw	-8
 19220  017D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 19221  017D52  006F FF8F FFE6     	movff	plusw1,postinc1
 19222  017D58  006F FF8F FFE6     	movff	plusw1,postinc1
 19223  017D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 19224                           
 19225                           ;stkvar	_b @ sp[(-4)+-4]
 19226  017D64  0EF8               	movlw	-8
 19227  017D66  006F FF8F FFE6     	movff	plusw1,postinc1
 19228  017D6C  006F FF8F FFE6     	movff	plusw1,postinc1
 19229  017D72  006F FF8F FFE6     	movff	plusw1,postinc1
 19230  017D78  006F FF8F FFE6     	movff	plusw1,postinc1
 19231  017D7E  ECD6  F092         	call	___fladd	;wreg free
 19232                           
 19233                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19234  017D82  0EF8               	movlw	248
 19235  017D84  26E1               	addwf	fsr1l,f,c
 19236  017D86  0EFF               	movlw	255
 19237  017D88  22E2               	addwfc	fsr1h,f,c
 19238  017D8A  0012               	return		;funcret
 19239  017D8C                     __end_of___flsub:
 19240                           	opt callstack 0
 19241                           
 19242 ;; *************** function ___fladd *****************
 19243 ;; Defined at:
 19244 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19245 ;; Parameters:    Size  Location     Type
 19246 ;;  b               4  [STACK] float 
 19247 ;;  a               4  [STACK] float 
 19248 ;; Auto vars:     Size  Location     Type
 19249 ;;  grs             1  [STACK] unsigned char 
 19250 ;;  bexp            1  [STACK] unsigned char 
 19251 ;;  aexp            1  [STACK] unsigned char 
 19252 ;;  signs           1  [STACK] unsigned char 
 19253 ;; Return value:  Size  Location     Type
 19254 ;;                  4  [STACK] unsigned char 
 19255 ;; Registers used:
 19256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19257 ;; Tracked objects:
 19258 ;;		On entry : 0/5
 19259 ;;		On exit  : 0/0
 19260 ;;		Unchanged: 0/0
 19261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19266 ;;Total ram usage:        0 bytes
 19267 ;; Hardware stack levels used:    1
 19268 ;; Hardware stack levels required when called:    6
 19269 ;; This function calls:
 19270 ;;		Nothing
 19271 ;; This function is called by:
 19272 ;;		_lp_filter
 19273 ;;		_calc_model_data
 19274 ;;		_efgtoa
 19275 ;;		___flsub
 19276 ;; This function uses a reentrant model
 19277 ;;
 19278                           
 19279                           	psect	text85
 19280  0125AC                     __ptext85:
 19281                           	opt callstack 0
 19282  0125AC                     ___fladd:
 19283                           	opt callstack 0
 19284                           
 19285                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19286  0125AC  52E6               	movf	postinc1,f,c
 19287  0125AE  52E6               	movf	postinc1,f,c
 19288  0125B0  52E6               	movf	postinc1,f,c
 19289  0125B2  52E6               	movf	postinc1,f,c
 19290                           
 19291                           ;stkvar	_b @ sp[(-4)+-4]
 19292                           
 19293                           ;incstack = 0
 19294  0125B4  0EFB               	movlw	251
 19295  0125B6  24E1               	addwf	fsr1l,w,c
 19296  0125B8  6ED9               	movwf	fsr2l,c
 19297  0125BA  0EFF               	movlw	255
 19298  0125BC  20E2               	addwfc	fsr1h,w,c
 19299  0125BE  6EDA               	movwf	fsr2h,c
 19300  0125C0  50DF               	movf	indf2,w,c
 19301  0125C2  6E3D               	movwf	(btemp+11)^0,c
 19302  0125C4  0E80               	movlw	128
 19303  0125C6  163D               	andwf	(btemp+11)^0,f,c
 19304                           
 19305                           ;stkvar	_signs @ sp[(-4)+3]
 19306  0125C8  0EFF               	movlw	-1
 19307  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19308                           
 19309                           ;stkvar	_b @ sp[(-4)+-4]
 19310  0125D0  0EFB               	movlw	251
 19311  0125D2  24E1               	addwf	fsr1l,w,c
 19312  0125D4  6ED9               	movwf	fsr2l,c
 19313  0125D6  0EFF               	movlw	255
 19314  0125D8  20E2               	addwfc	fsr1h,w,c
 19315  0125DA  6EDA               	movwf	fsr2h,c
 19316  0125DC  50DF               	movf	indf2,w,c
 19317  0125DE  6E3D               	movwf	(btemp+11)^0,c
 19318  0125E0  90D8               	bcf	status,0,c
 19319  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 19320  0125E4  6E3C               	movwf	(btemp+10)^0,c
 19321                           
 19322                           ;stkvar	_bexp @ sp[(-4)+1]
 19323  0125E6  0EFD               	movlw	-3
 19324  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19325                           
 19326                           ;stkvar	_b @ sp[(-4)+-4]
 19327  0125EE  0EFA               	movlw	250
 19328  0125F0  24E1               	addwf	fsr1l,w,c
 19329  0125F2  6ED9               	movwf	fsr2l,c
 19330  0125F4  0EFF               	movlw	255
 19331  0125F6  20E2               	addwfc	fsr1h,w,c
 19332  0125F8  6EDA               	movwf	fsr2h,c
 19333  0125FA  AEDF               	btfss	indf2,7,c
 19334  0125FC  D002               	goto	l6148
 19335                           
 19336                           ;stkvar	_bexp @ sp[(-4)+1]
 19337  0125FE  0EFD               	movlw	-3
 19338  012600  80E3               	bsf	plusw1,0,c
 19339  012602                     l6148:
 19340                           
 19341                           ;stkvar	_bexp @ sp[(-4)+1]
 19342  012602  0EFD               	movlw	-3
 19343  012604  50E3               	movf	plusw1,w,c
 19344  012606  B4D8               	btfsc	status,2,c
 19345  012608  D027               	goto	l6158
 19346                           
 19347                           ;stkvar	_bexp @ sp[(-4)+1]
 19348  01260A  0EFD               	movlw	-3
 19349  01260C  28E3               	incf	plusw1,w,c
 19350  01260E  A4D8               	btfss	status,2,c
 19351  012610  D018               	goto	l6154
 19352  012612  0E00               	movlw	0
 19353  012614  6E3A               	movwf	(btemp+8)^0,c
 19354  012616  0E00               	movlw	0
 19355  012618  6E3B               	movwf	(btemp+9)^0,c
 19356  01261A  0E00               	movlw	0
 19357  01261C  6E3C               	movwf	(btemp+10)^0,c
 19358  01261E  0E00               	movlw	0
 19359  012620  6E3D               	movwf	(btemp+11)^0,c
 19360                           
 19361                           ;stkvar	_b @ sp[(-4)+-4]
 19362  012622  0EF8               	movlw	-8
 19363  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19364  01262A  0EF9               	movlw	-7
 19365  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19366  012632  0EFA               	movlw	-6
 19367  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19368  01263A  0EFB               	movlw	-5
 19369  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19370  012642                     l6154:
 19371                           
 19372                           ;stkvar	_b @ sp[(-4)+-4]
 19373  012642  0EFA               	movlw	-6
 19374  012644  8EE3               	bsf	plusw1,7,c
 19375                           
 19376                           ;stkvar	_b @ sp[(-4)+-4]
 19377  012646  0EFB               	movlw	251
 19378  012648  24E1               	addwf	fsr1l,w,c
 19379  01264A  6ED9               	movwf	fsr2l,c
 19380  01264C  0EFF               	movlw	255
 19381  01264E  20E2               	addwfc	fsr1h,w,c
 19382  012650  6EDA               	movwf	fsr2h,c
 19383  012652  0E00               	movlw	0
 19384  012654  6EDF               	movwf	indf2,c
 19385  012656  D018               	goto	l6160
 19386  012658                     l6158:
 19387  012658  0E00               	movlw	0
 19388  01265A  6E3A               	movwf	(btemp+8)^0,c
 19389  01265C  0E00               	movlw	0
 19390  01265E  6E3B               	movwf	(btemp+9)^0,c
 19391  012660  0E00               	movlw	0
 19392  012662  6E3C               	movwf	(btemp+10)^0,c
 19393  012664  0E00               	movlw	0
 19394  012666  6E3D               	movwf	(btemp+11)^0,c
 19395                           
 19396                           ;stkvar	_b @ sp[(-4)+-4]
 19397  012668  0EF8               	movlw	-8
 19398  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19399  012670  0EF9               	movlw	-7
 19400  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19401  012678  0EFA               	movlw	-6
 19402  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19403  012680  0EFB               	movlw	-5
 19404  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19405  012688                     l6160:
 19406                           
 19407                           ;stkvar	_a @ sp[(-4)+-8]
 19408  012688  0EF7               	movlw	247
 19409  01268A  24E1               	addwf	fsr1l,w,c
 19410  01268C  6ED9               	movwf	fsr2l,c
 19411  01268E  0EFF               	movlw	255
 19412  012690  20E2               	addwfc	fsr1h,w,c
 19413  012692  6EDA               	movwf	fsr2h,c
 19414  012694  50DF               	movf	indf2,w,c
 19415  012696  6E3D               	movwf	(btemp+11)^0,c
 19416  012698  0E80               	movlw	128
 19417  01269A  163D               	andwf	(btemp+11)^0,f,c
 19418                           
 19419                           ;stkvar	_aexp @ sp[(-4)+2]
 19420  01269C  0EFE               	movlw	-2
 19421  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19422                           
 19423                           ;stkvar	_signs @ sp[(-4)+3]
 19424                           ;stkvar	_aexp @ sp[(-4)+2]
 19425  0126A4  50E1               	movf	fsr1l,w,c
 19426  0126A6  0FFE               	addlw	-2
 19427  0126A8  6ED9               	movwf	fsr2l,c
 19428  0126AA  50E2               	movf	fsr1h,w,c
 19429  0126AC  6EDA               	movwf	fsr2h,c
 19430  0126AE  0EFF               	movlw	255
 19431  0126B0  22DA               	addwfc	fsr2h,f,c
 19432  0126B2  0EFF               	movlw	-1
 19433  0126B4  50E3               	movf	plusw1,w,c
 19434  0126B6  18DE               	xorwf	postinc2,w,c
 19435  0126B8  B4D8               	btfsc	status,2,c
 19436  0126BA  D002               	goto	l6166
 19437                           
 19438                           ;stkvar	_signs @ sp[(-4)+3]
 19439  0126BC  0EFF               	movlw	-1
 19440  0126BE  8CE3               	bsf	plusw1,6,c
 19441  0126C0                     l6166:
 19442                           
 19443                           ;stkvar	_a @ sp[(-4)+-8]
 19444  0126C0  0EF7               	movlw	247
 19445  0126C2  24E1               	addwf	fsr1l,w,c
 19446  0126C4  6ED9               	movwf	fsr2l,c
 19447  0126C6  0EFF               	movlw	255
 19448  0126C8  20E2               	addwfc	fsr1h,w,c
 19449  0126CA  6EDA               	movwf	fsr2h,c
 19450  0126CC  50DF               	movf	indf2,w,c
 19451  0126CE  6E3D               	movwf	(btemp+11)^0,c
 19452  0126D0  90D8               	bcf	status,0,c
 19453  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 19454  0126D4  6E3C               	movwf	(btemp+10)^0,c
 19455                           
 19456                           ;stkvar	_aexp @ sp[(-4)+2]
 19457  0126D6  0EFE               	movlw	-2
 19458  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19459                           
 19460                           ;stkvar	_a @ sp[(-4)+-8]
 19461  0126DE  0EF6               	movlw	246
 19462  0126E0  24E1               	addwf	fsr1l,w,c
 19463  0126E2  6ED9               	movwf	fsr2l,c
 19464  0126E4  0EFF               	movlw	255
 19465  0126E6  20E2               	addwfc	fsr1h,w,c
 19466  0126E8  6EDA               	movwf	fsr2h,c
 19467  0126EA  AEDF               	btfss	indf2,7,c
 19468  0126EC  D002               	goto	l6172
 19469                           
 19470                           ;stkvar	_aexp @ sp[(-4)+2]
 19471  0126EE  0EFE               	movlw	-2
 19472  0126F0  80E3               	bsf	plusw1,0,c
 19473  0126F2                     l6172:
 19474                           
 19475                           ;stkvar	_aexp @ sp[(-4)+2]
 19476  0126F2  0EFE               	movlw	-2
 19477  0126F4  50E3               	movf	plusw1,w,c
 19478  0126F6  B4D8               	btfsc	status,2,c
 19479  0126F8  D027               	goto	l6182
 19480                           
 19481                           ;stkvar	_aexp @ sp[(-4)+2]
 19482  0126FA  0EFE               	movlw	-2
 19483  0126FC  28E3               	incf	plusw1,w,c
 19484  0126FE  A4D8               	btfss	status,2,c
 19485  012700  D018               	goto	l6178
 19486  012702  0E00               	movlw	0
 19487  012704  6E3A               	movwf	(btemp+8)^0,c
 19488  012706  0E00               	movlw	0
 19489  012708  6E3B               	movwf	(btemp+9)^0,c
 19490  01270A  0E00               	movlw	0
 19491  01270C  6E3C               	movwf	(btemp+10)^0,c
 19492  01270E  0E00               	movlw	0
 19493  012710  6E3D               	movwf	(btemp+11)^0,c
 19494                           
 19495                           ;stkvar	_a @ sp[(-4)+-8]
 19496  012712  0EF4               	movlw	-12
 19497  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19498  01271A  0EF5               	movlw	-11
 19499  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19500  012722  0EF6               	movlw	-10
 19501  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19502  01272A  0EF7               	movlw	-9
 19503  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19504  012732                     l6178:
 19505                           
 19506                           ;stkvar	_a @ sp[(-4)+-8]
 19507  012732  0EF6               	movlw	-10
 19508  012734  8EE3               	bsf	plusw1,7,c
 19509                           
 19510                           ;stkvar	_a @ sp[(-4)+-8]
 19511  012736  0EF7               	movlw	247
 19512  012738  24E1               	addwf	fsr1l,w,c
 19513  01273A  6ED9               	movwf	fsr2l,c
 19514  01273C  0EFF               	movlw	255
 19515  01273E  20E2               	addwfc	fsr1h,w,c
 19516  012740  6EDA               	movwf	fsr2h,c
 19517  012742  0E00               	movlw	0
 19518  012744  6EDF               	movwf	indf2,c
 19519  012746  D018               	goto	l6184
 19520  012748                     l6182:
 19521  012748  0E00               	movlw	0
 19522  01274A  6E3A               	movwf	(btemp+8)^0,c
 19523  01274C  0E00               	movlw	0
 19524  01274E  6E3B               	movwf	(btemp+9)^0,c
 19525  012750  0E00               	movlw	0
 19526  012752  6E3C               	movwf	(btemp+10)^0,c
 19527  012754  0E00               	movlw	0
 19528  012756  6E3D               	movwf	(btemp+11)^0,c
 19529                           
 19530                           ;stkvar	_a @ sp[(-4)+-8]
 19531  012758  0EF4               	movlw	-12
 19532  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19533  012760  0EF5               	movlw	-11
 19534  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19535  012768  0EF6               	movlw	-10
 19536  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19537  012770  0EF7               	movlw	-9
 19538  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19539  012778                     l6184:
 19540                           
 19541                           ;stkvar	_bexp @ sp[(-4)+1]
 19542                           ;stkvar	_aexp @ sp[(-4)+2]
 19543  012778  50E1               	movf	fsr1l,w,c
 19544  01277A  0FFE               	addlw	-2
 19545  01277C  6ED9               	movwf	fsr2l,c
 19546  01277E  50E2               	movf	fsr1h,w,c
 19547  012780  6EDA               	movwf	fsr2h,c
 19548  012782  0EFF               	movlw	255
 19549  012784  22DA               	addwfc	fsr2h,f,c
 19550  012786  0EFD               	movlw	-3
 19551  012788  50E3               	movf	plusw1,w,c
 19552  01278A  5CDE               	subwf	postinc2,w,c
 19553  01278C  B0D8               	btfsc	status,0,c
 19554  01278E  D0A4               	goto	l6220
 19555                           
 19556                           ;stkvar	_signs @ sp[(-4)+3]
 19557  012790  0EFF               	movlw	-1
 19558  012792  ACE3               	btfss	plusw1,6,c
 19559  012794  D002               	goto	l6190
 19560                           
 19561                           ;stkvar	_signs @ sp[(-4)+3]
 19562  012796  0EFF               	movlw	-1
 19563  012798  7EE3               	btg	plusw1,7,c
 19564  01279A                     l6190:
 19565                           
 19566                           ;stkvar	_bexp @ sp[(-4)+1]
 19567                           ;stkvar	_grs @ sp[(-4)+0]
 19568  01279A  0EFD               	movlw	-3
 19569  01279C  006F FF8C  F032    	movff	plusw1,btemp
 19570  0127A2  0EFC               	movlw	-4
 19571  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19572                           
 19573                           ;stkvar	_aexp @ sp[(-4)+2]
 19574                           ;stkvar	_bexp @ sp[(-4)+1]
 19575  0127AA  0EFE               	movlw	-2
 19576  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 19577  0127B2  0EFD               	movlw	-3
 19578  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19579                           
 19580                           ;stkvar	_grs @ sp[(-4)+0]
 19581                           ;stkvar	_aexp @ sp[(-4)+2]
 19582  0127BA  0EFC               	movlw	-4
 19583  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 19584  0127C2  0EFE               	movlw	-2
 19585  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19586                           
 19587                           ;stkvar	_b @ sp[(-4)+-4]
 19588                           ;stkvar	_grs @ sp[(-4)+0]
 19589  0127CA  0EF8               	movlw	-8
 19590  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 19591  0127D2  0EFC               	movlw	-4
 19592  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19593                           
 19594                           ;stkvar	_a @ sp[(-4)+-8]
 19595                           ;stkvar	_b @ sp[(-4)+-4]
 19596  0127DA  0EF4               	movlw	-12
 19597  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 19598  0127E2  0EF8               	movlw	-8
 19599  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19600                           
 19601                           ;stkvar	_grs @ sp[(-4)+0]
 19602                           ;stkvar	_a @ sp[(-4)+-8]
 19603  0127EA  0EFC               	movlw	-4
 19604  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 19605  0127F2  0EF4               	movlw	-12
 19606  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19607                           
 19608                           ;stkvar	_b @ sp[(-4)+-4]
 19609  0127FA  0EF9               	movlw	249
 19610  0127FC  24E1               	addwf	fsr1l,w,c
 19611  0127FE  6ED9               	movwf	fsr2l,c
 19612  012800  0EFF               	movlw	255
 19613  012802  20E2               	addwfc	fsr1h,w,c
 19614  012804  6EDA               	movwf	fsr2h,c
 19615  012806  50DF               	movf	indf2,w,c
 19616  012808  6E3D               	movwf	(btemp+11)^0,c
 19617                           
 19618                           ;stkvar	_grs @ sp[(-4)+0]
 19619  01280A  0EFC               	movlw	-4
 19620  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19621                           
 19622                           ;stkvar	_a @ sp[(-4)+-8]
 19623  012812  0EF5               	movlw	245
 19624  012814  24E1               	addwf	fsr1l,w,c
 19625  012816  6ED9               	movwf	fsr2l,c
 19626  012818  0EFF               	movlw	255
 19627  01281A  20E2               	addwfc	fsr1h,w,c
 19628  01281C  6EDA               	movwf	fsr2h,c
 19629                           
 19630                           ;stkvar	_b @ sp[(-4)+-4]
 19631  01281E  0EF9               	movlw	249
 19632  012820  24E1               	addwf	fsr1l,w,c
 19633  012822  6EE9               	movwf	fsr0l,c
 19634  012824  0EFF               	movlw	255
 19635  012826  20E2               	addwfc	fsr1h,w,c
 19636  012828  6EEA               	movwf	fsr0h,c
 19637  01282A  006F FF7F FFEF     	movff	indf2,indf0
 19638                           
 19639                           ;stkvar	_grs @ sp[(-4)+0]
 19640                           ;stkvar	_a @ sp[(-4)+-8]
 19641  012830  0EF5               	movlw	245
 19642  012832  24E1               	addwf	fsr1l,w,c
 19643  012834  6ED9               	movwf	fsr2l,c
 19644  012836  0EFF               	movlw	255
 19645  012838  20E2               	addwfc	fsr1h,w,c
 19646  01283A  6EDA               	movwf	fsr2h,c
 19647  01283C  0EFC               	movlw	-4
 19648  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 19649                           
 19650                           ;stkvar	_b @ sp[(-4)+-4]
 19651  012844  0EFA               	movlw	250
 19652  012846  24E1               	addwf	fsr1l,w,c
 19653  012848  6ED9               	movwf	fsr2l,c
 19654  01284A  0EFF               	movlw	255
 19655  01284C  20E2               	addwfc	fsr1h,w,c
 19656  01284E  6EDA               	movwf	fsr2h,c
 19657  012850  50DF               	movf	indf2,w,c
 19658  012852  6E3D               	movwf	(btemp+11)^0,c
 19659                           
 19660                           ;stkvar	_grs @ sp[(-4)+0]
 19661  012854  0EFC               	movlw	-4
 19662  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19663                           
 19664                           ;stkvar	_a @ sp[(-4)+-8]
 19665  01285C  0EF6               	movlw	246
 19666  01285E  24E1               	addwf	fsr1l,w,c
 19667  012860  6ED9               	movwf	fsr2l,c
 19668  012862  0EFF               	movlw	255
 19669  012864  20E2               	addwfc	fsr1h,w,c
 19670  012866  6EDA               	movwf	fsr2h,c
 19671                           
 19672                           ;stkvar	_b @ sp[(-4)+-4]
 19673  012868  0EFA               	movlw	250
 19674  01286A  24E1               	addwf	fsr1l,w,c
 19675  01286C  6EE9               	movwf	fsr0l,c
 19676  01286E  0EFF               	movlw	255
 19677  012870  20E2               	addwfc	fsr1h,w,c
 19678  012872  6EEA               	movwf	fsr0h,c
 19679  012874  006F FF7F FFEF     	movff	indf2,indf0
 19680                           
 19681                           ;stkvar	_grs @ sp[(-4)+0]
 19682                           ;stkvar	_a @ sp[(-4)+-8]
 19683  01287A  0EF6               	movlw	246
 19684  01287C  24E1               	addwf	fsr1l,w,c
 19685  01287E  6ED9               	movwf	fsr2l,c
 19686  012880  0EFF               	movlw	255
 19687  012882  20E2               	addwfc	fsr1h,w,c
 19688  012884  6EDA               	movwf	fsr2h,c
 19689  012886  0EFC               	movlw	-4
 19690  012888  006F FF8F FFDF     	movff	plusw1,indf2
 19691                           
 19692                           ;stkvar	_b @ sp[(-4)+-4]
 19693  01288E  0EFB               	movlw	251
 19694  012890  24E1               	addwf	fsr1l,w,c
 19695  012892  6ED9               	movwf	fsr2l,c
 19696  012894  0EFF               	movlw	255
 19697  012896  20E2               	addwfc	fsr1h,w,c
 19698  012898  6EDA               	movwf	fsr2h,c
 19699  01289A  50DF               	movf	indf2,w,c
 19700  01289C  6E3D               	movwf	(btemp+11)^0,c
 19701                           
 19702                           ;stkvar	_grs @ sp[(-4)+0]
 19703  01289E  0EFC               	movlw	-4
 19704  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19705                           
 19706                           ;stkvar	_a @ sp[(-4)+-8]
 19707  0128A6  0EF7               	movlw	247
 19708  0128A8  24E1               	addwf	fsr1l,w,c
 19709  0128AA  6ED9               	movwf	fsr2l,c
 19710  0128AC  0EFF               	movlw	255
 19711  0128AE  20E2               	addwfc	fsr1h,w,c
 19712  0128B0  6EDA               	movwf	fsr2h,c
 19713                           
 19714                           ;stkvar	_b @ sp[(-4)+-4]
 19715  0128B2  0EFB               	movlw	251
 19716  0128B4  24E1               	addwf	fsr1l,w,c
 19717  0128B6  6EE9               	movwf	fsr0l,c
 19718  0128B8  0EFF               	movlw	255
 19719  0128BA  20E2               	addwfc	fsr1h,w,c
 19720  0128BC  6EEA               	movwf	fsr0h,c
 19721  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 19722                           
 19723                           ;stkvar	_grs @ sp[(-4)+0]
 19724                           ;stkvar	_a @ sp[(-4)+-8]
 19725  0128C4  0EF7               	movlw	247
 19726  0128C6  24E1               	addwf	fsr1l,w,c
 19727  0128C8  6ED9               	movwf	fsr2l,c
 19728  0128CA  0EFF               	movlw	255
 19729  0128CC  20E2               	addwfc	fsr1h,w,c
 19730  0128CE  6EDA               	movwf	fsr2h,c
 19731  0128D0  0EFC               	movlw	-4
 19732  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 19733  0128D8                     l6220:
 19734                           
 19735                           ;stkvar	_grs @ sp[(-4)+0]
 19736  0128D8  0EFC               	movlw	-4
 19737  0128DA  6AE3               	clrf	plusw1,c
 19738                           
 19739                           ;stkvar	_aexp @ sp[(-4)+2]
 19740  0128DC  0EFE               	movlw	-2
 19741  0128DE  50E3               	movf	plusw1,w,c
 19742  0128E0  6E3C               	movwf	(btemp+10)^0,c
 19743  0128E2  6A3D               	clrf	(btemp+11)^0,c
 19744                           
 19745                           ;stkvar	_bexp @ sp[(-4)+1]
 19746  0128E4  0EFD               	movlw	-3
 19747  0128E6  50E3               	movf	plusw1,w,c
 19748  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 19749  0128EA  0E00               	movlw	0
 19750  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 19751  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 19752  0128F0  D062               	goto	l6244
 19753  0128F2  503D               	movf	(btemp+11)^0,w,c
 19754  0128F4  E104               	bnz	u4610
 19755  0128F6  0E1A               	movlw	26
 19756  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 19757  0128FA  A0D8               	btfss	status,0,c
 19758  0128FC  D05C               	goto	l6244
 19759  0128FE                     u4610:
 19760                           
 19761                           ;stkvar	_b @ sp[(-4)+-4]
 19762  0128FE  0EF8               	movlw	-8
 19763  012900  50E3               	movf	plusw1,w,c
 19764  012902  E10A               	bnz	u4621
 19765  012904  0EF9               	movlw	-7
 19766  012906  50E3               	movf	plusw1,w,c
 19767  012908  E107               	bnz	u4621
 19768  01290A  0EFA               	movlw	-6
 19769  01290C  50E3               	movf	plusw1,w,c
 19770  01290E  E104               	bnz	u4621
 19771  012910  0EFB               	movlw	-5
 19772  012912  50E3               	movf	plusw1,w,c
 19773  012914  B4D8               	btfsc	status,2,c
 19774  012916  D003               	goto	u4620
 19775  012918                     u4621:
 19776  012918  6A3D               	clrf	(btemp+11)^0,c
 19777  01291A  2A3D               	incf	(btemp+11)^0,f,c
 19778  01291C  D001               	goto	u4638
 19779  01291E                     u4620:
 19780  01291E  6A3D               	clrf	(btemp+11)^0,c
 19781  012920                     u4638:
 19782                           
 19783                           ;stkvar	_grs @ sp[(-4)+0]
 19784  012920  0EFC               	movlw	-4
 19785  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19786                           
 19787                           ;stkvar	_b @ sp[(-4)+-4]
 19788  012928  0EF8               	movlw	-8
 19789  01292A  6AE3               	clrf	plusw1,c
 19790  01292C  0EF9               	movlw	-7
 19791  01292E  6AE3               	clrf	plusw1,c
 19792  012930  0EFA               	movlw	-6
 19793  012932  6AE3               	clrf	plusw1,c
 19794  012934  0EFB               	movlw	-5
 19795  012936  6AE3               	clrf	plusw1,c
 19796                           
 19797                           ;stkvar	_aexp @ sp[(-4)+2]
 19798                           ;stkvar	_bexp @ sp[(-4)+1]
 19799  012938  0EFE               	movlw	-2
 19800  01293A  006F FF8C  F032    	movff	plusw1,btemp
 19801  012940  0EFD               	movlw	-3
 19802  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 19803  012948  D042               	goto	u4670
 19804  01294A                     l6230:
 19805                           
 19806                           ;stkvar	_grs @ sp[(-4)+0]
 19807  01294A  0EFC               	movlw	-4
 19808  01294C  A0E3               	btfss	plusw1,0,c
 19809  01294E  D00D               	goto	l6234
 19810                           
 19811                           ;stkvar	_grs @ sp[(-4)+0]
 19812  012950  0EFC               	movlw	-4
 19813  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 19814  012958  90D8               	bcf	status,0,c
 19815  01295A  323D               	rrcf	(btemp+11)^0,f,c
 19816  01295C  0E01               	movlw	1
 19817  01295E  123D               	iorwf	(btemp+11)^0,f,c
 19818                           
 19819                           ;stkvar	_grs @ sp[(-4)+0]
 19820  012960  0EFC               	movlw	-4
 19821  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19822  012968  D009               	goto	l6236
 19823  01296A                     l6234:
 19824                           
 19825                           ;stkvar	_grs @ sp[(-4)+0]
 19826  01296A  50E1               	movf	fsr1l,w,c
 19827  01296C  0FFC               	addlw	-4
 19828  01296E  6ED9               	movwf	fsr2l,c
 19829  012970  50E2               	movf	fsr1h,w,c
 19830  012972  6EDA               	movwf	fsr2h,c
 19831  012974  0EFF               	movlw	255
 19832  012976  22DA               	addwfc	fsr2h,f,c
 19833  012978  90D8               	bcf	status,0,c
 19834  01297A  32DF               	rrcf	indf2,f,c
 19835  01297C                     l6236:
 19836                           
 19837                           ;stkvar	_b @ sp[(-4)+-4]
 19838  01297C  0EF8               	movlw	-8
 19839  01297E  A0E3               	btfss	plusw1,0,c
 19840  012980  D002               	goto	l6240
 19841                           
 19842                           ;stkvar	_grs @ sp[(-4)+0]
 19843  012982  0EFC               	movlw	-4
 19844  012984  8EE3               	bsf	plusw1,7,c
 19845  012986                     l6240:
 19846  012986  0E01               	movlw	1
 19847  012988  6E3D               	movwf	(btemp+11)^0,c
 19848                           
 19849                           ;stkvar	_b @ sp[(-4)+-4]
 19850  01298A  50E1               	movf	fsr1l,w,c
 19851  01298C  0FF8               	addlw	-8
 19852  01298E  6ED9               	movwf	fsr2l,c
 19853  012990  50E2               	movf	fsr1h,w,c
 19854  012992  6EDA               	movwf	fsr2h,c
 19855  012994  0EFF               	movlw	255
 19856  012996  22DA               	addwfc	fsr2h,f,c
 19857  012998  283D               	incf	(btemp+11)^0,w,c
 19858  01299A  52DE               	movf	postinc2,f,c
 19859  01299C  D008               	goto	u4660
 19860  01299E                     u4665:
 19861  01299E  52DE               	movf	postinc2,f,c
 19862  0129A0  90D8               	bcf	status,0,c
 19863  0129A2  BEDC               	btfsc	preinc2,7,c
 19864  0129A4  80D8               	bsf	status,0,c
 19865  0129A6  32DD               	rrcf	postdec2,f,c
 19866  0129A8  32DD               	rrcf	postdec2,f,c
 19867  0129AA  32DD               	rrcf	postdec2,f,c
 19868  0129AC  32DE               	rrcf	postinc2,f,c
 19869  0129AE                     u4660:
 19870  0129AE  2EE8               	decfsz	wreg,f,c
 19871  0129B0  D7F6               	goto	u4665
 19872                           
 19873                           ;stkvar	_bexp @ sp[(-4)+1]
 19874  0129B2  0EFD               	movlw	-3
 19875  0129B4  2AE3               	incf	plusw1,f,c
 19876  0129B6                     l6244:
 19877                           
 19878                           ;stkvar	_aexp @ sp[(-4)+2]
 19879                           ;stkvar	_bexp @ sp[(-4)+1]
 19880  0129B6  50E1               	movf	fsr1l,w,c
 19881  0129B8  0FFD               	addlw	-3
 19882  0129BA  6ED9               	movwf	fsr2l,c
 19883  0129BC  50E2               	movf	fsr1h,w,c
 19884  0129BE  6EDA               	movwf	fsr2h,c
 19885  0129C0  0EFF               	movlw	255
 19886  0129C2  22DA               	addwfc	fsr2h,f,c
 19887  0129C4  0EFE               	movlw	-2
 19888  0129C6  50E3               	movf	plusw1,w,c
 19889  0129C8  5CDE               	subwf	postinc2,w,c
 19890  0129CA  A0D8               	btfss	status,0,c
 19891  0129CC  D7BE               	goto	l6230
 19892  0129CE                     u4670:
 19893                           
 19894                           ;stkvar	_signs @ sp[(-4)+3]
 19895  0129CE  0EFF               	movlw	-1
 19896  0129D0  BCE3               	btfsc	plusw1,6,c
 19897  0129D2  D066               	goto	l6272
 19898                           
 19899                           ;stkvar	_bexp @ sp[(-4)+1]
 19900  0129D4  0EFD               	movlw	-3
 19901  0129D6  50E3               	movf	plusw1,w,c
 19902  0129D8  B4D8               	btfsc	status,2,c
 19903  0129DA  D0F2               	goto	u4770
 19904                           
 19905                           ;stkvar	_a @ sp[(-4)+-8]
 19906                           ;stkvar	_b @ sp[(-4)+-4]
 19907  0129DC  0EF8               	movlw	-8
 19908  0129DE  50E3               	movf	plusw1,w,c
 19909  0129E0  6E32               	movwf	btemp^0,c
 19910  0129E2  0EF4               	movlw	-12
 19911  0129E4  50E3               	movf	plusw1,w,c
 19912  0129E6  2632               	addwf	btemp^0,f,c
 19913  0129E8  0EF8               	movlw	-8
 19914  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 19915  0129F0  0EF9               	movlw	-7
 19916  0129F2  50E3               	movf	plusw1,w,c
 19917  0129F4  6E32               	movwf	btemp^0,c
 19918  0129F6  0EF5               	movlw	-11
 19919  0129F8  50E3               	movf	plusw1,w,c
 19920  0129FA  2232               	addwfc	btemp^0,f,c
 19921  0129FC  0EF9               	movlw	-7
 19922  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19923  012A04  0EFA               	movlw	-6
 19924  012A06  50E3               	movf	plusw1,w,c
 19925  012A08  6E32               	movwf	btemp^0,c
 19926  012A0A  0EF6               	movlw	-10
 19927  012A0C  50E3               	movf	plusw1,w,c
 19928  012A0E  2232               	addwfc	btemp^0,f,c
 19929  012A10  0EFA               	movlw	-6
 19930  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 19931  012A18  0EFB               	movlw	-5
 19932  012A1A  50E3               	movf	plusw1,w,c
 19933  012A1C  6E32               	movwf	btemp^0,c
 19934  012A1E  0EF7               	movlw	-9
 19935  012A20  50E3               	movf	plusw1,w,c
 19936  012A22  2232               	addwfc	btemp^0,f,c
 19937  012A24  0EFB               	movlw	-5
 19938  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 19939                           
 19940                           ;stkvar	_b @ sp[(-4)+-4]
 19941  012A2C  0EFB               	movlw	-5
 19942  012A2E  A0E3               	btfss	plusw1,0,c
 19943  012A30  D101               	goto	u4810
 19944                           
 19945                           ;stkvar	_grs @ sp[(-4)+0]
 19946  012A32  0EFC               	movlw	-4
 19947  012A34  A0E3               	btfss	plusw1,0,c
 19948  012A36  D00D               	goto	l6262
 19949                           
 19950                           ;stkvar	_grs @ sp[(-4)+0]
 19951  012A38  0EFC               	movlw	-4
 19952  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 19953  012A40  90D8               	bcf	status,0,c
 19954  012A42  323D               	rrcf	(btemp+11)^0,f,c
 19955  012A44  0E01               	movlw	1
 19956  012A46  123D               	iorwf	(btemp+11)^0,f,c
 19957                           
 19958                           ;stkvar	_grs @ sp[(-4)+0]
 19959  012A48  0EFC               	movlw	-4
 19960  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19961  012A50  D009               	goto	l6264
 19962  012A52                     l6262:
 19963                           
 19964                           ;stkvar	_grs @ sp[(-4)+0]
 19965  012A52  50E1               	movf	fsr1l,w,c
 19966  012A54  0FFC               	addlw	-4
 19967  012A56  6ED9               	movwf	fsr2l,c
 19968  012A58  50E2               	movf	fsr1h,w,c
 19969  012A5A  6EDA               	movwf	fsr2h,c
 19970  012A5C  0EFF               	movlw	255
 19971  012A5E  22DA               	addwfc	fsr2h,f,c
 19972  012A60  90D8               	bcf	status,0,c
 19973  012A62  32DF               	rrcf	indf2,f,c
 19974  012A64                     l6264:
 19975                           
 19976                           ;stkvar	_b @ sp[(-4)+-4]
 19977  012A64  0EF8               	movlw	-8
 19978  012A66  A0E3               	btfss	plusw1,0,c
 19979  012A68  D002               	goto	l6268
 19980                           
 19981                           ;stkvar	_grs @ sp[(-4)+0]
 19982  012A6A  0EFC               	movlw	-4
 19983  012A6C  8EE3               	bsf	plusw1,7,c
 19984  012A6E                     l6268:
 19985  012A6E  0E01               	movlw	1
 19986  012A70  6E3D               	movwf	(btemp+11)^0,c
 19987                           
 19988                           ;stkvar	_b @ sp[(-4)+-4]
 19989  012A72  50E1               	movf	fsr1l,w,c
 19990  012A74  0FF8               	addlw	-8
 19991  012A76  6ED9               	movwf	fsr2l,c
 19992  012A78  50E2               	movf	fsr1h,w,c
 19993  012A7A  6EDA               	movwf	fsr2h,c
 19994  012A7C  0EFF               	movlw	255
 19995  012A7E  22DA               	addwfc	fsr2h,f,c
 19996  012A80  283D               	incf	(btemp+11)^0,w,c
 19997  012A82  52DE               	movf	postinc2,f,c
 19998  012A84  D008               	goto	u4730
 19999  012A86                     u4735:
 20000  012A86  52DE               	movf	postinc2,f,c
 20001  012A88  90D8               	bcf	status,0,c
 20002  012A8A  BEDC               	btfsc	preinc2,7,c
 20003  012A8C  80D8               	bsf	status,0,c
 20004  012A8E  32DD               	rrcf	postdec2,f,c
 20005  012A90  32DD               	rrcf	postdec2,f,c
 20006  012A92  32DD               	rrcf	postdec2,f,c
 20007  012A94  32DE               	rrcf	postinc2,f,c
 20008  012A96                     u4730:
 20009  012A96  2EE8               	decfsz	wreg,f,c
 20010  012A98  D7F6               	goto	u4735
 20011                           
 20012                           ;stkvar	_bexp @ sp[(-4)+1]
 20013  012A9A  0EFD               	movlw	-3
 20014  012A9C  2AE3               	incf	plusw1,f,c
 20015  012A9E  D0CA               	goto	u4810
 20016  012AA0                     l6272:
 20017                           
 20018                           ;stkvar	_a @ sp[(-4)+-8]
 20019                           ;stkvar	_b @ sp[(-4)+-4]
 20020  012AA0  50E1               	movf	fsr1l,w,c
 20021  012AA2  0FF8               	addlw	-8
 20022  012AA4  6ED9               	movwf	fsr2l,c
 20023  012AA6  50E2               	movf	fsr1h,w,c
 20024  012AA8  6EDA               	movwf	fsr2h,c
 20025  012AAA  0EFF               	movlw	255
 20026  012AAC  22DA               	addwfc	fsr2h,f,c
 20027  012AAE  0EF4               	movlw	-12
 20028  012AB0  50E3               	movf	plusw1,w,c
 20029  012AB2  5CDE               	subwf	postinc2,w,c
 20030  012AB4  0EF5               	movlw	-11
 20031  012AB6  50E3               	movf	plusw1,w,c
 20032  012AB8  58DE               	subwfb	postinc2,w,c
 20033  012ABA  0EF6               	movlw	-10
 20034  012ABC  50E3               	movf	plusw1,w,c
 20035  012ABE  58DE               	subwfb	postinc2,w,c
 20036  012AC0  50DE               	movf	postinc2,w,c
 20037  012AC2  0A80               	xorlw	128
 20038  012AC4  6E32               	movwf	btemp^0,c
 20039  012AC6  0EF7               	movlw	-9
 20040  012AC8  50E3               	movf	plusw1,w,c
 20041  012ACA  0A80               	xorlw	128
 20042  012ACC  5832               	subwfb	btemp^0,w,c
 20043  012ACE  B0D8               	btfsc	status,0,c
 20044  012AD0  D053               	goto	l6284
 20045                           
 20046                           ;stkvar	_b @ sp[(-4)+-4]
 20047                           ;stkvar	_a @ sp[(-4)+-8]
 20048  012AD2  0EF4               	movlw	-12
 20049  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 20050  012ADA  0EF5               	movlw	-11
 20051  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 20052  012AE2  0EF6               	movlw	-10
 20053  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20054  012AEA  0EF7               	movlw	-9
 20055  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20056  012AF2  0EF8               	movlw	-8
 20057  012AF4  50E3               	movf	plusw1,w,c
 20058  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 20059  012AF8  0EF9               	movlw	-7
 20060  012AFA  50E3               	movf	plusw1,w,c
 20061  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 20062  012AFE  0EFA               	movlw	-6
 20063  012B00  50E3               	movf	plusw1,w,c
 20064  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 20065  012B04  0EFB               	movlw	-5
 20066  012B06  50E3               	movf	plusw1,w,c
 20067  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 20068  012B0A  0EFF               	movlw	255
 20069  012B0C  243A               	addwf	(btemp+8)^0,w,c
 20070  012B0E  6E36               	movwf	(btemp+4)^0,c
 20071  012B10  0EFF               	movlw	255
 20072  012B12  203B               	addwfc	(btemp+9)^0,w,c
 20073  012B14  6E37               	movwf	(btemp+5)^0,c
 20074  012B16  0EFF               	movlw	255
 20075  012B18  203C               	addwfc	(btemp+10)^0,w,c
 20076  012B1A  6E38               	movwf	(btemp+6)^0,c
 20077  012B1C  0EFF               	movlw	255
 20078  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 20079  012B20  6E39               	movwf	(btemp+7)^0,c
 20080                           
 20081                           ;stkvar	_b @ sp[(-4)+-4]
 20082  012B22  0EF8               	movlw	-8
 20083  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20084  012B2A  0EF9               	movlw	-7
 20085  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20086  012B32  0EFA               	movlw	-6
 20087  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20088  012B3A  0EFB               	movlw	-5
 20089  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20090                           
 20091                           ;stkvar	_signs @ sp[(-4)+3]
 20092  012B42  0EFF               	movlw	-1
 20093  012B44  7EE3               	btg	plusw1,7,c
 20094                           
 20095                           ;stkvar	_grs @ sp[(-4)+0]
 20096  012B46  0EFC               	movlw	-4
 20097  012B48  50E3               	movf	plusw1,w,c
 20098  012B4A  0800               	sublw	0
 20099  012B4C  6E3D               	movwf	(btemp+11)^0,c
 20100                           
 20101                           ;stkvar	_grs @ sp[(-4)+0]
 20102  012B4E  0EFC               	movlw	-4
 20103  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20104                           
 20105                           ;stkvar	_grs @ sp[(-4)+0]
 20106  012B56  0EFC               	movlw	-4
 20107  012B58  50E3               	movf	plusw1,w,c
 20108  012B5A  A4D8               	btfss	status,2,c
 20109  012B5C  D020               	goto	l6286
 20110                           
 20111                           ;stkvar	_b @ sp[(-4)+-4]
 20112  012B5E  50E1               	movf	fsr1l,w,c
 20113  012B60  0FF8               	addlw	-8
 20114  012B62  6ED9               	movwf	fsr2l,c
 20115  012B64  50E2               	movf	fsr1h,w,c
 20116  012B66  6EDA               	movwf	fsr2h,c
 20117  012B68  0EFF               	movlw	255
 20118  012B6A  22DA               	addwfc	fsr2h,f,c
 20119  012B6C  2ADE               	incf	postinc2,f,c
 20120  012B6E  0E00               	movlw	0
 20121  012B70  22DE               	addwfc	postinc2,f,c
 20122  012B72  22DE               	addwfc	postinc2,f,c
 20123  012B74  22DE               	addwfc	postinc2,f,c
 20124  012B76  D013               	goto	l6286
 20125  012B78                     l6284:
 20126                           
 20127                           ;stkvar	_a @ sp[(-4)+-8]
 20128                           ;stkvar	_b @ sp[(-4)+-4]
 20129  012B78  50E1               	movf	fsr1l,w,c
 20130  012B7A  0FF8               	addlw	-8
 20131  012B7C  6ED9               	movwf	fsr2l,c
 20132  012B7E  50E2               	movf	fsr1h,w,c
 20133  012B80  6EDA               	movwf	fsr2h,c
 20134  012B82  0EFF               	movlw	255
 20135  012B84  22DA               	addwfc	fsr2h,f,c
 20136  012B86  0EF4               	movlw	-12
 20137  012B88  50E3               	movf	plusw1,w,c
 20138  012B8A  5EDE               	subwf	postinc2,f,c
 20139  012B8C  0EF5               	movlw	-11
 20140  012B8E  50E3               	movf	plusw1,w,c
 20141  012B90  5ADE               	subwfb	postinc2,f,c
 20142  012B92  0EF6               	movlw	-10
 20143  012B94  50E3               	movf	plusw1,w,c
 20144  012B96  5ADE               	subwfb	postinc2,f,c
 20145  012B98  0EF7               	movlw	-9
 20146  012B9A  50E3               	movf	plusw1,w,c
 20147  012B9C  5ADE               	subwfb	postinc2,f,c
 20148  012B9E                     l6286:
 20149                           
 20150                           ;stkvar	_b @ sp[(-4)+-4]
 20151  012B9E  0EF8               	movlw	-8
 20152  012BA0  50E3               	movf	plusw1,w,c
 20153  012BA2  E145               	bnz	l6308
 20154  012BA4  0EF9               	movlw	-7
 20155  012BA6  50E3               	movf	plusw1,w,c
 20156  012BA8  E142               	bnz	l6308
 20157  012BAA  0EFA               	movlw	-6
 20158  012BAC  50E3               	movf	plusw1,w,c
 20159  012BAE  E13F               	bnz	l6308
 20160  012BB0  0EFB               	movlw	-5
 20161  012BB2  50E3               	movf	plusw1,w,c
 20162  012BB4  A4D8               	btfss	status,2,c
 20163  012BB6  D03B               	goto	l6308
 20164                           
 20165                           ;stkvar	_grs @ sp[(-4)+0]
 20166  012BB8  0EFC               	movlw	-4
 20167  012BBA  50E3               	movf	plusw1,w,c
 20168  012BBC  A4D8               	btfss	status,2,c
 20169  012BBE  D037               	goto	l6308
 20170  012BC0                     u4770:
 20171  012BC0  0E00               	movlw	0
 20172  012BC2  6E32               	movwf	btemp^0,c
 20173  012BC4  0E00               	movlw	0
 20174  012BC6  6E33               	movwf	(btemp+1)^0,c
 20175  012BC8  0E00               	movlw	0
 20176  012BCA  6E34               	movwf	(btemp+2)^0,c
 20177  012BCC  0E00               	movlw	0
 20178  012BCE  6E35               	movwf	(btemp+3)^0,c
 20179  012BD0  D0C6               	goto	l2584
 20180  012BD2                     l6294:
 20181                           
 20182                           ;stkvar	_b @ sp[(-4)+-4]
 20183  012BD2  90D8               	bcf	status,0,c
 20184  012BD4  0EF8               	movlw	-8
 20185  012BD6  36E3               	rlcf	plusw1,f,c
 20186  012BD8  0EF9               	movlw	-7
 20187  012BDA  36E3               	rlcf	plusw1,f,c
 20188  012BDC  0EFA               	movlw	-6
 20189  012BDE  36E3               	rlcf	plusw1,f,c
 20190  012BE0  0EFB               	movlw	-5
 20191  012BE2  36E3               	rlcf	plusw1,f,c
 20192                           
 20193                           ;stkvar	_grs @ sp[(-4)+0]
 20194  012BE4  0EFC               	movlw	-4
 20195  012BE6  AEE3               	btfss	plusw1,7,c
 20196  012BE8  D002               	goto	l2596
 20197                           
 20198                           ;stkvar	_b @ sp[(-4)+-4]
 20199  012BEA  0EF8               	movlw	-8
 20200  012BEC  80E3               	bsf	plusw1,0,c
 20201  012BEE                     l2596:
 20202                           
 20203                           ;stkvar	_grs @ sp[(-4)+0]
 20204  012BEE  0EFC               	movlw	-4
 20205  012BF0  A0E3               	btfss	plusw1,0,c
 20206  012BF2  D00E               	goto	l6302
 20207                           
 20208                           ;stkvar	_grs @ sp[(-4)+0]
 20209  012BF4  0EFC               	movlw	-4
 20210  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20211  012BFC  90D8               	bcf	status,0,c
 20212  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 20213  012C00  6E3C               	movwf	(btemp+10)^0,c
 20214  012C02  0E01               	movlw	1
 20215  012C04  123C               	iorwf	(btemp+10)^0,f,c
 20216                           
 20217                           ;stkvar	_grs @ sp[(-4)+0]
 20218  012C06  0EFC               	movlw	-4
 20219  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20220  012C0E  D009               	goto	l6304
 20221  012C10                     l6302:
 20222                           
 20223                           ;stkvar	_grs @ sp[(-4)+0]
 20224  012C10  50E1               	movf	fsr1l,w,c
 20225  012C12  0FFC               	addlw	-4
 20226  012C14  6ED9               	movwf	fsr2l,c
 20227  012C16  50E2               	movf	fsr1h,w,c
 20228  012C18  6EDA               	movwf	fsr2h,c
 20229  012C1A  0EFF               	movlw	255
 20230  012C1C  22DA               	addwfc	fsr2h,f,c
 20231  012C1E  90D8               	bcf	status,0,c
 20232  012C20  36DF               	rlcf	indf2,f,c
 20233  012C22                     l6304:
 20234                           
 20235                           ;stkvar	_bexp @ sp[(-4)+1]
 20236  012C22  0EFD               	movlw	-3
 20237  012C24  50E3               	movf	plusw1,w,c
 20238  012C26  B4D8               	btfsc	status,2,c
 20239  012C28  D002               	goto	l6308
 20240                           
 20241                           ;stkvar	_bexp @ sp[(-4)+1]
 20242  012C2A  0EFD               	movlw	-3
 20243  012C2C  06E3               	decf	plusw1,f,c
 20244  012C2E                     l6308:
 20245                           
 20246                           ;stkvar	_b @ sp[(-4)+-4]
 20247  012C2E  0EFA               	movlw	-6
 20248  012C30  AEE3               	btfss	plusw1,7,c
 20249  012C32  D7CF               	goto	l6294
 20250  012C34                     u4810:
 20251                           
 20252                           ;stkvar	_aexp @ sp[(-4)+2]
 20253  012C34  0EFE               	movlw	-2
 20254  012C36  6AE3               	clrf	plusw1,c
 20255                           
 20256                           ;stkvar	_grs @ sp[(-4)+0]
 20257  012C38  0EFC               	movlw	-4
 20258  012C3A  AEE3               	btfss	plusw1,7,c
 20259  012C3C  D00F               	goto	l6322
 20260                           
 20261                           ;stkvar	_grs @ sp[(-4)+0]
 20262  012C3E  0EFC               	movlw	-4
 20263  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20264  012C46  0E7F               	movlw	127
 20265  012C48  163D               	andwf	(btemp+11)^0,f,c
 20266  012C4A  B4D8               	btfsc	status,2,c
 20267  012C4C  D004               	goto	l6318
 20268  012C4E                     u4830:
 20269                           
 20270                           ;stkvar	_aexp @ sp[(-4)+2]
 20271  012C4E  0EFE               	movlw	-2
 20272  012C50  6AE3               	clrf	plusw1,c
 20273  012C52  2AE3               	incf	plusw1,f,c
 20274  012C54  D003               	goto	l6322
 20275  012C56                     l6318:
 20276                           
 20277                           ;stkvar	_b @ sp[(-4)+-4]
 20278  012C56  0EF8               	movlw	-8
 20279  012C58  B0E3               	btfsc	plusw1,0,c
 20280  012C5A  D7F9               	goto	u4830
 20281  012C5C                     l6322:
 20282                           
 20283                           ;stkvar	_aexp @ sp[(-4)+2]
 20284  012C5C  0EFE               	movlw	-2
 20285  012C5E  50E3               	movf	plusw1,w,c
 20286  012C60  B4D8               	btfsc	status,2,c
 20287  012C62  D02B               	goto	l6334
 20288                           
 20289                           ;stkvar	_b @ sp[(-4)+-4]
 20290  012C64  50E1               	movf	fsr1l,w,c
 20291  012C66  0FF8               	addlw	-8
 20292  012C68  6ED9               	movwf	fsr2l,c
 20293  012C6A  50E2               	movf	fsr1h,w,c
 20294  012C6C  6EDA               	movwf	fsr2h,c
 20295  012C6E  0EFF               	movlw	255
 20296  012C70  22DA               	addwfc	fsr2h,f,c
 20297  012C72  2ADE               	incf	postinc2,f,c
 20298  012C74  0E00               	movlw	0
 20299  012C76  22DE               	addwfc	postinc2,f,c
 20300  012C78  22DE               	addwfc	postinc2,f,c
 20301  012C7A  22DE               	addwfc	postinc2,f,c
 20302                           
 20303                           ;stkvar	_b @ sp[(-4)+-4]
 20304  012C7C  0EFB               	movlw	-5
 20305  012C7E  A0E3               	btfss	plusw1,0,c
 20306  012C80  D01C               	goto	l6334
 20307  012C82  0E01               	movlw	1
 20308  012C84  6E3D               	movwf	(btemp+11)^0,c
 20309                           
 20310                           ;stkvar	_b @ sp[(-4)+-4]
 20311  012C86  50E1               	movf	fsr1l,w,c
 20312  012C88  0FF8               	addlw	-8
 20313  012C8A  6ED9               	movwf	fsr2l,c
 20314  012C8C  50E2               	movf	fsr1h,w,c
 20315  012C8E  6EDA               	movwf	fsr2h,c
 20316  012C90  0EFF               	movlw	255
 20317  012C92  22DA               	addwfc	fsr2h,f,c
 20318  012C94  283D               	incf	(btemp+11)^0,w,c
 20319  012C96  52DE               	movf	postinc2,f,c
 20320  012C98  D008               	goto	u4870
 20321  012C9A                     u4875:
 20322  012C9A  52DE               	movf	postinc2,f,c
 20323  012C9C  90D8               	bcf	status,0,c
 20324  012C9E  BEDC               	btfsc	preinc2,7,c
 20325  012CA0  80D8               	bsf	status,0,c
 20326  012CA2  32DD               	rrcf	postdec2,f,c
 20327  012CA4  32DD               	rrcf	postdec2,f,c
 20328  012CA6  32DD               	rrcf	postdec2,f,c
 20329  012CA8  32DE               	rrcf	postinc2,f,c
 20330  012CAA                     u4870:
 20331  012CAA  2EE8               	decfsz	wreg,f,c
 20332  012CAC  D7F6               	goto	u4875
 20333                           
 20334                           ;stkvar	_bexp @ sp[(-4)+1]
 20335  012CAE  0EFD               	movlw	-3
 20336  012CB0  28E3               	incf	plusw1,w,c
 20337  012CB2  B4D8               	btfsc	status,2,c
 20338  012CB4  D002               	goto	l6334
 20339                           
 20340                           ;stkvar	_bexp @ sp[(-4)+1]
 20341  012CB6  0EFD               	movlw	-3
 20342  012CB8  2AE3               	incf	plusw1,f,c
 20343  012CBA                     l6334:
 20344                           
 20345                           ;stkvar	_bexp @ sp[(-4)+1]
 20346  012CBA  0EFD               	movlw	-3
 20347  012CBC  28E3               	incf	plusw1,w,c
 20348  012CBE  B4D8               	btfsc	status,2,c
 20349  012CC0  D004               	goto	u4900
 20350                           
 20351                           ;stkvar	_bexp @ sp[(-4)+1]
 20352  012CC2  0EFD               	movlw	-3
 20353  012CC4  50E3               	movf	plusw1,w,c
 20354  012CC6  A4D8               	btfss	status,2,c
 20355  012CC8  D00E               	goto	l6344
 20356  012CCA                     u4900:
 20357                           
 20358                           ;stkvar	_b @ sp[(-4)+-4]
 20359  012CCA  0EF8               	movlw	-8
 20360  012CCC  6AE3               	clrf	plusw1,c
 20361  012CCE  0EF9               	movlw	-7
 20362  012CD0  6AE3               	clrf	plusw1,c
 20363  012CD2  0EFA               	movlw	-6
 20364  012CD4  6AE3               	clrf	plusw1,c
 20365  012CD6  0EFB               	movlw	-5
 20366  012CD8  6AE3               	clrf	plusw1,c
 20367                           
 20368                           ;stkvar	_bexp @ sp[(-4)+1]
 20369  012CDA  0EFD               	movlw	-3
 20370  012CDC  50E3               	movf	plusw1,w,c
 20371  012CDE  A4D8               	btfss	status,2,c
 20372  012CE0  D002               	goto	l6344
 20373                           
 20374                           ;stkvar	_signs @ sp[(-4)+3]
 20375  012CE2  0EFF               	movlw	-1
 20376  012CE4  6AE3               	clrf	plusw1,c
 20377  012CE6                     l6344:
 20378                           
 20379                           ;stkvar	_bexp @ sp[(-4)+1]
 20380  012CE6  0EFD               	movlw	-3
 20381  012CE8  A0E3               	btfss	plusw1,0,c
 20382  012CEA  D009               	goto	l6348
 20383                           
 20384                           ;stkvar	_b @ sp[(-4)+-4]
 20385  012CEC  0EFA               	movlw	250
 20386  012CEE  24E1               	addwf	fsr1l,w,c
 20387  012CF0  6ED9               	movwf	fsr2l,c
 20388  012CF2  0EFF               	movlw	255
 20389  012CF4  20E2               	addwfc	fsr1h,w,c
 20390  012CF6  6EDA               	movwf	fsr2h,c
 20391  012CF8  0E00               	movlw	0
 20392  012CFA  8EDB               	bsf	plusw2,7,c
 20393  012CFC  D008               	goto	l6350
 20394  012CFE                     l6348:
 20395                           
 20396                           ;stkvar	_b @ sp[(-4)+-4]
 20397  012CFE  0EFA               	movlw	250
 20398  012D00  24E1               	addwf	fsr1l,w,c
 20399  012D02  6ED9               	movwf	fsr2l,c
 20400  012D04  0EFF               	movlw	255
 20401  012D06  20E2               	addwfc	fsr1h,w,c
 20402  012D08  6EDA               	movwf	fsr2h,c
 20403  012D0A  0E7F               	movlw	127
 20404  012D0C  16DF               	andwf	indf2,f,c
 20405  012D0E                     l6350:
 20406                           
 20407                           ;stkvar	_b @ sp[(-4)+-4]
 20408  012D0E  0EFB               	movlw	251
 20409  012D10  24E1               	addwf	fsr1l,w,c
 20410  012D12  6ED9               	movwf	fsr2l,c
 20411  012D14  0EFF               	movlw	255
 20412  012D16  20E2               	addwfc	fsr1h,w,c
 20413  012D18  6EDA               	movwf	fsr2h,c
 20414                           
 20415                           ;stkvar	_bexp @ sp[(-4)+1]
 20416  012D1A  0EFD               	movlw	-3
 20417  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20418  012D22  90D8               	bcf	status,0,c
 20419  012D24  303D               	rrcf	(btemp+11)^0,w,c
 20420  012D26  6EDF               	movwf	indf2,c
 20421                           
 20422                           ;stkvar	_signs @ sp[(-4)+3]
 20423  012D28  0EFF               	movlw	-1
 20424  012D2A  AEE3               	btfss	plusw1,7,c
 20425  012D2C  D008               	goto	l6356
 20426                           
 20427                           ;stkvar	_b @ sp[(-4)+-4]
 20428  012D2E  0EFB               	movlw	251
 20429  012D30  24E1               	addwf	fsr1l,w,c
 20430  012D32  6ED9               	movwf	fsr2l,c
 20431  012D34  0EFF               	movlw	255
 20432  012D36  20E2               	addwfc	fsr1h,w,c
 20433  012D38  6EDA               	movwf	fsr2h,c
 20434  012D3A  0E00               	movlw	0
 20435  012D3C  8EDB               	bsf	plusw2,7,c
 20436  012D3E                     l6356:
 20437                           
 20438                           ;stkvar	_b @ sp[(-4)+-4]
 20439  012D3E  0EF8               	movlw	-8
 20440  012D40  006F FF8C  F032    	movff	plusw1,btemp
 20441  012D46  0EF9               	movlw	-7
 20442  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 20443  012D4E  0EFA               	movlw	-6
 20444  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 20445  012D56  0EFB               	movlw	-5
 20446  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 20447  012D5E                     l2584:
 20448                           
 20449                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20450  012D5E  0EF4               	movlw	244
 20451  012D60  26E1               	addwf	fsr1l,f,c
 20452  012D62  0EFF               	movlw	255
 20453  012D64  22E2               	addwfc	fsr1h,f,c
 20454  012D66  0012               	return		;funcret
 20455  012D68                     __end_of___fladd:
 20456                           	opt callstack 0
 20457                           
 20458 ;; *************** function ___flmul *****************
 20459 ;; Defined at:
 20460 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 20461 ;; Parameters:    Size  Location     Type
 20462 ;;  b               4  [STACK] unsigned char 
 20463 ;;  a               4  [STACK] unsigned char 
 20464 ;; Auto vars:     Size  Location     Type
 20465 ;;  prod            4  [STACK] struct .
 20466 ;;  grs             4  [STACK] unsigned long 
 20467 ;;  temp            2  [STACK] struct .
 20468 ;;  bexp            1  [STACK] unsigned char 
 20469 ;;  aexp            1  [STACK] unsigned char 
 20470 ;;  sign            1  [STACK] unsigned char 
 20471 ;; Return value:  Size  Location     Type
 20472 ;;                  4  [STACK] unsigned char 
 20473 ;; Registers used:
 20474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20475 ;; Tracked objects:
 20476 ;;		On entry : 0/39
 20477 ;;		On exit  : 0/0
 20478 ;;		Unchanged: 0/0
 20479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20484 ;;Total ram usage:        0 bytes
 20485 ;; Hardware stack levels used:    1
 20486 ;; Hardware stack levels required when called:    6
 20487 ;; This function calls:
 20488 ;;		Nothing
 20489 ;; This function is called by:
 20490 ;;		_conv_raw_result
 20491 ;;		_lp_filter
 20492 ;;		_calc_model_data
 20493 ;;		_efgtoa
 20494 ;; This function uses a reentrant model
 20495 ;;
 20496                           
 20497                           	psect	text86
 20498  011D82                     __ptext86:
 20499                           	opt callstack 0
 20500  011D82                     ___flmul:
 20501                           	opt callstack 0
 20502                           
 20503                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20504  011D82  0E0D               	movlw	13
 20505  011D84  26E1               	addwf	fsr1l,f,c
 20506  011D86  0E00               	movlw	0
 20507  011D88  22E2               	addwfc	fsr1h,f,c
 20508                           
 20509                           ;stkvar	_b @ sp[(-13)+-4]
 20510                           
 20511                           ;incstack = 0
 20512  011D8A  0EF2               	movlw	242
 20513  011D8C  24E1               	addwf	fsr1l,w,c
 20514  011D8E  6ED9               	movwf	fsr2l,c
 20515  011D90  0EFF               	movlw	255
 20516  011D92  20E2               	addwfc	fsr1h,w,c
 20517  011D94  6EDA               	movwf	fsr2h,c
 20518  011D96  50DF               	movf	indf2,w,c
 20519  011D98  6E3D               	movwf	(btemp+11)^0,c
 20520  011D9A  0E80               	movlw	128
 20521  011D9C  163D               	andwf	(btemp+11)^0,f,c
 20522                           
 20523                           ;stkvar	_sign @ sp[(-13)+12]
 20524  011D9E  0EFF               	movlw	-1
 20525  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20526                           
 20527                           ;stkvar	_b @ sp[(-13)+-4]
 20528  011DA6  0EF2               	movlw	242
 20529  011DA8  24E1               	addwf	fsr1l,w,c
 20530  011DAA  6ED9               	movwf	fsr2l,c
 20531  011DAC  0EFF               	movlw	255
 20532  011DAE  20E2               	addwfc	fsr1h,w,c
 20533  011DB0  6EDA               	movwf	fsr2h,c
 20534  011DB2  50DF               	movf	indf2,w,c
 20535  011DB4  6E3D               	movwf	(btemp+11)^0,c
 20536  011DB6  90D8               	bcf	status,0,c
 20537  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 20538  011DBA  6E3C               	movwf	(btemp+10)^0,c
 20539                           
 20540                           ;stkvar	_bexp @ sp[(-13)+10]
 20541  011DBC  0EFD               	movlw	-3
 20542  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20543                           
 20544                           ;stkvar	_b @ sp[(-13)+-4]
 20545  011DC4  0EF1               	movlw	241
 20546  011DC6  24E1               	addwf	fsr1l,w,c
 20547  011DC8  6ED9               	movwf	fsr2l,c
 20548  011DCA  0EFF               	movlw	255
 20549  011DCC  20E2               	addwfc	fsr1h,w,c
 20550  011DCE  6EDA               	movwf	fsr2h,c
 20551  011DD0  AEDF               	btfss	indf2,7,c
 20552  011DD2  D002               	goto	l6740
 20553                           
 20554                           ;stkvar	_bexp @ sp[(-13)+10]
 20555  011DD4  0EFD               	movlw	-3
 20556  011DD6  80E3               	bsf	plusw1,0,c
 20557  011DD8                     l6740:
 20558                           
 20559                           ;stkvar	_bexp @ sp[(-13)+10]
 20560  011DD8  0EFD               	movlw	-3
 20561  011DDA  50E3               	movf	plusw1,w,c
 20562  011DDC  B4D8               	btfsc	status,2,c
 20563  011DDE  D01F               	goto	l6748
 20564                           
 20565                           ;stkvar	_bexp @ sp[(-13)+10]
 20566  011DE0  0EFD               	movlw	-3
 20567  011DE2  28E3               	incf	plusw1,w,c
 20568  011DE4  A4D8               	btfss	status,2,c
 20569  011DE6  D018               	goto	l6746
 20570  011DE8  0E00               	movlw	0
 20571  011DEA  6E3A               	movwf	(btemp+8)^0,c
 20572  011DEC  0E00               	movlw	0
 20573  011DEE  6E3B               	movwf	(btemp+9)^0,c
 20574  011DF0  0E00               	movlw	0
 20575  011DF2  6E3C               	movwf	(btemp+10)^0,c
 20576  011DF4  0E00               	movlw	0
 20577  011DF6  6E3D               	movwf	(btemp+11)^0,c
 20578                           
 20579                           ;stkvar	_b @ sp[(-13)+-4]
 20580  011DF8  0EEF               	movlw	-17
 20581  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20582  011E00  0EF0               	movlw	-16
 20583  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20584  011E08  0EF1               	movlw	-15
 20585  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20586  011E10  0EF2               	movlw	-14
 20587  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20588  011E18                     l6746:
 20589                           
 20590                           ;stkvar	_b @ sp[(-13)+-4]
 20591  011E18  0EF1               	movlw	-15
 20592  011E1A  8EE3               	bsf	plusw1,7,c
 20593  011E1C  D018               	goto	l6750
 20594  011E1E                     l6748:
 20595  011E1E  0E00               	movlw	0
 20596  011E20  6E3A               	movwf	(btemp+8)^0,c
 20597  011E22  0E00               	movlw	0
 20598  011E24  6E3B               	movwf	(btemp+9)^0,c
 20599  011E26  0E00               	movlw	0
 20600  011E28  6E3C               	movwf	(btemp+10)^0,c
 20601  011E2A  0E00               	movlw	0
 20602  011E2C  6E3D               	movwf	(btemp+11)^0,c
 20603                           
 20604                           ;stkvar	_b @ sp[(-13)+-4]
 20605  011E2E  0EEF               	movlw	-17
 20606  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20607  011E36  0EF0               	movlw	-16
 20608  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20609  011E3E  0EF1               	movlw	-15
 20610  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20611  011E46  0EF2               	movlw	-14
 20612  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20613  011E4E                     l6750:
 20614                           
 20615                           ;stkvar	_a @ sp[(-13)+-8]
 20616  011E4E  0EEE               	movlw	238
 20617  011E50  24E1               	addwf	fsr1l,w,c
 20618  011E52  6ED9               	movwf	fsr2l,c
 20619  011E54  0EFF               	movlw	255
 20620  011E56  20E2               	addwfc	fsr1h,w,c
 20621  011E58  6EDA               	movwf	fsr2h,c
 20622  011E5A  50DF               	movf	indf2,w,c
 20623  011E5C  6E3D               	movwf	(btemp+11)^0,c
 20624  011E5E  0E80               	movlw	128
 20625  011E60  163D               	andwf	(btemp+11)^0,f,c
 20626                           
 20627                           ;stkvar	_sign @ sp[(-13)+12]
 20628  011E62  50E1               	movf	fsr1l,w,c
 20629  011E64  0FFF               	addlw	-1
 20630  011E66  6ED9               	movwf	fsr2l,c
 20631  011E68  50E2               	movf	fsr1h,w,c
 20632  011E6A  6EDA               	movwf	fsr2h,c
 20633  011E6C  0EFF               	movlw	255
 20634  011E6E  22DA               	addwfc	fsr2h,f,c
 20635  011E70  503D               	movf	(btemp+11)^0,w,c
 20636  011E72  1ADF               	xorwf	indf2,f,c
 20637                           
 20638                           ;stkvar	_a @ sp[(-13)+-8]
 20639  011E74  0EEE               	movlw	238
 20640  011E76  24E1               	addwf	fsr1l,w,c
 20641  011E78  6ED9               	movwf	fsr2l,c
 20642  011E7A  0EFF               	movlw	255
 20643  011E7C  20E2               	addwfc	fsr1h,w,c
 20644  011E7E  6EDA               	movwf	fsr2h,c
 20645  011E80  50DF               	movf	indf2,w,c
 20646  011E82  6E3D               	movwf	(btemp+11)^0,c
 20647  011E84  90D8               	bcf	status,0,c
 20648  011E86  343D               	rlcf	(btemp+11)^0,w,c
 20649  011E88  6E3C               	movwf	(btemp+10)^0,c
 20650                           
 20651                           ;stkvar	_aexp @ sp[(-13)+11]
 20652  011E8A  0EFE               	movlw	-2
 20653  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20654                           
 20655                           ;stkvar	_a @ sp[(-13)+-8]
 20656  011E92  0EED               	movlw	237
 20657  011E94  24E1               	addwf	fsr1l,w,c
 20658  011E96  6ED9               	movwf	fsr2l,c
 20659  011E98  0EFF               	movlw	255
 20660  011E9A  20E2               	addwfc	fsr1h,w,c
 20661  011E9C  6EDA               	movwf	fsr2h,c
 20662  011E9E  AEDF               	btfss	indf2,7,c
 20663  011EA0  D002               	goto	l6758
 20664                           
 20665                           ;stkvar	_aexp @ sp[(-13)+11]
 20666  011EA2  0EFE               	movlw	-2
 20667  011EA4  80E3               	bsf	plusw1,0,c
 20668  011EA6                     l6758:
 20669                           
 20670                           ;stkvar	_aexp @ sp[(-13)+11]
 20671  011EA6  0EFE               	movlw	-2
 20672  011EA8  50E3               	movf	plusw1,w,c
 20673  011EAA  B4D8               	btfsc	status,2,c
 20674  011EAC  D01F               	goto	l6766
 20675                           
 20676                           ;stkvar	_aexp @ sp[(-13)+11]
 20677  011EAE  0EFE               	movlw	-2
 20678  011EB0  28E3               	incf	plusw1,w,c
 20679  011EB2  A4D8               	btfss	status,2,c
 20680  011EB4  D018               	goto	l6764
 20681  011EB6  0E00               	movlw	0
 20682  011EB8  6E3A               	movwf	(btemp+8)^0,c
 20683  011EBA  0E00               	movlw	0
 20684  011EBC  6E3B               	movwf	(btemp+9)^0,c
 20685  011EBE  0E00               	movlw	0
 20686  011EC0  6E3C               	movwf	(btemp+10)^0,c
 20687  011EC2  0E00               	movlw	0
 20688  011EC4  6E3D               	movwf	(btemp+11)^0,c
 20689                           
 20690                           ;stkvar	_a @ sp[(-13)+-8]
 20691  011EC6  0EEB               	movlw	-21
 20692  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20693  011ECE  0EEC               	movlw	-20
 20694  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20695  011ED6  0EED               	movlw	-19
 20696  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20697  011EDE  0EEE               	movlw	-18
 20698  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20699  011EE6                     l6764:
 20700                           
 20701                           ;stkvar	_a @ sp[(-13)+-8]
 20702  011EE6  0EED               	movlw	-19
 20703  011EE8  8EE3               	bsf	plusw1,7,c
 20704  011EEA  D018               	goto	l6768
 20705  011EEC                     l6766:
 20706  011EEC  0E00               	movlw	0
 20707  011EEE  6E3A               	movwf	(btemp+8)^0,c
 20708  011EF0  0E00               	movlw	0
 20709  011EF2  6E3B               	movwf	(btemp+9)^0,c
 20710  011EF4  0E00               	movlw	0
 20711  011EF6  6E3C               	movwf	(btemp+10)^0,c
 20712  011EF8  0E00               	movlw	0
 20713  011EFA  6E3D               	movwf	(btemp+11)^0,c
 20714                           
 20715                           ;stkvar	_a @ sp[(-13)+-8]
 20716  011EFC  0EEB               	movlw	-21
 20717  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20718  011F04  0EEC               	movlw	-20
 20719  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20720  011F0C  0EED               	movlw	-19
 20721  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20722  011F14  0EEE               	movlw	-18
 20723  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20724  011F1C                     l6768:
 20725                           
 20726                           ;stkvar	_aexp @ sp[(-13)+11]
 20727  011F1C  0EFE               	movlw	-2
 20728  011F1E  50E3               	movf	plusw1,w,c
 20729  011F20  B4D8               	btfsc	status,2,c
 20730  011F22  D004               	goto	u5840
 20731                           
 20732                           ;stkvar	_bexp @ sp[(-13)+10]
 20733  011F24  0EFD               	movlw	-3
 20734  011F26  50E3               	movf	plusw1,w,c
 20735  011F28  A4D8               	btfss	status,2,c
 20736  011F2A  D009               	goto	l6776
 20737  011F2C                     u5840:
 20738  011F2C  0E00               	movlw	0
 20739  011F2E  6E32               	movwf	btemp^0,c
 20740  011F30  0E00               	movlw	0
 20741  011F32  6E33               	movwf	(btemp+1)^0,c
 20742  011F34  0E00               	movlw	0
 20743  011F36  6E34               	movwf	(btemp+2)^0,c
 20744  011F38  0E00               	movlw	0
 20745  011F3A  6E35               	movwf	(btemp+3)^0,c
 20746  011F3C  D332               	goto	l2665
 20747  011F3E                     l6776:
 20748                           
 20749                           ;stkvar	_b @ sp[(-13)+-4]
 20750  011F3E  0EEF               	movlw	-17
 20751  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20752                           
 20753                           ;stkvar	_a @ sp[(-13)+-8]
 20754  011F46  0EED               	movlw	237
 20755  011F48  24E1               	addwf	fsr1l,w,c
 20756  011F4A  6ED9               	movwf	fsr2l,c
 20757  011F4C  0EFF               	movlw	255
 20758  011F4E  20E2               	addwfc	fsr1h,w,c
 20759  011F50  6EDA               	movwf	fsr2h,c
 20760  011F52  50DF               	movf	indf2,w,c
 20761  011F54  023D               	mulwf	(btemp+11)^0,c
 20762                           
 20763                           ;stkvar	_temp @ sp[(-13)+8]
 20764  011F56  0EFB               	movlw	-5
 20765  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 20766  011F5E  0EFC               	movlw	-4
 20767  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 20768                           
 20769                           ;stkvar	_temp @ sp[(-13)+8]
 20770  011F66  0EFB               	movlw	-5
 20771  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 20772  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 20773  011F74  6A37               	clrf	(btemp+5)^0,c
 20774  011F76  6A38               	clrf	(btemp+6)^0,c
 20775  011F78  6A39               	clrf	(btemp+7)^0,c
 20776                           
 20777                           ;stkvar	_grs @ sp[(-13)+4]
 20778  011F7A  0EF7               	movlw	-9
 20779  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20780  011F82  0EF8               	movlw	-8
 20781  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20782  011F8A  0EF9               	movlw	-7
 20783  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20784  011F92  0EFA               	movlw	-6
 20785  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20786                           
 20787                           ;stkvar	_temp @ sp[(-13)+8]
 20788  011F9A  0EFC               	movlw	252
 20789  011F9C  24E1               	addwf	fsr1l,w,c
 20790  011F9E  6ED9               	movwf	fsr2l,c
 20791  011FA0  0EFF               	movlw	255
 20792  011FA2  20E2               	addwfc	fsr1h,w,c
 20793  011FA4  6EDA               	movwf	fsr2h,c
 20794  011FA6  50DF               	movf	indf2,w,c
 20795  011FA8  6E3D               	movwf	(btemp+11)^0,c
 20796  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 20797  011FB0  6A37               	clrf	(btemp+5)^0,c
 20798  011FB2  6A38               	clrf	(btemp+6)^0,c
 20799  011FB4  6A39               	clrf	(btemp+7)^0,c
 20800                           
 20801                           ;stkvar	_prod @ sp[(-13)+0]
 20802  011FB6  0EF3               	movlw	-13
 20803  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20804  011FBE  0EF4               	movlw	-12
 20805  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20806  011FC6  0EF5               	movlw	-11
 20807  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20808  011FCE  0EF6               	movlw	-10
 20809  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20810                           
 20811                           ;stkvar	_b @ sp[(-13)+-4]
 20812  011FD6  0EF0               	movlw	240
 20813  011FD8  24E1               	addwf	fsr1l,w,c
 20814  011FDA  6ED9               	movwf	fsr2l,c
 20815  011FDC  0EFF               	movlw	255
 20816  011FDE  20E2               	addwfc	fsr1h,w,c
 20817  011FE0  6EDA               	movwf	fsr2h,c
 20818  011FE2  50DF               	movf	indf2,w,c
 20819  011FE4  6E3D               	movwf	(btemp+11)^0,c
 20820                           
 20821                           ;stkvar	_a @ sp[(-13)+-8]
 20822  011FE6  0EEC               	movlw	236
 20823  011FE8  24E1               	addwf	fsr1l,w,c
 20824  011FEA  6ED9               	movwf	fsr2l,c
 20825  011FEC  0EFF               	movlw	255
 20826  011FEE  20E2               	addwfc	fsr1h,w,c
 20827  011FF0  6EDA               	movwf	fsr2h,c
 20828  011FF2  50DF               	movf	indf2,w,c
 20829  011FF4  023D               	mulwf	(btemp+11)^0,c
 20830                           
 20831                           ;stkvar	_temp @ sp[(-13)+8]
 20832  011FF6  0EFB               	movlw	-5
 20833  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 20834  011FFE  0EFC               	movlw	-4
 20835  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 20836                           
 20837                           ;stkvar	_grs @ sp[(-13)+4]
 20838  012006  50E1               	movf	fsr1l,w,c
 20839  012008  0FF7               	addlw	-9
 20840  01200A  6ED9               	movwf	fsr2l,c
 20841  01200C  50E2               	movf	fsr1h,w,c
 20842  01200E  6EDA               	movwf	fsr2h,c
 20843  012010  0EFF               	movlw	255
 20844  012012  22DA               	addwfc	fsr2h,f,c
 20845                           
 20846                           ;stkvar	_temp @ sp[(-13)+8]
 20847  012014  0EFB               	movlw	-5
 20848  012016  50E3               	movf	plusw1,w,c
 20849  012018  26DE               	addwf	postinc2,f,c
 20850  01201A  0E00               	movlw	0
 20851  01201C  22DE               	addwfc	postinc2,f,c
 20852  01201E  22DE               	addwfc	postinc2,f,c
 20853  012020  22DE               	addwfc	postinc2,f,c
 20854                           
 20855                           ;stkvar	_prod @ sp[(-13)+0]
 20856  012022  50E1               	movf	fsr1l,w,c
 20857  012024  0FF3               	addlw	-13
 20858  012026  6ED9               	movwf	fsr2l,c
 20859  012028  50E2               	movf	fsr1h,w,c
 20860  01202A  6EDA               	movwf	fsr2h,c
 20861  01202C  0EFF               	movlw	255
 20862  01202E  22DA               	addwfc	fsr2h,f,c
 20863                           
 20864                           ;stkvar	_temp @ sp[(-13)+8]
 20865  012030  0EFC               	movlw	252
 20866  012032  24E1               	addwf	fsr1l,w,c
 20867  012034  6EE9               	movwf	fsr0l,c
 20868  012036  0EFF               	movlw	255
 20869  012038  20E2               	addwfc	fsr1h,w,c
 20870  01203A  6EEA               	movwf	fsr0h,c
 20871  01203C  50EF               	movf	indf0,w,c
 20872  01203E  26DE               	addwf	postinc2,f,c
 20873  012040  0E00               	movlw	0
 20874  012042  22DE               	addwfc	postinc2,f,c
 20875  012044  22DE               	addwfc	postinc2,f,c
 20876  012046  22DE               	addwfc	postinc2,f,c
 20877                           
 20878                           ;stkvar	_b @ sp[(-13)+-4]
 20879  012048  0EF1               	movlw	241
 20880  01204A  24E1               	addwf	fsr1l,w,c
 20881  01204C  6ED9               	movwf	fsr2l,c
 20882  01204E  0EFF               	movlw	255
 20883  012050  20E2               	addwfc	fsr1h,w,c
 20884  012052  6EDA               	movwf	fsr2h,c
 20885  012054  50DF               	movf	indf2,w,c
 20886  012056  6E3D               	movwf	(btemp+11)^0,c
 20887                           
 20888                           ;stkvar	_a @ sp[(-13)+-8]
 20889  012058  0EEB               	movlw	-21
 20890  01205A  50E3               	movf	plusw1,w,c
 20891  01205C  023D               	mulwf	(btemp+11)^0,c
 20892                           
 20893                           ;stkvar	_temp @ sp[(-13)+8]
 20894  01205E  0EFB               	movlw	-5
 20895  012060  006F FFCF FFE3     	movff	prodl,plusw1
 20896  012066  0EFC               	movlw	-4
 20897  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 20898                           
 20899                           ;stkvar	_grs @ sp[(-13)+4]
 20900  01206E  50E1               	movf	fsr1l,w,c
 20901  012070  0FF7               	addlw	-9
 20902  012072  6ED9               	movwf	fsr2l,c
 20903  012074  50E2               	movf	fsr1h,w,c
 20904  012076  6EDA               	movwf	fsr2h,c
 20905  012078  0EFF               	movlw	255
 20906  01207A  22DA               	addwfc	fsr2h,f,c
 20907                           
 20908                           ;stkvar	_temp @ sp[(-13)+8]
 20909  01207C  0EFB               	movlw	-5
 20910  01207E  50E3               	movf	plusw1,w,c
 20911  012080  26DE               	addwf	postinc2,f,c
 20912  012082  0E00               	movlw	0
 20913  012084  22DE               	addwfc	postinc2,f,c
 20914  012086  22DE               	addwfc	postinc2,f,c
 20915  012088  22DE               	addwfc	postinc2,f,c
 20916                           
 20917                           ;stkvar	_prod @ sp[(-13)+0]
 20918  01208A  50E1               	movf	fsr1l,w,c
 20919  01208C  0FF3               	addlw	-13
 20920  01208E  6ED9               	movwf	fsr2l,c
 20921  012090  50E2               	movf	fsr1h,w,c
 20922  012092  6EDA               	movwf	fsr2h,c
 20923  012094  0EFF               	movlw	255
 20924  012096  22DA               	addwfc	fsr2h,f,c
 20925                           
 20926                           ;stkvar	_temp @ sp[(-13)+8]
 20927  012098  0EFC               	movlw	252
 20928  01209A  24E1               	addwf	fsr1l,w,c
 20929  01209C  6EE9               	movwf	fsr0l,c
 20930  01209E  0EFF               	movlw	255
 20931  0120A0  20E2               	addwfc	fsr1h,w,c
 20932  0120A2  6EEA               	movwf	fsr0h,c
 20933  0120A4  50EF               	movf	indf0,w,c
 20934  0120A6  26DE               	addwf	postinc2,f,c
 20935  0120A8  0E00               	movlw	0
 20936  0120AA  22DE               	addwfc	postinc2,f,c
 20937  0120AC  22DE               	addwfc	postinc2,f,c
 20938  0120AE  22DE               	addwfc	postinc2,f,c
 20939                           
 20940                           ;stkvar	_grs @ sp[(-13)+4]
 20941  0120B0  50E1               	movf	fsr1l,w,c
 20942  0120B2  0FF7               	addlw	-9
 20943  0120B4  6ED9               	movwf	fsr2l,c
 20944  0120B6  50E2               	movf	fsr1h,w,c
 20945  0120B8  6EDA               	movwf	fsr2h,c
 20946  0120BA  0EFF               	movlw	255
 20947  0120BC  22DA               	addwfc	fsr2h,f,c
 20948  0120BE  0E08               	movlw	8
 20949  0120C0                     u5855:
 20950  0120C0  90D8               	bcf	status,0,c
 20951  0120C2  36DE               	rlcf	postinc2,f,c
 20952  0120C4  36DE               	rlcf	postinc2,f,c
 20953  0120C6  36DE               	rlcf	postinc2,f,c
 20954  0120C8  36DD               	rlcf	postdec2,f,c
 20955  0120CA  52DD               	movf	postdec2,f,c
 20956  0120CC  52DD               	movf	postdec2,f,c
 20957  0120CE  2EE8               	decfsz	wreg,f,c
 20958  0120D0  D7F7               	goto	u5855
 20959                           
 20960                           ;stkvar	_b @ sp[(-13)+-4]
 20961  0120D2  0EF0               	movlw	240
 20962  0120D4  24E1               	addwf	fsr1l,w,c
 20963  0120D6  6ED9               	movwf	fsr2l,c
 20964  0120D8  0EFF               	movlw	255
 20965  0120DA  20E2               	addwfc	fsr1h,w,c
 20966  0120DC  6EDA               	movwf	fsr2h,c
 20967  0120DE  50DF               	movf	indf2,w,c
 20968  0120E0  6E3D               	movwf	(btemp+11)^0,c
 20969                           
 20970                           ;stkvar	_a @ sp[(-13)+-8]
 20971  0120E2  0EEB               	movlw	-21
 20972  0120E4  50E3               	movf	plusw1,w,c
 20973  0120E6  023D               	mulwf	(btemp+11)^0,c
 20974                           
 20975                           ;stkvar	_temp @ sp[(-13)+8]
 20976  0120E8  0EFB               	movlw	-5
 20977  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 20978  0120F0  0EFC               	movlw	-4
 20979  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 20980                           
 20981                           ;stkvar	_temp @ sp[(-13)+8]
 20982  0120F8  0EFB               	movlw	-5
 20983  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 20984  012100  0EFC               	movlw	-4
 20985  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 20986                           
 20987                           ;stkvar	_grs @ sp[(-13)+4]
 20988  012108  50E1               	movf	fsr1l,w,c
 20989  01210A  0FF7               	addlw	-9
 20990  01210C  6ED9               	movwf	fsr2l,c
 20991  01210E  50E2               	movf	fsr1h,w,c
 20992  012110  6EDA               	movwf	fsr2h,c
 20993  012112  0EFF               	movlw	255
 20994  012114  22DA               	addwfc	fsr2h,f,c
 20995  012116  503C               	movf	(btemp+10)^0,w,c
 20996  012118  26DE               	addwf	postinc2,f,c
 20997  01211A  503D               	movf	(btemp+11)^0,w,c
 20998  01211C  22DE               	addwfc	postinc2,f,c
 20999  01211E  0E00               	movlw	0
 21000  012120  22DE               	addwfc	postinc2,f,c
 21001  012122  22DE               	addwfc	postinc2,f,c
 21002                           
 21003                           ;stkvar	_b @ sp[(-13)+-4]
 21004  012124  0EEF               	movlw	-17
 21005  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 21006                           
 21007                           ;stkvar	_a @ sp[(-13)+-8]
 21008  01212C  0EEC               	movlw	236
 21009  01212E  24E1               	addwf	fsr1l,w,c
 21010  012130  6ED9               	movwf	fsr2l,c
 21011  012132  0EFF               	movlw	255
 21012  012134  20E2               	addwfc	fsr1h,w,c
 21013  012136  6EDA               	movwf	fsr2h,c
 21014  012138  50DF               	movf	indf2,w,c
 21015  01213A  023D               	mulwf	(btemp+11)^0,c
 21016                           
 21017                           ;stkvar	_temp @ sp[(-13)+8]
 21018  01213C  0EFB               	movlw	-5
 21019  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 21020  012144  0EFC               	movlw	-4
 21021  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 21022                           
 21023                           ;stkvar	_temp @ sp[(-13)+8]
 21024  01214C  0EFB               	movlw	-5
 21025  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 21026  012154  0EFC               	movlw	-4
 21027  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 21028                           
 21029                           ;stkvar	_grs @ sp[(-13)+4]
 21030  01215C  50E1               	movf	fsr1l,w,c
 21031  01215E  0FF7               	addlw	-9
 21032  012160  6ED9               	movwf	fsr2l,c
 21033  012162  50E2               	movf	fsr1h,w,c
 21034  012164  6EDA               	movwf	fsr2h,c
 21035  012166  0EFF               	movlw	255
 21036  012168  22DA               	addwfc	fsr2h,f,c
 21037  01216A  503C               	movf	(btemp+10)^0,w,c
 21038  01216C  26DE               	addwf	postinc2,f,c
 21039  01216E  503D               	movf	(btemp+11)^0,w,c
 21040  012170  22DE               	addwfc	postinc2,f,c
 21041  012172  0E00               	movlw	0
 21042  012174  22DE               	addwfc	postinc2,f,c
 21043  012176  22DE               	addwfc	postinc2,f,c
 21044                           
 21045                           ;stkvar	_grs @ sp[(-13)+4]
 21046  012178  50E1               	movf	fsr1l,w,c
 21047  01217A  0FF7               	addlw	-9
 21048  01217C  6ED9               	movwf	fsr2l,c
 21049  01217E  50E2               	movf	fsr1h,w,c
 21050  012180  6EDA               	movwf	fsr2h,c
 21051  012182  0EFF               	movlw	255
 21052  012184  22DA               	addwfc	fsr2h,f,c
 21053  012186  0E08               	movlw	8
 21054  012188                     u5865:
 21055  012188  90D8               	bcf	status,0,c
 21056  01218A  36DE               	rlcf	postinc2,f,c
 21057  01218C  36DE               	rlcf	postinc2,f,c
 21058  01218E  36DE               	rlcf	postinc2,f,c
 21059  012190  36DD               	rlcf	postdec2,f,c
 21060  012192  52DD               	movf	postdec2,f,c
 21061  012194  52DD               	movf	postdec2,f,c
 21062  012196  2EE8               	decfsz	wreg,f,c
 21063  012198  D7F7               	goto	u5865
 21064                           
 21065                           ;stkvar	_b @ sp[(-13)+-4]
 21066  01219A  0EEF               	movlw	-17
 21067  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21068                           
 21069                           ;stkvar	_a @ sp[(-13)+-8]
 21070  0121A2  0EEB               	movlw	-21
 21071  0121A4  50E3               	movf	plusw1,w,c
 21072  0121A6  023D               	mulwf	(btemp+11)^0,c
 21073                           
 21074                           ;stkvar	_temp @ sp[(-13)+8]
 21075  0121A8  0EFB               	movlw	-5
 21076  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 21077  0121B0  0EFC               	movlw	-4
 21078  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 21079                           
 21080                           ;stkvar	_temp @ sp[(-13)+8]
 21081  0121B8  0EFB               	movlw	-5
 21082  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21083  0121C0  0EFC               	movlw	-4
 21084  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21085                           
 21086                           ;stkvar	_grs @ sp[(-13)+4]
 21087  0121C8  50E1               	movf	fsr1l,w,c
 21088  0121CA  0FF7               	addlw	-9
 21089  0121CC  6ED9               	movwf	fsr2l,c
 21090  0121CE  50E2               	movf	fsr1h,w,c
 21091  0121D0  6EDA               	movwf	fsr2h,c
 21092  0121D2  0EFF               	movlw	255
 21093  0121D4  22DA               	addwfc	fsr2h,f,c
 21094  0121D6  503C               	movf	(btemp+10)^0,w,c
 21095  0121D8  26DE               	addwf	postinc2,f,c
 21096  0121DA  503D               	movf	(btemp+11)^0,w,c
 21097  0121DC  22DE               	addwfc	postinc2,f,c
 21098  0121DE  0E00               	movlw	0
 21099  0121E0  22DE               	addwfc	postinc2,f,c
 21100  0121E2  22DE               	addwfc	postinc2,f,c
 21101                           
 21102                           ;stkvar	_b @ sp[(-13)+-4]
 21103  0121E4  0EF0               	movlw	240
 21104  0121E6  24E1               	addwf	fsr1l,w,c
 21105  0121E8  6ED9               	movwf	fsr2l,c
 21106  0121EA  0EFF               	movlw	255
 21107  0121EC  20E2               	addwfc	fsr1h,w,c
 21108  0121EE  6EDA               	movwf	fsr2h,c
 21109  0121F0  50DF               	movf	indf2,w,c
 21110  0121F2  6E3D               	movwf	(btemp+11)^0,c
 21111                           
 21112                           ;stkvar	_a @ sp[(-13)+-8]
 21113  0121F4  0EED               	movlw	237
 21114  0121F6  24E1               	addwf	fsr1l,w,c
 21115  0121F8  6ED9               	movwf	fsr2l,c
 21116  0121FA  0EFF               	movlw	255
 21117  0121FC  20E2               	addwfc	fsr1h,w,c
 21118  0121FE  6EDA               	movwf	fsr2h,c
 21119  012200  50DF               	movf	indf2,w,c
 21120  012202  023D               	mulwf	(btemp+11)^0,c
 21121                           
 21122                           ;stkvar	_temp @ sp[(-13)+8]
 21123  012204  0EFB               	movlw	-5
 21124  012206  006F FFCF FFE3     	movff	prodl,plusw1
 21125  01220C  0EFC               	movlw	-4
 21126  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 21127                           
 21128                           ;stkvar	_temp @ sp[(-13)+8]
 21129  012214  0EFB               	movlw	-5
 21130  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 21131  01221C  0EFC               	movlw	-4
 21132  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21133                           
 21134                           ;stkvar	_prod @ sp[(-13)+0]
 21135  012224  50E1               	movf	fsr1l,w,c
 21136  012226  0FF3               	addlw	-13
 21137  012228  6ED9               	movwf	fsr2l,c
 21138  01222A  50E2               	movf	fsr1h,w,c
 21139  01222C  6EDA               	movwf	fsr2h,c
 21140  01222E  0EFF               	movlw	255
 21141  012230  22DA               	addwfc	fsr2h,f,c
 21142  012232  503C               	movf	(btemp+10)^0,w,c
 21143  012234  26DE               	addwf	postinc2,f,c
 21144  012236  503D               	movf	(btemp+11)^0,w,c
 21145  012238  22DE               	addwfc	postinc2,f,c
 21146  01223A  0E00               	movlw	0
 21147  01223C  22DE               	addwfc	postinc2,f,c
 21148  01223E  22DE               	addwfc	postinc2,f,c
 21149                           
 21150                           ;stkvar	_b @ sp[(-13)+-4]
 21151  012240  0EF1               	movlw	241
 21152  012242  24E1               	addwf	fsr1l,w,c
 21153  012244  6ED9               	movwf	fsr2l,c
 21154  012246  0EFF               	movlw	255
 21155  012248  20E2               	addwfc	fsr1h,w,c
 21156  01224A  6EDA               	movwf	fsr2h,c
 21157  01224C  50DF               	movf	indf2,w,c
 21158  01224E  6E3D               	movwf	(btemp+11)^0,c
 21159                           
 21160                           ;stkvar	_a @ sp[(-13)+-8]
 21161  012250  0EEC               	movlw	236
 21162  012252  24E1               	addwf	fsr1l,w,c
 21163  012254  6ED9               	movwf	fsr2l,c
 21164  012256  0EFF               	movlw	255
 21165  012258  20E2               	addwfc	fsr1h,w,c
 21166  01225A  6EDA               	movwf	fsr2h,c
 21167  01225C  50DF               	movf	indf2,w,c
 21168  01225E  023D               	mulwf	(btemp+11)^0,c
 21169                           
 21170                           ;stkvar	_temp @ sp[(-13)+8]
 21171  012260  0EFB               	movlw	-5
 21172  012262  006F FFCF FFE3     	movff	prodl,plusw1
 21173  012268  0EFC               	movlw	-4
 21174  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 21175                           
 21176                           ;stkvar	_temp @ sp[(-13)+8]
 21177  012270  0EFB               	movlw	-5
 21178  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 21179  012278  0EFC               	movlw	-4
 21180  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21181                           
 21182                           ;stkvar	_prod @ sp[(-13)+0]
 21183  012280  50E1               	movf	fsr1l,w,c
 21184  012282  0FF3               	addlw	-13
 21185  012284  6ED9               	movwf	fsr2l,c
 21186  012286  50E2               	movf	fsr1h,w,c
 21187  012288  6EDA               	movwf	fsr2h,c
 21188  01228A  0EFF               	movlw	255
 21189  01228C  22DA               	addwfc	fsr2h,f,c
 21190  01228E  503C               	movf	(btemp+10)^0,w,c
 21191  012290  26DE               	addwf	postinc2,f,c
 21192  012292  503D               	movf	(btemp+11)^0,w,c
 21193  012294  22DE               	addwfc	postinc2,f,c
 21194  012296  0E00               	movlw	0
 21195  012298  22DE               	addwfc	postinc2,f,c
 21196  01229A  22DE               	addwfc	postinc2,f,c
 21197                           
 21198                           ;stkvar	_b @ sp[(-13)+-4]
 21199  01229C  0EF1               	movlw	241
 21200  01229E  24E1               	addwf	fsr1l,w,c
 21201  0122A0  6ED9               	movwf	fsr2l,c
 21202  0122A2  0EFF               	movlw	255
 21203  0122A4  20E2               	addwfc	fsr1h,w,c
 21204  0122A6  6EDA               	movwf	fsr2h,c
 21205  0122A8  50DF               	movf	indf2,w,c
 21206  0122AA  6E3D               	movwf	(btemp+11)^0,c
 21207                           
 21208                           ;stkvar	_a @ sp[(-13)+-8]
 21209  0122AC  0EED               	movlw	237
 21210  0122AE  24E1               	addwf	fsr1l,w,c
 21211  0122B0  6ED9               	movwf	fsr2l,c
 21212  0122B2  0EFF               	movlw	255
 21213  0122B4  20E2               	addwfc	fsr1h,w,c
 21214  0122B6  6EDA               	movwf	fsr2h,c
 21215  0122B8  50DF               	movf	indf2,w,c
 21216  0122BA  023D               	mulwf	(btemp+11)^0,c
 21217                           
 21218                           ;stkvar	_temp @ sp[(-13)+8]
 21219  0122BC  0EFB               	movlw	-5
 21220  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 21221  0122C4  0EFC               	movlw	-4
 21222  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 21223                           
 21224                           ;stkvar	_temp @ sp[(-13)+8]
 21225  0122CC  0EFB               	movlw	-5
 21226  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 21227  0122D4  0EFC               	movlw	-4
 21228  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21229  0122DC  503C               	movf	(btemp+10)^0,w,c
 21230  0122DE  6E36               	movwf	(btemp+4)^0,c
 21231  0122E0  503D               	movf	(btemp+11)^0,w,c
 21232  0122E2  6E37               	movwf	(btemp+5)^0,c
 21233  0122E4  6A38               	clrf	(btemp+6)^0,c
 21234  0122E6  6A39               	clrf	(btemp+7)^0,c
 21235  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 21236  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 21237  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 21238  0122FA  6A36               	clrf	(btemp+4)^0,c
 21239                           
 21240                           ;stkvar	_prod @ sp[(-13)+0]
 21241  0122FC  50E1               	movf	fsr1l,w,c
 21242  0122FE  0FF3               	addlw	-13
 21243  012300  6ED9               	movwf	fsr2l,c
 21244  012302  50E2               	movf	fsr1h,w,c
 21245  012304  6EDA               	movwf	fsr2h,c
 21246  012306  0EFF               	movlw	255
 21247  012308  22DA               	addwfc	fsr2h,f,c
 21248  01230A  5036               	movf	(btemp+4)^0,w,c
 21249  01230C  26DE               	addwf	postinc2,f,c
 21250  01230E  5037               	movf	(btemp+5)^0,w,c
 21251  012310  22DE               	addwfc	postinc2,f,c
 21252  012312  5038               	movf	(btemp+6)^0,w,c
 21253  012314  22DE               	addwfc	postinc2,f,c
 21254  012316  5039               	movf	(btemp+7)^0,w,c
 21255  012318  22DE               	addwfc	postinc2,f,c
 21256                           
 21257                           ;stkvar	_prod @ sp[(-13)+0]
 21258  01231A  50E1               	movf	fsr1l,w,c
 21259  01231C  0FF3               	addlw	-13
 21260  01231E  6ED9               	movwf	fsr2l,c
 21261  012320  50E2               	movf	fsr1h,w,c
 21262  012322  6EDA               	movwf	fsr2h,c
 21263  012324  0EFF               	movlw	255
 21264  012326  22DA               	addwfc	fsr2h,f,c
 21265                           
 21266                           ;stkvar	_grs @ sp[(-13)+4]
 21267  012328  0EFA               	movlw	250
 21268  01232A  24E1               	addwf	fsr1l,w,c
 21269  01232C  6EE9               	movwf	fsr0l,c
 21270  01232E  0EFF               	movlw	255
 21271  012330  20E2               	addwfc	fsr1h,w,c
 21272  012332  6EEA               	movwf	fsr0h,c
 21273  012334  50EF               	movf	indf0,w,c
 21274  012336  26DE               	addwf	postinc2,f,c
 21275  012338  0E00               	movlw	0
 21276  01233A  22DE               	addwfc	postinc2,f,c
 21277  01233C  22DE               	addwfc	postinc2,f,c
 21278  01233E  22DE               	addwfc	postinc2,f,c
 21279                           
 21280                           ;stkvar	_grs @ sp[(-13)+4]
 21281  012340  50E1               	movf	fsr1l,w,c
 21282  012342  0FF7               	addlw	-9
 21283  012344  6ED9               	movwf	fsr2l,c
 21284  012346  50E2               	movf	fsr1h,w,c
 21285  012348  6EDA               	movwf	fsr2h,c
 21286  01234A  0EFF               	movlw	255
 21287  01234C  22DA               	addwfc	fsr2h,f,c
 21288  01234E  0E08               	movlw	8
 21289  012350                     u5875:
 21290  012350  90D8               	bcf	status,0,c
 21291  012352  36DE               	rlcf	postinc2,f,c
 21292  012354  36DE               	rlcf	postinc2,f,c
 21293  012356  36DE               	rlcf	postinc2,f,c
 21294  012358  36DD               	rlcf	postdec2,f,c
 21295  01235A  52DD               	movf	postdec2,f,c
 21296  01235C  52DD               	movf	postdec2,f,c
 21297  01235E  2EE8               	decfsz	wreg,f,c
 21298  012360  D7F7               	goto	u5875
 21299  012362  0E82               	movlw	130
 21300  012364  6E3C               	movwf	(btemp+10)^0,c
 21301  012366  0EFF               	movlw	255
 21302  012368  6E3D               	movwf	(btemp+11)^0,c
 21303                           
 21304                           ;stkvar	_bexp @ sp[(-13)+10]
 21305  01236A  0EFD               	movlw	-3
 21306  01236C  50E3               	movf	plusw1,w,c
 21307  01236E  6E3A               	movwf	(btemp+8)^0,c
 21308  012370  6A3B               	clrf	(btemp+9)^0,c
 21309                           
 21310                           ;stkvar	_aexp @ sp[(-13)+11]
 21311  012372  0EFE               	movlw	-2
 21312  012374  50E3               	movf	plusw1,w,c
 21313  012376  263A               	addwf	(btemp+8)^0,f,c
 21314  012378  0E00               	movlw	0
 21315  01237A  223B               	addwfc	(btemp+9)^0,f,c
 21316  01237C  503C               	movf	(btemp+10)^0,w,c
 21317  01237E  263A               	addwf	(btemp+8)^0,f,c
 21318  012380  503D               	movf	(btemp+11)^0,w,c
 21319  012382  223B               	addwfc	(btemp+9)^0,f,c
 21320                           
 21321                           ;stkvar	_temp @ sp[(-13)+8]
 21322  012384  0EFB               	movlw	-5
 21323  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21324  01238C  0EFC               	movlw	-4
 21325  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21326  012394  D021               	goto	l6838
 21327  012396                     l6828:
 21328                           
 21329                           ;stkvar	_prod @ sp[(-13)+0]
 21330  012396  90D8               	bcf	status,0,c
 21331  012398  0EF3               	movlw	-13
 21332  01239A  36E3               	rlcf	plusw1,f,c
 21333  01239C  0EF4               	movlw	-12
 21334  01239E  36E3               	rlcf	plusw1,f,c
 21335  0123A0  0EF5               	movlw	-11
 21336  0123A2  36E3               	rlcf	plusw1,f,c
 21337  0123A4  0EF6               	movlw	-10
 21338  0123A6  36E3               	rlcf	plusw1,f,c
 21339                           
 21340                           ;stkvar	_grs @ sp[(-13)+4]
 21341  0123A8  0EFA               	movlw	-6
 21342  0123AA  AEE3               	btfss	plusw1,7,c
 21343  0123AC  D002               	goto	l6834
 21344                           
 21345                           ;stkvar	_prod @ sp[(-13)+0]
 21346  0123AE  0EF3               	movlw	-13
 21347  0123B0  80E3               	bsf	plusw1,0,c
 21348  0123B2                     l6834:
 21349                           
 21350                           ;stkvar	_grs @ sp[(-13)+4]
 21351  0123B2  90D8               	bcf	status,0,c
 21352  0123B4  0EF7               	movlw	-9
 21353  0123B6  36E3               	rlcf	plusw1,f,c
 21354  0123B8  0EF8               	movlw	-8
 21355  0123BA  36E3               	rlcf	plusw1,f,c
 21356  0123BC  0EF9               	movlw	-7
 21357  0123BE  36E3               	rlcf	plusw1,f,c
 21358  0123C0  0EFA               	movlw	-6
 21359  0123C2  36E3               	rlcf	plusw1,f,c
 21360                           
 21361                           ;stkvar	_temp @ sp[(-13)+8]
 21362  0123C4  50E1               	movf	fsr1l,w,c
 21363  0123C6  0FFB               	addlw	-5
 21364  0123C8  6ED9               	movwf	fsr2l,c
 21365  0123CA  50E2               	movf	fsr1h,w,c
 21366  0123CC  6EDA               	movwf	fsr2h,c
 21367  0123CE  0EFF               	movlw	255
 21368  0123D0  22DA               	addwfc	fsr2h,f,c
 21369  0123D2  06DE               	decf	postinc2,f,c
 21370  0123D4  0E00               	movlw	0
 21371  0123D6  5ADD               	subwfb	postdec2,f,c
 21372  0123D8                     l6838:
 21373                           
 21374                           ;stkvar	_prod @ sp[(-13)+0]
 21375  0123D8  0EF5               	movlw	-11
 21376  0123DA  AEE3               	btfss	plusw1,7,c
 21377  0123DC  D7DC               	goto	l6828
 21378                           
 21379                           ;stkvar	_aexp @ sp[(-13)+11]
 21380  0123DE  0EFE               	movlw	-2
 21381  0123E0  6AE3               	clrf	plusw1,c
 21382                           
 21383                           ;stkvar	_grs @ sp[(-13)+4]
 21384  0123E2  0EFA               	movlw	-6
 21385  0123E4  AEE3               	btfss	plusw1,7,c
 21386  0123E6  D020               	goto	l6852
 21387                           
 21388                           ;stkvar	_grs @ sp[(-13)+4]
 21389  0123E8  50E1               	movf	fsr1l,w,c
 21390  0123EA  0FF7               	addlw	-9
 21391  0123EC  6ED9               	movwf	fsr2l,c
 21392  0123EE  50E2               	movf	fsr1h,w,c
 21393  0123F0  6EDA               	movwf	fsr2h,c
 21394  0123F2  0EFF               	movlw	255
 21395  0123F4  22DA               	addwfc	fsr2h,f,c
 21396  0123F6  0EFF               	movlw	255
 21397  0123F8  14DE               	andwf	postinc2,w,c
 21398  0123FA  6E3A               	movwf	(btemp+8)^0,c
 21399  0123FC  0EFF               	movlw	255
 21400  0123FE  14DE               	andwf	postinc2,w,c
 21401  012400  6E3B               	movwf	(btemp+9)^0,c
 21402  012402  0EFF               	movlw	255
 21403  012404  14DE               	andwf	postinc2,w,c
 21404  012406  6E3C               	movwf	(btemp+10)^0,c
 21405  012408  0E7F               	movlw	127
 21406  01240A  14DE               	andwf	postinc2,w,c
 21407  01240C  6E3D               	movwf	(btemp+11)^0,c
 21408  01240E  503A               	movf	(btemp+8)^0,w,c
 21409  012410  103B               	iorwf	(btemp+9)^0,w,c
 21410  012412  103C               	iorwf	(btemp+10)^0,w,c
 21411  012414  103D               	iorwf	(btemp+11)^0,w,c
 21412  012416  B4D8               	btfsc	status,2,c
 21413  012418  D004               	goto	l6848
 21414  01241A                     u5910:
 21415                           
 21416                           ;stkvar	_aexp @ sp[(-13)+11]
 21417  01241A  0EFE               	movlw	-2
 21418  01241C  6AE3               	clrf	plusw1,c
 21419  01241E  2AE3               	incf	plusw1,f,c
 21420  012420  D003               	goto	l6852
 21421  012422                     l6848:
 21422                           
 21423                           ;stkvar	_prod @ sp[(-13)+0]
 21424  012422  0EF3               	movlw	-13
 21425  012424  B0E3               	btfsc	plusw1,0,c
 21426  012426  D7F9               	goto	u5910
 21427  012428                     l6852:
 21428                           
 21429                           ;stkvar	_aexp @ sp[(-13)+11]
 21430  012428  0EFE               	movlw	-2
 21431  01242A  50E3               	movf	plusw1,w,c
 21432  01242C  B4D8               	btfsc	status,2,c
 21433  01242E  D036               	goto	l6862
 21434                           
 21435                           ;stkvar	_prod @ sp[(-13)+0]
 21436  012430  50E1               	movf	fsr1l,w,c
 21437  012432  0FF3               	addlw	-13
 21438  012434  6ED9               	movwf	fsr2l,c
 21439  012436  50E2               	movf	fsr1h,w,c
 21440  012438  6EDA               	movwf	fsr2h,c
 21441  01243A  0EFF               	movlw	255
 21442  01243C  22DA               	addwfc	fsr2h,f,c
 21443  01243E  2ADE               	incf	postinc2,f,c
 21444  012440  0E00               	movlw	0
 21445  012442  22DE               	addwfc	postinc2,f,c
 21446  012444  22DE               	addwfc	postinc2,f,c
 21447  012446  22DE               	addwfc	postinc2,f,c
 21448                           
 21449                           ;stkvar	_prod @ sp[(-13)+0]
 21450  012448  0EF6               	movlw	-10
 21451  01244A  A0E3               	btfss	plusw1,0,c
 21452  01244C  D027               	goto	l6862
 21453  01244E  0E01               	movlw	1
 21454  012450  6E3D               	movwf	(btemp+11)^0,c
 21455                           
 21456                           ;stkvar	_prod @ sp[(-13)+0]
 21457  012452  50E1               	movf	fsr1l,w,c
 21458  012454  0FF3               	addlw	-13
 21459  012456  6ED9               	movwf	fsr2l,c
 21460  012458  50E2               	movf	fsr1h,w,c
 21461  01245A  6EDA               	movwf	fsr2h,c
 21462  01245C  0EFF               	movlw	255
 21463  01245E  22DA               	addwfc	fsr2h,f,c
 21464  012460  283D               	incf	(btemp+11)^0,w,c
 21465  012462  52DE               	movf	postinc2,f,c
 21466  012464  D008               	goto	u5950
 21467  012466                     u5955:
 21468  012466  52DE               	movf	postinc2,f,c
 21469  012468  90D8               	bcf	status,0,c
 21470  01246A  BEDC               	btfsc	preinc2,7,c
 21471  01246C  80D8               	bsf	status,0,c
 21472  01246E  32DD               	rrcf	postdec2,f,c
 21473  012470  32DD               	rrcf	postdec2,f,c
 21474  012472  32DD               	rrcf	postdec2,f,c
 21475  012474  32DE               	rrcf	postinc2,f,c
 21476  012476                     u5950:
 21477  012476  2EE8               	decfsz	wreg,f,c
 21478  012478  D7F6               	goto	u5955
 21479                           
 21480                           ;stkvar	_temp @ sp[(-13)+8]
 21481  01247A  0EFB               	movlw	-5
 21482  01247C  50E3               	movf	plusw1,w,c
 21483  01247E  0F01               	addlw	1
 21484  012480  6E32               	movwf	btemp^0,c
 21485  012482  0EFB               	movlw	-5
 21486  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 21487  01248A  6A32               	clrf	btemp^0,c
 21488  01248C  0EFC               	movlw	-4
 21489  01248E  50E3               	movf	plusw1,w,c
 21490  012490  2032               	addwfc	btemp^0,w,c
 21491  012492  6E32               	movwf	btemp^0,c
 21492  012494  0EFC               	movlw	-4
 21493  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 21494  01249C                     l6862:
 21495                           
 21496                           ;stkvar	_temp @ sp[(-13)+8]
 21497  01249C  0EFC               	movlw	-4
 21498  01249E  BEE3               	btfsc	plusw1,7,c
 21499  0124A0  D020               	goto	l6866
 21500  0124A2  0EFC               	movlw	-4
 21501  0124A4  50E3               	movf	plusw1,w,c
 21502  0124A6  E104               	bnz	u5960
 21503  0124A8  0EFB               	movlw	-5
 21504  0124AA  28E3               	incf	plusw1,w,c
 21505  0124AC  A0D8               	btfss	status,0,c
 21506  0124AE  D019               	goto	l6866
 21507  0124B0                     u5960:
 21508  0124B0  0E00               	movlw	0
 21509  0124B2  6E3A               	movwf	(btemp+8)^0,c
 21510  0124B4  0E00               	movlw	0
 21511  0124B6  6E3B               	movwf	(btemp+9)^0,c
 21512  0124B8  0E80               	movlw	128
 21513  0124BA  6E3C               	movwf	(btemp+10)^0,c
 21514  0124BC  0E7F               	movlw	127
 21515  0124BE  6E3D               	movwf	(btemp+11)^0,c
 21516                           
 21517                           ;stkvar	_prod @ sp[(-13)+0]
 21518  0124C0  0EF3               	movlw	-13
 21519  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21520  0124C8  0EF4               	movlw	-12
 21521  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21522  0124D0  0EF5               	movlw	-11
 21523  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21524  0124D8  0EF6               	movlw	-10
 21525  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21526  0124E0  D044               	goto	l6882
 21527  0124E2                     l6866:
 21528                           
 21529                           ;stkvar	_temp @ sp[(-13)+8]
 21530  0124E2  0EFC               	movlw	-4
 21531  0124E4  BEE3               	btfsc	plusw1,7,c
 21532  0124E6  D007               	goto	u5970
 21533  0124E8  0EFC               	movlw	-4
 21534  0124EA  50E3               	movf	plusw1,w,c
 21535  0124EC  E10F               	bnz	l6872
 21536  0124EE  0EFB               	movlw	-5
 21537  0124F0  04E3               	decf	plusw1,w,c
 21538  0124F2  B0D8               	btfsc	status,0,c
 21539  0124F4  D00B               	goto	l6872
 21540  0124F6                     u5970:
 21541                           
 21542                           ;stkvar	_prod @ sp[(-13)+0]
 21543  0124F6  0EF3               	movlw	-13
 21544  0124F8  6AE3               	clrf	plusw1,c
 21545  0124FA  0EF4               	movlw	-12
 21546  0124FC  6AE3               	clrf	plusw1,c
 21547  0124FE  0EF5               	movlw	-11
 21548  012500  6AE3               	clrf	plusw1,c
 21549  012502  0EF6               	movlw	-10
 21550  012504  6AE3               	clrf	plusw1,c
 21551                           
 21552                           ;stkvar	_sign @ sp[(-13)+12]
 21553  012506  0EFF               	movlw	-1
 21554  012508  6AE3               	clrf	plusw1,c
 21555  01250A  D02F               	goto	l6882
 21556  01250C                     l6872:
 21557                           
 21558                           ;stkvar	_temp @ sp[(-13)+8]
 21559                           ;stkvar	_bexp @ sp[(-13)+10]
 21560  01250C  0EFB               	movlw	-5
 21561  01250E  006F FF8C  F032    	movff	plusw1,btemp
 21562  012514  0EFD               	movlw	-3
 21563  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 21564                           
 21565                           ;stkvar	_prod @ sp[(-13)+0]
 21566  01251C  50E1               	movf	fsr1l,w,c
 21567  01251E  0FF3               	addlw	-13
 21568  012520  6ED9               	movwf	fsr2l,c
 21569  012522  50E2               	movf	fsr1h,w,c
 21570  012524  6EDA               	movwf	fsr2h,c
 21571  012526  0EFF               	movlw	255
 21572  012528  22DA               	addwfc	fsr2h,f,c
 21573  01252A  0EFF               	movlw	255
 21574  01252C  16DE               	andwf	postinc2,f,c
 21575  01252E  0EFF               	movlw	255
 21576  012530  16DE               	andwf	postinc2,f,c
 21577  012532  0E7F               	movlw	127
 21578  012534  16DE               	andwf	postinc2,f,c
 21579  012536  0E00               	movlw	0
 21580  012538  16DE               	andwf	postinc2,f,c
 21581                           
 21582                           ;stkvar	_bexp @ sp[(-13)+10]
 21583  01253A  0EFD               	movlw	-3
 21584  01253C  A0E3               	btfss	plusw1,0,c
 21585  01253E  D008               	goto	l6880
 21586                           
 21587                           ;stkvar	_prod @ sp[(-13)+0]
 21588  012540  0EF5               	movlw	245
 21589  012542  24E1               	addwf	fsr1l,w,c
 21590  012544  6ED9               	movwf	fsr2l,c
 21591  012546  0EFF               	movlw	255
 21592  012548  20E2               	addwfc	fsr1h,w,c
 21593  01254A  6EDA               	movwf	fsr2h,c
 21594  01254C  0E00               	movlw	0
 21595  01254E  8EDB               	bsf	plusw2,7,c
 21596  012550                     l6880:
 21597                           
 21598                           ;stkvar	_prod @ sp[(-13)+0]
 21599  012550  0EF6               	movlw	246
 21600  012552  24E1               	addwf	fsr1l,w,c
 21601  012554  6ED9               	movwf	fsr2l,c
 21602  012556  0EFF               	movlw	255
 21603  012558  20E2               	addwfc	fsr1h,w,c
 21604  01255A  6EDA               	movwf	fsr2h,c
 21605                           
 21606                           ;stkvar	_bexp @ sp[(-13)+10]
 21607  01255C  0EFD               	movlw	-3
 21608  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21609  012564  90D8               	bcf	status,0,c
 21610  012566  303D               	rrcf	(btemp+11)^0,w,c
 21611  012568  6EDF               	movwf	indf2,c
 21612  01256A                     l6882:
 21613                           
 21614                           ;stkvar	_sign @ sp[(-13)+12]
 21615  01256A  0EFF               	movlw	-1
 21616  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21617                           
 21618                           ;stkvar	_prod @ sp[(-13)+0]
 21619  012572  0EF6               	movlw	246
 21620  012574  24E1               	addwf	fsr1l,w,c
 21621  012576  6ED9               	movwf	fsr2l,c
 21622  012578  0EFF               	movlw	255
 21623  01257A  20E2               	addwfc	fsr1h,w,c
 21624  01257C  6EDA               	movwf	fsr2h,c
 21625  01257E  503D               	movf	(btemp+11)^0,w,c
 21626  012580  12DF               	iorwf	indf2,f,c
 21627                           
 21628                           ;stkvar	_prod @ sp[(-13)+0]
 21629  012582  0EF3               	movlw	-13
 21630  012584  006F FF8C  F032    	movff	plusw1,btemp
 21631  01258A  0EF4               	movlw	-12
 21632  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 21633  012592  0EF5               	movlw	-11
 21634  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 21635  01259A  0EF6               	movlw	-10
 21636  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 21637  0125A2                     l2665:
 21638                           
 21639                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 21640  0125A2  0EEB               	movlw	235
 21641  0125A4  26E1               	addwf	fsr1l,f,c
 21642  0125A6  0EFF               	movlw	255
 21643  0125A8  22E2               	addwfc	fsr1h,f,c
 21644  0125AA  0012               	return		;funcret
 21645  0125AC                     __end_of___flmul:
 21646                           	opt callstack 0
 21647                           
 21648 ;; *************** function _SYSTEM_Initialize *****************
 21649 ;; Defined at:
 21650 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21651 ;; Parameters:    Size  Location     Type
 21652 ;;		None
 21653 ;; Auto vars:     Size  Location     Type
 21654 ;;		None
 21655 ;; Return value:  Size  Location     Type
 21656 ;;                  1  [STACK] void 
 21657 ;; Registers used:
 21658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21659 ;; Tracked objects:
 21660 ;;		On entry : 0/0
 21661 ;;		On exit  : 3F/3C
 21662 ;;		Unchanged: 0/0
 21663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21668 ;;Total ram usage:        0 bytes
 21669 ;; Hardware stack levels used:    1
 21670 ;; Hardware stack levels required when called:    8
 21671 ;; This function calls:
 21672 ;;		_ADCC_Initialize
 21673 ;;		_CLKREF_Initialize
 21674 ;;		_DMA1_Initialize
 21675 ;;		_DMA2_Initialize
 21676 ;;		_EXT_INT_Initialize
 21677 ;;		_FVR_Initialize
 21678 ;;		_INTERRUPT_Initialize
 21679 ;;		_OSCILLATOR_Initialize
 21680 ;;		_PIN_MANAGER_Initialize
 21681 ;;		_PMD_Initialize
 21682 ;;		_PWM8_Initialize
 21683 ;;		_SPI1_Initialize
 21684 ;;		_TMR2_Initialize
 21685 ;;		_TMR5_Initialize
 21686 ;;		_TMR6_Initialize
 21687 ;;		_UART1_Initialize
 21688 ;;		_UART2_Initialize
 21689 ;; This function is called by:
 21690 ;;		_main
 21691 ;; This function uses a reentrant model
 21692 ;;
 21693                           
 21694                           	psect	text87
 21695  017D8C                     __ptext87:
 21696                           	opt callstack 0
 21697  017D8C                     _SYSTEM_Initialize:
 21698                           	opt callstack 22
 21699                           
 21700                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21701                           
 21702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21703                           ;incstack = 0
 21704  017D8C  EC5A  F0BC         	call	_INTERRUPT_Initialize	;wreg free
 21705                           
 21706                           ; BSR set to: 57
 21707                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21708  017D90  ECC2  F0C3         	call	_PMD_Initialize	;wreg free
 21709                           
 21710                           ; BSR set to: 57
 21711                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21712  017D94  EC2E  F0BA         	call	_PIN_MANAGER_Initialize	;wreg free
 21713                           
 21714                           ; BSR set to: 58
 21715                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21716  017D98  ECB7  F0C3         	call	_OSCILLATOR_Initialize	;wreg free
 21717                           
 21718                           ; BSR set to: 57
 21719                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21720  017D9C  EC29  F0C4         	call	_FVR_Initialize	;wreg free
 21721                           
 21722                           ; BSR set to: 62
 21723                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21724  017DA0  ECF0  F0BB         	call	_ADCC_Initialize	;wreg free
 21725                           
 21726                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21727  017DA4  EC95  F0C3         	call	_TMR2_Initialize	;wreg free
 21728                           
 21729                           ; BSR set to: 57
 21730                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21731  017DA8  ECAC  F0C3         	call	_PWM8_Initialize	;wreg free
 21732                           
 21733                           ; BSR set to: 63
 21734                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21735  017DAC  EC3B  F0C0         	call	_EXT_INT_Initialize	;wreg free
 21736                           
 21737                           ; BSR set to: 57
 21738                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21739  017DB0  ECF8  F0C0         	call	_TMR6_Initialize	;wreg free
 21740                           
 21741                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21742  017DB4  ECE9  F0BE         	call	_TMR5_Initialize	;wreg free
 21743                           
 21744                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21745  017DB8  ECBF  F0BC         	call	_UART1_Initialize	;wreg free
 21746                           
 21747                           ; BSR set to: 57
 21748                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21749  017DBC  EC53  F0BD         	call	_UART2_Initialize	;wreg free
 21750                           
 21751                           ; BSR set to: 57
 21752                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21753  017DC0  ECA1  F0C3         	call	_SPI1_Initialize	;wreg free
 21754                           
 21755                           ; BSR set to: 61
 21756                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21757  017DC4  ECDD  F0BD         	call	_DMA2_Initialize	;wreg free
 21758                           
 21759                           ; BSR set to: 59
 21760                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21761  017DC8  ECBB  F0BB         	call	_DMA1_Initialize	;wreg free
 21762                           
 21763                           ; BSR set to: 59
 21764                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21765  017DCC  EC03  F0C4         	call	_CLKREF_Initialize	;wreg free
 21766                           
 21767                           ; BSR set to: 60
 21768                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21769  017DD0  0012               	return		;funcret
 21770  017DD2                     __end_of_SYSTEM_Initialize:
 21771                           	opt callstack 0
 21772                           
 21773 ;; *************** function _UART2_Initialize *****************
 21774 ;; Defined at:
 21775 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21776 ;; Parameters:    Size  Location     Type
 21777 ;;		None
 21778 ;; Auto vars:     Size  Location     Type
 21779 ;;		None
 21780 ;; Return value:  Size  Location     Type
 21781 ;;                  1  [STACK] void 
 21782 ;; Registers used:
 21783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21784 ;; Tracked objects:
 21785 ;;		On entry : 3F/39
 21786 ;;		On exit  : 3F/39
 21787 ;;		Unchanged: 0/0
 21788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21793 ;;Total ram usage:        0 bytes
 21794 ;; Hardware stack levels used:    1
 21795 ;; Hardware stack levels required when called:    7
 21796 ;; This function calls:
 21797 ;;		_UART2_SetRxInterruptHandler
 21798 ;;		_UART2_SetTxInterruptHandler
 21799 ;; This function is called by:
 21800 ;;		_SYSTEM_Initialize
 21801 ;; This function uses a reentrant model
 21802 ;;
 21803                           
 21804                           	psect	text88
 21805  017AA6                     __ptext88:
 21806                           	opt callstack 0
 21807  017AA6                     _UART2_Initialize:
 21808                           	opt callstack 22
 21809                           
 21810                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21811                           
 21812                           ; BSR set to: 60
 21813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21814                           ;incstack = 0
 21815  017AA6  0139               	movlb	57	; () banked
 21816  017AA8  9596               	bcf	150,2,b	;volatile
 21817                           
 21818                           ; BSR set to: 57
 21819                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21820  017AAA  0E86               	movlw	low _UART2_Receive_ISR
 21821  017AAC  6EE6               	movwf	postinc1,c
 21822  017AAE  0E86               	movlw	high _UART2_Receive_ISR
 21823  017AB0  6EE6               	movwf	postinc1,c
 21824  017AB2  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21825  017AB4  6EE6               	movwf	postinc1,c
 21826  017AB6  EC87  F0C1         	call	_UART2_SetRxInterruptHandler	;wreg free
 21827                           
 21828                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21829  017ABA  0139               	movlb	57	; () banked
 21830  017ABC  9796               	bcf	150,3,b	;volatile
 21831                           
 21832                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21833  017ABE  0EC4               	movlw	low _UART2_Transmit_ISR
 21834  017AC0  6EE6               	movwf	postinc1,c
 21835  017AC2  0E81               	movlw	high _UART2_Transmit_ISR
 21836  017AC4  6EE6               	movwf	postinc1,c
 21837  017AC6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21838  017AC8  6EE6               	movwf	postinc1,c
 21839  017ACA  EC73  F0C1         	call	_UART2_SetTxInterruptHandler	;wreg free
 21840                           
 21841                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21842  017ACE  013D               	movlb	61	; () banked
 21843  017AD0  6BD4               	clrf	212,b	;volatile
 21844                           
 21845                           ; BSR set to: 61
 21846                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21847  017AD2  6BD6               	clrf	214,b	;volatile
 21848                           
 21849                           ; BSR set to: 61
 21850                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21851  017AD4  6BD8               	clrf	216,b	;volatile
 21852                           
 21853                           ; BSR set to: 61
 21854                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21855  017AD6  0EB0               	movlw	176
 21856  017AD8  6FDA               	movwf	218,b	;volatile
 21857                           
 21858                           ; BSR set to: 61
 21859                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21860  017ADA  0E80               	movlw	128
 21861  017ADC  6FDB               	movwf	219,b	;volatile
 21862                           
 21863                           ; BSR set to: 61
 21864                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21865  017ADE  6BDC               	clrf	220,b	;volatile
 21866                           
 21867                           ; BSR set to: 61
 21868                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21869  017AE0  0E82               	movlw	130
 21870  017AE2  6FDD               	movwf	221,b	;volatile
 21871                           
 21872                           ; BSR set to: 61
 21873                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21874  017AE4  0E06               	movlw	6
 21875  017AE6  6FDE               	movwf	222,b	;volatile
 21876                           
 21877                           ; BSR set to: 61
 21878                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21879  017AE8  6BDF               	clrf	223,b	;volatile
 21880                           
 21881                           ; BSR set to: 61
 21882                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21883  017AEA  6BE0               	clrf	224,b	;volatile
 21884                           
 21885                           ; BSR set to: 61
 21886                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21887  017AEC  6BE1               	clrf	225,b	;volatile
 21888                           
 21889                           ; BSR set to: 61
 21890                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21891  017AEE  6BE2               	clrf	226,b	;volatile
 21892                           
 21893                           ; BSR set to: 61
 21894                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21895  017AF0  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21896                           
 21897                           ; BSR set to: 61
 21898                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21899  017AF2  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21900                           
 21901                           ; BSR set to: 61
 21902                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21903  017AF4  0E40               	movlw	64
 21904  017AF6  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21905                           
 21906                           ; BSR set to: 61
 21907                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21908  017AF8  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21909                           
 21910                           ; BSR set to: 61
 21911                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21912  017AFA  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21913                           
 21914                           ; BSR set to: 61
 21915                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21916  017AFC  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21917                           
 21918                           ; BSR set to: 61
 21919                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21920  017AFE  0139               	movlb	57	; () banked
 21921  017B00  8596               	bsf	150,2,b	;volatile
 21922                           
 21923                           ; BSR set to: 57
 21924                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21925  017B02  0012               	return		;funcret
 21926  017B04                     __end_of_UART2_Initialize:
 21927                           	opt callstack 0
 21928                           
 21929 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21930 ;; Defined at:
 21931 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21932 ;; Parameters:    Size  Location     Type
 21933 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21934 ;;		 -> UART2_Transmit_ISR(1), 
 21935 ;; Auto vars:     Size  Location     Type
 21936 ;;		None
 21937 ;; Return value:  Size  Location     Type
 21938 ;;                  1  [STACK] void 
 21939 ;; Registers used:
 21940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21941 ;; Tracked objects:
 21942 ;;		On entry : 3F/39
 21943 ;;		On exit  : 0/0
 21944 ;;		Unchanged: 0/0
 21945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21950 ;;Total ram usage:        0 bytes
 21951 ;; Hardware stack levels used:    1
 21952 ;; Hardware stack levels required when called:    6
 21953 ;; This function calls:
 21954 ;;		Nothing
 21955 ;; This function is called by:
 21956 ;;		_UART2_Initialize
 21957 ;; This function uses a reentrant model
 21958 ;;
 21959                           
 21960                           	psect	text89
 21961  0182E6                     __ptext89:
 21962                           	opt callstack 0
 21963  0182E6                     _UART2_SetTxInterruptHandler:
 21964                           	opt callstack 22
 21965                           
 21966                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21967                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21968                           
 21969                           ; BSR set to: 57
 21970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21971                           ;incstack = 0
 21972  0182E6  50E1               	movf	fsr1l,w,c
 21973  0182E8  0FFD               	addlw	-3
 21974  0182EA  6ED9               	movwf	fsr2l,c
 21975  0182EC  50E2               	movf	fsr1h,w,c
 21976  0182EE  6EDA               	movwf	fsr2h,c
 21977  0182F0  0EFF               	movlw	255
 21978  0182F2  22DA               	addwfc	fsr2h,f,c
 21979  0182F4  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21980  0182FA  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21981  018300  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21982                           
 21983                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21984  018306  52E5               	movf	postdec1,f,c
 21985  018308  52E5               	movf	postdec1,f,c
 21986  01830A  52E5               	movf	postdec1,f,c
 21987  01830C  0012               	return		;funcret
 21988  01830E                     __end_of_UART2_SetTxInterruptHandler:
 21989                           	opt callstack 0
 21990                           
 21991 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21992 ;; Defined at:
 21993 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21994 ;; Parameters:    Size  Location     Type
 21995 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21996 ;;		 -> UART2_Receive_ISR(1), 
 21997 ;; Auto vars:     Size  Location     Type
 21998 ;;		None
 21999 ;; Return value:  Size  Location     Type
 22000 ;;                  1  [STACK] void 
 22001 ;; Registers used:
 22002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22003 ;; Tracked objects:
 22004 ;;		On entry : 3F/39
 22005 ;;		On exit  : 0/0
 22006 ;;		Unchanged: 0/0
 22007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22012 ;;Total ram usage:        0 bytes
 22013 ;; Hardware stack levels used:    1
 22014 ;; Hardware stack levels required when called:    6
 22015 ;; This function calls:
 22016 ;;		Nothing
 22017 ;; This function is called by:
 22018 ;;		_UART2_Initialize
 22019 ;; This function uses a reentrant model
 22020 ;;
 22021                           
 22022                           	psect	text90
 22023  01830E                     __ptext90:
 22024                           	opt callstack 0
 22025  01830E                     _UART2_SetRxInterruptHandler:
 22026                           	opt callstack 22
 22027                           
 22028                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22029                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22030                           
 22031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22032                           ;incstack = 0
 22033  01830E  50E1               	movf	fsr1l,w,c
 22034  018310  0FFD               	addlw	-3
 22035  018312  6ED9               	movwf	fsr2l,c
 22036  018314  50E2               	movf	fsr1h,w,c
 22037  018316  6EDA               	movwf	fsr2h,c
 22038  018318  0EFF               	movlw	255
 22039  01831A  22DA               	addwfc	fsr2h,f,c
 22040  01831C  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 22041  018322  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 22042  018328  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 22043                           
 22044                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22045  01832E  52E5               	movf	postdec1,f,c
 22046  018330  52E5               	movf	postdec1,f,c
 22047  018332  52E5               	movf	postdec1,f,c
 22048  018334  0012               	return		;funcret
 22049  018336                     __end_of_UART2_SetRxInterruptHandler:
 22050                           	opt callstack 0
 22051                           
 22052 ;; *************** function _UART1_Initialize *****************
 22053 ;; Defined at:
 22054 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22055 ;; Parameters:    Size  Location     Type
 22056 ;;		None
 22057 ;; Auto vars:     Size  Location     Type
 22058 ;;		None
 22059 ;; Return value:  Size  Location     Type
 22060 ;;                  1  [STACK] void 
 22061 ;; Registers used:
 22062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22063 ;; Tracked objects:
 22064 ;;		On entry : 0/39
 22065 ;;		On exit  : 3F/39
 22066 ;;		Unchanged: 0/0
 22067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22072 ;;Total ram usage:        0 bytes
 22073 ;; Hardware stack levels used:    1
 22074 ;; Hardware stack levels required when called:    7
 22075 ;; This function calls:
 22076 ;;		_UART1_SetRxInterruptHandler
 22077 ;;		_UART1_SetTxInterruptHandler
 22078 ;; This function is called by:
 22079 ;;		_SYSTEM_Initialize
 22080 ;; This function uses a reentrant model
 22081 ;;
 22082                           
 22083                           	psect	text91
 22084  01797E                     __ptext91:
 22085                           	opt callstack 0
 22086  01797E                     _UART1_Initialize:
 22087                           	opt callstack 22
 22088                           
 22089                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22090                           
 22091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22092                           ;incstack = 0
 22093  01797E  0139               	movlb	57	; () banked
 22094  017980  9793               	bcf	147,3,b	;volatile
 22095                           
 22096                           ; BSR set to: 57
 22097                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22098  017982  0E68               	movlw	low _UART1_Receive_ISR
 22099  017984  6EE6               	movwf	postinc1,c
 22100  017986  0E86               	movlw	high _UART1_Receive_ISR
 22101  017988  6EE6               	movwf	postinc1,c
 22102  01798A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22103  01798C  6EE6               	movwf	postinc1,c
 22104  01798E  ECAF  F0C1         	call	_UART1_SetRxInterruptHandler	;wreg free
 22105                           
 22106                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22107  017992  0139               	movlb	57	; () banked
 22108  017994  9993               	bcf	147,4,b	;volatile
 22109                           
 22110                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22111  017996  0E98               	movlw	low _UART1_Transmit_ISR
 22112  017998  6EE6               	movwf	postinc1,c
 22113  01799A  0E81               	movlw	high _UART1_Transmit_ISR
 22114  01799C  6EE6               	movwf	postinc1,c
 22115  01799E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22116  0179A0  6EE6               	movwf	postinc1,c
 22117  0179A2  EC9B  F0C1         	call	_UART1_SetTxInterruptHandler	;wreg free
 22118                           
 22119                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22120  0179A6  013D               	movlb	61	; () banked
 22121  0179A8  6BEC               	clrf	236,b	;volatile
 22122                           
 22123                           ; BSR set to: 61
 22124                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22125  0179AA  6BED               	clrf	237,b	;volatile
 22126                           
 22127                           ; BSR set to: 61
 22128                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22129  0179AC  6BEE               	clrf	238,b	;volatile
 22130                           
 22131                           ; BSR set to: 61
 22132                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22133  0179AE  6BEF               	clrf	239,b	;volatile
 22134                           
 22135                           ; BSR set to: 61
 22136                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22137  0179B0  6BF0               	clrf	240,b	;volatile
 22138                           
 22139                           ; BSR set to: 61
 22140                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22141  0179B2  6BF1               	clrf	241,b	;volatile
 22142                           
 22143                           ; BSR set to: 61
 22144                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22145  0179B4  0EB0               	movlw	176
 22146  0179B6  6FF2               	movwf	242,b	;volatile
 22147                           
 22148                           ; BSR set to: 61
 22149                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22150  0179B8  0E80               	movlw	128
 22151  0179BA  6FF3               	movwf	243,b	;volatile
 22152                           
 22153                           ; BSR set to: 61
 22154                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22155  0179BC  6BF4               	clrf	244,b	;volatile
 22156                           
 22157                           ; BSR set to: 61
 22158                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22159  0179BE  0E82               	movlw	130
 22160  0179C0  6FF5               	movwf	245,b	;volatile
 22161                           
 22162                           ; BSR set to: 61
 22163                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22164  0179C2  0E06               	movlw	6
 22165  0179C4  6FF6               	movwf	246,b	;volatile
 22166                           
 22167                           ; BSR set to: 61
 22168                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22169  0179C6  6BF7               	clrf	247,b	;volatile
 22170                           
 22171                           ; BSR set to: 61
 22172                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22173  0179C8  6BF8               	clrf	248,b	;volatile
 22174                           
 22175                           ; BSR set to: 61
 22176                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22177  0179CA  6BF9               	clrf	249,b	;volatile
 22178                           
 22179                           ; BSR set to: 61
 22180                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22181  0179CC  6BFA               	clrf	250,b	;volatile
 22182                           
 22183                           ; BSR set to: 61
 22184                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22185  0179CE  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22186                           
 22187                           ; BSR set to: 61
 22188                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22189  0179D0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22190                           
 22191                           ; BSR set to: 61
 22192                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22193  0179D2  0E40               	movlw	64
 22194  0179D4  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22195                           
 22196                           ; BSR set to: 61
 22197                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22198  0179D6  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22199                           
 22200                           ; BSR set to: 61
 22201                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22202  0179D8  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22203                           
 22204                           ; BSR set to: 61
 22205                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22206  0179DA  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22207                           
 22208                           ; BSR set to: 61
 22209                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22210  0179DC  0139               	movlb	57	; () banked
 22211  0179DE  8793               	bsf	147,3,b	;volatile
 22212                           
 22213                           ; BSR set to: 57
 22214                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22215  0179E0  0012               	return		;funcret
 22216  0179E2                     __end_of_UART1_Initialize:
 22217                           	opt callstack 0
 22218                           
 22219 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22220 ;; Defined at:
 22221 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22222 ;; Parameters:    Size  Location     Type
 22223 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22224 ;;		 -> UART1_Transmit_ISR(1), 
 22225 ;; Auto vars:     Size  Location     Type
 22226 ;;		None
 22227 ;; Return value:  Size  Location     Type
 22228 ;;                  1  [STACK] void 
 22229 ;; Registers used:
 22230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22231 ;; Tracked objects:
 22232 ;;		On entry : 3F/39
 22233 ;;		On exit  : 0/0
 22234 ;;		Unchanged: 0/0
 22235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22240 ;;Total ram usage:        0 bytes
 22241 ;; Hardware stack levels used:    1
 22242 ;; Hardware stack levels required when called:    6
 22243 ;; This function calls:
 22244 ;;		Nothing
 22245 ;; This function is called by:
 22246 ;;		_UART1_Initialize
 22247 ;; This function uses a reentrant model
 22248 ;;
 22249                           
 22250                           	psect	text92
 22251  018336                     __ptext92:
 22252                           	opt callstack 0
 22253  018336                     _UART1_SetTxInterruptHandler:
 22254                           	opt callstack 22
 22255                           
 22256                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22257                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22258                           
 22259                           ; BSR set to: 57
 22260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22261                           ;incstack = 0
 22262  018336  50E1               	movf	fsr1l,w,c
 22263  018338  0FFD               	addlw	-3
 22264  01833A  6ED9               	movwf	fsr2l,c
 22265  01833C  50E2               	movf	fsr1h,w,c
 22266  01833E  6EDA               	movwf	fsr2h,c
 22267  018340  0EFF               	movlw	255
 22268  018342  22DA               	addwfc	fsr2h,f,c
 22269  018344  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22270  01834A  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22271  018350  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22272                           
 22273                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22274  018356  52E5               	movf	postdec1,f,c
 22275  018358  52E5               	movf	postdec1,f,c
 22276  01835A  52E5               	movf	postdec1,f,c
 22277  01835C  0012               	return		;funcret
 22278  01835E                     __end_of_UART1_SetTxInterruptHandler:
 22279                           	opt callstack 0
 22280                           
 22281 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22282 ;; Defined at:
 22283 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22284 ;; Parameters:    Size  Location     Type
 22285 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22286 ;;		 -> UART1_Receive_ISR(1), 
 22287 ;; Auto vars:     Size  Location     Type
 22288 ;;		None
 22289 ;; Return value:  Size  Location     Type
 22290 ;;                  1  [STACK] void 
 22291 ;; Registers used:
 22292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22293 ;; Tracked objects:
 22294 ;;		On entry : 3F/39
 22295 ;;		On exit  : 0/0
 22296 ;;		Unchanged: 0/0
 22297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22302 ;;Total ram usage:        0 bytes
 22303 ;; Hardware stack levels used:    1
 22304 ;; Hardware stack levels required when called:    6
 22305 ;; This function calls:
 22306 ;;		Nothing
 22307 ;; This function is called by:
 22308 ;;		_UART1_Initialize
 22309 ;; This function uses a reentrant model
 22310 ;;
 22311                           
 22312                           	psect	text93
 22313  01835E                     __ptext93:
 22314                           	opt callstack 0
 22315  01835E                     _UART1_SetRxInterruptHandler:
 22316                           	opt callstack 22
 22317                           
 22318                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22319                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22320                           
 22321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22322                           ;incstack = 0
 22323  01835E  50E1               	movf	fsr1l,w,c
 22324  018360  0FFD               	addlw	-3
 22325  018362  6ED9               	movwf	fsr2l,c
 22326  018364  50E2               	movf	fsr1h,w,c
 22327  018366  6EDA               	movwf	fsr2h,c
 22328  018368  0EFF               	movlw	255
 22329  01836A  22DA               	addwfc	fsr2h,f,c
 22330  01836C  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22331  018372  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22332  018378  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22333                           
 22334                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22335  01837E  52E5               	movf	postdec1,f,c
 22336  018380  52E5               	movf	postdec1,f,c
 22337  018382  52E5               	movf	postdec1,f,c
 22338  018384  0012               	return		;funcret
 22339  018386                     __end_of_UART1_SetRxInterruptHandler:
 22340                           	opt callstack 0
 22341                           
 22342 ;; *************** function _TMR6_Initialize *****************
 22343 ;; Defined at:
 22344 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22345 ;; Parameters:    Size  Location     Type
 22346 ;;		None
 22347 ;; Auto vars:     Size  Location     Type
 22348 ;;		None
 22349 ;; Return value:  Size  Location     Type
 22350 ;;                  1  [STACK] void 
 22351 ;; Registers used:
 22352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22353 ;; Tracked objects:
 22354 ;;		On entry : 3F/39
 22355 ;;		On exit  : 0/0
 22356 ;;		Unchanged: 0/0
 22357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;Total ram usage:        0 bytes
 22363 ;; Hardware stack levels used:    1
 22364 ;; Hardware stack levels required when called:    7
 22365 ;; This function calls:
 22366 ;;		_TMR6_SetInterruptHandler
 22367 ;; This function is called by:
 22368 ;;		_SYSTEM_Initialize
 22369 ;; This function uses a reentrant model
 22370 ;;
 22371                           
 22372                           	psect	text94
 22373  0181F0                     __ptext94:
 22374                           	opt callstack 0
 22375  0181F0                     _TMR6_Initialize:
 22376                           	opt callstack 22
 22377                           
 22378                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22379                           
 22380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22381                           ;incstack = 0
 22382  0181F0  0E01               	movlw	1
 22383  0181F2  6E96               	movwf	150,c	;volatile
 22384                           
 22385                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22386  0181F4  6A95               	clrf	149,c	;volatile
 22387                           
 22388                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22389  0181F6  6A97               	clrf	151,c	;volatile
 22390                           
 22391                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22392  0181F8  0E7C               	movlw	124
 22393  0181FA  6E93               	movwf	147,c	;volatile
 22394                           
 22395                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22396  0181FC  6A92               	clrf	146,c	;volatile
 22397                           
 22398                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22399  0181FE  0139               	movlb	57	; () banked
 22400  018200  91A9               	bcf	169,0,b	;volatile
 22401                           
 22402                           ; BSR set to: 57
 22403                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22404  018202  8199               	bsf	153,0,b	;volatile
 22405                           
 22406                           ; BSR set to: 57
 22407                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22408  018204  0E18               	movlw	low _TMR6_DefaultInterruptHandler
 22409  018206  6EE6               	movwf	postinc1,c
 22410  018208  0E7E               	movlw	high _TMR6_DefaultInterruptHandler
 22411  01820A  6EE6               	movwf	postinc1,c
 22412  01820C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22413  01820E  6EE6               	movwf	postinc1,c
 22414  018210  ECC3  F0C1         	call	_TMR6_SetInterruptHandler	;wreg free
 22415                           
 22416                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22417  018214  0EE0               	movlw	224
 22418  018216  6E94               	movwf	148,c	;volatile
 22419                           
 22420                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22421  018218  0012               	return		;funcret
 22422  01821A                     __end_of_TMR6_Initialize:
 22423                           	opt callstack 0
 22424                           
 22425 ;; *************** function _TMR6_SetInterruptHandler *****************
 22426 ;; Defined at:
 22427 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22428 ;; Parameters:    Size  Location     Type
 22429 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22430 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22431 ;; Auto vars:     Size  Location     Type
 22432 ;;		None
 22433 ;; Return value:  Size  Location     Type
 22434 ;;                  1  [STACK] void 
 22435 ;; Registers used:
 22436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22437 ;; Tracked objects:
 22438 ;;		On entry : 3F/39
 22439 ;;		On exit  : 0/0
 22440 ;;		Unchanged: 0/0
 22441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22446 ;;Total ram usage:        0 bytes
 22447 ;; Hardware stack levels used:    1
 22448 ;; Hardware stack levels required when called:    6
 22449 ;; This function calls:
 22450 ;;		Nothing
 22451 ;; This function is called by:
 22452 ;;		_TMR6_Initialize
 22453 ;; This function uses a reentrant model
 22454 ;;
 22455                           
 22456                           	psect	text95
 22457  018386                     __ptext95:
 22458                           	opt callstack 0
 22459  018386                     _TMR6_SetInterruptHandler:
 22460                           	opt callstack 22
 22461                           
 22462                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22463                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22464                           
 22465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22466                           ;incstack = 0
 22467  018386  50E1               	movf	fsr1l,w,c
 22468  018388  0FFD               	addlw	-3
 22469  01838A  6ED9               	movwf	fsr2l,c
 22470  01838C  50E2               	movf	fsr1h,w,c
 22471  01838E  6EDA               	movwf	fsr2h,c
 22472  018390  0EFF               	movlw	255
 22473  018392  22DA               	addwfc	fsr2h,f,c
 22474  018394  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22475  01839A  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22476  0183A0  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22477                           
 22478                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22479  0183A6  52E5               	movf	postdec1,f,c
 22480  0183A8  52E5               	movf	postdec1,f,c
 22481  0183AA  52E5               	movf	postdec1,f,c
 22482  0183AC  0012               	return		;funcret
 22483  0183AE                     __end_of_TMR6_SetInterruptHandler:
 22484                           	opt callstack 0
 22485                           
 22486 ;; *************** function _TMR5_Initialize *****************
 22487 ;; Defined at:
 22488 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22489 ;; Parameters:    Size  Location     Type
 22490 ;;		None
 22491 ;; Auto vars:     Size  Location     Type
 22492 ;;		None
 22493 ;; Return value:  Size  Location     Type
 22494 ;;                  1  [STACK] void 
 22495 ;; Registers used:
 22496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22497 ;; Tracked objects:
 22498 ;;		On entry : 0/39
 22499 ;;		On exit  : 0/0
 22500 ;;		Unchanged: 0/0
 22501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22506 ;;Total ram usage:        0 bytes
 22507 ;; Hardware stack levels used:    1
 22508 ;; Hardware stack levels required when called:    7
 22509 ;; This function calls:
 22510 ;;		_TMR5_SetInterruptHandler
 22511 ;; This function is called by:
 22512 ;;		_SYSTEM_Initialize
 22513 ;; This function uses a reentrant model
 22514 ;;
 22515                           
 22516                           	psect	text96
 22517  017DD2                     __ptext96:
 22518                           	opt callstack 0
 22519  017DD2                     _TMR5_Initialize:
 22520                           	opt callstack 22
 22521                           
 22522                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22523                           
 22524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22525                           ;incstack = 0
 22526  017DD2  6A9B               	clrf	155,c	;volatile
 22527                           
 22528                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22529  017DD4  6A9C               	clrf	156,c	;volatile
 22530                           
 22531                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22532  017DD6  0E01               	movlw	1
 22533  017DD8  6E9D               	movwf	157,c	;volatile
 22534                           
 22535                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22536  017DDA  0E63               	movlw	99
 22537  017DDC  6E99               	movwf	153,c	;volatile
 22538                           
 22539                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22540  017DDE  0EC0               	movlw	192
 22541  017DE0  6E98               	movwf	152,c	;volatile
 22542                           
 22543                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22544  017DE2  5098               	movf	152,w,c	;volatile
 22545  017DE4  006F FE64  F032    	movff	16281,btemp	;volatile
 22546  017DEA  6A33               	clrf	(btemp+1)^0,c
 22547  017DEC  0060  F0C8  F033   	movff	btemp,btemp+1
 22548  017DF2  6A32               	clrf	btemp^0,c
 22549  017DF4  1032               	iorwf	btemp^0,w,c
 22550  017DF6  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22551  017DF8  5033               	movf	(btemp+1)^0,w,c
 22552  017DFA  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22553                           
 22554                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22555  017DFC  0139               	movlb	57	; () banked
 22556  017DFE  9DA8               	bcf	168,6,b	;volatile
 22557                           
 22558                           ; BSR set to: 57
 22559                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22560  017E00  8D98               	bsf	152,6,b	;volatile
 22561                           
 22562                           ; BSR set to: 57
 22563                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22564  017E02  0E76               	movlw	low _TMR5_DefaultInterruptHandler
 22565  017E04  6EE6               	movwf	postinc1,c
 22566  017E06  0E84               	movlw	high _TMR5_DefaultInterruptHandler
 22567  017E08  6EE6               	movwf	postinc1,c
 22568  017E0A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22569  017E0C  6EE6               	movwf	postinc1,c
 22570  017E0E  ECD7  F0C1         	call	_TMR5_SetInterruptHandler	;wreg free
 22571                           
 22572                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22573  017E12  0E31               	movlw	49
 22574  017E14  6E9A               	movwf	154,c	;volatile
 22575                           
 22576                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22577  017E16  0012               	return		;funcret
 22578  017E18                     __end_of_TMR5_Initialize:
 22579                           	opt callstack 0
 22580                           
 22581 ;; *************** function _TMR5_SetInterruptHandler *****************
 22582 ;; Defined at:
 22583 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22584 ;; Parameters:    Size  Location     Type
 22585 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22586 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22587 ;; Auto vars:     Size  Location     Type
 22588 ;;		None
 22589 ;; Return value:  Size  Location     Type
 22590 ;;                  1  [STACK] void 
 22591 ;; Registers used:
 22592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22593 ;; Tracked objects:
 22594 ;;		On entry : 3F/39
 22595 ;;		On exit  : 0/0
 22596 ;;		Unchanged: 0/0
 22597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22602 ;;Total ram usage:        0 bytes
 22603 ;; Hardware stack levels used:    1
 22604 ;; Hardware stack levels required when called:    6
 22605 ;; This function calls:
 22606 ;;		Nothing
 22607 ;; This function is called by:
 22608 ;;		_TMR5_Initialize
 22609 ;; This function uses a reentrant model
 22610 ;;
 22611                           
 22612                           	psect	text97
 22613  0183AE                     __ptext97:
 22614                           	opt callstack 0
 22615  0183AE                     _TMR5_SetInterruptHandler:
 22616                           	opt callstack 22
 22617                           
 22618                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22619                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22620                           
 22621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22622                           ;incstack = 0
 22623  0183AE  50E1               	movf	fsr1l,w,c
 22624  0183B0  0FFD               	addlw	-3
 22625  0183B2  6ED9               	movwf	fsr2l,c
 22626  0183B4  50E2               	movf	fsr1h,w,c
 22627  0183B6  6EDA               	movwf	fsr2h,c
 22628  0183B8  0EFF               	movlw	255
 22629  0183BA  22DA               	addwfc	fsr2h,f,c
 22630  0183BC  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22631  0183C2  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22632  0183C8  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22633                           
 22634                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22635  0183CE  52E5               	movf	postdec1,f,c
 22636  0183D0  52E5               	movf	postdec1,f,c
 22637  0183D2  52E5               	movf	postdec1,f,c
 22638  0183D4  0012               	return		;funcret
 22639  0183D6                     __end_of_TMR5_SetInterruptHandler:
 22640                           	opt callstack 0
 22641                           
 22642 ;; *************** function _TMR2_Initialize *****************
 22643 ;; Defined at:
 22644 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22645 ;; Parameters:    Size  Location     Type
 22646 ;;		None
 22647 ;; Auto vars:     Size  Location     Type
 22648 ;;		None
 22649 ;; Return value:  Size  Location     Type
 22650 ;;                  1  [STACK] void 
 22651 ;; Registers used:
 22652 ;;		wreg, status,2
 22653 ;; Tracked objects:
 22654 ;;		On entry : 0/3E
 22655 ;;		On exit  : 3F/39
 22656 ;;		Unchanged: 0/0
 22657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22662 ;;Total ram usage:        0 bytes
 22663 ;; Hardware stack levels used:    1
 22664 ;; Hardware stack levels required when called:    6
 22665 ;; This function calls:
 22666 ;;		Nothing
 22667 ;; This function is called by:
 22668 ;;		_SYSTEM_Initialize
 22669 ;; This function uses a reentrant model
 22670 ;;
 22671                           
 22672                           	psect	text98
 22673  01872A                     __ptext98:
 22674                           	opt callstack 0
 22675  01872A                     _TMR2_Initialize:
 22676                           	opt callstack 23
 22677                           
 22678                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22679                           
 22680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22681                           ;incstack = 0
 22682  01872A  0E01               	movlw	1
 22683  01872C  6EAE               	movwf	174,c	;volatile
 22684                           
 22685                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22686  01872E  6AAD               	clrf	173,c	;volatile
 22687                           
 22688                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22689  018730  6AAF               	clrf	175,c	;volatile
 22690                           
 22691                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22692  018732  0E63               	movlw	99
 22693  018734  6EAB               	movwf	171,c	;volatile
 22694                           
 22695                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22696  018736  6AAA               	clrf	170,c	;volatile
 22697                           
 22698                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22699  018738  0139               	movlb	57	; () banked
 22700  01873A  95A4               	bcf	164,2,b	;volatile
 22701                           
 22702                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22703  01873C  0EC0               	movlw	192
 22704  01873E  6EAC               	movwf	172,c	;volatile
 22705                           
 22706                           ; BSR set to: 57
 22707                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22708  018740  0012               	return		;funcret
 22709  018742                     __end_of_TMR2_Initialize:
 22710                           	opt callstack 0
 22711                           
 22712 ;; *************** function _SPI1_Initialize *****************
 22713 ;; Defined at:
 22714 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22715 ;; Parameters:    Size  Location     Type
 22716 ;;		None
 22717 ;; Auto vars:     Size  Location     Type
 22718 ;;		None
 22719 ;; Return value:  Size  Location     Type
 22720 ;;                  1  [STACK] void 
 22721 ;; Registers used:
 22722 ;;		wreg, status,2
 22723 ;; Tracked objects:
 22724 ;;		On entry : 3F/39
 22725 ;;		On exit  : 3F/3D
 22726 ;;		Unchanged: 0/0
 22727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22732 ;;Total ram usage:        0 bytes
 22733 ;; Hardware stack levels used:    1
 22734 ;; Hardware stack levels required when called:    6
 22735 ;; This function calls:
 22736 ;;		Nothing
 22737 ;; This function is called by:
 22738 ;;		_SYSTEM_Initialize
 22739 ;; This function uses a reentrant model
 22740 ;;
 22741                           
 22742                           	psect	text99
 22743  018742                     __ptext99:
 22744                           	opt callstack 0
 22745  018742                     _SPI1_Initialize:
 22746                           	opt callstack 23
 22747                           
 22748                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22749                           
 22750                           ; BSR set to: 57
 22751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22752                           ;incstack = 0
 22753  018742  0E40               	movlw	64
 22754  018744  013D               	movlb	61	; () banked
 22755  018746  6F15               	movwf	21,b	;volatile
 22756                           
 22757                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22758  018748  0E03               	movlw	3
 22759  01874A  6F16               	movwf	22,b	;volatile
 22760                           
 22761                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22762  01874C  0E4F               	movlw	79
 22763  01874E  6F19               	movwf	25,b	;volatile
 22764                           
 22765                           ; BSR set to: 61
 22766                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22767  018750  6B1C               	clrf	28,b	;volatile
 22768                           
 22769                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22770  018752  0E83               	movlw	131
 22771  018754  6F14               	movwf	20,b	;volatile
 22772                           
 22773                           ; BSR set to: 61
 22774                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22775  018756  0012               	return		;funcret
 22776  018758                     __end_of_SPI1_Initialize:
 22777                           	opt callstack 0
 22778                           
 22779 ;; *************** function _PWM8_Initialize *****************
 22780 ;; Defined at:
 22781 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22782 ;; Parameters:    Size  Location     Type
 22783 ;;		None
 22784 ;; Auto vars:     Size  Location     Type
 22785 ;;		None
 22786 ;; Return value:  Size  Location     Type
 22787 ;;                  1  [STACK] void 
 22788 ;; Registers used:
 22789 ;;		wreg, status,2
 22790 ;; Tracked objects:
 22791 ;;		On entry : 3F/39
 22792 ;;		On exit  : 3F/3F
 22793 ;;		Unchanged: 0/0
 22794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22799 ;;Total ram usage:        0 bytes
 22800 ;; Hardware stack levels used:    1
 22801 ;; Hardware stack levels required when called:    6
 22802 ;; This function calls:
 22803 ;;		Nothing
 22804 ;; This function is called by:
 22805 ;;		_SYSTEM_Initialize
 22806 ;; This function uses a reentrant model
 22807 ;;
 22808                           
 22809                           	psect	text100
 22810  018758                     __ptext100:
 22811                           	opt callstack 0
 22812  018758                     _PWM8_Initialize:
 22813                           	opt callstack 23
 22814                           
 22815                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22816                           
 22817                           ; BSR set to: 61
 22818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22819                           ;incstack = 0
 22820  018758  0E80               	movlw	128
 22821  01875A  6E62               	movwf	98,c	;volatile
 22822                           
 22823                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22824  01875C  6A61               	clrf	97,c	;volatile
 22825                           
 22826                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22827  01875E  0E40               	movlw	64
 22828  018760  6E60               	movwf	96,c	;volatile
 22829                           
 22830                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22831  018762  013F               	movlb	63	; () banked
 22832  018764  515F               	movf	95,w,b	;volatile
 22833  018766  0B3F               	andlw	-193
 22834  018768  0940               	iorlw	64
 22835  01876A  6F5F               	movwf	95,b	;volatile
 22836                           
 22837                           ; BSR set to: 63
 22838                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22839  01876C  0012               	return		;funcret
 22840  01876E                     __end_of_PWM8_Initialize:
 22841                           	opt callstack 0
 22842                           
 22843 ;; *************** function _PMD_Initialize *****************
 22844 ;; Defined at:
 22845 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22846 ;; Parameters:    Size  Location     Type
 22847 ;;		None
 22848 ;; Auto vars:     Size  Location     Type
 22849 ;;		None
 22850 ;; Return value:  Size  Location     Type
 22851 ;;                  1  [STACK] void 
 22852 ;; Registers used:
 22853 ;;		None
 22854 ;; Tracked objects:
 22855 ;;		On entry : 3F/39
 22856 ;;		On exit  : 3F/39
 22857 ;;		Unchanged: 0/0
 22858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22863 ;;Total ram usage:        0 bytes
 22864 ;; Hardware stack levels used:    1
 22865 ;; Hardware stack levels required when called:    6
 22866 ;; This function calls:
 22867 ;;		Nothing
 22868 ;; This function is called by:
 22869 ;;		_SYSTEM_Initialize
 22870 ;; This function uses a reentrant model
 22871 ;;
 22872                           
 22873                           	psect	text101
 22874  018784                     __ptext101:
 22875                           	opt callstack 0
 22876  018784                     _PMD_Initialize:
 22877                           	opt callstack 23
 22878                           
 22879                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22880                           
 22881                           ; BSR set to: 63
 22882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22883                           ;incstack = 0
 22884  018784  0139               	movlb	57	; () banked
 22885  018786  6BC0               	clrf	192,b	;volatile
 22886                           
 22887                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22888  018788  6BC1               	clrf	193,b	;volatile
 22889                           
 22890                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22891  01878A  6BC2               	clrf	194,b	;volatile
 22892                           
 22893                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22894  01878C  6BC3               	clrf	195,b	;volatile
 22895                           
 22896                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22897  01878E  6BC4               	clrf	196,b	;volatile
 22898                           
 22899                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22900  018790  6BC5               	clrf	197,b	;volatile
 22901                           
 22902                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22903  018792  6BC6               	clrf	198,b	;volatile
 22904                           
 22905                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22906  018794  6BC7               	clrf	199,b	;volatile
 22907                           
 22908                           ; BSR set to: 57
 22909                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22910  018796  0012               	return		;funcret
 22911  018798                     __end_of_PMD_Initialize:
 22912                           	opt callstack 0
 22913                           
 22914 ;; *************** function _PIN_MANAGER_Initialize *****************
 22915 ;; Defined at:
 22916 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22917 ;; Parameters:    Size  Location     Type
 22918 ;;		None
 22919 ;; Auto vars:     Size  Location     Type
 22920 ;;		None
 22921 ;; Return value:  Size  Location     Type
 22922 ;;                  1  [STACK] void 
 22923 ;; Registers used:
 22924 ;;		wreg, status,2
 22925 ;; Tracked objects:
 22926 ;;		On entry : 3F/39
 22927 ;;		On exit  : 3F/3A
 22928 ;;		Unchanged: 0/0
 22929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22934 ;;Total ram usage:        0 bytes
 22935 ;; Hardware stack levels used:    1
 22936 ;; Hardware stack levels required when called:    6
 22937 ;; This function calls:
 22938 ;;		Nothing
 22939 ;; This function is called by:
 22940 ;;		_SYSTEM_Initialize
 22941 ;; This function uses a reentrant model
 22942 ;;
 22943                           
 22944                           	psect	text102
 22945  01745C                     __ptext102:
 22946                           	opt callstack 0
 22947  01745C                     _PIN_MANAGER_Initialize:
 22948                           	opt callstack 23
 22949                           
 22950                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22951                           
 22952                           ; BSR set to: 57
 22953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22954                           ;incstack = 0
 22955  01745C  0E07               	movlw	7
 22956  01745E  6EBE               	movwf	190,c	;volatile
 22957                           
 22958                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22959  017460  0E80               	movlw	128
 22960  017462  6EBD               	movwf	189,c	;volatile
 22961                           
 22962                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22963  017464  6ABA               	clrf	186,c	;volatile
 22964                           
 22965                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22966  017466  6ABF               	clrf	191,c	;volatile
 22967                           
 22968                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22969  017468  6ABB               	clrf	187,c	;volatile
 22970                           
 22971                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22972  01746A  0E07               	movlw	7
 22973  01746C  6EBC               	movwf	188,c	;volatile
 22974                           
 22975                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22976  01746E  6AC6               	clrf	198,c	;volatile
 22977                           
 22978                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22979  017470  0E0F               	movlw	15
 22980  017472  6EC7               	movwf	199,c	;volatile
 22981                           
 22982                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22983  017474  68C2               	setf	194,c	;volatile
 22984                           
 22985                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22986  017476  0EBF               	movlw	191
 22987  017478  6EC3               	movwf	195,c	;volatile
 22988                           
 22989                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22990  01747A  0E90               	movlw	144
 22991  01747C  6EC4               	movwf	196,c	;volatile
 22992                           
 22993                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22994  01747E  0E0C               	movlw	12
 22995  017480  6EC5               	movwf	197,c	;volatile
 22996                           
 22997                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22998  017482  013A               	movlb	58	; () banked
 22999  017484  6B70               	clrf	112,b	;volatile
 23000                           
 23001                           ; BSR set to: 58
 23002                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23003  017486  6B60               	clrf	96,b	;volatile
 23004                           
 23005                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23006  017488  0E3C               	movlw	60
 23007  01748A  6F50               	movwf	80,b	;volatile
 23008                           
 23009                           ; BSR set to: 58
 23010                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23011  01748C  6B80               	clrf	128,b	;volatile
 23012                           
 23013                           ; BSR set to: 58
 23014                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23015  01748E  6B90               	clrf	144,b	;volatile
 23016                           
 23017                           ; BSR set to: 58
 23018                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23019  017490  6940               	setf	64,b	;volatile
 23020                           
 23021                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23022  017492  0E0C               	movlw	12
 23023  017494  6F71               	movwf	113,b	;volatile
 23024                           
 23025                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23026  017496  0E0F               	movlw	15
 23027  017498  6F91               	movwf	145,b	;volatile
 23028                           
 23029                           ; BSR set to: 58
 23030                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23031  01749A  6B81               	clrf	129,b	;volatile
 23032                           
 23033                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 23034  01749C  0E83               	movlw	131
 23035  01749E  6F51               	movwf	81,b	;volatile
 23036                           
 23037                           ; BSR set to: 58
 23038                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23039  0174A0  6B41               	clrf	65,b	;volatile
 23040                           
 23041                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23042  0174A2  0E97               	movlw	151
 23043  0174A4  6F61               	movwf	97,b	;volatile
 23044                           
 23045                           ; BSR set to: 58
 23046                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23047  0174A6  6B82               	clrf	130,b	;volatile
 23048                           
 23049                           ; BSR set to: 58
 23050                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23051  0174A8  6B92               	clrf	146,b	;volatile
 23052                           
 23053                           ; BSR set to: 58
 23054                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23055  0174AA  6B42               	clrf	66,b	;volatile
 23056                           
 23057                           ; BSR set to: 58
 23058                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23059  0174AC  6B52               	clrf	82,b	;volatile
 23060                           
 23061                           ; BSR set to: 58
 23062                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23063  0174AE  6B62               	clrf	98,b	;volatile
 23064                           
 23065                           ; BSR set to: 58
 23066                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23067  0174B0  6B72               	clrf	114,b	;volatile
 23068                           
 23069                           ; BSR set to: 58
 23070                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23071  0174B2  6943               	setf	67,b	;volatile
 23072                           
 23073                           ; BSR set to: 58
 23074                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23075  0174B4  6953               	setf	83,b	;volatile
 23076                           
 23077                           ; BSR set to: 58
 23078                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23079  0174B6  6963               	setf	99,b	;volatile
 23080                           
 23081                           ; BSR set to: 58
 23082                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23083  0174B8  6973               	setf	115,b	;volatile
 23084                           
 23085                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23086  0174BA  0E07               	movlw	7
 23087  0174BC  6F83               	movwf	131,b	;volatile
 23088                           
 23089                           ; BSR set to: 58
 23090                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23091  0174BE  6993               	setf	147,b	;volatile
 23092                           
 23093                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23094  0174C0  0E0F               	movlw	15
 23095  0174C2  6FE8               	movwf	232,b	;volatile
 23096                           
 23097                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23098  0174C4  0E13               	movlw	19
 23099  0174C6  6FDE               	movwf	222,b	;volatile
 23100                           
 23101                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23102  0174C8  0E16               	movlw	22
 23103  0174CA  6F0E               	movwf	14,b	;volatile
 23104                           
 23105                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23106  0174CC  0E1E               	movlw	30
 23107  0174CE  6F13               	movwf	19,b	;volatile
 23108                           
 23109                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23110  0174D0  0E08               	movlw	8
 23111  0174D2  6FC0               	movwf	192,b	;volatile
 23112                           
 23113                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23114  0174D4  0E10               	movlw	16
 23115  0174D6  6F19               	movwf	25,b	;volatile
 23116                           
 23117                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23118  0174D8  0E09               	movlw	9
 23119  0174DA  6FC1               	movwf	193,b	;volatile
 23120                           
 23121                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23122  0174DC  0E1F               	movlw	31
 23123  0174DE  6F15               	movwf	21,b	;volatile
 23124                           
 23125                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23126  0174E0  0E13               	movlw	19
 23127  0174E2  6F16               	movwf	22,b	;volatile
 23128                           
 23129                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23130  0174E4  0E17               	movlw	23
 23131  0174E6  6FE5               	movwf	229,b	;volatile
 23132                           
 23133                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23134  0174E8  0E14               	movlw	20
 23135  0174EA  6FDF               	movwf	223,b	;volatile
 23136                           
 23137                           ; BSR set to: 58
 23138                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23139  0174EC  0012               	return		;funcret
 23140  0174EE                     __end_of_PIN_MANAGER_Initialize:
 23141                           	opt callstack 0
 23142                           
 23143 ;; *************** function _OSCILLATOR_Initialize *****************
 23144 ;; Defined at:
 23145 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23146 ;; Parameters:    Size  Location     Type
 23147 ;;		None
 23148 ;; Auto vars:     Size  Location     Type
 23149 ;;		None
 23150 ;; Return value:  Size  Location     Type
 23151 ;;                  1  [STACK] void 
 23152 ;; Registers used:
 23153 ;;		wreg, status,2
 23154 ;; Tracked objects:
 23155 ;;		On entry : 3F/3A
 23156 ;;		On exit  : 3F/39
 23157 ;;		Unchanged: 0/0
 23158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23163 ;;Total ram usage:        0 bytes
 23164 ;; Hardware stack levels used:    1
 23165 ;; Hardware stack levels required when called:    6
 23166 ;; This function calls:
 23167 ;;		Nothing
 23168 ;; This function is called by:
 23169 ;;		_SYSTEM_Initialize
 23170 ;; This function uses a reentrant model
 23171 ;;
 23172                           
 23173                           	psect	text103
 23174  01876E                     __ptext103:
 23175                           	opt callstack 0
 23176  01876E                     _OSCILLATOR_Initialize:
 23177                           	opt callstack 23
 23178                           
 23179                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23180                           
 23181                           ; BSR set to: 58
 23182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23183                           ;incstack = 0
 23184  01876E  0E20               	movlw	32
 23185  018770  0139               	movlb	57	; () banked
 23186  018772  6FD9               	movwf	217,b	;volatile
 23187                           
 23188                           ; BSR set to: 57
 23189                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23190  018774  6BDB               	clrf	219,b	;volatile
 23191                           
 23192                           ; BSR set to: 57
 23193                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23194  018776  6BDD               	clrf	221,b	;volatile
 23195                           
 23196                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23197  018778  0E02               	movlw	2
 23198  01877A  6FDF               	movwf	223,b	;volatile
 23199                           
 23200                           ; BSR set to: 57
 23201                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23202  01877C  6BDE               	clrf	222,b	;volatile
 23203  01877E                     l171:
 23204                           
 23205                           ; BSR set to: 57
 23206                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23207  01877E  B1DC               	btfsc	220,0,b	;volatile
 23208  018780  0012               	return	
 23209  018782  D7FD               	goto	l171
 23210  018784                     __end_of_OSCILLATOR_Initialize:
 23211                           	opt callstack 0
 23212                           
 23213 ;; *************** function _INTERRUPT_Initialize *****************
 23214 ;; Defined at:
 23215 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23216 ;; Parameters:    Size  Location     Type
 23217 ;;		None
 23218 ;; Auto vars:     Size  Location     Type
 23219 ;;  state           1  [STACK] _Bool 
 23220 ;; Return value:  Size  Location     Type
 23221 ;;                  1  [STACK] void 
 23222 ;; Registers used:
 23223 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23224 ;; Tracked objects:
 23225 ;;		On entry : 0/0
 23226 ;;		On exit  : 3F/39
 23227 ;;		Unchanged: 0/0
 23228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23233 ;;Total ram usage:        0 bytes
 23234 ;; Hardware stack levels used:    1
 23235 ;; Hardware stack levels required when called:    6
 23236 ;; This function calls:
 23237 ;;		Nothing
 23238 ;; This function is called by:
 23239 ;;		_SYSTEM_Initialize
 23240 ;; This function uses a reentrant model
 23241 ;;
 23242                           
 23243                           	psect	text104
 23244  0178B4                     __ptext104:
 23245                           	opt callstack 0
 23246  0178B4                     _INTERRUPT_Initialize:
 23247                           	opt callstack 0
 23248                           
 23249                           ; BSR set to: 57
 23250                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23251  0178B4  52E6               	movf	postinc1,f,c
 23252                           
 23253                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23254                           
 23255                           ;incstack = 0
 23256  0178B6  8AD2               	bsf	210,5,c	;volatile
 23257                           
 23258                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23259  0178B8  AED2               	btfss	16338,7,c	;volatile
 23260  0178BA  D003               	goto	u7930
 23261  0178BC  6A3D               	clrf	(btemp+11)^0,c
 23262  0178BE  2A3D               	incf	(btemp+11)^0,f,c
 23263  0178C0  D001               	goto	u7948
 23264  0178C2                     u7930:
 23265  0178C2  6A3D               	clrf	(btemp+11)^0,c
 23266  0178C4                     u7948:
 23267                           
 23268                           ;stkvar	_state @ sp[(-1)+0]
 23269  0178C4  0EFF               	movlw	-1
 23270  0178C6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23271                           
 23272                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23273  0178CC  9ED2               	bcf	16338,7,c	;volatile
 23274                           
 23275                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23276  0178CE  0E55               	movlw	85
 23277  0178D0  6ED4               	movwf	212,c	;volatile
 23278                           
 23279                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23280  0178D2  0EAA               	movlw	170
 23281  0178D4  6ED4               	movwf	212,c	;volatile
 23282                           
 23283                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23284  0178D6  90D4               	bcf	212,0,c	;volatile
 23285                           
 23286                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23287  0178D8  0138               	movlb	56	; () banked
 23288  0178DA  6B9F               	clrf	159,b	;volatile
 23289                           
 23290                           ; BSR set to: 56
 23291                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23292  0178DC  6B9E               	clrf	158,b	;volatile
 23293                           
 23294                           ; BSR set to: 56
 23295                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23296  0178DE  0E08               	movlw	8
 23297  0178E0  6F9D               	movwf	157,b	;volatile
 23298                           
 23299                           ; BSR set to: 56
 23300                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23301  0178E2  0E55               	movlw	85
 23302  0178E4  6ED4               	movwf	212,c	;volatile
 23303                           
 23304                           ; BSR set to: 56
 23305                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23306  0178E6  0EAA               	movlw	170
 23307  0178E8  6ED4               	movwf	212,c	;volatile
 23308                           
 23309                           ; BSR set to: 56
 23310                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23311  0178EA  80D4               	bsf	212,0,c	;volatile
 23312                           
 23313                           ; BSR set to: 56
 23314                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23315                           ;stkvar	_state @ sp[(-1)+0]
 23316  0178EC  0EFF               	movlw	-1
 23317  0178EE  B0E3               	btfsc	plusw1,0,c
 23318  0178F0  D002               	bra	u7955
 23319  0178F2  9ED2               	bcf	16338,7,c	;volatile
 23320  0178F4  D001               	bra	u7956
 23321  0178F6                     u7955:
 23322  0178F6  8ED2               	bsf	16338,7,c	;volatile
 23323  0178F8                     u7956:
 23324                           
 23325                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23326  0178F8  0139               	movlb	57	; () banked
 23327  0178FA  8782               	bsf	130,3,b	;volatile
 23328                           
 23329                           ; BSR set to: 57
 23330                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23331  0178FC  8382               	bsf	130,1,b	;volatile
 23332                           
 23333                           ; BSR set to: 57
 23334                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23335  0178FE  8182               	bsf	130,0,b	;volatile
 23336                           
 23337                           ; BSR set to: 57
 23338                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23339  017900  8582               	bsf	130,2,b	;volatile
 23340                           
 23341                           ; BSR set to: 57
 23342                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23343  017902  8786               	bsf	134,3,b	;volatile
 23344                           
 23345                           ; BSR set to: 57
 23346                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23347  017904  8586               	bsf	134,2,b	;volatile
 23348                           
 23349                           ; BSR set to: 57
 23350                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23351  017906  8983               	bsf	131,4,b	;volatile
 23352                           
 23353                           ; BSR set to: 57
 23354                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23355  017908  8783               	bsf	131,3,b	;volatile
 23356                           
 23357                           ; BSR set to: 57
 23358                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23359  01790A  8181               	bsf	129,0,b	;volatile
 23360                           
 23361                           ; BSR set to: 57
 23362                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23363  01790C  9185               	bcf	133,0,b	;volatile
 23364                           
 23365                           ; BSR set to: 57
 23366                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23367  01790E  8189               	bsf	137,0,b	;volatile
 23368                           
 23369                           ; BSR set to: 57
 23370                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23371  017910  9D88               	bcf	136,6,b	;volatile
 23372                           
 23373                           ; BSR set to: 57
 23374                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23375  017912  8581               	bsf	129,2,b	;volatile
 23376                           
 23377                           ; BSR set to: 57
 23378                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23379  017914  8781               	bsf	129,3,b	;volatile
 23380                           
 23381                           ; BSR set to: 57
 23382                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23383  017916  52E5               	movf	postdec1,f,c
 23384  017918  0012               	return		;funcret
 23385  01791A                     __end_of_INTERRUPT_Initialize:
 23386                           	opt callstack 0
 23387                           
 23388 ;; *************** function _FVR_Initialize *****************
 23389 ;; Defined at:
 23390 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23391 ;; Parameters:    Size  Location     Type
 23392 ;;		None
 23393 ;; Auto vars:     Size  Location     Type
 23394 ;;		None
 23395 ;; Return value:  Size  Location     Type
 23396 ;;                  1  [STACK] void 
 23397 ;; Registers used:
 23398 ;;		wreg, status,2
 23399 ;; Tracked objects:
 23400 ;;		On entry : 3F/39
 23401 ;;		On exit  : 3F/3E
 23402 ;;		Unchanged: 0/0
 23403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23408 ;;Total ram usage:        0 bytes
 23409 ;; Hardware stack levels used:    1
 23410 ;; Hardware stack levels required when called:    6
 23411 ;; This function calls:
 23412 ;;		Nothing
 23413 ;; This function is called by:
 23414 ;;		_SYSTEM_Initialize
 23415 ;; This function uses a reentrant model
 23416 ;;
 23417                           
 23418                           	psect	text105
 23419  018852                     __ptext105:
 23420                           	opt callstack 0
 23421  018852                     _FVR_Initialize:
 23422                           	opt callstack 23
 23423                           
 23424                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23425                           
 23426                           ; BSR set to: 57
 23427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23428                           ;incstack = 0
 23429  018852  0EAF               	movlw	175
 23430  018854  013E               	movlb	62	; () banked
 23431  018856  6FC1               	movwf	193,b	;volatile
 23432                           
 23433                           ; BSR set to: 62
 23434                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23435  018858  0012               	return		;funcret
 23436  01885A                     __end_of_FVR_Initialize:
 23437                           	opt callstack 0
 23438                           
 23439 ;; *************** function _EXT_INT_Initialize *****************
 23440 ;; Defined at:
 23441 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23442 ;; Parameters:    Size  Location     Type
 23443 ;;		None
 23444 ;; Auto vars:     Size  Location     Type
 23445 ;;		None
 23446 ;; Return value:  Size  Location     Type
 23447 ;;                  1  [STACK] void 
 23448 ;; Registers used:
 23449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23450 ;; Tracked objects:
 23451 ;;		On entry : 3F/3F
 23452 ;;		On exit  : 3F/39
 23453 ;;		Unchanged: 0/0
 23454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23459 ;;Total ram usage:        0 bytes
 23460 ;; Hardware stack levels used:    1
 23461 ;; Hardware stack levels required when called:    7
 23462 ;; This function calls:
 23463 ;;		_INT0_SetInterruptHandler
 23464 ;;		_INT1_SetInterruptHandler
 23465 ;; This function is called by:
 23466 ;;		_SYSTEM_Initialize
 23467 ;; This function uses a reentrant model
 23468 ;;
 23469                           
 23470                           	psect	text106
 23471  018076                     __ptext106:
 23472                           	opt callstack 0
 23473  018076                     _EXT_INT_Initialize:
 23474                           	opt callstack 22
 23475                           
 23476                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23477                           
 23478                           ; BSR set to: 62
 23479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23480                           ;incstack = 0
 23481  018076  0139               	movlb	57	; () banked
 23482  018078  91A1               	bcf	161,0,b	;volatile
 23483                           
 23484                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23485  01807A  90D2               	bcf	210,0,c	;volatile
 23486                           
 23487                           ; BSR set to: 57
 23488                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23489  01807C  0E74               	movlw	low _INT0_DefaultInterruptHandler
 23490  01807E  6EE6               	movwf	postinc1,c
 23491  018080  0E88               	movlw	high _INT0_DefaultInterruptHandler
 23492  018082  6EE6               	movwf	postinc1,c
 23493  018084  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23494  018086  6EE6               	movwf	postinc1,c
 23495  018088  ECFF  F0C1         	call	_INT0_SetInterruptHandler	;wreg free
 23496                           
 23497                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23498  01808C  0139               	movlb	57	; () banked
 23499  01808E  8191               	bsf	145,0,b	;volatile
 23500                           
 23501                           ; BSR set to: 57
 23502                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23503  018090  91A5               	bcf	165,0,b	;volatile
 23504                           
 23505                           ; BSR set to: 57
 23506                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23507  018092  92D2               	bcf	210,1,c	;volatile
 23508                           
 23509                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23510  018094  0E72               	movlw	low _INT1_DefaultInterruptHandler
 23511  018096  6EE6               	movwf	postinc1,c
 23512  018098  0E88               	movlw	high _INT1_DefaultInterruptHandler
 23513  01809A  6EE6               	movwf	postinc1,c
 23514  01809C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23515  01809E  6EE6               	movwf	postinc1,c
 23516  0180A0  ECEB  F0C1         	call	_INT1_SetInterruptHandler	;wreg free
 23517                           
 23518                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23519  0180A4  0139               	movlb	57	; () banked
 23520  0180A6  8195               	bsf	149,0,b	;volatile
 23521                           
 23522                           ; BSR set to: 57
 23523                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23524  0180A8  0012               	return		;funcret
 23525  0180AA                     __end_of_EXT_INT_Initialize:
 23526                           	opt callstack 0
 23527                           
 23528 ;; *************** function _INT1_SetInterruptHandler *****************
 23529 ;; Defined at:
 23530 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23531 ;; Parameters:    Size  Location     Type
 23532 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23533 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23534 ;; Auto vars:     Size  Location     Type
 23535 ;;		None
 23536 ;; Return value:  Size  Location     Type
 23537 ;;                  1  [STACK] void 
 23538 ;; Registers used:
 23539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23540 ;; Tracked objects:
 23541 ;;		On entry : 3F/39
 23542 ;;		On exit  : 0/0
 23543 ;;		Unchanged: 0/0
 23544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23549 ;;Total ram usage:        0 bytes
 23550 ;; Hardware stack levels used:    1
 23551 ;; Hardware stack levels required when called:    6
 23552 ;; This function calls:
 23553 ;;		Nothing
 23554 ;; This function is called by:
 23555 ;;		_EXT_INT_Initialize
 23556 ;;		_start_switch_handler
 23557 ;; This function uses a reentrant model
 23558 ;;
 23559                           
 23560                           	psect	text107
 23561  0183D6                     __ptext107:
 23562                           	opt callstack 0
 23563  0183D6                     _INT1_SetInterruptHandler:
 23564                           	opt callstack 23
 23565                           
 23566                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23567                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23568                           
 23569                           ; BSR set to: 57
 23570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23571                           ;incstack = 0
 23572  0183D6  50E1               	movf	fsr1l,w,c
 23573  0183D8  0FFD               	addlw	-3
 23574  0183DA  6ED9               	movwf	fsr2l,c
 23575  0183DC  50E2               	movf	fsr1h,w,c
 23576  0183DE  6EDA               	movwf	fsr2h,c
 23577  0183E0  0EFF               	movlw	255
 23578  0183E2  22DA               	addwfc	fsr2h,f,c
 23579  0183E4  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23580  0183EA  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23581  0183F0  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23582                           
 23583                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23584  0183F6  52E5               	movf	postdec1,f,c
 23585  0183F8  52E5               	movf	postdec1,f,c
 23586  0183FA  52E5               	movf	postdec1,f,c
 23587  0183FC  0012               	return		;funcret
 23588  0183FE                     __end_of_INT1_SetInterruptHandler:
 23589                           	opt callstack 0
 23590                           
 23591 ;; *************** function _INT0_SetInterruptHandler *****************
 23592 ;; Defined at:
 23593 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23594 ;; Parameters:    Size  Location     Type
 23595 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23596 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23597 ;; Auto vars:     Size  Location     Type
 23598 ;;		None
 23599 ;; Return value:  Size  Location     Type
 23600 ;;                  1  [STACK] void 
 23601 ;; Registers used:
 23602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23603 ;; Tracked objects:
 23604 ;;		On entry : 3F/39
 23605 ;;		On exit  : 0/0
 23606 ;;		Unchanged: 0/0
 23607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23612 ;;Total ram usage:        0 bytes
 23613 ;; Hardware stack levels used:    1
 23614 ;; Hardware stack levels required when called:    6
 23615 ;; This function calls:
 23616 ;;		Nothing
 23617 ;; This function is called by:
 23618 ;;		_EXT_INT_Initialize
 23619 ;; This function uses a reentrant model
 23620 ;;
 23621                           
 23622                           	psect	text108
 23623  0183FE                     __ptext108:
 23624                           	opt callstack 0
 23625  0183FE                     _INT0_SetInterruptHandler:
 23626                           	opt callstack 22
 23627                           
 23628                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23629                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23630                           
 23631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23632                           ;incstack = 0
 23633  0183FE  50E1               	movf	fsr1l,w,c
 23634  018400  0FFD               	addlw	-3
 23635  018402  6ED9               	movwf	fsr2l,c
 23636  018404  50E2               	movf	fsr1h,w,c
 23637  018406  6EDA               	movwf	fsr2h,c
 23638  018408  0EFF               	movlw	255
 23639  01840A  22DA               	addwfc	fsr2h,f,c
 23640  01840C  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23641  018412  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23642  018418  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23643                           
 23644                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23645  01841E  52E5               	movf	postdec1,f,c
 23646  018420  52E5               	movf	postdec1,f,c
 23647  018422  52E5               	movf	postdec1,f,c
 23648  018424  0012               	return		;funcret
 23649  018426                     __end_of_INT0_SetInterruptHandler:
 23650                           	opt callstack 0
 23651                           
 23652 ;; *************** function _DMA2_Initialize *****************
 23653 ;; Defined at:
 23654 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23655 ;; Parameters:    Size  Location     Type
 23656 ;;		None
 23657 ;; Auto vars:     Size  Location     Type
 23658 ;;		None
 23659 ;; Return value:  Size  Location     Type
 23660 ;;                  1  [STACK] void 
 23661 ;; Registers used:
 23662 ;;		wreg, status,2
 23663 ;; Tracked objects:
 23664 ;;		On entry : 3F/3D
 23665 ;;		On exit  : 3F/3B
 23666 ;;		Unchanged: 0/0
 23667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23672 ;;Total ram usage:        0 bytes
 23673 ;; Hardware stack levels used:    1
 23674 ;; Hardware stack levels required when called:    6
 23675 ;; This function calls:
 23676 ;;		Nothing
 23677 ;; This function is called by:
 23678 ;;		_SYSTEM_Initialize
 23679 ;; This function uses a reentrant model
 23680 ;;
 23681                           
 23682                           	psect	text109
 23683  017BBA                     __ptext109:
 23684                           	opt callstack 0
 23685  017BBA                     _DMA2_Initialize:
 23686                           	opt callstack 23
 23687                           
 23688                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23689                           
 23690                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23691                           ;incstack = 0
 23692  017BBA  0E00               	movlw	0
 23693  017BBC  013B               	movlb	59	; () banked
 23694  017BBE  6FD9               	movwf	217,b	;volatile
 23695  017BC0  0E10               	movlw	16
 23696  017BC2  6FDA               	movwf	218,b	;volatile
 23697  017BC4  0E00               	movlw	0
 23698  017BC6  6FDB               	movwf	219,b	;volatile
 23699                           
 23700                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23701  017BC8  0E3F               	movlw	63
 23702  017BCA  6FD1               	movwf	209,b	;volatile
 23703  017BCC  0EBB               	movlw	187
 23704  017BCE  6FD0               	movwf	208,b	;volatile
 23705                           
 23706                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23707  017BD0  0E03               	movlw	3
 23708  017BD2  6FDD               	movwf	221,b	;volatile
 23709                           
 23710                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23711  017BD4  0E00               	movlw	0
 23712  017BD6  6FD8               	movwf	216,b	;volatile
 23713  017BD8  0E01               	movlw	1
 23714  017BDA  6FD7               	movwf	215,b	;volatile
 23715                           
 23716                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23717  017BDC  0E00               	movlw	0
 23718  017BDE  6FCF               	movwf	207,b	;volatile
 23719  017BE0  0E01               	movlw	1
 23720  017BE2  6FCE               	movwf	206,b	;volatile
 23721                           
 23722                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23723  017BE4  0E46               	movlw	70
 23724  017BE6  6FDF               	movwf	223,b	;volatile
 23725                           
 23726                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23727  017BE8  0E3D               	movlw	61
 23728  017BEA  6FDE               	movwf	222,b	;volatile
 23729                           
 23730                           ; BSR set to: 59
 23731                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23732  017BEC  0139               	movlb	57	; () banked
 23733  017BEE  97A5               	bcf	165,3,b	;volatile
 23734                           
 23735                           ; BSR set to: 57
 23736                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23737  017BF0  95A5               	bcf	165,2,b	;volatile
 23738                           
 23739                           ; BSR set to: 57
 23740                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23741  017BF2  9BA5               	bcf	165,5,b	;volatile
 23742                           
 23743                           ; BSR set to: 57
 23744                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23745  017BF4  99A5               	bcf	165,4,b	;volatile
 23746                           
 23747                           ; BSR set to: 57
 23748                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23749  017BF6  9795               	bcf	149,3,b	;volatile
 23750                           
 23751                           ; BSR set to: 57
 23752                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23753  017BF8  9595               	bcf	149,2,b	;volatile
 23754                           
 23755                           ; BSR set to: 57
 23756                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23757  017BFA  9B95               	bcf	149,5,b	;volatile
 23758                           
 23759                           ; BSR set to: 57
 23760                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23761  017BFC  9995               	bcf	149,4,b	;volatile
 23762  017BFE  9ED2               	bcf	16338,7,c	;# 
 23763  017C00  0139               	banksel	14831	;# 
 23764  017C02  0E55               	movlw	85	;# 
 23765  017C04  6FEF               	movwf	14831,b	;# 
 23766  017C06  0EAA               	movlw	170	;# 
 23767  017C08  6FEF               	movwf	14831,b	;# 
 23768  017C0A  81EF               	bsf	14831,0,b	;# 
 23769  017C0C  8ED2               	bsf	16338,7,c	;# 
 23770                           
 23771                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23772  017C0E  013B               	movlb	59	; () banked
 23773  017C10  6BDC               	clrf	220,b	;volatile
 23774                           
 23775                           ; BSR set to: 59
 23776                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23777  017C12  0012               	return		;funcret
 23778  017C14                     __end_of_DMA2_Initialize:
 23779                           	opt callstack 0
 23780                           
 23781 ;; *************** function _DMA1_Initialize *****************
 23782 ;; Defined at:
 23783 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23784 ;; Parameters:    Size  Location     Type
 23785 ;;		None
 23786 ;; Auto vars:     Size  Location     Type
 23787 ;;		None
 23788 ;; Return value:  Size  Location     Type
 23789 ;;                  1  [STACK] void 
 23790 ;; Registers used:
 23791 ;;		wreg, status,2
 23792 ;; Tracked objects:
 23793 ;;		On entry : 3F/3B
 23794 ;;		On exit  : 3F/3B
 23795 ;;		Unchanged: 0/0
 23796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23801 ;;Total ram usage:        0 bytes
 23802 ;; Hardware stack levels used:    1
 23803 ;; Hardware stack levels required when called:    6
 23804 ;; This function calls:
 23805 ;;		Nothing
 23806 ;; This function is called by:
 23807 ;;		_SYSTEM_Initialize
 23808 ;; This function uses a reentrant model
 23809 ;;
 23810                           
 23811                           	psect	text110
 23812  017776                     __ptext110:
 23813                           	opt callstack 0
 23814  017776                     _DMA1_Initialize:
 23815                           	opt callstack 23
 23816                           
 23817                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23818                           
 23819                           ; BSR set to: 59
 23820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23821                           ;incstack = 0
 23822  017776  0E00               	movlw	0
 23823  017778  013B               	movlb	59	; () banked
 23824  01777A  6FF9               	movwf	249,b	;volatile
 23825  01777C  0E10               	movlw	16
 23826  01777E  6FFA               	movwf	250,b	;volatile
 23827  017780  0E00               	movlw	0
 23828  017782  6FFB               	movwf	251,b	;volatile
 23829                           
 23830                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23831  017784  0E3D               	movlw	61
 23832  017786  6FF1               	movwf	241,b	;volatile
 23833  017788  0E11               	movlw	17
 23834  01778A  6FF0               	movwf	240,b	;volatile
 23835                           
 23836                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23837  01778C  0E03               	movlw	3
 23838  01778E  6FFD               	movwf	253,b	;volatile
 23839                           
 23840                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23841  017790  0E00               	movlw	0
 23842  017792  6FF8               	movwf	248,b	;volatile
 23843  017794  0E01               	movlw	1
 23844  017796  6FF7               	movwf	247,b	;volatile
 23845                           
 23846                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23847  017798  0E00               	movlw	0
 23848  01779A  6FEF               	movwf	239,b	;volatile
 23849  01779C  0E01               	movlw	1
 23850  01779E  6FEE               	movwf	238,b	;volatile
 23851                           
 23852                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23853  0177A0  0E15               	movlw	21
 23854  0177A2  6FFF               	movwf	255,b	;volatile
 23855                           
 23856                           ; BSR set to: 59
 23857                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23858  0177A4  6BFE               	clrf	254,b	;volatile
 23859                           
 23860                           ; BSR set to: 59
 23861                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23862  0177A6  0139               	movlb	57	; () banked
 23863  0177A8  93A2               	bcf	162,1,b	;volatile
 23864                           
 23865                           ; BSR set to: 57
 23866                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23867  0177AA  91A2               	bcf	162,0,b	;volatile
 23868                           
 23869                           ; BSR set to: 57
 23870                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23871  0177AC  97A2               	bcf	162,3,b	;volatile
 23872                           
 23873                           ; BSR set to: 57
 23874                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23875  0177AE  95A2               	bcf	162,2,b	;volatile
 23876                           
 23877                           ; BSR set to: 57
 23878                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23879  0177B0  8392               	bsf	146,1,b	;volatile
 23880                           
 23881                           ; BSR set to: 57
 23882                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23883  0177B2  8192               	bsf	146,0,b	;volatile
 23884                           
 23885                           ; BSR set to: 57
 23886                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23887  0177B4  8792               	bsf	146,3,b	;volatile
 23888                           
 23889                           ; BSR set to: 57
 23890                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23891  0177B6  8592               	bsf	146,2,b	;volatile
 23892                           
 23893                           ; BSR set to: 57
 23894                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23895  0177B8  6BF1               	clrf	241,b	;volatile
 23896                           
 23897                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23898  0177BA  0E01               	movlw	1
 23899  0177BC  6FF2               	movwf	242,b	;volatile
 23900                           
 23901                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23902  0177BE  0E04               	movlw	4
 23903  0177C0  6FF3               	movwf	243,b	;volatile
 23904                           
 23905                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23906  0177C2  0E02               	movlw	2
 23907  0177C4  6FF4               	movwf	244,b	;volatile
 23908                           
 23909                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23910  0177C6  0E03               	movlw	3
 23911  0177C8  6FF7               	movwf	247,b	;volatile
 23912  0177CA  9ED2               	bcf	16338,7,c	;# 
 23913  0177CC  0139               	banksel	14831	;# 
 23914  0177CE  0E55               	movlw	85	;# 
 23915  0177D0  6FEF               	movwf	14831,b	;# 
 23916  0177D2  0EAA               	movlw	170	;# 
 23917  0177D4  6FEF               	movwf	14831,b	;# 
 23918  0177D6  81EF               	bsf	14831,0,b	;# 
 23919  0177D8  8ED2               	bsf	16338,7,c	;# 
 23920                           
 23921                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23922  0177DA  013B               	movlb	59	; () banked
 23923  0177DC  6BFC               	clrf	252,b	;volatile
 23924                           
 23925                           ; BSR set to: 59
 23926                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23927  0177DE  0012               	return		;funcret
 23928  0177E0                     __end_of_DMA1_Initialize:
 23929                           	opt callstack 0
 23930                           
 23931 ;; *************** function _CLKREF_Initialize *****************
 23932 ;; Defined at:
 23933 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23934 ;; Parameters:    Size  Location     Type
 23935 ;;		None
 23936 ;; Auto vars:     Size  Location     Type
 23937 ;;		None
 23938 ;; Return value:  Size  Location     Type
 23939 ;;                  1  [STACK] void 
 23940 ;; Registers used:
 23941 ;;		wreg, status,2
 23942 ;; Tracked objects:
 23943 ;;		On entry : 3F/3B
 23944 ;;		On exit  : 3F/3C
 23945 ;;		Unchanged: 0/0
 23946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23951 ;;Total ram usage:        0 bytes
 23952 ;; Hardware stack levels used:    1
 23953 ;; Hardware stack levels required when called:    6
 23954 ;; This function calls:
 23955 ;;		Nothing
 23956 ;; This function is called by:
 23957 ;;		_SYSTEM_Initialize
 23958 ;; This function uses a reentrant model
 23959 ;;
 23960                           
 23961                           	psect	text111
 23962  018806                     __ptext111:
 23963                           	opt callstack 0
 23964  018806                     _CLKREF_Initialize:
 23965                           	opt callstack 23
 23966                           
 23967                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23968                           
 23969                           ; BSR set to: 59
 23970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23971                           ;incstack = 0
 23972  018806  013C               	movlb	60	; () banked
 23973  018808  6BE6               	clrf	230,b	;volatile
 23974                           
 23975                           ; BSR set to: 60
 23976                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23977  01880A  0E94               	movlw	148
 23978  01880C  6FE5               	movwf	229,b	;volatile
 23979                           
 23980                           ; BSR set to: 60
 23981                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23982  01880E  0012               	return		;funcret
 23983  018810                     __end_of_CLKREF_Initialize:
 23984                           	opt callstack 0
 23985                           
 23986 ;; *************** function _ADCC_Initialize *****************
 23987 ;; Defined at:
 23988 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23989 ;; Parameters:    Size  Location     Type
 23990 ;;		None
 23991 ;; Auto vars:     Size  Location     Type
 23992 ;;		None
 23993 ;; Return value:  Size  Location     Type
 23994 ;;                  1  [STACK] void 
 23995 ;; Registers used:
 23996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23997 ;; Tracked objects:
 23998 ;;		On entry : 3F/3E
 23999 ;;		On exit  : 0/0
 24000 ;;		Unchanged: 0/0
 24001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24006 ;;Total ram usage:        0 bytes
 24007 ;; Hardware stack levels used:    1
 24008 ;; Hardware stack levels required when called:    7
 24009 ;; This function calls:
 24010 ;;		_ADCC_SetADIInterruptHandler
 24011 ;;		_ADCC_SetADTIInterruptHandler
 24012 ;; This function is called by:
 24013 ;;		_SYSTEM_Initialize
 24014 ;; This function uses a reentrant model
 24015 ;;
 24016                           
 24017                           	psect	text112
 24018  0177E0                     __ptext112:
 24019                           	opt callstack 0
 24020  0177E0                     _ADCC_Initialize:
 24021                           	opt callstack 22
 24022                           
 24023                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24024                           
 24025                           ; BSR set to: 60
 24026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24027                           ;incstack = 0
 24028  0177E0  013E               	movlb	62	; () banked
 24029  0177E2  6BDE               	clrf	222,b	;volatile
 24030                           
 24031                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24032  0177E4  6BDF               	clrf	223,b	;volatile
 24033                           
 24034                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24035  0177E6  6BE0               	clrf	224,b	;volatile
 24036                           
 24037                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24038  0177E8  6BE1               	clrf	225,b	;volatile
 24039                           
 24040                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24041  0177EA  6BE4               	clrf	228,b	;volatile
 24042                           
 24043                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24044  0177EC  6BE5               	clrf	229,b	;volatile
 24045                           
 24046                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24047  0177EE  6BEA               	clrf	234,b	;volatile
 24048                           
 24049                           ; BSR set to: 62
 24050                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24051  0177F0  0E40               	movlw	64
 24052  0177F2  6FEC               	movwf	236,b	;volatile
 24053                           
 24054                           ; BSR set to: 62
 24055                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24056  0177F4  6BF1               	clrf	241,b	;volatile
 24057                           
 24058                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24059  0177F6  0E20               	movlw	32
 24060  0177F8  6FF3               	movwf	243,b	;volatile
 24061                           
 24062                           ; BSR set to: 62
 24063                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24064  0177FA  6BF4               	clrf	244,b	;volatile
 24065                           
 24066                           ; BSR set to: 62
 24067                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24068  0177FC  6BF5               	clrf	245,b	;volatile
 24069                           
 24070                           ; BSR set to: 62
 24071                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24072  0177FE  6BF6               	clrf	246,b	;volatile
 24073                           
 24074                           ; BSR set to: 62
 24075                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24076  017800  6BF7               	clrf	247,b	;volatile
 24077                           
 24078                           ; BSR set to: 62
 24079                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24080  017802  6BF9               	clrf	249,b	;volatile
 24081                           
 24082                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24083  017804  0E5B               	movlw	91
 24084  017806  6FFA               	movwf	250,b	;volatile
 24085                           
 24086                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24087  017808  0E27               	movlw	39
 24088  01780A  6FFB               	movwf	251,b	;volatile
 24089                           
 24090                           ; BSR set to: 62
 24091                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24092  01780C  6BFC               	clrf	252,b	;volatile
 24093                           
 24094                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24095  01780E  0E02               	movlw	2
 24096  017810  6FFD               	movwf	253,b	;volatile
 24097                           
 24098                           ; BSR set to: 62
 24099                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24100  017812  6BFE               	clrf	254,b	;volatile
 24101                           
 24102                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 24103  017814  0E07               	movlw	7
 24104  017816  6FFF               	movwf	255,b	;volatile
 24105                           
 24106                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 24107  017818  0E84               	movlw	132
 24108  01781A  6FF8               	movwf	248,b	;volatile
 24109                           
 24110                           ; BSR set to: 62
 24111                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24112  01781C  0139               	movlb	57	; () banked
 24113  01781E  95A1               	bcf	161,2,b	;volatile
 24114                           
 24115                           ; BSR set to: 57
 24116                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24117  017820  8591               	bsf	145,2,b	;volatile
 24118                           
 24119                           ; BSR set to: 57
 24120                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24121  017822  0E76               	movlw	low _ADCC_DefaultInterruptHandler
 24122  017824  6EE6               	movwf	postinc1,c
 24123  017826  0E88               	movlw	high _ADCC_DefaultInterruptHandler
 24124  017828  6EE6               	movwf	postinc1,c
 24125  01782A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24126  01782C  6EE6               	movwf	postinc1,c
 24127  01782E  EC27  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24128                           
 24129                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24130  017832  0139               	movlb	57	; () banked
 24131  017834  97A1               	bcf	161,3,b	;volatile
 24132                           
 24133                           ; BSR set to: 57
 24134                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24135  017836  8791               	bsf	145,3,b	;volatile
 24136                           
 24137                           ; BSR set to: 57
 24138                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24139  017838  0E76               	movlw	low _ADCC_DefaultInterruptHandler
 24140  01783A  6EE6               	movwf	postinc1,c
 24141  01783C  0E88               	movlw	high _ADCC_DefaultInterruptHandler
 24142  01783E  6EE6               	movwf	postinc1,c
 24143  017840  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24144  017842  6EE6               	movwf	postinc1,c
 24145  017844  EC13  F0C2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24146                           
 24147                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24148  017848  0012               	return		;funcret
 24149  01784A                     __end_of_ADCC_Initialize:
 24150                           	opt callstack 0
 24151                           
 24152 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24153 ;; Defined at:
 24154 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24157 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24158 ;; Auto vars:     Size  Location     Type
 24159 ;;		None
 24160 ;; Return value:  Size  Location     Type
 24161 ;;                  1  [STACK] void 
 24162 ;; Registers used:
 24163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24164 ;; Tracked objects:
 24165 ;;		On entry : 0/0
 24166 ;;		On exit  : 0/0
 24167 ;;		Unchanged: 0/0
 24168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24173 ;;Total ram usage:        0 bytes
 24174 ;; Hardware stack levels used:    1
 24175 ;; Hardware stack levels required when called:    6
 24176 ;; This function calls:
 24177 ;;		Nothing
 24178 ;; This function is called by:
 24179 ;;		_ADCC_Initialize
 24180 ;;		_start_adc_scan
 24181 ;; This function uses a reentrant model
 24182 ;;
 24183                           
 24184                           	psect	text113
 24185  018426                     __ptext113:
 24186                           	opt callstack 0
 24187  018426                     _ADCC_SetADTIInterruptHandler:
 24188                           	opt callstack 23
 24189                           
 24190                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24191                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24192                           
 24193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24194                           ;incstack = 0
 24195  018426  50E1               	movf	fsr1l,w,c
 24196  018428  0FFD               	addlw	-3
 24197  01842A  6ED9               	movwf	fsr2l,c
 24198  01842C  50E2               	movf	fsr1h,w,c
 24199  01842E  6EDA               	movwf	fsr2h,c
 24200  018430  0EFF               	movlw	255
 24201  018432  22DA               	addwfc	fsr2h,f,c
 24202  018434  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24203  01843A  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24204  018440  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24205                           
 24206                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24207  018446  52E5               	movf	postdec1,f,c
 24208  018448  52E5               	movf	postdec1,f,c
 24209  01844A  52E5               	movf	postdec1,f,c
 24210  01844C  0012               	return		;funcret
 24211  01844E                     __end_of_ADCC_SetADTIInterruptHandler:
 24212                           	opt callstack 0
 24213                           
 24214 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24215 ;; Defined at:
 24216 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24217 ;; Parameters:    Size  Location     Type
 24218 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24219 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24220 ;; Auto vars:     Size  Location     Type
 24221 ;;		None
 24222 ;; Return value:  Size  Location     Type
 24223 ;;                  1  [STACK] void 
 24224 ;; Registers used:
 24225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24226 ;; Tracked objects:
 24227 ;;		On entry : 6/0
 24228 ;;		On exit  : 0/0
 24229 ;;		Unchanged: 0/0
 24230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24235 ;;Total ram usage:        0 bytes
 24236 ;; Hardware stack levels used:    1
 24237 ;; Hardware stack levels required when called:    6
 24238 ;; This function calls:
 24239 ;;		Nothing
 24240 ;; This function is called by:
 24241 ;;		_ADCC_Initialize
 24242 ;;		_start_adc_scan
 24243 ;; This function uses a reentrant model
 24244 ;;
 24245                           
 24246                           	psect	text114
 24247  01844E                     __ptext114:
 24248                           	opt callstack 0
 24249  01844E                     _ADCC_SetADIInterruptHandler:
 24250                           	opt callstack 23
 24251                           
 24252                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24253                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24254                           
 24255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24256                           ;incstack = 0
 24257  01844E  50E1               	movf	fsr1l,w,c
 24258  018450  0FFD               	addlw	-3
 24259  018452  6ED9               	movwf	fsr2l,c
 24260  018454  50E2               	movf	fsr1h,w,c
 24261  018456  6EDA               	movwf	fsr2h,c
 24262  018458  0EFF               	movlw	255
 24263  01845A  22DA               	addwfc	fsr2h,f,c
 24264  01845C  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24265  018462  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24266  018468  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24267                           
 24268                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24269  01846E  52E5               	movf	postdec1,f,c
 24270  018470  52E5               	movf	postdec1,f,c
 24271  018472  52E5               	movf	postdec1,f,c
 24272  018474  0012               	return		;funcret
 24273  018476                     __end_of_ADCC_SetADIInterruptHandler:
 24274                           	opt callstack 0
 24275                           
 24276 ;; *************** function _INT1_ISR *****************
 24277 ;; Defined at:
 24278 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24279 ;; Parameters:    Size  Location     Type
 24280 ;;		None
 24281 ;; Auto vars:     Size  Location     Type
 24282 ;;		None
 24283 ;; Return value:  Size  Location     Type
 24284 ;;                  1    wreg      void 
 24285 ;; Registers used:
 24286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24287 ;; Tracked objects:
 24288 ;;		On entry : 0/0
 24289 ;;		On exit  : 0/0
 24290 ;;		Unchanged: 0/0
 24291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24294 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24295 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24296 ;;Total ram usage:        4 bytes
 24297 ;; Hardware stack levels used:    1
 24298 ;; Hardware stack levels required when called:    5
 24299 ;; This function calls:
 24300 ;;		_INT1_CallBack
 24301 ;; This function is called by:
 24302 ;;		Interrupt level 1
 24303 ;; This function uses a non-reentrant model
 24304 ;;
 24305                           
 24306                           	psect	text115
 24307  017F24                     __ptext115:
 24308                           	opt callstack 0
 24309  017F24                     _INT1_ISR:
 24310                           	opt callstack 12
 24311                           
 24312                           ;incstack = 0
 24313  017F24  006F FF60  F0F6    	movff	status,??_INT1_ISR
 24314  017F2A  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 24315  017F30  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 24316  017F36  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 24317  017F3C  EE16  F000         	lfsr	1,___intlo_sp
 24318                           
 24319                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24320  017F40  0139               	movlb	57	; () banked
 24321  017F42  91A5               	bcf	165,0,b	;volatile
 24322                           
 24323                           ; BSR set to: 57
 24324                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24325  017F44  ECD5  F0C2         	call	_INT1_CallBack	;wreg free
 24326  017F48  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 24327  017F4E  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 24328  017F54  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 24329  017F5A  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 24330  017F60  0011               	retfie		f
 24331  017F62                     __end_of_INT1_ISR:
 24332                           	opt callstack 0
 24333                           
 24334 ;; *************** function _INT1_CallBack *****************
 24335 ;; Defined at:
 24336 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24337 ;; Parameters:    Size  Location     Type
 24338 ;;		None
 24339 ;; Auto vars:     Size  Location     Type
 24340 ;;		None
 24341 ;; Return value:  Size  Location     Type
 24342 ;;                  1  [STACK] void 
 24343 ;; Registers used:
 24344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24345 ;; Tracked objects:
 24346 ;;		On entry : 3F/39
 24347 ;;		On exit  : 0/0
 24348 ;;		Unchanged: 0/0
 24349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;Total ram usage:        0 bytes
 24355 ;; Hardware stack levels used:    1
 24356 ;; Hardware stack levels required when called:    4
 24357 ;; This function calls:
 24358 ;;		Absolute function
 24359 ;;		_INT1_DefaultInterruptHandler
 24360 ;;		_switch_handler
 24361 ;; This function is called by:
 24362 ;;		_INT1_ISR
 24363 ;; This function uses a reentrant model
 24364 ;;
 24365                           
 24366                           	psect	text116
 24367  0185AA                     __ptext116:
 24368                           	opt callstack 0
 24369  0185AA                     _INT1_CallBack:
 24370                           	opt callstack 12
 24371                           
 24372                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24373                           
 24374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24375                           ;incstack = 0
 24376  0185AA  5013               	movf	_INT1_InterruptHandler^0,w,c
 24377  0185AC  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24378  0185AE  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24379  0185B0  B4D8               	btfsc	status,2,c
 24380  0185B2  0012               	return	
 24381                           
 24382                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24383  0185B4  D801               	call	u832_28
 24384  0185B6  0012               	return	
 24385  0185B8                     u832_28:
 24386  0185B8  0005               	push	
 24387  0185BA  6EFA               	movwf	pclath,c
 24388  0185BC  5013               	movf	_INT1_InterruptHandler^0,w,c
 24389  0185BE  6EFD               	movwf	tosl,c
 24390  0185C0  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24391  0185C2  6EFE               	movwf	tosh,c
 24392  0185C4  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24393  0185C6  6EFF               	movwf	tosu,c
 24394  0185C8  50FA               	movf	pclath,w,c
 24395  0185CA  0012               	return		;indir
 24396  0185CC                     __end_of_INT1_CallBack:
 24397                           	opt callstack 0
 24398                           
 24399 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24400 ;; Defined at:
 24401 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24402 ;; Parameters:    Size  Location     Type
 24403 ;;		None
 24404 ;; Auto vars:     Size  Location     Type
 24405 ;;		None
 24406 ;; Return value:  Size  Location     Type
 24407 ;;                  1  [STACK] void 
 24408 ;; Registers used:
 24409 ;;		None
 24410 ;; Tracked objects:
 24411 ;;		On entry : 0/39
 24412 ;;		On exit  : 0/0
 24413 ;;		Unchanged: 0/0
 24414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24419 ;;Total ram usage:        0 bytes
 24420 ;; Hardware stack levels used:    1
 24421 ;; Hardware stack levels required when called:    3
 24422 ;; This function calls:
 24423 ;;		Nothing
 24424 ;; This function is called by:
 24425 ;;		_EXT_INT_Initialize
 24426 ;;		_INT1_CallBack
 24427 ;; This function uses a reentrant model
 24428 ;;
 24429                           
 24430                           	psect	text117
 24431  018872                     __ptext117:
 24432                           	opt callstack 0
 24433  018872                     _INT1_DefaultInterruptHandler:
 24434                           	opt callstack 12
 24435                           
 24436                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24437                           
 24438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24439                           ;incstack = 0
 24440  018872  0012               	return		;funcret
 24441  018874                     __end_of_INT1_DefaultInterruptHandler:
 24442                           	opt callstack 0
 24443                           
 24444 ;; *************** function _switch_handler *****************
 24445 ;; Defined at:
 24446 ;;		line 58 in file "dio.c"
 24447 ;; Parameters:    Size  Location     Type
 24448 ;;		None
 24449 ;; Auto vars:     Size  Location     Type
 24450 ;;  i               1  [STACK] unsigned char 
 24451 ;;  sw_value        1  [STACK] unsigned char 
 24452 ;; Return value:  Size  Location     Type
 24453 ;;                  1  [STACK] void 
 24454 ;; Registers used:
 24455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24456 ;; Tracked objects:
 24457 ;;		On entry : 0/39
 24458 ;;		On exit  : 0/0
 24459 ;;		Unchanged: 0/0
 24460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24465 ;;Total ram usage:        0 bytes
 24466 ;; Hardware stack levels used:    1
 24467 ;; Hardware stack levels required when called:    3
 24468 ;; This function calls:
 24469 ;;		Nothing
 24470 ;; This function is called by:
 24471 ;;		_start_switch_handler
 24472 ;;		_INT1_CallBack
 24473 ;; This function uses a reentrant model
 24474 ;;
 24475                           
 24476                           	psect	text118
 24477  016488                     __ptext118:
 24478                           	opt callstack 0
 24479  016488                     _switch_handler:
 24480                           	opt callstack 0
 24481                           
 24482                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24483  016488  52E6               	movf	postinc1,f,c
 24484  01648A  52E6               	movf	postinc1,f,c
 24485                           
 24486                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24487                           ;stkvar	_i @ sp[(-2)+0]
 24488                           
 24489                           ;incstack = 0
 24490  01648C  0EFE               	movlw	-2
 24491  01648E  6AE3               	clrf	plusw1,c
 24492  016490  9EBD               	bcf	189,7,c	;volatile
 24493  016492  82BE               	bsf	190,1,c	;volatile
 24494                           
 24495                           ;dio.c: 72:  __nop();
 24496  016494  F000               	nop	
 24497                           
 24498                           ;dio.c: 73:  __nop();
 24499  016496  F000               	nop	
 24500                           
 24501                           ;dio.c: 74:  __nop();
 24502  016498  F000               	nop	
 24503  01649A  D019               	goto	l8666
 24504  01649C                     l8654:
 24505                           
 24506                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24507  01649C  A6CF               	btfss	207,3,c	;volatile
 24508  01649E  D011               	goto	u824_20
 24509  0164A0  D00D               	goto	u824_21
 24510  0164A2                     u821_28:
 24511                           
 24512                           ;stkvar	_sw_value @ sp[(-2)+1]
 24513  0164A2  0EFF               	movlw	-1
 24514  0164A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24515                           
 24516                           ;dio.c: 80:    break;
 24517  0164AA  D027               	goto	l8668
 24518  0164AC                     l8656:
 24519                           
 24520                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24521  0164AC  A4CF               	btfss	207,2,c	;volatile
 24522  0164AE  D009               	goto	u824_20
 24523  0164B0  D005               	goto	u824_21
 24524  0164B2                     l8658:
 24525                           
 24526                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24527  0164B2  A2CF               	btfss	207,1,c	;volatile
 24528  0164B4  D006               	goto	u824_20
 24529  0164B6  D002               	goto	u824_21
 24530  0164B8                     l8660:
 24531                           
 24532                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24533  0164B8  A0CF               	btfss	207,0,c	;volatile
 24534  0164BA  D003               	goto	u824_20
 24535  0164BC                     u824_21:
 24536  0164BC  6A3D               	clrf	(btemp+11)^0,c
 24537  0164BE  2A3D               	incf	(btemp+11)^0,f,c
 24538  0164C0  D7F0               	goto	u821_28
 24539  0164C2                     u824_20:
 24540  0164C2  6A3D               	clrf	(btemp+11)^0,c
 24541  0164C4  D7EE               	goto	u821_28
 24542  0164C6                     l8662:
 24543                           
 24544                           ;dio.c: 91:    sw_value = 1;
 24545                           ;stkvar	_sw_value @ sp[(-2)+1]
 24546  0164C6  0EFF               	movlw	-1
 24547  0164C8  6AE3               	clrf	plusw1,c
 24548  0164CA  2AE3               	incf	plusw1,f,c
 24549                           
 24550                           ;dio.c: 92:    break;
 24551  0164CC  D016               	goto	l8668
 24552  0164CE                     l8666:
 24553                           
 24554                           ;stkvar	_i @ sp[(-2)+0]
 24555  0164CE  0EFE               	movlw	-2
 24556  0164D0  50E3               	movf	plusw1,w,c
 24557  0164D2  6E3C               	movwf	(btemp+10)^0,c
 24558  0164D4  6A3D               	clrf	(btemp+11)^0,c
 24559                           
 24560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24561                           ; Switch size 1, requested type "simple"
 24562                           ; Number of cases is 1, Range of values is 0 to 0
 24563                           ; switch strategies available:
 24564                           ; Name         Instructions Cycles
 24565                           ; simple_byte            4     3 (average)
 24566                           ;	Chosen strategy is simple_byte
 24567  0164D6  503D               	movf	(btemp+11)^0,w,c
 24568  0164D8  0A00               	xorlw	0	; case 0
 24569  0164DA  A4D8               	btfss	status,2,c
 24570  0164DC  D7F4               	goto	l8662
 24571                           
 24572                           ; Switch size 1, requested type "simple"
 24573                           ; Number of cases is 4, Range of values is 0 to 3
 24574                           ; switch strategies available:
 24575                           ; Name         Instructions Cycles
 24576                           ; simple_byte           13     7 (average)
 24577                           ;	Chosen strategy is simple_byte
 24578  0164DE  503C               	movf	(btemp+10)^0,w,c
 24579  0164E0  0A00               	xorlw	0	; case 0
 24580  0164E2  B4D8               	btfsc	status,2,c
 24581  0164E4  D7E9               	goto	l8660
 24582  0164E6  0A01               	xorlw	1	; case 1
 24583  0164E8  B4D8               	btfsc	status,2,c
 24584  0164EA  D7E3               	goto	l8658
 24585  0164EC  0A03               	xorlw	3	; case 2
 24586  0164EE  B4D8               	btfsc	status,2,c
 24587  0164F0  D7DD               	goto	l8656
 24588  0164F2  0A01               	xorlw	1	; case 3
 24589  0164F4  B4D8               	btfsc	status,2,c
 24590  0164F6  D7D2               	goto	l8654
 24591  0164F8  D7E6               	goto	l8662
 24592  0164FA                     l8668:
 24593                           
 24594                           ;dio.c: 96:   if (sw_value) {
 24595                           ;stkvar	_sw_value @ sp[(-2)+1]
 24596  0164FA  0EFF               	movlw	-1
 24597  0164FC  50E3               	movf	plusw1,w,c
 24598  0164FE  B4D8               	btfsc	status,2,c
 24599  016500  D014               	goto	l8674
 24600                           
 24601                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24602                           ;stkvar	_i @ sp[(-2)+0]
 24603  016502  0EFE               	movlw	-2
 24604  016504  50E3               	movf	plusw1,w,c
 24605  016506  0D05               	mullw	5
 24606  016508  50F3               	movf	243,w,c
 24607  01650A  0F60               	addlw	low _S
 24608  01650C  6ED9               	movwf	fsr2l,c
 24609  01650E  6ADA               	clrf	fsr2h,c
 24610  016510  04DE               	decf	postinc2,w,c
 24611  016512  A4D8               	btfss	status,2,c
 24612  016514  D041               	goto	l8682
 24613                           
 24614                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24615                           ;stkvar	_i @ sp[(-2)+0]
 24616  016516  0EFE               	movlw	-2
 24617  016518  50E3               	movf	plusw1,w,c
 24618  01651A  0D05               	mullw	5
 24619  01651C  50F3               	movf	243,w,c
 24620  01651E  0F60               	addlw	low _S
 24621  016520  6ED9               	movwf	fsr2l,c
 24622  016522  6ADA               	clrf	fsr2h,c
 24623  016524  0E00               	movlw	0
 24624  016526  6EDF               	movwf	indf2,c
 24625  016528  D037               	goto	l8682
 24626  01652A                     l8674:
 24627                           
 24628                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24629                           ;stkvar	_i @ sp[(-2)+0]
 24630  01652A  0EFE               	movlw	-2
 24631  01652C  50E3               	movf	plusw1,w,c
 24632  01652E  0D05               	mullw	5
 24633  016530  50F3               	movf	243,w,c
 24634  016532  0F60               	addlw	low _S
 24635  016534  6ED9               	movwf	fsr2l,c
 24636  016536  6ADA               	clrf	fsr2h,c
 24637  016538  50DF               	movf	indf2,w,c
 24638  01653A  A4D8               	btfss	status,2,c
 24639  01653C  D02D               	goto	l8682
 24640                           
 24641                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24642                           ;stkvar	_i @ sp[(-2)+0]
 24643  01653E  0EFE               	movlw	-2
 24644  016540  50E3               	movf	plusw1,w,c
 24645  016542  0D05               	mullw	5
 24646  016544  50F3               	movf	243,w,c
 24647  016546  0F60               	addlw	low _S
 24648  016548  6ED9               	movwf	fsr2l,c
 24649  01654A  6ADA               	clrf	fsr2h,c
 24650  01654C  0E01               	movlw	1
 24651  01654E  6EDF               	movwf	indf2,c
 24652                           
 24653                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24654  016550  EE20  F2B7         	lfsr	2,_V+183	;volatile
 24655                           
 24656                           ;stkvar	_i @ sp[(-2)+0]
 24657  016554  0EFE               	movlw	-2
 24658  016556  50E3               	movf	plusw1,w,c
 24659  016558  0D05               	mullw	5
 24660  01655A  50F3               	movf	243,w,c
 24661  01655C  0F61               	addlw	low (_S+1)
 24662  01655E  6EE9               	movwf	fsr0l,c
 24663  016560  6AEA               	clrf	fsr0h,c
 24664  016562  006F FF7B FFEE     	movff	postinc2,postinc0
 24665  016568  006F FF7B FFEE     	movff	postinc2,postinc0
 24666  01656E  006F FF7B FFEE     	movff	postinc2,postinc0
 24667  016574  006F FF7B FFEE     	movff	postinc2,postinc0
 24668                           
 24669                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24670                           ;stkvar	_i @ sp[(-2)+0]
 24671  01657A  0EFE               	movlw	-2
 24672  01657C  006F FF8C  F03D    	movff	plusw1,btemp+11
 24673  016582  0E01               	movlw	1
 24674  016584  6E3C               	movwf	(btemp+10)^0,c
 24675  016586  2A3D               	incf	(btemp+11)^0,f,c
 24676  016588  D002               	goto	u828_24
 24677  01658A                     u828_25:
 24678  01658A  90D8               	bcf	status,0,c
 24679  01658C  363C               	rlcf	(btemp+10)^0,f,c
 24680  01658E                     u828_24:
 24681  01658E  2E3D               	decfsz	(btemp+11)^0,f,c
 24682  016590  D7FC               	goto	u828_25
 24683  016592  503C               	movf	(btemp+10)^0,w,c
 24684  016594  0100               	movlb	0	; () banked
 24685  016596  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24686  016598                     l8682:
 24687                           
 24688                           ;dio.c: 107:  } while (++i < 4);
 24689                           ;stkvar	_i @ sp[(-2)+0]
 24690  016598  0EFE               	movlw	-2
 24691  01659A  2AE3               	incf	plusw1,f,c
 24692  01659C  0EFE               	movlw	-2
 24693  01659E  006F FF8C  F032    	movff	plusw1,btemp
 24694  0165A4  0E03               	movlw	3
 24695  0165A6  6432               	cpfsgt	btemp^0,c
 24696  0165A8  D792               	goto	l8666
 24697                           
 24698                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24699  0165AA  92BE               	bcf	190,1,c	;volatile
 24700  0165AC  A4BE               	btfss	190,2,c	;volatile
 24701  0165AE  D002               	goto	u830_20
 24702  0165B0  0E01               	movlw	1
 24703  0165B2  D001               	goto	u830_26
 24704  0165B4                     u830_20:
 24705  0165B4  0E00               	movlw	0
 24706  0165B6                     u830_26:
 24707  0165B6  0AFF               	xorlw	255
 24708  0165B8  6E3D               	movwf	(btemp+11)^0,c
 24709  0165BA  463D               	rlncf	(btemp+11)^0,f,c
 24710  0165BC  463D               	rlncf	(btemp+11)^0,f,c
 24711  0165BE  50BE               	movf	190,w,c	;volatile
 24712  0165C0  183D               	xorwf	(btemp+11)^0,w,c
 24713  0165C2  0BFB               	andlw	-5
 24714  0165C4  183D               	xorwf	(btemp+11)^0,w,c
 24715  0165C6  6EBE               	movwf	190,c	;volatile
 24716  0165C8  8EBD               	bsf	189,7,c	;volatile
 24717                           
 24718                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24719  0165CA  52E5               	movf	postdec1,f,c
 24720  0165CC  52E5               	movf	postdec1,f,c
 24721  0165CE  0012               	return		;funcret
 24722  0165D0                     __end_of_switch_handler:
 24723                           	opt callstack 0
 24724                           
 24725 ;; *************** function _TMR5_ISR *****************
 24726 ;; Defined at:
 24727 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24728 ;; Parameters:    Size  Location     Type
 24729 ;;		None
 24730 ;; Auto vars:     Size  Location     Type
 24731 ;;		None
 24732 ;; Return value:  Size  Location     Type
 24733 ;;                  1    wreg      void 
 24734 ;; Registers used:
 24735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24736 ;; Tracked objects:
 24737 ;;		On entry : 0/0
 24738 ;;		On exit  : 0/0
 24739 ;;		Unchanged: 0/0
 24740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24743 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24744 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24745 ;;Total ram usage:        4 bytes
 24746 ;; Hardware stack levels used:    1
 24747 ;; Hardware stack levels required when called:    5
 24748 ;; This function calls:
 24749 ;;		_TMR5_CallBack
 24750 ;;		_TMR5_WriteTimer
 24751 ;; This function is called by:
 24752 ;;		Interrupt level 1
 24753 ;; This function uses a non-reentrant model
 24754 ;;
 24755                           
 24756                           	psect	text119
 24757  017B04                     __ptext119:
 24758                           	opt callstack 0
 24759  017B04                     _TMR5_ISR:
 24760                           	opt callstack 12
 24761                           
 24762                           ;incstack = 0
 24763  017B04  006F FF60  F1E2    	movff	status,??_TMR5_ISR+2
 24764  017B0A  0060  F0F4  F1E3   	movff	btemp+11,??_TMR5_ISR+3
 24765  017B10  EE16  F000         	lfsr	1,___intlo_sp
 24766                           
 24767                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24768  017B14  0139               	movlb	57	; () banked
 24769  017B16  9DA8               	bcf	168,6,b	;volatile
 24770                           
 24771                           ; BSR set to: 57
 24772                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24773  017B18  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24774  017B1E  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24775  017B24  EC72  F0BF         	call	_TMR5_WriteTimer	;wreg free
 24776                           
 24777                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24778  017B28  0102               	movlb	2	; () banked
 24779  017B2A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24780  017B2C  0101               	movlb	1	; () banked
 24781  017B2E  6FE0               	movwf	??_TMR5_ISR& (0+255),b
 24782  017B30  6BE1               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24783  017B32  0E05               	movlw	5
 24784  017B34  27E0               	addwf	??_TMR5_ISR& (0+255),f,b
 24785  017B36  0E00               	movlw	0
 24786  017B38  23E1               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24787  017B3A  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24788  017B3C  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24789  017B3E  51E0               	movf	??_TMR5_ISR& (0+255),w,b
 24790  017B40  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24791  017B42  51E1               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24792  017B44  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24793  017B46  A0D8               	btfss	status,0,c
 24794  017B48  D004               	goto	i1l1045
 24795                           
 24796                           ; BSR set to: 1
 24797                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24798  017B4A  ECB1  F0C2         	call	_TMR5_CallBack	;wreg free
 24799                           
 24800                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24801  017B4E  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24802  017B50  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24803  017B52                     i1l1045:
 24804  017B52  0060  F78C  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24805  017B58  0060  F78B  FFD8   	movff	??_TMR5_ISR+2,status
 24806  017B5E  0011               	retfie		f
 24807  017B60                     __end_of_TMR5_ISR:
 24808                           	opt callstack 0
 24809                           
 24810 ;; *************** function _TMR5_WriteTimer *****************
 24811 ;; Defined at:
 24812 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24813 ;; Parameters:    Size  Location     Type
 24814 ;;  timerVal        2  [STACK] unsigned short 
 24815 ;; Auto vars:     Size  Location     Type
 24816 ;;		None
 24817 ;; Return value:  Size  Location     Type
 24818 ;;                  1  [STACK] void 
 24819 ;; Registers used:
 24820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24821 ;; Tracked objects:
 24822 ;;		On entry : 3F/39
 24823 ;;		On exit  : 0/0
 24824 ;;		Unchanged: 0/0
 24825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24830 ;;Total ram usage:        0 bytes
 24831 ;; Hardware stack levels used:    1
 24832 ;; Hardware stack levels required when called:    3
 24833 ;; This function calls:
 24834 ;;		Nothing
 24835 ;; This function is called by:
 24836 ;;		_TMR5_ISR
 24837 ;; This function uses a reentrant model
 24838 ;;
 24839                           
 24840                           	psect	text120
 24841  017EE4                     __ptext120:
 24842                           	opt callstack 0
 24843  017EE4                     _TMR5_WriteTimer:
 24844                           	opt callstack 13
 24845                           
 24846                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24847                           
 24848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24849                           ;incstack = 0
 24850  017EE4  A49A               	btfss	154,2,c	;volatile
 24851  017EE6  D00F               	goto	l8788
 24852                           
 24853                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24854  017EE8  909A               	bcf	154,0,c	;volatile
 24855                           
 24856                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24857                           ;stkvar	_timerVal @ sp[(0)+-2]
 24858  017EEA  0EFF               	movlw	255
 24859  017EEC  24E1               	addwf	fsr1l,w,c
 24860  017EEE  6ED9               	movwf	fsr2l,c
 24861  017EF0  0EFF               	movlw	255
 24862  017EF2  20E2               	addwfc	fsr1h,w,c
 24863  017EF4  6EDA               	movwf	fsr2h,c
 24864  017EF6  50DF               	movf	indf2,w,c
 24865  017EF8  6E99               	movwf	153,c	;volatile
 24866                           
 24867                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24868                           ;stkvar	_timerVal @ sp[(0)+-2]
 24869  017EFA  0EFE               	movlw	-2
 24870  017EFC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24871                           
 24872                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24873  017F02  809A               	bsf	154,0,c	;volatile
 24874                           
 24875                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24876  017F04  D00C               	goto	l1028
 24877  017F06                     l8788:
 24878                           
 24879                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24880                           ;stkvar	_timerVal @ sp[(0)+-2]
 24881  017F06  0EFF               	movlw	255
 24882  017F08  24E1               	addwf	fsr1l,w,c
 24883  017F0A  6ED9               	movwf	fsr2l,c
 24884  017F0C  0EFF               	movlw	255
 24885  017F0E  20E2               	addwfc	fsr1h,w,c
 24886  017F10  6EDA               	movwf	fsr2h,c
 24887  017F12  50DF               	movf	indf2,w,c
 24888  017F14  6E99               	movwf	153,c	;volatile
 24889                           
 24890                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24891                           ;stkvar	_timerVal @ sp[(0)+-2]
 24892  017F16  0EFE               	movlw	-2
 24893  017F18  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24894  017F1E                     l1028:
 24895                           
 24896                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24897  017F1E  52E5               	movf	postdec1,f,c
 24898  017F20  52E5               	movf	postdec1,f,c
 24899  017F22  0012               	return		;funcret
 24900  017F24                     __end_of_TMR5_WriteTimer:
 24901                           	opt callstack 0
 24902                           
 24903 ;; *************** function _TMR5_CallBack *****************
 24904 ;; Defined at:
 24905 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24906 ;; Parameters:    Size  Location     Type
 24907 ;;		None
 24908 ;; Auto vars:     Size  Location     Type
 24909 ;;		None
 24910 ;; Return value:  Size  Location     Type
 24911 ;;                  1  [STACK] void 
 24912 ;; Registers used:
 24913 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24914 ;; Tracked objects:
 24915 ;;		On entry : 3F/1
 24916 ;;		On exit  : 0/0
 24917 ;;		Unchanged: 0/0
 24918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24923 ;;Total ram usage:        0 bytes
 24924 ;; Hardware stack levels used:    1
 24925 ;; Hardware stack levels required when called:    4
 24926 ;; This function calls:
 24927 ;;		Absolute function
 24928 ;;		_TMR5_DefaultInterruptHandler
 24929 ;; This function is called by:
 24930 ;;		_TMR5_ISR
 24931 ;; This function uses a reentrant model
 24932 ;;
 24933                           
 24934                           	psect	text121
 24935  018562                     __ptext121:
 24936                           	opt callstack 0
 24937  018562                     _TMR5_CallBack:
 24938                           	opt callstack 12
 24939                           
 24940                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24941                           
 24942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24943                           ;incstack = 0
 24944  018562  0100               	movlb	0	; () banked
 24945  018564  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24946  018566  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24947  018568  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24948  01856A  B4D8               	btfsc	status,2,c
 24949  01856C  0012               	return	
 24950                           
 24951                           ; BSR set to: 0
 24952                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24953  01856E  D801               	call	u843_28
 24954  018570  0012               	return	
 24955  018572                     u843_28:
 24956  018572  0005               	push	
 24957  018574  6EFA               	movwf	pclath,c
 24958  018576  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24959  018578  6EFD               	movwf	tosl,c
 24960  01857A  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24961  01857C  6EFE               	movwf	tosh,c
 24962  01857E  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24963  018580  6EFF               	movwf	tosu,c
 24964  018582  50FA               	movf	pclath,w,c
 24965  018584  0012               	return		;indir
 24966  018586                     __end_of_TMR5_CallBack:
 24967                           	opt callstack 0
 24968                           
 24969 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24970 ;; Defined at:
 24971 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24972 ;; Parameters:    Size  Location     Type
 24973 ;;		None
 24974 ;; Auto vars:     Size  Location     Type
 24975 ;;		None
 24976 ;; Return value:  Size  Location     Type
 24977 ;;                  1  [STACK] void 
 24978 ;; Registers used:
 24979 ;;		wreg, status,2, status,0, btemp+11
 24980 ;; Tracked objects:
 24981 ;;		On entry : 3F/0
 24982 ;;		On exit  : 3F/2
 24983 ;;		Unchanged: 0/0
 24984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24989 ;;Total ram usage:        0 bytes
 24990 ;; Hardware stack levels used:    1
 24991 ;; Hardware stack levels required when called:    3
 24992 ;; This function calls:
 24993 ;;		Nothing
 24994 ;; This function is called by:
 24995 ;;		_TMR5_Initialize
 24996 ;;		_TMR5_CallBack
 24997 ;; This function uses a reentrant model
 24998 ;;
 24999                           
 25000                           	psect	text122
 25001  018476                     __ptext122:
 25002                           	opt callstack 0
 25003  018476                     _TMR5_DefaultInterruptHandler:
 25004                           	opt callstack 12
 25005                           
 25006                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25007                           
 25008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25009                           ;incstack = 0
 25010  018476  A0BE               	btfss	190,0,c	;volatile
 25011  018478  D002               	goto	u799_20
 25012  01847A  0E01               	movlw	1
 25013  01847C  D001               	goto	u799_26
 25014  01847E                     u799_20:
 25015  01847E  0E00               	movlw	0
 25016  018480                     u799_26:
 25017  018480  0AFF               	xorlw	255
 25018  018482  6E3D               	movwf	(btemp+11)^0,c
 25019  018484  50BE               	movf	190,w,c	;volatile
 25020  018486  183D               	xorwf	(btemp+11)^0,w,c
 25021  018488  0BFE               	andlw	-2
 25022  01848A  183D               	xorwf	(btemp+11)^0,w,c
 25023  01848C  6EBE               	movwf	190,c	;volatile
 25024                           
 25025                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25026  01848E  0E01               	movlw	1
 25027  018490  0102               	movlb	2	; () banked
 25028  018492  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25029  018494  0E00               	movlw	0
 25030  018496  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25031  018498  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25032  01849A  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25033                           
 25034                           ; BSR set to: 2
 25035                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25036  01849C  0012               	return		;funcret
 25037  01849E                     __end_of_TMR5_DefaultInterruptHandler:
 25038                           	opt callstack 0
 25039                           
 25040 ;; *************** function _INT0_ISR *****************
 25041 ;; Defined at:
 25042 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25043 ;; Parameters:    Size  Location     Type
 25044 ;;		None
 25045 ;; Auto vars:     Size  Location     Type
 25046 ;;		None
 25047 ;; Return value:  Size  Location     Type
 25048 ;;                  1    wreg      void 
 25049 ;; Registers used:
 25050 ;;		wreg, status,2, status,0, pclath, tosl
 25051 ;; Tracked objects:
 25052 ;;		On entry : 0/0
 25053 ;;		On exit  : 0/0
 25054 ;;		Unchanged: 0/0
 25055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25060 ;;Total ram usage:        0 bytes
 25061 ;; Hardware stack levels used:    1
 25062 ;; Hardware stack levels required when called:    2
 25063 ;; This function calls:
 25064 ;;		_INT0_CallBack
 25065 ;; This function is called by:
 25066 ;;		Interrupt level 2
 25067 ;; This function uses a non-reentrant model
 25068 ;;
 25069                           
 25070                           	psect	text123
 25071  0187E8                     __ptext123:
 25072                           	opt callstack 0
 25073  0187E8                     _INT0_ISR:
 25074                           	opt callstack 12
 25075                           
 25076                           ; BSR set to: 2
 25077                           ;incstack = 0
 25078  0187E8  EE14  F000         	lfsr	1,___inthi_sp
 25079                           
 25080                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25081  0187EC  0139               	movlb	57	; () banked
 25082  0187EE  91A1               	bcf	161,0,b	;volatile
 25083                           
 25084                           ; BSR set to: 57
 25085                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25086  0187F0  ECE6  F0C2         	call	_INT0_CallBack	;wreg free
 25087  0187F4  0011               	retfie		f
 25088  0187F6                     __end_of_INT0_ISR:
 25089                           	opt callstack 0
 25090                           
 25091 ;; *************** function _INT0_CallBack *****************
 25092 ;; Defined at:
 25093 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25094 ;; Parameters:    Size  Location     Type
 25095 ;;		None
 25096 ;; Auto vars:     Size  Location     Type
 25097 ;;		None
 25098 ;; Return value:  Size  Location     Type
 25099 ;;                  1  [STACK] void 
 25100 ;; Registers used:
 25101 ;;		wreg, status,2, status,0, pclath, tosl
 25102 ;; Tracked objects:
 25103 ;;		On entry : 3F/39
 25104 ;;		On exit  : 0/0
 25105 ;;		Unchanged: 0/0
 25106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25111 ;;Total ram usage:        0 bytes
 25112 ;; Hardware stack levels used:    1
 25113 ;; Hardware stack levels required when called:    1
 25114 ;; This function calls:
 25115 ;;		Absolute function
 25116 ;;		_INT0_DefaultInterruptHandler
 25117 ;; This function is called by:
 25118 ;;		_INT0_ISR
 25119 ;; This function uses a reentrant model
 25120 ;;
 25121                           
 25122                           	psect	text124
 25123  0185CC                     __ptext124:
 25124                           	opt callstack 0
 25125  0185CC                     _INT0_CallBack:
 25126                           	opt callstack 12
 25127                           
 25128                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25129                           
 25130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25131                           ;incstack = 0
 25132  0185CC  5016               	movf	_INT0_InterruptHandler^0,w,c
 25133  0185CE  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25134  0185D0  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25135  0185D2  B4D8               	btfsc	status,2,c
 25136  0185D4  0012               	return	
 25137                           
 25138                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25139  0185D6  D801               	call	u391_48
 25140  0185D8  0012               	return	
 25141  0185DA                     u391_48:
 25142  0185DA  0005               	push	
 25143  0185DC  6EFA               	movwf	pclath,c
 25144  0185DE  5016               	movf	_INT0_InterruptHandler^0,w,c
 25145  0185E0  6EFD               	movwf	tosl,c
 25146  0185E2  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25147  0185E4  6EFE               	movwf	tosh,c
 25148  0185E6  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25149  0185E8  6EFF               	movwf	tosu,c
 25150  0185EA  50FA               	movf	pclath,w,c
 25151  0185EC  0012               	return		;indir
 25152  0185EE                     __end_of_INT0_CallBack:
 25153                           	opt callstack 0
 25154                           
 25155 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25156 ;; Defined at:
 25157 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25158 ;; Parameters:    Size  Location     Type
 25159 ;;		None
 25160 ;; Auto vars:     Size  Location     Type
 25161 ;;		None
 25162 ;; Return value:  Size  Location     Type
 25163 ;;                  1  [STACK] void 
 25164 ;; Registers used:
 25165 ;;		None
 25166 ;; Tracked objects:
 25167 ;;		On entry : 0/39
 25168 ;;		On exit  : 0/0
 25169 ;;		Unchanged: 0/0
 25170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25175 ;;Total ram usage:        0 bytes
 25176 ;; Hardware stack levels used:    1
 25177 ;; This function calls:
 25178 ;;		Nothing
 25179 ;; This function is called by:
 25180 ;;		_EXT_INT_Initialize
 25181 ;;		_INT0_CallBack
 25182 ;; This function uses a reentrant model
 25183 ;;
 25184                           
 25185                           	psect	text125
 25186  018874                     __ptext125:
 25187                           	opt callstack 0
 25188  018874                     _INT0_DefaultInterruptHandler:
 25189                           	opt callstack 12
 25190                           
 25191                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25192                           
 25193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25194                           ;incstack = 0
 25195  018874  0012               	return		;funcret
 25196  018876                     __end_of_INT0_DefaultInterruptHandler:
 25197                           	opt callstack 0
 25198                           
 25199 ;; *************** function _Default_ISR *****************
 25200 ;; Defined at:
 25201 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25202 ;; Parameters:    Size  Location     Type
 25203 ;;		None
 25204 ;; Auto vars:     Size  Location     Type
 25205 ;;		None
 25206 ;; Return value:  Size  Location     Type
 25207 ;;                  1    wreg      void 
 25208 ;; Registers used:
 25209 ;;		None
 25210 ;; Tracked objects:
 25211 ;;		On entry : 0/0
 25212 ;;		On exit  : 0/0
 25213 ;;		Unchanged: 0/0
 25214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25219 ;;Total ram usage:        0 bytes
 25220 ;; Hardware stack levels used:    1
 25221 ;; This function calls:
 25222 ;;		Nothing
 25223 ;; This function is called by:
 25224 ;;		Interrupt level 2
 25225 ;; This function uses a non-reentrant model
 25226 ;;
 25227                           
 25228                           	psect	text126
 25229  01886C                     __ptext126:
 25230                           	opt callstack 0
 25231  01886C                     _Default_ISR:
 25232                           	opt callstack 14
 25233                           
 25234                           ;incstack = 0
 25235  01886C  EE14  F000         	lfsr	1,___inthi_sp
 25236  018870  0011               	retfie		f
 25237  018872                     __end_of_Default_ISR:
 25238                           	opt callstack 0
 25239                           
 25240 ;; *************** function _ADCC_ISR *****************
 25241 ;; Defined at:
 25242 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25243 ;; Parameters:    Size  Location     Type
 25244 ;;		None
 25245 ;; Auto vars:     Size  Location     Type
 25246 ;;		None
 25247 ;; Return value:  Size  Location     Type
 25248 ;;                  1    wreg      void 
 25249 ;; Registers used:
 25250 ;;		wreg, status,2, status,0, pclath, tosl
 25251 ;; Tracked objects:
 25252 ;;		On entry : 0/0
 25253 ;;		On exit  : 0/0
 25254 ;;		Unchanged: 0/0
 25255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25260 ;;Total ram usage:        0 bytes
 25261 ;; Hardware stack levels used:    1
 25262 ;; Hardware stack levels required when called:    1
 25263 ;; This function calls:
 25264 ;;		Absolute function
 25265 ;;		_ADCC_DefaultInterruptHandler
 25266 ;;		_adc_int_handler
 25267 ;; This function is called by:
 25268 ;;		Interrupt level 2
 25269 ;; This function uses a non-reentrant model
 25270 ;;
 25271                           
 25272                           	psect	text127
 25273  01821C                     __ptext127:
 25274                           	opt callstack 0
 25275  01821C                     _ADCC_ISR:
 25276                           	opt callstack 13
 25277                           
 25278                           ;incstack = 0
 25279  01821C  EE14  F000         	lfsr	1,___inthi_sp
 25280                           
 25281                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25282  018220  0139               	movlb	57	; () banked
 25283  018222  95A1               	bcf	161,2,b	;volatile
 25284                           
 25285                           ; BSR set to: 57
 25286                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25287  018224  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25288  018226  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25289  018228  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25290  01822A  B4D8               	btfsc	status,2,c
 25291  01822C  0011               	retfie		f
 25292                           
 25293                           ; BSR set to: 57
 25294                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25295  01822E  D801               	call	i2u421_48
 25296  018230  0011               	retfie		f
 25297  018232                     i2u421_48:
 25298  018232  0005               	push	
 25299  018234  6EFA               	movwf	pclath,c
 25300  018236  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25301  018238  6EFD               	movwf	tosl,c
 25302  01823A  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25303  01823C  6EFE               	movwf	tosh,c
 25304  01823E  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25305  018240  6EFF               	movwf	tosu,c
 25306  018242  50FA               	movf	pclath,w,c
 25307  018244  0012               	return		;indir
 25308  018246                     __end_of_ADCC_ISR:
 25309                           	opt callstack 0
 25310                           
 25311 ;; *************** function _adc_int_t_handler *****************
 25312 ;; Defined at:
 25313 ;;		line 128 in file "daq.c"
 25314 ;; Parameters:    Size  Location     Type
 25315 ;;		None
 25316 ;; Auto vars:     Size  Location     Type
 25317 ;;		None
 25318 ;; Return value:  Size  Location     Type
 25319 ;;                  1  [STACK] void 
 25320 ;; Registers used:
 25321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25322 ;; Tracked objects:
 25323 ;;		On entry : 3F/39
 25324 ;;		On exit  : 1/0
 25325 ;;		Unchanged: 0/0
 25326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25331 ;;Total ram usage:        0 bytes
 25332 ;; Hardware stack levels used:    1
 25333 ;; Hardware stack levels required when called:    1
 25334 ;; This function calls:
 25335 ;;		_ADCC_DischargeSampleCapacitor
 25336 ;;		_ADCC_StartConversion
 25337 ;; This function is called by:
 25338 ;;		_start_adc_scan
 25339 ;;		_ADCC_ThresholdISR
 25340 ;; This function uses a reentrant model
 25341 ;;
 25342                           
 25343                           	psect	text128
 25344  01767E                     __ptext128:
 25345                           	opt callstack 0
 25346  01767E                     _adc_int_t_handler:
 25347                           	opt callstack 12
 25348                           
 25349                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25350                           
 25351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25352                           ;incstack = 0
 25353  01767E  013E               	movlb	62	; () banked
 25354  017680  51E6               	movf	230,w,b	;volatile
 25355  017682  006F FB9C  F032    	movff	16103,btemp	;volatile
 25356  017688  6A33               	clrf	(btemp+1)^0,c
 25357  01768A  0060  F0C8  F033   	movff	btemp,btemp+1
 25358  017690  6A32               	clrf	btemp^0,c
 25359  017692  2632               	addwf	btemp^0,f,c
 25360  017694  0E00               	movlw	0
 25361  017696  2233               	addwfc	(btemp+1)^0,f,c
 25362  017698  0100               	movlb	0	; () banked
 25363  01769A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25364  01769C  0D02               	mullw	2
 25365  01769E  50F3               	movf	243,w,c
 25366  0176A0  0FC7               	addlw	low _R
 25367  0176A2  6ED9               	movwf	fsr2l,c
 25368  0176A4  6ADA               	clrf	fsr2h,c
 25369  0176A6  0060  F0CB  FFDE   	movff	btemp,postinc2
 25370  0176AC  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25371  0176B2                     l8972:
 25372                           
 25373                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 25374  0176B2  0100               	movlb	0	; () banked
 25375  0176B4  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25376  0176B6  0E0D               	movlw	13
 25377  0176B8  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25378  0176BA  D003               	goto	l8978
 25379                           
 25380                           ; BSR set to: 0
 25381                           ;daq.c: 136:    R.done = 1;
 25382  0176BC  0E01               	movlw	1
 25383  0176BE  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25384  0176C0  0012               	return	
 25385  0176C2                     l8978:
 25386                           
 25387                           ; BSR set to: 0
 25388                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25389  0176C2  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25390  0176C8  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25391  0176CC  006F FF78  F03A    	movff	postinc2,btemp+8
 25392  0176D2  006F FF74  F03B    	movff	postdec2,btemp+9
 25393  0176D8  2A3D               	incf	(btemp+11)^0,f,c
 25394  0176DA  D003               	goto	u857_44
 25395  0176DC                     u857_45:
 25396  0176DC  90D8               	bcf	status,0,c
 25397  0176DE  323B               	rrcf	(btemp+9)^0,f,c
 25398  0176E0  323A               	rrcf	(btemp+8)^0,f,c
 25399  0176E2                     u857_44:
 25400  0176E2  2E3D               	decfsz	(btemp+11)^0,f,c
 25401  0176E4  D7FB               	goto	u857_45
 25402  0176E6  A03A               	btfss	(btemp+8)^0,0,c
 25403  0176E8  D7E4               	goto	l8972
 25404                           
 25405                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 25406  0176EA  EC19  F0C4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25407                           
 25408                           ; BSR set to: 62
 25409                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 25410  0176EE  0100               	movlb	0	; () banked
 25411  0176F0  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25412  0176F2  0B0F               	andlw	15
 25413  0176F4  6EE6               	movwf	postinc1,c
 25414  0176F6  ECCC  F0C3         	call	_ADCC_StartConversion	;wreg free
 25415                           
 25416                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25417  0176FA  0012               	return		;funcret
 25418  0176FC                     __end_of_adc_int_t_handler:
 25419                           	opt callstack 0
 25420                           
 25421 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25422 ;; Defined at:
 25423 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25424 ;; Parameters:    Size  Location     Type
 25425 ;;		None
 25426 ;; Auto vars:     Size  Location     Type
 25427 ;;		None
 25428 ;; Return value:  Size  Location     Type
 25429 ;;                  1  [STACK] void 
 25430 ;; Registers used:
 25431 ;;		None
 25432 ;; Tracked objects:
 25433 ;;		On entry : 3F/39
 25434 ;;		On exit  : 0/0
 25435 ;;		Unchanged: 0/0
 25436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25441 ;;Total ram usage:        0 bytes
 25442 ;; Hardware stack levels used:    1
 25443 ;; This function calls:
 25444 ;;		Nothing
 25445 ;; This function is called by:
 25446 ;;		_ADCC_Initialize
 25447 ;;		_ADCC_ISR
 25448 ;;		_ADCC_ThresholdISR
 25449 ;; This function uses a reentrant model
 25450 ;;
 25451                           
 25452                           	psect	text129
 25453  018876                     __ptext129:
 25454                           	opt callstack 0
 25455  018876                     _ADCC_DefaultInterruptHandler:
 25456                           	opt callstack 13
 25457                           
 25458                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25459                           
 25460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25461                           ;incstack = 0
 25462  018876  0012               	return		;funcret
 25463  018878                     __end_of_ADCC_DefaultInterruptHandler:
 25464                           	opt callstack 0
 25465                           
 25466 ;; *************** function _adc_int_handler *****************
 25467 ;; Defined at:
 25468 ;;		line 118 in file "daq.c"
 25469 ;; Parameters:    Size  Location     Type
 25470 ;;		None
 25471 ;; Auto vars:     Size  Location     Type
 25472 ;;		None
 25473 ;; Return value:  Size  Location     Type
 25474 ;;                  1  [STACK] void 
 25475 ;; Registers used:
 25476 ;;		None
 25477 ;; Tracked objects:
 25478 ;;		On entry : 3F/39
 25479 ;;		On exit  : 0/0
 25480 ;;		Unchanged: 0/0
 25481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;Total ram usage:        0 bytes
 25487 ;; Hardware stack levels used:    1
 25488 ;; This function calls:
 25489 ;;		Nothing
 25490 ;; This function is called by:
 25491 ;;		_start_adc_scan
 25492 ;;		_ADCC_ISR
 25493 ;; This function uses a reentrant model
 25494 ;;
 25495                           
 25496                           	psect	text130
 25497  018878                     __ptext130:
 25498                           	opt callstack 0
 25499  018878                     _adc_int_handler:
 25500                           	opt callstack 13
 25501                           
 25502                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25503                           
 25504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25505                           ;incstack = 0
 25506  018878  0012               	return		;funcret
 25507  01887A                     __end_of_adc_int_handler:
 25508                           	opt callstack 0
 25509                           
 25510 ;; *************** function _ADCC_ThresholdISR *****************
 25511 ;; Defined at:
 25512 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25513 ;; Parameters:    Size  Location     Type
 25514 ;;		None
 25515 ;; Auto vars:     Size  Location     Type
 25516 ;;		None
 25517 ;; Return value:  Size  Location     Type
 25518 ;;                  1    wreg      void 
 25519 ;; Registers used:
 25520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25521 ;; Tracked objects:
 25522 ;;		On entry : 0/0
 25523 ;;		On exit  : 0/0
 25524 ;;		Unchanged: 0/0
 25525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25528 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25529 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25530 ;;Total ram usage:        5 bytes
 25531 ;; Hardware stack levels used:    1
 25532 ;; Hardware stack levels required when called:    2
 25533 ;; This function calls:
 25534 ;;		Absolute function
 25535 ;;		_ADCC_DefaultInterruptHandler
 25536 ;;		_adc_int_t_handler
 25537 ;; This function is called by:
 25538 ;;		Interrupt level 2
 25539 ;; This function uses a non-reentrant model
 25540 ;;
 25541                           
 25542                           	psect	text131
 25543  01784C                     __ptext131:
 25544                           	opt callstack 0
 25545  01784C                     _ADCC_ThresholdISR:
 25546                           	opt callstack 12
 25547                           
 25548                           ;incstack = 0
 25549  01784C  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25550  017852  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25551  017858  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25552  01785E  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25553  017864  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25554  01786A  EE14  F000         	lfsr	1,___inthi_sp
 25555                           
 25556                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25557  01786E  0139               	movlb	57	; () banked
 25558  017870  97A1               	bcf	161,3,b	;volatile
 25559                           
 25560                           ; BSR set to: 57
 25561                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25562  017872  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25563  017874  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25564  017876  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25565  017878  B4D8               	btfsc	status,2,c
 25566  01787A  D00C               	goto	i2u860_49
 25567                           
 25568                           ; BSR set to: 57
 25569                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25570  01787C  D801               	call	i2u860_48
 25571  01787E  D00A               	goto	i2u860_49
 25572  017880                     i2u860_48:
 25573  017880  0005               	push	
 25574  017882  6EFA               	movwf	pclath,c
 25575  017884  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25576  017886  6EFD               	movwf	tosl,c
 25577  017888  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25578  01788A  6EFE               	movwf	tosh,c
 25579  01788C  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25580  01788E  6EFF               	movwf	tosu,c
 25581  017890  50FA               	movf	pclath,w,c
 25582  017892  0012               	return		;indir
 25583  017894                     i2u860_49:
 25584  017894  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25585  01789A  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25586  0178A0  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25587  0178A6  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25588  0178AC  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25589  0178B2  0011               	retfie		f
 25590  0178B4                     __end_of_ADCC_ThresholdISR:
 25591                           	opt callstack 0
 25592                           
 25593 ;; *************** function _UART1_tx_vect_isr *****************
 25594 ;; Defined at:
 25595 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25596 ;; Parameters:    Size  Location     Type
 25597 ;;		None
 25598 ;; Auto vars:     Size  Location     Type
 25599 ;;		None
 25600 ;; Return value:  Size  Location     Type
 25601 ;;                  1    wreg      void 
 25602 ;; Registers used:
 25603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25604 ;; Tracked objects:
 25605 ;;		On entry : 0/0
 25606 ;;		On exit  : 0/0
 25607 ;;		Unchanged: 0/0
 25608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25613 ;;Total ram usage:        0 bytes
 25614 ;; Hardware stack levels used:    1
 25615 ;; Hardware stack levels required when called:    1
 25616 ;; This function calls:
 25617 ;;		Absolute function
 25618 ;;		_UART1_Transmit_ISR
 25619 ;; This function is called by:
 25620 ;;		Interrupt level 2
 25621 ;; This function uses a non-reentrant model
 25622 ;;
 25623                           
 25624                           	psect	text132
 25625  0184A0                     __ptext132:
 25626                           	opt callstack 0
 25627  0184A0                     _UART1_tx_vect_isr:
 25628                           	opt callstack 13
 25629                           
 25630                           ;incstack = 0
 25631  0184A0  EE14  F000         	lfsr	1,___inthi_sp
 25632                           
 25633                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25634  0184A4  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25635  0184A6  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25636  0184A8  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25637  0184AA  B4D8               	btfsc	status,2,c
 25638  0184AC  0011               	retfie		f
 25639                           
 25640                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25641  0184AE  D801               	call	i2u862_48
 25642  0184B0  0011               	retfie		f
 25643  0184B2                     i2u862_48:
 25644  0184B2  0005               	push	
 25645  0184B4  6EFA               	movwf	pclath,c
 25646  0184B6  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25647  0184B8  6EFD               	movwf	tosl,c
 25648  0184BA  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25649  0184BC  6EFE               	movwf	tosh,c
 25650  0184BE  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25651  0184C0  6EFF               	movwf	tosu,c
 25652  0184C2  50FA               	movf	pclath,w,c
 25653  0184C4  0012               	return		;indir
 25654  0184C6                     __end_of_UART1_tx_vect_isr:
 25655                           	opt callstack 0
 25656                           
 25657 ;; *************** function _UART1_Transmit_ISR *****************
 25658 ;; Defined at:
 25659 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25660 ;; Parameters:    Size  Location     Type
 25661 ;;		None
 25662 ;; Auto vars:     Size  Location     Type
 25663 ;;		None
 25664 ;; Return value:  Size  Location     Type
 25665 ;;                  1  [STACK] void 
 25666 ;; Registers used:
 25667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25668 ;; Tracked objects:
 25669 ;;		On entry : 0/0
 25670 ;;		On exit  : 3B/39
 25671 ;;		Unchanged: 0/0
 25672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25677 ;;Total ram usage:        0 bytes
 25678 ;; Hardware stack levels used:    1
 25679 ;; This function calls:
 25680 ;;		Nothing
 25681 ;; This function is called by:
 25682 ;;		_UART1_Initialize
 25683 ;;		_UART1_tx_vect_isr
 25684 ;; This function uses a reentrant model
 25685 ;;
 25686                           
 25687                           	psect	text133
 25688  018198                     __ptext133:
 25689                           	opt callstack 0
 25690  018198                     _UART1_Transmit_ISR:
 25691                           	opt callstack 13
 25692                           
 25693                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25694                           
 25695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25696                           ;incstack = 0
 25697  018198  0E40               	movlw	64
 25698  01819A  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25699  01819C  D010               	goto	l581
 25700                           
 25701                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25702  01819E  0EBB               	movlw	low _uart1TxBuffer
 25703  0181A0  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25704  0181A2  6ED9               	movwf	fsr2l,c
 25705  0181A4  6ADA               	clrf	fsr2h,c
 25706  0181A6  0E02               	movlw	high _uart1TxBuffer
 25707  0181A8  22DA               	addwfc	fsr2h,f,c
 25708  0181AA  50DF               	movf	indf2,w,c
 25709  0181AC  013D               	movlb	61	; () banked
 25710  0181AE  6FEA               	movwf	234,b	;volatile
 25711                           
 25712                           ; BSR set to: 61
 25713  0181B0  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25714                           
 25715                           ; BSR set to: 61
 25716                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25717  0181B2  0E3F               	movlw	63
 25718  0181B4  6430               	cpfsgt	_uart1TxTail^0,c
 25719  0181B6  D001               	goto	l8740
 25720                           
 25721                           ; BSR set to: 61
 25722                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25723  0181B8  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25724  0181BA                     l8740:
 25725                           
 25726                           ; BSR set to: 61
 25727                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25728  0181BA  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25729                           
 25730                           ;mcc_generated_files/uart1.c: 222:  } else {
 25731  0181BC  0012               	return	
 25732  0181BE                     l581:
 25733                           
 25734                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25735  0181BE  0139               	movlb	57	; () banked
 25736  0181C0  9993               	bcf	147,4,b	;volatile
 25737                           
 25738                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25739  0181C2  0012               	return		;funcret
 25740  0181C4                     __end_of_UART1_Transmit_ISR:
 25741                           	opt callstack 0
 25742                           
 25743 ;; *************** function _UART1_rx_vect_isr *****************
 25744 ;; Defined at:
 25745 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25746 ;; Parameters:    Size  Location     Type
 25747 ;;		None
 25748 ;; Auto vars:     Size  Location     Type
 25749 ;;		None
 25750 ;; Return value:  Size  Location     Type
 25751 ;;                  1    wreg      void 
 25752 ;; Registers used:
 25753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25754 ;; Tracked objects:
 25755 ;;		On entry : 0/0
 25756 ;;		On exit  : 0/0
 25757 ;;		Unchanged: 0/0
 25758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25763 ;;Total ram usage:        0 bytes
 25764 ;; Hardware stack levels used:    1
 25765 ;; Hardware stack levels required when called:    1
 25766 ;; This function calls:
 25767 ;;		Absolute function
 25768 ;;		_UART1_Receive_ISR
 25769 ;; This function is called by:
 25770 ;;		Interrupt level 2
 25771 ;; This function uses a non-reentrant model
 25772 ;;
 25773                           
 25774                           	psect	text134
 25775  0184C8                     __ptext134:
 25776                           	opt callstack 0
 25777  0184C8                     _UART1_rx_vect_isr:
 25778                           	opt callstack 13
 25779                           
 25780                           ;incstack = 0
 25781  0184C8  EE14  F000         	lfsr	1,___inthi_sp
 25782                           
 25783                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25784  0184CC  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25785  0184CE  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25786  0184D0  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25787  0184D2  B4D8               	btfsc	status,2,c
 25788  0184D4  0011               	retfie		f
 25789                           
 25790                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25791  0184D6  D801               	call	i2u864_48
 25792  0184D8  0011               	retfie		f
 25793  0184DA                     i2u864_48:
 25794  0184DA  0005               	push	
 25795  0184DC  6EFA               	movwf	pclath,c
 25796  0184DE  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25797  0184E0  6EFD               	movwf	tosl,c
 25798  0184E2  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25799  0184E4  6EFE               	movwf	tosh,c
 25800  0184E6  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25801  0184E8  6EFF               	movwf	tosu,c
 25802  0184EA  50FA               	movf	pclath,w,c
 25803  0184EC  0012               	return		;indir
 25804  0184EE                     __end_of_UART1_rx_vect_isr:
 25805                           	opt callstack 0
 25806                           
 25807 ;; *************** function _UART1_Receive_ISR *****************
 25808 ;; Defined at:
 25809 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25810 ;; Parameters:    Size  Location     Type
 25811 ;;		None
 25812 ;; Auto vars:     Size  Location     Type
 25813 ;;		None
 25814 ;; Return value:  Size  Location     Type
 25815 ;;                  1  [STACK] void 
 25816 ;; Registers used:
 25817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25818 ;; Tracked objects:
 25819 ;;		On entry : 0/0
 25820 ;;		On exit  : 0/0
 25821 ;;		Unchanged: 0/0
 25822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25827 ;;Total ram usage:        0 bytes
 25828 ;; Hardware stack levels used:    1
 25829 ;; This function calls:
 25830 ;;		Nothing
 25831 ;; This function is called by:
 25832 ;;		_UART1_Initialize
 25833 ;;		_UART1_rx_vect_isr
 25834 ;; This function uses a reentrant model
 25835 ;;
 25836                           
 25837                           	psect	text135
 25838  018668                     __ptext135:
 25839                           	opt callstack 0
 25840  018668                     _UART1_Receive_ISR:
 25841                           	opt callstack 13
 25842                           
 25843                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25844                           
 25845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25846                           ;incstack = 0
 25847  018668  0E00               	movlw	low _uart1RxBuffer
 25848  01866A  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25849  01866C  6ED9               	movwf	fsr2l,c
 25850  01866E  6ADA               	clrf	fsr2h,c
 25851  018670  0E06               	movlw	high _uart1RxBuffer
 25852  018672  22DA               	addwfc	fsr2h,f,c
 25853  018674  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25854  01867A  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25855                           
 25856                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25857  01867C  282E               	incf	_uart1RxHead^0,w,c
 25858  01867E  B4D8               	btfsc	status,2,c
 25859                           
 25860                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25861  018680  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25862                           
 25863                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25864  018682  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25865                           
 25866                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25867  018684  0012               	return		;funcret
 25868  018686                     __end_of_UART1_Receive_ISR:
 25869                           	opt callstack 0
 25870                           
 25871 ;; *************** function _UART2_tx_vect_isr *****************
 25872 ;; Defined at:
 25873 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25874 ;; Parameters:    Size  Location     Type
 25875 ;;		None
 25876 ;; Auto vars:     Size  Location     Type
 25877 ;;		None
 25878 ;; Return value:  Size  Location     Type
 25879 ;;                  1    wreg      void 
 25880 ;; Registers used:
 25881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25882 ;; Tracked objects:
 25883 ;;		On entry : 0/0
 25884 ;;		On exit  : 0/0
 25885 ;;		Unchanged: 0/0
 25886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25891 ;;Total ram usage:        0 bytes
 25892 ;; Hardware stack levels used:    1
 25893 ;; Hardware stack levels required when called:    1
 25894 ;; This function calls:
 25895 ;;		Absolute function
 25896 ;;		_UART2_Transmit_ISR
 25897 ;; This function is called by:
 25898 ;;		Interrupt level 2
 25899 ;; This function uses a non-reentrant model
 25900 ;;
 25901                           
 25902                           	psect	text136
 25903  0184F0                     __ptext136:
 25904                           	opt callstack 0
 25905  0184F0                     _UART2_tx_vect_isr:
 25906                           	opt callstack 13
 25907                           
 25908                           ;incstack = 0
 25909  0184F0  EE14  F000         	lfsr	1,___inthi_sp
 25910                           
 25911                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25912  0184F4  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25913  0184F6  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25914  0184F8  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25915  0184FA  B4D8               	btfsc	status,2,c
 25916  0184FC  0011               	retfie		f
 25917                           
 25918                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25919  0184FE  D801               	call	i2u866_48
 25920  018500  0011               	retfie		f
 25921  018502                     i2u866_48:
 25922  018502  0005               	push	
 25923  018504  6EFA               	movwf	pclath,c
 25924  018506  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25925  018508  6EFD               	movwf	tosl,c
 25926  01850A  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25927  01850C  6EFE               	movwf	tosh,c
 25928  01850E  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25929  018510  6EFF               	movwf	tosu,c
 25930  018512  50FA               	movf	pclath,w,c
 25931  018514  0012               	return		;indir
 25932  018516                     __end_of_UART2_tx_vect_isr:
 25933                           	opt callstack 0
 25934                           
 25935 ;; *************** function _UART2_Transmit_ISR *****************
 25936 ;; Defined at:
 25937 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25938 ;; Parameters:    Size  Location     Type
 25939 ;;		None
 25940 ;; Auto vars:     Size  Location     Type
 25941 ;;		None
 25942 ;; Return value:  Size  Location     Type
 25943 ;;                  1  [STACK] void 
 25944 ;; Registers used:
 25945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25946 ;; Tracked objects:
 25947 ;;		On entry : 0/0
 25948 ;;		On exit  : 3B/39
 25949 ;;		Unchanged: 0/0
 25950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25955 ;;Total ram usage:        0 bytes
 25956 ;; Hardware stack levels used:    1
 25957 ;; This function calls:
 25958 ;;		Nothing
 25959 ;; This function is called by:
 25960 ;;		_UART2_Initialize
 25961 ;;		_UART2_tx_vect_isr
 25962 ;; This function uses a reentrant model
 25963 ;;
 25964                           
 25965                           	psect	text137
 25966  0181C4                     __ptext137:
 25967                           	opt callstack 0
 25968  0181C4                     _UART2_Transmit_ISR:
 25969                           	opt callstack 13
 25970                           
 25971                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25972                           
 25973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25974                           ;incstack = 0
 25975  0181C4  0E40               	movlw	64
 25976  0181C6  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25977  0181C8  D010               	goto	l701
 25978                           
 25979                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25980  0181CA  0E50               	movlw	low _uart2TxBuffer
 25981  0181CC  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25982  0181CE  6ED9               	movwf	fsr2l,c
 25983  0181D0  6ADA               	clrf	fsr2h,c
 25984  0181D2  0E03               	movlw	high _uart2TxBuffer
 25985  0181D4  22DA               	addwfc	fsr2h,f,c
 25986  0181D6  50DF               	movf	indf2,w,c
 25987  0181D8  013D               	movlb	61	; () banked
 25988  0181DA  6FD2               	movwf	210,b	;volatile
 25989                           
 25990                           ; BSR set to: 61
 25991  0181DC  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25992                           
 25993                           ; BSR set to: 61
 25994                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25995  0181DE  0E3F               	movlw	63
 25996  0181E0  642A               	cpfsgt	_uart2TxTail^0,c
 25997  0181E2  D001               	goto	l8762
 25998                           
 25999                           ; BSR set to: 61
 26000                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26001  0181E4  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 26002  0181E6                     l8762:
 26003                           
 26004                           ; BSR set to: 61
 26005                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26006  0181E6  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26007                           
 26008                           ;mcc_generated_files/uart2.c: 224:     }
 26009  0181E8  0012               	return	
 26010  0181EA                     l701:
 26011                           
 26012                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26013  0181EA  0139               	movlb	57	; () banked
 26014  0181EC  9796               	bcf	150,3,b	;volatile
 26015                           
 26016                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26017  0181EE  0012               	return		;funcret
 26018  0181F0                     __end_of_UART2_Transmit_ISR:
 26019                           	opt callstack 0
 26020                           
 26021 ;; *************** function _UART2_rx_vect_isr *****************
 26022 ;; Defined at:
 26023 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26024 ;; Parameters:    Size  Location     Type
 26025 ;;		None
 26026 ;; Auto vars:     Size  Location     Type
 26027 ;;		None
 26028 ;; Return value:  Size  Location     Type
 26029 ;;                  1    wreg      void 
 26030 ;; Registers used:
 26031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26032 ;; Tracked objects:
 26033 ;;		On entry : 0/0
 26034 ;;		On exit  : 0/0
 26035 ;;		Unchanged: 0/0
 26036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26041 ;;Total ram usage:        0 bytes
 26042 ;; Hardware stack levels used:    1
 26043 ;; Hardware stack levels required when called:    1
 26044 ;; This function calls:
 26045 ;;		Absolute function
 26046 ;;		_UART2_Receive_ISR
 26047 ;; This function is called by:
 26048 ;;		Interrupt level 2
 26049 ;; This function uses a non-reentrant model
 26050 ;;
 26051                           
 26052                           	psect	text138
 26053  018518                     __ptext138:
 26054                           	opt callstack 0
 26055  018518                     _UART2_rx_vect_isr:
 26056                           	opt callstack 13
 26057                           
 26058                           ;incstack = 0
 26059  018518  EE14  F000         	lfsr	1,___inthi_sp
 26060                           
 26061                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26062  01851C  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26063  01851E  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26064  018520  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26065  018522  B4D8               	btfsc	status,2,c
 26066  018524  0011               	retfie		f
 26067                           
 26068                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26069  018526  D801               	call	i2u868_48
 26070  018528  0011               	retfie		f
 26071  01852A                     i2u868_48:
 26072  01852A  0005               	push	
 26073  01852C  6EFA               	movwf	pclath,c
 26074  01852E  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26075  018530  6EFD               	movwf	tosl,c
 26076  018532  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26077  018534  6EFE               	movwf	tosh,c
 26078  018536  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26079  018538  6EFF               	movwf	tosu,c
 26080  01853A  50FA               	movf	pclath,w,c
 26081  01853C  0012               	return		;indir
 26082  01853E                     __end_of_UART2_rx_vect_isr:
 26083                           	opt callstack 0
 26084                           
 26085 ;; *************** function _UART2_Receive_ISR *****************
 26086 ;; Defined at:
 26087 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26088 ;; Parameters:    Size  Location     Type
 26089 ;;		None
 26090 ;; Auto vars:     Size  Location     Type
 26091 ;;		None
 26092 ;; Return value:  Size  Location     Type
 26093 ;;                  1  [STACK] void 
 26094 ;; Registers used:
 26095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26096 ;; Tracked objects:
 26097 ;;		On entry : 0/0
 26098 ;;		On exit  : 0/0
 26099 ;;		Unchanged: 0/0
 26100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26105 ;;Total ram usage:        0 bytes
 26106 ;; Hardware stack levels used:    1
 26107 ;; This function calls:
 26108 ;;		Nothing
 26109 ;; This function is called by:
 26110 ;;		_UART2_Initialize
 26111 ;;		_UART2_rx_vect_isr
 26112 ;; This function uses a reentrant model
 26113 ;;
 26114                           
 26115                           	psect	text139
 26116  018686                     __ptext139:
 26117                           	opt callstack 0
 26118  018686                     _UART2_Receive_ISR:
 26119                           	opt callstack 13
 26120                           
 26121                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26122                           
 26123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26124                           ;incstack = 0
 26125  018686  0E00               	movlw	low _uart2RxBuffer
 26126  018688  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26127  01868A  6ED9               	movwf	fsr2l,c
 26128  01868C  6ADA               	clrf	fsr2h,c
 26129  01868E  0E07               	movlw	high _uart2RxBuffer
 26130  018690  22DA               	addwfc	fsr2h,f,c
 26131  018692  006F F743 FFDF     	movff	15824,indf2	;volatile
 26132  018698  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26133                           
 26134                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26135  01869A  2828               	incf	_uart2RxHead^0,w,c
 26136  01869C  B4D8               	btfsc	status,2,c
 26137                           
 26138                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26139  01869E  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26140                           
 26141                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26142  0186A0  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26143                           
 26144                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26145  0186A2  0012               	return		;funcret
 26146  0186A4                     __end_of_UART2_Receive_ISR:
 26147                           	opt callstack 0
 26148                           
 26149 ;; *************** function _TMR6_ISR *****************
 26150 ;; Defined at:
 26151 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26152 ;; Parameters:    Size  Location     Type
 26153 ;;		None
 26154 ;; Auto vars:     Size  Location     Type
 26155 ;;		None
 26156 ;; Return value:  Size  Location     Type
 26157 ;;                  1    wreg      void 
 26158 ;; Registers used:
 26159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26160 ;; Tracked objects:
 26161 ;;		On entry : 0/0
 26162 ;;		On exit  : 0/0
 26163 ;;		Unchanged: 0/0
 26164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26169 ;;Total ram usage:        1 bytes
 26170 ;; Hardware stack levels used:    1
 26171 ;; Hardware stack levels required when called:    2
 26172 ;; This function calls:
 26173 ;;		_TMR6_CallBack
 26174 ;; This function is called by:
 26175 ;;		Interrupt level 2
 26176 ;; This function uses a non-reentrant model
 26177 ;;
 26178                           
 26179                           	psect	text140
 26180  0186F8                     __ptext140:
 26181                           	opt callstack 0
 26182  0186F8                     _TMR6_ISR:
 26183                           	opt callstack 12
 26184                           
 26185                           ;incstack = 0
 26186  0186F8  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26187  0186FE  EE14  F000         	lfsr	1,___inthi_sp
 26188                           
 26189                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26190  018702  0139               	movlb	57	; () banked
 26191  018704  91A9               	bcf	169,0,b	;volatile
 26192                           
 26193                           ; BSR set to: 57
 26194                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26195  018706  ECC3  F0C2         	call	_TMR6_CallBack	;wreg free
 26196  01870A  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26197  018710  0011               	retfie		f
 26198  018712                     __end_of_TMR6_ISR:
 26199                           	opt callstack 0
 26200                           
 26201 ;; *************** function _TMR6_CallBack *****************
 26202 ;; Defined at:
 26203 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26204 ;; Parameters:    Size  Location     Type
 26205 ;;		None
 26206 ;; Auto vars:     Size  Location     Type
 26207 ;;		None
 26208 ;; Return value:  Size  Location     Type
 26209 ;;                  1  [STACK] void 
 26210 ;; Registers used:
 26211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26212 ;; Tracked objects:
 26213 ;;		On entry : 3F/39
 26214 ;;		On exit  : 0/0
 26215 ;;		Unchanged: 0/0
 26216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26221 ;;Total ram usage:        0 bytes
 26222 ;; Hardware stack levels used:    1
 26223 ;; Hardware stack levels required when called:    1
 26224 ;; This function calls:
 26225 ;;		Absolute function
 26226 ;;		_TMR6_DefaultInterruptHandler
 26227 ;; This function is called by:
 26228 ;;		_TMR6_ISR
 26229 ;; This function uses a reentrant model
 26230 ;;
 26231                           
 26232                           	psect	text141
 26233  018586                     __ptext141:
 26234                           	opt callstack 0
 26235  018586                     _TMR6_CallBack:
 26236                           	opt callstack 12
 26237                           
 26238                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26239                           
 26240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26241                           ;incstack = 0
 26242  018586  0100               	movlb	0	; () banked
 26243  018588  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26244  01858A  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26245  01858C  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26246  01858E  B4D8               	btfsc	status,2,c
 26247  018590  0012               	return	
 26248                           
 26249                           ; BSR set to: 0
 26250                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26251  018592  D801               	call	u840_48
 26252  018594  0012               	return	
 26253  018596                     u840_48:
 26254  018596  0005               	push	
 26255  018598  6EFA               	movwf	pclath,c
 26256  01859A  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26257  01859C  6EFD               	movwf	tosl,c
 26258  01859E  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26259  0185A0  6EFE               	movwf	tosh,c
 26260  0185A2  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26261  0185A4  6EFF               	movwf	tosu,c
 26262  0185A6  50FA               	movf	pclath,w,c
 26263  0185A8  0012               	return		;indir
 26264  0185AA                     __end_of_TMR6_CallBack:
 26265                           	opt callstack 0
 26266                           
 26267 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26268 ;; Defined at:
 26269 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26270 ;; Parameters:    Size  Location     Type
 26271 ;;		None
 26272 ;; Auto vars:     Size  Location     Type
 26273 ;;  i               1  [STACK] unsigned char 
 26274 ;; Return value:  Size  Location     Type
 26275 ;;                  1  [STACK] void 
 26276 ;; Registers used:
 26277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26278 ;; Tracked objects:
 26279 ;;		On entry : 3F/0
 26280 ;;		On exit  : 0/0
 26281 ;;		Unchanged: 0/0
 26282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26287 ;;Total ram usage:        0 bytes
 26288 ;; Hardware stack levels used:    1
 26289 ;; This function calls:
 26290 ;;		Nothing
 26291 ;; This function is called by:
 26292 ;;		_TMR6_Initialize
 26293 ;;		_TMR6_CallBack
 26294 ;; This function uses a reentrant model
 26295 ;;
 26296                           
 26297                           	psect	text142
 26298  017E18                     __ptext142:
 26299                           	opt callstack 0
 26300  017E18                     _TMR6_DefaultInterruptHandler:
 26301                           	opt callstack 0
 26302                           
 26303                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26304  017E18  52E6               	movf	postinc1,f,c
 26305                           
 26306                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26307                           ;stkvar	_i @ sp[(-1)+0]
 26308                           
 26309                           ;incstack = 0
 26310  017E1A  0EFF               	movlw	-1
 26311  017E1C  6AE3               	clrf	plusw1,c
 26312  017E1E                     l8440:
 26313                           
 26314                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26315                           ;stkvar	_i @ sp[(-1)+0]
 26316  017E1E  0EFF               	movlw	-1
 26317  017E20  50E3               	movf	plusw1,w,c
 26318  017E22  0D02               	mullw	2
 26319  017E24  50F3               	movf	243,w,c
 26320  017E26  0F89               	addlw	low _tickCount
 26321  017E28  6ED9               	movwf	fsr2l,c
 26322  017E2A  6ADA               	clrf	fsr2h,c
 26323  017E2C  50DE               	movf	postinc2,w,c
 26324  017E2E  10DE               	iorwf	postinc2,w,c
 26325  017E30  B4D8               	btfsc	status,2,c
 26326  017E32  D00A               	goto	l8444
 26327                           
 26328                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26329                           ;stkvar	_i @ sp[(-1)+0]
 26330  017E34  0EFF               	movlw	-1
 26331  017E36  50E3               	movf	plusw1,w,c
 26332  017E38  0D02               	mullw	2
 26333  017E3A  50F3               	movf	243,w,c
 26334  017E3C  0F89               	addlw	low _tickCount
 26335  017E3E  6ED9               	movwf	fsr2l,c
 26336  017E40  6ADA               	clrf	fsr2h,c
 26337  017E42  06DE               	decf	postinc2,f,c
 26338  017E44  0E00               	movlw	0
 26339  017E46  5ADD               	subwfb	postdec2,f,c
 26340  017E48                     l8444:
 26341                           
 26342                           ;mcc_generated_files/tmr6.c: 207:  }
 26343                           ;stkvar	_i @ sp[(-1)+0]
 26344  017E48  0EFF               	movlw	-1
 26345  017E4A  2AE3               	incf	plusw1,f,c
 26346                           
 26347                           ;stkvar	_i @ sp[(-1)+0]
 26348  017E4C  0EFF               	movlw	-1
 26349  017E4E  006F FF8C  F032    	movff	plusw1,btemp
 26350  017E54  0E0B               	movlw	11
 26351  017E56  6432               	cpfsgt	btemp^0,c
 26352  017E58  D7E2               	goto	l8440
 26353                           
 26354                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26355  017E5A  52E5               	movf	postdec1,f,c
 26356  017E5C  0012               	return		;funcret
 26357  017E5E                     __end_of_TMR6_DefaultInterruptHandler:
 26358                           	opt callstack 0
 26359                           
 26360 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26361 ;; Defined at:
 26362 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26363 ;; Parameters:    Size  Location     Type
 26364 ;;		None
 26365 ;; Auto vars:     Size  Location     Type
 26366 ;;		None
 26367 ;; Return value:  Size  Location     Type
 26368 ;;                  1    wreg      void 
 26369 ;; Registers used:
 26370 ;;		None
 26371 ;; Tracked objects:
 26372 ;;		On entry : 0/0
 26373 ;;		On exit  : 3F/0
 26374 ;;		Unchanged: 0/0
 26375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26380 ;;Total ram usage:        0 bytes
 26381 ;; Hardware stack levels used:    1
 26382 ;; This function calls:
 26383 ;;		Nothing
 26384 ;; This function is called by:
 26385 ;;		Interrupt level 2
 26386 ;; This function uses a non-reentrant model
 26387 ;;
 26388                           
 26389                           	psect	text143
 26390  0187F8                     __ptext143:
 26391                           	opt callstack 0
 26392  0187F8                     _DMA1_DMASCNT_ISR:
 26393                           	opt callstack 14
 26394                           
 26395                           ;incstack = 0
 26396  0187F8  EE14  F000         	lfsr	1,___inthi_sp
 26397                           
 26398                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26399  0187FC  0139               	movlb	57	; () banked
 26400  0187FE  91A2               	bcf	162,0,b	;volatile
 26401                           
 26402                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26403  018800  0100               	movlb	0	; () banked
 26404  018802  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26405                           
 26406                           ; BSR set to: 0
 26407  018804  0011               	retfie		f
 26408  018806                     __end_of_DMA1_DMASCNT_ISR:
 26409                           	opt callstack 0
 26410                           
 26411 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26412 ;; Defined at:
 26413 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26414 ;; Parameters:    Size  Location     Type
 26415 ;;		None
 26416 ;; Auto vars:     Size  Location     Type
 26417 ;;		None
 26418 ;; Return value:  Size  Location     Type
 26419 ;;                  1    wreg      void 
 26420 ;; Registers used:
 26421 ;;		None
 26422 ;; Tracked objects:
 26423 ;;		On entry : 0/0
 26424 ;;		On exit  : 3F/39
 26425 ;;		Unchanged: 0/0
 26426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26431 ;;Total ram usage:        0 bytes
 26432 ;; Hardware stack levels used:    1
 26433 ;; This function calls:
 26434 ;;		Nothing
 26435 ;; This function is called by:
 26436 ;;		Interrupt level 2
 26437 ;; This function uses a non-reentrant model
 26438 ;;
 26439                           
 26440                           	psect	text144
 26441  018810                     __ptext144:
 26442                           	opt callstack 0
 26443  018810                     _DMA1_DMADCNT_ISR:
 26444                           	opt callstack 14
 26445                           
 26446                           ; BSR set to: 0
 26447                           ;incstack = 0
 26448  018810  EE14  F000         	lfsr	1,___inthi_sp
 26449                           
 26450                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26451  018814  0139               	movlb	57	; () banked
 26452  018816  93A2               	bcf	162,1,b	;volatile
 26453                           
 26454                           ; BSR set to: 57
 26455  018818  0011               	retfie		f
 26456  01881A                     __end_of_DMA1_DMADCNT_ISR:
 26457                           	opt callstack 0
 26458                           
 26459 ;; *************** function _DMA1_DMAA_ISR *****************
 26460 ;; Defined at:
 26461 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26462 ;; Parameters:    Size  Location     Type
 26463 ;;		None
 26464 ;; Auto vars:     Size  Location     Type
 26465 ;;		None
 26466 ;; Return value:  Size  Location     Type
 26467 ;;                  1    wreg      void 
 26468 ;; Registers used:
 26469 ;;		None
 26470 ;; Tracked objects:
 26471 ;;		On entry : 0/0
 26472 ;;		On exit  : 3F/39
 26473 ;;		Unchanged: 0/0
 26474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26479 ;;Total ram usage:        0 bytes
 26480 ;; Hardware stack levels used:    1
 26481 ;; This function calls:
 26482 ;;		Nothing
 26483 ;; This function is called by:
 26484 ;;		Interrupt level 2
 26485 ;; This function uses a non-reentrant model
 26486 ;;
 26487                           
 26488                           	psect	text145
 26489  01881C                     __ptext145:
 26490                           	opt callstack 0
 26491  01881C                     _DMA1_DMAA_ISR:
 26492                           	opt callstack 14
 26493                           
 26494                           ; BSR set to: 57
 26495                           ;incstack = 0
 26496  01881C  EE14  F000         	lfsr	1,___inthi_sp
 26497                           
 26498                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26499  018820  0139               	movlb	57	; () banked
 26500  018822  97A2               	bcf	162,3,b	;volatile
 26501                           
 26502                           ; BSR set to: 57
 26503  018824  0011               	retfie		f
 26504  018826                     __end_of_DMA1_DMAA_ISR:
 26505                           	opt callstack 0
 26506                           
 26507 ;; *************** function _DMA1_DMAOR_ISR *****************
 26508 ;; Defined at:
 26509 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26510 ;; Parameters:    Size  Location     Type
 26511 ;;		None
 26512 ;; Auto vars:     Size  Location     Type
 26513 ;;		None
 26514 ;; Return value:  Size  Location     Type
 26515 ;;                  1    wreg      void 
 26516 ;; Registers used:
 26517 ;;		None
 26518 ;; Tracked objects:
 26519 ;;		On entry : 0/0
 26520 ;;		On exit  : 3F/39
 26521 ;;		Unchanged: 0/0
 26522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26527 ;;Total ram usage:        0 bytes
 26528 ;; Hardware stack levels used:    1
 26529 ;; This function calls:
 26530 ;;		Nothing
 26531 ;; This function is called by:
 26532 ;;		Interrupt level 2
 26533 ;; This function uses a non-reentrant model
 26534 ;;
 26535                           
 26536                           	psect	text146
 26537  018828                     __ptext146:
 26538                           	opt callstack 0
 26539  018828                     _DMA1_DMAOR_ISR:
 26540                           	opt callstack 14
 26541                           
 26542                           ; BSR set to: 57
 26543                           ;incstack = 0
 26544  018828  EE14  F000         	lfsr	1,___inthi_sp
 26545                           
 26546                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26547  01882C  0139               	movlb	57	; () banked
 26548  01882E  95A2               	bcf	162,2,b	;volatile
 26549                           
 26550                           ; BSR set to: 57
 26551  018830  0011               	retfie		f
 26552  018832                     __end_of_DMA1_DMAOR_ISR:
 26553                           	opt callstack 0
 26554                           
 26555                           ;
 26556                           ; Interrupt Vector Table @ 0x8
 26557                           ;
 26558                           
 26559                           	psect	ivt0x8
 26560  000008                     __pivt0x8:
 26561                           	opt callstack 0
 26562  000008                     ivt0x8_base:
 26563                           	opt callstack 0
 26564                           
 26565                           ; Vector 0 : SWINT
 26566  000008  621B               	dw	_Default_ISR shr (0+2)
 26567                           
 26568                           ; Vector 1 : HLVD
 26569  00000A  621B               	dw	_Default_ISR shr (0+2)
 26570                           
 26571                           ; Vector 2 : OSF
 26572  00000C  621B               	dw	_Default_ISR shr (0+2)
 26573                           
 26574                           ; Vector 3 : CSW
 26575  00000E  621B               	dw	_Default_ISR shr (0+2)
 26576                           
 26577                           ; Vector 4 : NVM
 26578  000010  621B               	dw	_Default_ISR shr (0+2)
 26579                           
 26580                           ; Vector 5 : SCAN
 26581  000012  621B               	dw	_Default_ISR shr (0+2)
 26582                           
 26583                           ; Vector 6 : CRC
 26584  000014  621B               	dw	_Default_ISR shr (0+2)
 26585                           
 26586                           ; Vector 7 : IOC
 26587  000016  621B               	dw	_Default_ISR shr (0+2)
 26588                           
 26589                           ; Vector 8 : INT0
 26590  000018  61FA               	dw	_INT0_ISR shr (0+2)
 26591                           
 26592                           ; Vector 9 : ZCD
 26593  00001A  621B               	dw	_Default_ISR shr (0+2)
 26594                           
 26595                           ; Vector 10 : AD
 26596  00001C  6087               	dw	_ADCC_ISR shr (0+2)
 26597                           
 26598                           ; Vector 11 : ADT
 26599  00001E  5E13               	dw	_ADCC_ThresholdISR shr (0+2)
 26600                           
 26601                           ; Vector 12 : CMP1
 26602  000020  621B               	dw	_Default_ISR shr (0+2)
 26603                           
 26604                           ; Vector 13 : SMT1
 26605  000022  621B               	dw	_Default_ISR shr (0+2)
 26606                           
 26607                           ; Vector 14 : SMT1PRA
 26608  000024  621B               	dw	_Default_ISR shr (0+2)
 26609                           
 26610                           ; Vector 15 : SMT1PRW
 26611  000026  621B               	dw	_Default_ISR shr (0+2)
 26612                           
 26613                           ; Vector 16 : DMA1SCNT
 26614  000028  61FE               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26615                           
 26616                           ; Vector 17 : DMA1DCNT
 26617  00002A  6204               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26618                           
 26619                           ; Vector 18 : DMA1OR
 26620  00002C  620A               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26621                           
 26622                           ; Vector 19 : DMA1A
 26623  00002E  6207               	dw	_DMA1_DMAA_ISR shr (0+2)
 26624                           
 26625                           ; Vector 20 : SPI1RX
 26626  000030  621B               	dw	_Default_ISR shr (0+2)
 26627                           
 26628                           ; Vector 21 : SPI1TX
 26629  000032  621B               	dw	_Default_ISR shr (0+2)
 26630                           
 26631                           ; Vector 22 : SPI1
 26632  000034  621B               	dw	_Default_ISR shr (0+2)
 26633                           
 26634                           ; Vector 23 : I2C1RX
 26635  000036  621B               	dw	_Default_ISR shr (0+2)
 26636                           
 26637                           ; Vector 24 : I2C1TX
 26638  000038  621B               	dw	_Default_ISR shr (0+2)
 26639                           
 26640                           ; Vector 25 : I2C1
 26641  00003A  621B               	dw	_Default_ISR shr (0+2)
 26642                           
 26643                           ; Vector 26 : I2C1E
 26644  00003C  621B               	dw	_Default_ISR shr (0+2)
 26645                           
 26646                           ; Vector 27 : U1RX
 26647  00003E  6132               	dw	_UART1_rx_vect_isr shr (0+2)
 26648                           
 26649                           ; Vector 28 : U1TX
 26650  000040  6128               	dw	_UART1_tx_vect_isr shr (0+2)
 26651                           
 26652                           ; Vector 29 : U1E
 26653  000042  621B               	dw	_Default_ISR shr (0+2)
 26654                           
 26655                           ; Vector 30 : U1
 26656  000044  621B               	dw	_Default_ISR shr (0+2)
 26657                           
 26658                           ; Vector 31 : TMR0
 26659  000046  621B               	dw	_Default_ISR shr (0+2)
 26660                           
 26661                           ; Vector 32 : TMR1
 26662  000048  621B               	dw	_Default_ISR shr (0+2)
 26663                           
 26664                           ; Vector 33 : TMR1G
 26665  00004A  621B               	dw	_Default_ISR shr (0+2)
 26666                           
 26667                           ; Vector 34 : TMR2
 26668  00004C  621B               	dw	_Default_ISR shr (0+2)
 26669                           
 26670                           ; Vector 35 : CCP1
 26671  00004E  621B               	dw	_Default_ISR shr (0+2)
 26672                           
 26673                           ; Vector 36 : Undefined
 26674  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26675                           
 26676                           ; Vector 37 : NCO1
 26677  000052  621B               	dw	_Default_ISR shr (0+2)
 26678                           
 26679                           ; Vector 38 : CWG1
 26680  000054  621B               	dw	_Default_ISR shr (0+2)
 26681                           
 26682                           ; Vector 39 : CLC1
 26683  000056  621B               	dw	_Default_ISR shr (0+2)
 26684                           
 26685                           ; Vector 40 : INT1
 26686  000058  5FC9               	dw	_INT1_ISR shr (0+2)
 26687                           
 26688                           ; Vector 41 : CMP2
 26689  00005A  621B               	dw	_Default_ISR shr (0+2)
 26690                           
 26691                           ; Vector 42 : DMA2SCNT
 26692  00005C  621B               	dw	_Default_ISR shr (0+2)
 26693                           
 26694                           ; Vector 43 : DMA2DCNT
 26695  00005E  621B               	dw	_Default_ISR shr (0+2)
 26696                           
 26697                           ; Vector 44 : DMA2OR
 26698  000060  621B               	dw	_Default_ISR shr (0+2)
 26699                           
 26700                           ; Vector 45 : DMA2A
 26701  000062  621B               	dw	_Default_ISR shr (0+2)
 26702                           
 26703                           ; Vector 46 : I2C2RX
 26704  000064  621B               	dw	_Default_ISR shr (0+2)
 26705                           
 26706                           ; Vector 47 : I2C2TX
 26707  000066  621B               	dw	_Default_ISR shr (0+2)
 26708                           
 26709                           ; Vector 48 : I2C2
 26710  000068  621B               	dw	_Default_ISR shr (0+2)
 26711                           
 26712                           ; Vector 49 : I2C2E
 26713  00006A  621B               	dw	_Default_ISR shr (0+2)
 26714                           
 26715                           ; Vector 50 : U2RX
 26716  00006C  6146               	dw	_UART2_rx_vect_isr shr (0+2)
 26717                           
 26718                           ; Vector 51 : U2TX
 26719  00006E  613C               	dw	_UART2_tx_vect_isr shr (0+2)
 26720                           
 26721                           ; Vector 52 : U2E
 26722  000070  621B               	dw	_Default_ISR shr (0+2)
 26723                           
 26724                           ; Vector 53 : U2
 26725  000072  621B               	dw	_Default_ISR shr (0+2)
 26726                           
 26727                           ; Vector 54 : TMR3
 26728  000074  621B               	dw	_Default_ISR shr (0+2)
 26729                           
 26730                           ; Vector 55 : TMR3G
 26731  000076  621B               	dw	_Default_ISR shr (0+2)
 26732                           
 26733                           ; Vector 56 : TMR4
 26734  000078  621B               	dw	_Default_ISR shr (0+2)
 26735                           
 26736                           ; Vector 57 : CCP2
 26737  00007A  621B               	dw	_Default_ISR shr (0+2)
 26738                           
 26739                           ; Vector 58 : Undefined
 26740  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26741                           
 26742                           ; Vector 59 : CWG2
 26743  00007E  621B               	dw	_Default_ISR shr (0+2)
 26744                           
 26745                           ; Vector 60 : CLC2
 26746  000080  621B               	dw	_Default_ISR shr (0+2)
 26747                           
 26748                           ; Vector 61 : INT2
 26749  000082  621B               	dw	_Default_ISR shr (0+2)
 26750                           
 26751                           ; Vector 62 : Undefined
 26752  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26753                           
 26754                           ; Vector 63 : Undefined
 26755  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26756                           
 26757                           ; Vector 64 : Undefined
 26758  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26759                           
 26760                           ; Vector 65 : Undefined
 26761  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26762                           
 26763                           ; Vector 66 : Undefined
 26764  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26765                           
 26766                           ; Vector 67 : Undefined
 26767  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26768                           
 26769                           ; Vector 68 : Undefined
 26770  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26771                           
 26772                           ; Vector 69 : Undefined
 26773  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26774                           
 26775                           ; Vector 70 : TMR5
 26776  000094  5EC1               	dw	_TMR5_ISR shr (0+2)
 26777                           
 26778                           ; Vector 71 : TMR5G
 26779  000096  621B               	dw	_Default_ISR shr (0+2)
 26780                           
 26781                           ; Vector 72 : TMR6
 26782  000098  61BE               	dw	_TMR6_ISR shr (0+2)
 26783                           
 26784                           ; Vector 73 : CCP3
 26785  00009A  621B               	dw	_Default_ISR shr (0+2)
 26786                           
 26787                           ; Vector 74 : CWG3
 26788  00009C  621B               	dw	_Default_ISR shr (0+2)
 26789                           
 26790                           ; Vector 75 : CLC3
 26791  00009E  621B               	dw	_Default_ISR shr (0+2)
 26792                           
 26793                           ; Vector 76 : Undefined
 26794  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26795                           
 26796                           ; Vector 77 : Undefined
 26797  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26798                           
 26799                           ; Vector 78 : Undefined
 26800  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26801                           
 26802                           ; Vector 79 : Undefined
 26803  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26804                           
 26805                           ; Vector 80 : CCP4
 26806  0000A8  621B               	dw	_Default_ISR shr (0+2)
 26807                           
 26808                           ; Vector 81 : CLC4
 26809  0000AA  621B               	dw	_Default_ISR shr (0+2)
 26810  0000AC                     ivt0x8_undefint:
 26811                           	opt callstack 0
 26812  0000AC  00FF               	reset	
 26813                           
 26814                           	psect	text147
 26815  000000                     __ptext147:
 26816                           	opt callstack 0
 26817                           
 26818                           	psect	rparam
 26819  0000                     
 26820                           	psect	temp
 26821  000032                     btemp:
 26822                           	opt callstack 0
 26823  000032                     	ds	32
 26824  0000                     wtemp0	set	btemp
 26825  0000                     wtemp1	set	btemp+2
 26826  0000                     wtemp2	set	btemp+4
 26827  0000                     wtemp3	set	btemp+6
 26828  0000                     wtemp4	set	btemp+8
 26829  0000                     wtemp5	set	btemp+10
 26830  0000                     wtemp8	set	btemp+1
 26831  0000                     ttemp0	set	btemp
 26832  0000                     ttemp1	set	btemp+3
 26833  0000                     ttemp2	set	btemp+6
 26834  0000                     ttemp3	set	btemp+9
 26835  0000                     ttemp5	set	btemp+1
 26836  0000                     ttemp6	set	btemp+4
 26837  0000                     ttemp7	set	btemp+8
 26838  0000                     ltemp0	set	btemp
 26839  0000                     ltemp1	set	btemp+4
 26840  0000                     ltemp2	set	btemp+8
 26841  0000                     lltemp0	set	btemp
 26842  0000                     lltemp1	set	btemp+8
 26843  0000                     lltemp2	set	btemp+16
 26844  0000                     lltemp3	set	btemp+24
 26845                           tosu	equ	0x3FFF
 26846                           tosh	equ	0x3FFE
 26847                           tosl	equ	0x3FFD
 26848                           stkptr	equ	0x3FFC
 26849                           pclatu	equ	0x3FFB
 26850                           pclath	equ	0x3FFA
 26851                           pcl	equ	0x3FF9
 26852                           tblptru	equ	0x3FF8
 26853                           tblptrh	equ	0x3FF7
 26854                           tblptrl	equ	0x3FF6
 26855                           tablat	equ	0x3FF5
 26856                           prodh	equ	0x3FF4
 26857                           prodl	equ	0x3FF3
 26858                           indf0	equ	0x3FEF
 26859                           postinc0	equ	0x3FEE
 26860                           postdec0	equ	0x3FED
 26861                           preinc0	equ	0x3FEC
 26862                           plusw0	equ	0x3FEB
 26863                           fsr0h	equ	0x3FEA
 26864                           fsr0l	equ	0x3FE9
 26865                           wreg	equ	0x3FE8
 26866                           indf1	equ	0x3FE7
 26867                           postinc1	equ	0x3FE6
 26868                           postdec1	equ	0x3FE5
 26869                           preinc1	equ	0x3FE4
 26870                           plusw1	equ	0x3FE3
 26871                           fsr1h	equ	0x3FE2
 26872                           fsr1l	equ	0x3FE1
 26873                           bsr	equ	0x3FE0
 26874                           indf2	equ	0x3FDF
 26875                           postinc2	equ	0x3FDE
 26876                           postdec2	equ	0x3FDD
 26877                           preinc2	equ	0x3FDC
 26878                           plusw2	equ	0x3FDB
 26879                           fsr2h	equ	0x3FDA
 26880                           fsr2l	equ	0x3FD9
 26881                           status	equ	0x3FD8


Data Sizes:
    Strings     354
    Constant    144
    Data        250
    BSS         1430
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     228
    BANK2           256      0     251
    BANK3           256      0     211
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_36(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK2[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK2[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4988_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK2[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_19(CODE[9]), 
		 -> STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    S3997tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_19(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_18(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  302330
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166972
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D3      11       82.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     69E      58        0.0%
DATA                 0      0     69E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 21:22:50 2019

                     _SPI1_Exchange8bit 860E                __end_of_set_display_info 8668  
                                     _C 0100                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE0D  
                                     _V 0200        __end_of_TMR5_SetInterruptHandler 83D6  
          __end_of_start_switch_handler 860E                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 885A  
                           __CFG_LVP$ON 000000                                     l171 877E  
                                   l701 81EA                                     l581 81BE  
                                   l835 861C                                     _GIE 01FE97  
                                   _abs 7D00                                     _pad 693A  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 872A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 85CC  
                    _UART1_Transmit_ISR 8198                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 85AA                            __CFG_ZCD$OFF 000000  
                                  l1028 7F1E                                    l2022 1D78  
                                  l2310 625C                                    l1254 34D6  
                                  l1246 3326                                    l1336 7B6A  
                                  l1256 34DC                                    l2306 6FD2  
                                  l2317 6330                                    l1552 7FBA  
                                  l1472 713A                                    l2344 61CE  
                                  l1609 8664                                    l1561 57D4  
                                  l1491 7FEE                                    l1476 7454  
                                  l1813 6996                                    l1833 3D2A  
                                  l1913 0B1A                                    l1569 6B58  
                                  l2705 5B3E                                    l1657 3C46  
                                  l2629 32D8                                    l1694 5EC6  
                  _ADCC_StartConversion 8798                                    l2831 6818  
                                  l1951 4BC8                                    l2584 2D5E  
                                  l6120 72B6                                    l2736 7D40  
                                  l2728 605C                                    l2665 25A2  
                                  l2905 75F0                                    l6122 72D8  
                                  l2596 2BEE                                    l6220 28D8  
                                  l7004 62AA                                    l1972 4110  
                                  l1869 123A                                    l6302 2C10  
                                  l6230 294A                                    l2767 5286  
                                  l6304 2C22                                    l6240 2986  
                                  l6160 2688                                    l7016 632E  
                                  l7008 62F8                                    l7024 7CD6  
                                  l6322 2C5C                                    l6234 296A  
                                  l6154 2642                                    l7050 613A  
                                  l7034 60B8                                    l1898 066A  
                                  l6308 2C2E                                    l6236 297C  
                                  l6244 29B6                                    l6172 26F2  
                                  l6148 2602                                    l7060 617C  
                                  l7052 6156                                    l6404 5FFA  
                                  l2892 7674                                    l2877 5D06  
                                  l6350 2D0E                                    l6334 2CBA  
                                  l6318 2C56                                    l6262 2A52  
                                  l6190 279A                                    l6182 2748  
                                  l6166 26C0                                    l6158 2658  
                                  l6510 4E52                                    l6414 6054  
                                  l6344 2CE6                                    l6264 2A64  
                                  l6272 2AA0                                    l6184 2778  
                                  l6504 4DFE                                    l6408 5FFE  
                                  l6432 7664                                    l8040 59FA  
                                  l8032 598E                                    l6178 2732  
                                  l6610 2EDC                                    l7058 6166  
                                  l8042 5A08                                    l6356 2D3E  
                                  l6348 2CFE                                    l6284 2B78  
                                  l6268 2A6E                                    l6516 4E98  
                                  l6604 2E9C                                    l6460 46C2  
                                  l8052 5A6A                                    l8044 5A1E  
                                  l6294 2BD2                                    l6286 2B9E  
                                  l7078 7CA8                                    l6390 7D30  
                                  l6710 3254                                    l6622 2F60  
                                  l6614 2EF2                                    l6470 47C8  
                                  l6462 4712                                    l6446 45A4  
                                  l8054 5A88                                    l8046 5A3C  
                                  l6528 4F6A                                    l6704 3218  
                                  l6616 2F22                                    l8064 5ABC  
                                  l8056 5A9E                                    l7610 5110  
                                  l7602 50CC                                    l6722 32AC  
                                  l6466 475A                                    l8074 5B1E  
                                  l6740 1DD8                                    l7612 5134  
                                  l6564 566E                                    l6556 55C2  
                                  l6548 553A                                    l6724 32BC  
                                  l6716 3284                                    l6636 2FB4  
                                  l6628 2F9A                                    l6750 1E4E  
                                  l7614 5172                                    l6902 635E  
                                  l6670 3112                                    l6662 30E0  
                                  l6654 307A                                    l6646 3044  
                                  l6590 2DFE                                    l8440 7E1E  
                                  l7608 50F8                                    l9320 3D64  
                                  l9312 3D1A                                    l6680 3154  
                                  l6656 308C                                    l6664 30E4  
                                  l6584 2DBE                                    l6488 75E0  
                                  l8600 3C14                                    l6834 23B2  
                                  l6746 1E18                                    l7618 51DA  
                                  l9250 7342                                    l6914 6394  
                                  l6690 319E                                    l6594 2E14  
                                  l9402 01EA                                    l9410 0258  
                                  l8444 7E48                                    l6852 2428  
                                  l6828 2396                                    l6764 1EE6  
                                  l6748 1E1E                                    l7628 5276  
                                  l9260 6966                                    l9324 3D82  
                                  l6908 6374                                    l6676 312E  
                                  l6596 2E44                                    l9500 06F0  
                                  l9420 02FC                                    l9404 0216  
                                  l7644 5BD0                                    l6862 249C  
                                  l6838 23D8                                    l6766 1EEC  
                                  l6758 1EA6                                    l8518 7FD0  
                                  l9238 672E                                    l9254 7380  
                                  l9270 69DC                                    l9334 3F94  
                                  l6694 31A4                                    l9406 022C  
                                  l7646 5C3C                                    l6880 2550  
                                  l6872 250C                                    l6848 2422  
                                  l6776 1F3E                                    l6768 1F1C  
                                  l8632 5D74                                    l8624 5D48  
                                  l7592 5036                                    l9264 698E  
                                  l6936 646E                                    l6928 643A  
                                  l6952 6854                                    l9280 6E8C  
                                  l9440 0406                                    l8560 37D2  
                                  l8608 3C26                                    l6882 256A  
                                  l6866 24E2                                    l7914 855A  
                                  l7594 5058                                    l9274 6A26  
                                  l9266 69A0                                    l9354 4046  
                                  l9602 0F3A                                    l9530 0A48  
                                  l9506 077A                                    l9442 0470  
                                  l8570 38F0                                    l8554 37A2  
                                  l8740 81BA                                    l8660 64B8  
                                  l8636 5D8C                                    l6956 686C  
                                  l6948 6842                                    l9540 0B34  
                                  l9516 0926                                    l9436 0396  
                                  l9428 032A                                    l9372 00AC  
                                  l8662 64C6                                    l8654 649C  
                                  l9286 750C                                    l9358 4082  
                                  l6974 6920                                    l6966 68EC  
                                  l6990 6FD0                                    l6982 6F5A  
                                  l9470 0594                                    l9462 057C  
                                  l9446 04D2                                    l8582 39FC  
                                  l8574 39CA                                    l8910 82D0  
                                  l8656 64AC                                    l9288 7538  
                                  l9616 0FD6                                    l9480 0602  
                                  l9464 058E                                    l9384 00F0  
                                  l9392 0146                                    l9712 4D5C  
                                  l9704 4CF4                                    l8762 81E6  
                                  l8682 6598                                    l8674 652A  
                                  l8658 64B2                                    l8666 64CE  
                                  l6986 6F9C                                    l9618 0FF0  
                                  l9554 0C32                                    l9538 0B12  
                                  l9458 0554                                    l9810 1360  
                                  l8594 3B78                                    l8586 3A98  
                                  l8668 64FA                                    l9628 1092  
                                  l9708 4D20                                    l9732 413A  
                                  l9812 1376                                    l6998 621A  
                                  l9654 119A                                    l9638 10E2  
                                  l9566 0CBA                                    l9574 0D24  
                                  l9582 0D90                                    l9590 0EA2  
                                  l9478 05F6                                    l9726 4100  
                                  l9830 14A8                                    l9496 06B8  
                                  l9904 1A7C                                    l9832 14E2  
                                  l9808 1326                                    l9690 4BFE  
                                  l9674 4B4A                                    l9762 42CC  
                                  l9746 41D6                                    l9738 4176  
                                  l9770 4352                                    l9914 1B2A  
                                  l9850 165C                                    l9834 14F8  
                                  l7994 7FF8                                    l8890 7702  
                                  l8972 76B2                                    l8788 7F06  
                                  l9860 16F2                                    l9694 4C3A  
                                  l9934 1D00                                    STR_1 FF82  
                                  l9928 1CA6                                    l9880 18E8  
                                  l9872 1830                                    l9944 1D24  
                                  STR_2 FFB3                                    STR_3 FFE1  
                                  l8978 76C2                                    l9698 4C6A  
                                  l9786 443C                                    l9938 1D04  
                                  STR_4 FF71                                    STR_5 FF93  
                                  l9884 191C                                    l9972 4948  
                                  STR_6 FFB3                                    STR_7 FFE1  
                                  l9966 488A                                    STR_8 FF60  
                                  STR_9 FEEE                                    l9986 4A60  
                                  l9978 49B2                                    l9998 716C  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5000 7D14                                    u5010 5F7E  
                                  _T2PR 003FAB                                    u5100 7622  
                                  u5110 7624                                    u5015 5F74  
                                  u5200 4740                                    u5130 453C  
                                  u6020 63C0                                    u5060 604C  
                                  u5140 4588                                    u4500 80FE  
                                  u5205 4736                                    u5310 4DF8  
                                  u6110 690C                                    u5070 604E  
                                  u4510 8100                                    u5230 7E96  
                                  u5055 602E                                    u5135 4532  
                                  u5400 4FF4                                    u6040 645A  
                                  u5240 7E98                                    u4610 28FE  
                                  u5330 4E4E                                    u6210 7CD2  
                                  u5250 759E                                    _T6PR 003F93  
                                  u4620 291E                                    u6220 6098  
                                  u5180 4668                                    u5260 75A0  
                                  _PMD0 0039C0                                    u4621 2918  
                                  u5341 4E58                                    u5165 45C2  
                                  _PMD1 0039C1                                    u4470 7306  
                                  u5350 4E92                                    u5510 56F8  
                                  u5430 5534                                    u6150 6FCC  
                                  u6310 61AE                                    u6230 60AC  
                                  u5166 45C8                                    _PMD2 0039C2  
                                  u5167 45D6                                    _PMD3 0039C3  
                                  u5280 812E                                    u6320 7C84  
                                  u5360 4EC4                                    u6240 60E6  
                                  _PMD4 0039C4                                    u6225 608E  
                                  u5185 465E                                    _PMD5 0039C5  
                                  u4810 2C34                                    u4730 2A96  
                                  u5290 8130                                    u6330 7CA4  
                                  u5450 558A                                    u6090 6898  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u4900 2CCA                                    u4660 29AE  
                                  u5380 4FA2                                    u5460 55BC  
                                  u4477 72F8                                    u6245 60DC  
                                  u4830 2C4E                                    u4670 29CE  
                                  u4638 2920                                    u5470 55EE  
                                  u4735 2A86                                    u9000 3D50  
                                  u8104 380E                                    u4665 299E  
                                  u8105 3808                                    u4770 2BC0  
                                  u7330 50C8                                    u5490 56A6  
                                  u9010 3FA8                                    u5730 31F2  
                                  u5650 310C                                    u6290 6184  
                                  u5740 322C                                    u4940 80CE  
                                  u8124 39E4                                    u9021 3FD8  
                                  u8125 39DE                                    u5910 241A  
                                  u4870 2CAA                                    u7350 5220  
                                  u9030 3FEE                                    u5750 3268  
                                  u9110 00DA                                    u7430 5CC8  
                                  u4950 80D0                                    u9031 3FEC  
                                  u5735 31E2                                    u5840 1F2C  
                                  u7360 5222                                    u9040 4002  
                                  u8144 3AB2                                    u8064 37BC  
                                  u8145 3AAC                                    u8065 37B6  
                                  u9050 4006                                    u5690 3196  
                                  u8170 3ADC                                    u4875 2C9A  
                                  u8180 5D26                                    u9140 0194  
                                  u8164 3AD4                                    u8084 37EC  
                                  u8165 3ACE                                    u8085 37E6  
                                  u5950 2476                                    u9070 401C  
                                  u9230 050E                                    u9150 0196  
                                  u5855 20C0                                    u5960 24B0  
                                  u9400 0A18                                    u5865 2188  
                                  u5970 24F6                                    u9330 0648  
                                  u5955 2466                                    u5875 2350  
                                  u9500 0EE4                                    u9260 0562  
                                  u9180 02A6                                    u9190 02A8  
                                  u7815 7ED2                                    u7930 78C2  
                                  u8810 6722                                    u9290 05C6  
                                  u9700 4D82                                    u8830 679E  
                                  u9560 10B8                                    u9800 4284  
                                  u9720 40E6                                    u8930 3C7C  
                                  u7890 5AB2                                    _PLLR 01CEE0  
                                  u7955 78F6                                    u7956 78F8  
                                  u7948 78C4                                    u8940 3C7E  
                                  u9580 116E                                    u9660 4C60  
                                  u9820 434E                                    u9590 1170  
                                  u9670 4CA6                                    u9830 436E  
                                  u9750 41CE                                    u8960 3CEE  
                                  u9760 4222                                    u9920 13BE  
                                  u9841 439E                                    u9825 4330  
                                  u8890 6F06                                    u9850 43B4  
                                  u9770 4224                                    u9930 13C0  
                                  u9851 43B2                                    u8980 3D00  
                                  u9860 43C8                                    u9940 13E6  
                                  u9677 4C98                                    u9870 43CC  
                                  u9790 4282                                    u8897 6EF8  
                                  u9970 1540                                    u9980 1542  
                                  u9990 1568                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 8246  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0178  
                                  _atoi 501C                                    _ctoa 74EE  
                                  _main 32E2                                    _dtoa 3C4C  
                                  _nanf 79E2                                    _seed 01C8  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4ADE  
                                  btemp 0032                                    _xtoa 40CC  
                __end_of_check_adc_scan 8852                           ___fpclassifyf 5ED0  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 862C                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 84C8                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 87F6  
                      __end_of_INT1_ISR 7F62          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 7142           __end_of_OSCILLATOR_Initialize 8784  
                                 l10000 71AC                                   l10050 7242  
                                 l10204 57A4                                   l10234 5936  
                                 l10218 58D2                                   l10330 3542  
                                 l10084 6A70                                   l10316 34E0  
                                 l10350 375A                                   l10318 350E  
                                 l10360 378E                                   l10344 363A  
                                 l10272 332E                                   l10346 3742  
                                 l10338 3566                                   l10274 3340  
                                 l10266 3308                                   l10268 3310  
                                 PRLOCK 0039EF                         __end_of___aodiv 501C  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 2D68                                   _ADCLK 003EFF  
                       __end_of___aomod 571C                                   _ADPCH 003EF1  
                       __end_of___fldiv 32E2                                   _ADREF 003EFD  
                       __end_of___awdiv 6488                         __end_of___flneg 7D00  
                                 STR_10 FF14                                   STR_11 FF01  
                                 STR_12 FF4D                                   STR_20 FEC8  
                                 STR_21 FEC8                                   STR_13 FF27  
                                 STR_22 FFCE                                   STR_14 FF3A  
                                 STR_30 FEB5                                   STR_23 FFCE  
                                 STR_15 FFFC                                   STR_16 FFF9  
                                 STR_24 FFA4                                   STR_25 FFA4  
                                 STR_41 FFEA                           __CFG_WDTE$OFF 000000  
                                 STR_26 FFA4                                   STR_42 FFF2  
                                 STR_18 FFC2                                   STR_19 FFD8  
                                 STR_27 FE9D                                   STR_36 FEC7  
                       __end_of___awmod 693A                                   STR_45 FFF6  
                                 STR_37 FFE6                                   STR_29 FEDB  
                                 STR_38 FFEE                                   STR_47 FFF6  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 7D8C                         __end_of___fltol 61D8  
                                 u10120 1B7E                                   u10040 1746  
                                 u10210 7222                                   u10300 5922  
                                 u10070 19D6                                   u10310 5924  
                                 u10080 19D8                                   u10180 4AD4  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 886C                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 84A0  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 7B60  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8712  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 024C                                   _fputc 66FE  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 7EA2  
                                 _fputs 7332                         __end_of_isdigit 813A  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 8042                                   _width 001B  
                                 _putch 86DC                         __end_of_islower 80DA  
                       __end_of_isspace 7CB8                _INT1_SetInterruptHandler 83D6  
                       __end_of_isupper 810A                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8386  
           _UART1_SetRxInterruptHandler 835E                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 6C66                         __end_of_tolower 767E  
                       __end_of_strncmp 5D10                         __end_of_toupper 75FA  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 84EE                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 7DD2                   __end_of_ringBufS_init 82BE  
                       __initialization 6C66                       _UART2_rx_vect_isr 8518  
                          __end_of_atoi 5290                            __end_of_ctoa 7576  
                          __end_of_main 37A0                            __end_of_dtoa 40CC  
                          __end_of_nanf 7A44                            __end_of_stoa 4D9C  
                          __end_of_xtoa 4486                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8742  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 83AE  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 84C6                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 81F0                         _PWM8_Initialize 8758  
                      _UART1_Initialize 797E                       _UART2_tx_vect_isr 84F0  
                    _UART2_Transmit_ISR 81C4                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 791A                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 7EA2                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 7B52                    _start_switch_handler 85EE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 87D8                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F                                  u391_48 85DA  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u830_20 65B4                                  u821_28 64A2  
                                u830_26 65B6                                  u824_20 64C2  
                                u824_21 64BC                                  u832_28 85B8  
                                u840_48 8596                                  u843_28 8572  
                                u828_24 658E                                  u828_25 658A  
                                u857_44 76E2                                  u857_45 76DC  
                                u799_20 847E                                  u799_26 8480  
                      __end_of___xxtofl 5B48   __end_of_ADCC_DischargeSampleCapacitor 883A  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 8832  
              __end_of_send_lcd_cmd_dma 7C66                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 853E              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 8806                        _UART2_Initialize 7AA6  
                                _WaitMs 7FD6                         _conv_raw_result 37A0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 61D8                                  ___fleq 6F18  
                     _ADCC_ThresholdISR 784C                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 73CA                                  _efgtoa 0000  
                                _floorf 4486                      ?_ADCC_ThresholdISR 0052  
                                _memset 47F2                    __size_of_help_button 0038  
                                clear_0 6CD4                                  clear_1 6CE8  
                                clear_2 6CFA                                  clear_3 6D06  
                                clear_4 6D12                                  clear_5 6D1E  
                                clear_6 6D2A                                  clear_7 6D36  
                                clear_8 6D42                                  _printf 7A44  
                    _eaDogM_WriteString 71EA                                  _strcpy 6E44  
                             ?_ADCC_ISR 0052                                  _strlen 7290  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 77E0  
                        _PMD_Initialize 8784               __end_of_UART2_tx_vect_isr 8516  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 797E  
                          __mediumconst FE0C                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 7BBA  
                      __end_of_vfprintf 71EA                              _StartTimer 7F62  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 7E18  
                     _SYSTEM_Initialize 7D8C                              __accesstop 0060  
               __end_of__initialization 6D54                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 884A  
                  __end_of_display_info 8842               __end_of_CLKREF_Initialize 8810  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 7EE4                   _set_temp_display_help 87BA  
             __end_of_ADCC_ThresholdISR 78B4                  __end_of_ringBufS_flush 745C  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 813A  
                          __pidataBANK1 87AA                            __pidataBANK2 6FDC  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 6822  
                         __end_of_fputs 73CA                           __end_of_srand 8076  
                 __end_of_TMR5_CallBack 8586                           __end_of_putch 86F6  
               __end_of_PWM8_Initialize 876E                 __end_of_TMR6_Initialize 821A  
                     _adc_int_t_handler 767E                  __end_of_PMD_Initialize 8798  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 85AA  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 881C                          _clear_adc_scan 885A  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 7DD2                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 0100                              __pbssBANK2 02BB  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 571C  
               __end_of_conv_raw_result 3C4C                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00F6  
                     __end_of_TimerDone 8562                        _DMA1_DMADCNT_ISR 8810  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 86C0  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 83AE  
               __end_of_ADCC_Initialize 784A                              ??_TMR5_ISR 01E0  
             __end_of_adc_int_t_handler 76FC                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 844E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8426                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8668  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8860                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 87F8                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 82BE                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 7F24                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8712  
                               __Lparam 0000                __end_of_UART1_Initialize 79E2  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 4D9C  
                               ___fladd 25AC                                 ___aomod 54DC  
                               ___fldiv 2D68                                 ___awdiv 633A  
                               ___flneg 7CB8                                 ___awmod 6822  
                               ___flmul 1D82                                 ___flsub 7D46  
                               ___fltol 6066               __end_of_UART1_Receive_ISR 8686  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 6E44                                 __pcinit 6C66  
              __end_of_mode_lamp_bright 87E6                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 87CA  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 32E2                                 __ptext1 85EE  
                               __ptext2 791A                                 __ptext3 8798  
                               __ptext4 8832                                 __ptext5 8042  
                               __ptext6 6D5A                                 __ptext7 8246  
                               __ptext8 826E                                 __ptext9 860E  
                     _UART2_Receive_ISR 8686                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 876E  
                               us541999 5006                            __size_of_abs 0046  
                               us552999 570A                            __size_of_pad 0114  
                               _isalpha 7E5E                                 _isdigit 810A  
                               us961999 4AF0                                 _mode_sw 0025  
                               us892999 3C66                                 us974999 414C  
                     __end_of_lp_filter 5ED0                                 _islower 80AA  
                               _isspace 7C66                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 7B04  
                               _isupper 80DA              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6B5C                                 _tolower 75FA  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 5B48  
                               _toupper 7576                    end_of_initialization 6D54  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 835E  
           _UART1_SetTxInterruptHandler 8336     __end_of_UART2_SetRxInterruptHandler 8336  
           _UART2_SetRxInterruptHandler 830E                       __end_of_set_vterm 86DC  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 886C               __end_of_UART2_Receive_ISR 86A4  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 8386                            _display_help 8842  
                 _TMR5_InterruptHandler 00C1                            _display_info 883A  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 8476             _ADCC_SetADIInterruptHandler 844E  
                            _update_lcd 6A4E                         _calc_model_data 5290  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7776                         _SPI1_Initialize 8742  
                 __end_of_get_vterm_ptr 8198                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 800C  
          __end_of_INTERRUPT_Initialize 791A                              _vterm_dump 65D0  
                        __end_of___flge 633A                          __end_of___fleq 6FDC  
  __end_of_INT0_DefaultInterruptHandler 8876   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8874              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 7BBA                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0228                          __end_of_floorf 47F2  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4ADE                          __end_of_printf 7AA6  
              __end_of_DMA1_DMADCNT_ISR 881A             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 85EE                          __end_of_strcpy 6F18  
                        __end_of_strlen 7332                     start_initialization 6C66  
  __end_of_TMR5_DefaultInterruptHandler 849E   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8476         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 7D46                   __end_of_INT1_CallBack 85CC  
             __size_of_set_display_info 001E                             __end_of_pad 6A4E  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 8296  
                        _switch_handler 6488           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 6066                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 02BB                __end_of_DMA1_DMASCNT_ISR 8806  
                         _uart2TxBuffer 0350                          _DMA1_DMAOR_ISR 8828  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 853E  
                         _ringBufS_init 8296                             __pdataBANK0 00C7  
                           __pdataBANK1 01D0                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 80AA                 __end_of_calc_model_data 54DC  
                   __end_of_help_button 7FD6         __end_of_eaDogM_WriteStringAtPos 8042  
               __end_of_DMA1_Initialize 77E0                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8426                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01E0                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 65D0                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8758                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE9D  
                      _convert_adc_data 76FC               __size_of_ringBufS_put_dma 00AA  
                          _init_display 6D5A                  __end_of_DMA1_DMAOR_ISR 8832  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 7C14  
                _PIN_MANAGER_Initialize 745C                    __end_of_wait_lcd_set 8866  
                         __pmediumconst FE0C                               __ptext100 8758  
                             __ptext101 8784                               __ptext110 7776  
                             __ptext102 745C                               __ptext111 8806  
                             __ptext103 876E                               __ptext120 7EE4  
                             __ptext112 77E0                               __ptext104 78B4  
                             __ptext121 8562                               __ptext113 8426  
                             __ptext105 8852                               __ptext130 8878  
                             __ptext122 8476                               __ptext114 844E  
                             __ptext106 8076                               __ptext131 784C  
                             __ptext123 87E8                               __ptext115 7F24  
                             __ptext107 83D6                               __ptext140 86F8  
                             __ptext132 84A0                               __ptext124 85CC  
                             __ptext116 85AA                               __ptext108 83FE  
                             __ptext141 8586                               __ptext133 8198  
                             __ptext125 8874                               __ptext117 8872  
                             __ptext109 7BBA                               __ptext142 7E18  
                             __ptext134 84C8                               __ptext126 886C  
                             __ptext118 6488                               __ptext143 87F8  
                             __ptext135 8668                               __ptext127 821C  
                             __ptext119 7B04                               __ptext144 8810  
                             __ptext136 84F0                               __ptext128 767E  
                             __ptext145 881C                               __ptext137 81C4  
                             __ptext129 8876                               __ptext146 8828  
                             __ptext138 8518                               __ptext147 0000  
                             __ptext139 8686                      __end_of_StartTimer 7F9E  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 821C                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 5D10  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 78B4                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 87E8                                _INT1_ISR 7F24  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0390                               _ring_buf2 0400  
                              i2u421_48 8232                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u860_48 7880  
                              i2u860_49 7894                                i2u862_48 84B2  
                              i2u864_48 84DA                                i2u866_48 8502  
                              i2u868_48 852A                __size_of_TMR5_Initialize 0046  
                             _set_vterm 86C0                     __size_of_update_lcd 010E  
                           _help_button 7F9E              __end_of_UART1_Transmit_ISR 81C4  
                              _TMR5_ISR 7B04                                _TMR6_ISR 86F8  
                             _port_data 01D0                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8562  
                            _ADCON0bits 003EF8                      __end_of_check_help 5944  
                             _start_lcd 8866                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8586  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 864A                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6C7A                               copy_data1 6C9C  
                             copy_data2 6CBE                _INT0_SetInterruptHandler 83FE  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 830E             _UART2_SetTxInterruptHandler 82E6  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 86A4  
                          _send_lcd_cmd 826E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8878                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 82E6                   __end_of_DMA1_DMAA_ISR 8826  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 5944  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 87D8                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 8296  
                              __ptext11 82BE                                __ptext20 65D0  
                              __ptext12 87CA                                __ptext21 6B5C  
                              __ptext13 76FC                                __ptext30 8860  
                              __ptext22 816A                                __ptext14 37A0  
                              __ptext31 8866                                __ptext23 7FD6  
                              __ptext15 79E2                                __ptext40 7E5E  
                              __ptext32 73CA                                __ptext24 6A4E  
                              __ptext16 862C                                __ptext41 5B48  
                              __ptext33 47F2                                __ptext25 800C  
                              __ptext17 5944                                __ptext50 7CB8  
                              __ptext42 4ADE                                __ptext34 7A44  
                              __ptext26 7C14                                __ptext18 885A  
                              __ptext51 61D8                                __ptext43 0000  
                              __ptext35 7142                                __ptext27 86A4  
                              __ptext19 571C                                __ptext60 74EE  
                              __ptext52 6F18                                __ptext44 75FA  
                              __ptext36 1244                                __ptext28 7B60  
                              __ptext61 693A                                __ptext53 2D68  
                              __ptext45 80DA                                __ptext37 40CC  
                              __ptext29 71EA                                __ptext70 86C0  
                              __ptext62 7290                                __ptext54 6822  
                              __ptext46 6E44                                __ptext38 7576  
                              __ptext71 87BA                                __ptext63 7332  
                              __ptext55 633A                                __ptext47 4486  
                              __ptext39 80AA                                __ptext80 8842  
                              __ptext72 864A                                __ptext64 66FE  
                              __ptext56 3C4C                                __ptext48 5ED0  
                              __ptext81 884A                                __ptext73 8712  
                              __ptext65 86DC                                __ptext57 7D00  
                              __ptext49 6066                                __ptext90 830E  
                              __ptext82 5290                                __ptext74 87D8  
                              __ptext66 7098                                __ptext58 54DC  
                              __ptext91 797E                                __ptext83 5D10  
                              __ptext75 7EA2                                __ptext67 501C  
                              __ptext59 4D9C                                __ptext92 8336  
                              __ptext84 7D46                                __ptext76 7F9E  
                              __ptext68 7C66                                __ptext93 835E  
                              __ptext85 25AC                                __ptext77 853E  
                              __ptext69 810A                                __ptext94 81F0  
                              __ptext86 1D82                                __ptext78 7F62  
                              __ptext95 8386                                __ptext87 7D8C  
                              __ptext79 883A                                __ptext96 7DD2  
                              __ptext88 7AA6                                __ptext97 83AE  
                              __ptext89 82E6                                __ptext98 872A  
                              __ptext99 8742                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7098                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 04BE  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 87AA                                _spi_link 00A1  
                              _wdtdelay 7B60              __end_of_UART2_Transmit_ISR 81F0  
                              _vfprintf 7142                __end_of_convert_adc_data 7776  
            __end_of_PWM8_LoadDutyValue 7EE4    __end_of_INT1_DefaultInterruptHandler 8874  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8872  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 862C                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8860  
                    _EXT_INT_Initialize 8076    __end_of_TMR6_DefaultInterruptHandler 7E5E  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7E18  
  __end_of_ADCC_DefaultInterruptHandler 8878   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8876                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 8246  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 87CA  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7290  
                 __end_of_mode_lamp_dim 872A                 __end_of_adc_int_handler 887A  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6B5C                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 8852                  __end_of_get_raw_result 864A  
                      _send_lcd_cmd_dma 7C14                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 83FE  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 826E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8872  
        __end_of_PIN_MANAGER_Initialize 74EE               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 66FE                 _eaDogM_WriteStringAtPos 800C  
                         _get_vterm_ptr 816A                          _check_adc_scan 884A  
             __size_of_UART2_Initialize 005E  
