

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov  1 17:24:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=4,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=4,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=4,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=4,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=4,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=4,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=4,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=4,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=4,class=CODE,delta=1
   125                           	psect	text106,global,reloc=4,class=CODE,delta=1
   126                           	psect	text107,global,reloc=4,class=CODE,delta=1
   127                           	psect	text108,global,reloc=4,class=CODE,delta=1
   128                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text109,global,reloc=4,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133  0000                     
   134                           ; Version 2.10
   135                           ; Generated 31/07/2019 GMT
   136                           ; 
   137                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F57K42 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     
   169 ;;_mode	offset	0
   170 ;;_s	offset=-2 (param)
   171 ;;_cmd	offset=-1 (param)
   172 ;;_cmd	offset=-1 (param)
   173 ;;_data	offset=-1 (param)
   174 ;;__this	offset=-2 (param)
   175 ;;_cmd	offset=-1 (param)
   176 ;;_flipper	offset=-1 (param)
   177 ;;_f	offset	0
   178 ;;_ap	offset	6
   179 ;;_s	offset=-3 (param)
   180 ;;_fmt	offset=-5 (param)
   181 ;;_line	offset=-1 (param)
   182 ;;_vterm	offset=-2 (param)
   183 ;;_numMilliseconds	offset=-2 (param)
   184 ;;_vterm	offset=-1 (param)
   185 ;;_r	offset=-1 (param)
   186 ;;_c	offset=-2 (param)
   187 ;;_strPtr	offset=-4 (param)
   188 ;;_strPtr	offset=-1 (param)
   189 ;;_delay	offset=-4 (param)
   190 ;;_strPtr	offset=-2 (param)
   191 ;;__this	offset=-2 (param)
   192 ;;_clearBuffer	offset=-3 (param)
   193 ;;_s	offset	0
   194 ;;_k	offset	2
   195 ;;_dest	offset=-2 (param)
   196 ;;_c	offset=-4 (param)
   197 ;;_n	offset=-6 (param)
   198 ;;_ap	offset	0
   199 ;;_fmt	offset=-3 (param)
   200 ;;_cfmt	offset	0
   201 ;;_fp	offset=-2 (param)
   202 ;;_fmt	offset=-4 (param)
   203 ;;_ap	offset=-6 (param)
   204 ;;_llu	offset	0
   205 ;;_ll	offset	8
   206 ;;_cp	offset	16
   207 ;;_c	offset	18
   208 ;;_fp	offset=-2 (param)
   209 ;;_fmt	offset=-4 (param)
   210 ;;_ap	offset=-6 (param)
   211 ;;_xtoa$3918	offset	0
   212 ;;_xtoa$3917	offset	2
   213 ;;_n	offset	4
   214 ;;_c	offset	12
   215 ;;_i	offset	14
   216 ;;_w	offset	16
   217 ;;_p	offset	18
   218 ;;_fp	offset=-2 (param)
   219 ;;_d	offset=-10 (param)
   220 ;;_x	offset=-11 (param)
   221 ;;_toupper$4478	offset	0
   222 ;;_c	offset=-2 (param)
   223 ;;_c	offset=-2 (param)
   224 ;;_c	offset=-2 (param)
   225 ;;_c	offset=-2 (param)
   226 ;;_nuls	offset	0
   227 ;;_l	offset	7
   228 ;;_p	offset	9
   229 ;;_cp	offset	11
   230 ;;_w	offset	13
   231 ;;_i	offset	15
   232 ;;_fp	offset=-2 (param)
   233 ;;_s	offset=-4 (param)
   234 ;;_dtoa$3897	offset	0
   235 ;;_n	offset	2
   236 ;;_i	offset	10
   237 ;;_s	offset	12
   238 ;;_w	offset	14
   239 ;;_p	offset	16
   240 ;;_fp	offset=-2 (param)
   241 ;;_d	offset=-10 (param)
   242 ;;_a	offset=-2 (param)
   243 ;;_sign	offset	0
   244 ;;_counter	offset	1
   245 ;;_dividend	offset=-8 (param)
   246 ;;_divisor	offset=-16 (param)
   247 ;;_quotient	offset	0
   248 ;;_sign	offset	8
   249 ;;_counter	offset	9
   250 ;;_dividend	offset=-8 (param)
   251 ;;_divisor	offset=-16 (param)
   252 ;;_w	offset	0
   253 ;;_fp	offset=-2 (param)
   254 ;;_c	offset=-3 (param)
   255 ;;_w	offset	0
   256 ;;_i	offset	2
   257 ;;_fp	offset=-2 (param)
   258 ;;_buf	offset=-3 (param)
   259 ;;_p	offset=-5 (param)
   260 ;;_a	offset	0
   261 ;;_s	offset=-2 (param)
   262 ;;_i	offset	0
   263 ;;_c	offset	2
   264 ;;_s	offset=-1 (param)
   265 ;;_fp	offset=-3 (param)
   266 ;;_c	offset=-2 (param)
   267 ;;_fp	offset=-4 (param)
   268 ;;_c	offset=-1 (param)
   269 ;;__this	offset=-2 (param)
   270 ;;_c	offset=-3 (param)
   271 ;;_vterm	offset=-1 (param)
   272 ;;_new_response_info	offset=-1 (param)
   273 ;;_new_response_info	offset=-1 (param)
   274 ;;_level	offset=-2 (param)
   275 ;;_dutyValue	offset=-2 (param)
   276 ;;_timer	offset=-1 (param)
   277 ;;_timer	offset=-1 (param)
   278 ;;_count	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_InterruptHandler	offset=-3 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_state	offset	0
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_timerVal	offset=-2 (param)
   290 ;;_i	offset	0
   291                           
   292                           	psect	idataBANK0
   293  0135F6                     __pidataBANK0:
   294                           	opt callstack 0
   295                           
   296                           ;initializer for stoa@F1144
   297  0135F6  28                 	db	40
   298  0135F7  6E                 	db	110
   299  0135F8  75                 	db	117
   300  0135F9  6C                 	db	108
   301  0135FA  6C                 	db	108
   302  0135FB  29                 	db	41
   303  0135FC  00                 	db	0
   304                           
   305                           ;initializer for _port_data
   306  0135FD  FF                 	db	255
   307  0135FE  00                 	db	0
   308  0135FF  FF                 	db	255
   309  013600  00                 	db	0
   310  013601  FF                 	db	255
   311  013602  00                 	db	0
   312  013603  FF                 	db	255
   313  013604  00                 	db	0
   314  013605  FF                 	db	255
   315  013606  00                 	db	0
   316  013607  FF                 	db	255
   317  013608  00                 	db	0
   318  013609  FF                 	db	255
   319  01360A  00                 	db	0
   320  01360B  FF                 	db	255
   321  01360C  00                 	db	0
   322                           
   323                           	psect	idataBANK1
   324  0122E2                     __pidataBANK1:
   325                           	opt callstack 0
   326                           
   327                           ;initializer for _V
   328  0122E2  00                 	db	0
   329  0122E3  00                 	db	0
   330  0122E4  00                 	db	0
   331  0122E5  00                 	db	0
   332  0122E6  00                 	db	0
   333  0122E7  00                 	db	0
   334  0122E8  00                 	db	0
   335  0122E9  00                 	db	0
   336  0122EA  00                 	db	0
   337  0122EB  00                 	db	0
   338  0122EC  00                 	db	0
   339  0122ED  00                 	db	0
   340  0122EE  00                 	db	0
   341  0122EF  00                 	db	0
   342  0122F0  00                 	db	0
   343  0122F1  00                 	db	0
   344  0122F2  00                 	db	0
   345  0122F3  00                 	db	0
   346  0122F4  00                 	db	0
   347  0122F5  00                 	db	0
   348  0122F6  00                 	db	0
   349  0122F7  00                 	db	0
   350  0122F8  00                 	db	0
   351  0122F9  00                 	db	0
   352  0122FA  00                 	db	0
   353  0122FB  00                 	db	0
   354  0122FC  00                 	db	0
   355  0122FD  00                 	db	0
   356  0122FE  00                 	db	0
   357  0122FF  00                 	db	0
   358  012300  00                 	db	0
   359  012301  00                 	db	0
   360  012302  00                 	db	0
   361  012303  00                 	db	0
   362  012304  00                 	db	0
   363  012305  00                 	db	0
   364  012306  00                 	db	0
   365  012307  00                 	db	0
   366  012308  00                 	db	0
   367  012309  00                 	db	0
   368  01230A  00                 	db	0
   369  01230B  00                 	db	0
   370  01230C  00                 	db	0
   371  01230D  00                 	db	0
   372  01230E  00                 	db	0
   373  01230F  00                 	db	0
   374  012310  00                 	db	0
   375  012311  00                 	db	0
   376  012312  00                 	db	0
   377  012313  00                 	db	0
   378  012314  00                 	db	0
   379  012315  00                 	db	0
   380  012316  00                 	db	0
   381  012317  00                 	db	0
   382  012318  00                 	db	0
   383  012319  00                 	db	0
   384  01231A  00                 	db	0
   385  01231B  00                 	db	0
   386  01231C  00                 	db	0
   387  01231D  00                 	db	0
   388  01231E  00                 	db	0
   389  01231F  00                 	db	0
   390  012320  00                 	db	0
   391  012321  00                 	db	0
   392  012322  00                 	db	0
   393  012323  00                 	db	0
   394  012324  00                 	db	0
   395  012325  00                 	db	0
   396  012326  00                 	db	0
   397  012327  00                 	db	0
   398  012328  00                 	db	0
   399  012329  00                 	db	0
   400  01232A  00                 	db	0
   401  01232B  00                 	db	0
   402  01232C  00                 	db	0
   403  01232D  00                 	db	0
   404  01232E  00                 	db	0
   405  01232F  00                 	db	0
   406  012330  00                 	db	0
   407  012331  00                 	db	0
   408  012332  00                 	db	0
   409  012333  00                 	db	0
   410  012334  00                 	db	0
   411  012335  00                 	db	0
   412  012336  00                 	db	0
   413  012337  00                 	db	0
   414  012338  00                 	db	0
   415  012339  00                 	db	0
   416  01233A  00                 	db	0
   417  01233B  00                 	db	0
   418  01233C  00                 	db	0
   419  01233D  00                 	db	0
   420  01233E  00                 	db	0
   421  01233F  00                 	db	0
   422  012340  00                 	db	0
   423  012341  00                 	db	0
   424  012342  00                 	db	0
   425  012343  00                 	db	0
   426  012344  00                 	db	0
   427  012345  00                 	db	0
   428  012346  00                 	db	0
   429  012347  00                 	db	0
   430  012348  00                 	db	0
   431  012349  00                 	db	0
   432  01234A  00                 	db	0
   433  01234B  00                 	db	0
   434  01234C  00                 	db	0
   435  01234D  00                 	db	0
   436  01234E  00                 	db	0
   437  01234F  00                 	db	0
   438  012350  00                 	db	0
   439  012351  00                 	db	0
   440  012352  00                 	db	0
   441  012353  00                 	db	0
   442  012354  00                 	db	0
   443  012355  00                 	db	0
   444  012356  00                 	db	0
   445  012357  00                 	db	0
   446  012358  00                 	db	0
   447  012359  00                 	db	0
   448  01235A  00                 	db	0
   449  01235B  00                 	db	0
   450  01235C  00                 	db	0
   451  01235D  00                 	db	0
   452  01235E  00                 	db	0
   453  01235F  00                 	db	0
   454  012360  00                 	db	0
   455  012361  00                 	db	0
   456  012362  00                 	db	0
   457  012363  0000               	dw	0
   458  012365  0000               	dw	0
   459  012367  0000               	dw	0
   460  012369  0000               	dw	0
   461  01236B  0000               	dw	0
   462  01236D  0000               	dw	0
   463  01236F  00                 	db	0
   464  012370  00                 	db	0
   465  012371  00                 	db	0
   466  012372  00                 	db	0
   467  012373  00                 	db	0
   468  012374  00                 	db	0
   469  012375  00                 	db	0
   470  012376  00                 	db	0
   471  012377  0000               	dw	0
   472  012379  0000               	dw	0
   473  01237B  0000               	dw	0
   474  01237D  0000               	dw	0
   475  01237F  0000               	dw	0
   476  012381  0000               	dw	0
   477  012383  0000               	dw	0
   478  012385  0000               	dw	0
   479  012387  0000               	dw	0
   480  012389  00                 	db	0
   481  01238A  00                 	db	0
   482  01238B  00                 	db	0
   483  01238C  00                 	db	0
   484  01238D  00                 	db	0
   485  01238E  00                 	db	0
   486  01238F  00                 	db	0
   487  012390  00                 	db	0
   488  012391  00                 	db	0
   489  012392  00                 	db	0
   490  012393  00                 	db	0
   491  012394  00                 	db	0
   492  012395  0000               	dw	0
   493  012397  0000               	dw	0
   494  012399  01                 	db	1
   495  01239A  00                 	db	0
   496  01239B  01                 	db	1
   497  01239C  00                 	db	0
   498  01239D  2D                 	db	45
   499  01239E  00                 	db	0
   500                           
   501                           	psect	mediumconst
   502  00FE74                     __pmediumconst:
   503                           	opt callstack 0
   504  00FE74  00                 	db	0
   505  00FE75                     _T:
   506                           	opt callstack 0
   507  00FE75  63                 	db	99
   508  00FE76  6F                 	db	111
   509  00FE77  6D                 	db	109
   510  00FE78  6D                 	db	109
   511  00FE79  61                 	db	97
   512  00FE7A  6E                 	db	110
   513  00FE7B  64                 	db	100
   514  00FE7C  73                 	db	115
   515  00FE7D  20                 	db	32
   516  00FE7E  31                 	db	49
   517  00FE7F  00                 	db	0
   518  00FE80  00                 	db	0
   519  00FE81  00                 	db	0
   520  00FE82  00                 	db	0
   521  00FE83  00                 	db	0
   522  00FE84  00                 	db	0
   523  00FE85  00                 	db	0
   524  00FE86  00                 	db	0
   525  00FE87  64                 	db	100
   526  00FE88  69                 	db	105
   527  00FE89  73                 	db	115
   528  00FE8A  70                 	db	112
   529  00FE8B  6C                 	db	108
   530  00FE8C  61                 	db	97
   531  00FE8D  79                 	db	121
   532  00FE8E  73                 	db	115
   533  00FE8F  20                 	db	32
   534  00FE90  31                 	db	49
   535  00FE91  00                 	db	0
   536  00FE92  00                 	db	0
   537  00FE93  00                 	db	0
   538  00FE94  00                 	db	0
   539  00FE95  00                 	db	0
   540  00FE96  00                 	db	0
   541  00FE97  00                 	db	0
   542  00FE98  00                 	db	0
   543  00FE99  63                 	db	99
   544  00FE9A  6F                 	db	111
   545  00FE9B  6D                 	db	109
   546  00FE9C  6D                 	db	109
   547  00FE9D  61                 	db	97
   548  00FE9E  6E                 	db	110
   549  00FE9F  64                 	db	100
   550  00FEA0  73                 	db	115
   551  00FEA1  20                 	db	32
   552  00FEA2  32                 	db	50
   553  00FEA3  00                 	db	0
   554  00FEA4  00                 	db	0
   555  00FEA5  00                 	db	0
   556  00FEA6  00                 	db	0
   557  00FEA7  00                 	db	0
   558  00FEA8  00                 	db	0
   559  00FEA9  00                 	db	0
   560  00FEAA  00                 	db	0
   561  00FEAB  64                 	db	100
   562  00FEAC  69                 	db	105
   563  00FEAD  73                 	db	115
   564  00FEAE  70                 	db	112
   565  00FEAF  6C                 	db	108
   566  00FEB0  61                 	db	97
   567  00FEB1  79                 	db	121
   568  00FEB2  73                 	db	115
   569  00FEB3  20                 	db	32
   570  00FEB4  32                 	db	50
   571  00FEB5  00                 	db	0
   572  00FEB6  00                 	db	0
   573  00FEB7  00                 	db	0
   574  00FEB8  00                 	db	0
   575  00FEB9  00                 	db	0
   576  00FEBA  00                 	db	0
   577  00FEBB  00                 	db	0
   578  00FEBC  00                 	db	0
   579  00FEBD  63                 	db	99
   580  00FEBE  6F                 	db	111
   581  00FEBF  6D                 	db	109
   582  00FEC0  6D                 	db	109
   583  00FEC1  61                 	db	97
   584  00FEC2  6E                 	db	110
   585  00FEC3  64                 	db	100
   586  00FEC4  73                 	db	115
   587  00FEC5  20                 	db	32
   588  00FEC6  33                 	db	51
   589  00FEC7  00                 	db	0
   590  00FEC8  00                 	db	0
   591  00FEC9  00                 	db	0
   592  00FECA  00                 	db	0
   593  00FECB  00                 	db	0
   594  00FECC  00                 	db	0
   595  00FECD  00                 	db	0
   596  00FECE  00                 	db	0
   597  00FECF  64                 	db	100
   598  00FED0  69                 	db	105
   599  00FED1  73                 	db	115
   600  00FED2  70                 	db	112
   601  00FED3  6C                 	db	108
   602  00FED4  61                 	db	97
   603  00FED5  79                 	db	121
   604  00FED6  73                 	db	115
   605  00FED7  20                 	db	32
   606  00FED8  33                 	db	51
   607  00FED9  00                 	db	0
   608  00FEDA  00                 	db	0
   609  00FEDB  00                 	db	0
   610  00FEDC  00                 	db	0
   611  00FEDD  00                 	db	0
   612  00FEDE  00                 	db	0
   613  00FEDF  00                 	db	0
   614  00FEE0  00                 	db	0
   615  00FEE1  63                 	db	99
   616  00FEE2  6F                 	db	111
   617  00FEE3  6D                 	db	109
   618  00FEE4  6D                 	db	109
   619  00FEE5  61                 	db	97
   620  00FEE6  6E                 	db	110
   621  00FEE7  64                 	db	100
   622  00FEE8  73                 	db	115
   623  00FEE9  20                 	db	32
   624  00FEEA  34                 	db	52
   625  00FEEB  00                 	db	0
   626  00FEEC  00                 	db	0
   627  00FEED  00                 	db	0
   628  00FEEE  00                 	db	0
   629  00FEEF  00                 	db	0
   630  00FEF0  00                 	db	0
   631  00FEF1  00                 	db	0
   632  00FEF2  00                 	db	0
   633  00FEF3  64                 	db	100
   634  00FEF4  69                 	db	105
   635  00FEF5  73                 	db	115
   636  00FEF6  70                 	db	112
   637  00FEF7  6C                 	db	108
   638  00FEF8  61                 	db	97
   639  00FEF9  79                 	db	121
   640  00FEFA  73                 	db	115
   641  00FEFB  20                 	db	32
   642  00FEFC  34                 	db	52
   643  00FEFD  00                 	db	0
   644  00FEFE  00                 	db	0
   645  00FEFF  00                 	db	0
   646  00FF00  00                 	db	0
   647  00FF01  00                 	db	0
   648  00FF02  00                 	db	0
   649  00FF03  00                 	db	0
   650  00FF04  00                 	db	0
   651  00FF05                     __end_of_T:
   652                           	opt callstack 0
   653  0000                     _IVTADL	set	14493
   654  0000                     _IVTADH	set	14494
   655  0000                     _IVTADU	set	14495
   656  0000                     _PIR4bits	set	14756
   657  0000                     _PIE8bits	set	14744
   658  0000                     _PIR8bits	set	14760
   659  0000                     _SCANPR	set	14839
   660  0000                     _DMA2PR	set	14836
   661  0000                     _DMA1PR	set	14835
   662  0000                     _MAINPR	set	14834
   663  0000                     _ISRPR	set	14833
   664  0000                     _PIE2bits	set	14738
   665  0000                     _PIR2bits	set	14754
   666  0000                     _PIE9bits	set	14745
   667  0000                     _PIR9bits	set	14761
   668  0000                     _PIE6bits	set	14742
   669  0000                     _PIE3bits	set	14739
   670  0000                     _PMD7	set	14791
   671  0000                     _PMD6	set	14790
   672  0000                     _PMD5	set	14789
   673  0000                     _PMD4	set	14788
   674  0000                     _PMD3	set	14787
   675  0000                     _PMD2	set	14786
   676  0000                     _PMD1	set	14785
   677  0000                     _PMD0	set	14784
   678  0000                     _OSCTUNE	set	14814
   679  0000                     _OSCFRQ	set	14815
   680  0000                     _OSCEN	set	14813
   681  0000                     _OSCCON3	set	14811
   682  0000                     _OSCCON1	set	14809
   683  0000                     _IPR8bits	set	14728
   684  0000                     _IPR9bits	set	14729
   685  0000                     _IPR5bits	set	14725
   686  0000                     _IPR1bits	set	14721
   687  0000                     _IPR3bits	set	14723
   688  0000                     _IPR6bits	set	14726
   689  0000                     _IPR2bits	set	14722
   690  0000                     _PIE5bits	set	14741
   691  0000                     _PIE1bits	set	14737
   692  0000                     _PIR5bits	set	14757
   693  0000                     _PIR1bits	set	14753
   694  0000                     _PLLR	set	118496
   695  0000                     _SPI1SDIPPS	set	15071
   696  0000                     _U1RXPPS	set	15077
   697  0000                     _RC6PPS	set	14870
   698  0000                     _RC5PPS	set	14869
   699  0000                     _INT1PPS	set	15041
   700  0000                     _RD1PPS	set	14873
   701  0000                     _INT0PPS	set	15040
   702  0000                     _RC3PPS	set	14867
   703  0000                     _RB6PPS	set	14862
   704  0000                     _SPI1SCKPPS	set	15070
   705  0000                     _U2RXPPS	set	15080
   706  0000                     _SLRCONF	set	14995
   707  0000                     _SLRCONE	set	14979
   708  0000                     _SLRCOND	set	14963
   709  0000                     _SLRCONC	set	14947
   710  0000                     _SLRCONB	set	14931
   711  0000                     _SLRCONA	set	14915
   712  0000                     _ODCOND	set	14962
   713  0000                     _ODCONC	set	14946
   714  0000                     _ODCONB	set	14930
   715  0000                     _ODCONA	set	14914
   716  0000                     _ODCONF	set	14994
   717  0000                     _ODCONE	set	14978
   718  0000                     _WPUC	set	14945
   719  0000                     _WPUA	set	14913
   720  0000                     _WPUB	set	14929
   721  0000                     _WPUE	set	14977
   722  0000                     _WPUF	set	14993
   723  0000                     _WPUD	set	14961
   724  0000                     _ANSELA	set	14912
   725  0000                     _ANSELF	set	14992
   726  0000                     _ANSELE	set	14976
   727  0000                     _ANSELB	set	14928
   728  0000                     _ANSELC	set	14944
   729  0000                     _ANSELD	set	14960
   730  0000                     _DMA2SSA	set	15321
   731  0000                     _DMA1SSA	set	15353
   732  0000                     _DMA2DSZ	set	15310
   733  0000                     _DMA2SSZ	set	15319
   734  0000                     _DMA2DSA	set	15312
   735  0000                     _DMA1DSZ	set	15342
   736  0000                     _DMA1SSZ	set	15351
   737  0000                     _DMA1DSA	set	15344
   738  0000                     _DMA1CON0bits	set	15356
   739  0000                     _DMA1CON1bits	set	15357
   740  0000                     _DMA2CON0	set	15324
   741  0000                     _DMA2AIRQ	set	15326
   742  0000                     _DMA2SIRQ	set	15327
   743  0000                     _DMA2CON1	set	15325
   744  0000                     _DMA1CON0	set	15356
   745  0000                     _DMA1AIRQ	set	15358
   746  0000                     _DMA1SIRQ	set	15359
   747  0000                     _DMA1CON1	set	15357
   748  0000                     _CLKRCON	set	15589
   749  0000                     _CLKRCLK	set	15590
   750  0000                     _SPI1INTFbits	set	15642
   751  0000                     _SPI1RXB	set	15632
   752  0000                     _SPI1TXB	set	15633
   753  0000                     _SPI1TCNTL	set	15634
   754  0000                     _SPI1CON0	set	15636
   755  0000                     _SPI1CLK	set	15644
   756  0000                     _SPI1BAUD	set	15641
   757  0000                     _SPI1CON2	set	15638
   758  0000                     _SPI1CON1	set	15637
   759  0000                     _U2RXB	set	15824
   760  0000                     _U2TXB	set	15826
   761  0000                     _U2ERRIE	set	15842
   762  0000                     _U2ERRIR	set	15841
   763  0000                     _U2UIR	set	15840
   764  0000                     _U2FIFO	set	15839
   765  0000                     _U2BRGH	set	15838
   766  0000                     _U2BRGL	set	15837
   767  0000                     _U2CON2	set	15836
   768  0000                     _U2CON1	set	15835
   769  0000                     _U2CON0	set	15834
   770  0000                     _U2P3L	set	15832
   771  0000                     _U2P2L	set	15830
   772  0000                     _U2P1L	set	15828
   773  0000                     _U1RXB	set	15848
   774  0000                     _U1TXB	set	15850
   775  0000                     _U1ERRIE	set	15866
   776  0000                     _U1ERRIR	set	15865
   777  0000                     _U1UIR	set	15864
   778  0000                     _U1FIFO	set	15863
   779  0000                     _U1BRGH	set	15862
   780  0000                     _U1BRGL	set	15861
   781  0000                     _U1CON2	set	15860
   782  0000                     _U1CON1	set	15859
   783  0000                     _U1CON0	set	15858
   784  0000                     _U1P3H	set	15857
   785  0000                     _U1P3L	set	15856
   786  0000                     _U1P2H	set	15855
   787  0000                     _U1P2L	set	15854
   788  0000                     _U1P1H	set	15853
   789  0000                     _U1P1L	set	15852
   790  0000                     _FVRCON	set	16065
   791  0000                     _ADCON0	set	16120
   792  0000                     _ADCLK	set	16127
   793  0000                     _ADACT	set	16126
   794  0000                     _ADREF	set	16125
   795  0000                     _ADSTAT	set	16124
   796  0000                     _ADCON3	set	16123
   797  0000                     _ADCON2	set	16122
   798  0000                     _ADCON1	set	16121
   799  0000                     _ADPREH	set	16119
   800  0000                     _ADPREL	set	16118
   801  0000                     _ADCAP	set	16117
   802  0000                     _ADACQH	set	16116
   803  0000                     _ADACQL	set	16115
   804  0000                     _ADPCH	set	16113
   805  0000                     _ADRPT	set	16108
   806  0000                     _ADACCU	set	16106
   807  0000                     _ADSTPTH	set	16101
   808  0000                     _ADSTPTL	set	16100
   809  0000                     _ADUTHH	set	16097
   810  0000                     _ADUTHL	set	16096
   811  0000                     _ADLTHH	set	16095
   812  0000                     _ADLTHL	set	16094
   813  0000                     _CCPTMRS1bits	set	16223
   814  0000                     _LATCbits	set	16316
   815  0000                     _LATDbits	set	16317
   816  0000                     _PORTBbits	set	16331
   817  0000                     _T2CON	set	16300
   818  0000                     _T2TMR	set	16298
   819  0000                     _T2PR	set	16299
   820  0000                     _T2RST	set	16303
   821  0000                     _T2HLT	set	16301
   822  0000                     _T2CLKCON	set	16302
   823  0000                     _PWM8DCL	set	16224
   824  0000                     _PWM8DCH	set	16225
   825  0000                     _PWM8CON	set	16226
   826  0000                     _T5CONbits	set	16282
   827  0000                     _T5CON	set	16282
   828  0000                     _TMR5L	set	16280
   829  0000                     _TMR5H	set	16281
   830  0000                     _T5CLK	set	16285
   831  0000                     _T5GATE	set	16284
   832  0000                     _T5GCON	set	16283
   833  0000                     _T6CON	set	16276
   834  0000                     _T6TMR	set	16274
   835  0000                     _T6PR	set	16275
   836  0000                     _T6RST	set	16279
   837  0000                     _T6HLT	set	16277
   838  0000                     _T6CLKCON	set	16278
   839  0000                     _LATEbits	set	16318
   840  0000                     _TRISD	set	16325
   841  0000                     _TRISC	set	16324
   842  0000                     _TRISB	set	16323
   843  0000                     _TRISA	set	16322
   844  0000                     _TRISF	set	16327
   845  0000                     _TRISE	set	16326
   846  0000                     _LATC	set	16316
   847  0000                     _LATB	set	16315
   848  0000                     _LATF	set	16319
   849  0000                     _LATA	set	16314
   850  0000                     _LATD	set	16317
   851  0000                     _LATE	set	16318
   852  0000                     _IVTLOCKbits	set	16340
   853  0000                     _IVTLOCK	set	16340
   854  0000                     _INTCON0bits	set	16338
   855  0000                     _GIE	set	130711
   856  00FF05                     STR_9:
   857                           
   858                           ; BSR set to: 57
   859  00FF05  52                 	db	82	;'R'
   860  00FF06  25                 	db	37
   861  00FF07  64                 	db	100	;'d'
   862  00FF08  20                 	db	32
   863  00FF09  25                 	db	37
   864  00FF0A  64                 	db	100	;'d'
   865  00FF0B  2C                 	db	44
   866  00FF0C  20                 	db	32
   867  00FF0D  54                 	db	84	;'T'
   868  00FF0E  25                 	db	37
   869  00FF0F  64                 	db	100	;'d'
   870  00FF10  20                 	db	32
   871  00FF11  25                 	db	37
   872  00FF12  64                 	db	100	;'d'
   873  00FF13  20                 	db	32
   874  00FF14  43                 	db	67	;'C'
   875  00FF15  25                 	db	37
   876  00FF16  64                 	db	100	;'d'
   877  00FF17  20                 	db	32
   878  00FF18  25                 	db	37
   879  00FF19  64                 	db	100	;'d'
   880  00FF1A  20                 	db	32
   881  00FF1B  20                 	db	32
   882  00FF1C  20                 	db	32
   883  00FF1D  20                 	db	32
   884  00FF1E  20                 	db	32
   885  00FF1F  20                 	db	32
   886  00FF20  23                 	db	35
   887  00FF21  00                 	db	0
   888  00FF22                     
   889                           ; BSR set to: 57
   890  00FF22  20                 	db	32
   891  00FF23  4D                 	db	77	;'M'
   892  00FF24  65                 	db	101	;'e'
   893  00FF25  73                 	db	115	;'s'
   894  00FF26  67                 	db	103	;'g'
   895  00FF27  20                 	db	32
   896  00FF28  25                 	db	37
   897  00FF29  64                 	db	100	;'d'
   898  00FF2A  20                 	db	32
   899  00FF2B  53                 	db	83	;'S'
   900  00FF2C  74                 	db	116	;'t'
   901  00FF2D  61                 	db	97	;'a'
   902  00FF2E  63                 	db	99	;'c'
   903  00FF2F  6B                 	db	107	;'k'
   904  00FF30  20                 	db	32
   905  00FF31  25                 	db	37
   906  00FF32  64                 	db	100	;'d'
   907  00FF33  20                 	db	32
   908  00FF34  20                 	db	32
   909  00FF35  20                 	db	32
   910  00FF36  20                 	db	32
   911  00FF37  20                 	db	32
   912  00FF38  20                 	db	32
   913  00FF39  00                 	db	0
   914  00FF3A                     STR_25:
   915                           
   916                           ; BSR set to: 57
   917  00FF3A  20                 	db	32
   918  00FF3B  20                 	db	32
   919  00FF3C  20                 	db	32
   920  00FF3D  20                 	db	32
   921  00FF3E  20                 	db	32
   922  00FF3F  20                 	db	32
   923  00FF40  20                 	db	32
   924  00FF41  20                 	db	32
   925  00FF42  20                 	db	32
   926  00FF43  20                 	db	32
   927  00FF44  20                 	db	32
   928  00FF45  20                 	db	32
   929  00FF46  20                 	db	32
   930  00FF47  20                 	db	32
   931  00FF48  20                 	db	32
   932  00FF49  20                 	db	32
   933  00FF4A  20                 	db	32
   934  00FF4B  20                 	db	32
   935  00FF4C  00                 	db	0
   936  00FF4D                     STR_15:
   937                           
   938                           ; BSR set to: 57
   939  00FF4D  48                 	db	72	;'H'
   940  00FF4E  45                 	db	69	;'E'
   941  00FF4F  4C                 	db	76	;'L'
   942  00FF50  50                 	db	80	;'P'
   943  00FF51  20                 	db	32
   944  00FF52  25                 	db	37
   945  00FF53  73                 	db	115	;'s'
   946  00FF54  20                 	db	32
   947  00FF55  20                 	db	32
   948  00FF56  20                 	db	32
   949  00FF57  20                 	db	32
   950  00FF58  20                 	db	32
   951  00FF59  20                 	db	32
   952  00FF5A  20                 	db	32
   953  00FF5B  20                 	db	32
   954  00FF5C  20                 	db	32
   955  00FF5D  20                 	db	32
   956  00FF5E  20                 	db	32
   957  00FF5F  00                 	db	0
   958  00FF60                     
   959                           ; BSR set to: 57
   960  00FF60  44                 	db	68	;'D'
   961  00FF61  49                 	db	73	;'I'
   962  00FF62  53                 	db	83	;'S'
   963  00FF63  50                 	db	80	;'P'
   964  00FF64  4C                 	db	76	;'L'
   965  00FF65  41                 	db	65	;'A'
   966  00FF66  59                 	db	89	;'Y'
   967  00FF67  20                 	db	32
   968  00FF68  25                 	db	37
   969  00FF69  73                 	db	115	;'s'
   970  00FF6A  20                 	db	32
   971  00FF6B  20                 	db	32
   972  00FF6C  20                 	db	32
   973  00FF6D  20                 	db	32
   974  00FF6E  20                 	db	32
   975  00FF6F  20                 	db	32
   976  00FF70  20                 	db	32
   977  00FF71  20                 	db	32
   978  00FF72  00                 	db	0
   979  00FF73                     STR_8:
   980                           
   981                           ; BSR set to: 57
   982  00FF73  20                 	db	32
   983  00FF74  56                 	db	86	;'V'
   984  00FF75  54                 	db	84	;'T'
   985  00FF76  45                 	db	69	;'E'
   986  00FF77  52                 	db	82	;'R'
   987  00FF78  4D                 	db	77	;'M'
   988  00FF79  20                 	db	32
   989  00FF7A  23                 	db	35
   990  00FF7B  32                 	db	50	;'2'
   991  00FF7C  20                 	db	32
   992  00FF7D  20                 	db	32
   993  00FF7E  20                 	db	32
   994  00FF7F  20                 	db	32
   995  00FF80  20                 	db	32
   996  00FF81  20                 	db	32
   997  00FF82  20                 	db	32
   998  00FF83  00                 	db	0
   999  00FF84                     STR_4:
  1000                           
  1001                           ; BSR set to: 57
  1002  00FF84  20                 	db	32
  1003  00FF85  4E                 	db	78	;'N'
  1004  00FF86  53                 	db	83	;'S'
  1005  00FF87  41                 	db	65	;'A'
  1006  00FF88  53                 	db	83	;'S'
  1007  00FF89  50                 	db	80	;'P'
  1008  00FF8A  4F                 	db	79	;'O'
  1009  00FF8B  4F                 	db	79	;'O'
  1010  00FF8C  4B                 	db	75	;'K'
  1011  00FF8D  20                 	db	32
  1012  00FF8E  20                 	db	32
  1013  00FF8F  20                 	db	32
  1014  00FF90  20                 	db	32
  1015  00FF91  20                 	db	32
  1016  00FF92  20                 	db	32
  1017  00FF93  20                 	db	32
  1018  00FF94  00                 	db	0
  1019  00FF95                     STR_1:
  1020                           
  1021                           ; BSR set to: 57
  1022  00FF95  20                 	db	32
  1023  00FF96  4D                 	db	77	;'M'
  1024  00FF97  42                 	db	66	;'B'
  1025  00FF98  4D                 	db	77	;'M'
  1026  00FF99  43                 	db	67	;'C'
  1027  00FF9A  20                 	db	32
  1028  00FF9B  53                 	db	83	;'S'
  1029  00FF9C  4F                 	db	79	;'O'
  1030  00FF9D  4C                 	db	76	;'L'
  1031  00FF9E  41                 	db	65	;'A'
  1032  00FF9F  52                 	db	82	;'R'
  1033  00FFA0  4D                 	db	77	;'M'
  1034  00FFA1  4F                 	db	79	;'O'
  1035  00FFA2  4E                 	db	78	;'N'
  1036  00FFA3  20                 	db	32
  1037  00FFA4  20                 	db	32
  1038  00FFA5  00                 	db	0
  1039  00FFA6                     STR_5:
  1040                           
  1041                           ; BSR set to: 57
  1042  00FFA6  20                 	db	32
  1043  00FFA7  53                 	db	83	;'S'
  1044  00FFA8  45                 	db	69	;'E'
  1045  00FFA9  51                 	db	81	;'Q'
  1046  00FFAA  55                 	db	85	;'U'
  1047  00FFAB  45                 	db	69	;'E'
  1048  00FFAC  4E                 	db	78	;'N'
  1049  00FFAD  43                 	db	67	;'C'
  1050  00FFAE  45                 	db	69	;'E'
  1051  00FFAF  20                 	db	32
  1052  00FFB0  54                 	db	84	;'T'
  1053  00FFB1  45                 	db	69	;'E'
  1054  00FFB2  53                 	db	83	;'S'
  1055  00FFB3  54                 	db	84	;'T'
  1056  00FFB4  20                 	db	32
  1057  00FFB5  20                 	db	32
  1058  00FFB6  00                 	db	0
  1059  00FFB7                     STR_19:
  1060                           
  1061                           ; BSR set to: 57
  1062  00FFB7  76                 	db	118	;'v'
  1063  00FFB8  74                 	db	116	;'t'
  1064  00FFB9  65                 	db	101	;'e'
  1065  00FFBA  72                 	db	114	;'r'
  1066  00FFBB  6D                 	db	109	;'m'
  1067  00FFBC  20                 	db	32
  1068  00FFBD  25                 	db	37
  1069  00FFBE  78                 	db	120	;'x'
  1070  00FFBF  3A                 	db	58	;':'
  1071  00FFC0  25                 	db	37
  1072  00FFC1  78                 	db	120	;'x'
  1073  00FFC2  20                 	db	32
  1074  00FFC3  20                 	db	32
  1075  00FFC4  20                 	db	32
  1076  00FFC5  00                 	db	0
  1077  00FFC6                     STR_2:
  1078                           
  1079                           ; BSR set to: 57
  1080  00FFC6  20                 	db	32
  1081  00FFC7  56                 	db	86	;'V'
  1082  00FFC8  65                 	db	101	;'e'
  1083  00FFC9  72                 	db	114	;'r'
  1084  00FFCA  73                 	db	115	;'s'
  1085  00FFCB  69                 	db	105	;'i'
  1086  00FFCC  6F                 	db	111	;'o'
  1087  00FFCD  6E                 	db	110	;'n'
  1088  00FFCE  20                 	db	32
  1089  00FFCF  25                 	db	37
  1090  00FFD0  73                 	db	115	;'s'
  1091  00FFD1  20                 	db	32
  1092  00FFD2  20                 	db	32
  1093  00FFD3  20                 	db	32
  1094  00FFD4  00                 	db	0
  1095  00FFD5                     STR_13:
  1096                           
  1097                           ; BSR set to: 57
  1098  00FFD5  4E                 	db	78	;'N'
  1099  00FFD6  6F                 	db	111	;'o'
  1100  00FFD7  76                 	db	118	;'v'
  1101  00FFD8  20                 	db	32
  1102  00FFD9  20                 	db	32
  1103  00FFDA  31                 	db	49	;'1'
  1104  00FFDB  20                 	db	32
  1105  00FFDC  32                 	db	50	;'2'
  1106  00FFDD  30                 	db	48	;'0'
  1107  00FFDE  31                 	db	49	;'1'
  1108  00FFDF  39                 	db	57	;'9'
  1109  00FFE0  00                 	db	0
  1110  00FFE1                     STR_17:
  1111                           
  1112                           ; BSR set to: 57
  1113  00FFE1  25                 	db	37
  1114  00FFE2  73                 	db	115	;'s'
  1115  00FFE3  20                 	db	32
  1116  00FFE4  20                 	db	32
  1117  00FFE5  20                 	db	32
  1118  00FFE6  20                 	db	32
  1119  00FFE7  20                 	db	32
  1120  00FFE8  20                 	db	32
  1121  00FFE9  20                 	db	32
  1122  00FFEA  00                 	db	0
  1123  00FFEB                     STR_14:
  1124                           
  1125                           ; BSR set to: 57
  1126  00FFEB  31                 	db	49	;'1'
  1127  00FFEC  30                 	db	48	;'0'
  1128  00FFED  3A                 	db	58	;':'
  1129  00FFEE  32                 	db	50	;'2'
  1130  00FFEF  34                 	db	52	;'4'
  1131  00FFF0  3A                 	db	58	;':'
  1132  00FFF1  34                 	db	52	;'4'
  1133  00FFF2  36                 	db	54	;'6'
  1134  00FFF3  00                 	db	0
  1135  00FFF4                     STR_3:
  1136                           
  1137                           ; BSR set to: 57
  1138  00FFF4  30                 	db	48	;'0'
  1139  00FFF5  2E                 	db	46
  1140  00FFF6  35                 	db	53	;'5'
  1141  00FFF7  00                 	db	0
  1142  00FFF8                     STR_11:
  1143                           
  1144                           ; BSR set to: 57
  1145  00FFF8  25                 	db	37
  1146  00FFF9  63                 	db	99	;'c'
  1147  00FFFA  00                 	db	0
  1148  00FFFB                     STR_10:
  1149                           
  1150                           ; BSR set to: 57
  1151  00FFFB  25                 	db	37
  1152  00FFFC  73                 	db	115	;'s'
  1153  00FFFD  00                 	db	0
  1154  0000                     
  1155                           ; #config settings
  1156  00FFFE  00                 	db	0	; dummy byte at the end
  1157  0000                     
  1158                           	psect	cinit
  1159  0123A0                     __pcinit:
  1160                           	opt callstack 0
  1161  0123A0                     start_initialization:
  1162                           	opt callstack 0
  1163  0123A0                     __initialization:
  1164                           	opt callstack 0
  1165                           
  1166                           ; Initialize objects allocated to BANK1 (189 bytes)
  1167                           ; load TBLPTR registers with __pidataBANK1
  1168  0123A0  0EE2               	movlw	low __pidataBANK1
  1169  0123A2  6EF6               	movwf	tblptrl,c
  1170  0123A4  0E22               	movlw	high __pidataBANK1
  1171  0123A6  6EF7               	movwf	tblptrh,c
  1172  0123A8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1173  0123AA  6EF8               	movwf	tblptru,c
  1174  0123AC  EE00  F100         	lfsr	0,__pdataBANK1
  1175  0123B0  EE20 F0BD          	lfsr	2,189
  1176  0123B4                     copy_data0:
  1177  0123B4  0009               	tblrd		*+
  1178  0123B6  006F FFD7 FFEE     	movff	tablat,postinc0
  1179  0123BC  50DD               	movf	postdec2,w,c
  1180  0123BE  50D9               	movf	fsr2l,w,c
  1181  0123C0  E1F9               	bnz	copy_data0
  1182                           
  1183                           ; Initialize objects allocated to BANK0 (23 bytes)
  1184                           ; load TBLPTR registers with __pidataBANK0
  1185  0123C2  0EF6               	movlw	low __pidataBANK0
  1186  0123C4  6EF6               	movwf	tblptrl,c
  1187  0123C6  0E35               	movlw	high __pidataBANK0
  1188  0123C8  6EF7               	movwf	tblptrh,c
  1189  0123CA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1190  0123CC  6EF8               	movwf	tblptru,c
  1191  0123CE  EE00  F0AE         	lfsr	0,__pdataBANK0
  1192  0123D2  EE20 F017          	lfsr	2,23
  1193  0123D6                     copy_data1:
  1194  0123D6  0009               	tblrd		*+
  1195  0123D8  006F FFD7 FFEE     	movff	tablat,postinc0
  1196  0123DE  50DD               	movf	postdec2,w,c
  1197  0123E0  50D9               	movf	fsr2l,w,c
  1198  0123E2  E1F9               	bnz	copy_data1
  1199                           
  1200                           ; Clear objects allocated to BANK5 (255 bytes)
  1201  0123E4  EE01  F100         	lfsr	0,__pbssBANK5
  1202  0123E8  EE20 F0FF          	lfsr	2,255
  1203  0123EC                     clear_0:
  1204  0123EC  6AEE               	clrf	postinc0,c
  1205  0123EE  50DD               	movf	postdec2,w,c
  1206  0123F0  50D9               	movf	fsr2l,w,c
  1207  0123F2  E1FC               	bnz	clear_0
  1208  0123F4  50DA               	movf	fsr2h,w,c
  1209  0123F6  E1FA               	bnz	clear_0
  1210                           
  1211                           ; Clear objects allocated to BANK4 (255 bytes)
  1212  0123F8  EE01  F000         	lfsr	0,__pbssBANK4
  1213  0123FC  EE20 F0FF          	lfsr	2,255
  1214  012400                     clear_1:
  1215  012400  6AEE               	clrf	postinc0,c
  1216  012402  50DD               	movf	postdec2,w,c
  1217  012404  50D9               	movf	fsr2l,w,c
  1218  012406  E1FC               	bnz	clear_1
  1219  012408  50DA               	movf	fsr2h,w,c
  1220  01240A  E1FA               	bnz	clear_1
  1221                           
  1222                           ; Clear objects allocated to BANK3 (218 bytes)
  1223  01240C  EE00  F300         	lfsr	0,__pbssBANK3
  1224  012410  0EDA               	movlw	218
  1225  012412                     clear_2:
  1226  012412  6AEE               	clrf	postinc0,c
  1227  012414  06E8               	decf	wreg,f,c
  1228  012416  E1FD               	bnz	clear_2
  1229                           
  1230                           ; Clear objects allocated to BANK2 (198 bytes)
  1231  012418  EE00  F200         	lfsr	0,__pbssBANK2
  1232  01241C  0EC6               	movlw	198
  1233  01241E                     clear_3:
  1234  01241E  6AEE               	clrf	postinc0,c
  1235  012420  06E8               	decf	wreg,f,c
  1236  012422  E1FD               	bnz	clear_3
  1237                           
  1238                           ; Clear objects allocated to BANK1 (64 bytes)
  1239  012424  EE00  F1BD         	lfsr	0,__pbssBANK1
  1240  012428  0E40               	movlw	64
  1241  01242A                     clear_4:
  1242  01242A  6AEE               	clrf	postinc0,c
  1243  01242C  06E8               	decf	wreg,f,c
  1244  01242E  E1FD               	bnz	clear_4
  1245                           
  1246                           ; Clear objects allocated to BANK0 (78 bytes)
  1247  012430  EE00  F060         	lfsr	0,__pbssBANK0
  1248  012434  0E4E               	movlw	78
  1249  012436                     clear_5:
  1250  012436  6AEE               	clrf	postinc0,c
  1251  012438  06E8               	decf	wreg,f,c
  1252  01243A  E1FD               	bnz	clear_5
  1253                           
  1254                           ; Clear objects allocated to COMRAM (56 bytes)
  1255  01243C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1256  012440  0E38               	movlw	56
  1257  012442                     clear_6:
  1258  012442  6AEE               	clrf	postinc0,c
  1259  012444  06E8               	decf	wreg,f,c
  1260  012446  E1FD               	bnz	clear_6
  1261                           
  1262                           ;
  1263                           ; Setup IVTBASE
  1264                           ;
  1265  012448  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1266  01244A  6ED5               	movwf	213,c
  1267  01244C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1268  01244E  6ED6               	movwf	214,c
  1269  012450  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1270  012452  6ED7               	movwf	215,c
  1271  012454                     end_of_initialization:
  1272                           	opt callstack 0
  1273  012454                     __end_of__initialization:
  1274                           	opt callstack 0
  1275  012454  0100               	movlb	0
  1276  012456  EF84  F086         	goto	_main	;jump to C main() function
  1277                           
  1278                           	psect	bssCOMRAM
  1279  000001                     __pbssCOMRAM:
  1280                           	opt callstack 0
  1281  000001                     wdtdelay@dcount:
  1282                           	opt callstack 0
  1283  000001                     	ds	4
  1284  000005                     _TMR5_InterruptHandler:
  1285                           	opt callstack 0
  1286  000005                     	ds	3
  1287  000008                     _TMR6_InterruptHandler:
  1288                           	opt callstack 0
  1289  000008                     	ds	3
  1290  00000B                     _ADCC_ADI_InterruptHandler:
  1291                           	opt callstack 0
  1292  00000B                     	ds	3
  1293  00000E                     _UART1_TxInterruptHandler:
  1294                           	opt callstack 0
  1295  00000E                     	ds	3
  1296  000011                     _UART1_RxInterruptHandler:
  1297                           	opt callstack 0
  1298  000011                     	ds	3
  1299  000014                     _UART2_TxInterruptHandler:
  1300                           	opt callstack 0
  1301  000014                     	ds	3
  1302  000017                     _UART2_RxInterruptHandler:
  1303                           	opt callstack 0
  1304  000017                     	ds	3
  1305  00001A                     _INT1_InterruptHandler:
  1306                           	opt callstack 0
  1307  00001A                     	ds	3
  1308  00001D                     _INT0_InterruptHandler:
  1309                           	opt callstack 0
  1310  00001D                     	ds	3
  1311  000020                     _nout:
  1312                           	opt callstack 0
  1313  000020                     	ds	2
  1314  000022                     _width:
  1315                           	opt callstack 0
  1316  000022                     	ds	2
  1317  000024                     _prec:
  1318                           	opt callstack 0
  1319  000024                     	ds	2
  1320  000026                     _flags:
  1321                           	opt callstack 0
  1322  000026                     	ds	2
  1323  000028                     TMR5_ISR@CountCallBack:
  1324                           	opt callstack 0
  1325  000028                     	ds	2
  1326  00002A                     _timer5ReloadVal:
  1327                           	opt callstack 0
  1328  00002A                     	ds	2
  1329  00002C                     _mode_sw:
  1330                           	opt callstack 0
  1331  00002C                     	ds	1
  1332  00002D                     _uart2RxCount:
  1333                           	opt callstack 0
  1334  00002D                     	ds	1
  1335  00002E                     _uart2RxTail:
  1336                           	opt callstack 0
  1337  00002E                     	ds	1
  1338  00002F                     _uart2RxHead:
  1339                           	opt callstack 0
  1340  00002F                     	ds	1
  1341  000030                     _uart2TxBufferRemaining:
  1342                           	opt callstack 0
  1343  000030                     	ds	1
  1344  000031                     _uart2TxTail:
  1345                           	opt callstack 0
  1346  000031                     	ds	1
  1347  000032                     _uart2TxHead:
  1348                           	opt callstack 0
  1349  000032                     	ds	1
  1350  000033                     _uart1RxCount:
  1351                           	opt callstack 0
  1352  000033                     	ds	1
  1353  000034                     _uart1RxTail:
  1354                           	opt callstack 0
  1355  000034                     	ds	1
  1356  000035                     _uart1RxHead:
  1357                           	opt callstack 0
  1358  000035                     	ds	1
  1359  000036                     _uart1TxBufferRemaining:
  1360                           	opt callstack 0
  1361  000036                     	ds	1
  1362  000037                     _uart1TxTail:
  1363                           	opt callstack 0
  1364  000037                     	ds	1
  1365  000038                     _uart1TxHead:
  1366                           	opt callstack 0
  1367  000038                     	ds	1
  1368                           
  1369                           	psect	bssBANK0
  1370  000060                     __pbssBANK0:
  1371                           	opt callstack 0
  1372  000060                     _tickCount:
  1373                           	opt callstack 0
  1374  000060                     	ds	26
  1375  00007A                     _spi_link:
  1376                           	opt callstack 0
  1377  00007A                     	ds	12
  1378  000086                     _dbuf:
  1379                           	opt callstack 0
  1380  000086                     	ds	32
  1381  0000A6                     _seed:
  1382                           	opt callstack 0
  1383  0000A6                     	ds	8
  1384                           
  1385                           	psect	dataBANK0
  1386  0000AE                     __pdataBANK0:
  1387                           	opt callstack 0
  1388  0000AE                     stoa@F1144:
  1389                           	opt callstack 0
  1390  0000AE                     	ds	7
  1391  0000B5                     _port_data:
  1392                           	opt callstack 0
  1393  0000B5                     	ds	16
  1394                           
  1395                           	psect	bssBANK1
  1396  0001BD                     __pbssBANK1:
  1397                           	opt callstack 0
  1398  0001BD                     _uart1TxBuffer:
  1399                           	opt callstack 0
  1400  0001BD                     	ds	64
  1401                           
  1402                           	psect	dataBANK1
  1403  000100                     __pdataBANK1:
  1404                           	opt callstack 0
  1405  000100                     _V:
  1406                           	opt callstack 0
  1407  000100                     	ds	189
  1408                           
  1409                           	psect	bssBANK2
  1410  000200                     __pbssBANK2:
  1411                           	opt callstack 0
  1412  000200                     _uart2TxBuffer:
  1413                           	opt callstack 0
  1414  000200                     	ds	64
  1415  000240                     _ring_buf2:
  1416                           	opt callstack 0
  1417  000240                     	ds	67
  1418  000283                     _ring_buf1:
  1419                           	opt callstack 0
  1420  000283                     	ds	67
  1421                           
  1422                           	psect	bssBANK3
  1423  000300                     __pbssBANK3:
  1424                           	opt callstack 0
  1425  000300                     _D:
  1426                           	opt callstack 0
  1427  000300                     	ds	218
  1428                           
  1429                           	psect	bssBANK4
  1430  000400                     __pbssBANK4:
  1431                           	opt callstack 0
  1432  000400                     _uart1RxBuffer:
  1433                           	opt callstack 0
  1434  000400                     	ds	255
  1435                           
  1436                           	psect	bssBANK5
  1437  000500                     __pbssBANK5:
  1438                           	opt callstack 0
  1439  000500                     _uart2RxBuffer:
  1440                           	opt callstack 0
  1441  000500                     	ds	255
  1442                           
  1443                           	psect	cstackCOMRAM
  1444  000059                     __pcstackCOMRAM:
  1445                           	opt callstack 0
  1446  000059                     ??_TMR6_ISR:
  1447  000059                     
  1448                           ; 1 bytes @ 0x0
  1449  000059                     	ds	1
  1450  00005A                     ??_TMR5_ISR:
  1451                           
  1452                           ; 1 bytes @ 0x1
  1453  00005A                     	ds	4
  1454                           
  1455 ;;
  1456 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1457 ;;
  1458 ;; *************** function _main *****************
  1459 ;; Defined at:
  1460 ;;		line 148 in file "main.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  mode            1  [STACK] enum E17001
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1  [STACK] void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 7/3
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels required when called:   19
  1480 ;; This function calls:
  1481 ;;		_SYSTEM_Initialize
  1482 ;;		_StartTimer
  1483 ;;		_TimerDone
  1484 ;;		_WaitMs
  1485 ;;		_check_help
  1486 ;;		_eaDogM_WriteCommand
  1487 ;;		_get_vterm_ptr
  1488 ;;		_init_display
  1489 ;;		_mode_lamp_dim
  1490 ;;		_set_display_info
  1491 ;;		_set_vterm
  1492 ;;		_sprintf
  1493 ;;		_srand
  1494 ;;		_update_lcd
  1495 ;; This function is called by:
  1496 ;;		Startup code after reset
  1497 ;; This function uses a reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text0
  1501  010D08                     __ptext0:
  1502                           	opt callstack 0
  1503  010D08                     _main:
  1504                           	opt callstack 0
  1505                           
  1506                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1507  010D08  52E6               	movf	postinc1,f,c
  1508                           
  1509                           ;main.c: 150:  UI_STATES mode;;main.c: 153:  SYSTEM_Initialize();
  1510                           
  1511                           ;incstack = 0
  1512  010D0A  ECC0  F096         	call	_SYSTEM_Initialize	;wreg free
  1513                           
  1514                           ; BSR set to: 60
  1515                           ;main.c: 156:  (INTCON0bits.GIEH = 1);
  1516  010D0E  8ED2               	bsf	210,7,c	;volatile
  1517                           
  1518                           ; BSR set to: 60
  1519                           ;main.c: 159:  (INTCON0bits.GIEL = 1);
  1520  010D10  8CD2               	bsf	210,6,c	;volatile
  1521                           
  1522                           ; BSR set to: 60
  1523                           ;main.c: 161:  V.ui_state = UI_STATE_INIT;
  1524  010D12  0101               	movlb	1	; () banked
  1525  010D14  6B00               	clrf	_V& (0+255),b	;volatile
  1526                           
  1527                           ; BSR set to: 1
  1528                           ;main.c: 166:  WaitMs(300);
  1529  010D16  0E2C               	movlw	44
  1530  010D18  6EE6               	movwf	postinc1,c
  1531  010D1A  0E01               	movlw	1
  1532  010D1C  6EE6               	movwf	postinc1,c
  1533  010D1E  ECC6  F097         	call	_WaitMs	;wreg free
  1534                           
  1535                           ;main.c: 167:  if (PORTBbits.RB0) {
  1536  010D22  A0CB               	btfss	203,0,c	;volatile
  1537  010D24  D004               	goto	l6108
  1538                           
  1539                           ;main.c: 168:   mode = UI_STATE_HOST;
  1540                           ;stkvar	_mode @ sp[(-1)+0]
  1541  010D26  0EFF               	movlw	-1
  1542  010D28  6AE3               	clrf	plusw1,c
  1543  010D2A  2AE3               	incf	plusw1,f,c
  1544                           
  1545                           ;main.c: 169:  } else {
  1546  010D2C  D004               	goto	l6110
  1547  010D2E                     l6108:
  1548                           
  1549                           ;main.c: 170:   mode = UI_STATE_LOG;
  1550                           ;stkvar	_mode @ sp[(-1)+0]
  1551  010D2E  0EFF               	movlw	-1
  1552  010D30  6AE3               	clrf	plusw1,c
  1553  010D32  80E3               	bsf	plusw1,0,c
  1554  010D34  82E3               	bsf	plusw1,1,c	;indir
  1555  010D36                     l6110:
  1556                           
  1557                           ;main.c: 173:  if (mode == UI_STATE_HOST) {
  1558                           ;stkvar	_mode @ sp[(-1)+0]
  1559  010D36  0EFF               	movlw	-1
  1560  010D38  04E3               	decf	plusw1,w,c
  1561  010D3A  A4D8               	btfss	status,2,c
  1562  010D3C  D007               	goto	l1223
  1563                           
  1564                           ;main.c: 174:   do { LATDbits.LATD0 = 1; } while(0);
  1565  010D3E  80BD               	bsf	189,0,c	;volatile
  1566                           
  1567                           ;main.c: 175:   V.mode_pwm = 70;
  1568  010D40  0E00               	movlw	0
  1569  010D42  0101               	movlb	1	; () banked
  1570  010D44  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1571  010D46  0E46               	movlw	70
  1572  010D48  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1573                           
  1574                           ;main.c: 176:  } else {
  1575  010D4A  D004               	goto	l6114
  1576  010D4C                     l1223:
  1577  010D4C  90BD               	bcf	189,0,c	;volatile
  1578                           
  1579                           ;main.c: 178:   V.mode_pwm = 0;
  1580  010D4E  0101               	movlb	1	; () banked
  1581  010D50  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1582  010D52  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1583  010D54                     l6114:
  1584                           
  1585                           ; BSR set to: 1
  1586                           ;main.c: 180:  mode_lamp_dim(V.mode_pwm);
  1587  010D54  0060  F67F  FFE6   	movff	_V+159,postinc1
  1588  010D5A  0060  F683  FFE6   	movff	_V+160,postinc1
  1589  010D60  ECEF  F09A         	call	_mode_lamp_dim	;wreg free
  1590  010D64  D0C9               	goto	l6154
  1591  010D66                     l6116:
  1592                           
  1593                           ; BSR set to: 1
  1594                           ;main.c: 191:    init_display();
  1595  010D66  ECFC  F090         	call	_init_display	;wreg free
  1596                           
  1597                           ; BSR set to: 61
  1598                           ;main.c: 192:    eaDogM_WriteCommand(0b00001100);
  1599  010D6A  0E0C               	movlw	12
  1600  010D6C  6EE6               	movwf	postinc1,c
  1601  010D6E  EC42  F09B         	call	_eaDogM_WriteCommand	;wreg free
  1602                           
  1603                           ;main.c: 194:    V.ui_state = mode;
  1604                           ;stkvar	_mode @ sp[(-1)+0]
  1605  010D72  0EFF               	movlw	-1
  1606  010D74  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1607                           
  1608                           ;main.c: 195:    srand(1957);
  1609  010D7A  0EA5               	movlw	165
  1610  010D7C  6EE6               	movwf	postinc1,c
  1611  010D7E  0E07               	movlw	7
  1612  010D80  6EE6               	movwf	postinc1,c
  1613  010D82  ECFC  F097         	call	_srand	;wreg free
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;main.c: 196:    set_vterm(0);
  1617  010D86  0E00               	movlw	0
  1618  010D88  6EE6               	movwf	postinc1,c
  1619  010D8A  ECAD  F09A         	call	_set_vterm	;wreg free
  1620                           
  1621                           ; BSR set to: 3
  1622                           ;main.c: 197:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1623  010D8E  0E95               	movlw	low STR_1
  1624  010D90  6EE6               	movwf	postinc1,c
  1625  010D92  0EFF               	movlw	high STR_1
  1626  010D94  6EE6               	movwf	postinc1,c
  1627  010D96  0E00               	movlw	0
  1628  010D98  6EE6               	movwf	postinc1,c
  1629  010D9A  0E00               	movlw	0
  1630  010D9C  6EE6               	movwf	postinc1,c
  1631  010D9E  EC60  F098         	call	_get_vterm_ptr	;wreg free
  1632  010DA2  0060  F0E7  FFE6   	movff	btemp,postinc1
  1633  010DA8  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  1634  010DAE  0E04               	movlw	4
  1635  010DB0  6EE6               	movwf	postinc1,c
  1636  010DB2  ECF3  F08F         	call	_sprintf	;wreg free
  1637                           
  1638                           ;main.c: 198:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.5");
  1639  010DB6  0EF4               	movlw	low STR_3
  1640  010DB8  6EE6               	movwf	postinc1,c
  1641  010DBA  0EFF               	movlw	high STR_3
  1642  010DBC  6EE6               	movwf	postinc1,c
  1643  010DBE  0EC6               	movlw	low STR_2
  1644  010DC0  6EE6               	movwf	postinc1,c
  1645  010DC2  0EFF               	movlw	high STR_2
  1646  010DC4  6EE6               	movwf	postinc1,c
  1647  010DC6  0E00               	movlw	0
  1648  010DC8  6EE6               	movwf	postinc1,c
  1649  010DCA  0E01               	movlw	1
  1650  010DCC  6EE6               	movwf	postinc1,c
  1651  010DCE  EC60  F098         	call	_get_vterm_ptr	;wreg free
  1652  010DD2  0060  F0E7  FFE6   	movff	btemp,postinc1
  1653  010DD8  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  1654  010DDE  0E06               	movlw	6
  1655  010DE0  6EE6               	movwf	postinc1,c
  1656  010DE2  ECF3  F08F         	call	_sprintf	;wreg free
  1657                           
  1658                           ;main.c: 199:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1659  010DE6  0E84               	movlw	low STR_4
  1660  010DE8  6EE6               	movwf	postinc1,c
  1661  010DEA  0EFF               	movlw	high STR_4
  1662  010DEC  6EE6               	movwf	postinc1,c
  1663  010DEE  0E00               	movlw	0
  1664  010DF0  6EE6               	movwf	postinc1,c
  1665  010DF2  0E02               	movlw	2
  1666  010DF4  6EE6               	movwf	postinc1,c
  1667  010DF6  EC60  F098         	call	_get_vterm_ptr	;wreg free
  1668  010DFA  0060  F0E7  FFE6   	movff	btemp,postinc1
  1669  010E00  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  1670  010E06  0E04               	movlw	4
  1671  010E08  6EE6               	movwf	postinc1,c
  1672  010E0A  ECF3  F08F         	call	_sprintf	;wreg free
  1673                           
  1674                           ;main.c: 200:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1675  010E0E  0EA6               	movlw	low STR_5
  1676  010E10  6EE6               	movwf	postinc1,c
  1677  010E12  0EFF               	movlw	high STR_5
  1678  010E14  6EE6               	movwf	postinc1,c
  1679  010E16  0E02               	movlw	2
  1680  010E18  6EE6               	movwf	postinc1,c
  1681  010E1A  0E00               	movlw	0
  1682  010E1C  6EE6               	movwf	postinc1,c
  1683  010E1E  EC60  F098         	call	_get_vterm_ptr	;wreg free
  1684  010E22  0060  F0E7  FFE6   	movff	btemp,postinc1
  1685  010E28  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  1686  010E2E  0E04               	movlw	4
  1687  010E30  6EE6               	movwf	postinc1,c
  1688  010E32  ECF3  F08F         	call	_sprintf	;wreg free
  1689                           
  1690                           ;main.c: 201:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.5");
  1691  010E36  0EF4               	movlw	low STR_3
  1692  010E38  6EE6               	movwf	postinc1,c
  1693  010E3A  0EFF               	movlw	high STR_3
  1694  010E3C  6EE6               	movwf	postinc1,c
  1695  010E3E  0EC6               	movlw	low STR_2
  1696  010E40  6EE6               	movwf	postinc1,c
  1697  010E42  0EFF               	movlw	high STR_2
  1698  010E44  6EE6               	movwf	postinc1,c
  1699  010E46  0E02               	movlw	2
  1700  010E48  6EE6               	movwf	postinc1,c
  1701  010E4A  0E01               	movlw	1
  1702  010E4C  6EE6               	movwf	postinc1,c
  1703  010E4E  EC60  F098         	call	_get_vterm_ptr	;wreg free
  1704  010E52  0060  F0E7  FFE6   	movff	btemp,postinc1
  1705  010E58  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  1706  010E5E  0E06               	movlw	6
  1707  010E60  6EE6               	movwf	postinc1,c
  1708  010E62  ECF3  F08F         	call	_sprintf	;wreg free
  1709                           
  1710                           ;main.c: 202:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1711  010E66  0E73               	movlw	low STR_8
  1712  010E68  6EE6               	movwf	postinc1,c
  1713  010E6A  0EFF               	movlw	high STR_8
  1714  010E6C  6EE6               	movwf	postinc1,c
  1715  010E6E  0E02               	movlw	2
  1716  010E70  6EE6               	movwf	postinc1,c
  1717  010E72  0E02               	movlw	2
  1718  010E74  6EE6               	movwf	postinc1,c
  1719  010E76  EC60  F098         	call	_get_vterm_ptr	;wreg free
  1720  010E7A  0060  F0E7  FFE6   	movff	btemp,postinc1
  1721  010E80  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  1722  010E86  0E04               	movlw	4
  1723  010E88  6EE6               	movwf	postinc1,c
  1724  010E8A  ECF3  F08F         	call	_sprintf	;wreg free
  1725                           
  1726                           ;main.c: 203:    update_lcd(0);
  1727  010E8E  0E00               	movlw	0
  1728  010E90  6EE6               	movwf	postinc1,c
  1729  010E92  EC6C  F08F         	call	_update_lcd	;wreg free
  1730                           
  1731                           ;main.c: 204:    WaitMs(3000);
  1732  010E96  0EB8               	movlw	184
  1733  010E98  6EE6               	movwf	postinc1,c
  1734  010E9A  0E0B               	movlw	11
  1735  010E9C  6EE6               	movwf	postinc1,c
  1736  010E9E  ECC6  F097         	call	_WaitMs	;wreg free
  1737                           
  1738                           ;main.c: 205:    StartTimer(TMR_DISPLAY, 100);
  1739  010EA2  0E64               	movlw	100
  1740  010EA4  6EE6               	movwf	postinc1,c
  1741  010EA6  0E00               	movlw	0
  1742  010EA8  6EE6               	movwf	postinc1,c
  1743  010EAA  0E0A               	movlw	10
  1744  010EAC  6EE6               	movwf	postinc1,c
  1745  010EAE  EC8C  F097         	call	_StartTimer	;wreg free
  1746                           
  1747                           ;main.c: 206:    StartTimer(TMR_SEQ, 10000);
  1748  010EB2  0E10               	movlw	16
  1749  010EB4  6EE6               	movwf	postinc1,c
  1750  010EB6  0E27               	movlw	39
  1751  010EB8  6EE6               	movwf	postinc1,c
  1752  010EBA  0E0B               	movlw	11
  1753  010EBC  6EE6               	movwf	postinc1,c
  1754  010EBE  EC8C  F097         	call	_StartTimer	;wreg free
  1755                           
  1756                           ;main.c: 207:    StartTimer(TMR_INFO, 3000);
  1757  010EC2  0EB8               	movlw	184
  1758  010EC4  6EE6               	movwf	postinc1,c
  1759  010EC6  0E0B               	movlw	11
  1760  010EC8  6EE6               	movwf	postinc1,c
  1761  010ECA  0E07               	movlw	7
  1762  010ECC  6EE6               	movwf	postinc1,c
  1763  010ECE  EC8C  F097         	call	_StartTimer	;wreg free
  1764                           
  1765                           ;main.c: 208:    StartTimer(TMR_FLIPPER, 1500);
  1766  010ED2  0EDC               	movlw	220
  1767  010ED4  6EE6               	movwf	postinc1,c
  1768  010ED6  0E05               	movlw	5
  1769  010ED8  6EE6               	movwf	postinc1,c
  1770  010EDA  0E0C               	movlw	12
  1771  010EDC  6EE6               	movwf	postinc1,c
  1772  010EDE  EC8C  F097         	call	_StartTimer	;wreg free
  1773                           
  1774                           ;main.c: 209:    StartTimer(TMR_HELPDIS, 3000);
  1775  010EE2  0EB8               	movlw	184
  1776  010EE4  6EE6               	movwf	postinc1,c
  1777  010EE6  0E0B               	movlw	11
  1778  010EE8  6EE6               	movwf	postinc1,c
  1779  010EEA  0E09               	movlw	9
  1780  010EEC  6EE6               	movwf	postinc1,c
  1781  010EEE  EC8C  F097         	call	_StartTimer	;wreg free
  1782                           
  1783                           ;main.c: 210:    break;
  1784  010EF2  D016               	goto	l6156
  1785  010EF4                     l1232:
  1786                           
  1787                           ; BSR set to: 1
  1788                           ;main.c: 217:    V.ui_state = UI_STATE_INIT;
  1789  010EF4  6B00               	clrf	_V& (0+255),b	;volatile
  1790                           
  1791                           ;main.c: 218:    break;
  1792  010EF6  D014               	goto	l6156
  1793  010EF8                     l6154:
  1794  010EF8  0101               	movlb	1	; () banked
  1795  010EFA  5100               	movf	_V& (0+255),w,b	;volatile
  1796  010EFC  6E43               	movwf	(btemp+10)^0,c
  1797  010EFE  6A44               	clrf	(btemp+11)^0,c
  1798                           
  1799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 1, Range of values is 0 to 0
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            4     3 (average)
  1805                           ;	Chosen strategy is simple_byte
  1806  010F00  5044               	movf	(btemp+11)^0,w,c
  1807  010F02  0A00               	xorlw	0	; case 0
  1808  010F04  A4D8               	btfss	status,2,c
  1809  010F06  D7F6               	goto	l1232
  1810                           
  1811                           ; BSR set to: 1
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 4, Range of values is 0 to 4
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte           13     7 (average)
  1817                           ;	Chosen strategy is simple_byte
  1818  010F08  5043               	movf	(btemp+10)^0,w,c
  1819  010F0A  0A00               	xorlw	0	; case 0
  1820  010F0C  B4D8               	btfsc	status,2,c
  1821  010F0E  D72B               	goto	l6116
  1822  010F10  0A01               	xorlw	1	; case 1
  1823  010F12  B4D8               	btfsc	status,2,c
  1824  010F14  D005               	goto	l6156
  1825  010F16  0A02               	xorlw	2	; case 3
  1826  010F18  B4D8               	btfsc	status,2,c
  1827  010F1A  D002               	goto	l6156
  1828  010F1C  0A07               	xorlw	7	; case 4
  1829  010F1E  D7EA               	goto	l1232
  1830  010F20                     l6156:
  1831                           
  1832                           ;main.c: 224:   if (mode != UI_STATE_LOG)
  1833                           ;stkvar	_mode @ sp[(-1)+0]
  1834                           
  1835                           ;main.c: 220:   if (V.ticks) {
  1836  010F20  0EFF               	movlw	-1
  1837  010F22  006F FF8C  F039    	movff	plusw1,btemp
  1838  010F28  0E03               	movlw	3
  1839  010F2A  1839               	xorwf	btemp^0,w,c
  1840  010F2C  B4D8               	btfsc	status,2,c
  1841  010F2E  D04A               	goto	l6172
  1842                           
  1843                           ;main.c: 225:    if (TimerDone(TMR_DISPLAY)) {
  1844  010F30  0E0A               	movlw	10
  1845  010F32  6EE6               	movwf	postinc1,c
  1846  010F34  EC0D  F09A         	call	_TimerDone	;wreg free
  1847  010F38  5039               	movf	btemp^0,w,c
  1848  010F3A  B4D8               	btfsc	status,2,c
  1849  010F3C  D043               	goto	l6172
  1850                           
  1851                           ;main.c: 226:     if (TimerDone(TMR_HELPDIS)) {
  1852  010F3E  0E09               	movlw	9
  1853  010F40  6EE6               	movwf	postinc1,c
  1854  010F42  EC0D  F09A         	call	_TimerDone	;wreg free
  1855  010F46  5039               	movf	btemp^0,w,c
  1856  010F48  B4D8               	btfsc	status,2,c
  1857  010F4A  D004               	goto	l6166
  1858                           
  1859                           ;main.c: 227:      set_display_info(DIS_STR);
  1860  010F4C  0E00               	movlw	0
  1861  010F4E  6EE6               	movwf	postinc1,c
  1862  010F50  EC72  F09A         	call	_set_display_info	;wreg free
  1863  010F54                     l6166:
  1864                           
  1865                           ;main.c: 229:     sprintf(get_vterm_ptr(1, 0), "R%d %d, T%d %d C%d %d      #", 0, 1, 2, 
      +                          3, 4, 5);
  1866  010F54  0E05               	movlw	5
  1867  010F56  6EE6               	movwf	postinc1,c
  1868  010F58  0E00               	movlw	0
  1869  010F5A  6EE6               	movwf	postinc1,c
  1870  010F5C  0E04               	movlw	4
  1871  010F5E  6EE6               	movwf	postinc1,c
  1872  010F60  0E00               	movlw	0
  1873  010F62  6EE6               	movwf	postinc1,c
  1874  010F64  0E03               	movlw	3
  1875  010F66  6EE6               	movwf	postinc1,c
  1876  010F68  0E00               	movlw	0
  1877  010F6A  6EE6               	movwf	postinc1,c
  1878  010F6C  0E02               	movlw	2
  1879  010F6E  6EE6               	movwf	postinc1,c
  1880  010F70  0E00               	movlw	0
  1881  010F72  6EE6               	movwf	postinc1,c
  1882  010F74  0E01               	movlw	1
  1883  010F76  6EE6               	movwf	postinc1,c
  1884  010F78  0E00               	movlw	0
  1885  010F7A  6EE6               	movwf	postinc1,c
  1886  010F7C  0E00               	movlw	0
  1887  010F7E  6EE6               	movwf	postinc1,c
  1888  010F80  0E00               	movlw	0
  1889  010F82  6EE6               	movwf	postinc1,c
  1890  010F84  0E05               	movlw	low STR_9
  1891  010F86  6EE6               	movwf	postinc1,c
  1892  010F88  0EFF               	movlw	high STR_9
  1893  010F8A  6EE6               	movwf	postinc1,c
  1894  010F8C  0E00               	movlw	0
  1895  010F8E  6EE6               	movwf	postinc1,c
  1896  010F90  0E01               	movlw	1
  1897  010F92  6EE6               	movwf	postinc1,c
  1898  010F94  EC60  F098         	call	_get_vterm_ptr	;wreg free
  1899  010F98  0060  F0E7  FFE6   	movff	btemp,postinc1
  1900  010F9E  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  1901  010FA4  0E10               	movlw	16
  1902  010FA6  6EE6               	movwf	postinc1,c
  1903  010FA8  ECF3  F08F         	call	_sprintf	;wreg free
  1904                           
  1905                           ;main.c: 230:     StartTimer(TMR_DISPLAY, 100);
  1906  010FAC  0E64               	movlw	100
  1907  010FAE  6EE6               	movwf	postinc1,c
  1908  010FB0  0E00               	movlw	0
  1909  010FB2  6EE6               	movwf	postinc1,c
  1910  010FB4  0E0A               	movlw	10
  1911  010FB6  6EE6               	movwf	postinc1,c
  1912  010FB8  EC8C  F097         	call	_StartTimer	;wreg free
  1913                           
  1914                           ;main.c: 231:     update_lcd(0);
  1915  010FBC  0E00               	movlw	0
  1916  010FBE  6EE6               	movwf	postinc1,c
  1917  010FC0  EC6C  F08F         	call	_update_lcd	;wreg free
  1918  010FC4                     l6172:
  1919                           
  1920                           ;main.c: 237:   check_help(V.flipper);
  1921  010FC4  0101               	movlb	1	; () banked
  1922  010FC6  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  1923  010FC8  6EE6               	movwf	postinc1,c
  1924  010FCA  EC3A  F08D         	call	_check_help	;wreg free
  1925                           
  1926                           ;main.c: 242:   if (V.set_sequ) {
  1927  010FCE  0101               	movlb	1	; () banked
  1928  010FD0  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  1929  010FD2  D792               	goto	l6154
  1930                           
  1931                           ; BSR set to: 1
  1932                           ;main.c: 243:    if (TimerDone(TMR_INFO)) {
  1933  010FD4  0E07               	movlw	7
  1934  010FD6  6EE6               	movwf	postinc1,c
  1935  010FD8  EC0D  F09A         	call	_TimerDone	;wreg free
  1936  010FDC  5039               	movf	btemp^0,w,c
  1937  010FDE  B4D8               	btfsc	status,2,c
  1938  010FE0  D00B               	goto	l6184
  1939                           
  1940                           ;main.c: 244:     V.set_sequ = 0;
  1941  010FE2  0101               	movlb	1	; () banked
  1942  010FE4  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;main.c: 245:     set_vterm(0);
  1946  010FE6  0E00               	movlw	0
  1947  010FE8  6EE6               	movwf	postinc1,c
  1948  010FEA  ECAD  F09A         	call	_set_vterm	;wreg free
  1949                           
  1950                           ; BSR set to: 3
  1951                           ;main.c: 246:     update_lcd(0);
  1952  010FEE  0E00               	movlw	0
  1953  010FF0  6EE6               	movwf	postinc1,c
  1954  010FF2  EC6C  F08F         	call	_update_lcd	;wreg free
  1955                           
  1956                           ;main.c: 247:    } else {
  1957  010FF6  D780               	goto	l6154
  1958  010FF8                     l6184:
  1959                           
  1960                           ;main.c: 248:     set_vterm(2);
  1961  010FF8  0E02               	movlw	2
  1962  010FFA  6EE6               	movwf	postinc1,c
  1963  010FFC  ECAD  F09A         	call	_set_vterm	;wreg free
  1964                           
  1965                           ; BSR set to: 3
  1966                           ;main.c: 249:     update_lcd(2);
  1967  011000  0E02               	movlw	2
  1968  011002  6EE6               	movwf	postinc1,c
  1969  011004  EC6C  F08F         	call	_update_lcd	;wreg free
  1970  011008  D777               	goto	l6154
  1971  01100A                     __end_of_main:
  1972                           	opt callstack 0
  1973                           
  1974 ;; *************** function _srand *****************
  1975 ;; Defined at:
  1976 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  s               2  [STACK] unsigned int 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1  [STACK] void 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/3D
  1987 ;;		On exit  : 3F/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    6
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text1
  2005  012FF8                     __ptext1:
  2006                           	opt callstack 0
  2007  012FF8                     _srand:
  2008                           	opt callstack 24
  2009                           
  2010                           ;stkvar	_s @ sp[(0)+-2]
  2011                           
  2012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2013                           ;incstack = 0
  2014  012FF8  0EFE               	movlw	-2
  2015  012FFA  50E3               	movf	plusw1,w,c
  2016  012FFC  0FFF               	addlw	255
  2017  012FFE  6E43               	movwf	(btemp+10)^0,c
  2018  013000  0EFF               	movlw	-1
  2019  013002  006F FF8C  F044    	movff	plusw1,btemp+11
  2020  013008  0EFF               	movlw	255
  2021  01300A  2244               	addwfc	(btemp+11)^0,f,c
  2022  01300C  0060  F10C  F0A6   	movff	btemp+10,_seed
  2023  013012  0060  F110  F0A7   	movff	btemp+11,_seed+1
  2024  013018  0100               	movlb	0	; () banked
  2025  01301A  6BA8               	clrf	(_seed+2)& (0+255),b
  2026  01301C  6BA9               	clrf	(_seed+3)& (0+255),b
  2027  01301E  6BAA               	clrf	(_seed+4)& (0+255),b
  2028  013020  6BAB               	clrf	(_seed+5)& (0+255),b
  2029  013022  6BAC               	clrf	(_seed+6)& (0+255),b
  2030  013024  6BAD               	clrf	(_seed+7)& (0+255),b
  2031                           
  2032                           ; BSR set to: 0
  2033                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2034  013026  52E5               	movf	postdec1,f,c
  2035  013028  52E5               	movf	postdec1,f,c
  2036  01302A  0012               	return		;funcret
  2037  01302C                     __end_of_srand:
  2038                           	opt callstack 0
  2039                           
  2040 ;; *************** function _init_display *****************
  2041 ;; Defined at:
  2042 ;;		line 37 in file "eadog.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1  [STACK] void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/1
  2053 ;;		On exit  : 3F/3D
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    8
  2063 ;; This function calls:
  2064 ;;		_ringBufS_init
  2065 ;;		_send_lcd_cmd
  2066 ;;		_send_lcd_cmd_long
  2067 ;;		_wdtdelay
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text2
  2074  0121F8                     __ptext2:
  2075                           	opt callstack 0
  2076  0121F8                     _init_display:
  2077                           	opt callstack 22
  2078                           
  2079                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2080                           
  2081                           ; BSR set to: 0
  2082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2083                           ;incstack = 0
  2084  0121F8  0E83               	movlw	low _ring_buf1
  2085  0121FA  0100               	movlb	0	; () banked
  2086  0121FC  6F80               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2087  0121FE  0E02               	movlw	high _ring_buf1
  2088  012200  6F81               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2089                           
  2090                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2091  012202  0E40               	movlw	low _ring_buf2
  2092  012204  6F7E               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2093  012206  0E02               	movlw	high _ring_buf2
  2094  012208  6F7F               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2098  01220A  0060  F203  FFE6   	movff	_spi_link+6,postinc1
  2099  012210  0060  F207  FFE6   	movff	_spi_link+7,postinc1
  2100  012216  ECF5  F098         	call	_ringBufS_init	;wreg free
  2101                           
  2102                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2103  01221A  0060  F1FB  FFE6   	movff	_spi_link+4,postinc1
  2104  012220  0060  F1FF  FFE6   	movff	_spi_link+5,postinc1
  2105  012226  ECF5  F098         	call	_ringBufS_init	;wreg free
  2106                           
  2107                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2108  01222A  84BE               	bsf	190,2,c	;volatile
  2109  01222C  84BC               	bsf	188,2,c	;volatile
  2110                           
  2111                           ;eadog.c: 46:  wdtdelay(350000);
  2112  01222E  0E30               	movlw	48
  2113  012230  6EE6               	movwf	postinc1,c
  2114  012232  0E57               	movlw	87
  2115  012234  6EE6               	movwf	postinc1,c
  2116  012236  0E05               	movlw	5
  2117  012238  6EE6               	movwf	postinc1,c
  2118  01223A  0E00               	movlw	0
  2119  01223C  6EE6               	movwf	postinc1,c
  2120  01223E  EC23  F096         	call	_wdtdelay	;wreg free
  2121                           
  2122                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2123  012242  0E39               	movlw	57
  2124  012244  6EE6               	movwf	postinc1,c
  2125  012246  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2126                           
  2127                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2128  01224A  0E1D               	movlw	29
  2129  01224C  6EE6               	movwf	postinc1,c
  2130  01224E  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2131                           
  2132                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2133  012252  0E50               	movlw	80
  2134  012254  6EE6               	movwf	postinc1,c
  2135  012256  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2136                           
  2137                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2138  01225A  0E6C               	movlw	108
  2139  01225C  6EE6               	movwf	postinc1,c
  2140  01225E  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2141                           
  2142                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2143  012262  0E76               	movlw	118
  2144  012264  6EE6               	movwf	postinc1,c
  2145  012266  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2146                           
  2147                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2148  01226A  0E38               	movlw	56
  2149  01226C  6EE6               	movwf	postinc1,c
  2150  01226E  ECCD  F098         	call	_send_lcd_cmd_long	;wreg free
  2151                           
  2152                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2153  012272  0E0F               	movlw	15
  2154  012274  6EE6               	movwf	postinc1,c
  2155  012276  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2156                           
  2157                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2158  01227A  0E01               	movlw	1
  2159  01227C  6EE6               	movwf	postinc1,c
  2160  01227E  ECCD  F098         	call	_send_lcd_cmd_long	;wreg free
  2161                           
  2162                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2163  012282  0E02               	movlw	2
  2164  012284  6EE6               	movwf	postinc1,c
  2165  012286  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2166                           
  2167                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2168  01228A  0E06               	movlw	6
  2169  01228C  6EE6               	movwf	postinc1,c
  2170  01228E  ECE1  F098         	call	_send_lcd_cmd	;wreg free
  2171                           
  2172                           ;eadog.c: 57:  wdtdelay(30);
  2173  012292  0E1E               	movlw	30
  2174  012294  6EE6               	movwf	postinc1,c
  2175  012296  0E00               	movlw	0
  2176  012298  6EE6               	movwf	postinc1,c
  2177  01229A  0E00               	movlw	0
  2178  01229C  6EE6               	movwf	postinc1,c
  2179  01229E  0E00               	movlw	0
  2180  0122A0  6EE6               	movwf	postinc1,c
  2181  0122A2  EC23  F096         	call	_wdtdelay	;wreg free
  2182                           
  2183                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2184  0122A6  0E02               	movlw	2
  2185  0122A8  013D               	movlb	61	; () banked
  2186  0122AA  6F16               	movwf	22,b	;volatile
  2187                           
  2188                           ; BSR set to: 61
  2189                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2190  0122AC  0E40               	movlw	64
  2191  0122AE  6F15               	movwf	21,b	;volatile
  2192                           
  2193                           ; BSR set to: 61
  2194                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2195  0122B0  0E83               	movlw	131
  2196  0122B2  6F14               	movwf	20,b	;volatile
  2197                           
  2198                           ; BSR set to: 61
  2199                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2200  0122B4  931A               	bcf	26,1,b	;volatile
  2201                           
  2202                           ; BSR set to: 61
  2203                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2204  0122B6  0E3F               	movlw	-193
  2205  0122B8  013B               	movlb	59	; () banked
  2206  0122BA  17FD               	andwf	253,f,b	;volatile
  2207                           
  2208                           ; BSR set to: 59
  2209                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2210  0122BC  9BFD               	bcf	253,5,b	;volatile
  2211                           
  2212                           ; BSR set to: 59
  2213                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2214  0122BE  51FD               	movf	253,w,b	;volatile
  2215  0122C0  0BF9               	andlw	-7
  2216  0122C2  0902               	iorlw	2
  2217  0122C4  6FFD               	movwf	253,b	;volatile
  2218                           
  2219                           ; BSR set to: 59
  2220                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2221  0122C6  0EE7               	movlw	-25
  2222  0122C8  17FD               	andwf	253,f,b	;volatile
  2223                           
  2224                           ; BSR set to: 59
  2225                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2226  0122CA  81FD               	bsf	253,0,b	;volatile
  2227                           
  2228                           ; BSR set to: 59
  2229                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2230  0122CC  0E83               	movlw	low _ring_buf1
  2231  0122CE  6FF9               	movwf	249,b	;volatile
  2232  0122D0  0E02               	movlw	high _ring_buf1
  2233  0122D2  6FFA               	movwf	250,b	;volatile
  2234  0122D4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2235  0122D6  6FFB               	movwf	251,b	;volatile
  2236                           
  2237                           ; BSR set to: 59
  2238                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2239  0122D8  9BFC               	bcf	252,5,b	;volatile
  2240                           
  2241                           ; BSR set to: 59
  2242                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2243  0122DA  013D               	movlb	61	; () banked
  2244  0122DC  831A               	bsf	26,1,b	;volatile
  2245                           
  2246                           ; BSR set to: 61
  2247                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2248  0122DE  94BE               	bcf	190,2,c	;volatile
  2249                           
  2250                           ; BSR set to: 61
  2251                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2252  0122E0  0012               	return		;funcret
  2253  0122E2                     __end_of_init_display:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _send_lcd_cmd_long *****************
  2257 ;; Defined at:
  2258 ;;		line 114 in file "eadog.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  cmd             1  [STACK] const unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1  [STACK] void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    7
  2279 ;; This function calls:
  2280 ;;		_SPI1_Exchange8bit
  2281 ;;		_wdtdelay
  2282 ;; This function is called by:
  2283 ;;		_init_display
  2284 ;; This function uses a reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text3
  2288  01319A                     __ptext3:
  2289                           	opt callstack 0
  2290  01319A                     _send_lcd_cmd_long:
  2291                           	opt callstack 22
  2292                           
  2293                           ; BSR set to: 61
  2294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2295                           ;incstack = 0
  2296                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2297  01319A  92BC               	bcf	188,1,c	;volatile
  2298                           
  2299                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2300  01319C  94BC               	bcf	188,2,c	;volatile
  2301                           
  2302                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2303                           ;stkvar	_cmd @ sp[(0)+-1]
  2304  01319E  0EFF               	movlw	-1
  2305  0131A0  50E3               	movf	plusw1,w,c
  2306  0131A2  6EE6               	movwf	postinc1,c
  2307  0131A4  EC63  F09A         	call	_SPI1_Exchange8bit	;wreg free
  2308                           
  2309                           ; BSR set to: 57
  2310                           ;eadog.c: 119:  wdtdelay(800);
  2311  0131A8  0E20               	movlw	32
  2312  0131AA  6EE6               	movwf	postinc1,c
  2313  0131AC  0E03               	movlw	3
  2314  0131AE  6EE6               	movwf	postinc1,c
  2315  0131B0  0E00               	movlw	0
  2316  0131B2  6EE6               	movwf	postinc1,c
  2317  0131B4  0E00               	movlw	0
  2318  0131B6  6EE6               	movwf	postinc1,c
  2319  0131B8  EC23  F096         	call	_wdtdelay	;wreg free
  2320  0131BC  82BC               	bsf	188,1,c	;volatile
  2321                           
  2322                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2323  0131BE  52E5               	movf	postdec1,f,c
  2324  0131C0  0012               	return		;funcret
  2325  0131C2                     __end_of_send_lcd_cmd_long:
  2326                           	opt callstack 0
  2327                           
  2328 ;; *************** function _send_lcd_cmd *****************
  2329 ;; Defined at:
  2330 ;;		line 102 in file "eadog.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  cmd             1  [STACK] const unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1  [STACK] void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    7
  2351 ;; This function calls:
  2352 ;;		_SPI1_Exchange8bit
  2353 ;;		_wdtdelay
  2354 ;; This function is called by:
  2355 ;;		_init_display
  2356 ;; This function uses a reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text4
  2360  0131C2                     __ptext4:
  2361                           	opt callstack 0
  2362  0131C2                     _send_lcd_cmd:
  2363                           	opt callstack 22
  2364                           
  2365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2366                           ;incstack = 0
  2367                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2368  0131C2  92BC               	bcf	188,1,c	;volatile
  2369                           
  2370                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2371  0131C4  94BC               	bcf	188,2,c	;volatile
  2372                           
  2373                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2374                           ;stkvar	_cmd @ sp[(0)+-1]
  2375  0131C6  0EFF               	movlw	-1
  2376  0131C8  50E3               	movf	plusw1,w,c
  2377  0131CA  6EE6               	movwf	postinc1,c
  2378  0131CC  EC63  F09A         	call	_SPI1_Exchange8bit	;wreg free
  2379                           
  2380                           ; BSR set to: 57
  2381                           ;eadog.c: 107:  wdtdelay(30);
  2382  0131D0  0E1E               	movlw	30
  2383  0131D2  6EE6               	movwf	postinc1,c
  2384  0131D4  0E00               	movlw	0
  2385  0131D6  6EE6               	movwf	postinc1,c
  2386  0131D8  0E00               	movlw	0
  2387  0131DA  6EE6               	movwf	postinc1,c
  2388  0131DC  0E00               	movlw	0
  2389  0131DE  6EE6               	movwf	postinc1,c
  2390  0131E0  EC23  F096         	call	_wdtdelay	;wreg free
  2391  0131E4  82BC               	bsf	188,1,c	;volatile
  2392                           
  2393                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2394  0131E6  52E5               	movf	postdec1,f,c
  2395  0131E8  0012               	return		;funcret
  2396  0131EA                     __end_of_send_lcd_cmd:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function _SPI1_Exchange8bit *****************
  2400 ;; Defined at:
  2401 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  data            1  [STACK] unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1  [STACK] unsigned char 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 3F/39
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    6
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_send_lcd_cmd
  2426 ;;		_send_lcd_cmd_long
  2427 ;; This function uses a reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text5
  2431  0134C6                     __ptext5:
  2432                           	opt callstack 0
  2433  0134C6                     _SPI1_Exchange8bit:
  2434                           	opt callstack 22
  2435                           
  2436                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2437                           
  2438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2439                           ;incstack = 0
  2440  0134C6  0E01               	movlw	1
  2441  0134C8  013D               	movlb	61	; () banked
  2442  0134CA  6F12               	movwf	18,b	;volatile
  2443                           
  2444                           ; BSR set to: 61
  2445                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2446                           ;stkvar	_data @ sp[(0)+-1]
  2447  0134CC  0EFF               	movlw	-1
  2448  0134CE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  2449  0134D4                     l826:
  2450                           
  2451                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2452  0134D4  0139               	movlb	57	; () banked
  2453  0134D6  A9A2               	btfss	162,4,b	;volatile
  2454  0134D8  D7FD               	goto	l826
  2455                           
  2456                           ; BSR set to: 57
  2457                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2458  0134DA  006F F440  F039    	movff	15632,btemp	;volatile
  2459                           
  2460                           ; BSR set to: 57
  2461                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2462  0134E0  52E5               	movf	postdec1,f,c
  2463  0134E2  0012               	return		;funcret
  2464  0134E4                     __end_of_SPI1_Exchange8bit:
  2465                           	opt callstack 0
  2466                           
  2467 ;; *************** function _ringBufS_init *****************
  2468 ;; Defined at:
  2469 ;;		line 22 in file "ringbufs.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  _this           2  [STACK] PTR volatile struct ring
  2472 ;;		 -> ring_buf2(67), ring_buf1(67), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1  [STACK] void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    7
  2491 ;; This function calls:
  2492 ;;		_memset
  2493 ;; This function is called by:
  2494 ;;		_init_display
  2495 ;; This function uses a reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text6
  2499  0131EA                     __ptext6:
  2500                           	opt callstack 0
  2501  0131EA                     _ringBufS_init:
  2502                           	opt callstack 22
  2503                           
  2504                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  2505                           
  2506                           ; BSR set to: 57
  2507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2508                           ;incstack = 0
  2509  0131EA  0E43               	movlw	67
  2510  0131EC  6EE6               	movwf	postinc1,c
  2511  0131EE  0E00               	movlw	0
  2512  0131F0  6EE6               	movwf	postinc1,c
  2513  0131F2  0E00               	movlw	0
  2514  0131F4  6EE6               	movwf	postinc1,c
  2515  0131F6  0E00               	movlw	0
  2516  0131F8  6EE6               	movwf	postinc1,c
  2517                           
  2518                           ;stkvar	__this @ sp[(-4)+-2]
  2519  0131FA  0EFA               	movlw	-6
  2520  0131FC  006F FF8F FFE6     	movff	plusw1,postinc1
  2521  013202  006F FF8F FFE6     	movff	plusw1,postinc1
  2522  013208  EC05  F088         	call	_memset	;wreg free
  2523                           
  2524                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  2525  01320C  52E5               	movf	postdec1,f,c
  2526  01320E  52E5               	movf	postdec1,f,c
  2527  013210  0012               	return		;funcret
  2528  013212                     __end_of_ringBufS_init:
  2529                           	opt callstack 0
  2530                           
  2531 ;; *************** function _eaDogM_WriteCommand *****************
  2532 ;; Defined at:
  2533 ;;		line 160 in file "eadog.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  cmd             1  [STACK] const unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1  [STACK] void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2542 ;; Tracked objects:
  2543 ;;		On entry : 3F/3D
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:   16
  2554 ;; This function calls:
  2555 ;;		_send_lcd_cmd_dma
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text7
  2562  013684                     __ptext7:
  2563                           	opt callstack 0
  2564  013684                     _eaDogM_WriteCommand:
  2565                           	opt callstack 14
  2566                           
  2567                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  2568                           ;stkvar	_cmd @ sp[(0)+-1]
  2569                           
  2570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2571                           ;incstack = 0
  2572  013684  0EFF               	movlw	-1
  2573  013686  50E3               	movf	plusw1,w,c
  2574  013688  6EE6               	movwf	postinc1,c
  2575  01368A  EC4E  F096         	call	_send_lcd_cmd_dma	;wreg free
  2576                           
  2577                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  2578  01368E  52E5               	movf	postdec1,f,c
  2579  013690  0012               	return		;funcret
  2580  013692                     __end_of_eaDogM_WriteCommand:
  2581                           	opt callstack 0
  2582                           
  2583 ;; *************** function _check_help *****************
  2584 ;; Defined at:
  2585 ;;		line 40 in file "mconfig.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  flipper         1  [STACK] _Bool 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1  [STACK] void 
  2592 ;; Registers used:
  2593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2594 ;; Tracked objects:
  2595 ;;		On entry : 3F/1
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:   18
  2606 ;; This function calls:
  2607 ;;		_StartTimer
  2608 ;;		_TimerDone
  2609 ;;		_display_help
  2610 ;;		_display_info
  2611 ;;		_get_vterm_ptr
  2612 ;;		_help_button
  2613 ;;		_mode_lamp_bright
  2614 ;;		_mode_lamp_dim
  2615 ;;		_set_display_info
  2616 ;;		_set_temp_display_help
  2617 ;;		_set_vterm
  2618 ;;		_sprintf
  2619 ;;		_update_lcd
  2620 ;;		_vterm_dump
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text8
  2627  011A74                     __ptext8:
  2628                           	opt callstack 0
  2629  011A74                     _check_help:
  2630                           	opt callstack 12
  2631                           
  2632                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  2633                           
  2634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2635                           ;incstack = 0
  2636  011A74  ECAA  F097         	call	_help_button	;wreg free
  2637  011A78  5039               	movf	btemp^0,w,c
  2638  011A7A  B4D8               	btfsc	status,2,c
  2639  011A7C  D0D0               	goto	l6078
  2640  011A7E  EC75  F09B         	call	_display_info	;wreg free
  2641  011A82  0439               	decf	btemp^0,w,c
  2642  011A84  B4D8               	btfsc	status,2,c
  2643  011A86  D0CB               	goto	l6078
  2644                           
  2645                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  2646  011A88  0EDC               	movlw	220
  2647  011A8A  6EE6               	movwf	postinc1,c
  2648  011A8C  0E05               	movlw	5
  2649  011A8E  6EE6               	movwf	postinc1,c
  2650  011A90  0E0C               	movlw	12
  2651  011A92  6EE6               	movwf	postinc1,c
  2652  011A94  EC8C  F097         	call	_StartTimer	;wreg free
  2653                           
  2654                           ;mconfig.c: 47:   if (V.debug)
  2655  011A98  0101               	movlb	1	; () banked
  2656  011A9A  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;mconfig.c: 48:    vterm_dump();
  2660  011A9C  EC43  F08E         	call	_vterm_dump	;wreg free
  2661                           
  2662                           ;mconfig.c: 50:   set_vterm(1);
  2663  011AA0  0E01               	movlw	1
  2664  011AA2  6EE6               	movwf	postinc1,c
  2665  011AA4  ECAD  F09A         	call	_set_vterm	;wreg free
  2666                           
  2667                           ; BSR set to: 3
  2668                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  2669  011AA8  EC75  F09B         	call	_display_info	;wreg free
  2670  011AAC  5039               	movf	btemp^0,w,c
  2671  011AAE  6EE6               	movwf	postinc1,c
  2672  011AB0  EC32  F09B         	call	_set_temp_display_help	;wreg free
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  2676  011AB4  0E01               	movlw	1
  2677  011AB6  6EE6               	movwf	postinc1,c
  2678  011AB8  EC72  F09A         	call	_set_display_info	;wreg free
  2679                           
  2680                           ;mconfig.c: 53:   if (flipper) {
  2681                           ;stkvar	_flipper @ sp[(0)+-1]
  2682  011ABC  0EFF               	movlw	-1
  2683  011ABE  50E3               	movf	plusw1,w,c
  2684  011AC0  B4D8               	btfsc	status,2,c
  2685  011AC2  D019               	goto	l6066
  2686                           
  2687                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  2688  011AC4  0ED5               	movlw	low STR_13
  2689  011AC6  6EE6               	movwf	postinc1,c
  2690  011AC8  0EFF               	movlw	high STR_13
  2691  011ACA  6EE6               	movwf	postinc1,c
  2692  011ACC  0E4D               	movlw	low STR_15
  2693  011ACE  6EE6               	movwf	postinc1,c
  2694  011AD0  0EFF               	movlw	high STR_15
  2695  011AD2  6EE6               	movwf	postinc1,c
  2696  011AD4  0E01               	movlw	1
  2697  011AD6  6EE6               	movwf	postinc1,c
  2698  011AD8  0E00               	movlw	0
  2699  011ADA  6EE6               	movwf	postinc1,c
  2700  011ADC  EC60  F098         	call	_get_vterm_ptr	;wreg free
  2701  011AE0  0060  F0E7  FFE6   	movff	btemp,postinc1
  2702  011AE6  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  2703  011AEC  0E06               	movlw	6
  2704  011AEE  6EE6               	movwf	postinc1,c
  2705  011AF0  ECF3  F08F         	call	_sprintf	;wreg free
  2706                           
  2707                           ;mconfig.c: 55:   } else {
  2708  011AF4  D018               	goto	l1540
  2709  011AF6                     l6066:
  2710                           
  2711                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  2712  011AF6  0EEB               	movlw	low STR_14
  2713  011AF8  6EE6               	movwf	postinc1,c
  2714  011AFA  0EFF               	movlw	high STR_14
  2715  011AFC  6EE6               	movwf	postinc1,c
  2716  011AFE  0E4D               	movlw	low STR_15
  2717  011B00  6EE6               	movwf	postinc1,c
  2718  011B02  0EFF               	movlw	high STR_15
  2719  011B04  6EE6               	movwf	postinc1,c
  2720  011B06  0E01               	movlw	1
  2721  011B08  6EE6               	movwf	postinc1,c
  2722  011B0A  0E00               	movlw	0
  2723  011B0C  6EE6               	movwf	postinc1,c
  2724  011B0E  EC60  F098         	call	_get_vterm_ptr	;wreg free
  2725  011B12  0060  F0E7  FFE6   	movff	btemp,postinc1
  2726  011B18  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  2727  011B1E  0E06               	movlw	6
  2728  011B20  6EE6               	movwf	postinc1,c
  2729  011B22  ECF3  F08F         	call	_sprintf	;wreg free
  2730  011B26                     l1540:
  2731                           
  2732                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  2733  011B26  0101               	movlb	1	; () banked
  2734  011B28  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  2735  011B2A  32E8               	rrcf	wreg,f,c
  2736  011B2C  32E8               	rrcf	wreg,f,c
  2737  011B2E  0B03               	andlw	3
  2738  011B30  0D24               	mullw	36
  2739  011B32  0E12               	movlw	18
  2740  011B34  26F3               	addwf	243,f,c
  2741  011B36  0E00               	movlw	0
  2742  011B38  22F4               	addwfc	244,f,c
  2743  011B3A  0E75               	movlw	low _T
  2744  011B3C  6E43               	movwf	(btemp+10)^0,c
  2745  011B3E  0EFE               	movlw	high _T
  2746  011B40  6E44               	movwf	(btemp+11)^0,c
  2747  011B42  50F3               	movf	243,w,c
  2748  011B44  2643               	addwf	(btemp+10)^0,f,c
  2749  011B46  50F4               	movf	244,w,c
  2750  011B48  2244               	addwfc	(btemp+11)^0,f,c
  2751  011B4A  0060  F10F  FFE6   	movff	btemp+10,postinc1
  2752  011B50  0060  F113  FFE6   	movff	btemp+11,postinc1
  2753  011B56  0EE1               	movlw	low STR_17
  2754  011B58  6EE6               	movwf	postinc1,c
  2755  011B5A  0EFF               	movlw	high STR_17
  2756  011B5C  6EE6               	movwf	postinc1,c
  2757  011B5E  0E01               	movlw	1
  2758  011B60  6EE6               	movwf	postinc1,c
  2759  011B62  0E01               	movlw	1
  2760  011B64  6EE6               	movwf	postinc1,c
  2761  011B66  EC60  F098         	call	_get_vterm_ptr	;wreg free
  2762  011B6A  0060  F0E7  FFE6   	movff	btemp,postinc1
  2763  011B70  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  2764  011B76  0E06               	movlw	6
  2765  011B78  6EE6               	movwf	postinc1,c
  2766  011B7A  ECF3  F08F         	call	_sprintf	;wreg free
  2767                           
  2768                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  2769  011B7E  0101               	movlb	1	; () banked
  2770  011B80  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  2771  011B82  32E8               	rrcf	wreg,f,c
  2772  011B84  32E8               	rrcf	wreg,f,c
  2773  011B86  0B03               	andlw	3
  2774  011B88  0D24               	mullw	36
  2775  011B8A  0E75               	movlw	low _T
  2776  011B8C  6E43               	movwf	(btemp+10)^0,c
  2777  011B8E  0EFE               	movlw	high _T
  2778  011B90  6E44               	movwf	(btemp+11)^0,c
  2779  011B92  50F3               	movf	243,w,c
  2780  011B94  2643               	addwf	(btemp+10)^0,f,c
  2781  011B96  50F4               	movf	244,w,c
  2782  011B98  2244               	addwfc	(btemp+11)^0,f,c
  2783  011B9A  0060  F10F  FFE6   	movff	btemp+10,postinc1
  2784  011BA0  0060  F113  FFE6   	movff	btemp+11,postinc1
  2785  011BA6  0EE1               	movlw	low STR_17
  2786  011BA8  6EE6               	movwf	postinc1,c
  2787  011BAA  0EFF               	movlw	high STR_17
  2788  011BAC  6EE6               	movwf	postinc1,c
  2789  011BAE  0E01               	movlw	1
  2790  011BB0  6EE6               	movwf	postinc1,c
  2791  011BB2  0E02               	movlw	2
  2792  011BB4  6EE6               	movwf	postinc1,c
  2793  011BB6  EC60  F098         	call	_get_vterm_ptr	;wreg free
  2794  011BBA  0060  F0E7  FFE6   	movff	btemp,postinc1
  2795  011BC0  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  2796  011BC6  0E06               	movlw	6
  2797  011BC8  6EE6               	movwf	postinc1,c
  2798  011BCA  ECF3  F08F         	call	_sprintf	;wreg free
  2799                           
  2800                           ;mconfig.c: 60:   V.help_id++;
  2801  011BCE  EE20  F1A9         	lfsr	2,_V+169	;volatile
  2802  011BD2  30DF               	rrcf	223,w,c
  2803  011BD4  6E44               	movwf	(btemp+11)^0,c
  2804  011BD6  3244               	rrcf	(btemp+11)^0,f,c
  2805  011BD8  3044               	rrcf	(btemp+11)^0,w,c
  2806  011BDA  0B03               	andlw	3
  2807  011BDC  6E44               	movwf	(btemp+11)^0,c
  2808  011BDE  2A44               	incf	(btemp+11)^0,f,c
  2809  011BE0  3644               	rlcf	(btemp+11)^0,f,c
  2810  011BE2  3644               	rlcf	(btemp+11)^0,f,c
  2811  011BE4  3644               	rlcf	(btemp+11)^0,f,c
  2812  011BE6  50DF               	movf	223,w,c
  2813  011BE8  1844               	xorwf	(btemp+11)^0,w,c
  2814  011BEA  0BE7               	andlw	-25
  2815  011BEC  1844               	xorwf	(btemp+11)^0,w,c
  2816  011BEE  6EDF               	movwf	223,c
  2817                           
  2818                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  2819  011BF0  0EB8               	movlw	184
  2820  011BF2  6EE6               	movwf	postinc1,c
  2821  011BF4  0E0B               	movlw	11
  2822  011BF6  6EE6               	movwf	postinc1,c
  2823  011BF8  0E09               	movlw	9
  2824  011BFA  6EE6               	movwf	postinc1,c
  2825  011BFC  EC8C  F097         	call	_StartTimer	;wreg free
  2826                           
  2827                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  2828  011C00  0EB8               	movlw	184
  2829  011C02  6EE6               	movwf	postinc1,c
  2830  011C04  0E0B               	movlw	11
  2831  011C06  6EE6               	movwf	postinc1,c
  2832  011C08  0E07               	movlw	7
  2833  011C0A  6EE6               	movwf	postinc1,c
  2834  011C0C  EC8C  F097         	call	_StartTimer	;wreg free
  2835                           
  2836                           ;mconfig.c: 63:   mode_lamp_bright();
  2837  011C10  EC49  F09B         	call	_mode_lamp_bright	;wreg free
  2838                           
  2839                           ;mconfig.c: 64:   update_lcd(1);
  2840  011C14  0E01               	movlw	1
  2841  011C16  6EE6               	movwf	postinc1,c
  2842  011C18  EC6C  F08F         	call	_update_lcd	;wreg free
  2843                           
  2844                           ;mconfig.c: 65:  } else {
  2845  011C1C  D032               	goto	l1544
  2846  011C1E                     l6078:
  2847                           
  2848                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  2849  011C1E  0E09               	movlw	9
  2850  011C20  6EE6               	movwf	postinc1,c
  2851  011C22  EC0D  F09A         	call	_TimerDone	;wreg free
  2852  011C26  5039               	movf	btemp^0,w,c
  2853  011C28  B4D8               	btfsc	status,2,c
  2854  011C2A  D02B               	goto	l1544
  2855                           
  2856                           ;mconfig.c: 67:    set_vterm(0);
  2857  011C2C  0E00               	movlw	0
  2858  011C2E  6EE6               	movwf	postinc1,c
  2859  011C30  ECAD  F09A         	call	_set_vterm	;wreg free
  2860                           
  2861                           ; BSR set to: 3
  2862                           ;mconfig.c: 68:    V.help = 0;
  2863  011C34  0101               	movlb	1	; () banked
  2864  011C36  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  2865                           
  2866                           ; BSR set to: 1
  2867                           ;mconfig.c: 69:    set_display_info(display_help());
  2868  011C38  EC79  F09B         	call	_display_help	;wreg free
  2869  011C3C  5039               	movf	btemp^0,w,c
  2870  011C3E  6EE6               	movwf	postinc1,c
  2871  011C40  EC72  F09A         	call	_set_display_info	;wreg free
  2872                           
  2873                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  2874  011C44  0060  F67F  FFE6   	movff	_V+159,postinc1
  2875  011C4A  0060  F683  FFE6   	movff	_V+160,postinc1
  2876  011C50  ECEF  F09A         	call	_mode_lamp_dim	;wreg free
  2877                           
  2878                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  2879  011C54  0E0C               	movlw	12
  2880  011C56  6EE6               	movwf	postinc1,c
  2881  011C58  EC0D  F09A         	call	_TimerDone	;wreg free
  2882  011C5C  5039               	movf	btemp^0,w,c
  2883  011C5E  B4D8               	btfsc	status,2,c
  2884  011C60  D010               	goto	l1544
  2885                           
  2886                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  2887  011C62  0101               	movlb	1	; () banked
  2888  011C64  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  2889  011C66  A4D8               	btfss	status,2,c
  2890  011C68  D002               	goto	u4090
  2891  011C6A  0E01               	movlw	1
  2892  011C6C  D001               	goto	u4100
  2893  011C6E                     u4090:
  2894  011C6E  0E00               	movlw	0
  2895  011C70                     u4100:
  2896  011C70  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  2897                           
  2898                           ; BSR set to: 1
  2899                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  2900  011C72  0EDC               	movlw	220
  2901  011C74  6EE6               	movwf	postinc1,c
  2902  011C76  0E05               	movlw	5
  2903  011C78  6EE6               	movwf	postinc1,c
  2904  011C7A  0E0C               	movlw	12
  2905  011C7C  6EE6               	movwf	postinc1,c
  2906  011C7E  EC8C  F097         	call	_StartTimer	;wreg free
  2907  011C82                     l1544:
  2908                           
  2909                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2910  011C82  52E5               	movf	postdec1,f,c
  2911  011C84  0012               	return		;funcret
  2912  011C86                     __end_of_check_help:
  2913                           	opt callstack 0
  2914                           
  2915 ;; *************** function _vterm_dump *****************
  2916 ;; Defined at:
  2917 ;;		line 118 in file "mconfig.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1  [STACK] void 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2926 ;; Tracked objects:
  2927 ;;		On entry : 3F/1
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:   17
  2938 ;; This function calls:
  2939 ;;		_WaitMs
  2940 ;;		_eaDogM_WriteStringAtPos
  2941 ;;		_get_vterm_ptr
  2942 ;;		_sprintf
  2943 ;;		_wait_lcd_done
  2944 ;; This function is called by:
  2945 ;;		_check_help
  2946 ;; This function uses a reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text9
  2950  011C86                     __ptext9:
  2951                           	opt callstack 0
  2952  011C86                     _vterm_dump:
  2953                           	opt callstack 12
  2954                           
  2955                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  2956                           
  2957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2958                           ;incstack = 0
  2959  011C86  0E01               	movlw	1
  2960  011C88  6EE6               	movwf	postinc1,c
  2961  011C8A  0E00               	movlw	0
  2962  011C8C  6EE6               	movwf	postinc1,c
  2963  011C8E  EC60  F098         	call	_get_vterm_ptr	;wreg free
  2964  011C92  0060  F0E7  FFE6   	movff	btemp,postinc1
  2965  011C98  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  2966  011C9E  0E00               	movlw	0
  2967  011CA0  6EE6               	movwf	postinc1,c
  2968  011CA2  0E00               	movlw	0
  2969  011CA4  6EE6               	movwf	postinc1,c
  2970  011CA6  EC60  F098         	call	_get_vterm_ptr	;wreg free
  2971  011CAA  0060  F0E7  FFE6   	movff	btemp,postinc1
  2972  011CB0  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  2973  011CB6  0EB7               	movlw	low STR_19
  2974  011CB8  6EE6               	movwf	postinc1,c
  2975  011CBA  0EFF               	movlw	high STR_19
  2976  011CBC  6EE6               	movwf	postinc1,c
  2977  011CBE  0E01               	movlw	low (_V+1)
  2978  011CC0  6EE6               	movwf	postinc1,c
  2979  011CC2  0E01               	movlw	high (_V+1)
  2980  011CC4  6EE6               	movwf	postinc1,c
  2981  011CC6  0E08               	movlw	8
  2982  011CC8  6EE6               	movwf	postinc1,c
  2983  011CCA  ECF3  F08F         	call	_sprintf	;wreg free
  2984                           
  2985                           ;mconfig.c: 121:  wait_lcd_done();
  2986  011CCE  EC9F  F09A         	call	_wait_lcd_done	;wreg free
  2987                           
  2988                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  2989  011CD2  0E01               	movlw	low (_V+1)
  2990  011CD4  6EE6               	movwf	postinc1,c
  2991  011CD6  0E01               	movlw	high (_V+1)
  2992  011CD8  6EE6               	movwf	postinc1,c
  2993  011CDA  0E00               	movlw	0
  2994  011CDC  6EE6               	movwf	postinc1,c
  2995  011CDE  0E00               	movlw	0
  2996  011CE0  6EE6               	movwf	postinc1,c
  2997  011CE2  ECE1  F097         	call	_eaDogM_WriteStringAtPos	;wreg free
  2998                           
  2999                           ; BSR set to: 59
  3000                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  3001  011CE6  0E01               	movlw	1
  3002  011CE8  6EE6               	movwf	postinc1,c
  3003  011CEA  0E01               	movlw	1
  3004  011CEC  6EE6               	movwf	postinc1,c
  3005  011CEE  EC60  F098         	call	_get_vterm_ptr	;wreg free
  3006  011CF2  0060  F0E7  FFE6   	movff	btemp,postinc1
  3007  011CF8  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3008  011CFE  0E00               	movlw	0
  3009  011D00  6EE6               	movwf	postinc1,c
  3010  011D02  0E01               	movlw	1
  3011  011D04  6EE6               	movwf	postinc1,c
  3012  011D06  EC60  F098         	call	_get_vterm_ptr	;wreg free
  3013  011D0A  0060  F0E7  FFE6   	movff	btemp,postinc1
  3014  011D10  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3015  011D16  0EB7               	movlw	low STR_19
  3016  011D18  6EE6               	movwf	postinc1,c
  3017  011D1A  0EFF               	movlw	high STR_19
  3018  011D1C  6EE6               	movwf	postinc1,c
  3019  011D1E  0E01               	movlw	low (_V+1)
  3020  011D20  6EE6               	movwf	postinc1,c
  3021  011D22  0E01               	movlw	high (_V+1)
  3022  011D24  6EE6               	movwf	postinc1,c
  3023  011D26  0E08               	movlw	8
  3024  011D28  6EE6               	movwf	postinc1,c
  3025  011D2A  ECF3  F08F         	call	_sprintf	;wreg free
  3026                           
  3027                           ;mconfig.c: 124:  wait_lcd_done();
  3028  011D2E  EC9F  F09A         	call	_wait_lcd_done	;wreg free
  3029                           
  3030                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  3031  011D32  0E01               	movlw	low (_V+1)
  3032  011D34  6EE6               	movwf	postinc1,c
  3033  011D36  0E01               	movlw	high (_V+1)
  3034  011D38  6EE6               	movwf	postinc1,c
  3035  011D3A  0E00               	movlw	0
  3036  011D3C  6EE6               	movwf	postinc1,c
  3037  011D3E  0E01               	movlw	1
  3038  011D40  6EE6               	movwf	postinc1,c
  3039  011D42  ECE1  F097         	call	_eaDogM_WriteStringAtPos	;wreg free
  3040                           
  3041                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  3042  011D46  0E01               	movlw	1
  3043  011D48  6EE6               	movwf	postinc1,c
  3044  011D4A  0E02               	movlw	2
  3045  011D4C  6EE6               	movwf	postinc1,c
  3046  011D4E  EC60  F098         	call	_get_vterm_ptr	;wreg free
  3047  011D52  0060  F0E7  FFE6   	movff	btemp,postinc1
  3048  011D58  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3049  011D5E  0E00               	movlw	0
  3050  011D60  6EE6               	movwf	postinc1,c
  3051  011D62  0E02               	movlw	2
  3052  011D64  6EE6               	movwf	postinc1,c
  3053  011D66  EC60  F098         	call	_get_vterm_ptr	;wreg free
  3054  011D6A  0060  F0E7  FFE6   	movff	btemp,postinc1
  3055  011D70  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3056  011D76  0EB7               	movlw	low STR_19
  3057  011D78  6EE6               	movwf	postinc1,c
  3058  011D7A  0EFF               	movlw	high STR_19
  3059  011D7C  6EE6               	movwf	postinc1,c
  3060  011D7E  0E01               	movlw	low (_V+1)
  3061  011D80  6EE6               	movwf	postinc1,c
  3062  011D82  0E01               	movlw	high (_V+1)
  3063  011D84  6EE6               	movwf	postinc1,c
  3064  011D86  0E08               	movlw	8
  3065  011D88  6EE6               	movwf	postinc1,c
  3066  011D8A  ECF3  F08F         	call	_sprintf	;wreg free
  3067                           
  3068                           ;mconfig.c: 127:  wait_lcd_done();
  3069  011D8E  EC9F  F09A         	call	_wait_lcd_done	;wreg free
  3070                           
  3071                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  3072  011D92  0E01               	movlw	low (_V+1)
  3073  011D94  6EE6               	movwf	postinc1,c
  3074  011D96  0E01               	movlw	high (_V+1)
  3075  011D98  6EE6               	movwf	postinc1,c
  3076  011D9A  0E00               	movlw	0
  3077  011D9C  6EE6               	movwf	postinc1,c
  3078  011D9E  0E02               	movlw	2
  3079  011DA0  6EE6               	movwf	postinc1,c
  3080  011DA2  ECE1  F097         	call	_eaDogM_WriteStringAtPos	;wreg free
  3081                           
  3082                           ; BSR set to: 59
  3083                           ;mconfig.c: 129:  WaitMs(3000);
  3084  011DA6  0EB8               	movlw	184
  3085  011DA8  6EE6               	movwf	postinc1,c
  3086  011DAA  0E0B               	movlw	11
  3087  011DAC  6EE6               	movwf	postinc1,c
  3088  011DAE  ECC6  F097         	call	_WaitMs	;wreg free
  3089                           
  3090                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3091  011DB2  0012               	return		;funcret
  3092  011DB4                     __end_of_vterm_dump:
  3093                           	opt callstack 0
  3094                           
  3095 ;; *************** function _sprintf *****************
  3096 ;; Defined at:
  3097 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  s               2  [STACK] PTR unsigned char 
  3100 ;;		 -> D.lcd(216), D(218), V(189), 
  3101 ;;  fmt             2  [STACK] PTR const unsigned char 
  3102 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  3103 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  3104 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  3105 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  3106 ;;		 -> STR_9(29), STR_8(17), STR_6(15), STR_5(17), 
  3107 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  f               6  [STACK] struct _IO_FILE
  3110 ;;  ap              2  [STACK] PTR void [1]
  3111 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3112 ;;  ret             2    0        int 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2  [STACK] int 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/3
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:   14
  3129 ;; This function calls:
  3130 ;;		_vfprintf
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;;		_check_help
  3134 ;;		_vterm_dump
  3135 ;; This function uses a reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text10
  3139  011FE6                     __ptext10:
  3140                           	opt callstack 0
  3141  011FE6                     _sprintf:
  3142                           	opt callstack 0
  3143                           
  3144                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3145  011FE6  0E08               	movlw	8
  3146  011FE8  26E1               	addwf	fsr1l,f,c
  3147  011FEA  0E00               	movlw	0
  3148  011FEC  22E2               	addwfc	fsr1h,f,c
  3149                           
  3150                           ;incstack = 0
  3151  011FEE  0EFE               	movlw	254
  3152  011FF0  6E43               	movwf	(btemp+10)^0,c
  3153  011FF2  0EFF               	movlw	255
  3154  011FF4  6E44               	movwf	(btemp+11)^0,c
  3155                           
  3156                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  3157  011FF6  0EF5               	movlw	245
  3158  011FF8  24E1               	addwf	fsr1l,w,c
  3159  011FFA  6E41               	movwf	(btemp+8)^0,c
  3160  011FFC  0EFF               	movlw	255
  3161  011FFE  20E2               	addwfc	fsr1h,w,c
  3162  012000  6E42               	movwf	(btemp+9)^0,c
  3163  012002  5043               	movf	(btemp+10)^0,w,c
  3164  012004  2641               	addwf	(btemp+8)^0,f,c
  3165  012006  5044               	movf	(btemp+11)^0,w,c
  3166  012008  2242               	addwfc	(btemp+9)^0,f,c
  3167                           
  3168                           ;stkvar	_ap @ sp[(-8)+6]
  3169  01200A  0EFF               	movlw	-1
  3170  01200C  0060  F10B  FFE3   	movff	btemp+9,plusw1
  3171  012012  0EFE               	movlw	-2
  3172  012014  0060  F107  FFE3   	movff	btemp+8,plusw1
  3173                           
  3174                           ;stkvar	_s @ sp[(-8)+-3]
  3175  01201A  0EF5               	movlw	-11
  3176  01201C  006F FF8C  F043    	movff	plusw1,btemp+10
  3177  012022  0EF6               	movlw	-10
  3178  012024  006F FF8C  F044    	movff	plusw1,btemp+11
  3179                           
  3180                           ;stkvar	_f @ sp[(-8)+0]
  3181  01202A  0EF9               	movlw	-7
  3182  01202C  0060  F113  FFE3   	movff	btemp+11,plusw1
  3183  012032  0EF8               	movlw	-8
  3184  012034  0060  F10F  FFE3   	movff	btemp+10,plusw1
  3185                           
  3186                           ;stkvar	_f @ sp[(-8)+0]
  3187  01203A  0EFA               	movlw	250
  3188  01203C  24E1               	addwf	fsr1l,w,c
  3189  01203E  6ED9               	movwf	fsr2l,c
  3190  012040  0EFF               	movlw	255
  3191  012042  20E2               	addwfc	fsr1h,w,c
  3192  012044  6EDA               	movwf	fsr2h,c
  3193  012046  0E00               	movlw	0
  3194  012048  6EDE               	movwf	postinc2,c
  3195  01204A  0E00               	movlw	0
  3196  01204C  6EDD               	movwf	postdec2,c
  3197                           
  3198                           ;stkvar	_f @ sp[(-8)+0]
  3199  01204E  0EFC               	movlw	252
  3200  012050  24E1               	addwf	fsr1l,w,c
  3201  012052  6ED9               	movwf	fsr2l,c
  3202  012054  0EFF               	movlw	255
  3203  012056  20E2               	addwfc	fsr1h,w,c
  3204  012058  6EDA               	movwf	fsr2h,c
  3205  01205A  0E00               	movlw	0
  3206  01205C  6EDE               	movwf	postinc2,c
  3207  01205E  0E00               	movlw	0
  3208  012060  6EDD               	movwf	postdec2,c
  3209                           
  3210                           ;stkvar	_ap @ sp[(-8)+6]
  3211  012062  0EFE               	movlw	254
  3212  012064  24E1               	addwf	fsr1l,w,c
  3213  012066  6E39               	movwf	btemp^0,c
  3214  012068  0EFF               	movlw	255
  3215  01206A  20E2               	addwfc	fsr1h,w,c
  3216  01206C  6E3A               	movwf	(btemp+1)^0,c
  3217  01206E  0060  F0E7  FFE6   	movff	btemp,postinc1
  3218  012074  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3219                           
  3220                           ;stkvar	_fmt @ sp[(-10)+-5]
  3221  01207A  0EF1               	movlw	-15
  3222  01207C  006F FF8F FFE6     	movff	plusw1,postinc1
  3223  012082  006F FF8F FFE6     	movff	plusw1,postinc1
  3224                           
  3225                           ;stkvar	_f @ sp[(-12)+0]
  3226  012088  0EF4               	movlw	244
  3227  01208A  24E1               	addwf	fsr1l,w,c
  3228  01208C  6E39               	movwf	btemp^0,c
  3229  01208E  0EFF               	movlw	255
  3230  012090  20E2               	addwfc	fsr1h,w,c
  3231  012092  6E3A               	movwf	(btemp+1)^0,c
  3232  012094  0060  F0E7  FFE6   	movff	btemp,postinc1
  3233  01209A  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3234  0120A0  ECD6  F092         	call	_vfprintf	;wreg free
  3235                           
  3236                           ;stkvar	_f @ sp[(-8)+0]
  3237  0120A4  0EFA               	movlw	250
  3238  0120A6  24E1               	addwf	fsr1l,w,c
  3239  0120A8  6ED9               	movwf	fsr2l,c
  3240  0120AA  0EFF               	movlw	255
  3241  0120AC  20E2               	addwfc	fsr1h,w,c
  3242  0120AE  6EDA               	movwf	fsr2h,c
  3243  0120B0  006F FF78  F043    	movff	postinc2,btemp+10
  3244  0120B6  006F FF74  F044    	movff	postdec2,btemp+11
  3245                           
  3246                           ;stkvar	_s @ sp[(-8)+-3]
  3247  0120BC  0EF5               	movlw	-11
  3248  0120BE  006F FF8C  F041    	movff	plusw1,btemp+8
  3249  0120C4  0EF6               	movlw	-10
  3250  0120C6  006F FF8C  F042    	movff	plusw1,btemp+9
  3251  0120CC  5043               	movf	(btemp+10)^0,w,c
  3252  0120CE  2441               	addwf	(btemp+8)^0,w,c
  3253  0120D0  6ED9               	movwf	fsr2l,c
  3254  0120D2  5044               	movf	(btemp+11)^0,w,c
  3255  0120D4  2042               	addwfc	(btemp+9)^0,w,c
  3256  0120D6  6EDA               	movwf	fsr2h,c
  3257  0120D8  0E00               	movlw	0
  3258  0120DA  6EDF               	movwf	indf2,c
  3259                           
  3260                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 4, vargsize = 0
  3261  0120DC  0EF8               	movlw	248
  3262  0120DE  26E1               	addwf	fsr1l,f,c
  3263  0120E0  0EFF               	movlw	255
  3264  0120E2  22E2               	addwfc	fsr1h,f,c
  3265  0120E4  52E5               	movf	postdec1,f,c
  3266  0120E6  50E7               	movf	indf1,w,c
  3267  0120E8  5EE1               	subwf	fsr1l,f,c
  3268  0120EA  0E00               	movlw	0
  3269  0120EC  5AE2               	subwfb	fsr1h,f,c
  3270  0120EE  0012               	return		;funcret
  3271  0120F0                     __end_of_sprintf:
  3272                           	opt callstack 0
  3273                           
  3274 ;; *************** function _get_vterm_ptr *****************
  3275 ;; Defined at:
  3276 ;;		line 113 in file "mconfig.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  line            1  [STACK] unsigned char 
  3279 ;;  vterm           1  [STACK] unsigned char 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  2  [STACK] PTR unsigned char 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/3
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    6
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;;		_check_help
  3303 ;;		_vterm_dump
  3304 ;; This function uses a reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text11
  3308  0130C0                     __ptext11:
  3309                           	opt callstack 0
  3310  0130C0                     _get_vterm_ptr:
  3311                           	opt callstack 24
  3312                           
  3313                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  3314                           ;stkvar	_vterm @ sp[(0)+-2]
  3315                           
  3316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3317                           ;incstack = 0
  3318  0130C0  0EFE               	movlw	-2
  3319  0130C2  50E3               	movf	plusw1,w,c
  3320  0130C4  0B03               	andlw	3
  3321  0130C6  0D36               	mullw	54
  3322  0130C8  0E00               	movlw	low _D
  3323  0130CA  6E39               	movwf	btemp^0,c
  3324  0130CC  0E03               	movlw	high _D
  3325  0130CE  6E3A               	movwf	(btemp+1)^0,c
  3326  0130D0  50F3               	movf	243,w,c
  3327  0130D2  2639               	addwf	btemp^0,f,c
  3328  0130D4  50F4               	movf	244,w,c
  3329  0130D6  223A               	addwfc	(btemp+1)^0,f,c
  3330                           
  3331                           ;stkvar	_line @ sp[(0)+-1]
  3332  0130D8  0EFF               	movlw	-1
  3333  0130DA  50E3               	movf	plusw1,w,c
  3334  0130DC  0B03               	andlw	3
  3335  0130DE  0D12               	mullw	18
  3336  0130E0  50F3               	movf	243,w,c
  3337  0130E2  2639               	addwf	btemp^0,f,c
  3338  0130E4  50F4               	movf	244,w,c
  3339  0130E6  223A               	addwfc	(btemp+1)^0,f,c
  3340                           
  3341                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3342  0130E8  52E5               	movf	postdec1,f,c
  3343  0130EA  52E5               	movf	postdec1,f,c
  3344  0130EC  0012               	return		;funcret
  3345  0130EE                     __end_of_get_vterm_ptr:
  3346                           	opt callstack 0
  3347                           
  3348 ;; *************** function _WaitMs *****************
  3349 ;; Defined at:
  3350 ;;		line 32 in file "timers.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  numMilliseco    2  [STACK] const unsigned short 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1  [STACK] void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3359 ;; Tracked objects:
  3360 ;;		On entry : 5/1
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    7
  3371 ;; This function calls:
  3372 ;;		_StartTimer
  3373 ;;		_TimerDone
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;;		_vterm_dump
  3377 ;; This function uses a reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text12
  3381  012F8C                     __ptext12:
  3382                           	opt callstack 0
  3383  012F8C                     _WaitMs:
  3384                           	opt callstack 21
  3385                           
  3386                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  3387                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  3388                           
  3389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3390                           ;incstack = 0
  3391  012F8C  0EFE               	movlw	-2
  3392  012F8E  006F FF8F FFE6     	movff	plusw1,postinc1
  3393  012F94  006F FF8F FFE6     	movff	plusw1,postinc1
  3394  012F9A  0E00               	movlw	0
  3395  012F9C  6EE6               	movwf	postinc1,c
  3396  012F9E  EC8C  F097         	call	_StartTimer	;wreg free
  3397                           
  3398                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  3399  012FA2  D005               	goto	l4652
  3400  012FA4                     l1470:
  3401                           
  3402                           ;timers.c: 36:   __nop();
  3403  012FA4  F000               	nop	
  3404                           
  3405                           ;timers.c: 37:   __nop();
  3406  012FA6  F000               	nop	
  3407                           
  3408                           ;timers.c: 38:   __nop();
  3409  012FA8  F000               	nop	
  3410                           
  3411                           ;timers.c: 39:   __nop();
  3412  012FAA  F000               	nop	
  3413  012FAC  0004               	clrwdt		;# 
  3414  012FAE                     l4652:
  3415                           
  3416                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  3417  012FAE  0E00               	movlw	0
  3418  012FB0  6EE6               	movwf	postinc1,c
  3419  012FB2  EC0D  F09A         	call	_TimerDone	;wreg free
  3420  012FB6  5039               	movf	btemp^0,w,c
  3421  012FB8  B4D8               	btfsc	status,2,c
  3422  012FBA  D7F4               	goto	l1470
  3423                           
  3424                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  3425  012FBC  52E5               	movf	postdec1,f,c
  3426  012FBE  52E5               	movf	postdec1,f,c
  3427  012FC0  0012               	return		;funcret
  3428  012FC2                     __end_of_WaitMs:
  3429                           	opt callstack 0
  3430                           
  3431 ;; *************** function _update_lcd *****************
  3432 ;; Defined at:
  3433 ;;		line 82 in file "mconfig.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  vterm           1  [STACK] unsigned char 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1  [STACK] unsigned char 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/3
  3444 ;;		On exit  : 7/3
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:   17
  3454 ;; This function calls:
  3455 ;;		_eaDogM_WriteStringAtPos
  3456 ;;		_wait_lcd_done
  3457 ;; This function is called by:
  3458 ;;		_main
  3459 ;;		_check_help
  3460 ;; This function uses a reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text13
  3464  011ED8                     __ptext13:
  3465                           	opt callstack 0
  3466  011ED8                     _update_lcd:
  3467                           	opt callstack 13
  3468                           
  3469                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  3470                           ;stkvar	_vterm @ sp[(0)+-1]
  3471                           
  3472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3473                           ;incstack = 0
  3474  011ED8  0EFF               	movlw	-1
  3475  011EDA  006F FF8C  F039    	movff	plusw1,btemp
  3476  011EE0  0E03               	movlw	3
  3477  011EE2  1639               	andwf	btemp^0,f,c
  3478  011EE4  0EFF               	movlw	-1
  3479  011EE6  0060  F0E7  FFE3   	movff	btemp,plusw1
  3480                           
  3481                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  3482  011EEC  0103               	movlb	3	; () banked
  3483  011EEE  A1D8               	btfss	(_D+216)& (0+255),0,b
  3484  011EF0  D004               	goto	l5950
  3485                           
  3486                           ; BSR set to: 3
  3487                           ;stkvar	_vterm @ sp[(0)+-1]
  3488  011EF2  0EFF               	movlw	-1
  3489  011EF4  50E3               	movf	plusw1,w,c
  3490  011EF6  B4D8               	btfsc	status,2,c
  3491  011EF8  D074               	goto	l1548
  3492  011EFA                     l5950:
  3493                           
  3494                           ; BSR set to: 3
  3495                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  3496                           ;stkvar	_vterm @ sp[(0)+-1]
  3497  011EFA  0EFF               	movlw	-1
  3498  011EFC  50E3               	movf	plusw1,w,c
  3499  011EFE  0D36               	mullw	54
  3500  011F00  0E10               	movlw	low (_D+16)
  3501  011F02  24F3               	addwf	243,w,c
  3502  011F04  6ED9               	movwf	fsr2l,c
  3503  011F06  0E03               	movlw	high (_D+16)
  3504  011F08  20F4               	addwfc	prodh,w,c
  3505  011F0A  6EDA               	movwf	fsr2h,c
  3506  011F0C  0E00               	movlw	0
  3507  011F0E  6EDF               	movwf	indf2,c
  3508                           
  3509                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  3510                           ;stkvar	_vterm @ sp[(0)+-1]
  3511  011F10  0EFF               	movlw	-1
  3512  011F12  50E3               	movf	plusw1,w,c
  3513  011F14  0D36               	mullw	54
  3514  011F16  0E22               	movlw	low (_D+34)
  3515  011F18  24F3               	addwf	243,w,c
  3516  011F1A  6ED9               	movwf	fsr2l,c
  3517  011F1C  0E03               	movlw	high (_D+34)
  3518  011F1E  20F4               	addwfc	prodh,w,c
  3519  011F20  6EDA               	movwf	fsr2h,c
  3520  011F22  0E00               	movlw	0
  3521  011F24  6EDF               	movwf	indf2,c
  3522                           
  3523                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  3524                           ;stkvar	_vterm @ sp[(0)+-1]
  3525  011F26  0EFF               	movlw	-1
  3526  011F28  50E3               	movf	plusw1,w,c
  3527  011F2A  0D36               	mullw	54
  3528  011F2C  0E34               	movlw	low (_D+52)
  3529  011F2E  24F3               	addwf	243,w,c
  3530  011F30  6ED9               	movwf	fsr2l,c
  3531  011F32  0E03               	movlw	high (_D+52)
  3532  011F34  20F4               	addwfc	prodh,w,c
  3533  011F36  6EDA               	movwf	fsr2h,c
  3534  011F38  0E00               	movlw	0
  3535  011F3A  6EDF               	movwf	indf2,c
  3536                           
  3537                           ; BSR set to: 3
  3538                           ;mconfig.c: 92:  wait_lcd_done();
  3539  011F3C  EC9F  F09A         	call	_wait_lcd_done	;wreg free
  3540                           
  3541                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  3542                           ;stkvar	_vterm @ sp[(0)+-1]
  3543  011F40  0EFF               	movlw	-1
  3544  011F42  50E3               	movf	plusw1,w,c
  3545  011F44  0D36               	mullw	54
  3546  011F46  0E00               	movlw	low _D
  3547  011F48  6E43               	movwf	(btemp+10)^0,c
  3548  011F4A  0E03               	movlw	high _D
  3549  011F4C  6E44               	movwf	(btemp+11)^0,c
  3550  011F4E  50F3               	movf	243,w,c
  3551  011F50  2643               	addwf	(btemp+10)^0,f,c
  3552  011F52  50F4               	movf	244,w,c
  3553  011F54  2244               	addwfc	(btemp+11)^0,f,c
  3554  011F56  0060  F10F  FFE6   	movff	btemp+10,postinc1
  3555  011F5C  0060  F113  FFE6   	movff	btemp+11,postinc1
  3556  011F62  0E00               	movlw	0
  3557  011F64  6EE6               	movwf	postinc1,c
  3558  011F66  0E00               	movlw	0
  3559  011F68  6EE6               	movwf	postinc1,c
  3560  011F6A  ECE1  F097         	call	_eaDogM_WriteStringAtPos	;wreg free
  3561                           
  3562                           ; BSR set to: 59
  3563                           ;mconfig.c: 94:  wait_lcd_done();
  3564  011F6E  EC9F  F09A         	call	_wait_lcd_done	;wreg free
  3565                           
  3566                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  3567                           ;stkvar	_vterm @ sp[(0)+-1]
  3568  011F72  0EFF               	movlw	-1
  3569  011F74  50E3               	movf	plusw1,w,c
  3570  011F76  0D36               	mullw	54
  3571  011F78  0E00               	movlw	low _D
  3572  011F7A  6E43               	movwf	(btemp+10)^0,c
  3573  011F7C  0E03               	movlw	high _D
  3574  011F7E  6E44               	movwf	(btemp+11)^0,c
  3575  011F80  0E12               	movlw	18
  3576  011F82  2643               	addwf	(btemp+10)^0,f,c
  3577  011F84  0E00               	movlw	0
  3578  011F86  2244               	addwfc	(btemp+11)^0,f,c
  3579  011F88  50F3               	movf	243,w,c
  3580  011F8A  2643               	addwf	(btemp+10)^0,f,c
  3581  011F8C  50F4               	movf	244,w,c
  3582  011F8E  2244               	addwfc	(btemp+11)^0,f,c
  3583  011F90  0060  F10F  FFE6   	movff	btemp+10,postinc1
  3584  011F96  0060  F113  FFE6   	movff	btemp+11,postinc1
  3585  011F9C  0E00               	movlw	0
  3586  011F9E  6EE6               	movwf	postinc1,c
  3587  011FA0  0E01               	movlw	1
  3588  011FA2  6EE6               	movwf	postinc1,c
  3589  011FA4  ECE1  F097         	call	_eaDogM_WriteStringAtPos	;wreg free
  3590                           
  3591                           ; BSR set to: 59
  3592                           ;mconfig.c: 96:  wait_lcd_done();
  3593  011FA8  EC9F  F09A         	call	_wait_lcd_done	;wreg free
  3594                           
  3595                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  3596                           ;stkvar	_vterm @ sp[(0)+-1]
  3597  011FAC  0EFF               	movlw	-1
  3598  011FAE  50E3               	movf	plusw1,w,c
  3599  011FB0  0D36               	mullw	54
  3600  011FB2  0E00               	movlw	low _D
  3601  011FB4  6E43               	movwf	(btemp+10)^0,c
  3602  011FB6  0E03               	movlw	high _D
  3603  011FB8  6E44               	movwf	(btemp+11)^0,c
  3604  011FBA  0E24               	movlw	36
  3605  011FBC  2643               	addwf	(btemp+10)^0,f,c
  3606  011FBE  0E00               	movlw	0
  3607  011FC0  2244               	addwfc	(btemp+11)^0,f,c
  3608  011FC2  50F3               	movf	243,w,c
  3609  011FC4  2643               	addwf	(btemp+10)^0,f,c
  3610  011FC6  50F4               	movf	244,w,c
  3611  011FC8  2244               	addwfc	(btemp+11)^0,f,c
  3612  011FCA  0060  F10F  FFE6   	movff	btemp+10,postinc1
  3613  011FD0  0060  F113  FFE6   	movff	btemp+11,postinc1
  3614  011FD6  0E00               	movlw	0
  3615  011FD8  6EE6               	movwf	postinc1,c
  3616  011FDA  0E02               	movlw	2
  3617  011FDC  6EE6               	movwf	postinc1,c
  3618  011FDE  ECE1  F097         	call	_eaDogM_WriteStringAtPos	;wreg free
  3619  011FE2                     l1548:
  3620                           
  3621                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3622  011FE2  52E5               	movf	postdec1,f,c
  3623  011FE4  0012               	return		;funcret
  3624  011FE6                     __end_of_update_lcd:
  3625                           	opt callstack 0
  3626                           
  3627 ;; *************** function _eaDogM_WriteStringAtPos *****************
  3628 ;; Defined at:
  3629 ;;		line 252 in file "eadog.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  r               1  [STACK] const unsigned char 
  3632 ;;  c               1  [STACK] const unsigned char 
  3633 ;;  strPtr          2  [STACK] PTR unsigned char 
  3634 ;;		 -> D.lcd(216), D(218), V(189), 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1  [STACK] void 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/1
  3643 ;;		On exit  : 3F/3B
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:   16
  3653 ;; This function calls:
  3654 ;;		_eaDogM_WriteString
  3655 ;;		_send_lcd_cmd_dma
  3656 ;; This function is called by:
  3657 ;;		_update_lcd
  3658 ;;		_vterm_dump
  3659 ;; This function uses a reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text14
  3663  012FC2                     __ptext14:
  3664                           	opt callstack 0
  3665  012FC2                     _eaDogM_WriteStringAtPos:
  3666                           	opt callstack 13
  3667                           
  3668                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  3669                           ;stkvar	_c @ sp[(0)+-2]
  3670                           
  3671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3672                           ;incstack = 0
  3673  012FC2  0EFE               	movlw	-2
  3674  012FC4  006F FF8C  F044    	movff	plusw1,btemp+11
  3675                           
  3676                           ;stkvar	_r @ sp[(0)+-1]
  3677  012FCA  0EFF               	movlw	-1
  3678  012FCC  50E3               	movf	plusw1,w,c
  3679  012FCE  0D10               	mullw	16
  3680  012FD0  50F3               	movf	243,w,c
  3681  012FD2  2444               	addwf	(btemp+11)^0,w,c
  3682  012FD4  0F80               	addlw	128
  3683  012FD6  6EE6               	movwf	postinc1,c
  3684  012FD8  EC4E  F096         	call	_send_lcd_cmd_dma	;wreg free
  3685                           
  3686                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  3687                           ;stkvar	_strPtr @ sp[(0)+-4]
  3688  012FDC  0EFC               	movlw	-4
  3689  012FDE  006F FF8F FFE6     	movff	plusw1,postinc1
  3690  012FE4  006F FF8F FFE6     	movff	plusw1,postinc1
  3691  012FEA  EC82  F092         	call	_eaDogM_WriteString	;wreg free
  3692                           
  3693                           ; BSR set to: 59
  3694                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  3695  012FEE  52E5               	movf	postdec1,f,c
  3696  012FF0  52E5               	movf	postdec1,f,c
  3697  012FF2  52E5               	movf	postdec1,f,c
  3698  012FF4  52E5               	movf	postdec1,f,c
  3699  012FF6  0012               	return		;funcret
  3700  012FF8                     __end_of_eaDogM_WriteStringAtPos:
  3701                           	opt callstack 0
  3702                           
  3703 ;; *************** function _send_lcd_cmd_dma *****************
  3704 ;; Defined at:
  3705 ;;		line 205 in file "eadog.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  strPtr          1  [STACK] unsigned char 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1  [STACK] void 
  3712 ;; Registers used:
  3713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/3D
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:   15
  3726 ;; This function calls:
  3727 ;;		_printf
  3728 ;;		_ringBufS_flush
  3729 ;;		_start_lcd
  3730 ;;		_wait_lcd_done
  3731 ;;		_wait_lcd_set
  3732 ;; This function is called by:
  3733 ;;		_eaDogM_WriteCommand
  3734 ;;		_eaDogM_WriteStringAtPos
  3735 ;; This function uses a reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text15
  3739  012C9C                     __ptext15:
  3740                           	opt callstack 0
  3741  012C9C                     _send_lcd_cmd_dma:
  3742                           	opt callstack 13
  3743                           
  3744                           ; BSR set to: 59
  3745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3746                           ;incstack = 0
  3747                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 207:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
  3748  012C9C  84BE               	bsf	190,2,c	;volatile
  3749                           
  3750                           ;eadog.c: 208:  wait_lcd_set();
  3751  012C9E  EC81  F09B         	call	_wait_lcd_set	;wreg free
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  3755  012CA2  0E00               	movlw	0
  3756  012CA4  6EE6               	movwf	postinc1,c
  3757  012CA6  0060  F203  FFE6   	movff	_spi_link+6,postinc1
  3758  012CAC  0060  F207  FFE6   	movff	_spi_link+7,postinc1
  3759  012CB2  EC7B  F093         	call	_ringBufS_flush	;wreg free
  3760  012CB6  92BC               	bcf	188,1,c	;volatile
  3761  012CB8  94BC               	bcf	188,2,c	;volatile
  3762                           
  3763                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  3764  012CBA  013B               	movlb	59	; () banked
  3765  012CBC  9FFC               	bcf	252,7,b	;volatile
  3766                           
  3767                           ; BSR set to: 59
  3768                           ;eadog.c: 214:  DMA1SSZ = 1;
  3769  012CBE  0E00               	movlw	0
  3770  012CC0  6FF8               	movwf	248,b	;volatile
  3771  012CC2  0E01               	movlw	1
  3772  012CC4  6FF7               	movwf	247,b	;volatile
  3773                           
  3774                           ; BSR set to: 59
  3775                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  3776  012CC6  8FFC               	bsf	252,7,b	;volatile
  3777                           
  3778                           ; BSR set to: 59
  3779                           ;eadog.c: 216:  printf("%c", strPtr);
  3780                           ;stkvar	_strPtr @ sp[(0)+-1]
  3781  012CC8  0EFF               	movlw	-1
  3782  012CCA  50E3               	movf	plusw1,w,c
  3783  012CCC  6EE6               	movwf	postinc1,c
  3784  012CCE  0E00               	movlw	0
  3785  012CD0  6EE6               	movwf	postinc1,c
  3786  012CD2  0EF8               	movlw	low STR_11
  3787  012CD4  6EE6               	movwf	postinc1,c
  3788  012CD6  0EFF               	movlw	high STR_11
  3789  012CD8  6EE6               	movwf	postinc1,c
  3790  012CDA  0E04               	movlw	4
  3791  012CDC  6EE6               	movwf	postinc1,c
  3792  012CDE  EC68  F095         	call	_printf	;wreg free
  3793                           
  3794                           ;eadog.c: 217:  start_lcd();
  3795  012CE2  EC84  F09B         	call	_start_lcd	;wreg free
  3796                           
  3797                           ; BSR set to: 59
  3798                           ;eadog.c: 218:  wait_lcd_done();
  3799  012CE6  EC9F  F09A         	call	_wait_lcd_done	;wreg free
  3800  012CEA  82BC               	bsf	188,1,c	;volatile
  3801                           
  3802                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3803  012CEC  52E5               	movf	postdec1,f,c
  3804  012CEE  0012               	return		;funcret
  3805  012CF0                     __end_of_send_lcd_cmd_dma:
  3806                           	opt callstack 0
  3807                           
  3808 ;; *************** function _wait_lcd_done *****************
  3809 ;; Defined at:
  3810 ;;		line 141 in file "eadog.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1  [STACK] void 
  3817 ;; Registers used:
  3818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/1
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    7
  3831 ;; This function calls:
  3832 ;;		_wdtdelay
  3833 ;; This function is called by:
  3834 ;;		_send_lcd_cmd_dma
  3835 ;;		_update_lcd
  3836 ;;		_vterm_dump
  3837 ;; This function uses a reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text16
  3841  01353E                     __ptext16:
  3842                           	opt callstack 0
  3843  01353E                     _wait_lcd_done:
  3844                           	opt callstack 22
  3845                           
  3846                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  3847                           
  3848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3849                           ;incstack = 0
  3850  01353E  0100               	movlb	0	; () banked
  3851  013540  B77A               	btfsc	_spi_link& (0+255),3,b	;volatile
  3852  013542  D7FD               	goto	_wait_lcd_done
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;eadog.c: 144:  wdtdelay(50);
  3856  013544  0E32               	movlw	50
  3857  013546  6EE6               	movwf	postinc1,c
  3858  013548  0E00               	movlw	0
  3859  01354A  6EE6               	movwf	postinc1,c
  3860  01354C  0E00               	movlw	0
  3861  01354E  6EE6               	movwf	postinc1,c
  3862  013550  0E00               	movlw	0
  3863  013552  6EE6               	movwf	postinc1,c
  3864  013554  EC23  F096         	call	_wdtdelay	;wreg free
  3865                           
  3866                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  3867  013558  0012               	return		;funcret
  3868  01355A                     __end_of_wait_lcd_done:
  3869                           	opt callstack 0
  3870                           
  3871 ;; *************** function _wdtdelay *****************
  3872 ;; Defined at:
  3873 ;;		line 22 in file "eadog.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  delay           4  [STACK] const unsigned long 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1  [STACK] void 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    6
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_init_display
  3898 ;;		_send_lcd_cmd
  3899 ;;		_send_lcd_cmd_long
  3900 ;;		_wait_lcd_done
  3901 ;; This function uses a reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text17
  3905  012C46                     __ptext17:
  3906                           	opt callstack 0
  3907  012C46                     _wdtdelay:
  3908                           	opt callstack 22
  3909                           
  3910                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  3911                           
  3912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3913                           ;incstack = 0
  3914  012C46  6A01               	clrf	wdtdelay@dcount^0,c
  3915  012C48  6A02               	clrf	(wdtdelay@dcount+1)^0,c
  3916  012C4A  6A03               	clrf	(wdtdelay@dcount+2)^0,c
  3917  012C4C  6A04               	clrf	(wdtdelay@dcount+3)^0,c
  3918  012C4E                     l1309:
  3919                           
  3920                           ;eadog.c: 27:   __nop();
  3921  012C4E  F000               	nop	
  3922  012C50  0004               	clrwdt		;# 
  3923                           
  3924                           ;eadog.c: 29:  };
  3925  012C52  0E01               	movlw	1
  3926  012C54  2601               	addwf	wdtdelay@dcount^0,f,c
  3927  012C56  0E00               	movlw	0
  3928  012C58  2202               	addwfc	(wdtdelay@dcount+1)^0,f,c
  3929  012C5A  2203               	addwfc	(wdtdelay@dcount+2)^0,f,c
  3930  012C5C  2204               	addwfc	(wdtdelay@dcount+3)^0,f,c
  3931                           
  3932                           ;stkvar	_delay @ sp[(0)+-4]
  3933  012C5E  0EFC               	movlw	-4
  3934  012C60  006F FF8C  F039    	movff	plusw1,btemp
  3935  012C66  5001               	movf	wdtdelay@dcount^0,w,c
  3936  012C68  5C39               	subwf	btemp^0,w,c
  3937  012C6A  0EFD               	movlw	-3
  3938  012C6C  006F FF8C  F039    	movff	plusw1,btemp
  3939  012C72  5002               	movf	(wdtdelay@dcount+1)^0,w,c
  3940  012C74  5839               	subwfb	btemp^0,w,c
  3941  012C76  0EFE               	movlw	-2
  3942  012C78  006F FF8C  F039    	movff	plusw1,btemp
  3943  012C7E  5003               	movf	(wdtdelay@dcount+2)^0,w,c
  3944  012C80  5839               	subwfb	btemp^0,w,c
  3945  012C82  0EFF               	movlw	-1
  3946  012C84  006F FF8C  F039    	movff	plusw1,btemp
  3947  012C8A  5004               	movf	(wdtdelay@dcount+3)^0,w,c
  3948  012C8C  5839               	subwfb	btemp^0,w,c
  3949  012C8E  B0D8               	btfsc	status,0,c
  3950  012C90  D7DE               	goto	l1309
  3951                           
  3952                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  3953  012C92  52E5               	movf	postdec1,f,c
  3954  012C94  52E5               	movf	postdec1,f,c
  3955  012C96  52E5               	movf	postdec1,f,c
  3956  012C98  52E5               	movf	postdec1,f,c
  3957  012C9A  0012               	return		;funcret
  3958  012C9C                     __end_of_wdtdelay:
  3959                           	opt callstack 0
  3960                           
  3961 ;; *************** function _eaDogM_WriteString *****************
  3962 ;; Defined at:
  3963 ;;		line 184 in file "eadog.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  strPtr          2  [STACK] PTR unsigned char 
  3966 ;;		 -> D.lcd(216), D(218), V(189), 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1  [STACK] void 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/1
  3975 ;;		On exit  : 3F/3B
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:   15
  3985 ;; This function calls:
  3986 ;;		_printf
  3987 ;;		_ringBufS_flush
  3988 ;;		_start_lcd
  3989 ;;		_strlen
  3990 ;;		_wait_lcd_set
  3991 ;; This function is called by:
  3992 ;;		_eaDogM_WriteStringAtPos
  3993 ;; This function uses a reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text18
  3997  012504                     __ptext18:
  3998                           	opt callstack 0
  3999  012504                     _eaDogM_WriteString:
  4000                           	opt callstack 13
  4001                           
  4002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4003                           ;incstack = 0
  4004                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 186:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
  4005  012504  84BE               	bsf	190,2,c	;volatile
  4006                           
  4007                           ;eadog.c: 187:  wait_lcd_set();
  4008  012506  EC81  F09B         	call	_wait_lcd_set	;wreg free
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  4012  01250A  0E00               	movlw	0
  4013  01250C  6EE6               	movwf	postinc1,c
  4014  01250E  0060  F203  FFE6   	movff	_spi_link+6,postinc1
  4015  012514  0060  F207  FFE6   	movff	_spi_link+7,postinc1
  4016  01251A  EC7B  F093         	call	_ringBufS_flush	;wreg free
  4017  01251E  94BC               	bcf	188,2,c	;volatile
  4018                           
  4019                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4020                           ;stkvar	_strPtr @ sp[(0)+-2]
  4021  012520  0EFE               	movlw	-2
  4022  012522  006F FF8F FFE6     	movff	plusw1,postinc1
  4023  012528  006F FF8F FFE6     	movff	plusw1,postinc1
  4024  01252E  EC2A  F093         	call	_strlen	;wreg free
  4025  012532  503A               	movf	(btemp+1)^0,w,c
  4026  012534  E104               	bnz	u4000
  4027  012536  0E41               	movlw	65
  4028  012538  5C39               	subwf	btemp^0,w,c
  4029  01253A  A0D8               	btfss	status,0,c
  4030  01253C  D010               	goto	l5914
  4031  01253E                     u4000:
  4032                           
  4033                           ;stkvar	_strPtr @ sp[(0)+-2]
  4034  01253E  0EFE               	movlw	-2
  4035  012540  006F FF8C  F043    	movff	plusw1,btemp+10
  4036  012546  0EFF               	movlw	-1
  4037  012548  006F FF8C  F044    	movff	plusw1,btemp+11
  4038  01254E  0E40               	movlw	64
  4039  012550  2443               	addwf	(btemp+10)^0,w,c
  4040  012552  6ED9               	movwf	fsr2l,c
  4041  012554  0E00               	movlw	0
  4042  012556  2044               	addwfc	(btemp+11)^0,w,c
  4043  012558  6EDA               	movwf	fsr2h,c
  4044  01255A  0E00               	movlw	0
  4045  01255C  6EDF               	movwf	indf2,c
  4046  01255E                     l5914:
  4047                           
  4048                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  4049  01255E  013B               	movlb	59	; () banked
  4050  012560  9FFC               	bcf	252,7,b	;volatile
  4051                           
  4052                           ; BSR set to: 59
  4053                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  4054                           ;stkvar	_strPtr @ sp[(0)+-2]
  4055  012562  0EFE               	movlw	-2
  4056  012564  006F FF8F FFE6     	movff	plusw1,postinc1
  4057  01256A  006F FF8F FFE6     	movff	plusw1,postinc1
  4058  012570  EC2A  F093         	call	_strlen	;wreg free
  4059  012574  0060  F0E7  FBF7   	movff	btemp,15351	;volatile
  4060  01257A  0060  F0EB  FBF8   	movff	btemp+1,15352	;volatile
  4061                           
  4062                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  4063  012580  013B               	movlb	59	; () banked
  4064  012582  8FFC               	bsf	252,7,b	;volatile
  4065                           
  4066                           ; BSR set to: 59
  4067                           ;eadog.c: 195:  printf("%s", strPtr);
  4068                           ;stkvar	_strPtr @ sp[(0)+-2]
  4069  012584  0EFE               	movlw	-2
  4070  012586  006F FF8F FFE6     	movff	plusw1,postinc1
  4071  01258C  006F FF8F FFE6     	movff	plusw1,postinc1
  4072  012592  0EFB               	movlw	low STR_10
  4073  012594  6EE6               	movwf	postinc1,c
  4074  012596  0EFF               	movlw	high STR_10
  4075  012598  6EE6               	movwf	postinc1,c
  4076  01259A  0E04               	movlw	4
  4077  01259C  6EE6               	movwf	postinc1,c
  4078  01259E  EC68  F095         	call	_printf	;wreg free
  4079                           
  4080                           ;eadog.c: 196:  start_lcd();
  4081  0125A2  EC84  F09B         	call	_start_lcd	;wreg free
  4082                           
  4083                           ; BSR set to: 59
  4084                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  4085  0125A6  52E5               	movf	postdec1,f,c
  4086  0125A8  52E5               	movf	postdec1,f,c
  4087  0125AA  0012               	return		;funcret
  4088  0125AC                     __end_of_eaDogM_WriteString:
  4089                           	opt callstack 0
  4090                           
  4091 ;; *************** function _wait_lcd_set *****************
  4092 ;; Defined at:
  4093 ;;		line 131 in file "eadog.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1  [STACK] void 
  4100 ;; Registers used:
  4101 ;;		None
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/3D
  4104 ;;		On exit  : 3F/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    6
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_eaDogM_WriteString
  4118 ;;		_send_lcd_cmd_dma
  4119 ;; This function uses a reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text19
  4123  013702                     __ptext19:
  4124                           	opt callstack 0
  4125  013702                     _wait_lcd_set:
  4126                           	opt callstack 21
  4127                           
  4128                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  4129                           
  4130                           ; BSR set to: 59
  4131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4132                           ;incstack = 0
  4133  013702  0100               	movlb	0	; () banked
  4134  013704  877A               	bsf	_spi_link& (0+255),3,b	;volatile
  4135                           
  4136                           ; BSR set to: 0
  4137                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4138  013706  0012               	return		;funcret
  4139  013708                     __end_of_wait_lcd_set:
  4140                           	opt callstack 0
  4141                           
  4142 ;; *************** function _start_lcd *****************
  4143 ;; Defined at:
  4144 ;;		line 126 in file "eadog.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1  [STACK] void 
  4151 ;; Registers used:
  4152 ;;		None
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/3B
  4155 ;;		On exit  : 3F/3B
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    6
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_eaDogM_WriteString
  4169 ;;		_send_lcd_cmd_dma
  4170 ;; This function uses a reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text20
  4174  013708                     __ptext20:
  4175                           	opt callstack 0
  4176  013708                     _start_lcd:
  4177                           	opt callstack 21
  4178                           
  4179                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  4180                           
  4181                           ; BSR set to: 0
  4182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4183                           ;incstack = 0
  4184  013708  013B               	movlb	59	; () banked
  4185  01370A  8DFC               	bsf	252,6,b	;volatile
  4186                           
  4187                           ; BSR set to: 59
  4188                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4189  01370C  0012               	return		;funcret
  4190  01370E                     __end_of_start_lcd:
  4191                           	opt callstack 0
  4192                           
  4193 ;; *************** function _ringBufS_flush *****************
  4194 ;; Defined at:
  4195 ;;		line 76 in file "ringbufs.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  _this           2  [STACK] PTR struct ringBufS_t
  4198 ;;		 -> ring_buf1(67), 
  4199 ;;  clearBuffer     1  [STACK] const char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1  [STACK] void 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4206 ;; Tracked objects:
  4207 ;;		On entry : 3F/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    7
  4218 ;; This function calls:
  4219 ;;		_memset
  4220 ;; This function is called by:
  4221 ;;		_eaDogM_WriteString
  4222 ;;		_send_lcd_cmd_dma
  4223 ;; This function uses a reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text21
  4227  0126F6                     __ptext21:
  4228                           	opt callstack 0
  4229  0126F6                     _ringBufS_flush:
  4230                           	opt callstack 20
  4231                           
  4232                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  4233                           ;stkvar	__this @ sp[(0)+-2]
  4234                           
  4235                           ; BSR set to: 59
  4236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4237                           ;incstack = 0
  4238  0126F6  0EFE               	movlw	-2
  4239  0126F8  006F FF8C  F043    	movff	plusw1,btemp+10
  4240  0126FE  0EFF               	movlw	-1
  4241  012700  006F FF8C  F044    	movff	plusw1,btemp+11
  4242  012706  0E42               	movlw	66
  4243  012708  2443               	addwf	(btemp+10)^0,w,c
  4244  01270A  6ED9               	movwf	fsr2l,c
  4245  01270C  0E00               	movlw	0
  4246  01270E  2044               	addwfc	(btemp+11)^0,w,c
  4247  012710  6EDA               	movwf	fsr2h,c
  4248  012712  0E00               	movlw	0
  4249  012714  6EDF               	movwf	indf2,c
  4250                           
  4251                           ;ringbufs.c: 79:  _this->head = 0;
  4252                           ;stkvar	__this @ sp[(0)+-2]
  4253  012716  0EFE               	movlw	-2
  4254  012718  006F FF8C  F043    	movff	plusw1,btemp+10
  4255  01271E  0EFF               	movlw	-1
  4256  012720  006F FF8C  F044    	movff	plusw1,btemp+11
  4257  012726  0E40               	movlw	64
  4258  012728  2443               	addwf	(btemp+10)^0,w,c
  4259  01272A  6ED9               	movwf	fsr2l,c
  4260  01272C  0E00               	movlw	0
  4261  01272E  2044               	addwfc	(btemp+11)^0,w,c
  4262  012730  6EDA               	movwf	fsr2h,c
  4263  012732  0E00               	movlw	0
  4264  012734  6EDF               	movwf	indf2,c
  4265                           
  4266                           ;ringbufs.c: 80:  _this->tail = 0;
  4267                           ;stkvar	__this @ sp[(0)+-2]
  4268  012736  0EFE               	movlw	-2
  4269  012738  006F FF8C  F043    	movff	plusw1,btemp+10
  4270  01273E  0EFF               	movlw	-1
  4271  012740  006F FF8C  F044    	movff	plusw1,btemp+11
  4272  012746  0E41               	movlw	65
  4273  012748  2443               	addwf	(btemp+10)^0,w,c
  4274  01274A  6ED9               	movwf	fsr2l,c
  4275  01274C  0E00               	movlw	0
  4276  01274E  2044               	addwfc	(btemp+11)^0,w,c
  4277  012750  6EDA               	movwf	fsr2h,c
  4278  012752  0E00               	movlw	0
  4279  012754  6EDF               	movwf	indf2,c
  4280                           
  4281                           ;ringbufs.c: 81:  if (clearBuffer) {
  4282                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  4283  012756  0EFD               	movlw	-3
  4284  012758  50E3               	movf	plusw1,w,c
  4285  01275A  B4D8               	btfsc	status,2,c
  4286  01275C  D011               	goto	l1455
  4287                           
  4288                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  4289  01275E  0E40               	movlw	64
  4290  012760  6EE6               	movwf	postinc1,c
  4291  012762  0E00               	movlw	0
  4292  012764  6EE6               	movwf	postinc1,c
  4293  012766  0E00               	movlw	0
  4294  012768  6EE6               	movwf	postinc1,c
  4295  01276A  0E00               	movlw	0
  4296  01276C  6EE6               	movwf	postinc1,c
  4297                           
  4298                           ;stkvar	__this @ sp[(-4)+-2]
  4299  01276E  0EFA               	movlw	-6
  4300  012770  006F FF8F FFE6     	movff	plusw1,postinc1
  4301  012776  006F FF8F FFE6     	movff	plusw1,postinc1
  4302  01277C  EC05  F088         	call	_memset	;wreg free
  4303  012780                     l1455:
  4304                           
  4305                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  4306  012780  52E5               	movf	postdec1,f,c
  4307  012782  52E5               	movf	postdec1,f,c
  4308  012784  52E5               	movf	postdec1,f,c
  4309  012786  0012               	return		;funcret
  4310  012788                     __end_of_ringBufS_flush:
  4311                           	opt callstack 0
  4312                           
  4313 ;; *************** function _memset *****************
  4314 ;; Defined at:
  4315 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  dest            2  [STACK] PTR void 
  4318 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4319 ;;  c               2  [STACK] int 
  4320 ;;  n               2  [STACK] unsigned int 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  s               2  [STACK] PTR unsigned char 
  4323 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4324 ;;  k               2  [STACK] unsigned int 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  2  [STACK] PTR void 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    6
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_ringBufS_init
  4345 ;;		_ringBufS_flush
  4346 ;; This function uses a reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text22
  4350  01100A                     __ptext22:
  4351                           	opt callstack 0
  4352  01100A                     _memset:
  4353                           	opt callstack 0
  4354                           
  4355                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4356  01100A  52E6               	movf	postinc1,f,c
  4357  01100C  52E6               	movf	postinc1,f,c
  4358  01100E  52E6               	movf	postinc1,f,c
  4359  011010  52E6               	movf	postinc1,f,c
  4360                           
  4361                           ;stkvar	_dest @ sp[(-4)+-2]
  4362                           
  4363                           ;incstack = 0
  4364  011012  0EFA               	movlw	-6
  4365  011014  006F FF8C  F043    	movff	plusw1,btemp+10
  4366  01101A  0EFB               	movlw	-5
  4367  01101C  006F FF8C  F044    	movff	plusw1,btemp+11
  4368                           
  4369                           ;stkvar	_s @ sp[(-4)+0]
  4370  011022  0EFD               	movlw	-3
  4371  011024  0060  F113  FFE3   	movff	btemp+11,plusw1
  4372  01102A  0EFC               	movlw	-4
  4373  01102C  0060  F10F  FFE3   	movff	btemp+10,plusw1
  4374                           
  4375                           ;stkvar	_n @ sp[(-4)+-6]
  4376  011032  0EF6               	movlw	-10
  4377  011034  006F FF8C  F039    	movff	plusw1,btemp
  4378  01103A  0EF7               	movlw	-9
  4379  01103C  50E3               	movf	plusw1,w,c
  4380  01103E  1039               	iorwf	btemp^0,w,c
  4381  011040  B4D8               	btfsc	status,2,c
  4382  011042  D154               	goto	u3970
  4383                           
  4384                           ;stkvar	_c @ sp[(-4)+-4]
  4385                           ;stkvar	_s @ sp[(-4)+0]
  4386  011044  0EFC               	movlw	-4
  4387  011046  006F FF8F FFD9     	movff	plusw1,fsr2l
  4388  01104C  0EFD               	movlw	-3
  4389  01104E  006F FF8F FFDA     	movff	plusw1,fsr2h
  4390  011054  0EF8               	movlw	-8
  4391  011056  006F FF8F FFDF     	movff	plusw1,indf2
  4392                           
  4393                           ;stkvar	_c @ sp[(-4)+-4]
  4394                           ;stkvar	_n @ sp[(-4)+-6]
  4395                           ;stkvar	_s @ sp[(-4)+0]
  4396  01105C  0EFC               	movlw	-4
  4397  01105E  006F FF8C  F043    	movff	plusw1,btemp+10
  4398  011064  0EFD               	movlw	-3
  4399  011066  006F FF8C  F044    	movff	plusw1,btemp+11
  4400  01106C  0EF6               	movlw	-10
  4401  01106E  50E3               	movf	plusw1,w,c
  4402  011070  2643               	addwf	(btemp+10)^0,f,c
  4403  011072  0EF7               	movlw	-9
  4404  011074  50E3               	movf	plusw1,w,c
  4405  011076  2244               	addwfc	(btemp+11)^0,f,c
  4406  011078  0EFF               	movlw	255
  4407  01107A  2443               	addwf	(btemp+10)^0,w,c
  4408  01107C  6ED9               	movwf	fsr2l,c
  4409  01107E  0EFF               	movlw	255
  4410  011080  2044               	addwfc	(btemp+11)^0,w,c
  4411  011082  6EDA               	movwf	fsr2h,c
  4412  011084  0EF8               	movlw	-8
  4413  011086  006F FF8F FFDF     	movff	plusw1,indf2
  4414                           
  4415                           ;stkvar	_n @ sp[(-4)+-6]
  4416  01108C  0EF7               	movlw	-9
  4417  01108E  50E3               	movf	plusw1,w,c
  4418  011090  E108               	bnz	l5834
  4419  011092  0EF6               	movlw	-10
  4420  011094  006F FF8C  F039    	movff	plusw1,btemp
  4421  01109A  0E03               	movlw	3
  4422  01109C  5E39               	subwf	btemp^0,f,c
  4423  01109E  A0D8               	btfss	status,0,c
  4424  0110A0  D125               	goto	u3970
  4425  0110A2                     l5834:
  4426                           
  4427                           ;stkvar	_c @ sp[(-4)+-4]
  4428                           ;stkvar	_s @ sp[(-4)+0]
  4429  0110A2  0EFC               	movlw	-4
  4430  0110A4  006F FF8C  F043    	movff	plusw1,btemp+10
  4431  0110AA  0EFD               	movlw	-3
  4432  0110AC  006F FF8C  F044    	movff	plusw1,btemp+11
  4433  0110B2  0E01               	movlw	1
  4434  0110B4  2443               	addwf	(btemp+10)^0,w,c
  4435  0110B6  6ED9               	movwf	fsr2l,c
  4436  0110B8  0E00               	movlw	0
  4437  0110BA  2044               	addwfc	(btemp+11)^0,w,c
  4438  0110BC  6EDA               	movwf	fsr2h,c
  4439  0110BE  0EF8               	movlw	-8
  4440  0110C0  006F FF8F FFDF     	movff	plusw1,indf2
  4441                           
  4442                           ;stkvar	_c @ sp[(-4)+-4]
  4443                           ;stkvar	_s @ sp[(-4)+0]
  4444  0110C6  0EFC               	movlw	-4
  4445  0110C8  006F FF8C  F043    	movff	plusw1,btemp+10
  4446  0110CE  0EFD               	movlw	-3
  4447  0110D0  006F FF8C  F044    	movff	plusw1,btemp+11
  4448  0110D6  0E02               	movlw	2
  4449  0110D8  2443               	addwf	(btemp+10)^0,w,c
  4450  0110DA  6ED9               	movwf	fsr2l,c
  4451  0110DC  0E00               	movlw	0
  4452  0110DE  2044               	addwfc	(btemp+11)^0,w,c
  4453  0110E0  6EDA               	movwf	fsr2h,c
  4454  0110E2  0EF8               	movlw	-8
  4455  0110E4  006F FF8F FFDF     	movff	plusw1,indf2
  4456                           
  4457                           ;stkvar	_c @ sp[(-4)+-4]
  4458                           ;stkvar	_n @ sp[(-4)+-6]
  4459                           ;stkvar	_s @ sp[(-4)+0]
  4460  0110EA  0EFC               	movlw	-4
  4461  0110EC  006F FF8C  F043    	movff	plusw1,btemp+10
  4462  0110F2  0EFD               	movlw	-3
  4463  0110F4  006F FF8C  F044    	movff	plusw1,btemp+11
  4464  0110FA  0EF6               	movlw	-10
  4465  0110FC  50E3               	movf	plusw1,w,c
  4466  0110FE  2643               	addwf	(btemp+10)^0,f,c
  4467  011100  0EF7               	movlw	-9
  4468  011102  50E3               	movf	plusw1,w,c
  4469  011104  2244               	addwfc	(btemp+11)^0,f,c
  4470  011106  0EFE               	movlw	254
  4471  011108  2443               	addwf	(btemp+10)^0,w,c
  4472  01110A  6ED9               	movwf	fsr2l,c
  4473  01110C  0EFF               	movlw	255
  4474  01110E  2044               	addwfc	(btemp+11)^0,w,c
  4475  011110  6EDA               	movwf	fsr2h,c
  4476  011112  0EF8               	movlw	-8
  4477  011114  006F FF8F FFDF     	movff	plusw1,indf2
  4478                           
  4479                           ;stkvar	_c @ sp[(-4)+-4]
  4480                           ;stkvar	_n @ sp[(-4)+-6]
  4481                           ;stkvar	_s @ sp[(-4)+0]
  4482  01111A  0EFC               	movlw	-4
  4483  01111C  006F FF8C  F043    	movff	plusw1,btemp+10
  4484  011122  0EFD               	movlw	-3
  4485  011124  006F FF8C  F044    	movff	plusw1,btemp+11
  4486  01112A  0EF6               	movlw	-10
  4487  01112C  50E3               	movf	plusw1,w,c
  4488  01112E  2643               	addwf	(btemp+10)^0,f,c
  4489  011130  0EF7               	movlw	-9
  4490  011132  50E3               	movf	plusw1,w,c
  4491  011134  2244               	addwfc	(btemp+11)^0,f,c
  4492  011136  0EFD               	movlw	253
  4493  011138  2443               	addwf	(btemp+10)^0,w,c
  4494  01113A  6ED9               	movwf	fsr2l,c
  4495  01113C  0EFF               	movlw	255
  4496  01113E  2044               	addwfc	(btemp+11)^0,w,c
  4497  011140  6EDA               	movwf	fsr2h,c
  4498  011142  0EF8               	movlw	-8
  4499  011144  006F FF8F FFDF     	movff	plusw1,indf2
  4500                           
  4501                           ;stkvar	_n @ sp[(-4)+-6]
  4502  01114A  0EF7               	movlw	-9
  4503  01114C  50E3               	movf	plusw1,w,c
  4504  01114E  E108               	bnz	l5840
  4505  011150  0EF6               	movlw	-10
  4506  011152  006F FF8C  F039    	movff	plusw1,btemp
  4507  011158  0E07               	movlw	7
  4508  01115A  5E39               	subwf	btemp^0,f,c
  4509  01115C  A0D8               	btfss	status,0,c
  4510  01115E  D0C6               	goto	u3970
  4511  011160                     l5840:
  4512                           
  4513                           ;stkvar	_c @ sp[(-4)+-4]
  4514                           ;stkvar	_s @ sp[(-4)+0]
  4515  011160  0EFC               	movlw	-4
  4516  011162  006F FF8C  F043    	movff	plusw1,btemp+10
  4517  011168  0EFD               	movlw	-3
  4518  01116A  006F FF8C  F044    	movff	plusw1,btemp+11
  4519  011170  0E03               	movlw	3
  4520  011172  2443               	addwf	(btemp+10)^0,w,c
  4521  011174  6ED9               	movwf	fsr2l,c
  4522  011176  0E00               	movlw	0
  4523  011178  2044               	addwfc	(btemp+11)^0,w,c
  4524  01117A  6EDA               	movwf	fsr2h,c
  4525  01117C  0EF8               	movlw	-8
  4526  01117E  006F FF8F FFDF     	movff	plusw1,indf2
  4527                           
  4528                           ;stkvar	_c @ sp[(-4)+-4]
  4529                           ;stkvar	_n @ sp[(-4)+-6]
  4530                           ;stkvar	_s @ sp[(-4)+0]
  4531  011184  0EFC               	movlw	-4
  4532  011186  006F FF8C  F043    	movff	plusw1,btemp+10
  4533  01118C  0EFD               	movlw	-3
  4534  01118E  006F FF8C  F044    	movff	plusw1,btemp+11
  4535  011194  0EF6               	movlw	-10
  4536  011196  50E3               	movf	plusw1,w,c
  4537  011198  2643               	addwf	(btemp+10)^0,f,c
  4538  01119A  0EF7               	movlw	-9
  4539  01119C  50E3               	movf	plusw1,w,c
  4540  01119E  2244               	addwfc	(btemp+11)^0,f,c
  4541  0111A0  0EFC               	movlw	252
  4542  0111A2  2443               	addwf	(btemp+10)^0,w,c
  4543  0111A4  6ED9               	movwf	fsr2l,c
  4544  0111A6  0EFF               	movlw	255
  4545  0111A8  2044               	addwfc	(btemp+11)^0,w,c
  4546  0111AA  6EDA               	movwf	fsr2h,c
  4547  0111AC  0EF8               	movlw	-8
  4548  0111AE  006F FF8F FFDF     	movff	plusw1,indf2
  4549                           
  4550                           ;stkvar	_n @ sp[(-4)+-6]
  4551  0111B4  0EF7               	movlw	-9
  4552  0111B6  50E3               	movf	plusw1,w,c
  4553  0111B8  E108               	bnz	l5846
  4554  0111BA  0EF6               	movlw	-10
  4555  0111BC  006F FF8C  F039    	movff	plusw1,btemp
  4556  0111C2  0E09               	movlw	9
  4557  0111C4  5E39               	subwf	btemp^0,f,c
  4558  0111C6  A0D8               	btfss	status,0,c
  4559  0111C8  D091               	goto	u3970
  4560  0111CA                     l5846:
  4561                           
  4562                           ;stkvar	_s @ sp[(-4)+0]
  4563  0111CA  0EFC               	movlw	-4
  4564  0111CC  006F FF8C  F043    	movff	plusw1,btemp+10
  4565  0111D2  1E43               	comf	(btemp+10)^0,f,c
  4566  0111D4  0EFD               	movlw	-3
  4567  0111D6  006F FF8C  F044    	movff	plusw1,btemp+11
  4568  0111DC  1E44               	comf	(btemp+11)^0,f,c
  4569  0111DE  2A43               	incf	(btemp+10)^0,f,c
  4570  0111E0  B4D8               	btfsc	status,2,c
  4571  0111E2  2A44               	incf	(btemp+11)^0,f,c
  4572  0111E4  0E03               	movlw	3
  4573  0111E6  1643               	andwf	(btemp+10)^0,f,c
  4574  0111E8  0E00               	movlw	0
  4575  0111EA  1644               	andwf	(btemp+11)^0,f,c
  4576                           
  4577                           ;stkvar	_k @ sp[(-4)+2]
  4578  0111EC  0EFE               	movlw	-2
  4579  0111EE  0060  F10F  FFE3   	movff	btemp+10,plusw1
  4580  0111F4  0EFF               	movlw	-1
  4581  0111F6  0060  F113  FFE3   	movff	btemp+11,plusw1
  4582                           
  4583                           ;stkvar	_k @ sp[(-4)+2]
  4584                           ;stkvar	_s @ sp[(-4)+0]
  4585  0111FC  0EFC               	movlw	-4
  4586  0111FE  50E3               	movf	plusw1,w,c
  4587  011200  6E39               	movwf	btemp^0,c
  4588  011202  0EFE               	movlw	-2
  4589  011204  50E3               	movf	plusw1,w,c
  4590  011206  2639               	addwf	btemp^0,f,c
  4591  011208  0EFC               	movlw	-4
  4592  01120A  0060  F0E7  FFE3   	movff	btemp,plusw1
  4593  011210  0EFD               	movlw	-3
  4594  011212  50E3               	movf	plusw1,w,c
  4595  011214  6E39               	movwf	btemp^0,c
  4596  011216  0EFF               	movlw	-1
  4597  011218  50E3               	movf	plusw1,w,c
  4598  01121A  2239               	addwfc	btemp^0,f,c
  4599  01121C  0EFD               	movlw	-3
  4600  01121E  0060  F0E7  FFE3   	movff	btemp,plusw1
  4601                           
  4602                           ;stkvar	_k @ sp[(-4)+2]
  4603                           ;stkvar	_n @ sp[(-4)+-6]
  4604  011224  0EF6               	movlw	-10
  4605  011226  50E3               	movf	plusw1,w,c
  4606  011228  6E39               	movwf	btemp^0,c
  4607  01122A  0EFE               	movlw	-2
  4608  01122C  50E3               	movf	plusw1,w,c
  4609  01122E  5E39               	subwf	btemp^0,f,c
  4610  011230  0EF6               	movlw	-10
  4611  011232  0060  F0E7  FFE3   	movff	btemp,plusw1
  4612  011238  0EF7               	movlw	-9
  4613  01123A  50E3               	movf	plusw1,w,c
  4614  01123C  6E39               	movwf	btemp^0,c
  4615  01123E  0EFF               	movlw	-1
  4616  011240  50E3               	movf	plusw1,w,c
  4617  011242  5A39               	subwfb	btemp^0,f,c
  4618  011244  0EF7               	movlw	-9
  4619  011246  0060  F0E7  FFE3   	movff	btemp,plusw1
  4620  01124C  0EFC               	movlw	252
  4621  01124E  6E43               	movwf	(btemp+10)^0,c
  4622  011250  0EFF               	movlw	255
  4623  011252  6E44               	movwf	(btemp+11)^0,c
  4624                           
  4625                           ;stkvar	_n @ sp[(-4)+-6]
  4626  011254  0EF6               	movlw	-10
  4627  011256  006F FF8C  F039    	movff	plusw1,btemp
  4628  01125C  5043               	movf	(btemp+10)^0,w,c
  4629  01125E  1639               	andwf	btemp^0,f,c
  4630  011260  0EF6               	movlw	-10
  4631  011262  0060  F0E7  FFE3   	movff	btemp,plusw1
  4632  011268  0EF7               	movlw	-9
  4633  01126A  006F FF8C  F039    	movff	plusw1,btemp
  4634  011270  5044               	movf	(btemp+11)^0,w,c
  4635  011272  1639               	andwf	btemp^0,f,c
  4636  011274  0EF7               	movlw	-9
  4637  011276  D02E               	goto	L1
  4638  011278                     l5854:
  4639                           
  4640                           ;stkvar	_c @ sp[(-4)+-4]
  4641                           ;stkvar	_s @ sp[(-4)+0]
  4642  011278  0EFC               	movlw	-4
  4643  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  4644  011280  0EFD               	movlw	-3
  4645  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  4646  011288  0EF8               	movlw	-8
  4647  01128A  006F FF8F FFDF     	movff	plusw1,indf2
  4648                           
  4649                           ;stkvar	_n @ sp[(-4)+-6]
  4650  011290  0EF6               	movlw	-10
  4651  011292  006F FF8C  F039    	movff	plusw1,btemp
  4652  011298  0E01               	movlw	1
  4653  01129A  5E39               	subwf	btemp^0,f,c
  4654  01129C  0EF6               	movlw	-10
  4655  01129E  0060  F0E7  FFE3   	movff	btemp,plusw1
  4656  0112A4  0EF7               	movlw	-9
  4657  0112A6  006F FF8C  F039    	movff	plusw1,btemp
  4658  0112AC  0E00               	movlw	0
  4659  0112AE  5A39               	subwfb	btemp^0,f,c
  4660  0112B0  0EF7               	movlw	-9
  4661  0112B2  0060  F0E7  FFE3   	movff	btemp,plusw1
  4662                           
  4663                           ;stkvar	_s @ sp[(-4)+0]
  4664  0112B8  0EFC               	movlw	-4
  4665  0112BA  50E3               	movf	plusw1,w,c
  4666  0112BC  0F01               	addlw	1
  4667  0112BE  6E39               	movwf	btemp^0,c
  4668  0112C0  0EFC               	movlw	-4
  4669  0112C2  0060  F0E7  FFE3   	movff	btemp,plusw1
  4670  0112C8  6A39               	clrf	btemp^0,c
  4671  0112CA  0EFD               	movlw	-3
  4672  0112CC  50E3               	movf	plusw1,w,c
  4673  0112CE  2039               	addwfc	btemp^0,w,c
  4674  0112D0  6E39               	movwf	btemp^0,c
  4675  0112D2  0EFD               	movlw	-3
  4676  0112D4                     L1:
  4677  0112D4  0060  F0E7  FFE3   	movff	btemp,plusw1
  4678                           
  4679                           ;stkvar	_n @ sp[(-4)+-6]
  4680  0112DA  0EF6               	movlw	-10
  4681  0112DC  006F FF8C  F039    	movff	plusw1,btemp
  4682  0112E2  0EF7               	movlw	-9
  4683  0112E4  50E3               	movf	plusw1,w,c
  4684  0112E6  1039               	iorwf	btemp^0,w,c
  4685  0112E8  A4D8               	btfss	status,2,c
  4686  0112EA  D7C6               	goto	l5854
  4687  0112EC                     u3970:
  4688                           
  4689                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  4690  0112EC  0EF6               	movlw	246
  4691  0112EE  26E1               	addwf	fsr1l,f,c
  4692  0112F0  0EFF               	movlw	255
  4693  0112F2  22E2               	addwfc	fsr1h,f,c
  4694  0112F4  0012               	return		;funcret
  4695  0112F6                     __end_of_memset:
  4696                           	opt callstack 0
  4697                           
  4698 ;; *************** function _printf *****************
  4699 ;; Defined at:
  4700 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  fmt             2  [STACK] PTR const unsigned char 
  4703 ;;		 -> STR_12(3), STR_11(3), STR_10(3), 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  ap              2  [STACK] PTR void [1]
  4706 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4707 ;;  ret             2    0        int 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2  [STACK] int 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4712 ;; Tracked objects:
  4713 ;;		On entry : 3F/3B
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:   14
  4724 ;; This function calls:
  4725 ;;		_vfprintf
  4726 ;; This function is called by:
  4727 ;;		_eaDogM_WriteString
  4728 ;;		_send_lcd_cmd_dma
  4729 ;; This function uses a reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text23
  4733  012AD0                     __ptext23:
  4734                           	opt callstack 0
  4735  012AD0                     _printf:
  4736                           	opt callstack 0
  4737                           
  4738                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4739  012AD0  52E6               	movf	postinc1,f,c
  4740  012AD2  52E6               	movf	postinc1,f,c
  4741                           
  4742                           ;stkvar	?_printf @ sp[(-2)+-3]
  4743                           
  4744                           ;incstack = 0
  4745  012AD4  0EFB               	movlw	251
  4746  012AD6  24E1               	addwf	fsr1l,w,c
  4747  012AD8  6E43               	movwf	(btemp+10)^0,c
  4748  012ADA  0EFF               	movlw	255
  4749  012ADC  20E2               	addwfc	fsr1h,w,c
  4750  012ADE  6E44               	movwf	(btemp+11)^0,c
  4751                           
  4752                           ;stkvar	_ap @ sp[(-2)+0]
  4753  012AE0  0EFF               	movlw	-1
  4754  012AE2  0060  F113  FFE3   	movff	btemp+11,plusw1
  4755  012AE8  0EFE               	movlw	-2
  4756  012AEA  0060  F10F  FFE3   	movff	btemp+10,plusw1
  4757                           
  4758                           ;stkvar	_ap @ sp[(-2)+0]
  4759  012AF0  0EFE               	movlw	254
  4760  012AF2  24E1               	addwf	fsr1l,w,c
  4761  012AF4  6E39               	movwf	btemp^0,c
  4762  012AF6  0EFF               	movlw	255
  4763  012AF8  20E2               	addwfc	fsr1h,w,c
  4764  012AFA  6E3A               	movwf	(btemp+1)^0,c
  4765  012AFC  0060  F0E7  FFE6   	movff	btemp,postinc1
  4766  012B02  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  4767                           
  4768                           ;stkvar	_fmt @ sp[(-4)+-3]
  4769  012B08  0EF9               	movlw	-7
  4770  012B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  4771  012B10  006F FF8F FFE6     	movff	plusw1,postinc1
  4772  012B16  0E00               	movlw	0
  4773  012B18  6EE6               	movwf	postinc1,c
  4774  012B1A  0E00               	movlw	0
  4775  012B1C  6EE6               	movwf	postinc1,c
  4776  012B1E  ECD6  F092         	call	_vfprintf	;wreg free
  4777                           
  4778                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  4779  012B22  52E5               	movf	postdec1,f,c
  4780  012B24  52E5               	movf	postdec1,f,c
  4781  012B26  52E5               	movf	postdec1,f,c
  4782  012B28  50E7               	movf	indf1,w,c
  4783  012B2A  5EE1               	subwf	fsr1l,f,c
  4784  012B2C  0E00               	movlw	0
  4785  012B2E  5AE2               	subwfb	fsr1h,f,c
  4786  012B30  0012               	return		;funcret
  4787  012B32                     __end_of_printf:
  4788                           	opt callstack 0
  4789                           
  4790 ;; *************** function _vfprintf *****************
  4791 ;; Defined at:
  4792 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  fp              2  [STACK] PTR struct _IO_FILE
  4795 ;;		 -> f(6), NULL(0), 
  4796 ;;  fmt             2  [STACK] PTR const unsigned char 
  4797 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  4798 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  4799 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  4800 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  4801 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(29), 
  4802 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  4803 ;;		 -> STR_2(15), STR_1(17), 
  4804 ;;  ap              2  [STACK] PTR PTR void 
  4805 ;;		 -> ap(2), ap(2), 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  cfmt            2  [STACK] PTR unsigned char 
  4808 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  4809 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  4810 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  4811 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  4812 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(29), 
  4813 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  4814 ;;		 -> STR_2(15), STR_1(17), 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2  [STACK] int 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/3
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4828 ;;Total ram usage:        0 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:   13
  4831 ;; This function calls:
  4832 ;;		_vfpfcnvrt
  4833 ;; This function is called by:
  4834 ;;		_sprintf
  4835 ;;		_printf
  4836 ;; This function uses a reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text24
  4840  0125AC                     __ptext24:
  4841                           	opt callstack 0
  4842  0125AC                     _vfprintf:
  4843                           	opt callstack 0
  4844                           
  4845                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4846  0125AC  52E6               	movf	postinc1,f,c
  4847  0125AE  52E6               	movf	postinc1,f,c
  4848                           
  4849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  4850                           ;stkvar	_fmt @ sp[(-2)+-4]
  4851                           
  4852                           ;incstack = 0
  4853  0125B0  0EFA               	movlw	-6
  4854  0125B2  006F FF8C  F043    	movff	plusw1,btemp+10
  4855  0125B8  0EFB               	movlw	-5
  4856  0125BA  006F FF8C  F044    	movff	plusw1,btemp+11
  4857                           
  4858                           ;stkvar	_cfmt @ sp[(-2)+0]
  4859  0125C0  0EFF               	movlw	-1
  4860  0125C2  0060  F113  FFE3   	movff	btemp+11,plusw1
  4861  0125C8  0EFE               	movlw	-2
  4862  0125CA  0060  F10F  FFE3   	movff	btemp+10,plusw1
  4863                           
  4864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  4865  0125D0  6A20               	clrf	_nout^0,c
  4866  0125D2  6A21               	clrf	(_nout+1)^0,c
  4867                           
  4868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4869  0125D4  D020               	goto	l5868
  4870  0125D6                     l5866:
  4871                           
  4872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4873                           ;stkvar	_ap @ sp[(-2)+-6]
  4874  0125D6  0EF8               	movlw	-8
  4875  0125D8  006F FF8F FFE6     	movff	plusw1,postinc1
  4876  0125DE  006F FF8F FFE6     	movff	plusw1,postinc1
  4877                           
  4878                           ;stkvar	_cfmt @ sp[(-4)+0]
  4879  0125E4  0EFC               	movlw	252
  4880  0125E6  24E1               	addwf	fsr1l,w,c
  4881  0125E8  6E39               	movwf	btemp^0,c
  4882  0125EA  0EFF               	movlw	255
  4883  0125EC  20E2               	addwfc	fsr1h,w,c
  4884  0125EE  6E3A               	movwf	(btemp+1)^0,c
  4885  0125F0  0060  F0E7  FFE6   	movff	btemp,postinc1
  4886  0125F6  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  4887                           
  4888                           ;stkvar	_fp @ sp[(-6)+-2]
  4889  0125FC  0EF8               	movlw	-8
  4890  0125FE  006F FF8F FFE6     	movff	plusw1,postinc1
  4891  012604  006F FF8F FFE6     	movff	plusw1,postinc1
  4892  01260A  EC00  F080         	call	_vfpfcnvrt	;wreg free
  4893  01260E  5039               	movf	btemp^0,w,c
  4894  012610  2620               	addwf	_nout^0,f,c
  4895  012612  503A               	movf	(btemp+1)^0,w,c
  4896  012614  2221               	addwfc	(_nout+1)^0,f,c
  4897  012616                     l5868:
  4898                           
  4899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4900                           ;stkvar	_cfmt @ sp[(-2)+0]
  4901  012616  50E1               	movf	fsr1l,w,c
  4902  012618  0FFE               	addlw	-2
  4903  01261A  6ED9               	movwf	fsr2l,c
  4904  01261C  50E2               	movf	fsr1h,w,c
  4905  01261E  6EDA               	movwf	fsr2h,c
  4906  012620  0EFF               	movlw	255
  4907  012622  22DA               	addwfc	fsr2h,f,c
  4908  012624  006F FF7B FFF6     	movff	postinc2,tblptrl
  4909  01262A  006F FF77 FFF7     	movff	postdec2,tblptrh
  4910  012630                     	if	0	;tblptru may be non-zero
  4911  012630                     	endif
  4912  012630                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4913  012630  0E00               	movlw	low (__mediumconst shr (0+16))
  4914  012632  6EF8               	movwf	tblptru,c
  4915  012634                     	endif
  4916  012634  0008               	tblrd		*
  4917  012636  50F5               	movf	tablat,w,c
  4918  012638  0900               	iorlw	0
  4919  01263A  A4D8               	btfss	status,2,c
  4920  01263C  D7CC               	goto	l5866
  4921                           
  4922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  4923  01263E  0060  F080  F039   	movff	_nout,btemp
  4924  012644  0060  F084  F03A   	movff	_nout+1,btemp+1
  4925                           
  4926                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  4927  01264A  0EF8               	movlw	248
  4928  01264C  26E1               	addwf	fsr1l,f,c
  4929  01264E  0EFF               	movlw	255
  4930  012650  22E2               	addwfc	fsr1h,f,c
  4931  012652  0012               	return		;funcret
  4932  012654                     __end_of_vfprintf:
  4933                           	opt callstack 0
  4934                           
  4935 ;; *************** function _vfpfcnvrt *****************
  4936 ;; Defined at:
  4937 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  fp              2  [STACK] PTR struct _IO_FILE
  4940 ;;		 -> f(6), NULL(0), 
  4941 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  4942 ;;		 -> cfmt(2), 
  4943 ;;  ap              2  [STACK] PTR PTR void 
  4944 ;;		 -> ap(2), ap(2), 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  llu             8  [STACK] unsigned long long 
  4947 ;;  ll              8  [STACK] long long 
  4948 ;;  f               4    0        long long 
  4949 ;;  vp              3    0        PTR void 
  4950 ;;  ct              3    0        unsigned char [3]
  4951 ;;  cp              2  [STACK] PTR unsigned char 
  4952 ;;		 -> ?_printf(2), ?_sprintf(2), STR_14(9), STR_13(12), 
  4953 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  4954 ;;		 -> STR_3(4), V(189), 
  4955 ;;  i               2    0        int 
  4956 ;;  done            2    0        int 
  4957 ;;  c               1  [STACK] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  2  [STACK] int 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/3
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:   12
  4974 ;; This function calls:
  4975 ;;		_ctoa
  4976 ;;		_dtoa
  4977 ;;		_fputc
  4978 ;;		_stoa
  4979 ;;		_xtoa
  4980 ;; This function is called by:
  4981 ;;		_vfprintf
  4982 ;; This function uses a reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text25
  4986  010000                     __ptext25:
  4987                           	opt callstack 0
  4988  010000                     _vfpfcnvrt:
  4989                           	opt callstack 0
  4990                           
  4991                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4992  010000  0E13               	movlw	19
  4993  010002  26E1               	addwf	fsr1l,f,c
  4994  010004  0E00               	movlw	0
  4995  010006  22E2               	addwfc	fsr1h,f,c
  4996                           
  4997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  4998                           ;stkvar	_fmt @ sp[(-19)+-4]
  4999                           
  5000                           ;incstack = 0
  5001  010008  0EE9               	movlw	-23
  5002  01000A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5003  010010  0EEA               	movlw	-22
  5004  010012  006F FF8F FFDA     	movff	plusw1,fsr2h
  5005  010018  006F FF7B FFF6     	movff	postinc2,tblptrl
  5006  01001E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5007  010024                     	if	0	;tblptru may be non-zero
  5008  010024                     	endif
  5009  010024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5010  010024  0E00               	movlw	low (__mediumconst shr (0+16))
  5011  010026  6EF8               	movwf	tblptru,c
  5012  010028                     	endif
  5013  010028  0008               	tblrd		*
  5014  01002A  50F5               	movf	tablat,w,c
  5015  01002C  0A25               	xorlw	37
  5016  01002E  A4D8               	btfss	status,2,c
  5017  010030  D24F               	goto	l5812
  5018                           
  5019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5020                           ;stkvar	_fmt @ sp[(-19)+-4]
  5021  010032  0EE9               	movlw	-23
  5022  010034  006F FF8F FFD9     	movff	plusw1,fsr2l
  5023  01003A  0EEA               	movlw	-22
  5024  01003C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5025  010042  2ADE               	incf	postinc2,f,c
  5026  010044  0E00               	movlw	0
  5027  010046  22DD               	addwfc	postdec2,f,c
  5028                           
  5029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5030  010048  6A22               	clrf	_width^0,c
  5031  01004A  6A23               	clrf	(_width+1)^0,c
  5032  01004C  6A26               	clrf	_flags^0,c
  5033  01004E  6A27               	clrf	(_flags+1)^0,c
  5034                           
  5035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5036  010050  6824               	setf	_prec^0,c
  5037  010052  6825               	setf	(_prec+1)^0,c
  5038                           
  5039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  5040                           ;stkvar	_fmt @ sp[(-19)+-4]
  5041  010054  0EE9               	movlw	-23
  5042  010056  006F FF8F FFD9     	movff	plusw1,fsr2l
  5043  01005C  0EEA               	movlw	-22
  5044  01005E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5045  010064  006F FF7B FFF6     	movff	postinc2,tblptrl
  5046  01006A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5047  010070                     	if	0	;tblptru may be non-zero
  5048  010070                     	endif
  5049  010070                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5050  010070  0E00               	movlw	low (__mediumconst shr (0+16))
  5051  010072  6EF8               	movwf	tblptru,c
  5052  010074                     	endif
  5053  010074  0008               	tblrd		*
  5054  010076  50F5               	movf	tablat,w,c
  5055  010078  0A63               	xorlw	99
  5056  01007A  A4D8               	btfss	status,2,c
  5057  01007C  D036               	goto	l5760
  5058                           
  5059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5060                           ;stkvar	_fmt @ sp[(-19)+-4]
  5061  01007E  0EE9               	movlw	-23
  5062  010080  006F FF8F FFD9     	movff	plusw1,fsr2l
  5063  010086  0EEA               	movlw	-22
  5064  010088  006F FF8F FFDA     	movff	plusw1,fsr2h
  5065  01008E  2ADE               	incf	postinc2,f,c
  5066  010090  0E00               	movlw	0
  5067  010092  22DD               	addwfc	postdec2,f,c
  5068                           
  5069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5070                           ;stkvar	_ap @ sp[(-19)+-6]
  5071  010094  0EE7               	movlw	-25
  5072  010096  006F FF8F FFD9     	movff	plusw1,fsr2l
  5073  01009C  0EE8               	movlw	-24
  5074  01009E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5075  0100A4  0E02               	movlw	2
  5076  0100A6  5EDE               	subwf	postinc2,f,c
  5077  0100A8  0E00               	movlw	0
  5078  0100AA  5ADD               	subwfb	postdec2,f,c
  5079  0100AC  006F FF78  F043    	movff	postinc2,btemp+10
  5080  0100B2  006F FF74  F044    	movff	postdec2,btemp+11
  5081  0100B8  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  5082  0100BE  0060  F113  FFDA   	movff	btemp+11,fsr2h
  5083  0100C4  50DF               	movf	indf2,w,c
  5084  0100C6  6E44               	movwf	(btemp+11)^0,c
  5085                           
  5086                           ;stkvar	_c @ sp[(-19)+18]
  5087  0100C8  0EFF               	movlw	-1
  5088  0100CA  0060  F113  FFE3   	movff	btemp+11,plusw1
  5089                           
  5090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5091                           ;stkvar	_c @ sp[(-19)+18]
  5092  0100D0  0EFF               	movlw	-1
  5093  0100D2  50E3               	movf	plusw1,w,c
  5094  0100D4  6EE6               	movwf	postinc1,c
  5095                           
  5096                           ;stkvar	_fp @ sp[(-20)+-2]
  5097  0100D6  0EEA               	movlw	-22
  5098  0100D8  006F FF8F FFE6     	movff	plusw1,postinc1
  5099  0100DE  006F FF8F FFE6     	movff	plusw1,postinc1
  5100  0100E4  EC4E  F094         	call	_ctoa	;wreg free
  5101  0100E8  D21D               	goto	l1722
  5102  0100EA                     l5760:
  5103                           
  5104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5105                           ;stkvar	_fmt @ sp[(-19)+-4]
  5106  0100EA  0EE9               	movlw	-23
  5107  0100EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  5108  0100F2  0EEA               	movlw	-22
  5109  0100F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5110  0100FA  006F FF7B FFF6     	movff	postinc2,tblptrl
  5111  010100  006F FF77 FFF7     	movff	postdec2,tblptrh
  5112  010106                     	if	0	;tblptru may be non-zero
  5113  010106                     	endif
  5114  010106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5115  010106  0E00               	movlw	low (__mediumconst shr (0+16))
  5116  010108  6EF8               	movwf	tblptru,c
  5117  01010A                     	endif
  5118  01010A  0008               	tblrd		*
  5119  01010C  50F5               	movf	tablat,w,c
  5120  01010E  0A64               	xorlw	100
  5121  010110  B4D8               	btfsc	status,2,c
  5122  010112  D015               	goto	u3880
  5123                           
  5124                           ;stkvar	_fmt @ sp[(-19)+-4]
  5125  010114  0EE9               	movlw	-23
  5126  010116  006F FF8F FFD9     	movff	plusw1,fsr2l
  5127  01011C  0EEA               	movlw	-22
  5128  01011E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5129  010124  006F FF7B FFF6     	movff	postinc2,tblptrl
  5130  01012A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5131  010130                     	if	0	;tblptru may be non-zero
  5132  010130                     	endif
  5133  010130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5134  010130  0E00               	movlw	low (__mediumconst shr (0+16))
  5135  010132  6EF8               	movwf	tblptru,c
  5136  010134                     	endif
  5137  010134  0008               	tblrd		*
  5138  010136  50F5               	movf	tablat,w,c
  5139  010138  0A69               	xorlw	105
  5140  01013A  A4D8               	btfss	status,2,c
  5141  01013C  D075               	goto	l5772
  5142  01013E                     u3880:
  5143                           
  5144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5145                           ;stkvar	_fmt @ sp[(-19)+-4]
  5146  01013E  0EE9               	movlw	-23
  5147  010140  006F FF8F FFD9     	movff	plusw1,fsr2l
  5148  010146  0EEA               	movlw	-22
  5149  010148  006F FF8F FFDA     	movff	plusw1,fsr2h
  5150  01014E  2ADE               	incf	postinc2,f,c
  5151  010150  0E00               	movlw	0
  5152  010152  22DD               	addwfc	postdec2,f,c
  5153                           
  5154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5155                           ;stkvar	_ap @ sp[(-19)+-6]
  5156  010154  0EE7               	movlw	-25
  5157  010156  006F FF8F FFD9     	movff	plusw1,fsr2l
  5158  01015C  0EE8               	movlw	-24
  5159  01015E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5160  010164  0E02               	movlw	2
  5161  010166  5EDE               	subwf	postinc2,f,c
  5162  010168  0E00               	movlw	0
  5163  01016A  5ADD               	subwfb	postdec2,f,c
  5164  01016C  006F FF78  F043    	movff	postinc2,btemp+10
  5165  010172  006F FF74  F044    	movff	postdec2,btemp+11
  5166  010178  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  5167  01017E  0060  F113  FFDA   	movff	btemp+11,fsr2h
  5168  010184  006F FF78  F043    	movff	postinc2,btemp+10
  5169  01018A  006F FF74  F044    	movff	postdec2,btemp+11
  5170                           
  5171                           ;stkvar	_ll @ sp[(-19)+8]
  5172  010190  0EF5               	movlw	-11
  5173  010192  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5174  010198  0EF6               	movlw	-10
  5175  01019A  0060  F113  FFE3   	movff	btemp+11,plusw1
  5176  0101A0  6A39               	clrf	btemp^0,c
  5177  0101A2  BEE3               	btfsc	plusw1,7,c
  5178  0101A4  6839               	setf	btemp^0,c
  5179  0101A6  0EF7               	movlw	-9
  5180  0101A8  0060  F0E7  FFE3   	movff	btemp,plusw1
  5181  0101AE  0EF8               	movlw	-8
  5182  0101B0  0060  F0E7  FFE3   	movff	btemp,plusw1
  5183  0101B6  0EF9               	movlw	-7
  5184  0101B8  0060  F0E7  FFE3   	movff	btemp,plusw1
  5185  0101BE  0EFA               	movlw	-6
  5186  0101C0  0060  F0E7  FFE3   	movff	btemp,plusw1
  5187  0101C6  0EFB               	movlw	-5
  5188  0101C8  0060  F0E7  FFE3   	movff	btemp,plusw1
  5189  0101CE  0EFC               	movlw	-4
  5190  0101D0  0060  F0E7  FFE3   	movff	btemp,plusw1
  5191                           
  5192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  5193                           ;stkvar	_ll @ sp[(-19)+8]
  5194  0101D6  50E1               	movf	fsr1l,w,c
  5195  0101D8  0FF5               	addlw	-11
  5196  0101DA  6ED9               	movwf	fsr2l,c
  5197  0101DC  50E2               	movf	fsr1h,w,c
  5198  0101DE  6EDA               	movwf	fsr2h,c
  5199  0101E0  0EFF               	movlw	255
  5200  0101E2  22DA               	addwfc	fsr2h,f,c
  5201  0101E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  0101EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  0101F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5204  0101F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5205  0101FC  006F FF7B FFE6     	movff	postinc2,postinc1
  5206  010202  006F FF7B FFE6     	movff	postinc2,postinc1
  5207  010208  006F FF7B FFE6     	movff	postinc2,postinc1
  5208  01020E  006F FF7B FFE6     	movff	postinc2,postinc1
  5209                           
  5210                           ;stkvar	_fp @ sp[(-27)+-2]
  5211  010214  0EE3               	movlw	-29
  5212  010216  006F FF8F FFE6     	movff	plusw1,postinc1
  5213  01021C  006F FF8F FFE6     	movff	plusw1,postinc1
  5214  010222  EC97  F082         	call	_dtoa	;wreg free
  5215  010226  D17E               	goto	l1722
  5216  010228                     l5772:
  5217                           
  5218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5219                           ;stkvar	_fmt @ sp[(-19)+-4]
  5220  010228  0EE9               	movlw	-23
  5221  01022A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5222  010230  0EEA               	movlw	-22
  5223  010232  006F FF8F FFDA     	movff	plusw1,fsr2h
  5224  010238  006F FF7B FFF6     	movff	postinc2,tblptrl
  5225  01023E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5226  010244                     	if	0	;tblptru may be non-zero
  5227  010244                     	endif
  5228  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5229  010244  0E00               	movlw	low (__mediumconst shr (0+16))
  5230  010246  6EF8               	movwf	tblptru,c
  5231  010248                     	endif
  5232  010248  0008               	tblrd		*
  5233  01024A  50F5               	movf	tablat,w,c
  5234  01024C  0A73               	xorlw	115
  5235  01024E  A4D8               	btfss	status,2,c
  5236  010250  D042               	goto	l5782
  5237                           
  5238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  5239                           ;stkvar	_fmt @ sp[(-19)+-4]
  5240  010252  0EE9               	movlw	-23
  5241  010254  006F FF8F FFD9     	movff	plusw1,fsr2l
  5242  01025A  0EEA               	movlw	-22
  5243  01025C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5244  010262  2ADE               	incf	postinc2,f,c
  5245  010264  0E00               	movlw	0
  5246  010266  22DD               	addwfc	postdec2,f,c
  5247                           
  5248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5249                           ;stkvar	_ap @ sp[(-19)+-6]
  5250  010268  0EE7               	movlw	-25
  5251  01026A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5252  010270  0EE8               	movlw	-24
  5253  010272  006F FF8F FFDA     	movff	plusw1,fsr2h
  5254  010278  0E02               	movlw	2
  5255  01027A  5EDE               	subwf	postinc2,f,c
  5256  01027C  0E00               	movlw	0
  5257  01027E  5ADD               	subwfb	postdec2,f,c
  5258  010280  006F FF78  F043    	movff	postinc2,btemp+10
  5259  010286  006F FF74  F044    	movff	postdec2,btemp+11
  5260  01028C  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  5261  010292  0060  F113  FFDA   	movff	btemp+11,fsr2h
  5262  010298  006F FF78  F043    	movff	postinc2,btemp+10
  5263  01029E  006F FF74  F044    	movff	postdec2,btemp+11
  5264                           
  5265                           ;stkvar	_cp @ sp[(-19)+16]
  5266  0102A4  0EFE               	movlw	-2
  5267  0102A6  0060  F113  FFE3   	movff	btemp+11,plusw1
  5268  0102AC  0EFD               	movlw	-3
  5269  0102AE  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5270                           
  5271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  5272                           ;stkvar	_cp @ sp[(-19)+16]
  5273  0102B4  0EFD               	movlw	-3
  5274  0102B6  006F FF8F FFE6     	movff	plusw1,postinc1
  5275  0102BC  006F FF8F FFE6     	movff	plusw1,postinc1
  5276                           
  5277                           ;stkvar	_fp @ sp[(-21)+-2]
  5278  0102C2  0EE9               	movlw	-23
  5279  0102C4  006F FF8F FFE6     	movff	plusw1,postinc1
  5280  0102CA  006F FF8F FFE6     	movff	plusw1,postinc1
  5281  0102D0  EC7B  F089         	call	_stoa	;wreg free
  5282  0102D4  D127               	goto	l1722
  5283  0102D6                     l5782:
  5284                           
  5285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  5286                           ;stkvar	_fmt @ sp[(-19)+-4]
  5287  0102D6  0EE9               	movlw	-23
  5288  0102D8  006F FF8F FFD9     	movff	plusw1,fsr2l
  5289  0102DE  0EEA               	movlw	-22
  5290  0102E0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5291  0102E6  006F FF7B FFF6     	movff	postinc2,tblptrl
  5292  0102EC  006F FF77 FFF7     	movff	postdec2,tblptrh
  5293  0102F2                     	if	0	;tblptru may be non-zero
  5294  0102F2                     	endif
  5295  0102F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5296  0102F2  0E00               	movlw	low (__mediumconst shr (0+16))
  5297  0102F4  6EF8               	movwf	tblptru,c
  5298  0102F6                     	endif
  5299  0102F6  0008               	tblrd		*
  5300  0102F8  50F5               	movf	tablat,w,c
  5301  0102FA  0A78               	xorlw	120
  5302  0102FC  B4D8               	btfsc	status,2,c
  5303  0102FE  D015               	goto	u3910
  5304                           
  5305                           ;stkvar	_fmt @ sp[(-19)+-4]
  5306  010300  0EE9               	movlw	-23
  5307  010302  006F FF8F FFD9     	movff	plusw1,fsr2l
  5308  010308  0EEA               	movlw	-22
  5309  01030A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5310  010310  006F FF7B FFF6     	movff	postinc2,tblptrl
  5311  010316  006F FF77 FFF7     	movff	postdec2,tblptrh
  5312  01031C                     	if	0	;tblptru may be non-zero
  5313  01031C                     	endif
  5314  01031C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5315  01031C  0E00               	movlw	low (__mediumconst shr (0+16))
  5316  01031E  6EF8               	movwf	tblptru,c
  5317  010320                     	endif
  5318  010320  0008               	tblrd		*
  5319  010322  50F5               	movf	tablat,w,c
  5320  010324  0A58               	xorlw	88
  5321  010326  A4D8               	btfss	status,2,c
  5322  010328  D094               	goto	l5796
  5323  01032A                     u3910:
  5324                           
  5325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  5326                           ;stkvar	_fmt @ sp[(-19)+-4]
  5327  01032A  0EE9               	movlw	-23
  5328  01032C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5329  010332  0EEA               	movlw	-22
  5330  010334  006F FF8F FFDA     	movff	plusw1,fsr2h
  5331  01033A  006F FF7B FFF6     	movff	postinc2,tblptrl
  5332  010340  006F FF77 FFF7     	movff	postdec2,tblptrh
  5333  010346                     	if	0	;tblptru may be non-zero
  5334  010346                     	endif
  5335  010346                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5336  010346  0E00               	movlw	low (__mediumconst shr (0+16))
  5337  010348  6EF8               	movwf	tblptru,c
  5338  01034A                     	endif
  5339                           
  5340                           ;stkvar	_c @ sp[(-19)+18]
  5341  01034A  0008               	tblrd		*
  5342  01034C  0EFF               	movlw	-1
  5343  01034E  006F FFD7 FFE3     	movff	tablat,plusw1
  5344                           
  5345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  5346                           ;stkvar	_fmt @ sp[(-19)+-4]
  5347  010354  0EE9               	movlw	-23
  5348  010356  006F FF8F FFD9     	movff	plusw1,fsr2l
  5349  01035C  0EEA               	movlw	-22
  5350  01035E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5351  010364  2ADE               	incf	postinc2,f,c
  5352  010366  0E00               	movlw	0
  5353  010368  22DD               	addwfc	postdec2,f,c
  5354                           
  5355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  5356                           ;stkvar	_ap @ sp[(-19)+-6]
  5357  01036A  0EE7               	movlw	-25
  5358  01036C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5359  010372  0EE8               	movlw	-24
  5360  010374  006F FF8F FFDA     	movff	plusw1,fsr2h
  5361  01037A  0E02               	movlw	2
  5362  01037C  5EDE               	subwf	postinc2,f,c
  5363  01037E  0E00               	movlw	0
  5364  010380  5ADD               	subwfb	postdec2,f,c
  5365  010382  006F FF78  F043    	movff	postinc2,btemp+10
  5366  010388  006F FF74  F044    	movff	postdec2,btemp+11
  5367  01038E  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  5368  010394  0060  F113  FFDA   	movff	btemp+11,fsr2h
  5369  01039A  006F FF78  F043    	movff	postinc2,btemp+10
  5370  0103A0  006F FF74  F044    	movff	postdec2,btemp+11
  5371  0103A6  5043               	movf	(btemp+10)^0,w,c
  5372  0103A8  6E49               	movwf	(btemp+16)^0,c
  5373  0103AA  5044               	movf	(btemp+11)^0,w,c
  5374  0103AC  6E4A               	movwf	(btemp+17)^0,c
  5375  0103AE  6A4B               	clrf	(btemp+18)^0,c
  5376  0103B0  6A4C               	clrf	(btemp+19)^0,c
  5377  0103B2  6A4D               	clrf	(btemp+20)^0,c
  5378  0103B4  6A4E               	clrf	(btemp+21)^0,c
  5379  0103B6  6A4F               	clrf	(btemp+22)^0,c
  5380  0103B8  6A50               	clrf	(btemp+23)^0,c
  5381                           
  5382                           ;stkvar	_llu @ sp[(-19)+0]
  5383  0103BA  0EED               	movlw	-19
  5384  0103BC  0060  F127  FFE3   	movff	btemp+16,plusw1
  5385  0103C2  0EEE               	movlw	-18
  5386  0103C4  0060  F12B  FFE3   	movff	btemp+17,plusw1
  5387  0103CA  0EEF               	movlw	-17
  5388  0103CC  0060  F12F  FFE3   	movff	btemp+18,plusw1
  5389  0103D2  0EF0               	movlw	-16
  5390  0103D4  0060  F133  FFE3   	movff	btemp+19,plusw1
  5391  0103DA  0EF1               	movlw	-15
  5392  0103DC  0060  F137  FFE3   	movff	btemp+20,plusw1
  5393  0103E2  0EF2               	movlw	-14
  5394  0103E4  0060  F13B  FFE3   	movff	btemp+21,plusw1
  5395  0103EA  0EF3               	movlw	-13
  5396  0103EC  0060  F13F  FFE3   	movff	btemp+22,plusw1
  5397  0103F2  0EF4               	movlw	-12
  5398  0103F4  0060  F143  FFE3   	movff	btemp+23,plusw1
  5399                           
  5400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  5401                           ;stkvar	_c @ sp[(-19)+18]
  5402  0103FA  0EFF               	movlw	-1
  5403  0103FC  50E3               	movf	plusw1,w,c
  5404  0103FE  6EE6               	movwf	postinc1,c
  5405                           
  5406                           ;stkvar	_llu @ sp[(-20)+0]
  5407  010400  50E1               	movf	fsr1l,w,c
  5408  010402  0FEC               	addlw	-20
  5409  010404  6ED9               	movwf	fsr2l,c
  5410  010406  50E2               	movf	fsr1h,w,c
  5411  010408  6EDA               	movwf	fsr2h,c
  5412  01040A  0EFF               	movlw	255
  5413  01040C  22DA               	addwfc	fsr2h,f,c
  5414  01040E  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  010414  006F FF7B FFE6     	movff	postinc2,postinc1
  5416  01041A  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  010420  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  010426  006F FF7B FFE6     	movff	postinc2,postinc1
  5419  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5420  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5421  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5422                           
  5423                           ;stkvar	_fp @ sp[(-28)+-2]
  5424  01043E  0EE2               	movlw	-30
  5425  010440  006F FF8F FFE6     	movff	plusw1,postinc1
  5426  010446  006F FF8F FFE6     	movff	plusw1,postinc1
  5427  01044C  ECC2  F084         	call	_xtoa	;wreg free
  5428  010450  D069               	goto	l1722
  5429  010452                     l5796:
  5430                           
  5431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  5432                           ;stkvar	_fmt @ sp[(-19)+-4]
  5433  010452  0EE9               	movlw	-23
  5434  010454  006F FF8F FFD9     	movff	plusw1,fsr2l
  5435  01045A  0EEA               	movlw	-22
  5436  01045C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5437  010462  006F FF7B FFF6     	movff	postinc2,tblptrl
  5438  010468  006F FF77 FFF7     	movff	postdec2,tblptrh
  5439  01046E                     	if	0	;tblptru may be non-zero
  5440  01046E                     	endif
  5441  01046E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5442  01046E  0E00               	movlw	low (__mediumconst shr (0+16))
  5443  010470  6EF8               	movwf	tblptru,c
  5444  010472                     	endif
  5445  010472  0008               	tblrd		*
  5446  010474  50F5               	movf	tablat,w,c
  5447  010476  0A25               	xorlw	37
  5448  010478  A4D8               	btfss	status,2,c
  5449  01047A  D01A               	goto	l5806
  5450                           
  5451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  5452                           ;stkvar	_fmt @ sp[(-19)+-4]
  5453  01047C  0EE9               	movlw	-23
  5454  01047E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5455  010484  0EEA               	movlw	-22
  5456  010486  006F FF8F FFDA     	movff	plusw1,fsr2h
  5457  01048C  2ADE               	incf	postinc2,f,c
  5458  01048E  0E00               	movlw	0
  5459  010490  22DD               	addwfc	postdec2,f,c
  5460                           
  5461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  5462                           ;stkvar	_fp @ sp[(-19)+-2]
  5463  010492  0EEB               	movlw	-21
  5464  010494  006F FF8F FFE6     	movff	plusw1,postinc1
  5465  01049A  006F FF8F FFE6     	movff	plusw1,postinc1
  5466  0104A0  0E25               	movlw	37
  5467  0104A2  6EE6               	movwf	postinc1,c
  5468  0104A4  0E00               	movlw	0
  5469  0104A6  6EE6               	movwf	postinc1,c
  5470  0104A8  ECDA  F08E         	call	_fputc	;wreg free
  5471  0104AC                     l5802:
  5472                           
  5473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  5474  0104AC  0E01               	movlw	1
  5475  0104AE  D00C               	goto	L2
  5476  0104B0                     l5806:
  5477                           
  5478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  5479                           ;stkvar	_fmt @ sp[(-19)+-4]
  5480  0104B0  0EE9               	movlw	-23
  5481  0104B2  006F FF8F FFD9     	movff	plusw1,fsr2l
  5482  0104B8  0EEA               	movlw	-22
  5483  0104BA  006F FF8F FFDA     	movff	plusw1,fsr2h
  5484  0104C0  2ADE               	incf	postinc2,f,c
  5485  0104C2  0E00               	movlw	0
  5486  0104C4  22DD               	addwfc	postdec2,f,c
  5487                           
  5488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  5489  0104C6  0E00               	movlw	0
  5490  0104C8                     L2:
  5491  0104C8  6E39               	movwf	btemp^0,c
  5492  0104CA  0E00               	movlw	0
  5493  0104CC  6E3A               	movwf	(btemp+1)^0,c
  5494  0104CE  D02A               	goto	l1722
  5495  0104D0                     l5812:
  5496                           
  5497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  5498                           ;stkvar	_fp @ sp[(-19)+-2]
  5499  0104D0  0EEB               	movlw	-21
  5500  0104D2  006F FF8F FFE6     	movff	plusw1,postinc1
  5501  0104D8  006F FF8F FFE6     	movff	plusw1,postinc1
  5502                           
  5503                           ;stkvar	_fmt @ sp[(-21)+-4]
  5504  0104DE  0EE7               	movlw	-25
  5505  0104E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5506  0104E6  0EE8               	movlw	-24
  5507  0104E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5508  0104EE  006F FF7B FFF6     	movff	postinc2,tblptrl
  5509  0104F4  006F FF77 FFF7     	movff	postdec2,tblptrh
  5510  0104FA                     	if	0	;tblptru may be non-zero
  5511  0104FA                     	endif
  5512  0104FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5513  0104FA  0E00               	movlw	low (__mediumconst shr (0+16))
  5514  0104FC  6EF8               	movwf	tblptru,c
  5515  0104FE                     	endif
  5516  0104FE  0008               	tblrd		*
  5517  010500  50F5               	movf	tablat,w,c
  5518  010502  6EE6               	movwf	postinc1,c
  5519  010504  0E00               	movlw	0
  5520  010506  6EE6               	movwf	postinc1,c
  5521  010508  ECDA  F08E         	call	_fputc	;wreg free
  5522                           
  5523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  5524                           ;stkvar	_fmt @ sp[(-19)+-4]
  5525  01050C  0EE9               	movlw	-23
  5526  01050E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5527  010514  0EEA               	movlw	-22
  5528  010516  006F FF8F FFDA     	movff	plusw1,fsr2h
  5529  01051C  2ADE               	incf	postinc2,f,c
  5530  01051E  0E00               	movlw	0
  5531  010520  22DD               	addwfc	postdec2,f,c
  5532  010522  D7C4               	goto	l5802
  5533  010524                     l1722:
  5534                           
  5535                           ; _vfpfcnvrt: autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  5536  010524  0EE7               	movlw	231
  5537  010526  26E1               	addwf	fsr1l,f,c
  5538  010528  0EFF               	movlw	255
  5539  01052A  22E2               	addwfc	fsr1h,f,c
  5540  01052C  0012               	return		;funcret
  5541  01052E                     __end_of_vfpfcnvrt:
  5542                           	opt callstack 0
  5543                           
  5544 ;; *************** function _xtoa *****************
  5545 ;; Defined at:
  5546 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5549 ;;		 -> f(6), NULL(0), 
  5550 ;;  d               8  [STACK] unsigned long long 
  5551 ;;  x               1  [STACK] unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  n               8  [STACK] unsigned long long 
  5554 ;;  c               2  [STACK] int 
  5555 ;;  i               2  [STACK] int 
  5556 ;;  w               2  [STACK] int 
  5557 ;;  p               2  [STACK] int 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  2  [STACK] int 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/3
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:   11
  5574 ;; This function calls:
  5575 ;;		_isalpha
  5576 ;;		_isupper
  5577 ;;		_pad
  5578 ;;		_toupper
  5579 ;; This function is called by:
  5580 ;;		_vfpfcnvrt
  5581 ;; This function uses a reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text26
  5585  010984                     __ptext26:
  5586                           	opt callstack 0
  5587  010984                     _xtoa:
  5588                           	opt callstack 0
  5589                           
  5590                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  5591  010984  0E14               	movlw	20
  5592  010986  26E1               	addwf	fsr1l,f,c
  5593  010988  0E00               	movlw	0
  5594  01098A  22E2               	addwfc	fsr1h,f,c
  5595                           
  5596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  5597                           
  5598                           ;incstack = 0
  5599  01098C  AE25               	btfss	(_prec+1)^0,7,c
  5600                           
  5601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  5602  01098E  9226               	bcf	_flags^0,1,c
  5603                           
  5604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  5605  010990  BE25               	btfsc	(_prec+1)^0,7,c
  5606  010992  D005               	goto	u3680
  5607  010994  5025               	movf	(_prec+1)^0,w,c
  5608  010996  E110               	bnz	l5678
  5609  010998  0424               	decf	_prec^0,w,c
  5610  01099A  B0D8               	btfsc	status,0,c
  5611  01099C  D00D               	goto	l5678
  5612  01099E                     u3680:
  5613  01099E  0E01               	movlw	1
  5614  0109A0  6E43               	movwf	(btemp+10)^0,c
  5615  0109A2  0E00               	movlw	0
  5616  0109A4  6E44               	movwf	(btemp+11)^0,c
  5617                           
  5618                           ;stkvar	_p @ sp[(-20)+18]
  5619  0109A6  0EFE               	movlw	-2
  5620  0109A8  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5621  0109AE  0EFF               	movlw	-1
  5622  0109B0  0060  F113  FFE3   	movff	btemp+11,plusw1
  5623  0109B6  D008               	goto	l1694
  5624  0109B8                     l5678:
  5625                           
  5626                           ;stkvar	_p @ sp[(-20)+18]
  5627  0109B8  0EFE               	movlw	-2
  5628  0109BA  0060  F093  FFE3   	movff	_prec,plusw1
  5629  0109C0  0EFF               	movlw	-1
  5630  0109C2  0060  F097  FFE3   	movff	_prec+1,plusw1
  5631  0109C8                     l1694:
  5632                           
  5633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  5634                           ;stkvar	_w @ sp[(-20)+16]
  5635  0109C8  0EFC               	movlw	-4
  5636  0109CA  0060  F08B  FFE3   	movff	_width,plusw1
  5637  0109D0  0EFD               	movlw	-3
  5638  0109D2  0060  F08F  FFE3   	movff	_width+1,plusw1
  5639                           
  5640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  5641  0109D8  A826               	btfss	_flags^0,4,c
  5642  0109DA  D00B               	goto	l5684
  5643                           
  5644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  5645                           ;stkvar	_w @ sp[(-20)+16]
  5646  0109DC  50E1               	movf	fsr1l,w,c
  5647  0109DE  0FFC               	addlw	-4
  5648  0109E0  6ED9               	movwf	fsr2l,c
  5649  0109E2  50E2               	movf	fsr1h,w,c
  5650  0109E4  6EDA               	movwf	fsr2h,c
  5651  0109E6  0EFF               	movlw	255
  5652  0109E8  22DA               	addwfc	fsr2h,f,c
  5653  0109EA  0EFE               	movlw	254
  5654  0109EC  26DE               	addwf	postinc2,f,c
  5655  0109EE  0EFF               	movlw	255
  5656  0109F0  22DD               	addwfc	postdec2,f,c
  5657  0109F2                     l5684:
  5658                           
  5659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  5660                           ;stkvar	_d @ sp[(-20)+-10]
  5661  0109F2  0EE2               	movlw	226
  5662  0109F4  24E1               	addwf	fsr1l,w,c
  5663  0109F6  6ED9               	movwf	fsr2l,c
  5664  0109F8  0EFF               	movlw	255
  5665  0109FA  20E2               	addwfc	fsr1h,w,c
  5666  0109FC  6EDA               	movwf	fsr2h,c
  5667                           
  5668                           ;stkvar	_n @ sp[(-20)+4]
  5669  0109FE  0E08               	movlw	8
  5670  010A00  6E39               	movwf	btemp^0,c
  5671  010A02  0EF0               	movlw	-16
  5672  010A04                     us370999:
  5673  010A04  006F FF7B FFE3     	movff	postinc2,plusw1
  5674  010A0A  28E8               	incf	wreg,w,c
  5675  010A0C  2E39               	decfsz	btemp^0,f,c
  5676  010A0E  D7FA               	bra	us370999
  5677                           
  5678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  5679  010A10  0E1F               	movlw	31
  5680  010A12  6E43               	movwf	(btemp+10)^0,c
  5681  010A14  0E00               	movlw	0
  5682  010A16  6E44               	movwf	(btemp+11)^0,c
  5683                           
  5684                           ;stkvar	_i @ sp[(-20)+14]
  5685  010A18  0EFA               	movlw	-6
  5686  010A1A  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5687  010A20  0EFB               	movlw	-5
  5688  010A22  0060  F113  FFE3   	movff	btemp+11,plusw1
  5689                           
  5690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  5691  010A28  0100               	movlb	0	; () banked
  5692  010A2A  6BA5               	clrf	(_dbuf+31)& (0+255),b
  5693                           
  5694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5695  010A2C  D0E8               	goto	l5722
  5696  010A2E                     l5690:
  5697                           
  5698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  5699                           ;stkvar	_i @ sp[(-20)+14]
  5700  010A2E  50E1               	movf	fsr1l,w,c
  5701  010A30  0FFA               	addlw	-6
  5702  010A32  6ED9               	movwf	fsr2l,c
  5703  010A34  50E2               	movf	fsr1h,w,c
  5704  010A36  6EDA               	movwf	fsr2h,c
  5705  010A38  0EFF               	movlw	255
  5706  010A3A  22DA               	addwfc	fsr2h,f,c
  5707  010A3C  06DE               	decf	postinc2,f,c
  5708  010A3E  0E00               	movlw	0
  5709  010A40  5ADD               	subwfb	postdec2,f,c
  5710                           
  5711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  5712                           ;stkvar	_n @ sp[(-20)+4]
  5713  010A42  0EF0               	movlw	-16
  5714  010A44  006F FF8C  F043    	movff	plusw1,btemp+10
  5715  010A4A  0EF1               	movlw	-15
  5716  010A4C  006F FF8C  F044    	movff	plusw1,btemp+11
  5717  010A52  0E0F               	movlw	15
  5718  010A54  1643               	andwf	(btemp+10)^0,f,c
  5719  010A56  0E00               	movlw	0
  5720  010A58  1644               	andwf	(btemp+11)^0,f,c
  5721                           
  5722                           ;stkvar	_c @ sp[(-20)+12]
  5723  010A5A  0EF8               	movlw	-8
  5724  010A5C  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5725  010A62  0EF9               	movlw	-7
  5726  010A64  0060  F113  FFE3   	movff	btemp+11,plusw1
  5727                           
  5728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  5729                           ;stkvar	_c @ sp[(-20)+12]
  5730  010A6A  0EF9               	movlw	-7
  5731  010A6C  BEE3               	btfsc	plusw1,7,c
  5732  010A6E  D00F               	goto	l5698
  5733  010A70  0EF9               	movlw	-7
  5734  010A72  50E3               	movf	plusw1,w,c
  5735  010A74  E108               	bnz	u3710
  5736  010A76  0EF8               	movlw	-8
  5737  010A78  006F FF8C  F039    	movff	plusw1,btemp
  5738  010A7E  0E0A               	movlw	10
  5739  010A80  5E39               	subwf	btemp^0,f,c
  5740  010A82  A0D8               	btfss	status,0,c
  5741  010A84  D004               	goto	l5698
  5742  010A86                     u3710:
  5743                           
  5744                           ;stkvar	_c @ sp[(-20)+12]
  5745  010A86  0EF8               	movlw	-8
  5746  010A88  50E3               	movf	plusw1,w,c
  5747  010A8A  0F57               	addlw	87
  5748  010A8C  D003               	goto	L3
  5749  010A8E                     l5698:
  5750                           
  5751                           ;stkvar	_c @ sp[(-20)+12]
  5752  010A8E  0EF8               	movlw	-8
  5753  010A90  50E3               	movf	plusw1,w,c
  5754  010A92  0F30               	addlw	48
  5755  010A94                     L3:
  5756  010A94  6E43               	movwf	(btemp+10)^0,c
  5757  010A96  0EF9               	movlw	-7
  5758  010A98  006F FF8C  F044    	movff	plusw1,btemp+11
  5759  010A9E  0E00               	movlw	0
  5760  010AA0  2244               	addwfc	(btemp+11)^0,f,c
  5761                           
  5762                           ;stkvar	_c @ sp[(-20)+12]
  5763  010AA2  0EF8               	movlw	-8
  5764  010AA4  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5765  010AAA  0EF9               	movlw	-7
  5766  010AAC  0060  F113  FFE3   	movff	btemp+11,plusw1
  5767  010AB2  0EBF               	movlw	191
  5768  010AB4  6E43               	movwf	(btemp+10)^0,c
  5769  010AB6  0EFF               	movlw	255
  5770  010AB8  6E44               	movwf	(btemp+11)^0,c
  5771                           
  5772                           ;stkvar	_x @ sp[(-20)+-11]
  5773  010ABA  0EE1               	movlw	-31
  5774  010ABC  50E3               	movf	plusw1,w,c
  5775  010ABE  6E41               	movwf	(btemp+8)^0,c
  5776  010AC0  6A42               	clrf	(btemp+9)^0,c
  5777  010AC2  5043               	movf	(btemp+10)^0,w,c
  5778  010AC4  2641               	addwf	(btemp+8)^0,f,c
  5779  010AC6  5044               	movf	(btemp+11)^0,w,c
  5780  010AC8  2242               	addwfc	(btemp+9)^0,f,c
  5781  010ACA  5042               	movf	(btemp+9)^0,w,c
  5782  010ACC  E106               	bnz	u3720
  5783  010ACE  0E1A               	movlw	26
  5784  010AD0  5C41               	subwf	(btemp+8)^0,w,c
  5785  010AD2  B0D8               	btfsc	status,0,c
  5786  010AD4  D002               	goto	u3720
  5787  010AD6  0E01               	movlw	1
  5788  010AD8  D001               	goto	u3730
  5789  010ADA                     u3720:
  5790  010ADA  0E00               	movlw	0
  5791  010ADC                     u3730:
  5792  010ADC  6E43               	movwf	(btemp+10)^0,c
  5793  010ADE  6A44               	clrf	(btemp+11)^0,c
  5794                           
  5795                           ;stkvar	_xtoa$3917 @ sp[(-20)+2]
  5796  010AE0  0EEE               	movlw	-18
  5797  010AE2  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5798  010AE8  0EEF               	movlw	-17
  5799  010AEA  0060  F113  FFE3   	movff	btemp+11,plusw1
  5800                           
  5801                           ;stkvar	_xtoa$3917 @ sp[(-20)+2]
  5802  010AF0  0EEE               	movlw	-18
  5803  010AF2  006F FF8C  F039    	movff	plusw1,btemp
  5804  010AF8  0EEF               	movlw	-17
  5805  010AFA  50E3               	movf	plusw1,w,c
  5806  010AFC  1039               	iorwf	btemp^0,w,c
  5807  010AFE  B4D8               	btfsc	status,2,c
  5808  010B00  D041               	goto	l5714
  5809  010B02  0E9F               	movlw	159
  5810  010B04  6E43               	movwf	(btemp+10)^0,c
  5811  010B06  0EFF               	movlw	255
  5812  010B08  6E44               	movwf	(btemp+11)^0,c
  5813                           
  5814                           ;stkvar	_c @ sp[(-20)+12]
  5815  010B0A  0EF8               	movlw	-8
  5816  010B0C  006F FF8C  F041    	movff	plusw1,btemp+8
  5817  010B12  0EF9               	movlw	-7
  5818  010B14  006F FF8C  F042    	movff	plusw1,btemp+9
  5819  010B1A  0E20               	movlw	32
  5820  010B1C  1241               	iorwf	(btemp+8)^0,f,c
  5821  010B1E  0E00               	movlw	0
  5822  010B20  1242               	iorwf	(btemp+9)^0,f,c
  5823  010B22  5043               	movf	(btemp+10)^0,w,c
  5824  010B24  2641               	addwf	(btemp+8)^0,f,c
  5825  010B26  5044               	movf	(btemp+11)^0,w,c
  5826  010B28  2242               	addwfc	(btemp+9)^0,f,c
  5827  010B2A  5042               	movf	(btemp+9)^0,w,c
  5828  010B2C  E106               	bnz	u3750
  5829  010B2E  0E1A               	movlw	26
  5830  010B30  5C41               	subwf	(btemp+8)^0,w,c
  5831  010B32  B0D8               	btfsc	status,0,c
  5832  010B34  D002               	goto	u3750
  5833  010B36  0E01               	movlw	1
  5834  010B38  D001               	goto	u3760
  5835  010B3A                     u3750:
  5836  010B3A  0E00               	movlw	0
  5837  010B3C                     u3760:
  5838  010B3C  6E43               	movwf	(btemp+10)^0,c
  5839  010B3E  6A44               	clrf	(btemp+11)^0,c
  5840                           
  5841                           ;stkvar	_xtoa$3918 @ sp[(-20)+0]
  5842  010B40  0EEC               	movlw	-20
  5843  010B42  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5844  010B48  0EED               	movlw	-19
  5845  010B4A  0060  F113  FFE3   	movff	btemp+11,plusw1
  5846                           
  5847                           ;stkvar	_xtoa$3918 @ sp[(-20)+0]
  5848  010B50  0EEC               	movlw	-20
  5849  010B52  006F FF8C  F039    	movff	plusw1,btemp
  5850  010B58  0EED               	movlw	-19
  5851  010B5A  50E3               	movf	plusw1,w,c
  5852  010B5C  1039               	iorwf	btemp^0,w,c
  5853  010B5E  B4D8               	btfsc	status,2,c
  5854  010B60  D011               	goto	l5714
  5855                           
  5856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  5857                           ;stkvar	_c @ sp[(-20)+12]
  5858  010B62  0EF8               	movlw	-8
  5859  010B64  006F FF8F FFE6     	movff	plusw1,postinc1
  5860  010B6A  006F FF8F FFE6     	movff	plusw1,postinc1
  5861  010B70  EC0C  F094         	call	_toupper	;wreg free
  5862                           
  5863                           ;stkvar	_c @ sp[(-20)+12]
  5864  010B74  0EF8               	movlw	-8
  5865  010B76  0060  F0E7  FFE3   	movff	btemp,plusw1
  5866  010B7C  0EF9               	movlw	-7
  5867  010B7E  0060  F0EB  FFE3   	movff	btemp+1,plusw1
  5868  010B84                     l5714:
  5869                           
  5870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  5871                           ;stkvar	_c @ sp[(-20)+12]
  5872                           ;stkvar	_i @ sp[(-20)+14]
  5873  010B84  0EFA               	movlw	-6
  5874  010B86  006F FF8C  F044    	movff	plusw1,btemp+11
  5875  010B8C  5044               	movf	(btemp+11)^0,w,c
  5876  010B8E  0F86               	addlw	low _dbuf
  5877  010B90  6ED9               	movwf	fsr2l,c
  5878  010B92  6ADA               	clrf	fsr2h,c
  5879  010B94  0EF8               	movlw	-8
  5880  010B96  006F FF8F FFDF     	movff	plusw1,indf2
  5881                           
  5882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  5883                           ;stkvar	_p @ sp[(-20)+18]
  5884  010B9C  50E1               	movf	fsr1l,w,c
  5885  010B9E  0FFE               	addlw	-2
  5886  010BA0  6ED9               	movwf	fsr2l,c
  5887  010BA2  50E2               	movf	fsr1h,w,c
  5888  010BA4  6EDA               	movwf	fsr2h,c
  5889  010BA6  0EFF               	movlw	255
  5890  010BA8  22DA               	addwfc	fsr2h,f,c
  5891  010BAA  06DE               	decf	postinc2,f,c
  5892  010BAC  0E00               	movlw	0
  5893  010BAE  5ADD               	subwfb	postdec2,f,c
  5894                           
  5895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  5896                           ;stkvar	_w @ sp[(-20)+16]
  5897  010BB0  50E1               	movf	fsr1l,w,c
  5898  010BB2  0FFC               	addlw	-4
  5899  010BB4  6ED9               	movwf	fsr2l,c
  5900  010BB6  50E2               	movf	fsr1h,w,c
  5901  010BB8  6EDA               	movwf	fsr2h,c
  5902  010BBA  0EFF               	movlw	255
  5903  010BBC  22DA               	addwfc	fsr2h,f,c
  5904  010BBE  06DE               	decf	postinc2,f,c
  5905  010BC0  0E00               	movlw	0
  5906  010BC2  5ADD               	subwfb	postdec2,f,c
  5907                           
  5908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  5909  010BC4  0E04               	movlw	4
  5910  010BC6  6E44               	movwf	(btemp+11)^0,c
  5911                           
  5912                           ;stkvar	_n @ sp[(-20)+4]
  5913  010BC8  50E1               	movf	fsr1l,w,c
  5914  010BCA  0FF0               	addlw	-16
  5915  010BCC  6ED9               	movwf	fsr2l,c
  5916  010BCE  50E2               	movf	fsr1h,w,c
  5917  010BD0  6EDA               	movwf	fsr2h,c
  5918  010BD2  0EFF               	movlw	255
  5919  010BD4  22DA               	addwfc	fsr2h,f,c
  5920  010BD6  2844               	incf	(btemp+11)^0,w,c
  5921  010BD8  52DE               	movf	postinc2,f,c
  5922  010BDA  D00F               	goto	u3780
  5923  010BDC                     u3785:
  5924  010BDC  52DE               	movf	postinc2,f,c
  5925  010BDE  52DE               	movf	postinc2,f,c
  5926  010BE0  52DE               	movf	postinc2,f,c
  5927  010BE2  52DE               	movf	postinc2,f,c
  5928  010BE4  52DE               	movf	postinc2,f,c
  5929  010BE6  52DE               	movf	postinc2,f,c
  5930  010BE8  90D8               	bcf	status,0,c
  5931  010BEA  32DD               	rrcf	postdec2,f,c
  5932  010BEC  32DD               	rrcf	postdec2,f,c
  5933  010BEE  32DD               	rrcf	postdec2,f,c
  5934  010BF0  32DD               	rrcf	postdec2,f,c
  5935  010BF2  32DD               	rrcf	postdec2,f,c
  5936  010BF4  32DD               	rrcf	postdec2,f,c
  5937  010BF6  32DD               	rrcf	postdec2,f,c
  5938  010BF8  32DE               	rrcf	postinc2,f,c
  5939  010BFA                     u3780:
  5940  010BFA  2EE8               	decfsz	wreg,f,c
  5941  010BFC  D7EF               	goto	u3785
  5942  010BFE                     l5722:
  5943                           
  5944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5945                           ;stkvar	_i @ sp[(-20)+14]
  5946  010BFE  0EFB               	movlw	-5
  5947  010C00  BEE3               	btfsc	plusw1,7,c
  5948  010C02  D03A               	goto	u3830
  5949  010C04  0EFB               	movlw	-5
  5950  010C06  50E3               	movf	plusw1,w,c
  5951  010C08  E108               	bnz	u3790
  5952  010C0A  0EFA               	movlw	-6
  5953  010C0C  006F FF8C  F039    	movff	plusw1,btemp
  5954  010C12  0E02               	movlw	2
  5955  010C14  5E39               	subwf	btemp^0,f,c
  5956  010C16  A0D8               	btfss	status,0,c
  5957  010C18  D02F               	goto	u3830
  5958  010C1A                     u3790:
  5959                           
  5960                           ;stkvar	_n @ sp[(-20)+4]
  5961  010C1A  0EF0               	movlw	-16
  5962  010C1C  50E3               	movf	plusw1,w,c
  5963  010C1E  E115               	bnz	u3801
  5964  010C20  0EF1               	movlw	-15
  5965  010C22  50E3               	movf	plusw1,w,c
  5966  010C24  E112               	bnz	u3801
  5967  010C26  0EF2               	movlw	-14
  5968  010C28  50E3               	movf	plusw1,w,c
  5969  010C2A  E10F               	bnz	u3801
  5970  010C2C  0EF3               	movlw	-13
  5971  010C2E  50E3               	movf	plusw1,w,c
  5972  010C30  E10C               	bnz	u3801
  5973  010C32  0EF4               	movlw	-12
  5974  010C34  50E3               	movf	plusw1,w,c
  5975  010C36  E109               	bnz	u3801
  5976  010C38  0EF5               	movlw	-11
  5977  010C3A  50E3               	movf	plusw1,w,c
  5978  010C3C  E106               	bnz	u3801
  5979  010C3E  0EF6               	movlw	-10
  5980  010C40  50E3               	movf	plusw1,w,c
  5981  010C42  E103               	bnz	u3801
  5982  010C44  0EF7               	movlw	-9
  5983  010C46  50E3               	movf	plusw1,w,c
  5984  010C48  A4D8               	btfss	status,2,c
  5985  010C4A                     u3801:
  5986  010C4A  D6F1               	goto	l5690
  5987                           
  5988                           ;stkvar	_p @ sp[(-20)+18]
  5989  010C4C  0EFF               	movlw	-1
  5990  010C4E  BEE3               	btfsc	plusw1,7,c
  5991  010C50  D007               	goto	u3810
  5992  010C52  0EFF               	movlw	-1
  5993  010C54  50E3               	movf	plusw1,w,c
  5994  010C56  E103               	bnz	u3811
  5995  010C58  0EFE               	movlw	-2
  5996  010C5A  04E3               	decf	plusw1,w,c
  5997  010C5C  B0D8               	btfsc	status,0,c
  5998  010C5E                     u3811:
  5999  010C5E  D6E7               	goto	l5690
  6000  010C60                     u3810:
  6001                           
  6002                           ;stkvar	_w @ sp[(-20)+16]
  6003  010C60  0EFD               	movlw	-3
  6004  010C62  BEE3               	btfsc	plusw1,7,c
  6005  010C64  D009               	goto	u3830
  6006  010C66  0EFD               	movlw	-3
  6007  010C68  50E3               	movf	plusw1,w,c
  6008  010C6A  E104               	bnz	u3820
  6009  010C6C  0EFC               	movlw	-4
  6010  010C6E  04E3               	decf	plusw1,w,c
  6011  010C70  A0D8               	btfss	status,0,c
  6012  010C72  D002               	goto	u3830
  6013  010C74                     u3820:
  6014  010C74  B226               	btfsc	_flags^0,1,c
  6015  010C76  D6DB               	goto	l5690
  6016  010C78                     u3830:
  6017                           
  6018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  6019  010C78  A826               	btfss	_flags^0,4,c
  6020  010C7A  D02A               	goto	l5738
  6021                           
  6022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  6023                           ;stkvar	_i @ sp[(-20)+14]
  6024  010C7C  50E1               	movf	fsr1l,w,c
  6025  010C7E  0FFA               	addlw	-6
  6026  010C80  6ED9               	movwf	fsr2l,c
  6027  010C82  50E2               	movf	fsr1h,w,c
  6028  010C84  6EDA               	movwf	fsr2h,c
  6029  010C86  0EFF               	movlw	255
  6030  010C88  22DA               	addwfc	fsr2h,f,c
  6031  010C8A  06DE               	decf	postinc2,f,c
  6032  010C8C  0E00               	movlw	0
  6033  010C8E  5ADD               	subwfb	postdec2,f,c
  6034                           
  6035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  6036                           ;stkvar	_x @ sp[(-20)+-11]
  6037                           ;stkvar	_i @ sp[(-20)+14]
  6038  010C90  0EFA               	movlw	-6
  6039  010C92  006F FF8C  F044    	movff	plusw1,btemp+11
  6040  010C98  5044               	movf	(btemp+11)^0,w,c
  6041  010C9A  0F86               	addlw	low _dbuf
  6042  010C9C  6ED9               	movwf	fsr2l,c
  6043  010C9E  6ADA               	clrf	fsr2h,c
  6044  010CA0  0EE1               	movlw	-31
  6045  010CA2  006F FF8F FFDF     	movff	plusw1,indf2
  6046                           
  6047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  6048                           ;stkvar	_i @ sp[(-20)+14]
  6049  010CA8  50E1               	movf	fsr1l,w,c
  6050  010CAA  0FFA               	addlw	-6
  6051  010CAC  6ED9               	movwf	fsr2l,c
  6052  010CAE  50E2               	movf	fsr1h,w,c
  6053  010CB0  6EDA               	movwf	fsr2h,c
  6054  010CB2  0EFF               	movlw	255
  6055  010CB4  22DA               	addwfc	fsr2h,f,c
  6056  010CB6  06DE               	decf	postinc2,f,c
  6057  010CB8  0E00               	movlw	0
  6058  010CBA  5ADD               	subwfb	postdec2,f,c
  6059                           
  6060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  6061                           ;stkvar	_i @ sp[(-20)+14]
  6062  010CBC  0EFA               	movlw	-6
  6063  010CBE  006F FF8C  F044    	movff	plusw1,btemp+11
  6064  010CC4  5044               	movf	(btemp+11)^0,w,c
  6065  010CC6  0F86               	addlw	low _dbuf
  6066  010CC8  6ED9               	movwf	fsr2l,c
  6067  010CCA  6ADA               	clrf	fsr2h,c
  6068  010CCC  0E30               	movlw	48
  6069  010CCE  6EDF               	movwf	indf2,c
  6070  010CD0                     l5738:
  6071                           
  6072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  6073                           ;stkvar	_w @ sp[(-20)+16]
  6074  010CD0  0EFC               	movlw	-4
  6075  010CD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6076  010CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6077                           
  6078                           ;stkvar	_i @ sp[(-22)+14]
  6079  010CDE  0EF8               	movlw	-8
  6080  010CE0  006F FF8C  F044    	movff	plusw1,btemp+11
  6081  010CE6  5044               	movf	(btemp+11)^0,w,c
  6082  010CE8  0F86               	addlw	low _dbuf
  6083  010CEA  6EE6               	movwf	postinc1,c
  6084                           
  6085                           ;stkvar	_fp @ sp[(-23)+-2]
  6086  010CEC  0EE7               	movlw	-25
  6087  010CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6088  010CF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6089  010CFA  EC78  F090         	call	_pad	;wreg free
  6090                           
  6091                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  6092  010CFE  0EE1               	movlw	225
  6093  010D00  26E1               	addwf	fsr1l,f,c
  6094  010D02  0EFF               	movlw	255
  6095  010D04  22E2               	addwfc	fsr1h,f,c
  6096  010D06  0012               	return		;funcret
  6097  010D08                     __end_of_xtoa:
  6098                           	opt callstack 0
  6099                           
  6100 ;; *************** function _toupper *****************
  6101 ;; Defined at:
  6102 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  c               2  [STACK] int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  2  [STACK] int 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6120 ;;Total ram usage:        0 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    7
  6123 ;; This function calls:
  6124 ;;		_islower
  6125 ;; This function is called by:
  6126 ;;		_xtoa
  6127 ;; This function uses a reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text27
  6131  012818                     __ptext27:
  6132                           	opt callstack 0
  6133  012818                     _toupper:
  6134                           	opt callstack 0
  6135                           
  6136                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6137  012818  52E6               	movf	postinc1,f,c
  6138  01281A  52E6               	movf	postinc1,f,c
  6139                           
  6140                           ;stkvar	_c @ sp[(-2)+-2]
  6141                           
  6142                           ;incstack = 0
  6143  01281C  0EFC               	movlw	-4
  6144  01281E  50E3               	movf	plusw1,w,c
  6145  012820  0F9F               	addlw	159
  6146  012822  6E43               	movwf	(btemp+10)^0,c
  6147  012824  0EFD               	movlw	-3
  6148  012826  006F FF8C  F044    	movff	plusw1,btemp+11
  6149  01282C  0EFF               	movlw	255
  6150  01282E  2244               	addwfc	(btemp+11)^0,f,c
  6151  012830  5044               	movf	(btemp+11)^0,w,c
  6152  012832  E106               	bnz	u1870
  6153  012834  0E1A               	movlw	26
  6154  012836  5C43               	subwf	(btemp+10)^0,w,c
  6155  012838  B0D8               	btfsc	status,0,c
  6156  01283A  D002               	goto	u1870
  6157  01283C  0E01               	movlw	1
  6158  01283E  D001               	goto	u1880
  6159  012840                     u1870:
  6160  012840  0E00               	movlw	0
  6161  012842                     u1880:
  6162  012842  6E43               	movwf	(btemp+10)^0,c
  6163  012844  6A44               	clrf	(btemp+11)^0,c
  6164                           
  6165                           ;stkvar	_toupper$4478 @ sp[(-2)+0]
  6166  012846  0EFE               	movlw	-2
  6167  012848  0060  F10F  FFE3   	movff	btemp+10,plusw1
  6168  01284E  0EFF               	movlw	-1
  6169  012850  0060  F113  FFE3   	movff	btemp+11,plusw1
  6170                           
  6171                           ;stkvar	_toupper$4478 @ sp[(-2)+0]
  6172  012856  0EFE               	movlw	-2
  6173  012858  006F FF8C  F039    	movff	plusw1,btemp
  6174  01285E  0EFF               	movlw	-1
  6175  012860  50E3               	movf	plusw1,w,c
  6176  012862  1039               	iorwf	btemp^0,w,c
  6177  012864  B4D8               	btfsc	status,2,c
  6178  012866  D00D               	goto	l4118
  6179                           
  6180                           ;stkvar	_c @ sp[(-2)+-2]
  6181  012868  0EFC               	movlw	-4
  6182  01286A  006F FF8C  F039    	movff	plusw1,btemp
  6183  012870  0EFD               	movlw	-3
  6184  012872  006F FF8C  F03A    	movff	plusw1,btemp+1
  6185  012878  0E5F               	movlw	95
  6186  01287A  1639               	andwf	btemp^0,f,c
  6187  01287C  0E00               	movlw	0
  6188  01287E  163A               	andwf	(btemp+1)^0,f,c
  6189  012880  D008               	goto	l2497
  6190  012882                     l4118:
  6191                           
  6192                           ;stkvar	_c @ sp[(-2)+-2]
  6193  012882  0EFC               	movlw	-4
  6194  012884  006F FF8C  F039    	movff	plusw1,btemp
  6195  01288A  0EFD               	movlw	-3
  6196  01288C  006F FF8C  F03A    	movff	plusw1,btemp+1
  6197  012892                     l2497:
  6198                           
  6199                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6200  012892  52E5               	movf	postdec1,f,c
  6201  012894  52E5               	movf	postdec1,f,c
  6202  012896  52E5               	movf	postdec1,f,c
  6203  012898  52E5               	movf	postdec1,f,c
  6204  01289A  0012               	return		;funcret
  6205  01289C                     __end_of_toupper:
  6206                           	opt callstack 0
  6207                           
  6208 ;; *************** function _islower *****************
  6209 ;; Defined at:
  6210 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  c               2  [STACK] int 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  2  [STACK] int 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    6
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_toupper
  6235 ;; This function uses a reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text28
  6239  013060                     __ptext28:
  6240                           	opt callstack 0
  6241  013060                     _islower:
  6242                           	opt callstack 16
  6243                           
  6244                           ;stkvar	_c @ sp[(0)+-2]
  6245                           
  6246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6247                           ;incstack = 0
  6248  013060  0EFE               	movlw	-2
  6249  013062  50E3               	movf	plusw1,w,c
  6250  013064  0F9F               	addlw	159
  6251  013066  6E43               	movwf	(btemp+10)^0,c
  6252  013068  0EFF               	movlw	-1
  6253  01306A  006F FF8C  F044    	movff	plusw1,btemp+11
  6254  013070  0EFF               	movlw	255
  6255  013072  2244               	addwfc	(btemp+11)^0,f,c
  6256  013074  5044               	movf	(btemp+11)^0,w,c
  6257  013076  E106               	bnz	u1760
  6258  013078  0E1A               	movlw	26
  6259  01307A  5C43               	subwf	(btemp+10)^0,w,c
  6260  01307C  B0D8               	btfsc	status,0,c
  6261  01307E  D002               	goto	u1760
  6262  013080  0E01               	movlw	1
  6263  013082  D001               	goto	u1770
  6264  013084                     u1760:
  6265  013084  0E00               	movlw	0
  6266  013086                     u1770:
  6267  013086  6E39               	movwf	btemp^0,c
  6268  013088  6A3A               	clrf	(btemp+1)^0,c
  6269                           
  6270                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6271  01308A  52E5               	movf	postdec1,f,c
  6272  01308C  52E5               	movf	postdec1,f,c
  6273  01308E  0012               	return		;funcret
  6274  013090                     __end_of_islower:
  6275                           	opt callstack 0
  6276                           
  6277 ;; *************** function _isupper *****************
  6278 ;; Defined at:
  6279 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  c               2  [STACK] int 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  2  [STACK] int 
  6286 ;; Registers used:
  6287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6297 ;;Total ram usage:        0 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    6
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_xtoa
  6304 ;; This function uses a reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text29
  6308  013090                     __ptext29:
  6309                           	opt callstack 0
  6310  013090                     _isupper:
  6311                           	opt callstack 17
  6312                           
  6313                           ;stkvar	_c @ sp[(0)+-2]
  6314                           
  6315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6316                           ;incstack = 0
  6317  013090  0EFE               	movlw	-2
  6318  013092  50E3               	movf	plusw1,w,c
  6319  013094  0FBF               	addlw	191
  6320  013096  6E43               	movwf	(btemp+10)^0,c
  6321  013098  0EFF               	movlw	-1
  6322  01309A  006F FF8C  F044    	movff	plusw1,btemp+11
  6323  0130A0  0EFF               	movlw	255
  6324  0130A2  2244               	addwfc	(btemp+11)^0,f,c
  6325  0130A4  5044               	movf	(btemp+11)^0,w,c
  6326  0130A6  E106               	bnz	u1830
  6327  0130A8  0E1A               	movlw	26
  6328  0130AA  5C43               	subwf	(btemp+10)^0,w,c
  6329  0130AC  B0D8               	btfsc	status,0,c
  6330  0130AE  D002               	goto	u1830
  6331  0130B0  0E01               	movlw	1
  6332  0130B2  D001               	goto	u1840
  6333  0130B4                     u1830:
  6334  0130B4  0E00               	movlw	0
  6335  0130B6                     u1840:
  6336  0130B6  6E39               	movwf	btemp^0,c
  6337  0130B8  6A3A               	clrf	(btemp+1)^0,c
  6338                           
  6339                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6340  0130BA  52E5               	movf	postdec1,f,c
  6341  0130BC  52E5               	movf	postdec1,f,c
  6342  0130BE  0012               	return		;funcret
  6343  0130C0                     __end_of_isupper:
  6344                           	opt callstack 0
  6345                           
  6346 ;; *************** function _isalpha *****************
  6347 ;; Defined at:
  6348 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  c               2  [STACK] int 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;		None
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2  [STACK] int 
  6355 ;; Registers used:
  6356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6366 ;;Total ram usage:        0 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    6
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_xtoa
  6373 ;; This function uses a reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text30
  6377  012E52                     __ptext30:
  6378                           	opt callstack 0
  6379  012E52                     _isalpha:
  6380                           	opt callstack 17
  6381                           
  6382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6383                           ;incstack = 0
  6384  012E52  0E9F               	movlw	159
  6385  012E54  6E43               	movwf	(btemp+10)^0,c
  6386  012E56  0EFF               	movlw	255
  6387  012E58  6E44               	movwf	(btemp+11)^0,c
  6388                           
  6389                           ;stkvar	_c @ sp[(0)+-2]
  6390  012E5A  0EFE               	movlw	-2
  6391  012E5C  006F FF8C  F041    	movff	plusw1,btemp+8
  6392  012E62  0EFF               	movlw	-1
  6393  012E64  006F FF8C  F042    	movff	plusw1,btemp+9
  6394  012E6A  0E20               	movlw	32
  6395  012E6C  1241               	iorwf	(btemp+8)^0,f,c
  6396  012E6E  0E00               	movlw	0
  6397  012E70  1242               	iorwf	(btemp+9)^0,f,c
  6398  012E72  5043               	movf	(btemp+10)^0,w,c
  6399  012E74  2641               	addwf	(btemp+8)^0,f,c
  6400  012E76  5044               	movf	(btemp+11)^0,w,c
  6401  012E78  2242               	addwfc	(btemp+9)^0,f,c
  6402  012E7A  5042               	movf	(btemp+9)^0,w,c
  6403  012E7C  E106               	bnz	u1850
  6404  012E7E  0E1A               	movlw	26
  6405  012E80  5C41               	subwf	(btemp+8)^0,w,c
  6406  012E82  B0D8               	btfsc	status,0,c
  6407  012E84  D002               	goto	u1850
  6408  012E86  0E01               	movlw	1
  6409  012E88  D001               	goto	u1860
  6410  012E8A                     u1850:
  6411  012E8A  0E00               	movlw	0
  6412  012E8C                     u1860:
  6413  012E8C  6E39               	movwf	btemp^0,c
  6414  012E8E  6A3A               	clrf	(btemp+1)^0,c
  6415                           
  6416                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6417  012E90  52E5               	movf	postdec1,f,c
  6418  012E92  52E5               	movf	postdec1,f,c
  6419  012E94  0012               	return		;funcret
  6420  012E96                     __end_of_isalpha:
  6421                           	opt callstack 0
  6422                           
  6423 ;; *************** function _stoa *****************
  6424 ;; Defined at:
  6425 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6428 ;;		 -> f(6), NULL(0), 
  6429 ;;  s               2  [STACK] PTR unsigned char 
  6430 ;;		 -> ?_printf(2), ?_sprintf(2), STR_14(9), STR_13(12), 
  6431 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6432 ;;		 -> STR_3(4), V(189), 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  nuls            7  [STACK] unsigned char [7]
  6435 ;;  l               2  [STACK] int 
  6436 ;;  p               2  [STACK] int 
  6437 ;;  cp              2  [STACK] PTR unsigned char 
  6438 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_14(9), 
  6439 ;;		 -> STR_13(12), D.lcd(216), D(218), T(144), 
  6440 ;;		 -> STR_7(4), STR_3(4), V(189), 
  6441 ;;  w               2  [STACK] int 
  6442 ;;  i               2  [STACK] int 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  2  [STACK] int 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/3
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    9
  6459 ;; This function calls:
  6460 ;;		_fputc
  6461 ;;		_strlen
  6462 ;; This function is called by:
  6463 ;;		_vfpfcnvrt
  6464 ;; This function uses a reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text31
  6468  0112F6                     __ptext31:
  6469                           	opt callstack 0
  6470  0112F6                     _stoa:
  6471                           	opt callstack 0
  6472                           
  6473                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6474  0112F6  0E11               	movlw	17
  6475  0112F8  26E1               	addwf	fsr1l,f,c
  6476  0112FA  0E00               	movlw	0
  6477  0112FC  22E2               	addwfc	fsr1h,f,c
  6478                           
  6479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6480                           
  6481                           ;incstack = 0
  6482  0112FE  EE20  F0AE         	lfsr	2,stoa@F1144
  6483                           
  6484                           ;stkvar	_nuls @ sp[(-17)+0]
  6485  011302  0E07               	movlw	7
  6486  011304  6E39               	movwf	btemp^0,c
  6487  011306  0EEF               	movlw	-17
  6488  011308                     us357999:
  6489  011308  006F FF7B FFE3     	movff	postinc2,plusw1
  6490  01130E  28E8               	incf	wreg,w,c
  6491  011310  2E39               	decfsz	btemp^0,f,c
  6492  011312  D7FA               	bra	us357999
  6493                           
  6494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6495                           ;stkvar	_s @ sp[(-17)+-4]
  6496  011314  0EEB               	movlw	-21
  6497  011316  006F FF8C  F043    	movff	plusw1,btemp+10
  6498  01131C  0EEC               	movlw	-20
  6499  01131E  006F FF8C  F044    	movff	plusw1,btemp+11
  6500                           
  6501                           ;stkvar	_cp @ sp[(-17)+11]
  6502  011324  0EFB               	movlw	-5
  6503  011326  0060  F113  FFE3   	movff	btemp+11,plusw1
  6504  01132C  0EFA               	movlw	-6
  6505  01132E  0060  F10F  FFE3   	movff	btemp+10,plusw1
  6506                           
  6507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6508                           ;stkvar	_cp @ sp[(-17)+11]
  6509  011334  0EFA               	movlw	-6
  6510  011336  006F FF8C  F039    	movff	plusw1,btemp
  6511  01133C  0EFB               	movlw	-5
  6512  01133E  50E3               	movf	plusw1,w,c
  6513  011340  1039               	iorwf	btemp^0,w,c
  6514  011342  A4D8               	btfss	status,2,c
  6515  011344  D00E               	goto	l5626
  6516                           
  6517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6518                           ;stkvar	_nuls @ sp[(-17)+0]
  6519  011346  0EEF               	movlw	239
  6520  011348  24E1               	addwf	fsr1l,w,c
  6521  01134A  6E43               	movwf	(btemp+10)^0,c
  6522  01134C  0EFF               	movlw	255
  6523  01134E  20E2               	addwfc	fsr1h,w,c
  6524  011350  6E44               	movwf	(btemp+11)^0,c
  6525                           
  6526                           ;stkvar	_cp @ sp[(-17)+11]
  6527  011352  0EFB               	movlw	-5
  6528  011354  0060  F113  FFE3   	movff	btemp+11,plusw1
  6529  01135A  0EFA               	movlw	-6
  6530  01135C  0060  F10F  FFE3   	movff	btemp+10,plusw1
  6531  011362                     l5626:
  6532                           
  6533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6534                           ;stkvar	_cp @ sp[(-17)+11]
  6535  011362  0EFA               	movlw	-6
  6536  011364  006F FF8F FFE6     	movff	plusw1,postinc1
  6537  01136A  006F FF8F FFE6     	movff	plusw1,postinc1
  6538  011370  EC2A  F093         	call	_strlen	;wreg free
  6539                           
  6540                           ;stkvar	_l @ sp[(-17)+7]
  6541  011374  0EF6               	movlw	-10
  6542  011376  0060  F0E7  FFE3   	movff	btemp,plusw1
  6543  01137C  0EF7               	movlw	-9
  6544  01137E  0060  F0EB  FFE3   	movff	btemp+1,plusw1
  6545                           
  6546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6547                           ;stkvar	_p @ sp[(-17)+9]
  6548  011384  0EF8               	movlw	-8
  6549  011386  0060  F093  FFE3   	movff	_prec,plusw1
  6550  01138C  0EF9               	movlw	-7
  6551  01138E  0060  F097  FFE3   	movff	_prec+1,plusw1
  6552                           
  6553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6554                           ;stkvar	_p @ sp[(-17)+9]
  6555  011394  0EF9               	movlw	-7
  6556  011396  BEE3               	btfsc	plusw1,7,c
  6557  011398  D023               	goto	l1673
  6558                           
  6559                           ;stkvar	_l @ sp[(-17)+7]
  6560                           ;stkvar	_p @ sp[(-17)+9]
  6561  01139A  50E1               	movf	fsr1l,w,c
  6562  01139C  0FF8               	addlw	-8
  6563  01139E  6ED9               	movwf	fsr2l,c
  6564  0113A0  50E2               	movf	fsr1h,w,c
  6565  0113A2  6EDA               	movwf	fsr2h,c
  6566  0113A4  0EFF               	movlw	255
  6567  0113A6  22DA               	addwfc	fsr2h,f,c
  6568  0113A8  0EF6               	movlw	-10
  6569  0113AA  50E3               	movf	plusw1,w,c
  6570  0113AC  5CDE               	subwf	postinc2,w,c
  6571  0113AE  50DE               	movf	postinc2,w,c
  6572  0113B0  0A80               	xorlw	128
  6573  0113B2  6E39               	movwf	btemp^0,c
  6574  0113B4  0EF7               	movlw	-9
  6575  0113B6  50E3               	movf	plusw1,w,c
  6576  0113B8  0A80               	xorlw	128
  6577  0113BA  5839               	subwfb	btemp^0,w,c
  6578  0113BC  B0D8               	btfsc	status,0,c
  6579  0113BE  D010               	goto	l1673
  6580                           
  6581                           ;stkvar	_p @ sp[(-17)+9]
  6582                           ;stkvar	_l @ sp[(-17)+7]
  6583  0113C0  0EF8               	movlw	-8
  6584  0113C2  006F FF8C  F039    	movff	plusw1,btemp
  6585  0113C8  0EF6               	movlw	-10
  6586  0113CA  0060  F0E7  FFE3   	movff	btemp,plusw1
  6587  0113D0  0EF9               	movlw	-7
  6588  0113D2  006F FF8C  F039    	movff	plusw1,btemp
  6589  0113D8  0EF7               	movlw	-9
  6590  0113DA  0060  F0E7  FFE3   	movff	btemp,plusw1
  6591  0113E0                     l1673:
  6592                           
  6593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6594                           ;stkvar	_l @ sp[(-17)+7]
  6595                           ;stkvar	_p @ sp[(-17)+9]
  6596  0113E0  0EF6               	movlw	-10
  6597  0113E2  006F FF8C  F039    	movff	plusw1,btemp
  6598  0113E8  0EF8               	movlw	-8
  6599  0113EA  0060  F0E7  FFE3   	movff	btemp,plusw1
  6600  0113F0  0EF7               	movlw	-9
  6601  0113F2  006F FF8C  F039    	movff	plusw1,btemp
  6602  0113F8  0EF9               	movlw	-7
  6603  0113FA  0060  F0E7  FFE3   	movff	btemp,plusw1
  6604                           
  6605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6606                           ;stkvar	_w @ sp[(-17)+13]
  6607  011400  0EFC               	movlw	-4
  6608  011402  0060  F08B  FFE3   	movff	_width,plusw1
  6609  011408  0EFD               	movlw	-3
  6610  01140A  0060  F08F  FFE3   	movff	_width+1,plusw1
  6611                           
  6612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6613  011410  A026               	btfss	_flags^0,0,c
  6614  011412  D01F               	goto	l5646
  6615  011414  D031               	goto	u3620
  6616  011416                     l5642:
  6617                           
  6618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6619                           ;stkvar	_fp @ sp[(-17)+-2]
  6620  011416  0EED               	movlw	-19
  6621  011418  006F FF8F FFE6     	movff	plusw1,postinc1
  6622  01141E  006F FF8F FFE6     	movff	plusw1,postinc1
  6623  011424  0E20               	movlw	32
  6624  011426  6EE6               	movwf	postinc1,c
  6625  011428  0E00               	movlw	0
  6626  01142A  6EE6               	movwf	postinc1,c
  6627  01142C  ECDA  F08E         	call	_fputc	;wreg free
  6628                           
  6629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6630                           ;stkvar	_l @ sp[(-17)+7]
  6631  011430  0EF6               	movlw	-10
  6632  011432  50E3               	movf	plusw1,w,c
  6633  011434  0F01               	addlw	1
  6634  011436  6E39               	movwf	btemp^0,c
  6635  011438  0EF6               	movlw	-10
  6636  01143A  0060  F0E7  FFE3   	movff	btemp,plusw1
  6637  011440  6A39               	clrf	btemp^0,c
  6638  011442  0EF7               	movlw	-9
  6639  011444  50E3               	movf	plusw1,w,c
  6640  011446  2039               	addwfc	btemp^0,w,c
  6641  011448  6E39               	movwf	btemp^0,c
  6642  01144A  0EF7               	movlw	-9
  6643  01144C  0060  F0E7  FFE3   	movff	btemp,plusw1
  6644  011452                     l5646:
  6645                           
  6646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  6647                           ;stkvar	_w @ sp[(-17)+13]
  6648                           ;stkvar	_l @ sp[(-17)+7]
  6649  011452  50E1               	movf	fsr1l,w,c
  6650  011454  0FF6               	addlw	-10
  6651  011456  6ED9               	movwf	fsr2l,c
  6652  011458  50E2               	movf	fsr1h,w,c
  6653  01145A  6EDA               	movwf	fsr2h,c
  6654  01145C  0EFF               	movlw	255
  6655  01145E  22DA               	addwfc	fsr2h,f,c
  6656  011460  0EFC               	movlw	-4
  6657  011462  50E3               	movf	plusw1,w,c
  6658  011464  5CDE               	subwf	postinc2,w,c
  6659  011466  50DE               	movf	postinc2,w,c
  6660  011468  0A80               	xorlw	128
  6661  01146A  6E39               	movwf	btemp^0,c
  6662  01146C  0EFD               	movlw	-3
  6663  01146E  50E3               	movf	plusw1,w,c
  6664  011470  0A80               	xorlw	128
  6665  011472  5839               	subwfb	btemp^0,w,c
  6666  011474  A0D8               	btfss	status,0,c
  6667  011476  D7CF               	goto	l5642
  6668  011478                     u3620:
  6669                           
  6670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  6671                           ;stkvar	_i @ sp[(-17)+15]
  6672  011478  0EFE               	movlw	-2
  6673  01147A  6AE3               	clrf	plusw1,c
  6674  01147C  0EFF               	movlw	-1
  6675  01147E  6AE3               	clrf	plusw1,c
  6676                           
  6677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6678  011480  D045               	goto	l5656
  6679  011482                     l5650:
  6680                           
  6681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  6682                           ;stkvar	_fp @ sp[(-17)+-2]
  6683  011482  0EED               	movlw	-19
  6684  011484  006F FF8F FFE6     	movff	plusw1,postinc1
  6685  01148A  006F FF8F FFE6     	movff	plusw1,postinc1
  6686                           
  6687                           ;stkvar	_cp @ sp[(-19)+11]
  6688  011490  0EF8               	movlw	-8
  6689  011492  006F FF8F FFF6     	movff	plusw1,tblptrl
  6690  011498  0EF9               	movlw	-7
  6691  01149A  006F FF8F FFF7     	movff	plusw1,tblptrh
  6692  0114A0  0E00               	movlw	low (__mediumconst shr (0+16))
  6693  0114A2  6EF8               	movwf	tblptru,c
  6694  0114A4  0E1F               	movlw	(high __ramtop+-1)
  6695  0114A6  64F7               	cpfsgt	tblptrh,c
  6696  0114A8  D003               	bra	u3637
  6697  0114AA  0008               	tblrd		*
  6698  0114AC  50F5               	movf	tablat,w,c
  6699  0114AE  D007               	bra	u3630
  6700  0114B0                     u3637:
  6701  0114B0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  6702  0114B6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  6703  0114BC  50EF               	movf	indf0,w,c
  6704  0114BE                     u3630:
  6705  0114BE  6EE6               	movwf	postinc1,c
  6706  0114C0  0E00               	movlw	0
  6707  0114C2  6EE6               	movwf	postinc1,c
  6708  0114C4  ECDA  F08E         	call	_fputc	;wreg free
  6709                           
  6710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  6711                           ;stkvar	_cp @ sp[(-17)+11]
  6712  0114C8  0EFA               	movlw	-6
  6713  0114CA  50E3               	movf	plusw1,w,c
  6714  0114CC  0F01               	addlw	1
  6715  0114CE  6E39               	movwf	btemp^0,c
  6716  0114D0  0EFA               	movlw	-6
  6717  0114D2  0060  F0E7  FFE3   	movff	btemp,plusw1
  6718  0114D8  6A39               	clrf	btemp^0,c
  6719  0114DA  0EFB               	movlw	-5
  6720  0114DC  50E3               	movf	plusw1,w,c
  6721  0114DE  2039               	addwfc	btemp^0,w,c
  6722  0114E0  6E39               	movwf	btemp^0,c
  6723  0114E2  0EFB               	movlw	-5
  6724  0114E4  0060  F0E7  FFE3   	movff	btemp,plusw1
  6725                           
  6726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  6727                           ;stkvar	_i @ sp[(-17)+15]
  6728  0114EA  0EFE               	movlw	-2
  6729  0114EC  50E3               	movf	plusw1,w,c
  6730  0114EE  0F01               	addlw	1
  6731  0114F0  6E39               	movwf	btemp^0,c
  6732  0114F2  0EFE               	movlw	-2
  6733  0114F4  0060  F0E7  FFE3   	movff	btemp,plusw1
  6734  0114FA  6A39               	clrf	btemp^0,c
  6735  0114FC  0EFF               	movlw	-1
  6736  0114FE  50E3               	movf	plusw1,w,c
  6737  011500  2039               	addwfc	btemp^0,w,c
  6738  011502  6E39               	movwf	btemp^0,c
  6739  011504  0EFF               	movlw	-1
  6740  011506  0060  F0E7  FFE3   	movff	btemp,plusw1
  6741  01150C                     l5656:
  6742                           
  6743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6744                           ;stkvar	_p @ sp[(-17)+9]
  6745                           ;stkvar	_i @ sp[(-17)+15]
  6746  01150C  50E1               	movf	fsr1l,w,c
  6747  01150E  0FFE               	addlw	-2
  6748  011510  6ED9               	movwf	fsr2l,c
  6749  011512  50E2               	movf	fsr1h,w,c
  6750  011514  6EDA               	movwf	fsr2h,c
  6751  011516  0EFF               	movlw	255
  6752  011518  22DA               	addwfc	fsr2h,f,c
  6753  01151A  0EF8               	movlw	-8
  6754  01151C  50E3               	movf	plusw1,w,c
  6755  01151E  5CDE               	subwf	postinc2,w,c
  6756  011520  50DE               	movf	postinc2,w,c
  6757  011522  0A80               	xorlw	128
  6758  011524  6E39               	movwf	btemp^0,c
  6759  011526  0EF9               	movlw	-7
  6760  011528  50E3               	movf	plusw1,w,c
  6761  01152A  0A80               	xorlw	128
  6762  01152C  5839               	subwfb	btemp^0,w,c
  6763  01152E  A0D8               	btfss	status,0,c
  6764  011530  D7A8               	goto	l5650
  6765                           
  6766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  6767  011532  B026               	btfsc	_flags^0,0,c
  6768  011534  D01F               	goto	l5664
  6769  011536  D031               	goto	u3660
  6770  011538                     l5660:
  6771                           
  6772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  6773                           ;stkvar	_fp @ sp[(-17)+-2]
  6774  011538  0EED               	movlw	-19
  6775  01153A  006F FF8F FFE6     	movff	plusw1,postinc1
  6776  011540  006F FF8F FFE6     	movff	plusw1,postinc1
  6777  011546  0E20               	movlw	32
  6778  011548  6EE6               	movwf	postinc1,c
  6779  01154A  0E00               	movlw	0
  6780  01154C  6EE6               	movwf	postinc1,c
  6781  01154E  ECDA  F08E         	call	_fputc	;wreg free
  6782                           
  6783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  6784                           ;stkvar	_l @ sp[(-17)+7]
  6785  011552  0EF6               	movlw	-10
  6786  011554  50E3               	movf	plusw1,w,c
  6787  011556  0F01               	addlw	1
  6788  011558  6E39               	movwf	btemp^0,c
  6789  01155A  0EF6               	movlw	-10
  6790  01155C  0060  F0E7  FFE3   	movff	btemp,plusw1
  6791  011562  6A39               	clrf	btemp^0,c
  6792  011564  0EF7               	movlw	-9
  6793  011566  50E3               	movf	plusw1,w,c
  6794  011568  2039               	addwfc	btemp^0,w,c
  6795  01156A  6E39               	movwf	btemp^0,c
  6796  01156C  0EF7               	movlw	-9
  6797  01156E  0060  F0E7  FFE3   	movff	btemp,plusw1
  6798  011574                     l5664:
  6799                           
  6800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  6801                           ;stkvar	_w @ sp[(-17)+13]
  6802                           ;stkvar	_l @ sp[(-17)+7]
  6803  011574  50E1               	movf	fsr1l,w,c
  6804  011576  0FF6               	addlw	-10
  6805  011578  6ED9               	movwf	fsr2l,c
  6806  01157A  50E2               	movf	fsr1h,w,c
  6807  01157C  6EDA               	movwf	fsr2h,c
  6808  01157E  0EFF               	movlw	255
  6809  011580  22DA               	addwfc	fsr2h,f,c
  6810  011582  0EFC               	movlw	-4
  6811  011584  50E3               	movf	plusw1,w,c
  6812  011586  5CDE               	subwf	postinc2,w,c
  6813  011588  50DE               	movf	postinc2,w,c
  6814  01158A  0A80               	xorlw	128
  6815  01158C  6E39               	movwf	btemp^0,c
  6816  01158E  0EFD               	movlw	-3
  6817  011590  50E3               	movf	plusw1,w,c
  6818  011592  0A80               	xorlw	128
  6819  011594  5839               	subwfb	btemp^0,w,c
  6820  011596  A0D8               	btfss	status,0,c
  6821  011598  D7CF               	goto	l5660
  6822  01159A                     u3660:
  6823                           
  6824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  6825                           ;stkvar	_l @ sp[(-17)+7]
  6826  01159A  0EF6               	movlw	-10
  6827  01159C  006F FF8C  F039    	movff	plusw1,btemp
  6828  0115A2  0EF7               	movlw	-9
  6829  0115A4  006F FF8C  F03A    	movff	plusw1,btemp+1
  6830                           
  6831                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  6832  0115AA  0EEB               	movlw	235
  6833  0115AC  26E1               	addwf	fsr1l,f,c
  6834  0115AE  0EFF               	movlw	255
  6835  0115B0  22E2               	addwfc	fsr1h,f,c
  6836  0115B2  0012               	return		;funcret
  6837  0115B4                     __end_of_stoa:
  6838                           	opt callstack 0
  6839                           
  6840 ;; *************** function _dtoa *****************
  6841 ;; Defined at:
  6842 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6845 ;;		 -> f(6), NULL(0), 
  6846 ;;  d               8  [STACK] long long 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  n               8  [STACK] long long 
  6849 ;;  i               2  [STACK] int 
  6850 ;;  s               2  [STACK] int 
  6851 ;;  w               2  [STACK] int 
  6852 ;;  p               2  [STACK] int 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  2  [STACK] int 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/3
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:   11
  6869 ;; This function calls:
  6870 ;;		___aodiv
  6871 ;;		___aomod
  6872 ;;		_abs
  6873 ;;		_pad
  6874 ;; This function is called by:
  6875 ;;		_vfpfcnvrt
  6876 ;; This function uses a reentrant model
  6877 ;;
  6878                           
  6879                           	psect	text32
  6880  01052E                     __ptext32:
  6881                           	opt callstack 0
  6882  01052E                     _dtoa:
  6883                           	opt callstack 0
  6884                           
  6885                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  6886  01052E  0E12               	movlw	18
  6887  010530  26E1               	addwf	fsr1l,f,c
  6888  010532  0E00               	movlw	0
  6889  010534  22E2               	addwfc	fsr1h,f,c
  6890                           
  6891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6892                           ;stkvar	_d @ sp[(-18)+-10]
  6893                           
  6894                           ;incstack = 0
  6895  010536  0EE4               	movlw	228
  6896  010538  24E1               	addwf	fsr1l,w,c
  6897  01053A  6ED9               	movwf	fsr2l,c
  6898  01053C  0EFF               	movlw	255
  6899  01053E  20E2               	addwfc	fsr1h,w,c
  6900  010540  6EDA               	movwf	fsr2h,c
  6901                           
  6902                           ;stkvar	_n @ sp[(-18)+2]
  6903  010542  0E08               	movlw	8
  6904  010544  6E39               	movwf	btemp^0,c
  6905  010546  0EF0               	movlw	-16
  6906  010548                     us340999:
  6907  010548  006F FF7B FFE3     	movff	postinc2,plusw1
  6908  01054E  28E8               	incf	wreg,w,c
  6909  010550  2E39               	decfsz	btemp^0,f,c
  6910  010552  D7FA               	bra	us340999
  6911                           
  6912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6913                           ;stkvar	_n @ sp[(-18)+2]
  6914  010554  0EF7               	movlw	-9
  6915  010556  AEE3               	btfss	plusw1,7,c
  6916  010558  D002               	goto	u3410
  6917  01055A  0E01               	movlw	1
  6918  01055C  D001               	goto	u3420
  6919  01055E                     u3410:
  6920  01055E  0E00               	movlw	0
  6921  010560                     u3420:
  6922  010560  6E43               	movwf	(btemp+10)^0,c
  6923  010562  6A44               	clrf	(btemp+11)^0,c
  6924                           
  6925                           ;stkvar	_s @ sp[(-18)+12]
  6926  010564  0EFA               	movlw	-6
  6927  010566  0060  F10F  FFE3   	movff	btemp+10,plusw1
  6928  01056C  0EFB               	movlw	-5
  6929  01056E  0060  F113  FFE3   	movff	btemp+11,plusw1
  6930                           
  6931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6932                           ;stkvar	_s @ sp[(-18)+12]
  6933  010574  0EFA               	movlw	-6
  6934  010576  006F FF8C  F039    	movff	plusw1,btemp
  6935  01057C  0EFB               	movlw	-5
  6936  01057E  50E3               	movf	plusw1,w,c
  6937  010580  1039               	iorwf	btemp^0,w,c
  6938  010582  B4D8               	btfsc	status,2,c
  6939  010584  D025               	goto	u3440
  6940                           
  6941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6942                           ;stkvar	_n @ sp[(-18)+2]
  6943                           ;stkvar	_n @ sp[(-18)+2]
  6944  010586  0EF0               	movlw	-16
  6945  010588  6CE3               	negf	plusw1,c
  6946  01058A  0EF1               	movlw	-15
  6947  01058C  1EE3               	comf	plusw1,f,c
  6948  01058E  0EF2               	movlw	-14
  6949  010590  1EE3               	comf	plusw1,f,c
  6950  010592  0EF3               	movlw	-13
  6951  010594  1EE3               	comf	plusw1,f,c
  6952  010596  0EF4               	movlw	-12
  6953  010598  1EE3               	comf	plusw1,f,c
  6954  01059A  0EF5               	movlw	-11
  6955  01059C  1EE3               	comf	plusw1,f,c
  6956  01059E  0EF6               	movlw	-10
  6957  0105A0  1EE3               	comf	plusw1,f,c
  6958  0105A2  0EF7               	movlw	-9
  6959  0105A4  1EE3               	comf	plusw1,f,c
  6960  0105A6  E314               	bnc	u3440
  6961  0105A8  0EF1               	movlw	-15
  6962  0105AA  2AE3               	incf	plusw1,f,c
  6963  0105AC  E311               	bnc	u3440
  6964  0105AE  0EF2               	movlw	-14
  6965  0105B0  2AE3               	incf	plusw1,f,c
  6966  0105B2  E30E               	bnc	u3440
  6967  0105B4  0EF3               	movlw	-13
  6968  0105B6  2AE3               	incf	plusw1,f,c
  6969  0105B8  E30B               	bnc	u3440
  6970  0105BA  0EF4               	movlw	-12
  6971  0105BC  2AE3               	incf	plusw1,f,c
  6972  0105BE  E308               	bnc	u3440
  6973  0105C0  0EF5               	movlw	-11
  6974  0105C2  2AE3               	incf	plusw1,f,c
  6975  0105C4  E305               	bnc	u3440
  6976  0105C6  0EF6               	movlw	-10
  6977  0105C8  2AE3               	incf	plusw1,f,c
  6978  0105CA  E302               	bnc	u3440
  6979  0105CC  0EF7               	movlw	-9
  6980  0105CE  2AE3               	incf	plusw1,f,c
  6981  0105D0                     u3440:
  6982                           
  6983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6984  0105D0  AE25               	btfss	(_prec+1)^0,7,c
  6985                           
  6986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6987  0105D2  9226               	bcf	_flags^0,1,c
  6988                           
  6989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6990  0105D4  BE25               	btfsc	(_prec+1)^0,7,c
  6991  0105D6  D005               	goto	u3460
  6992  0105D8  5025               	movf	(_prec+1)^0,w,c
  6993  0105DA  E110               	bnz	l5568
  6994  0105DC  0424               	decf	_prec^0,w,c
  6995  0105DE  B0D8               	btfsc	status,0,c
  6996  0105E0  D00D               	goto	l5568
  6997  0105E2                     u3460:
  6998  0105E2  0E01               	movlw	1
  6999  0105E4  6E43               	movwf	(btemp+10)^0,c
  7000  0105E6  0E00               	movlw	0
  7001  0105E8  6E44               	movwf	(btemp+11)^0,c
  7002                           
  7003                           ;stkvar	_p @ sp[(-18)+16]
  7004  0105EA  0EFE               	movlw	-2
  7005  0105EC  0060  F10F  FFE3   	movff	btemp+10,plusw1
  7006  0105F2  0EFF               	movlw	-1
  7007  0105F4  0060  F113  FFE3   	movff	btemp+11,plusw1
  7008  0105FA  D008               	goto	l1646
  7009  0105FC                     l5568:
  7010                           
  7011                           ;stkvar	_p @ sp[(-18)+16]
  7012  0105FC  0EFE               	movlw	-2
  7013  0105FE  0060  F093  FFE3   	movff	_prec,plusw1
  7014  010604  0EFF               	movlw	-1
  7015  010606  0060  F097  FFE3   	movff	_prec+1,plusw1
  7016  01060C                     l1646:
  7017                           
  7018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7019                           ;stkvar	_w @ sp[(-18)+14]
  7020  01060C  0EFC               	movlw	-4
  7021  01060E  0060  F08B  FFE3   	movff	_width,plusw1
  7022  010614  0EFD               	movlw	-3
  7023  010616  0060  F08F  FFE3   	movff	_width+1,plusw1
  7024                           
  7025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7026                           ;stkvar	_s @ sp[(-18)+12]
  7027  01061C  0EFA               	movlw	-6
  7028  01061E  006F FF8C  F039    	movff	plusw1,btemp
  7029  010624  0EFB               	movlw	-5
  7030  010626  50E3               	movf	plusw1,w,c
  7031  010628  1039               	iorwf	btemp^0,w,c
  7032  01062A  A4D8               	btfss	status,2,c
  7033  01062C  D002               	goto	u3480
  7034  01062E  A426               	btfss	_flags^0,2,c
  7035  010630  D00A               	goto	l5576
  7036  010632                     u3480:
  7037                           
  7038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  7039                           ;stkvar	_w @ sp[(-18)+14]
  7040  010632  50E1               	movf	fsr1l,w,c
  7041  010634  0FFC               	addlw	-4
  7042  010636  6ED9               	movwf	fsr2l,c
  7043  010638  50E2               	movf	fsr1h,w,c
  7044  01063A  6EDA               	movwf	fsr2h,c
  7045  01063C  0EFF               	movlw	255
  7046  01063E  22DA               	addwfc	fsr2h,f,c
  7047  010640  06DE               	decf	postinc2,f,c
  7048  010642  0E00               	movlw	0
  7049  010644  5ADD               	subwfb	postdec2,f,c
  7050  010646                     l5576:
  7051                           
  7052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7053  010646  0E1F               	movlw	31
  7054  010648  6E43               	movwf	(btemp+10)^0,c
  7055  01064A  0E00               	movlw	0
  7056  01064C  6E44               	movwf	(btemp+11)^0,c
  7057                           
  7058                           ;stkvar	_i @ sp[(-18)+10]
  7059  01064E  0EF8               	movlw	-8
  7060  010650  0060  F10F  FFE3   	movff	btemp+10,plusw1
  7061  010656  0EF9               	movlw	-7
  7062  010658  0060  F113  FFE3   	movff	btemp+11,plusw1
  7063                           
  7064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7065  01065E  0100               	movlb	0	; () banked
  7066  010660  6BA5               	clrf	(_dbuf+31)& (0+255),b
  7067                           
  7068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7069  010662  D103               	goto	l5590
  7070  010664                     l5580:
  7071                           
  7072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  7073                           ;stkvar	_i @ sp[(-18)+10]
  7074  010664  50E1               	movf	fsr1l,w,c
  7075  010666  0FF8               	addlw	-8
  7076  010668  6ED9               	movwf	fsr2l,c
  7077  01066A  50E2               	movf	fsr1h,w,c
  7078  01066C  6EDA               	movwf	fsr2h,c
  7079  01066E  0EFF               	movlw	255
  7080  010670  22DA               	addwfc	fsr2h,f,c
  7081  010672  06DE               	decf	postinc2,f,c
  7082  010674  0E00               	movlw	0
  7083  010676  5ADD               	subwfb	postdec2,f,c
  7084                           
  7085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7086  010678  0E0A               	movlw	10
  7087  01067A  6EE6               	movwf	postinc1,c
  7088  01067C  0E00               	movlw	0
  7089  01067E  6EE6               	movwf	postinc1,c
  7090  010680  0E00               	movlw	0
  7091  010682  6EE6               	movwf	postinc1,c
  7092  010684  0E00               	movlw	0
  7093  010686  6EE6               	movwf	postinc1,c
  7094  010688  0E00               	movlw	0
  7095  01068A  6EE6               	movwf	postinc1,c
  7096  01068C  0E00               	movlw	0
  7097  01068E  6EE6               	movwf	postinc1,c
  7098  010690  0E00               	movlw	0
  7099  010692  6EE6               	movwf	postinc1,c
  7100  010694  0E00               	movlw	0
  7101  010696  6EE6               	movwf	postinc1,c
  7102                           
  7103                           ;stkvar	_n @ sp[(-26)+2]
  7104  010698  50E1               	movf	fsr1l,w,c
  7105  01069A  0FE8               	addlw	-24
  7106  01069C  6ED9               	movwf	fsr2l,c
  7107  01069E  50E2               	movf	fsr1h,w,c
  7108  0106A0  6EDA               	movwf	fsr2h,c
  7109  0106A2  0EFF               	movlw	255
  7110  0106A4  22DA               	addwfc	fsr2h,f,c
  7111  0106A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7112  0106AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7113  0106B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7114  0106B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7115  0106BE  006F FF7B FFE6     	movff	postinc2,postinc1
  7116  0106C4  006F FF7B FFE6     	movff	postinc2,postinc1
  7117  0106CA  006F FF7B FFE6     	movff	postinc2,postinc1
  7118  0106D0  006F FF7B FFE6     	movff	postinc2,postinc1
  7119  0106D6  EC1A  F08C         	call	___aomod	;wreg free
  7120  0106DA  52E5               	movf	postdec1,f,c
  7121  0106DC  006F FF9C  F050    	movff	indf1,btemp+23
  7122  0106E2  52E5               	movf	postdec1,f,c
  7123  0106E4  006F FF9C  F04F    	movff	indf1,btemp+22
  7124  0106EA  52E5               	movf	postdec1,f,c
  7125  0106EC  006F FF9C  F04E    	movff	indf1,btemp+21
  7126  0106F2  52E5               	movf	postdec1,f,c
  7127  0106F4  006F FF9C  F04D    	movff	indf1,btemp+20
  7128  0106FA  52E5               	movf	postdec1,f,c
  7129  0106FC  006F FF9C  F04C    	movff	indf1,btemp+19
  7130  010702  52E5               	movf	postdec1,f,c
  7131  010704  006F FF9C  F04B    	movff	indf1,btemp+18
  7132  01070A  52E5               	movf	postdec1,f,c
  7133  01070C  006F FF9C  F04A    	movff	indf1,btemp+17
  7134  010712  52E5               	movf	postdec1,f,c
  7135  010714  006F FF9C  F049    	movff	indf1,btemp+16
  7136  01071A  0EF8               	movlw	248
  7137  01071C  26E1               	addwf	fsr1l,f,c
  7138  01071E  0EFF               	movlw	255
  7139  010720  22E2               	addwfc	fsr1h,f,c
  7140  010722  0060  F124  F043   	movff	btemp+16,btemp+10
  7141  010728  0060  F128  F044   	movff	btemp+17,btemp+11
  7142  01072E  0060  F10F  FFE6   	movff	btemp+10,postinc1
  7143  010734  0060  F113  FFE6   	movff	btemp+11,postinc1
  7144  01073A  EC9D  F096         	call	_abs	;wreg free
  7145  01073E  0E30               	movlw	48
  7146  010740  2639               	addwf	btemp^0,f,c
  7147                           
  7148                           ;stkvar	_i @ sp[(-18)+10]
  7149  010742  0EF8               	movlw	-8
  7150  010744  006F FF8C  F044    	movff	plusw1,btemp+11
  7151  01074A  5044               	movf	(btemp+11)^0,w,c
  7152  01074C  0F86               	addlw	low _dbuf
  7153  01074E  6ED9               	movwf	fsr2l,c
  7154  010750  6ADA               	clrf	fsr2h,c
  7155  010752  0060  F0E7  FFDF   	movff	btemp,indf2
  7156                           
  7157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  7158                           ;stkvar	_p @ sp[(-18)+16]
  7159  010758  50E1               	movf	fsr1l,w,c
  7160  01075A  0FFE               	addlw	-2
  7161  01075C  6ED9               	movwf	fsr2l,c
  7162  01075E  50E2               	movf	fsr1h,w,c
  7163  010760  6EDA               	movwf	fsr2h,c
  7164  010762  0EFF               	movlw	255
  7165  010764  22DA               	addwfc	fsr2h,f,c
  7166  010766  06DE               	decf	postinc2,f,c
  7167  010768  0E00               	movlw	0
  7168  01076A  5ADD               	subwfb	postdec2,f,c
  7169                           
  7170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  7171                           ;stkvar	_w @ sp[(-18)+14]
  7172  01076C  50E1               	movf	fsr1l,w,c
  7173  01076E  0FFC               	addlw	-4
  7174  010770  6ED9               	movwf	fsr2l,c
  7175  010772  50E2               	movf	fsr1h,w,c
  7176  010774  6EDA               	movwf	fsr2h,c
  7177  010776  0EFF               	movlw	255
  7178  010778  22DA               	addwfc	fsr2h,f,c
  7179  01077A  06DE               	decf	postinc2,f,c
  7180  01077C  0E00               	movlw	0
  7181  01077E  5ADD               	subwfb	postdec2,f,c
  7182                           
  7183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7184  010780  0E0A               	movlw	10
  7185  010782  6EE6               	movwf	postinc1,c
  7186  010784  0E00               	movlw	0
  7187  010786  6EE6               	movwf	postinc1,c
  7188  010788  0E00               	movlw	0
  7189  01078A  6EE6               	movwf	postinc1,c
  7190  01078C  0E00               	movlw	0
  7191  01078E  6EE6               	movwf	postinc1,c
  7192  010790  0E00               	movlw	0
  7193  010792  6EE6               	movwf	postinc1,c
  7194  010794  0E00               	movlw	0
  7195  010796  6EE6               	movwf	postinc1,c
  7196  010798  0E00               	movlw	0
  7197  01079A  6EE6               	movwf	postinc1,c
  7198  01079C  0E00               	movlw	0
  7199  01079E  6EE6               	movwf	postinc1,c
  7200                           
  7201                           ;stkvar	_n @ sp[(-26)+2]
  7202  0107A0  50E1               	movf	fsr1l,w,c
  7203  0107A2  0FE8               	addlw	-24
  7204  0107A4  6ED9               	movwf	fsr2l,c
  7205  0107A6  50E2               	movf	fsr1h,w,c
  7206  0107A8  6EDA               	movwf	fsr2h,c
  7207  0107AA  0EFF               	movlw	255
  7208  0107AC  22DA               	addwfc	fsr2h,f,c
  7209  0107AE  006F FF7B FFE6     	movff	postinc2,postinc1
  7210  0107B4  006F FF7B FFE6     	movff	postinc2,postinc1
  7211  0107BA  006F FF7B FFE6     	movff	postinc2,postinc1
  7212  0107C0  006F FF7B FFE6     	movff	postinc2,postinc1
  7213  0107C6  006F FF7B FFE6     	movff	postinc2,postinc1
  7214  0107CC  006F FF7B FFE6     	movff	postinc2,postinc1
  7215  0107D2  006F FF7B FFE6     	movff	postinc2,postinc1
  7216  0107D8  006F FF7B FFE6     	movff	postinc2,postinc1
  7217  0107DE  ECDA  F08A         	call	___aodiv	;wreg free
  7218  0107E2  52E5               	movf	postdec1,f,c
  7219  0107E4  006F FF9C  F050    	movff	indf1,btemp+23
  7220  0107EA  52E5               	movf	postdec1,f,c
  7221  0107EC  006F FF9C  F04F    	movff	indf1,btemp+22
  7222  0107F2  52E5               	movf	postdec1,f,c
  7223  0107F4  006F FF9C  F04E    	movff	indf1,btemp+21
  7224  0107FA  52E5               	movf	postdec1,f,c
  7225  0107FC  006F FF9C  F04D    	movff	indf1,btemp+20
  7226  010802  52E5               	movf	postdec1,f,c
  7227  010804  006F FF9C  F04C    	movff	indf1,btemp+19
  7228  01080A  52E5               	movf	postdec1,f,c
  7229  01080C  006F FF9C  F04B    	movff	indf1,btemp+18
  7230  010812  52E5               	movf	postdec1,f,c
  7231  010814  006F FF9C  F04A    	movff	indf1,btemp+17
  7232  01081A  52E5               	movf	postdec1,f,c
  7233  01081C  006F FF9C  F049    	movff	indf1,btemp+16
  7234  010822  0EF8               	movlw	248
  7235  010824  26E1               	addwf	fsr1l,f,c
  7236  010826  0EFF               	movlw	255
  7237  010828  22E2               	addwfc	fsr1h,f,c
  7238                           
  7239                           ;stkvar	_n @ sp[(-18)+2]
  7240  01082A  0EF0               	movlw	-16
  7241  01082C  0060  F127  FFE3   	movff	btemp+16,plusw1
  7242  010832  0EF1               	movlw	-15
  7243  010834  0060  F12B  FFE3   	movff	btemp+17,plusw1
  7244  01083A  0EF2               	movlw	-14
  7245  01083C  0060  F12F  FFE3   	movff	btemp+18,plusw1
  7246  010842  0EF3               	movlw	-13
  7247  010844  0060  F133  FFE3   	movff	btemp+19,plusw1
  7248  01084A  0EF4               	movlw	-12
  7249  01084C  0060  F137  FFE3   	movff	btemp+20,plusw1
  7250  010852  0EF5               	movlw	-11
  7251  010854  0060  F13B  FFE3   	movff	btemp+21,plusw1
  7252  01085A  0EF6               	movlw	-10
  7253  01085C  0060  F13F  FFE3   	movff	btemp+22,plusw1
  7254  010862  0EF7               	movlw	-9
  7255  010864  0060  F143  FFE3   	movff	btemp+23,plusw1
  7256  01086A                     l5590:
  7257                           
  7258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7259                           ;stkvar	_i @ sp[(-18)+10]
  7260  01086A  0EF9               	movlw	-7
  7261  01086C  BEE3               	btfsc	plusw1,7,c
  7262  01086E  D036               	goto	u3530
  7263  010870  0EF9               	movlw	-7
  7264  010872  50E3               	movf	plusw1,w,c
  7265  010874  E104               	bnz	u3490
  7266  010876  0EF8               	movlw	-8
  7267  010878  04E3               	decf	plusw1,w,c
  7268  01087A  A0D8               	btfss	status,0,c
  7269  01087C  D02F               	goto	u3530
  7270  01087E                     u3490:
  7271                           
  7272                           ;stkvar	_n @ sp[(-18)+2]
  7273  01087E  0EF0               	movlw	-16
  7274  010880  50E3               	movf	plusw1,w,c
  7275  010882  E115               	bnz	u3501
  7276  010884  0EF1               	movlw	-15
  7277  010886  50E3               	movf	plusw1,w,c
  7278  010888  E112               	bnz	u3501
  7279  01088A  0EF2               	movlw	-14
  7280  01088C  50E3               	movf	plusw1,w,c
  7281  01088E  E10F               	bnz	u3501
  7282  010890  0EF3               	movlw	-13
  7283  010892  50E3               	movf	plusw1,w,c
  7284  010894  E10C               	bnz	u3501
  7285  010896  0EF4               	movlw	-12
  7286  010898  50E3               	movf	plusw1,w,c
  7287  01089A  E109               	bnz	u3501
  7288  01089C  0EF5               	movlw	-11
  7289  01089E  50E3               	movf	plusw1,w,c
  7290  0108A0  E106               	bnz	u3501
  7291  0108A2  0EF6               	movlw	-10
  7292  0108A4  50E3               	movf	plusw1,w,c
  7293  0108A6  E103               	bnz	u3501
  7294  0108A8  0EF7               	movlw	-9
  7295  0108AA  50E3               	movf	plusw1,w,c
  7296  0108AC  A4D8               	btfss	status,2,c
  7297  0108AE                     u3501:
  7298  0108AE  D6DA               	goto	l5580
  7299                           
  7300                           ;stkvar	_p @ sp[(-18)+16]
  7301  0108B0  0EFF               	movlw	-1
  7302  0108B2  BEE3               	btfsc	plusw1,7,c
  7303  0108B4  D007               	goto	u3510
  7304  0108B6  0EFF               	movlw	-1
  7305  0108B8  50E3               	movf	plusw1,w,c
  7306  0108BA  E103               	bnz	u3511
  7307  0108BC  0EFE               	movlw	-2
  7308  0108BE  04E3               	decf	plusw1,w,c
  7309  0108C0  B0D8               	btfsc	status,0,c
  7310  0108C2                     u3511:
  7311  0108C2  D6D0               	goto	l5580
  7312  0108C4                     u3510:
  7313                           
  7314                           ;stkvar	_w @ sp[(-18)+14]
  7315  0108C4  0EFD               	movlw	-3
  7316  0108C6  BEE3               	btfsc	plusw1,7,c
  7317  0108C8  D009               	goto	u3530
  7318  0108CA  0EFD               	movlw	-3
  7319  0108CC  50E3               	movf	plusw1,w,c
  7320  0108CE  E104               	bnz	u3520
  7321  0108D0  0EFC               	movlw	-4
  7322  0108D2  04E3               	decf	plusw1,w,c
  7323  0108D4  A0D8               	btfss	status,0,c
  7324  0108D6  D002               	goto	u3530
  7325  0108D8                     u3520:
  7326  0108D8  B226               	btfsc	_flags^0,1,c
  7327  0108DA  D6C4               	goto	l5580
  7328  0108DC                     u3530:
  7329                           
  7330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7331                           ;stkvar	_s @ sp[(-18)+12]
  7332  0108DC  0EFA               	movlw	-6
  7333  0108DE  006F FF8C  F039    	movff	plusw1,btemp
  7334  0108E4  0EFB               	movlw	-5
  7335  0108E6  50E3               	movf	plusw1,w,c
  7336  0108E8  1039               	iorwf	btemp^0,w,c
  7337  0108EA  A4D8               	btfss	status,2,c
  7338  0108EC  D002               	goto	u3550
  7339  0108EE  A426               	btfss	_flags^0,2,c
  7340  0108F0  D02D               	goto	l5614
  7341  0108F2                     u3550:
  7342                           
  7343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  7344                           ;stkvar	_i @ sp[(-18)+10]
  7345  0108F2  50E1               	movf	fsr1l,w,c
  7346  0108F4  0FF8               	addlw	-8
  7347  0108F6  6ED9               	movwf	fsr2l,c
  7348  0108F8  50E2               	movf	fsr1h,w,c
  7349  0108FA  6EDA               	movwf	fsr2h,c
  7350  0108FC  0EFF               	movlw	255
  7351  0108FE  22DA               	addwfc	fsr2h,f,c
  7352  010900  06DE               	decf	postinc2,f,c
  7353  010902  0E00               	movlw	0
  7354  010904  5ADD               	subwfb	postdec2,f,c
  7355                           
  7356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7357                           ;stkvar	_s @ sp[(-18)+12]
  7358  010906  0EFA               	movlw	-6
  7359  010908  006F FF8C  F039    	movff	plusw1,btemp
  7360  01090E  0EFB               	movlw	-5
  7361  010910  50E3               	movf	plusw1,w,c
  7362  010912  1039               	iorwf	btemp^0,w,c
  7363  010914  A4D8               	btfss	status,2,c
  7364  010916  D002               	goto	l5610
  7365  010918  0E2B               	movlw	43
  7366  01091A  D001               	goto	L4
  7367  01091C                     l5610:
  7368  01091C  0E2D               	movlw	45
  7369  01091E                     L4:
  7370  01091E  6E43               	movwf	(btemp+10)^0,c
  7371  010920  0E00               	movlw	0
  7372  010922  6E44               	movwf	(btemp+11)^0,c
  7373                           
  7374                           ;stkvar	_dtoa$3897 @ sp[(-18)+0]
  7375  010924  0EEE               	movlw	-18
  7376  010926  0060  F10F  FFE3   	movff	btemp+10,plusw1
  7377  01092C  0EEF               	movlw	-17
  7378  01092E  0060  F113  FFE3   	movff	btemp+11,plusw1
  7379                           
  7380                           ;stkvar	_dtoa$3897 @ sp[(-18)+0]
  7381                           ;stkvar	_i @ sp[(-18)+10]
  7382  010934  0EF8               	movlw	-8
  7383  010936  006F FF8C  F044    	movff	plusw1,btemp+11
  7384  01093C  5044               	movf	(btemp+11)^0,w,c
  7385  01093E  0F86               	addlw	low _dbuf
  7386  010940  6ED9               	movwf	fsr2l,c
  7387  010942  6ADA               	clrf	fsr2h,c
  7388  010944  0EEE               	movlw	-18
  7389  010946  006F FF8F FFDF     	movff	plusw1,indf2
  7390  01094C                     l5614:
  7391                           
  7392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7393                           ;stkvar	_w @ sp[(-18)+14]
  7394  01094C  0EFC               	movlw	-4
  7395  01094E  006F FF8F FFE6     	movff	plusw1,postinc1
  7396  010954  006F FF8F FFE6     	movff	plusw1,postinc1
  7397                           
  7398                           ;stkvar	_i @ sp[(-20)+10]
  7399  01095A  0EF6               	movlw	-10
  7400  01095C  006F FF8C  F044    	movff	plusw1,btemp+11
  7401  010962  5044               	movf	(btemp+11)^0,w,c
  7402  010964  0F86               	addlw	low _dbuf
  7403  010966  6EE6               	movwf	postinc1,c
  7404                           
  7405                           ;stkvar	_fp @ sp[(-21)+-2]
  7406  010968  0EE9               	movlw	-23
  7407  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
  7408  010970  006F FF8F FFE6     	movff	plusw1,postinc1
  7409  010976  EC78  F090         	call	_pad	;wreg free
  7410                           
  7411                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  7412  01097A  0EE4               	movlw	228
  7413  01097C  26E1               	addwf	fsr1l,f,c
  7414  01097E  0EFF               	movlw	255
  7415  010980  22E2               	addwfc	fsr1h,f,c
  7416  010982  0012               	return		;funcret
  7417  010984                     __end_of_dtoa:
  7418                           	opt callstack 0
  7419                           
  7420 ;; *************** function _abs *****************
  7421 ;; Defined at:
  7422 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  a               2  [STACK] int 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  2  [STACK] int 
  7429 ;; Registers used:
  7430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7440 ;;Total ram usage:        0 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    6
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_dtoa
  7447 ;; This function uses a reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text33
  7451  012D3A                     __ptext33:
  7452                           	opt callstack 0
  7453  012D3A                     _abs:
  7454                           	opt callstack 17
  7455                           
  7456                           ;stkvar	_a @ sp[(0)+-2]
  7457                           
  7458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7459                           ;incstack = 0
  7460  012D3A  0EFF               	movlw	-1
  7461  012D3C  BEE3               	btfsc	plusw1,7,c
  7462  012D3E  D007               	goto	u1820
  7463  012D40  0EFF               	movlw	-1
  7464  012D42  50E3               	movf	plusw1,w,c
  7465  012D44  E112               	bnz	l4096
  7466  012D46  0EFE               	movlw	-2
  7467  012D48  04E3               	decf	plusw1,w,c
  7468  012D4A  B0D8               	btfsc	status,0,c
  7469  012D4C  D00E               	goto	l4096
  7470  012D4E                     u1820:
  7471                           
  7472                           ;stkvar	_a @ sp[(0)+-2]
  7473  012D4E  0EFE               	movlw	-2
  7474  012D50  006F FF8C  F039    	movff	plusw1,btemp
  7475  012D56  1E39               	comf	btemp^0,f,c
  7476  012D58  0EFF               	movlw	-1
  7477  012D5A  006F FF8C  F03A    	movff	plusw1,btemp+1
  7478  012D60  1E3A               	comf	(btemp+1)^0,f,c
  7479  012D62  2A39               	incf	btemp^0,f,c
  7480  012D64  B4D8               	btfsc	status,2,c
  7481  012D66  2A3A               	incf	(btemp+1)^0,f,c
  7482  012D68  D008               	goto	l2417
  7483  012D6A                     l4096:
  7484                           
  7485                           ;stkvar	_a @ sp[(0)+-2]
  7486  012D6A  0EFE               	movlw	-2
  7487  012D6C  006F FF8C  F039    	movff	plusw1,btemp
  7488  012D72  0EFF               	movlw	-1
  7489  012D74  006F FF8C  F03A    	movff	plusw1,btemp+1
  7490  012D7A                     l2417:
  7491                           
  7492                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  7493  012D7A  52E5               	movf	postdec1,f,c
  7494  012D7C  52E5               	movf	postdec1,f,c
  7495  012D7E  0012               	return		;funcret
  7496  012D80                     __end_of_abs:
  7497                           	opt callstack 0
  7498                           
  7499 ;; *************** function ___aomod *****************
  7500 ;; Defined at:
  7501 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  dividend        8  [STACK] long long 
  7504 ;;  divisor         8  [STACK] long long 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  sign            1  [STACK] unsigned char 
  7507 ;;  counter         1  [STACK] unsigned char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  8  [STACK] long long 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:    6
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_dtoa
  7528 ;; This function uses a reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text34
  7532  011834                     __ptext34:
  7533                           	opt callstack 0
  7534  011834                     ___aomod:
  7535                           	opt callstack 0
  7536                           
  7537                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  7538  011834  52E6               	movf	postinc1,f,c
  7539  011836  52E6               	movf	postinc1,f,c
  7540                           
  7541                           ;stkvar	_sign @ sp[(-2)+0]
  7542                           
  7543                           ;incstack = 0
  7544  011838  0EFE               	movlw	-2
  7545  01183A  6AE3               	clrf	plusw1,c
  7546                           
  7547                           ;stkvar	_dividend @ sp[(-2)+-8]
  7548  01183C  0EFD               	movlw	-3
  7549  01183E  AEE3               	btfss	plusw1,7,c
  7550  011840  D028               	goto	l4174
  7551                           
  7552                           ;stkvar	_dividend @ sp[(-2)+-8]
  7553                           ;stkvar	_dividend @ sp[(-2)+-8]
  7554  011842  0EF6               	movlw	-10
  7555  011844  6CE3               	negf	plusw1,c
  7556  011846  0EF7               	movlw	-9
  7557  011848  1EE3               	comf	plusw1,f,c
  7558  01184A  0EF8               	movlw	-8
  7559  01184C  1EE3               	comf	plusw1,f,c
  7560  01184E  0EF9               	movlw	-7
  7561  011850  1EE3               	comf	plusw1,f,c
  7562  011852  0EFA               	movlw	-6
  7563  011854  1EE3               	comf	plusw1,f,c
  7564  011856  0EFB               	movlw	-5
  7565  011858  1EE3               	comf	plusw1,f,c
  7566  01185A  0EFC               	movlw	-4
  7567  01185C  1EE3               	comf	plusw1,f,c
  7568  01185E  0EFD               	movlw	-3
  7569  011860  1EE3               	comf	plusw1,f,c
  7570  011862  E314               	bnc	u2030
  7571  011864  0EF7               	movlw	-9
  7572  011866  2AE3               	incf	plusw1,f,c
  7573  011868  E311               	bnc	u2030
  7574  01186A  0EF8               	movlw	-8
  7575  01186C  2AE3               	incf	plusw1,f,c
  7576  01186E  E30E               	bnc	u2030
  7577  011870  0EF9               	movlw	-7
  7578  011872  2AE3               	incf	plusw1,f,c
  7579  011874  E30B               	bnc	u2030
  7580  011876  0EFA               	movlw	-6
  7581  011878  2AE3               	incf	plusw1,f,c
  7582  01187A  E308               	bnc	u2030
  7583  01187C  0EFB               	movlw	-5
  7584  01187E  2AE3               	incf	plusw1,f,c
  7585  011880  E305               	bnc	u2030
  7586  011882  0EFC               	movlw	-4
  7587  011884  2AE3               	incf	plusw1,f,c
  7588  011886  E302               	bnc	u2030
  7589  011888  0EFD               	movlw	-3
  7590  01188A  2AE3               	incf	plusw1,f,c
  7591  01188C                     u2030:
  7592                           
  7593                           ;stkvar	_sign @ sp[(-2)+0]
  7594  01188C  0EFE               	movlw	-2
  7595  01188E  6AE3               	clrf	plusw1,c
  7596  011890  2AE3               	incf	plusw1,f,c
  7597  011892                     l4174:
  7598                           
  7599                           ;stkvar	_divisor @ sp[(-2)+-16]
  7600  011892  0EF5               	movlw	-11
  7601  011894  AEE3               	btfss	plusw1,7,c
  7602  011896  D025               	goto	u2050
  7603                           
  7604                           ;stkvar	_divisor @ sp[(-2)+-16]
  7605                           ;stkvar	_divisor @ sp[(-2)+-16]
  7606  011898  0EEE               	movlw	-18
  7607  01189A  6CE3               	negf	plusw1,c
  7608  01189C  0EEF               	movlw	-17
  7609  01189E  1EE3               	comf	plusw1,f,c
  7610  0118A0  0EF0               	movlw	-16
  7611  0118A2  1EE3               	comf	plusw1,f,c
  7612  0118A4  0EF1               	movlw	-15
  7613  0118A6  1EE3               	comf	plusw1,f,c
  7614  0118A8  0EF2               	movlw	-14
  7615  0118AA  1EE3               	comf	plusw1,f,c
  7616  0118AC  0EF3               	movlw	-13
  7617  0118AE  1EE3               	comf	plusw1,f,c
  7618  0118B0  0EF4               	movlw	-12
  7619  0118B2  1EE3               	comf	plusw1,f,c
  7620  0118B4  0EF5               	movlw	-11
  7621  0118B6  1EE3               	comf	plusw1,f,c
  7622  0118B8  E314               	bnc	u2050
  7623  0118BA  0EEF               	movlw	-17
  7624  0118BC  2AE3               	incf	plusw1,f,c
  7625  0118BE  E311               	bnc	u2050
  7626  0118C0  0EF0               	movlw	-16
  7627  0118C2  2AE3               	incf	plusw1,f,c
  7628  0118C4  E30E               	bnc	u2050
  7629  0118C6  0EF1               	movlw	-15
  7630  0118C8  2AE3               	incf	plusw1,f,c
  7631  0118CA  E30B               	bnc	u2050
  7632  0118CC  0EF2               	movlw	-14
  7633  0118CE  2AE3               	incf	plusw1,f,c
  7634  0118D0  E308               	bnc	u2050
  7635  0118D2  0EF3               	movlw	-13
  7636  0118D4  2AE3               	incf	plusw1,f,c
  7637  0118D6  E305               	bnc	u2050
  7638  0118D8  0EF4               	movlw	-12
  7639  0118DA  2AE3               	incf	plusw1,f,c
  7640  0118DC  E302               	bnc	u2050
  7641  0118DE  0EF5               	movlw	-11
  7642  0118E0  2AE3               	incf	plusw1,f,c
  7643  0118E2                     u2050:
  7644                           
  7645                           ;stkvar	_divisor @ sp[(-2)+-16]
  7646  0118E2  0EEE               	movlw	-18
  7647  0118E4  50E3               	movf	plusw1,w,c
  7648  0118E6  E116               	bnz	u2060
  7649  0118E8  0EEF               	movlw	-17
  7650  0118EA  50E3               	movf	plusw1,w,c
  7651  0118EC  E113               	bnz	u2060
  7652  0118EE  0EF0               	movlw	-16
  7653  0118F0  50E3               	movf	plusw1,w,c
  7654  0118F2  E110               	bnz	u2060
  7655  0118F4  0EF1               	movlw	-15
  7656  0118F6  50E3               	movf	plusw1,w,c
  7657  0118F8  E10D               	bnz	u2060
  7658  0118FA  0EF2               	movlw	-14
  7659  0118FC  50E3               	movf	plusw1,w,c
  7660  0118FE  E10A               	bnz	u2060
  7661  011900  0EF3               	movlw	-13
  7662  011902  50E3               	movf	plusw1,w,c
  7663  011904  E107               	bnz	u2060
  7664  011906  0EF4               	movlw	-12
  7665  011908  50E3               	movf	plusw1,w,c
  7666  01190A  E104               	bnz	u2060
  7667  01190C  0EF5               	movlw	-11
  7668  01190E  50E3               	movf	plusw1,w,c
  7669  011910  B4D8               	btfsc	status,2,c
  7670  011912  D075               	goto	u2090
  7671  011914                     u2060:
  7672                           
  7673                           ;stkvar	_counter @ sp[(-2)+1]
  7674  011914  0EFF               	movlw	-1
  7675  011916  6AE3               	clrf	plusw1,c
  7676  011918  D012               	goto	L5
  7677  01191A                     l4182:
  7678                           
  7679                           ;stkvar	_divisor @ sp[(-2)+-16]
  7680  01191A  90D8               	bcf	status,0,c
  7681  01191C  0EEE               	movlw	-18
  7682  01191E  36E3               	rlcf	plusw1,f,c
  7683  011920  0EEF               	movlw	-17
  7684  011922  36E3               	rlcf	plusw1,f,c
  7685  011924  0EF0               	movlw	-16
  7686  011926  36E3               	rlcf	plusw1,f,c
  7687  011928  0EF1               	movlw	-15
  7688  01192A  36E3               	rlcf	plusw1,f,c
  7689  01192C  0EF2               	movlw	-14
  7690  01192E  36E3               	rlcf	plusw1,f,c
  7691  011930  0EF3               	movlw	-13
  7692  011932  36E3               	rlcf	plusw1,f,c
  7693  011934  0EF4               	movlw	-12
  7694  011936  36E3               	rlcf	plusw1,f,c
  7695  011938  0EF5               	movlw	-11
  7696  01193A  36E3               	rlcf	plusw1,f,c
  7697                           
  7698                           ;stkvar	_counter @ sp[(-2)+1]
  7699  01193C  0EFF               	movlw	-1
  7700  01193E                     L5:
  7701  01193E  2AE3               	incf	plusw1,f,c
  7702                           
  7703                           ;stkvar	_divisor @ sp[(-2)+-16]
  7704  011940  0EF5               	movlw	-11
  7705  011942  AEE3               	btfss	plusw1,7,c
  7706  011944  D7EA               	goto	l4182
  7707  011946                     u2070:
  7708                           
  7709                           ;stkvar	_divisor @ sp[(-2)+-16]
  7710                           ;stkvar	_dividend @ sp[(-2)+-8]
  7711  011946  50E1               	movf	fsr1l,w,c
  7712  011948  0FF6               	addlw	-10
  7713  01194A  6ED9               	movwf	fsr2l,c
  7714  01194C  50E2               	movf	fsr1h,w,c
  7715  01194E  6EDA               	movwf	fsr2h,c
  7716  011950  0EFF               	movlw	255
  7717  011952  22DA               	addwfc	fsr2h,f,c
  7718  011954  0EEE               	movlw	-18
  7719  011956  50E3               	movf	plusw1,w,c
  7720  011958  5CDE               	subwf	postinc2,w,c
  7721  01195A  0EEF               	movlw	-17
  7722  01195C  50E3               	movf	plusw1,w,c
  7723  01195E  58DE               	subwfb	postinc2,w,c
  7724  011960  0EF0               	movlw	-16
  7725  011962  50E3               	movf	plusw1,w,c
  7726  011964  58DE               	subwfb	postinc2,w,c
  7727  011966  0EF1               	movlw	-15
  7728  011968  50E3               	movf	plusw1,w,c
  7729  01196A  58DE               	subwfb	postinc2,w,c
  7730  01196C  0EF2               	movlw	-14
  7731  01196E  50E3               	movf	plusw1,w,c
  7732  011970  58DE               	subwfb	postinc2,w,c
  7733  011972  0EF3               	movlw	-13
  7734  011974  50E3               	movf	plusw1,w,c
  7735  011976  58DE               	subwfb	postinc2,w,c
  7736  011978  0EF4               	movlw	-12
  7737  01197A  50E3               	movf	plusw1,w,c
  7738  01197C  58DE               	subwfb	postinc2,w,c
  7739  01197E  0EF5               	movlw	-11
  7740  011980  50E3               	movf	plusw1,w,c
  7741  011982  58DE               	subwfb	postinc2,w,c
  7742  011984  A0D8               	btfss	status,0,c
  7743  011986  D01F               	goto	l4190
  7744                           
  7745                           ;stkvar	_divisor @ sp[(-2)+-16]
  7746                           ;stkvar	_dividend @ sp[(-2)+-8]
  7747  011988  50E1               	movf	fsr1l,w,c
  7748  01198A  0FF6               	addlw	-10
  7749  01198C  6ED9               	movwf	fsr2l,c
  7750  01198E  50E2               	movf	fsr1h,w,c
  7751  011990  6EDA               	movwf	fsr2h,c
  7752  011992  0EFF               	movlw	255
  7753  011994  22DA               	addwfc	fsr2h,f,c
  7754  011996  0EEE               	movlw	-18
  7755  011998  50E3               	movf	plusw1,w,c
  7756  01199A  5EDE               	subwf	postinc2,f,c
  7757  01199C  0EEF               	movlw	-17
  7758  01199E  50E3               	movf	plusw1,w,c
  7759  0119A0  5ADE               	subwfb	postinc2,f,c
  7760  0119A2  0EF0               	movlw	-16
  7761  0119A4  50E3               	movf	plusw1,w,c
  7762  0119A6  5ADE               	subwfb	postinc2,f,c
  7763  0119A8  0EF1               	movlw	-15
  7764  0119AA  50E3               	movf	plusw1,w,c
  7765  0119AC  5ADE               	subwfb	postinc2,f,c
  7766  0119AE  0EF2               	movlw	-14
  7767  0119B0  50E3               	movf	plusw1,w,c
  7768  0119B2  5ADE               	subwfb	postinc2,f,c
  7769  0119B4  0EF3               	movlw	-13
  7770  0119B6  50E3               	movf	plusw1,w,c
  7771  0119B8  5ADE               	subwfb	postinc2,f,c
  7772  0119BA  0EF4               	movlw	-12
  7773  0119BC  50E3               	movf	plusw1,w,c
  7774  0119BE  5ADE               	subwfb	postinc2,f,c
  7775  0119C0  0EF5               	movlw	-11
  7776  0119C2  50E3               	movf	plusw1,w,c
  7777  0119C4  5ADE               	subwfb	postinc2,f,c
  7778  0119C6                     l4190:
  7779                           
  7780                           ;stkvar	_divisor @ sp[(-2)+-16]
  7781  0119C6  90D8               	bcf	status,0,c
  7782  0119C8  0EF5               	movlw	-11
  7783  0119CA  32E3               	rrcf	plusw1,f,c
  7784  0119CC  0EF4               	movlw	-12
  7785  0119CE  32E3               	rrcf	plusw1,f,c
  7786  0119D0  0EF3               	movlw	-13
  7787  0119D2  32E3               	rrcf	plusw1,f,c
  7788  0119D4  0EF2               	movlw	-14
  7789  0119D6  32E3               	rrcf	plusw1,f,c
  7790  0119D8  0EF1               	movlw	-15
  7791  0119DA  32E3               	rrcf	plusw1,f,c
  7792  0119DC  0EF0               	movlw	-16
  7793  0119DE  32E3               	rrcf	plusw1,f,c
  7794  0119E0  0EEF               	movlw	-17
  7795  0119E2  32E3               	rrcf	plusw1,f,c
  7796  0119E4  0EEE               	movlw	-18
  7797  0119E6  32E3               	rrcf	plusw1,f,c
  7798                           
  7799                           ;stkvar	_counter @ sp[(-2)+1]
  7800  0119E8  0EFF               	movlw	-1
  7801  0119EA  50E3               	movf	plusw1,w,c
  7802  0119EC  6E39               	movwf	btemp^0,c
  7803  0119EE  0E01               	movlw	1
  7804  0119F0  5E39               	subwf	btemp^0,f,c
  7805  0119F2  0EFF               	movlw	-1
  7806  0119F4  0060  F0E7  FFE3   	movff	btemp,plusw1
  7807  0119FA  A4D8               	btfss	status,2,c
  7808  0119FC  D7A4               	goto	u2070
  7809  0119FE                     u2090:
  7810                           
  7811                           ;stkvar	_sign @ sp[(-2)+0]
  7812  0119FE  0EFE               	movlw	-2
  7813  011A00  50E3               	movf	plusw1,w,c
  7814  011A02  B4D8               	btfsc	status,2,c
  7815  011A04  D025               	goto	u2110
  7816                           
  7817                           ;stkvar	_dividend @ sp[(-2)+-8]
  7818                           ;stkvar	_dividend @ sp[(-2)+-8]
  7819  011A06  0EF6               	movlw	-10
  7820  011A08  6CE3               	negf	plusw1,c
  7821  011A0A  0EF7               	movlw	-9
  7822  011A0C  1EE3               	comf	plusw1,f,c
  7823  011A0E  0EF8               	movlw	-8
  7824  011A10  1EE3               	comf	plusw1,f,c
  7825  011A12  0EF9               	movlw	-7
  7826  011A14  1EE3               	comf	plusw1,f,c
  7827  011A16  0EFA               	movlw	-6
  7828  011A18  1EE3               	comf	plusw1,f,c
  7829  011A1A  0EFB               	movlw	-5
  7830  011A1C  1EE3               	comf	plusw1,f,c
  7831  011A1E  0EFC               	movlw	-4
  7832  011A20  1EE3               	comf	plusw1,f,c
  7833  011A22  0EFD               	movlw	-3
  7834  011A24  1EE3               	comf	plusw1,f,c
  7835  011A26  E314               	bnc	u2110
  7836  011A28  0EF7               	movlw	-9
  7837  011A2A  2AE3               	incf	plusw1,f,c
  7838  011A2C  E311               	bnc	u2110
  7839  011A2E  0EF8               	movlw	-8
  7840  011A30  2AE3               	incf	plusw1,f,c
  7841  011A32  E30E               	bnc	u2110
  7842  011A34  0EF9               	movlw	-7
  7843  011A36  2AE3               	incf	plusw1,f,c
  7844  011A38  E30B               	bnc	u2110
  7845  011A3A  0EFA               	movlw	-6
  7846  011A3C  2AE3               	incf	plusw1,f,c
  7847  011A3E  E308               	bnc	u2110
  7848  011A40  0EFB               	movlw	-5
  7849  011A42  2AE3               	incf	plusw1,f,c
  7850  011A44  E305               	bnc	u2110
  7851  011A46  0EFC               	movlw	-4
  7852  011A48  2AE3               	incf	plusw1,f,c
  7853  011A4A  E302               	bnc	u2110
  7854  011A4C  0EFD               	movlw	-3
  7855  011A4E  2AE3               	incf	plusw1,f,c
  7856  011A50                     u2110:
  7857                           
  7858                           ;stkvar	_dividend @ sp[(-2)+-8]
  7859  011A50  0EF6               	movlw	246
  7860  011A52  24E1               	addwf	fsr1l,w,c
  7861  011A54  6ED9               	movwf	fsr2l,c
  7862  011A56  0EFF               	movlw	255
  7863  011A58  20E2               	addwfc	fsr1h,w,c
  7864  011A5A  6EDA               	movwf	fsr2h,c
  7865                           
  7866                           ;stkvar	?___aomod @ sp[(-2)+-8]
  7867  011A5C  0E08               	movlw	8
  7868  011A5E  6E39               	movwf	btemp^0,c
  7869  011A60  0EF6               	movlw	-10
  7870  011A62                     us212999:
  7871  011A62  006F FF7B FFE3     	movff	postinc2,plusw1
  7872  011A68  28E8               	incf	wreg,w,c
  7873  011A6A  2E39               	decfsz	btemp^0,f,c
  7874  011A6C  D7FA               	bra	us212999
  7875                           
  7876                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  7877  011A6E  52E5               	movf	postdec1,f,c
  7878  011A70  52E5               	movf	postdec1,f,c
  7879  011A72  0012               	return		;funcret
  7880  011A74                     __end_of___aomod:
  7881                           	opt callstack 0
  7882                           
  7883 ;; *************** function ___aodiv *****************
  7884 ;; Defined at:
  7885 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  dividend        8  [STACK] long long 
  7888 ;;  divisor         8  [STACK] long long 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  quotient        8  [STACK] long long 
  7891 ;;  sign            1  [STACK] unsigned char 
  7892 ;;  counter         1  [STACK] unsigned char 
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  8  [STACK] long long 
  7895 ;; Registers used:
  7896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7906 ;;Total ram usage:        0 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    6
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_dtoa
  7913 ;; This function uses a reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text35
  7917  0115B4                     __ptext35:
  7918                           	opt callstack 0
  7919  0115B4                     ___aodiv:
  7920                           	opt callstack 0
  7921                           
  7922                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  7923  0115B4  0E0A               	movlw	10
  7924  0115B6  26E1               	addwf	fsr1l,f,c
  7925  0115B8  0E00               	movlw	0
  7926  0115BA  22E2               	addwfc	fsr1h,f,c
  7927                           
  7928                           ;stkvar	_sign @ sp[(-10)+8]
  7929                           
  7930                           ;incstack = 0
  7931  0115BC  0EFE               	movlw	-2
  7932  0115BE  6AE3               	clrf	plusw1,c
  7933                           
  7934                           ;stkvar	_divisor @ sp[(-10)+-16]
  7935  0115C0  0EED               	movlw	-19
  7936  0115C2  AEE3               	btfss	plusw1,7,c
  7937  0115C4  D028               	goto	l4130
  7938                           
  7939                           ;stkvar	_divisor @ sp[(-10)+-16]
  7940                           ;stkvar	_divisor @ sp[(-10)+-16]
  7941  0115C6  0EE6               	movlw	-26
  7942  0115C8  6CE3               	negf	plusw1,c
  7943  0115CA  0EE7               	movlw	-25
  7944  0115CC  1EE3               	comf	plusw1,f,c
  7945  0115CE  0EE8               	movlw	-24
  7946  0115D0  1EE3               	comf	plusw1,f,c
  7947  0115D2  0EE9               	movlw	-23
  7948  0115D4  1EE3               	comf	plusw1,f,c
  7949  0115D6  0EEA               	movlw	-22
  7950  0115D8  1EE3               	comf	plusw1,f,c
  7951  0115DA  0EEB               	movlw	-21
  7952  0115DC  1EE3               	comf	plusw1,f,c
  7953  0115DE  0EEC               	movlw	-20
  7954  0115E0  1EE3               	comf	plusw1,f,c
  7955  0115E2  0EED               	movlw	-19
  7956  0115E4  1EE3               	comf	plusw1,f,c
  7957  0115E6  E314               	bnc	u1910
  7958  0115E8  0EE7               	movlw	-25
  7959  0115EA  2AE3               	incf	plusw1,f,c
  7960  0115EC  E311               	bnc	u1910
  7961  0115EE  0EE8               	movlw	-24
  7962  0115F0  2AE3               	incf	plusw1,f,c
  7963  0115F2  E30E               	bnc	u1910
  7964  0115F4  0EE9               	movlw	-23
  7965  0115F6  2AE3               	incf	plusw1,f,c
  7966  0115F8  E30B               	bnc	u1910
  7967  0115FA  0EEA               	movlw	-22
  7968  0115FC  2AE3               	incf	plusw1,f,c
  7969  0115FE  E308               	bnc	u1910
  7970  011600  0EEB               	movlw	-21
  7971  011602  2AE3               	incf	plusw1,f,c
  7972  011604  E305               	bnc	u1910
  7973  011606  0EEC               	movlw	-20
  7974  011608  2AE3               	incf	plusw1,f,c
  7975  01160A  E302               	bnc	u1910
  7976  01160C  0EED               	movlw	-19
  7977  01160E  2AE3               	incf	plusw1,f,c
  7978  011610                     u1910:
  7979                           
  7980                           ;stkvar	_sign @ sp[(-10)+8]
  7981  011610  0EFE               	movlw	-2
  7982  011612  6AE3               	clrf	plusw1,c
  7983  011614  2AE3               	incf	plusw1,f,c
  7984  011616                     l4130:
  7985                           
  7986                           ;stkvar	_dividend @ sp[(-10)+-8]
  7987  011616  0EF5               	movlw	-11
  7988  011618  AEE3               	btfss	plusw1,7,c
  7989  01161A  D027               	goto	l4136
  7990                           
  7991                           ;stkvar	_dividend @ sp[(-10)+-8]
  7992                           ;stkvar	_dividend @ sp[(-10)+-8]
  7993  01161C  0EEE               	movlw	-18
  7994  01161E  6CE3               	negf	plusw1,c
  7995  011620  0EEF               	movlw	-17
  7996  011622  1EE3               	comf	plusw1,f,c
  7997  011624  0EF0               	movlw	-16
  7998  011626  1EE3               	comf	plusw1,f,c
  7999  011628  0EF1               	movlw	-15
  8000  01162A  1EE3               	comf	plusw1,f,c
  8001  01162C  0EF2               	movlw	-14
  8002  01162E  1EE3               	comf	plusw1,f,c
  8003  011630  0EF3               	movlw	-13
  8004  011632  1EE3               	comf	plusw1,f,c
  8005  011634  0EF4               	movlw	-12
  8006  011636  1EE3               	comf	plusw1,f,c
  8007  011638  0EF5               	movlw	-11
  8008  01163A  1EE3               	comf	plusw1,f,c
  8009  01163C  E314               	bnc	u1930
  8010  01163E  0EEF               	movlw	-17
  8011  011640  2AE3               	incf	plusw1,f,c
  8012  011642  E311               	bnc	u1930
  8013  011644  0EF0               	movlw	-16
  8014  011646  2AE3               	incf	plusw1,f,c
  8015  011648  E30E               	bnc	u1930
  8016  01164A  0EF1               	movlw	-15
  8017  01164C  2AE3               	incf	plusw1,f,c
  8018  01164E  E30B               	bnc	u1930
  8019  011650  0EF2               	movlw	-14
  8020  011652  2AE3               	incf	plusw1,f,c
  8021  011654  E308               	bnc	u1930
  8022  011656  0EF3               	movlw	-13
  8023  011658  2AE3               	incf	plusw1,f,c
  8024  01165A  E305               	bnc	u1930
  8025  01165C  0EF4               	movlw	-12
  8026  01165E  2AE3               	incf	plusw1,f,c
  8027  011660  E302               	bnc	u1930
  8028  011662  0EF5               	movlw	-11
  8029  011664  2AE3               	incf	plusw1,f,c
  8030  011666                     u1930:
  8031                           
  8032                           ;stkvar	_sign @ sp[(-10)+8]
  8033  011666  0EFE               	movlw	-2
  8034  011668  70E3               	btg	plusw1,0,c
  8035  01166A                     l4136:
  8036                           
  8037                           ;stkvar	_quotient @ sp[(-10)+0]
  8038  01166A  0E07               	movlw	7
  8039  01166C  6E39               	movwf	btemp^0,c
  8040  01166E  0EF6               	movlw	-10
  8041  011670                     u1941:
  8042  011670  6AE3               	clrf	plusw1,c
  8043  011672  2AE8               	incf	wreg,f,c
  8044  011674  0639               	decf	btemp^0,f,c
  8045  011676  E2FC               	bc	u1941
  8046                           
  8047                           ;stkvar	_divisor @ sp[(-10)+-16]
  8048  011678  0EE6               	movlw	-26
  8049  01167A  50E3               	movf	plusw1,w,c
  8050  01167C  E116               	bnz	u1950
  8051  01167E  0EE7               	movlw	-25
  8052  011680  50E3               	movf	plusw1,w,c
  8053  011682  E113               	bnz	u1950
  8054  011684  0EE8               	movlw	-24
  8055  011686  50E3               	movf	plusw1,w,c
  8056  011688  E110               	bnz	u1950
  8057  01168A  0EE9               	movlw	-23
  8058  01168C  50E3               	movf	plusw1,w,c
  8059  01168E  E10D               	bnz	u1950
  8060  011690  0EEA               	movlw	-22
  8061  011692  50E3               	movf	plusw1,w,c
  8062  011694  E10A               	bnz	u1950
  8063  011696  0EEB               	movlw	-21
  8064  011698  50E3               	movf	plusw1,w,c
  8065  01169A  E107               	bnz	u1950
  8066  01169C  0EEC               	movlw	-20
  8067  01169E  50E3               	movf	plusw1,w,c
  8068  0116A0  E104               	bnz	u1950
  8069  0116A2  0EED               	movlw	-19
  8070  0116A4  50E3               	movf	plusw1,w,c
  8071  0116A6  B4D8               	btfsc	status,2,c
  8072  0116A8  D088               	goto	u1980
  8073  0116AA                     u1950:
  8074                           
  8075                           ;stkvar	_counter @ sp[(-10)+9]
  8076  0116AA  0EFF               	movlw	-1
  8077  0116AC  6AE3               	clrf	plusw1,c
  8078  0116AE  D012               	goto	L6
  8079  0116B0                     l4142:
  8080                           
  8081                           ;stkvar	_divisor @ sp[(-10)+-16]
  8082  0116B0  90D8               	bcf	status,0,c
  8083  0116B2  0EE6               	movlw	-26
  8084  0116B4  36E3               	rlcf	plusw1,f,c
  8085  0116B6  0EE7               	movlw	-25
  8086  0116B8  36E3               	rlcf	plusw1,f,c
  8087  0116BA  0EE8               	movlw	-24
  8088  0116BC  36E3               	rlcf	plusw1,f,c
  8089  0116BE  0EE9               	movlw	-23
  8090  0116C0  36E3               	rlcf	plusw1,f,c
  8091  0116C2  0EEA               	movlw	-22
  8092  0116C4  36E3               	rlcf	plusw1,f,c
  8093  0116C6  0EEB               	movlw	-21
  8094  0116C8  36E3               	rlcf	plusw1,f,c
  8095  0116CA  0EEC               	movlw	-20
  8096  0116CC  36E3               	rlcf	plusw1,f,c
  8097  0116CE  0EED               	movlw	-19
  8098  0116D0  36E3               	rlcf	plusw1,f,c
  8099                           
  8100                           ;stkvar	_counter @ sp[(-10)+9]
  8101  0116D2  0EFF               	movlw	-1
  8102  0116D4                     L6:
  8103  0116D4  2AE3               	incf	plusw1,f,c
  8104                           
  8105                           ;stkvar	_divisor @ sp[(-10)+-16]
  8106  0116D6  0EED               	movlw	-19
  8107  0116D8  AEE3               	btfss	plusw1,7,c
  8108  0116DA  D7EA               	goto	l4142
  8109  0116DC                     u1960:
  8110                           
  8111                           ;stkvar	_quotient @ sp[(-10)+0]
  8112  0116DC  90D8               	bcf	status,0,c
  8113  0116DE  0EF6               	movlw	-10
  8114  0116E0  36E3               	rlcf	plusw1,f,c
  8115  0116E2  0EF7               	movlw	-9
  8116  0116E4  36E3               	rlcf	plusw1,f,c
  8117  0116E6  0EF8               	movlw	-8
  8118  0116E8  36E3               	rlcf	plusw1,f,c
  8119  0116EA  0EF9               	movlw	-7
  8120  0116EC  36E3               	rlcf	plusw1,f,c
  8121  0116EE  0EFA               	movlw	-6
  8122  0116F0  36E3               	rlcf	plusw1,f,c
  8123  0116F2  0EFB               	movlw	-5
  8124  0116F4  36E3               	rlcf	plusw1,f,c
  8125  0116F6  0EFC               	movlw	-4
  8126  0116F8  36E3               	rlcf	plusw1,f,c
  8127  0116FA  0EFD               	movlw	-3
  8128  0116FC  36E3               	rlcf	plusw1,f,c
  8129                           
  8130                           ;stkvar	_divisor @ sp[(-10)+-16]
  8131                           ;stkvar	_dividend @ sp[(-10)+-8]
  8132  0116FE  50E1               	movf	fsr1l,w,c
  8133  011700  0FEE               	addlw	-18
  8134  011702  6ED9               	movwf	fsr2l,c
  8135  011704  50E2               	movf	fsr1h,w,c
  8136  011706  6EDA               	movwf	fsr2h,c
  8137  011708  0EFF               	movlw	255
  8138  01170A  22DA               	addwfc	fsr2h,f,c
  8139  01170C  0EE6               	movlw	-26
  8140  01170E  50E3               	movf	plusw1,w,c
  8141  011710  5CDE               	subwf	postinc2,w,c
  8142  011712  0EE7               	movlw	-25
  8143  011714  50E3               	movf	plusw1,w,c
  8144  011716  58DE               	subwfb	postinc2,w,c
  8145  011718  0EE8               	movlw	-24
  8146  01171A  50E3               	movf	plusw1,w,c
  8147  01171C  58DE               	subwfb	postinc2,w,c
  8148  01171E  0EE9               	movlw	-23
  8149  011720  50E3               	movf	plusw1,w,c
  8150  011722  58DE               	subwfb	postinc2,w,c
  8151  011724  0EEA               	movlw	-22
  8152  011726  50E3               	movf	plusw1,w,c
  8153  011728  58DE               	subwfb	postinc2,w,c
  8154  01172A  0EEB               	movlw	-21
  8155  01172C  50E3               	movf	plusw1,w,c
  8156  01172E  58DE               	subwfb	postinc2,w,c
  8157  011730  0EEC               	movlw	-20
  8158  011732  50E3               	movf	plusw1,w,c
  8159  011734  58DE               	subwfb	postinc2,w,c
  8160  011736  0EED               	movlw	-19
  8161  011738  50E3               	movf	plusw1,w,c
  8162  01173A  58DE               	subwfb	postinc2,w,c
  8163  01173C  A0D8               	btfss	status,0,c
  8164  01173E  D021               	goto	l4154
  8165                           
  8166                           ;stkvar	_divisor @ sp[(-10)+-16]
  8167                           ;stkvar	_dividend @ sp[(-10)+-8]
  8168  011740  50E1               	movf	fsr1l,w,c
  8169  011742  0FEE               	addlw	-18
  8170  011744  6ED9               	movwf	fsr2l,c
  8171  011746  50E2               	movf	fsr1h,w,c
  8172  011748  6EDA               	movwf	fsr2h,c
  8173  01174A  0EFF               	movlw	255
  8174  01174C  22DA               	addwfc	fsr2h,f,c
  8175  01174E  0EE6               	movlw	-26
  8176  011750  50E3               	movf	plusw1,w,c
  8177  011752  5EDE               	subwf	postinc2,f,c
  8178  011754  0EE7               	movlw	-25
  8179  011756  50E3               	movf	plusw1,w,c
  8180  011758  5ADE               	subwfb	postinc2,f,c
  8181  01175A  0EE8               	movlw	-24
  8182  01175C  50E3               	movf	plusw1,w,c
  8183  01175E  5ADE               	subwfb	postinc2,f,c
  8184  011760  0EE9               	movlw	-23
  8185  011762  50E3               	movf	plusw1,w,c
  8186  011764  5ADE               	subwfb	postinc2,f,c
  8187  011766  0EEA               	movlw	-22
  8188  011768  50E3               	movf	plusw1,w,c
  8189  01176A  5ADE               	subwfb	postinc2,f,c
  8190  01176C  0EEB               	movlw	-21
  8191  01176E  50E3               	movf	plusw1,w,c
  8192  011770  5ADE               	subwfb	postinc2,f,c
  8193  011772  0EEC               	movlw	-20
  8194  011774  50E3               	movf	plusw1,w,c
  8195  011776  5ADE               	subwfb	postinc2,f,c
  8196  011778  0EED               	movlw	-19
  8197  01177A  50E3               	movf	plusw1,w,c
  8198  01177C  5ADE               	subwfb	postinc2,f,c
  8199                           
  8200                           ;stkvar	_quotient @ sp[(-10)+0]
  8201  01177E  0EF6               	movlw	-10
  8202  011780  80E3               	bsf	plusw1,0,c
  8203  011782                     l4154:
  8204                           
  8205                           ;stkvar	_divisor @ sp[(-10)+-16]
  8206  011782  90D8               	bcf	status,0,c
  8207  011784  0EED               	movlw	-19
  8208  011786  32E3               	rrcf	plusw1,f,c
  8209  011788  0EEC               	movlw	-20
  8210  01178A  32E3               	rrcf	plusw1,f,c
  8211  01178C  0EEB               	movlw	-21
  8212  01178E  32E3               	rrcf	plusw1,f,c
  8213  011790  0EEA               	movlw	-22
  8214  011792  32E3               	rrcf	plusw1,f,c
  8215  011794  0EE9               	movlw	-23
  8216  011796  32E3               	rrcf	plusw1,f,c
  8217  011798  0EE8               	movlw	-24
  8218  01179A  32E3               	rrcf	plusw1,f,c
  8219  01179C  0EE7               	movlw	-25
  8220  01179E  32E3               	rrcf	plusw1,f,c
  8221  0117A0  0EE6               	movlw	-26
  8222  0117A2  32E3               	rrcf	plusw1,f,c
  8223                           
  8224                           ;stkvar	_counter @ sp[(-10)+9]
  8225  0117A4  0EFF               	movlw	-1
  8226  0117A6  50E3               	movf	plusw1,w,c
  8227  0117A8  6E39               	movwf	btemp^0,c
  8228  0117AA  0E01               	movlw	1
  8229  0117AC  5E39               	subwf	btemp^0,f,c
  8230  0117AE  0EFF               	movlw	-1
  8231  0117B0  0060  F0E7  FFE3   	movff	btemp,plusw1
  8232  0117B6  A4D8               	btfss	status,2,c
  8233  0117B8  D791               	goto	u1960
  8234  0117BA                     u1980:
  8235                           
  8236                           ;stkvar	_sign @ sp[(-10)+8]
  8237  0117BA  0EFE               	movlw	-2
  8238  0117BC  50E3               	movf	plusw1,w,c
  8239  0117BE  B4D8               	btfsc	status,2,c
  8240  0117C0  D025               	goto	u2000
  8241                           
  8242                           ;stkvar	_quotient @ sp[(-10)+0]
  8243                           ;stkvar	_quotient @ sp[(-10)+0]
  8244  0117C2  0EF6               	movlw	-10
  8245  0117C4  6CE3               	negf	plusw1,c
  8246  0117C6  0EF7               	movlw	-9
  8247  0117C8  1EE3               	comf	plusw1,f,c
  8248  0117CA  0EF8               	movlw	-8
  8249  0117CC  1EE3               	comf	plusw1,f,c
  8250  0117CE  0EF9               	movlw	-7
  8251  0117D0  1EE3               	comf	plusw1,f,c
  8252  0117D2  0EFA               	movlw	-6
  8253  0117D4  1EE3               	comf	plusw1,f,c
  8254  0117D6  0EFB               	movlw	-5
  8255  0117D8  1EE3               	comf	plusw1,f,c
  8256  0117DA  0EFC               	movlw	-4
  8257  0117DC  1EE3               	comf	plusw1,f,c
  8258  0117DE  0EFD               	movlw	-3
  8259  0117E0  1EE3               	comf	plusw1,f,c
  8260  0117E2  E314               	bnc	u2000
  8261  0117E4  0EF7               	movlw	-9
  8262  0117E6  2AE3               	incf	plusw1,f,c
  8263  0117E8  E311               	bnc	u2000
  8264  0117EA  0EF8               	movlw	-8
  8265  0117EC  2AE3               	incf	plusw1,f,c
  8266  0117EE  E30E               	bnc	u2000
  8267  0117F0  0EF9               	movlw	-7
  8268  0117F2  2AE3               	incf	plusw1,f,c
  8269  0117F4  E30B               	bnc	u2000
  8270  0117F6  0EFA               	movlw	-6
  8271  0117F8  2AE3               	incf	plusw1,f,c
  8272  0117FA  E308               	bnc	u2000
  8273  0117FC  0EFB               	movlw	-5
  8274  0117FE  2AE3               	incf	plusw1,f,c
  8275  011800  E305               	bnc	u2000
  8276  011802  0EFC               	movlw	-4
  8277  011804  2AE3               	incf	plusw1,f,c
  8278  011806  E302               	bnc	u2000
  8279  011808  0EFD               	movlw	-3
  8280  01180A  2AE3               	incf	plusw1,f,c
  8281  01180C                     u2000:
  8282                           
  8283                           ;stkvar	_quotient @ sp[(-10)+0]
  8284  01180C  0EF6               	movlw	246
  8285  01180E  24E1               	addwf	fsr1l,w,c
  8286  011810  6ED9               	movwf	fsr2l,c
  8287  011812  0EFF               	movlw	255
  8288  011814  20E2               	addwfc	fsr1h,w,c
  8289  011816  6EDA               	movwf	fsr2h,c
  8290                           
  8291                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  8292  011818  0E08               	movlw	8
  8293  01181A  6E39               	movwf	btemp^0,c
  8294  01181C  0EEE               	movlw	-18
  8295  01181E                     us201999:
  8296  01181E  006F FF7B FFE3     	movff	postinc2,plusw1
  8297  011824  28E8               	incf	wreg,w,c
  8298  011826  2E39               	decfsz	btemp^0,f,c
  8299  011828  D7FA               	bra	us201999
  8300                           
  8301                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  8302  01182A  0EF6               	movlw	246
  8303  01182C  26E1               	addwf	fsr1l,f,c
  8304  01182E  0EFF               	movlw	255
  8305  011830  22E2               	addwfc	fsr1h,f,c
  8306  011832  0012               	return		;funcret
  8307  011834                     __end_of___aodiv:
  8308                           	opt callstack 0
  8309                           
  8310 ;; *************** function _ctoa *****************
  8311 ;; Defined at:
  8312 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8315 ;;		 -> f(6), NULL(0), 
  8316 ;;  c               1  [STACK] unsigned char 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  w               2  [STACK] int 
  8319 ;;  l               2    0        int 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  2  [STACK] int 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/3
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8333 ;;Total ram usage:        0 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:   11
  8336 ;; This function calls:
  8337 ;;		_pad
  8338 ;; This function is called by:
  8339 ;;		_vfpfcnvrt
  8340 ;; This function uses a reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text36
  8344  01289C                     __ptext36:
  8345                           	opt callstack 0
  8346  01289C                     _ctoa:
  8347                           	opt callstack 0
  8348                           
  8349                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8350  01289C  52E6               	movf	postinc1,f,c
  8351  01289E  52E6               	movf	postinc1,f,c
  8352                           
  8353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  8354                           
  8355                           ;incstack = 0
  8356  0128A0  5022               	movf	_width^0,w,c
  8357  0128A2  1023               	iorwf	(_width+1)^0,w,c
  8358  0128A4  A4D8               	btfss	status,2,c
  8359  0128A6  D009               	goto	l5542
  8360                           
  8361                           ;stkvar	_w @ sp[(-2)+0]
  8362  0128A8  0EFE               	movlw	-2
  8363  0128AA  0060  F08B  FFE3   	movff	_width,plusw1
  8364  0128B0  0EFF               	movlw	-1
  8365  0128B2  0060  F08F  FFE3   	movff	_width+1,plusw1
  8366  0128B8  D016               	goto	l5544
  8367  0128BA                     l5542:
  8368  0128BA  0EFF               	movlw	255
  8369  0128BC  6E43               	movwf	(btemp+10)^0,c
  8370  0128BE  0EFF               	movlw	255
  8371  0128C0  6E44               	movwf	(btemp+11)^0,c
  8372  0128C2  0060  F088  F041   	movff	_width,btemp+8
  8373  0128C8  0060  F08C  F042   	movff	_width+1,btemp+9
  8374  0128CE  5043               	movf	(btemp+10)^0,w,c
  8375  0128D0  2641               	addwf	(btemp+8)^0,f,c
  8376  0128D2  5044               	movf	(btemp+11)^0,w,c
  8377  0128D4  2242               	addwfc	(btemp+9)^0,f,c
  8378                           
  8379                           ;stkvar	_w @ sp[(-2)+0]
  8380  0128D6  0EFE               	movlw	-2
  8381  0128D8  0060  F107  FFE3   	movff	btemp+8,plusw1
  8382  0128DE  0EFF               	movlw	-1
  8383  0128E0  0060  F10B  FFE3   	movff	btemp+9,plusw1
  8384  0128E6                     l5544:
  8385                           
  8386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  8387                           ;stkvar	_c @ sp[(-2)+-3]
  8388  0128E6  0EFB               	movlw	-5
  8389  0128E8  006F FF8C  F086    	movff	plusw1,_dbuf
  8390                           
  8391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  8392  0128EE  0100               	movlb	0	; () banked
  8393  0128F0  6B87               	clrf	(_dbuf+1)& (0+255),b
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  8397                           ;stkvar	_w @ sp[(-2)+0]
  8398  0128F2  0EFE               	movlw	-2
  8399  0128F4  006F FF8F FFE6     	movff	plusw1,postinc1
  8400  0128FA  006F FF8F FFE6     	movff	plusw1,postinc1
  8401  012900  0E86               	movlw	_dbuf& (0+255)
  8402  012902  6EE6               	movwf	postinc1,c
  8403                           
  8404                           ;stkvar	_fp @ sp[(-5)+-2]
  8405  012904  0EF9               	movlw	-7
  8406  012906  006F FF8F FFE6     	movff	plusw1,postinc1
  8407  01290C  006F FF8F FFE6     	movff	plusw1,postinc1
  8408  012912  EC78  F090         	call	_pad	;wreg free
  8409                           
  8410                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  8411  012916  0EFB               	movlw	251
  8412  012918  26E1               	addwf	fsr1l,f,c
  8413  01291A  0EFF               	movlw	255
  8414  01291C  22E2               	addwfc	fsr1h,f,c
  8415  01291E  0012               	return		;funcret
  8416  012920                     __end_of_ctoa:
  8417                           	opt callstack 0
  8418                           
  8419 ;; *************** function _pad *****************
  8420 ;; Defined at:
  8421 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8424 ;;		 -> f(6), NULL(0), 
  8425 ;;  buf             1  [STACK] PTR unsigned char 
  8426 ;;		 -> dbuf(32), 
  8427 ;;  p               2  [STACK] int 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  w               2  [STACK] int 
  8430 ;;  i               2  [STACK] int 
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  2  [STACK] int 
  8433 ;; Registers used:
  8434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:   10
  8447 ;; This function calls:
  8448 ;;		_fputc
  8449 ;;		_fputs
  8450 ;;		_strlen
  8451 ;; This function is called by:
  8452 ;;		_ctoa
  8453 ;;		_dtoa
  8454 ;;		_xtoa
  8455 ;; This function uses a reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text37
  8459  0120F0                     __ptext37:
  8460                           	opt callstack 0
  8461  0120F0                     _pad:
  8462                           	opt callstack 0
  8463                           
  8464                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8465  0120F0  52E6               	movf	postinc1,f,c
  8466  0120F2  52E6               	movf	postinc1,f,c
  8467  0120F4  52E6               	movf	postinc1,f,c
  8468  0120F6  52E6               	movf	postinc1,f,c
  8469                           
  8470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8471                           
  8472                           ;incstack = 0
  8473  0120F8  A026               	btfss	_flags^0,0,c
  8474  0120FA  D00C               	goto	l5520
  8475                           
  8476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8477                           ;stkvar	_fp @ sp[(-4)+-2]
  8478  0120FC  0EFA               	movlw	-6
  8479  0120FE  006F FF8F FFE6     	movff	plusw1,postinc1
  8480  012104  006F FF8F FFE6     	movff	plusw1,postinc1
  8481                           
  8482                           ;stkvar	_buf @ sp[(-6)+-3]
  8483  01210A  0EF7               	movlw	-9
  8484  01210C  50E3               	movf	plusw1,w,c
  8485  01210E  6EE6               	movwf	postinc1,c
  8486  012110  EC90  F094         	call	_fputs	;wreg free
  8487  012114                     l5520:
  8488                           
  8489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8490                           ;stkvar	_p @ sp[(-4)+-5]
  8491  012114  0EF8               	movlw	-8
  8492  012116  BEE3               	btfsc	plusw1,7,c
  8493  012118  D011               	goto	l5524
  8494                           
  8495                           ;stkvar	_p @ sp[(-4)+-5]
  8496                           ;stkvar	_w @ sp[(-4)+0]
  8497  01211A  0EF7               	movlw	-9
  8498  01211C  006F FF8C  F039    	movff	plusw1,btemp
  8499  012122  0EFC               	movlw	-4
  8500  012124  0060  F0E7  FFE3   	movff	btemp,plusw1
  8501  01212A  0EF8               	movlw	-8
  8502  01212C  006F FF8C  F039    	movff	plusw1,btemp
  8503  012132  0EFD               	movlw	-3
  8504  012134  0060  F0E7  FFE3   	movff	btemp,plusw1
  8505  01213A  D004               	goto	l1626
  8506  01213C                     l5524:
  8507                           
  8508                           ;stkvar	_w @ sp[(-4)+0]
  8509  01213C  0EFC               	movlw	-4
  8510  01213E  6AE3               	clrf	plusw1,c
  8511  012140  0EFD               	movlw	-3
  8512  012142  6AE3               	clrf	plusw1,c
  8513  012144                     l1626:
  8514                           
  8515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8516                           ;stkvar	_i @ sp[(-4)+2]
  8517  012144  0EFE               	movlw	-2
  8518  012146  6AE3               	clrf	plusw1,c
  8519  012148  0EFF               	movlw	-1
  8520  01214A  6AE3               	clrf	plusw1,c
  8521                           
  8522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8523  01214C  D01E               	goto	l5530
  8524  01214E                     l5526:
  8525                           
  8526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8527                           ;stkvar	_fp @ sp[(-4)+-2]
  8528  01214E  0EFA               	movlw	-6
  8529  012150  006F FF8F FFE6     	movff	plusw1,postinc1
  8530  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8531  01215C  0E20               	movlw	32
  8532  01215E  6EE6               	movwf	postinc1,c
  8533  012160  0E00               	movlw	0
  8534  012162  6EE6               	movwf	postinc1,c
  8535  012164  ECDA  F08E         	call	_fputc	;wreg free
  8536                           
  8537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8538                           ;stkvar	_i @ sp[(-4)+2]
  8539  012168  0EFE               	movlw	-2
  8540  01216A  50E3               	movf	plusw1,w,c
  8541  01216C  0F01               	addlw	1
  8542  01216E  6E39               	movwf	btemp^0,c
  8543  012170  0EFE               	movlw	-2
  8544  012172  0060  F0E7  FFE3   	movff	btemp,plusw1
  8545  012178  6A39               	clrf	btemp^0,c
  8546  01217A  0EFF               	movlw	-1
  8547  01217C  50E3               	movf	plusw1,w,c
  8548  01217E  2039               	addwfc	btemp^0,w,c
  8549  012180  6E39               	movwf	btemp^0,c
  8550  012182  0EFF               	movlw	-1
  8551  012184  0060  F0E7  FFE3   	movff	btemp,plusw1
  8552  01218A                     l5530:
  8553                           
  8554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8555                           ;stkvar	_w @ sp[(-4)+0]
  8556                           ;stkvar	_i @ sp[(-4)+2]
  8557  01218A  50E1               	movf	fsr1l,w,c
  8558  01218C  0FFE               	addlw	-2
  8559  01218E  6ED9               	movwf	fsr2l,c
  8560  012190  50E2               	movf	fsr1h,w,c
  8561  012192  6EDA               	movwf	fsr2h,c
  8562  012194  0EFF               	movlw	255
  8563  012196  22DA               	addwfc	fsr2h,f,c
  8564  012198  0EFC               	movlw	-4
  8565  01219A  50E3               	movf	plusw1,w,c
  8566  01219C  5CDE               	subwf	postinc2,w,c
  8567  01219E  50DE               	movf	postinc2,w,c
  8568  0121A0  0A80               	xorlw	128
  8569  0121A2  6E39               	movwf	btemp^0,c
  8570  0121A4  0EFD               	movlw	-3
  8571  0121A6  50E3               	movf	plusw1,w,c
  8572  0121A8  0A80               	xorlw	128
  8573  0121AA  5839               	subwfb	btemp^0,w,c
  8574  0121AC  A0D8               	btfss	status,0,c
  8575  0121AE  D7CF               	goto	l5526
  8576                           
  8577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8578  0121B0  B026               	btfsc	_flags^0,0,c
  8579  0121B2  D00C               	goto	l5534
  8580                           
  8581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8582                           ;stkvar	_fp @ sp[(-4)+-2]
  8583  0121B4  0EFA               	movlw	-6
  8584  0121B6  006F FF8F FFE6     	movff	plusw1,postinc1
  8585  0121BC  006F FF8F FFE6     	movff	plusw1,postinc1
  8586                           
  8587                           ;stkvar	_buf @ sp[(-6)+-3]
  8588  0121C2  0EF7               	movlw	-9
  8589  0121C4  50E3               	movf	plusw1,w,c
  8590  0121C6  6EE6               	movwf	postinc1,c
  8591  0121C8  EC90  F094         	call	_fputs	;wreg free
  8592  0121CC                     l5534:
  8593                           
  8594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8595                           ;stkvar	_w @ sp[(-4)+0]
  8596                           ;stkvar	_buf @ sp[(-4)+-3]
  8597  0121CC  0EF9               	movlw	-7
  8598  0121CE  006F FF8C  F044    	movff	plusw1,btemp+11
  8599  0121D4  0060  F113  FFE6   	movff	btemp+11,postinc1
  8600  0121DA  0E00               	movlw	0
  8601  0121DC  6EE6               	movwf	postinc1,c
  8602  0121DE  EC2A  F093         	call	_strlen	;wreg free
  8603  0121E2  0EFC               	movlw	-4
  8604  0121E4  50E3               	movf	plusw1,w,c
  8605  0121E6  2639               	addwf	btemp^0,f,c
  8606  0121E8  0EFD               	movlw	-3
  8607  0121EA  50E3               	movf	plusw1,w,c
  8608  0121EC  223A               	addwfc	(btemp+1)^0,f,c
  8609                           
  8610                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
  8611  0121EE  0EF7               	movlw	247
  8612  0121F0  26E1               	addwf	fsr1l,f,c
  8613  0121F2  0EFF               	movlw	255
  8614  0121F4  22E2               	addwfc	fsr1h,f,c
  8615  0121F6  0012               	return		;funcret
  8616  0121F8                     __end_of_pad:
  8617                           	opt callstack 0
  8618                           
  8619 ;; *************** function _strlen *****************
  8620 ;; Defined at:
  8621 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  s               2  [STACK] PTR const unsigned char 
  8624 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8625 ;;		 -> STR_14(9), STR_13(12), D.lcd(216), D(218), 
  8626 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  a               2  [STACK] PTR const unsigned char 
  8629 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8630 ;;		 -> STR_14(9), STR_13(12), D.lcd(216), D(218), 
  8631 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  2  [STACK] unsigned int 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8645 ;;Total ram usage:        0 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    6
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_eaDogM_WriteString
  8652 ;;		_pad
  8653 ;;		_stoa
  8654 ;; This function uses a reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text38
  8658  012654                     __ptext38:
  8659                           	opt callstack 0
  8660  012654                     _strlen:
  8661                           	opt callstack 0
  8662                           
  8663                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8664  012654  52E6               	movf	postinc1,f,c
  8665  012656  52E6               	movf	postinc1,f,c
  8666                           
  8667                           ;stkvar	_s @ sp[(-2)+-2]
  8668                           
  8669                           ;incstack = 0
  8670  012658  0EFC               	movlw	-4
  8671  01265A  006F FF8C  F043    	movff	plusw1,btemp+10
  8672  012660  0EFD               	movlw	-3
  8673  012662  006F FF8C  F044    	movff	plusw1,btemp+11
  8674                           
  8675                           ;stkvar	_a @ sp[(-2)+0]
  8676  012668  0EFF               	movlw	-1
  8677  01266A  0060  F113  FFE3   	movff	btemp+11,plusw1
  8678  012670  0EFE               	movlw	-2
  8679  012672  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8680  012678  D011               	goto	l4052
  8681  01267A                     l4050:
  8682                           
  8683                           ;stkvar	_s @ sp[(-2)+-2]
  8684  01267A  0EFC               	movlw	-4
  8685  01267C  50E3               	movf	plusw1,w,c
  8686  01267E  0F01               	addlw	1
  8687  012680  6E39               	movwf	btemp^0,c
  8688  012682  0EFC               	movlw	-4
  8689  012684  0060  F0E7  FFE3   	movff	btemp,plusw1
  8690  01268A  6A39               	clrf	btemp^0,c
  8691  01268C  0EFD               	movlw	-3
  8692  01268E  50E3               	movf	plusw1,w,c
  8693  012690  2039               	addwfc	btemp^0,w,c
  8694  012692  6E39               	movwf	btemp^0,c
  8695  012694  0EFD               	movlw	-3
  8696  012696  0060  F0E7  FFE3   	movff	btemp,plusw1
  8697  01269C                     l4052:
  8698                           
  8699                           ;stkvar	_s @ sp[(-2)+-2]
  8700  01269C  0EFC               	movlw	-4
  8701  01269E  006F FF8F FFF6     	movff	plusw1,tblptrl
  8702  0126A4  0EFD               	movlw	-3
  8703  0126A6  006F FF8F FFF7     	movff	plusw1,tblptrh
  8704  0126AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8705  0126AE  6EF8               	movwf	tblptru,c
  8706  0126B0  0E1F               	movlw	(high __ramtop+-1)
  8707  0126B2  64F7               	cpfsgt	tblptrh,c
  8708  0126B4  D003               	bra	u1737
  8709  0126B6  0008               	tblrd		*
  8710  0126B8  50F5               	movf	tablat,w,c
  8711  0126BA  D007               	bra	u1730
  8712  0126BC                     u1737:
  8713  0126BC  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8714  0126C2  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8715  0126C8  50EF               	movf	indf0,w,c
  8716  0126CA                     u1730:
  8717  0126CA  0900               	iorlw	0
  8718  0126CC  A4D8               	btfss	status,2,c
  8719  0126CE  D7D5               	goto	l4050
  8720                           
  8721                           ;stkvar	_a @ sp[(-2)+0]
  8722                           ;stkvar	_s @ sp[(-2)+-2]
  8723  0126D0  0EFC               	movlw	-4
  8724  0126D2  006F FF8C  F039    	movff	plusw1,btemp
  8725  0126D8  0EFD               	movlw	-3
  8726  0126DA  006F FF8C  F03A    	movff	plusw1,btemp+1
  8727  0126E0  0EFE               	movlw	-2
  8728  0126E2  50E3               	movf	plusw1,w,c
  8729  0126E4  5E39               	subwf	btemp^0,f,c
  8730  0126E6  0EFF               	movlw	-1
  8731  0126E8  50E3               	movf	plusw1,w,c
  8732  0126EA  5A3A               	subwfb	(btemp+1)^0,f,c
  8733                           
  8734                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8735  0126EC  52E5               	movf	postdec1,f,c
  8736  0126EE  52E5               	movf	postdec1,f,c
  8737  0126F0  52E5               	movf	postdec1,f,c
  8738  0126F2  52E5               	movf	postdec1,f,c
  8739  0126F4  0012               	return		;funcret
  8740  0126F6                     __end_of_strlen:
  8741                           	opt callstack 0
  8742                           
  8743 ;; *************** function _fputs *****************
  8744 ;; Defined at:
  8745 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  s               1  [STACK] PTR const unsigned char 
  8748 ;;		 -> dbuf(32), 
  8749 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8750 ;;		 -> f(6), NULL(0), 
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  i               2  [STACK] int 
  8753 ;;  c               1  [STACK] unsigned char 
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  2  [STACK] int 
  8756 ;; Registers used:
  8757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;Total ram usage:        0 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    9
  8770 ;; This function calls:
  8771 ;;		_fputc
  8772 ;; This function is called by:
  8773 ;;		_pad
  8774 ;; This function uses a reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text39
  8778  012920                     __ptext39:
  8779                           	opt callstack 0
  8780  012920                     _fputs:
  8781                           	opt callstack 0
  8782                           
  8783                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8784  012920  52E6               	movf	postinc1,f,c
  8785  012922  52E6               	movf	postinc1,f,c
  8786  012924  52E6               	movf	postinc1,f,c
  8787                           
  8788                           ;stkvar	_i @ sp[(-3)+0]
  8789                           
  8790                           ;incstack = 0
  8791  012926  0EFD               	movlw	-3
  8792  012928  6AE3               	clrf	plusw1,c
  8793  01292A  0EFE               	movlw	-2
  8794  01292C  6AE3               	clrf	plusw1,c
  8795  01292E  D01F               	goto	l5514
  8796  012930                     l5510:
  8797                           
  8798                           ;stkvar	_fp @ sp[(-3)+-3]
  8799  012930  0EFA               	movlw	-6
  8800  012932  006F FF8F FFE6     	movff	plusw1,postinc1
  8801  012938  006F FF8F FFE6     	movff	plusw1,postinc1
  8802                           
  8803                           ;stkvar	_c @ sp[(-5)+2]
  8804  01293E  0EFD               	movlw	-3
  8805  012940  50E3               	movf	plusw1,w,c
  8806  012942  6EE6               	movwf	postinc1,c
  8807  012944  0E00               	movlw	0
  8808  012946  6EE6               	movwf	postinc1,c
  8809  012948  ECDA  F08E         	call	_fputc	;wreg free
  8810                           
  8811                           ;stkvar	_i @ sp[(-3)+0]
  8812  01294C  0EFD               	movlw	-3
  8813  01294E  50E3               	movf	plusw1,w,c
  8814  012950  0F01               	addlw	1
  8815  012952  6E39               	movwf	btemp^0,c
  8816  012954  0EFD               	movlw	-3
  8817  012956  0060  F0E7  FFE3   	movff	btemp,plusw1
  8818  01295C  6A39               	clrf	btemp^0,c
  8819  01295E  0EFE               	movlw	-2
  8820  012960  50E3               	movf	plusw1,w,c
  8821  012962  2039               	addwfc	btemp^0,w,c
  8822  012964  6E39               	movwf	btemp^0,c
  8823  012966  0EFE               	movlw	-2
  8824  012968  0060  F0E7  FFE3   	movff	btemp,plusw1
  8825  01296E                     l5514:
  8826                           
  8827                           ;stkvar	_i @ sp[(-3)+0]
  8828  01296E  0EFD               	movlw	-3
  8829  012970  006F FF8C  F044    	movff	plusw1,btemp+11
  8830                           
  8831                           ;stkvar	_s @ sp[(-3)+-1]
  8832  012976  0EFC               	movlw	-4
  8833  012978  50E3               	movf	plusw1,w,c
  8834  01297A  2444               	addwf	(btemp+11)^0,w,c
  8835  01297C  6ED9               	movwf	fsr2l,c
  8836  01297E  6ADA               	clrf	fsr2h,c
  8837  012980  50DF               	movf	indf2,w,c
  8838  012982  6E44               	movwf	(btemp+11)^0,c
  8839                           
  8840                           ;stkvar	_c @ sp[(-3)+2]
  8841  012984  0EFF               	movlw	-1
  8842  012986  0060  F113  FFE3   	movff	btemp+11,plusw1
  8843  01298C  0EFF               	movlw	-1
  8844  01298E  50E3               	movf	plusw1,w,c
  8845  012990  A4D8               	btfss	status,2,c
  8846  012992  D7CE               	goto	l5510
  8847                           
  8848                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
  8849  012994  0EFA               	movlw	250
  8850  012996  26E1               	addwf	fsr1l,f,c
  8851  012998  0EFF               	movlw	255
  8852  01299A  22E2               	addwfc	fsr1h,f,c
  8853  01299C  0012               	return		;funcret
  8854  01299E                     __end_of_fputs:
  8855                           	opt callstack 0
  8856                           
  8857 ;; *************** function _fputc *****************
  8858 ;; Defined at:
  8859 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  c               2  [STACK] int 
  8862 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8863 ;;		 -> f(6), NULL(0), 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  2  [STACK] int 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/3
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    8
  8882 ;; This function calls:
  8883 ;;		_putch
  8884 ;; This function is called by:
  8885 ;;		_pad
  8886 ;;		_stoa
  8887 ;;		_vfpfcnvrt
  8888 ;;		_fputs
  8889 ;; This function uses a reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text40
  8893  011DB4                     __ptext40:
  8894                           	opt callstack 0
  8895  011DB4                     _fputc:
  8896                           	opt callstack 13
  8897                           
  8898                           ;stkvar	_fp @ sp[(0)+-4]
  8899                           
  8900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8901                           ;incstack = 0
  8902  011DB4  0EFC               	movlw	-4
  8903  011DB6  006F FF8C  F039    	movff	plusw1,btemp
  8904  011DBC  0EFD               	movlw	-3
  8905  011DBE  50E3               	movf	plusw1,w,c
  8906  011DC0  1039               	iorwf	btemp^0,w,c
  8907  011DC2  B4D8               	btfsc	status,2,c
  8908  011DC4  D009               	goto	u3310
  8909                           
  8910                           ;stkvar	_fp @ sp[(0)+-4]
  8911  011DC6  0EFC               	movlw	-4
  8912  011DC8  006F FF8C  F039    	movff	plusw1,btemp
  8913  011DCE  0EFD               	movlw	-3
  8914  011DD0  50E3               	movf	plusw1,w,c
  8915  011DD2  1039               	iorwf	btemp^0,w,c
  8916  011DD4  A4D8               	btfss	status,2,c
  8917  011DD6  D006               	goto	l5498
  8918  011DD8                     u3310:
  8919                           
  8920                           ;stkvar	_c @ sp[(0)+-2]
  8921  011DD8  0EFE               	movlw	-2
  8922  011DDA  50E3               	movf	plusw1,w,c
  8923  011DDC  6EE6               	movwf	postinc1,c
  8924  011DDE  ECBB  F09A         	call	_putch	;wreg free
  8925  011DE2  D075               	goto	l2451
  8926  011DE4                     l5498:
  8927                           
  8928                           ;stkvar	_fp @ sp[(0)+-4]
  8929  011DE4  0EFC               	movlw	-4
  8930  011DE6  006F FF8C  F043    	movff	plusw1,btemp+10
  8931  011DEC  0EFD               	movlw	-3
  8932  011DEE  006F FF8C  F044    	movff	plusw1,btemp+11
  8933  011DF4  0E04               	movlw	4
  8934  011DF6  2443               	addwf	(btemp+10)^0,w,c
  8935  011DF8  6ED9               	movwf	fsr2l,c
  8936  011DFA  0E00               	movlw	0
  8937  011DFC  2044               	addwfc	(btemp+11)^0,w,c
  8938  011DFE  6EDA               	movwf	fsr2h,c
  8939  011E00  50DE               	movf	postinc2,w,c
  8940  011E02  10DE               	iorwf	postinc2,w,c
  8941  011E04  B4D8               	btfsc	status,2,c
  8942  011E06  D026               	goto	u3330
  8943                           
  8944                           ;stkvar	_fp @ sp[(0)+-4]
  8945  011E08  0EFC               	movlw	-4
  8946  011E0A  006F FF8C  F043    	movff	plusw1,btemp+10
  8947  011E10  0EFD               	movlw	-3
  8948  011E12  006F FF8C  F044    	movff	plusw1,btemp+11
  8949  011E18  0E04               	movlw	4
  8950  011E1A  2443               	addwf	(btemp+10)^0,w,c
  8951  011E1C  6ED9               	movwf	fsr2l,c
  8952  011E1E  0E00               	movlw	0
  8953  011E20  2044               	addwfc	(btemp+11)^0,w,c
  8954  011E22  6EDA               	movwf	fsr2h,c
  8955                           
  8956                           ;stkvar	_fp @ sp[(0)+-4]
  8957  011E24  0EFC               	movlw	-4
  8958  011E26  006F FF8C  F043    	movff	plusw1,btemp+10
  8959  011E2C  0EFD               	movlw	-3
  8960  011E2E  006F FF8C  F044    	movff	plusw1,btemp+11
  8961  011E34  0E02               	movlw	2
  8962  011E36  2443               	addwf	(btemp+10)^0,w,c
  8963  011E38  6EE9               	movwf	fsr0l,c
  8964  011E3A  0E00               	movlw	0
  8965  011E3C  2044               	addwfc	(btemp+11)^0,w,c
  8966  011E3E  6EEA               	movwf	fsr0h,c
  8967  011E40  50DE               	movf	postinc2,w,c
  8968  011E42  5CEE               	subwf	postinc0,w,c
  8969  011E44  50EE               	movf	postinc0,w,c
  8970  011E46  0A80               	xorlw	128
  8971  011E48  6E39               	movwf	btemp^0,c
  8972  011E4A  50DE               	movf	postinc2,w,c
  8973  011E4C  0A80               	xorlw	128
  8974  011E4E  5839               	subwfb	btemp^0,w,c
  8975  011E50  B0D8               	btfsc	status,0,c
  8976  011E52  D03D               	goto	l2451
  8977  011E54                     u3330:
  8978                           
  8979                           ;stkvar	_c @ sp[(0)+-2]
  8980                           ;stkvar	_fp @ sp[(0)+-4]
  8981  011E54  0EFC               	movlw	-4
  8982  011E56  006F FF8C  F043    	movff	plusw1,btemp+10
  8983  011E5C  0EFD               	movlw	-3
  8984  011E5E  006F FF8C  F044    	movff	plusw1,btemp+11
  8985  011E64  0E02               	movlw	2
  8986  011E66  2443               	addwf	(btemp+10)^0,w,c
  8987  011E68  6ED9               	movwf	fsr2l,c
  8988  011E6A  0E00               	movlw	0
  8989  011E6C  2044               	addwfc	(btemp+11)^0,w,c
  8990  011E6E  6EDA               	movwf	fsr2h,c
  8991  011E70  006F FF78  F043    	movff	postinc2,btemp+10
  8992  011E76  006F FF74  F044    	movff	postdec2,btemp+11
  8993                           
  8994                           ;stkvar	_fp @ sp[(0)+-4]
  8995  011E7C  0EFC               	movlw	-4
  8996  011E7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8997  011E84  0EFD               	movlw	-3
  8998  011E86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8999  011E8C  006F FF78  F041    	movff	postinc2,btemp+8
  9000  011E92  006F FF74  F042    	movff	postdec2,btemp+9
  9001  011E98  5043               	movf	(btemp+10)^0,w,c
  9002  011E9A  2441               	addwf	(btemp+8)^0,w,c
  9003  011E9C  6ED9               	movwf	fsr2l,c
  9004  011E9E  5044               	movf	(btemp+11)^0,w,c
  9005  011EA0  2042               	addwfc	(btemp+9)^0,w,c
  9006  011EA2  6EDA               	movwf	fsr2h,c
  9007  011EA4  0EFE               	movlw	-2
  9008  011EA6  006F FF8F FFDF     	movff	plusw1,indf2
  9009                           
  9010                           ;stkvar	_fp @ sp[(0)+-4]
  9011  011EAC  0EFC               	movlw	-4
  9012  011EAE  006F FF8C  F043    	movff	plusw1,btemp+10
  9013  011EB4  0EFD               	movlw	-3
  9014  011EB6  006F FF8C  F044    	movff	plusw1,btemp+11
  9015  011EBC  0E02               	movlw	2
  9016  011EBE  2443               	addwf	(btemp+10)^0,w,c
  9017  011EC0  6ED9               	movwf	fsr2l,c
  9018  011EC2  0E00               	movlw	0
  9019  011EC4  2044               	addwfc	(btemp+11)^0,w,c
  9020  011EC6  6EDA               	movwf	fsr2h,c
  9021  011EC8  2ADE               	incf	postinc2,f,c
  9022  011ECA  0E00               	movlw	0
  9023  011ECC  22DD               	addwfc	postdec2,f,c
  9024  011ECE                     l2451:
  9025                           
  9026                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9027  011ECE  52E5               	movf	postdec1,f,c
  9028  011ED0  52E5               	movf	postdec1,f,c
  9029  011ED2  52E5               	movf	postdec1,f,c
  9030  011ED4  52E5               	movf	postdec1,f,c
  9031  011ED6  0012               	return		;funcret
  9032  011ED8                     __end_of_fputc:
  9033                           	opt callstack 0
  9034                           
  9035 ;; *************** function _putch *****************
  9036 ;; Defined at:
  9037 ;;		line 155 in file "eadog.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  c               1  [STACK] unsigned char 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1  [STACK] void 
  9044 ;; Registers used:
  9045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/3
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9055 ;;Total ram usage:        0 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; Hardware stack levels required when called:    7
  9058 ;; This function calls:
  9059 ;;		_ringBufS_put_dma
  9060 ;; This function is called by:
  9061 ;;		_fputc
  9062 ;; This function uses a reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text41
  9066  013576                     __ptext41:
  9067                           	opt callstack 0
  9068  013576                     _putch:
  9069                           	opt callstack 13
  9070                           
  9071                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
  9072                           ;stkvar	_c @ sp[(0)+-1]
  9073                           
  9074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9075                           ;incstack = 0
  9076  013576  0EFF               	movlw	-1
  9077  013578  50E3               	movf	plusw1,w,c
  9078  01357A  6EE6               	movwf	postinc1,c
  9079  01357C  0060  F203  FFE6   	movff	_spi_link+6,postinc1
  9080  013582  0060  F207  FFE6   	movff	_spi_link+7,postinc1
  9081  013588  EC2D  F092         	call	_ringBufS_put_dma	;wreg free
  9082                           
  9083                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  9084  01358C  52E5               	movf	postdec1,f,c
  9085  01358E  0012               	return		;funcret
  9086  013590                     __end_of_putch:
  9087                           	opt callstack 0
  9088                           
  9089 ;; *************** function _ringBufS_put_dma *****************
  9090 ;; Defined at:
  9091 ;;		line 67 in file "ringbufs.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9094 ;;		 -> ring_buf1(67), 
  9095 ;;  c               1  [STACK] const unsigned char 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;		None
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1  [STACK] void 
  9100 ;; Registers used:
  9101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/3
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;Total ram usage:        0 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; Hardware stack levels required when called:    6
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		_putch
  9118 ;; This function uses a reentrant model
  9119 ;;
  9120                           
  9121                           	psect	text42
  9122  01245A                     __ptext42:
  9123                           	opt callstack 0
  9124  01245A                     _ringBufS_put_dma:
  9125                           	opt callstack 13
  9126                           
  9127                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
  9128                           ;stkvar	__this @ sp[(0)+-2]
  9129                           
  9130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9131                           ;incstack = 0
  9132  01245A  0EFE               	movlw	-2
  9133  01245C  006F FF8C  F043    	movff	plusw1,btemp+10
  9134  012462  0EFF               	movlw	-1
  9135  012464  006F FF8C  F044    	movff	plusw1,btemp+11
  9136  01246A  0E42               	movlw	66
  9137  01246C  2443               	addwf	(btemp+10)^0,w,c
  9138  01246E  6ED9               	movwf	fsr2l,c
  9139  012470  0E00               	movlw	0
  9140  012472  2044               	addwfc	(btemp+11)^0,w,c
  9141  012474  6EDA               	movwf	fsr2h,c
  9142  012476  0E40               	movlw	64
  9143  012478  60DF               	cpfslt	indf2,c
  9144  01247A  D040               	goto	l1451
  9145                           
  9146                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
  9147                           ;stkvar	_c @ sp[(0)+-3]
  9148                           ;stkvar	__this @ sp[(0)+-2]
  9149  01247C  0EFE               	movlw	-2
  9150  01247E  006F FF8C  F043    	movff	plusw1,btemp+10
  9151  012484  0EFF               	movlw	-1
  9152  012486  006F FF8C  F044    	movff	plusw1,btemp+11
  9153  01248C  0E40               	movlw	64
  9154  01248E  2443               	addwf	(btemp+10)^0,w,c
  9155  012490  6ED9               	movwf	fsr2l,c
  9156  012492  0E00               	movlw	0
  9157  012494  2044               	addwfc	(btemp+11)^0,w,c
  9158  012496  6EDA               	movwf	fsr2h,c
  9159  012498  50DF               	movf	indf2,w,c
  9160  01249A  6E44               	movwf	(btemp+11)^0,c
  9161                           
  9162                           ;stkvar	__this @ sp[(0)+-2]
  9163  01249C  0EFE               	movlw	-2
  9164  01249E  006F FF8C  F041    	movff	plusw1,btemp+8
  9165  0124A4  0EFF               	movlw	-1
  9166  0124A6  006F FF8C  F042    	movff	plusw1,btemp+9
  9167  0124AC  5044               	movf	(btemp+11)^0,w,c
  9168  0124AE  2441               	addwf	(btemp+8)^0,w,c
  9169  0124B0  6ED9               	movwf	fsr2l,c
  9170  0124B2  0E00               	movlw	0
  9171  0124B4  2042               	addwfc	(btemp+9)^0,w,c
  9172  0124B6  6EDA               	movwf	fsr2h,c
  9173  0124B8  0EFD               	movlw	-3
  9174  0124BA  006F FF8F FFDF     	movff	plusw1,indf2
  9175                           
  9176                           ;ringbufs.c: 71:   ++_this->head;
  9177                           ;stkvar	__this @ sp[(0)+-2]
  9178  0124C0  0EFE               	movlw	-2
  9179  0124C2  006F FF8C  F043    	movff	plusw1,btemp+10
  9180  0124C8  0EFF               	movlw	-1
  9181  0124CA  006F FF8C  F044    	movff	plusw1,btemp+11
  9182  0124D0  0E40               	movlw	64
  9183  0124D2  2443               	addwf	(btemp+10)^0,w,c
  9184  0124D4  6ED9               	movwf	fsr2l,c
  9185  0124D6  0E00               	movlw	0
  9186  0124D8  2044               	addwfc	(btemp+11)^0,w,c
  9187  0124DA  6EDA               	movwf	fsr2h,c
  9188  0124DC  2ADF               	incf	indf2,f,c
  9189                           
  9190                           ;ringbufs.c: 72:   ++_this->count;
  9191                           ;stkvar	__this @ sp[(0)+-2]
  9192  0124DE  0EFE               	movlw	-2
  9193  0124E0  006F FF8C  F043    	movff	plusw1,btemp+10
  9194  0124E6  0EFF               	movlw	-1
  9195  0124E8  006F FF8C  F044    	movff	plusw1,btemp+11
  9196  0124EE  0E42               	movlw	66
  9197  0124F0  2443               	addwf	(btemp+10)^0,w,c
  9198  0124F2  6ED9               	movwf	fsr2l,c
  9199  0124F4  0E00               	movlw	0
  9200  0124F6  2044               	addwfc	(btemp+11)^0,w,c
  9201  0124F8  6EDA               	movwf	fsr2h,c
  9202  0124FA  2ADF               	incf	indf2,f,c
  9203  0124FC                     l1451:
  9204                           
  9205                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  9206  0124FC  52E5               	movf	postdec1,f,c
  9207  0124FE  52E5               	movf	postdec1,f,c
  9208  012500  52E5               	movf	postdec1,f,c
  9209  012502  0012               	return		;funcret
  9210  012504                     __end_of_ringBufS_put_dma:
  9211                           	opt callstack 0
  9212                           
  9213 ;; *************** function _set_vterm *****************
  9214 ;; Defined at:
  9215 ;;		line 104 in file "mconfig.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  vterm           1  [STACK] unsigned char 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1  [STACK] unsigned char 
  9222 ;; Registers used:
  9223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 3F/3
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    6
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_main
  9240 ;;		_check_help
  9241 ;; This function uses a reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text43
  9245  01355A                     __ptext43:
  9246                           	opt callstack 0
  9247  01355A                     _set_vterm:
  9248                           	opt callstack 24
  9249                           
  9250                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
  9251                           ;stkvar	_vterm @ sp[(0)+-1]
  9252                           
  9253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9254                           ;incstack = 0
  9255  01355A  0EFF               	movlw	-1
  9256  01355C  006F FF8C  F044    	movff	plusw1,btemp+11
  9257  013562  0E03               	movlw	3
  9258  013564  1644               	andwf	(btemp+11)^0,f,c
  9259  013566  0103               	movlb	3	; () banked
  9260  013568  51D8               	movf	(_D+216)& (0+255),w,b
  9261  01356A  1844               	xorwf	(btemp+11)^0,w,c
  9262  01356C  0BFE               	andlw	-2
  9263  01356E  1844               	xorwf	(btemp+11)^0,w,c
  9264  013570  6FD8               	movwf	(_D+216)& (0+255),b
  9265                           
  9266                           ; BSR set to: 3
  9267                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9268  013572  52E5               	movf	postdec1,f,c
  9269  013574  0012               	return		;funcret
  9270  013576                     __end_of_set_vterm:
  9271                           	opt callstack 0
  9272                           
  9273 ;; *************** function _set_temp_display_help *****************
  9274 ;; Defined at:
  9275 ;;		line 208 in file "mconfig.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  new_response    1  [STACK] const enum E16497
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1  [STACK] enum E16497
  9282 ;; Registers used:
  9283 ;;		wreg, fsr1l, fsr1h
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/3
  9286 ;;		On exit  : 3F/1
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:    6
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		_check_help
  9300 ;; This function uses a reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text44
  9304  013664                     __ptext44:
  9305                           	opt callstack 0
  9306  013664                     _set_temp_display_help:
  9307                           	opt callstack 23
  9308                           
  9309                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
  9310                           
  9311                           ; BSR set to: 3
  9312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9313                           ;incstack = 0
  9314  013664  0101               	movlb	1	; () banked
  9315  013666  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
  9319                           ;stkvar	_new_response_info @ sp[(0)+-1]
  9320  013668  0EFF               	movlw	-1
  9321  01366A  006F FF8C  F1B2    	movff	plusw1,_V+178	;volatile
  9322                           
  9323                           ; BSR set to: 1
  9324                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  9325  013670  52E5               	movf	postdec1,f,c
  9326  013672  0012               	return		;funcret
  9327  013674                     __end_of_set_temp_display_help:
  9328                           	opt callstack 0
  9329                           
  9330 ;; *************** function _set_display_info *****************
  9331 ;; Defined at:
  9332 ;;		line 197 in file "mconfig.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  new_response    1  [STACK] const enum E16497
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;		None
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1  [STACK] enum E16982
  9339 ;; Registers used:
  9340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/3
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9350 ;;Total ram usage:        0 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    7
  9353 ;; This function calls:
  9354 ;;		_TimerDone
  9355 ;; This function is called by:
  9356 ;;		_main
  9357 ;;		_check_help
  9358 ;; This function uses a reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text45
  9362  0134E4                     __ptext45:
  9363                           	opt callstack 0
  9364  0134E4                     _set_display_info:
  9365                           	opt callstack 23
  9366                           
  9367                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
  9368                           
  9369                           ; BSR set to: 1
  9370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9371                           ;incstack = 0
  9372  0134E4  0E07               	movlw	7
  9373  0134E6  6EE6               	movwf	postinc1,c
  9374  0134E8  EC0D  F09A         	call	_TimerDone	;wreg free
  9375  0134EC  5039               	movf	btemp^0,w,c
  9376  0134EE  B4D8               	btfsc	status,2,c
  9377  0134F0  D006               	goto	l1588
  9378                           
  9379                           ;mconfig.c: 202:   old_info = V.response.info;
  9380  0134F2  0101               	movlb	1	; () banked
  9381  0134F4  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
  9382                           
  9383                           ; BSR set to: 1
  9384                           ;mconfig.c: 203:   V.response.info = new_response_info;
  9385                           ;stkvar	_new_response_info @ sp[(0)+-1]
  9386  0134F6  0EFF               	movlw	-1
  9387  0134F8  006F FF8C  F1B1    	movff	plusw1,_V+177	;volatile
  9388  0134FE                     l1588:
  9389                           
  9390                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9391  0134FE  52E5               	movf	postdec1,f,c
  9392  013500  0012               	return		;funcret
  9393  013502                     __end_of_set_display_info:
  9394                           	opt callstack 0
  9395                           
  9396 ;; *************** function _mode_lamp_dim *****************
  9397 ;; Defined at:
  9398 ;;		line 13 in file "mconfig.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  level           2  [STACK] const unsigned short 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;		None
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1  [STACK] void 
  9405 ;; Registers used:
  9406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/1
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;Total ram usage:        0 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:    7
  9419 ;; This function calls:
  9420 ;;		_PWM8_LoadDutyValue
  9421 ;; This function is called by:
  9422 ;;		_main
  9423 ;;		_check_help
  9424 ;; This function uses a reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text46
  9428  0135DE                     __ptext46:
  9429                           	opt callstack 0
  9430  0135DE                     _mode_lamp_dim:
  9431                           	opt callstack 23
  9432                           
  9433                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
  9434                           ;stkvar	_level @ sp[(0)+-2]
  9435                           
  9436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9437                           ;incstack = 0
  9438  0135DE  0EFE               	movlw	-2
  9439  0135E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9440  0135E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9441  0135EC  EC4B  F097         	call	_PWM8_LoadDutyValue	;wreg free
  9442                           
  9443                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9444  0135F0  52E5               	movf	postdec1,f,c
  9445  0135F2  52E5               	movf	postdec1,f,c
  9446  0135F4  0012               	return		;funcret
  9447  0135F6                     __end_of_mode_lamp_dim:
  9448                           	opt callstack 0
  9449                           
  9450 ;; *************** function _mode_lamp_bright *****************
  9451 ;; Defined at:
  9452 ;;		line 18 in file "mconfig.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1  [STACK] void 
  9459 ;; Registers used:
  9460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/1
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:    7
  9473 ;; This function calls:
  9474 ;;		_PWM8_LoadDutyValue
  9475 ;; This function is called by:
  9476 ;;		_check_help
  9477 ;; This function uses a reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text47
  9481  013692                     __ptext47:
  9482                           	opt callstack 0
  9483  013692                     _mode_lamp_bright:
  9484                           	opt callstack 22
  9485                           
  9486                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
  9487                           
  9488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9489                           ;incstack = 0
  9490  013692  0E2C               	movlw	44
  9491  013694  6EE6               	movwf	postinc1,c
  9492  013696  0E01               	movlw	1
  9493  013698  6EE6               	movwf	postinc1,c
  9494  01369A  EC4B  F097         	call	_PWM8_LoadDutyValue	;wreg free
  9495                           
  9496                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9497  01369E  0012               	return		;funcret
  9498  0136A0                     __end_of_mode_lamp_bright:
  9499                           	opt callstack 0
  9500                           
  9501 ;; *************** function _PWM8_LoadDutyValue *****************
  9502 ;; Defined at:
  9503 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  dutyValue       2  [STACK] unsigned short 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1  [STACK] void 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/1
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    6
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_mode_lamp_dim
  9528 ;;		_mode_lamp_bright
  9529 ;; This function uses a reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text48
  9533  012E96                     __ptext48:
  9534                           	opt callstack 0
  9535  012E96                     _PWM8_LoadDutyValue:
  9536                           	opt callstack 23
  9537                           
  9538                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9539                           ;stkvar	_dutyValue @ sp[(0)+-2]
  9540                           
  9541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9542                           ;incstack = 0
  9543  012E96  0EFE               	movlw	-2
  9544  012E98  006F FF8C  F043    	movff	plusw1,btemp+10
  9545  012E9E  0EFF               	movlw	-1
  9546  012EA0  006F FF8C  F044    	movff	plusw1,btemp+11
  9547  012EA6  90D8               	bcf	status,0,c
  9548  012EA8  3244               	rrcf	(btemp+11)^0,f,c
  9549  012EAA  3243               	rrcf	(btemp+10)^0,f,c
  9550  012EAC  90D8               	bcf	status,0,c
  9551  012EAE  3244               	rrcf	(btemp+11)^0,f,c
  9552  012EB0  3243               	rrcf	(btemp+10)^0,f,c
  9553  012EB2  5043               	movf	(btemp+10)^0,w,c
  9554  012EB4  6E61               	movwf	97,c	;volatile
  9555                           
  9556                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  9557                           ;stkvar	_dutyValue @ sp[(0)+-2]
  9558  012EB6  0EFE               	movlw	-2
  9559  012EB8  006F FF8C  F044    	movff	plusw1,btemp+11
  9560  012EBE  0E03               	movlw	3
  9561  012EC0  1644               	andwf	(btemp+11)^0,f,c
  9562  012EC2  0E06               	movlw	6
  9563  012EC4  6E39               	movwf	btemp^0,c
  9564  012EC6                     u2795:
  9565  012EC6  90D8               	bcf	status,0,c
  9566  012EC8  3644               	rlcf	(btemp+11)^0,f,c
  9567  012ECA  2E39               	decfsz	btemp^0,f,c
  9568  012ECC  D7FC               	goto	u2795
  9569  012ECE  5044               	movf	(btemp+11)^0,w,c
  9570  012ED0  6E60               	movwf	96,c	;volatile
  9571                           
  9572                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9573  012ED2  52E5               	movf	postdec1,f,c
  9574  012ED4  52E5               	movf	postdec1,f,c
  9575  012ED6  0012               	return		;funcret
  9576  012ED8                     __end_of_PWM8_LoadDutyValue:
  9577                           	opt callstack 0
  9578                           
  9579 ;; *************** function _help_button *****************
  9580 ;; Defined at:
  9581 ;;		line 26 in file "mconfig.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;		None
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;		None
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1  [STACK] _Bool 
  9588 ;; Registers used:
  9589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/1
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9599 ;;Total ram usage:        0 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    7
  9602 ;; This function calls:
  9603 ;;		_StartTimer
  9604 ;;		_TimerDone
  9605 ;; This function is called by:
  9606 ;;		_check_help
  9607 ;; This function uses a reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text49
  9611  012F54                     __ptext49:
  9612                           	opt callstack 0
  9613  012F54                     _help_button:
  9614                           	opt callstack 22
  9615                           
  9616                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
  9617                           
  9618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9619                           ;incstack = 0
  9620  012F54  B0CB               	btfsc	203,0,c	;volatile
  9621  012F56  D00C               	goto	l1531
  9622                           
  9623                           ;mconfig.c: 29:   V.help = 1;
  9624  012F58  0101               	movlb	1	; () banked
  9625  012F5A  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
  9626                           
  9627                           ; BSR set to: 1
  9628                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
  9629  012F5C  0E08               	movlw	8
  9630  012F5E  6EE6               	movwf	postinc1,c
  9631  012F60  EC0D  F09A         	call	_TimerDone	;wreg free
  9632  012F64  5039               	movf	btemp^0,w,c
  9633  012F66  B4D8               	btfsc	status,2,c
  9634  012F68  D003               	goto	l1531
  9635                           
  9636                           ;mconfig.c: 31:    return 1;
  9637  012F6A  0E01               	movlw	1
  9638  012F6C  6E39               	movwf	btemp^0,c
  9639  012F6E  0012               	return	
  9640  012F70                     l1531:
  9641                           
  9642                           ;mconfig.c: 34:  if (!V.help)
  9643  012F70  0101               	movlb	1	; () banked
  9644  012F72  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
  9645  012F74  D008               	goto	l5086
  9646                           
  9647                           ; BSR set to: 1
  9648                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
  9649  012F76  0E2C               	movlw	44
  9650  012F78  6EE6               	movwf	postinc1,c
  9651  012F7A  0E01               	movlw	1
  9652  012F7C  6EE6               	movwf	postinc1,c
  9653  012F7E  0E08               	movlw	8
  9654  012F80  6EE6               	movwf	postinc1,c
  9655  012F82  EC8C  F097         	call	_StartTimer	;wreg free
  9656  012F86                     l5086:
  9657                           
  9658                           ;mconfig.c: 37:  return 0;
  9659  012F86  0E00               	movlw	0
  9660  012F88  6E39               	movwf	btemp^0,c
  9661                           
  9662                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  9663  012F8A  0012               	return		;funcret
  9664  012F8C                     __end_of_help_button:
  9665                           	opt callstack 0
  9666                           
  9667 ;; *************** function _TimerDone *****************
  9668 ;; Defined at:
  9669 ;;		line 20 in file "timers.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  timer           1  [STACK] const unsigned char 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1  [STACK] _Bool 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/3
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9687 ;;Total ram usage:        0 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    6
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_main
  9694 ;;		_WaitMs
  9695 ;;		_help_button
  9696 ;;		_check_help
  9697 ;;		_set_display_info
  9698 ;; This function uses a reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text50
  9702  01341A                     __ptext50:
  9703                           	opt callstack 0
  9704  01341A                     _TimerDone:
  9705                           	opt callstack 23
  9706                           
  9707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9708                           ;incstack = 0
  9709  01341A  0004               	clrwdt		;# 
  9710                           
  9711                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  9712                           ;stkvar	_timer @ sp[(0)+-1]
  9713  01341C  0EFF               	movlw	-1
  9714  01341E  50E3               	movf	plusw1,w,c
  9715  013420  0D02               	mullw	2
  9716  013422  50F3               	movf	243,w,c
  9717  013424  0F60               	addlw	low _tickCount
  9718  013426  6ED9               	movwf	fsr2l,c
  9719  013428  6ADA               	clrf	fsr2h,c
  9720  01342A  50DE               	movf	postinc2,w,c
  9721  01342C  10DE               	iorwf	postinc2,w,c
  9722  01342E  A4D8               	btfss	status,2,c
  9723  013430  D002               	goto	l4578
  9724                           
  9725                           ;timers.c: 24:   return 1;
  9726  013432  0E01               	movlw	1
  9727  013434  D001               	goto	L7
  9728  013436                     l4578:
  9729                           
  9730                           ;timers.c: 26:  return 0;
  9731  013436  0E00               	movlw	0
  9732  013438                     L7:
  9733  013438  6E39               	movwf	btemp^0,c
  9734                           
  9735                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9736  01343A  52E5               	movf	postdec1,f,c
  9737  01343C  0012               	return		;funcret
  9738  01343E                     __end_of_TimerDone:
  9739                           	opt callstack 0
  9740                           
  9741 ;; *************** function _StartTimer *****************
  9742 ;; Defined at:
  9743 ;;		line 12 in file "timers.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  timer           1  [STACK] const unsigned char 
  9746 ;;  count           2  [STACK] const unsigned short 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1  [STACK] void 
  9751 ;; Registers used:
  9752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/3
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9762 ;;Total ram usage:        0 bytes
  9763 ;; Hardware stack levels used:    1
  9764 ;; Hardware stack levels required when called:    6
  9765 ;; This function calls:
  9766 ;;		Nothing
  9767 ;; This function is called by:
  9768 ;;		_main
  9769 ;;		_WaitMs
  9770 ;;		_help_button
  9771 ;;		_check_help
  9772 ;; This function uses a reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text51
  9776  012F18                     __ptext51:
  9777                           	opt callstack 0
  9778  012F18                     _StartTimer:
  9779                           	opt callstack 21
  9780                           
  9781                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  9782                           ;stkvar	_count @ sp[(0)+-3]
  9783                           
  9784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9785                           ;incstack = 0
  9786  012F18  0EFD               	movlw	-3
  9787  012F1A  006F FF8C  F043    	movff	plusw1,btemp+10
  9788  012F20  0EFE               	movlw	-2
  9789  012F22  006F FF8C  F044    	movff	plusw1,btemp+11
  9790  012F28  90D8               	bcf	status,0,c
  9791  012F2A  3443               	rlcf	(btemp+10)^0,w,c
  9792  012F2C  6E41               	movwf	(btemp+8)^0,c
  9793  012F2E  3444               	rlcf	(btemp+11)^0,w,c
  9794  012F30  6E42               	movwf	(btemp+9)^0,c
  9795                           
  9796                           ;stkvar	_timer @ sp[(0)+-1]
  9797  012F32  0EFF               	movlw	-1
  9798  012F34  50E3               	movf	plusw1,w,c
  9799  012F36  0D02               	mullw	2
  9800  012F38  50F3               	movf	243,w,c
  9801  012F3A  0F60               	addlw	low _tickCount
  9802  012F3C  6ED9               	movwf	fsr2l,c
  9803  012F3E  6ADA               	clrf	fsr2h,c
  9804  012F40  0060  F107  FFDE   	movff	btemp+8,postinc2
  9805  012F46  0060  F10B  FFDD   	movff	btemp+9,postdec2
  9806                           
  9807                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  9808  012F4C  52E5               	movf	postdec1,f,c
  9809  012F4E  52E5               	movf	postdec1,f,c
  9810  012F50  52E5               	movf	postdec1,f,c
  9811  012F52  0012               	return		;funcret
  9812  012F54                     __end_of_StartTimer:
  9813                           	opt callstack 0
  9814                           
  9815 ;; *************** function _display_info *****************
  9816 ;; Defined at:
  9817 ;;		line 187 in file "mconfig.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1  [STACK] enum E16497
  9824 ;; Registers used:
  9825 ;;		btemp
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/1
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    6
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_check_help
  9842 ;; This function uses a reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text52
  9846  0136EA                     __ptext52:
  9847                           	opt callstack 0
  9848  0136EA                     _display_info:
  9849                           	opt callstack 23
  9850                           
  9851                           ;mconfig.c: 189:  return V.response.info;
  9852                           
  9853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9854                           ;incstack = 0
  9855  0136EA  0060  F6C4  F039   	movff	_V+177,btemp	;volatile
  9856                           
  9857                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9858  0136F0  0012               	return		;funcret
  9859  0136F2                     __end_of_display_info:
  9860                           	opt callstack 0
  9861                           
  9862 ;; *************** function _display_help *****************
  9863 ;; Defined at:
  9864 ;;		line 192 in file "mconfig.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1  [STACK] enum E16497
  9871 ;; Registers used:
  9872 ;;		btemp
  9873 ;; Tracked objects:
  9874 ;;		On entry : 3F/1
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:    6
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_check_help
  9889 ;; This function uses a reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text53
  9893  0136F2                     __ptext53:
  9894                           	opt callstack 0
  9895  0136F2                     _display_help:
  9896                           	opt callstack 23
  9897                           
  9898                           ;mconfig.c: 194:  return V.response.help_temp;
  9899                           
  9900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9901                           ;incstack = 0
  9902  0136F2  0060  F6C8  F039   	movff	_V+178,btemp	;volatile
  9903                           
  9904                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9905  0136F8  0012               	return		;funcret
  9906  0136FA                     __end_of_display_help:
  9907                           	opt callstack 0
  9908                           
  9909 ;; *************** function _SYSTEM_Initialize *****************
  9910 ;; Defined at:
  9911 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;		None
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1  [STACK] void 
  9918 ;; Registers used:
  9919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 3F/3C
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9929 ;;Total ram usage:        0 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    8
  9932 ;; This function calls:
  9933 ;;		_ADCC_Initialize
  9934 ;;		_CLKREF_Initialize
  9935 ;;		_DMA1_Initialize
  9936 ;;		_DMA2_Initialize
  9937 ;;		_EXT_INT_Initialize
  9938 ;;		_FVR_Initialize
  9939 ;;		_INTERRUPT_Initialize
  9940 ;;		_OSCILLATOR_Initialize
  9941 ;;		_PIN_MANAGER_Initialize
  9942 ;;		_PMD_Initialize
  9943 ;;		_PWM8_Initialize
  9944 ;;		_SPI1_Initialize
  9945 ;;		_TMR2_Initialize
  9946 ;;		_TMR5_Initialize
  9947 ;;		_TMR6_Initialize
  9948 ;;		_UART1_Initialize
  9949 ;;		_UART2_Initialize
  9950 ;; This function is called by:
  9951 ;;		_main
  9952 ;; This function uses a reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text54
  9956  012D80                     __ptext54:
  9957                           	opt callstack 0
  9958  012D80                     _SYSTEM_Initialize:
  9959                           	opt callstack 22
  9960                           
  9961                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  9962                           
  9963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9964                           ;incstack = 0
  9965  012D80  EC36  F095         	call	_INTERRUPT_Initialize	;wreg free
  9966                           
  9967                           ; BSR set to: 57
  9968                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  9969  012D84  EC28  F09B         	call	_PMD_Initialize	;wreg free
  9970                           
  9971                           ; BSR set to: 57
  9972                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9973  012D88  ECC4  F093         	call	_PIN_MANAGER_Initialize	;wreg free
  9974                           
  9975                           ; BSR set to: 58
  9976                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9977  012D8C  EC1D  F09B         	call	_OSCILLATOR_Initialize	;wreg free
  9978                           
  9979                           ; BSR set to: 57
  9980                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  9981  012D90  EC7D  F09B         	call	_FVR_Initialize	;wreg free
  9982                           
  9983                           ; BSR set to: 62
  9984                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  9985  012D94  EC78  F096         	call	_ADCC_Initialize	;wreg free
  9986                           
  9987                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
  9988  012D98  EC12  F09B         	call	_PWM8_Initialize	;wreg free
  9989                           
  9990                           ; BSR set to: 63
  9991                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  9992  012D9C  ECC8  F09A         	call	_TMR2_Initialize	;wreg free
  9993                           
  9994                           ; BSR set to: 57
  9995                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
  9996  012DA0  EC16  F098         	call	_EXT_INT_Initialize	;wreg free
  9997                           
  9998                           ; BSR set to: 57
  9999                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 10000  012DA4  ECA3  F098         	call	_TMR6_Initialize	;wreg free
 10001                           
 10002                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 10003  012DA8  ECE3  F096         	call	_TMR5_Initialize	;wreg free
 10004                           
 10005                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10006  012DAC  EC04  F095         	call	_UART1_Initialize	;wreg free
 10007                           
 10008                           ; BSR set to: 57
 10009                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10010  012DB0  EC99  F095         	call	_UART2_Initialize	;wreg free
 10011                           
 10012                           ; BSR set to: 57
 10013                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10014  012DB4  EC07  F09B         	call	_SPI1_Initialize	;wreg free
 10015                           
 10016                           ; BSR set to: 61
 10017                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 10018  012DB8  ECC8  F095         	call	_DMA2_Initialize	;wreg free
 10019                           
 10020                           ; BSR set to: 59
 10021                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 10022  012DBC  ECCF  F094         	call	_DMA1_Initialize	;wreg free
 10023                           
 10024                           ; BSR set to: 59
 10025                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 10026  012DC0  EC5F  F09B         	call	_CLKREF_Initialize	;wreg free
 10027                           
 10028                           ; BSR set to: 60
 10029                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10030  012DC4  0012               	return		;funcret
 10031  012DC6                     __end_of_SYSTEM_Initialize:
 10032                           	opt callstack 0
 10033                           
 10034 ;; *************** function _UART2_Initialize *****************
 10035 ;; Defined at:
 10036 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;		None
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;		None
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  1  [STACK] void 
 10043 ;; Registers used:
 10044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10045 ;; Tracked objects:
 10046 ;;		On entry : 3F/39
 10047 ;;		On exit  : 3F/39
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10054 ;;Total ram usage:        0 bytes
 10055 ;; Hardware stack levels used:    1
 10056 ;; Hardware stack levels required when called:    7
 10057 ;; This function calls:
 10058 ;;		_UART2_SetRxInterruptHandler
 10059 ;;		_UART2_SetTxInterruptHandler
 10060 ;; This function is called by:
 10061 ;;		_SYSTEM_Initialize
 10062 ;; This function uses a reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text55
 10066  012B32                     __ptext55:
 10067                           	opt callstack 0
 10068  012B32                     _UART2_Initialize:
 10069                           	opt callstack 22
 10070                           
 10071                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10072                           
 10073                           ; BSR set to: 60
 10074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10075                           ;incstack = 0
 10076  012B32  0139               	movlb	57	; () banked
 10077  012B34  9596               	bcf	150,2,b	;volatile
 10078                           
 10079                           ; BSR set to: 57
 10080                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10081  012B36  0E20               	movlw	low _UART2_Receive_ISR
 10082  012B38  6EE6               	movwf	postinc1,c
 10083  012B3A  0E35               	movlw	high _UART2_Receive_ISR
 10084  012B3C  6EE6               	movwf	postinc1,c
 10085  012B3E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10086  012B40  6EE6               	movwf	postinc1,c
 10087  012B42  EC1D  F099         	call	_UART2_SetRxInterruptHandler	;wreg free
 10088                           
 10089                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10090  012B46  0139               	movlb	57	; () banked
 10091  012B48  9796               	bcf	150,3,b	;volatile
 10092                           
 10093                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10094  012B4A  0E1A               	movlw	low _UART2_Transmit_ISR
 10095  012B4C  6EE6               	movwf	postinc1,c
 10096  012B4E  0E31               	movlw	high _UART2_Transmit_ISR
 10097  012B50  6EE6               	movwf	postinc1,c
 10098  012B52  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10099  012B54  6EE6               	movwf	postinc1,c
 10100  012B56  EC09  F099         	call	_UART2_SetTxInterruptHandler	;wreg free
 10101                           
 10102                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10103  012B5A  013D               	movlb	61	; () banked
 10104  012B5C  6BD4               	clrf	212,b	;volatile
 10105                           
 10106                           ; BSR set to: 61
 10107                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10108  012B5E  6BD6               	clrf	214,b	;volatile
 10109                           
 10110                           ; BSR set to: 61
 10111                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10112  012B60  6BD8               	clrf	216,b	;volatile
 10113                           
 10114                           ; BSR set to: 61
 10115                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10116  012B62  0EB0               	movlw	176
 10117  012B64  6FDA               	movwf	218,b	;volatile
 10118                           
 10119                           ; BSR set to: 61
 10120                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10121  012B66  0E80               	movlw	128
 10122  012B68  6FDB               	movwf	219,b	;volatile
 10123                           
 10124                           ; BSR set to: 61
 10125                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10126  012B6A  6BDC               	clrf	220,b	;volatile
 10127                           
 10128                           ; BSR set to: 61
 10129                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10130  012B6C  0E82               	movlw	130
 10131  012B6E  6FDD               	movwf	221,b	;volatile
 10132                           
 10133                           ; BSR set to: 61
 10134                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10135  012B70  0E06               	movlw	6
 10136  012B72  6FDE               	movwf	222,b	;volatile
 10137                           
 10138                           ; BSR set to: 61
 10139                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10140  012B74  6BDF               	clrf	223,b	;volatile
 10141                           
 10142                           ; BSR set to: 61
 10143                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10144  012B76  6BE0               	clrf	224,b	;volatile
 10145                           
 10146                           ; BSR set to: 61
 10147                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10148  012B78  6BE1               	clrf	225,b	;volatile
 10149                           
 10150                           ; BSR set to: 61
 10151                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10152  012B7A  6BE2               	clrf	226,b	;volatile
 10153                           
 10154                           ; BSR set to: 61
 10155                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10156  012B7C  6A32               	clrf	_uart2TxHead^0,c	;volatile
 10157                           
 10158                           ; BSR set to: 61
 10159                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10160  012B7E  6A31               	clrf	_uart2TxTail^0,c	;volatile
 10161                           
 10162                           ; BSR set to: 61
 10163                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10164  012B80  0E40               	movlw	64
 10165  012B82  6E30               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 10166                           
 10167                           ; BSR set to: 61
 10168                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10169  012B84  6A2F               	clrf	_uart2RxHead^0,c	;volatile
 10170                           
 10171                           ; BSR set to: 61
 10172                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10173  012B86  6A2E               	clrf	_uart2RxTail^0,c	;volatile
 10174                           
 10175                           ; BSR set to: 61
 10176                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10177  012B88  6A2D               	clrf	_uart2RxCount^0,c	;volatile
 10178                           
 10179                           ; BSR set to: 61
 10180                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10181  012B8A  0139               	movlb	57	; () banked
 10182  012B8C  8596               	bsf	150,2,b	;volatile
 10183                           
 10184                           ; BSR set to: 57
 10185                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10186  012B8E  0012               	return		;funcret
 10187  012B90                     __end_of_UART2_Initialize:
 10188                           	opt callstack 0
 10189                           
 10190 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10191 ;; Defined at:
 10192 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10195 ;;		 -> UART2_Transmit_ISR(1), 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1  [STACK] void 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10202 ;; Tracked objects:
 10203 ;;		On entry : 3F/39
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10211 ;;Total ram usage:        0 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:    6
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_UART2_Initialize
 10218 ;; This function uses a reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text56
 10222  013212                     __ptext56:
 10223                           	opt callstack 0
 10224  013212                     _UART2_SetTxInterruptHandler:
 10225                           	opt callstack 22
 10226                           
 10227                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10228                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10229                           
 10230                           ; BSR set to: 57
 10231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10232                           ;incstack = 0
 10233  013212  50E1               	movf	fsr1l,w,c
 10234  013214  0FFD               	addlw	-3
 10235  013216  6ED9               	movwf	fsr2l,c
 10236  013218  50E2               	movf	fsr1h,w,c
 10237  01321A  6EDA               	movwf	fsr2h,c
 10238  01321C  0EFF               	movlw	255
 10239  01321E  22DA               	addwfc	fsr2h,f,c
 10240  013220  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler
 10241  013226  006F FF78  F015    	movff	postinc2,_UART2_TxInterruptHandler+1
 10242  01322C  006F FF74  F016    	movff	postdec2,_UART2_TxInterruptHandler+2
 10243                           
 10244                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10245  013232  52E5               	movf	postdec1,f,c
 10246  013234  52E5               	movf	postdec1,f,c
 10247  013236  52E5               	movf	postdec1,f,c
 10248  013238  0012               	return		;funcret
 10249  01323A                     __end_of_UART2_SetTxInterruptHandler:
 10250                           	opt callstack 0
 10251                           
 10252 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10253 ;; Defined at:
 10254 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10257 ;;		 -> UART2_Receive_ISR(1), 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;		None
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1  [STACK] void 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10264 ;; Tracked objects:
 10265 ;;		On entry : 3F/39
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10273 ;;Total ram usage:        0 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    6
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_UART2_Initialize
 10280 ;; This function uses a reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text57
 10284  01323A                     __ptext57:
 10285                           	opt callstack 0
 10286  01323A                     _UART2_SetRxInterruptHandler:
 10287                           	opt callstack 22
 10288                           
 10289                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10290                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10291                           
 10292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10293                           ;incstack = 0
 10294  01323A  50E1               	movf	fsr1l,w,c
 10295  01323C  0FFD               	addlw	-3
 10296  01323E  6ED9               	movwf	fsr2l,c
 10297  013240  50E2               	movf	fsr1h,w,c
 10298  013242  6EDA               	movwf	fsr2h,c
 10299  013244  0EFF               	movlw	255
 10300  013246  22DA               	addwfc	fsr2h,f,c
 10301  013248  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler
 10302  01324E  006F FF78  F018    	movff	postinc2,_UART2_RxInterruptHandler+1
 10303  013254  006F FF74  F019    	movff	postdec2,_UART2_RxInterruptHandler+2
 10304                           
 10305                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10306  01325A  52E5               	movf	postdec1,f,c
 10307  01325C  52E5               	movf	postdec1,f,c
 10308  01325E  52E5               	movf	postdec1,f,c
 10309  013260  0012               	return		;funcret
 10310  013262                     __end_of_UART2_SetRxInterruptHandler:
 10311                           	opt callstack 0
 10312                           
 10313 ;; *************** function _UART1_Initialize *****************
 10314 ;; Defined at:
 10315 ;;		line 79 in file "mcc_generated_files/uart1.c"
 10316 ;; Parameters:    Size  Location     Type
 10317 ;;		None
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;		None
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  1  [STACK] void 
 10322 ;; Registers used:
 10323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10324 ;; Tracked objects:
 10325 ;;		On entry : 0/39
 10326 ;;		On exit  : 3F/39
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10333 ;;Total ram usage:        0 bytes
 10334 ;; Hardware stack levels used:    1
 10335 ;; Hardware stack levels required when called:    7
 10336 ;; This function calls:
 10337 ;;		_UART1_SetRxInterruptHandler
 10338 ;;		_UART1_SetTxInterruptHandler
 10339 ;; This function is called by:
 10340 ;;		_SYSTEM_Initialize
 10341 ;; This function uses a reentrant model
 10342 ;;
 10343                           
 10344                           	psect	text58
 10345  012A08                     __ptext58:
 10346                           	opt callstack 0
 10347  012A08                     _UART1_Initialize:
 10348                           	opt callstack 22
 10349                           
 10350                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 10351                           
 10352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10353                           ;incstack = 0
 10354  012A08  0139               	movlb	57	; () banked
 10355  012A0A  9793               	bcf	147,3,b	;volatile
 10356                           
 10357                           ; BSR set to: 57
 10358                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10359  012A0C  0E02               	movlw	low _UART1_Receive_ISR
 10360  012A0E  6EE6               	movwf	postinc1,c
 10361  012A10  0E35               	movlw	high _UART1_Receive_ISR
 10362  012A12  6EE6               	movwf	postinc1,c
 10363  012A14  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10364  012A16  6EE6               	movwf	postinc1,c
 10365  012A18  EC45  F099         	call	_UART1_SetRxInterruptHandler	;wreg free
 10366                           
 10367                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 10368  012A1C  0139               	movlb	57	; () banked
 10369  012A1E  9993               	bcf	147,4,b	;volatile
 10370                           
 10371                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10372  012A20  0EEE               	movlw	low _UART1_Transmit_ISR
 10373  012A22  6EE6               	movwf	postinc1,c
 10374  012A24  0E30               	movlw	high _UART1_Transmit_ISR
 10375  012A26  6EE6               	movwf	postinc1,c
 10376  012A28  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10377  012A2A  6EE6               	movwf	postinc1,c
 10378  012A2C  EC31  F099         	call	_UART1_SetTxInterruptHandler	;wreg free
 10379                           
 10380                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 10381  012A30  013D               	movlb	61	; () banked
 10382  012A32  6BEC               	clrf	236,b	;volatile
 10383                           
 10384                           ; BSR set to: 61
 10385                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 10386  012A34  6BED               	clrf	237,b	;volatile
 10387                           
 10388                           ; BSR set to: 61
 10389                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 10390  012A36  6BEE               	clrf	238,b	;volatile
 10391                           
 10392                           ; BSR set to: 61
 10393                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 10394  012A38  6BEF               	clrf	239,b	;volatile
 10395                           
 10396                           ; BSR set to: 61
 10397                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 10398  012A3A  6BF0               	clrf	240,b	;volatile
 10399                           
 10400                           ; BSR set to: 61
 10401                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 10402  012A3C  6BF1               	clrf	241,b	;volatile
 10403                           
 10404                           ; BSR set to: 61
 10405                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 10406  012A3E  0EB0               	movlw	176
 10407  012A40  6FF2               	movwf	242,b	;volatile
 10408                           
 10409                           ; BSR set to: 61
 10410                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 10411  012A42  0E80               	movlw	128
 10412  012A44  6FF3               	movwf	243,b	;volatile
 10413                           
 10414                           ; BSR set to: 61
 10415                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 10416  012A46  6BF4               	clrf	244,b	;volatile
 10417                           
 10418                           ; BSR set to: 61
 10419                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 10420  012A48  0E82               	movlw	130
 10421  012A4A  6FF5               	movwf	245,b	;volatile
 10422                           
 10423                           ; BSR set to: 61
 10424                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 10425  012A4C  0E06               	movlw	6
 10426  012A4E  6FF6               	movwf	246,b	;volatile
 10427                           
 10428                           ; BSR set to: 61
 10429                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 10430  012A50  6BF7               	clrf	247,b	;volatile
 10431                           
 10432                           ; BSR set to: 61
 10433                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 10434  012A52  6BF8               	clrf	248,b	;volatile
 10435                           
 10436                           ; BSR set to: 61
 10437                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 10438  012A54  6BF9               	clrf	249,b	;volatile
 10439                           
 10440                           ; BSR set to: 61
 10441                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 10442  012A56  6BFA               	clrf	250,b	;volatile
 10443                           
 10444                           ; BSR set to: 61
 10445                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 10446  012A58  6A38               	clrf	_uart1TxHead^0,c	;volatile
 10447                           
 10448                           ; BSR set to: 61
 10449                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 10450  012A5A  6A37               	clrf	_uart1TxTail^0,c	;volatile
 10451                           
 10452                           ; BSR set to: 61
 10453                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10454  012A5C  0E40               	movlw	64
 10455  012A5E  6E36               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 10456                           
 10457                           ; BSR set to: 61
 10458                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 10459  012A60  6A35               	clrf	_uart1RxHead^0,c	;volatile
 10460                           
 10461                           ; BSR set to: 61
 10462                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 10463  012A62  6A34               	clrf	_uart1RxTail^0,c	;volatile
 10464                           
 10465                           ; BSR set to: 61
 10466                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 10467  012A64  6A33               	clrf	_uart1RxCount^0,c	;volatile
 10468                           
 10469                           ; BSR set to: 61
 10470                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 10471  012A66  0139               	movlb	57	; () banked
 10472  012A68  8793               	bsf	147,3,b	;volatile
 10473                           
 10474                           ; BSR set to: 57
 10475                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10476  012A6A  0012               	return		;funcret
 10477  012A6C                     __end_of_UART1_Initialize:
 10478                           	opt callstack 0
 10479                           
 10480 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10481 ;; Defined at:
 10482 ;;		line 247 in file "mcc_generated_files/uart1.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10485 ;;		 -> UART1_Transmit_ISR(1), 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1  [STACK] void 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10492 ;; Tracked objects:
 10493 ;;		On entry : 3F/39
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10501 ;;Total ram usage:        0 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    6
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_UART1_Initialize
 10508 ;; This function uses a reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text59
 10512  013262                     __ptext59:
 10513                           	opt callstack 0
 10514  013262                     _UART1_SetTxInterruptHandler:
 10515                           	opt callstack 22
 10516                           
 10517                           ;mcc_generated_files/uart1.c: 247: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 248: {;mcc_generated_files/uart1.c: 249:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10518                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10519                           
 10520                           ; BSR set to: 57
 10521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10522                           ;incstack = 0
 10523  013262  50E1               	movf	fsr1l,w,c
 10524  013264  0FFD               	addlw	-3
 10525  013266  6ED9               	movwf	fsr2l,c
 10526  013268  50E2               	movf	fsr1h,w,c
 10527  01326A  6EDA               	movwf	fsr2h,c
 10528  01326C  0EFF               	movlw	255
 10529  01326E  22DA               	addwfc	fsr2h,f,c
 10530  013270  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler
 10531  013276  006F FF78  F00F    	movff	postinc2,_UART1_TxInterruptHandler+1
 10532  01327C  006F FF74  F010    	movff	postdec2,_UART1_TxInterruptHandler+2
 10533                           
 10534                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10535  013282  52E5               	movf	postdec1,f,c
 10536  013284  52E5               	movf	postdec1,f,c
 10537  013286  52E5               	movf	postdec1,f,c
 10538  013288  0012               	return		;funcret
 10539  01328A                     __end_of_UART1_SetTxInterruptHandler:
 10540                           	opt callstack 0
 10541                           
 10542 ;; *************** function _UART1_SetRxInterruptHandler *****************
 10543 ;; Defined at:
 10544 ;;		line 242 in file "mcc_generated_files/uart1.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10547 ;;		 -> UART1_Receive_ISR(1), 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1  [STACK] void 
 10552 ;; Registers used:
 10553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10554 ;; Tracked objects:
 10555 ;;		On entry : 3F/39
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10563 ;;Total ram usage:        0 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; Hardware stack levels required when called:    6
 10566 ;; This function calls:
 10567 ;;		Nothing
 10568 ;; This function is called by:
 10569 ;;		_UART1_Initialize
 10570 ;; This function uses a reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text60
 10574  01328A                     __ptext60:
 10575                           	opt callstack 0
 10576  01328A                     _UART1_SetRxInterruptHandler:
 10577                           	opt callstack 22
 10578                           
 10579                           ;mcc_generated_files/uart1.c: 242: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 243: {;mcc_generated_files/uart1.c: 244:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 10580                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10581                           
 10582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10583                           ;incstack = 0
 10584  01328A  50E1               	movf	fsr1l,w,c
 10585  01328C  0FFD               	addlw	-3
 10586  01328E  6ED9               	movwf	fsr2l,c
 10587  013290  50E2               	movf	fsr1h,w,c
 10588  013292  6EDA               	movwf	fsr2h,c
 10589  013294  0EFF               	movlw	255
 10590  013296  22DA               	addwfc	fsr2h,f,c
 10591  013298  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler
 10592  01329E  006F FF78  F012    	movff	postinc2,_UART1_RxInterruptHandler+1
 10593  0132A4  006F FF74  F013    	movff	postdec2,_UART1_RxInterruptHandler+2
 10594                           
 10595                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10596  0132AA  52E5               	movf	postdec1,f,c
 10597  0132AC  52E5               	movf	postdec1,f,c
 10598  0132AE  52E5               	movf	postdec1,f,c
 10599  0132B0  0012               	return		;funcret
 10600  0132B2                     __end_of_UART1_SetRxInterruptHandler:
 10601                           	opt callstack 0
 10602                           
 10603 ;; *************** function _TMR6_Initialize *****************
 10604 ;; Defined at:
 10605 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1  [STACK] void 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10614 ;; Tracked objects:
 10615 ;;		On entry : 3F/39
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10623 ;;Total ram usage:        0 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    7
 10626 ;; This function calls:
 10627 ;;		_TMR6_SetInterruptHandler
 10628 ;; This function is called by:
 10629 ;;		_SYSTEM_Initialize
 10630 ;; This function uses a reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text61
 10634  013146                     __ptext61:
 10635                           	opt callstack 0
 10636  013146                     _TMR6_Initialize:
 10637                           	opt callstack 22
 10638                           
 10639                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 10640                           
 10641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10642                           ;incstack = 0
 10643  013146  0E01               	movlw	1
 10644  013148  6E96               	movwf	150,c	;volatile
 10645                           
 10646                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 10647  01314A  6A95               	clrf	149,c	;volatile
 10648                           
 10649                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 10650  01314C  6A97               	clrf	151,c	;volatile
 10651                           
 10652                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 10653  01314E  0E7C               	movlw	124
 10654  013150  6E93               	movwf	147,c	;volatile
 10655                           
 10656                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 10657  013152  6A92               	clrf	146,c	;volatile
 10658                           
 10659                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 10660  013154  0139               	movlb	57	; () banked
 10661  013156  91A9               	bcf	169,0,b	;volatile
 10662                           
 10663                           ; BSR set to: 57
 10664                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 10665  013158  8199               	bsf	153,0,b	;volatile
 10666                           
 10667                           ; BSR set to: 57
 10668                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 10669  01315A  0E0C               	movlw	low _TMR6_DefaultInterruptHandler
 10670  01315C  6EE6               	movwf	postinc1,c
 10671  01315E  0E2E               	movlw	high _TMR6_DefaultInterruptHandler
 10672  013160  6EE6               	movwf	postinc1,c
 10673  013162  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 10674  013164  6EE6               	movwf	postinc1,c
 10675  013166  EC59  F099         	call	_TMR6_SetInterruptHandler	;wreg free
 10676                           
 10677                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 10678  01316A  0EE0               	movlw	224
 10679  01316C  6E94               	movwf	148,c	;volatile
 10680                           
 10681                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 10682  01316E  0012               	return		;funcret
 10683  013170                     __end_of_TMR6_Initialize:
 10684                           	opt callstack 0
 10685                           
 10686 ;; *************** function _TMR6_SetInterruptHandler *****************
 10687 ;; Defined at:
 10688 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10691 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;		None
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1  [STACK] void 
 10696 ;; Registers used:
 10697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10698 ;; Tracked objects:
 10699 ;;		On entry : 3F/39
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10707 ;;Total ram usage:        0 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    6
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_TMR6_Initialize
 10714 ;; This function uses a reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text62
 10718  0132B2                     __ptext62:
 10719                           	opt callstack 0
 10720  0132B2                     _TMR6_SetInterruptHandler:
 10721                           	opt callstack 22
 10722                           
 10723                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 10724                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10725                           
 10726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10727                           ;incstack = 0
 10728  0132B2  50E1               	movf	fsr1l,w,c
 10729  0132B4  0FFD               	addlw	-3
 10730  0132B6  6ED9               	movwf	fsr2l,c
 10731  0132B8  50E2               	movf	fsr1h,w,c
 10732  0132BA  6EDA               	movwf	fsr2h,c
 10733  0132BC  0EFF               	movlw	255
 10734  0132BE  22DA               	addwfc	fsr2h,f,c
 10735  0132C0  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler
 10736  0132C6  006F FF78  F009    	movff	postinc2,_TMR6_InterruptHandler+1
 10737  0132CC  006F FF74  F00A    	movff	postdec2,_TMR6_InterruptHandler+2
 10738                           
 10739                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 10740  0132D2  52E5               	movf	postdec1,f,c
 10741  0132D4  52E5               	movf	postdec1,f,c
 10742  0132D6  52E5               	movf	postdec1,f,c
 10743  0132D8  0012               	return		;funcret
 10744  0132DA                     __end_of_TMR6_SetInterruptHandler:
 10745                           	opt callstack 0
 10746                           
 10747 ;; *************** function _TMR5_Initialize *****************
 10748 ;; Defined at:
 10749 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;		None
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;		None
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1  [STACK] void 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/39
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10767 ;;Total ram usage:        0 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    7
 10770 ;; This function calls:
 10771 ;;		_TMR5_SetInterruptHandler
 10772 ;; This function is called by:
 10773 ;;		_SYSTEM_Initialize
 10774 ;; This function uses a reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text63
 10778  012DC6                     __ptext63:
 10779                           	opt callstack 0
 10780  012DC6                     _TMR5_Initialize:
 10781                           	opt callstack 22
 10782                           
 10783                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 10784                           
 10785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10786                           ;incstack = 0
 10787  012DC6  6A9B               	clrf	155,c	;volatile
 10788                           
 10789                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 10790  012DC8  6A9C               	clrf	156,c	;volatile
 10791                           
 10792                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 10793  012DCA  0E01               	movlw	1
 10794  012DCC  6E9D               	movwf	157,c	;volatile
 10795                           
 10796                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 10797  012DCE  0E63               	movlw	99
 10798  012DD0  6E99               	movwf	153,c	;volatile
 10799                           
 10800                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 10801  012DD2  0EC0               	movlw	192
 10802  012DD4  6E98               	movwf	152,c	;volatile
 10803                           
 10804                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 10805  012DD6  5098               	movf	152,w,c	;volatile
 10806  012DD8  006F FE64  F039    	movff	16281,btemp	;volatile
 10807  012DDE  6A3A               	clrf	(btemp+1)^0,c
 10808  012DE0  0060  F0E4  F03A   	movff	btemp,btemp+1
 10809  012DE6  6A39               	clrf	btemp^0,c
 10810  012DE8  1039               	iorwf	btemp^0,w,c
 10811  012DEA  6E2A               	movwf	_timer5ReloadVal^0,c	;volatile
 10812  012DEC  503A               	movf	(btemp+1)^0,w,c
 10813  012DEE  6E2B               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 10814                           
 10815                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 10816  012DF0  0139               	movlb	57	; () banked
 10817  012DF2  9DA8               	bcf	168,6,b	;volatile
 10818                           
 10819                           ; BSR set to: 57
 10820                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 10821  012DF4  8D98               	bsf	152,6,b	;volatile
 10822                           
 10823                           ; BSR set to: 57
 10824                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 10825  012DF6  0EAA               	movlw	low _TMR5_DefaultInterruptHandler
 10826  012DF8  6EE6               	movwf	postinc1,c
 10827  012DFA  0E35               	movlw	high _TMR5_DefaultInterruptHandler
 10828  012DFC  6EE6               	movwf	postinc1,c
 10829  012DFE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 10830  012E00  6EE6               	movwf	postinc1,c
 10831  012E02  EC6D  F099         	call	_TMR5_SetInterruptHandler	;wreg free
 10832                           
 10833                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 10834  012E06  0E31               	movlw	49
 10835  012E08  6E9A               	movwf	154,c	;volatile
 10836                           
 10837                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 10838  012E0A  0012               	return		;funcret
 10839  012E0C                     __end_of_TMR5_Initialize:
 10840                           	opt callstack 0
 10841                           
 10842 ;; *************** function _TMR5_SetInterruptHandler *****************
 10843 ;; Defined at:
 10844 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10847 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;		None
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1  [STACK] void 
 10852 ;; Registers used:
 10853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10854 ;; Tracked objects:
 10855 ;;		On entry : 3F/39
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10863 ;;Total ram usage:        0 bytes
 10864 ;; Hardware stack levels used:    1
 10865 ;; Hardware stack levels required when called:    6
 10866 ;; This function calls:
 10867 ;;		Nothing
 10868 ;; This function is called by:
 10869 ;;		_TMR5_Initialize
 10870 ;; This function uses a reentrant model
 10871 ;;
 10872                           
 10873                           	psect	text64
 10874  0132DA                     __ptext64:
 10875                           	opt callstack 0
 10876  0132DA                     _TMR5_SetInterruptHandler:
 10877                           	opt callstack 22
 10878                           
 10879                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 10880                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10881                           
 10882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10883                           ;incstack = 0
 10884  0132DA  50E1               	movf	fsr1l,w,c
 10885  0132DC  0FFD               	addlw	-3
 10886  0132DE  6ED9               	movwf	fsr2l,c
 10887  0132E0  50E2               	movf	fsr1h,w,c
 10888  0132E2  6EDA               	movwf	fsr2h,c
 10889  0132E4  0EFF               	movlw	255
 10890  0132E6  22DA               	addwfc	fsr2h,f,c
 10891  0132E8  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler
 10892  0132EE  006F FF78  F006    	movff	postinc2,_TMR5_InterruptHandler+1
 10893  0132F4  006F FF74  F007    	movff	postdec2,_TMR5_InterruptHandler+2
 10894                           
 10895                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 10896  0132FA  52E5               	movf	postdec1,f,c
 10897  0132FC  52E5               	movf	postdec1,f,c
 10898  0132FE  52E5               	movf	postdec1,f,c
 10899  013300  0012               	return		;funcret
 10900  013302                     __end_of_TMR5_SetInterruptHandler:
 10901                           	opt callstack 0
 10902                           
 10903 ;; *************** function _TMR2_Initialize *****************
 10904 ;; Defined at:
 10905 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1  [STACK] void 
 10912 ;; Registers used:
 10913 ;;		wreg, status,2
 10914 ;; Tracked objects:
 10915 ;;		On entry : 3F/3F
 10916 ;;		On exit  : 3F/39
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10923 ;;Total ram usage:        0 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:    6
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_SYSTEM_Initialize
 10930 ;; This function uses a reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text65
 10934  013590                     __ptext65:
 10935                           	opt callstack 0
 10936  013590                     _TMR2_Initialize:
 10937                           	opt callstack 23
 10938                           
 10939                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 10940                           
 10941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10942                           ;incstack = 0
 10943  013590  0E01               	movlw	1
 10944  013592  6EAE               	movwf	174,c	;volatile
 10945                           
 10946                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 10947  013594  6AAD               	clrf	173,c	;volatile
 10948                           
 10949                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x11;
 10950  013596  0E11               	movlw	17
 10951  013598  6EAF               	movwf	175,c	;volatile
 10952                           
 10953                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 10954  01359A  0E63               	movlw	99
 10955  01359C  6EAB               	movwf	171,c	;volatile
 10956                           
 10957                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 10958  01359E  6AAA               	clrf	170,c	;volatile
 10959                           
 10960                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 10961  0135A0  0139               	movlb	57	; () banked
 10962  0135A2  95A4               	bcf	164,2,b	;volatile
 10963                           
 10964                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 10965  0135A4  0EC0               	movlw	192
 10966  0135A6  6EAC               	movwf	172,c	;volatile
 10967                           
 10968                           ; BSR set to: 57
 10969                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 10970  0135A8  0012               	return		;funcret
 10971  0135AA                     __end_of_TMR2_Initialize:
 10972                           	opt callstack 0
 10973                           
 10974 ;; *************** function _SPI1_Initialize *****************
 10975 ;; Defined at:
 10976 ;;		line 64 in file "mcc_generated_files/spi1.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;		None
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1  [STACK] void 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2
 10985 ;; Tracked objects:
 10986 ;;		On entry : 3F/39
 10987 ;;		On exit  : 3F/3D
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10994 ;;Total ram usage:        0 bytes
 10995 ;; Hardware stack levels used:    1
 10996 ;; Hardware stack levels required when called:    6
 10997 ;; This function calls:
 10998 ;;		Nothing
 10999 ;; This function is called by:
 11000 ;;		_SYSTEM_Initialize
 11001 ;; This function uses a reentrant model
 11002 ;;
 11003                           
 11004                           	psect	text66
 11005  01360E                     __ptext66:
 11006                           	opt callstack 0
 11007  01360E                     _SPI1_Initialize:
 11008                           	opt callstack 23
 11009                           
 11010                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11011                           
 11012                           ; BSR set to: 57
 11013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11014                           ;incstack = 0
 11015  01360E  0E40               	movlw	64
 11016  013610  013D               	movlb	61	; () banked
 11017  013612  6F15               	movwf	21,b	;volatile
 11018                           
 11019                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11020  013614  0E03               	movlw	3
 11021  013616  6F16               	movwf	22,b	;volatile
 11022                           
 11023                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11024  013618  0E4F               	movlw	79
 11025  01361A  6F19               	movwf	25,b	;volatile
 11026                           
 11027                           ; BSR set to: 61
 11028                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11029  01361C  6B1C               	clrf	28,b	;volatile
 11030                           
 11031                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11032  01361E  0E83               	movlw	131
 11033  013620  6F14               	movwf	20,b	;volatile
 11034                           
 11035                           ; BSR set to: 61
 11036                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11037  013622  0012               	return		;funcret
 11038  013624                     __end_of_SPI1_Initialize:
 11039                           	opt callstack 0
 11040                           
 11041 ;; *************** function _PWM8_Initialize *****************
 11042 ;; Defined at:
 11043 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 11044 ;; Parameters:    Size  Location     Type
 11045 ;;		None
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;		None
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  1  [STACK] void 
 11050 ;; Registers used:
 11051 ;;		wreg, status,2
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/3E
 11054 ;;		On exit  : 3F/3F
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11061 ;;Total ram usage:        0 bytes
 11062 ;; Hardware stack levels used:    1
 11063 ;; Hardware stack levels required when called:    6
 11064 ;; This function calls:
 11065 ;;		Nothing
 11066 ;; This function is called by:
 11067 ;;		_SYSTEM_Initialize
 11068 ;; This function uses a reentrant model
 11069 ;;
 11070                           
 11071                           	psect	text67
 11072  013624                     __ptext67:
 11073                           	opt callstack 0
 11074  013624                     _PWM8_Initialize:
 11075                           	opt callstack 23
 11076                           
 11077                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 11078                           
 11079                           ; BSR set to: 61
 11080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11081                           ;incstack = 0
 11082  013624  0E80               	movlw	128
 11083  013626  6E62               	movwf	98,c	;volatile
 11084                           
 11085                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 11086  013628  6A61               	clrf	97,c	;volatile
 11087                           
 11088                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 11089  01362A  0E40               	movlw	64
 11090  01362C  6E60               	movwf	96,c	;volatile
 11091                           
 11092                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 11093  01362E  013F               	movlb	63	; () banked
 11094  013630  515F               	movf	95,w,b	;volatile
 11095  013632  0B3F               	andlw	-193
 11096  013634  0940               	iorlw	64
 11097  013636  6F5F               	movwf	95,b	;volatile
 11098                           
 11099                           ; BSR set to: 63
 11100                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11101  013638  0012               	return		;funcret
 11102  01363A                     __end_of_PWM8_Initialize:
 11103                           	opt callstack 0
 11104                           
 11105 ;; *************** function _PMD_Initialize *****************
 11106 ;; Defined at:
 11107 ;;		line 89 in file "mcc_generated_files/mcc.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;		None
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;		None
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1  [STACK] void 
 11114 ;; Registers used:
 11115 ;;		None
 11116 ;; Tracked objects:
 11117 ;;		On entry : 3F/39
 11118 ;;		On exit  : 3F/39
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11125 ;;Total ram usage:        0 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    6
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_SYSTEM_Initialize
 11132 ;; This function uses a reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text68
 11136  013650                     __ptext68:
 11137                           	opt callstack 0
 11138  013650                     _PMD_Initialize:
 11139                           	opt callstack 23
 11140                           
 11141                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 11142                           
 11143                           ; BSR set to: 63
 11144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11145                           ;incstack = 0
 11146  013650  0139               	movlb	57	; () banked
 11147  013652  6BC0               	clrf	192,b	;volatile
 11148                           
 11149                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 11150  013654  6BC1               	clrf	193,b	;volatile
 11151                           
 11152                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 11153  013656  6BC2               	clrf	194,b	;volatile
 11154                           
 11155                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 11156  013658  6BC3               	clrf	195,b	;volatile
 11157                           
 11158                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 11159  01365A  6BC4               	clrf	196,b	;volatile
 11160                           
 11161                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 11162  01365C  6BC5               	clrf	197,b	;volatile
 11163                           
 11164                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 11165  01365E  6BC6               	clrf	198,b	;volatile
 11166                           
 11167                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 11168  013660  6BC7               	clrf	199,b	;volatile
 11169                           
 11170                           ; BSR set to: 57
 11171                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11172  013662  0012               	return		;funcret
 11173  013664                     __end_of_PMD_Initialize:
 11174                           	opt callstack 0
 11175                           
 11176 ;; *************** function _PIN_MANAGER_Initialize *****************
 11177 ;; Defined at:
 11178 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;		None
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;		None
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  1  [STACK] void 
 11185 ;; Registers used:
 11186 ;;		wreg, status,2
 11187 ;; Tracked objects:
 11188 ;;		On entry : 3F/39
 11189 ;;		On exit  : 3F/3A
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11196 ;;Total ram usage:        0 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:    6
 11199 ;; This function calls:
 11200 ;;		Nothing
 11201 ;; This function is called by:
 11202 ;;		_SYSTEM_Initialize
 11203 ;; This function uses a reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text69
 11207  012788                     __ptext69:
 11208                           	opt callstack 0
 11209  012788                     _PIN_MANAGER_Initialize:
 11210                           	opt callstack 23
 11211                           
 11212                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11213                           
 11214                           ; BSR set to: 57
 11215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11216                           ;incstack = 0
 11217  012788  0E07               	movlw	7
 11218  01278A  6EBE               	movwf	190,c	;volatile
 11219                           
 11220                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11221  01278C  6ABD               	clrf	189,c	;volatile
 11222                           
 11223                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11224  01278E  6ABA               	clrf	186,c	;volatile
 11225                           
 11226                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11227  012790  6ABF               	clrf	191,c	;volatile
 11228                           
 11229                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11230  012792  6ABB               	clrf	187,c	;volatile
 11231                           
 11232                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 11233  012794  0E07               	movlw	7
 11234  012796  6EBC               	movwf	188,c	;volatile
 11235                           
 11236                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11237  012798  6AC6               	clrf	198,c	;volatile
 11238                           
 11239                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 11240  01279A  0E0F               	movlw	15
 11241  01279C  6EC7               	movwf	199,c	;volatile
 11242                           
 11243                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 11244  01279E  68C2               	setf	194,c	;volatile
 11245                           
 11246                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11247  0127A0  0EBF               	movlw	191
 11248  0127A2  6EC3               	movwf	195,c	;volatile
 11249                           
 11250                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 11251  0127A4  0E90               	movlw	144
 11252  0127A6  6EC4               	movwf	196,c	;volatile
 11253                           
 11254                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 11255  0127A8  0E0C               	movlw	12
 11256  0127AA  6EC5               	movwf	197,c	;volatile
 11257                           
 11258                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 11259  0127AC  013A               	movlb	58	; () banked
 11260  0127AE  6B70               	clrf	112,b	;volatile
 11261                           
 11262                           ; BSR set to: 58
 11263                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 11264  0127B0  6B60               	clrf	96,b	;volatile
 11265                           
 11266                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 11267  0127B2  0E3C               	movlw	60
 11268  0127B4  6F50               	movwf	80,b	;volatile
 11269                           
 11270                           ; BSR set to: 58
 11271                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11272  0127B6  6B80               	clrf	128,b	;volatile
 11273                           
 11274                           ; BSR set to: 58
 11275                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 11276  0127B8  6B90               	clrf	144,b	;volatile
 11277                           
 11278                           ; BSR set to: 58
 11279                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 11280  0127BA  6940               	setf	64,b	;volatile
 11281                           
 11282                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11283  0127BC  0E0C               	movlw	12
 11284  0127BE  6F71               	movwf	113,b	;volatile
 11285                           
 11286                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 11287  0127C0  0E0F               	movlw	15
 11288  0127C2  6F91               	movwf	145,b	;volatile
 11289                           
 11290                           ; BSR set to: 58
 11291                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11292  0127C4  6B81               	clrf	129,b	;volatile
 11293                           
 11294                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11295  0127C6  0E87               	movlw	135
 11296  0127C8  6F51               	movwf	81,b	;volatile
 11297                           
 11298                           ; BSR set to: 58
 11299                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11300  0127CA  6B41               	clrf	65,b	;volatile
 11301                           
 11302                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 11303  0127CC  0E97               	movlw	151
 11304  0127CE  6F61               	movwf	97,b	;volatile
 11305                           
 11306                           ; BSR set to: 58
 11307                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11308  0127D0  6B82               	clrf	130,b	;volatile
 11309                           
 11310                           ; BSR set to: 58
 11311                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11312  0127D2  6B92               	clrf	146,b	;volatile
 11313                           
 11314                           ; BSR set to: 58
 11315                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11316  0127D4  6B42               	clrf	66,b	;volatile
 11317                           
 11318                           ; BSR set to: 58
 11319                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11320  0127D6  6B52               	clrf	82,b	;volatile
 11321                           
 11322                           ; BSR set to: 58
 11323                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11324  0127D8  6B62               	clrf	98,b	;volatile
 11325                           
 11326                           ; BSR set to: 58
 11327                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11328  0127DA  6B72               	clrf	114,b	;volatile
 11329                           
 11330                           ; BSR set to: 58
 11331                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11332  0127DC  6943               	setf	67,b	;volatile
 11333                           
 11334                           ; BSR set to: 58
 11335                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11336  0127DE  6953               	setf	83,b	;volatile
 11337                           
 11338                           ; BSR set to: 58
 11339                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11340  0127E0  6963               	setf	99,b	;volatile
 11341                           
 11342                           ; BSR set to: 58
 11343                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11344  0127E2  6973               	setf	115,b	;volatile
 11345                           
 11346                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11347  0127E4  0E07               	movlw	7
 11348  0127E6  6F83               	movwf	131,b	;volatile
 11349                           
 11350                           ; BSR set to: 58
 11351                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11352  0127E8  6993               	setf	147,b	;volatile
 11353                           
 11354                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11355  0127EA  0E0F               	movlw	15
 11356  0127EC  6FE8               	movwf	232,b	;volatile
 11357                           
 11358                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 11359  0127EE  0E13               	movlw	19
 11360  0127F0  6FDE               	movwf	222,b	;volatile
 11361                           
 11362                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 11363  0127F2  0E16               	movlw	22
 11364  0127F4  6F0E               	movwf	14,b	;volatile
 11365                           
 11366                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 11367  0127F6  0E1E               	movlw	30
 11368  0127F8  6F13               	movwf	19,b	;volatile
 11369                           
 11370                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 11371  0127FA  0E08               	movlw	8
 11372  0127FC  6FC0               	movwf	192,b	;volatile
 11373                           
 11374                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 11375  0127FE  0E10               	movlw	16
 11376  012800  6F19               	movwf	25,b	;volatile
 11377                           
 11378                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 11379  012802  0E09               	movlw	9
 11380  012804  6FC1               	movwf	193,b	;volatile
 11381                           
 11382                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 11383  012806  0E1F               	movlw	31
 11384  012808  6F15               	movwf	21,b	;volatile
 11385                           
 11386                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 11387  01280A  0E13               	movlw	19
 11388  01280C  6F16               	movwf	22,b	;volatile
 11389                           
 11390                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 11391  01280E  0E17               	movlw	23
 11392  012810  6FE5               	movwf	229,b	;volatile
 11393                           
 11394                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 11395  012812  0E14               	movlw	20
 11396  012814  6FDF               	movwf	223,b	;volatile
 11397                           
 11398                           ; BSR set to: 58
 11399                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11400  012816  0012               	return		;funcret
 11401  012818                     __end_of_PIN_MANAGER_Initialize:
 11402                           	opt callstack 0
 11403                           
 11404 ;; *************** function _OSCILLATOR_Initialize *****************
 11405 ;; Defined at:
 11406 ;;		line 71 in file "mcc_generated_files/mcc.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;		None
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;		None
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  1  [STACK] void 
 11413 ;; Registers used:
 11414 ;;		wreg, status,2
 11415 ;; Tracked objects:
 11416 ;;		On entry : 3F/3A
 11417 ;;		On exit  : 3F/39
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11424 ;;Total ram usage:        0 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    6
 11427 ;; This function calls:
 11428 ;;		Nothing
 11429 ;; This function is called by:
 11430 ;;		_SYSTEM_Initialize
 11431 ;; This function uses a reentrant model
 11432 ;;
 11433                           
 11434                           	psect	text70
 11435  01363A                     __ptext70:
 11436                           	opt callstack 0
 11437  01363A                     _OSCILLATOR_Initialize:
 11438                           	opt callstack 23
 11439                           
 11440                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 11441                           
 11442                           ; BSR set to: 58
 11443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11444                           ;incstack = 0
 11445  01363A  0E20               	movlw	32
 11446  01363C  0139               	movlb	57	; () banked
 11447  01363E  6FD9               	movwf	217,b	;volatile
 11448                           
 11449                           ; BSR set to: 57
 11450                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 11451  013640  6BDB               	clrf	219,b	;volatile
 11452                           
 11453                           ; BSR set to: 57
 11454                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 11455  013642  6BDD               	clrf	221,b	;volatile
 11456                           
 11457                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 11458  013644  0E02               	movlw	2
 11459  013646  6FDF               	movwf	223,b	;volatile
 11460                           
 11461                           ; BSR set to: 57
 11462                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 11463  013648  6BDE               	clrf	222,b	;volatile
 11464  01364A                     l171:
 11465                           
 11466                           ; BSR set to: 57
 11467                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 11468  01364A  B1DC               	btfsc	220,0,b	;volatile
 11469  01364C  0012               	return	
 11470  01364E  D7FD               	goto	l171
 11471  013650                     __end_of_OSCILLATOR_Initialize:
 11472                           	opt callstack 0
 11473                           
 11474 ;; *************** function _INTERRUPT_Initialize *****************
 11475 ;; Defined at:
 11476 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;		None
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  state           1  [STACK] _Bool 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  1  [STACK] void 
 11483 ;; Registers used:
 11484 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 3F/39
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11494 ;;Total ram usage:        0 bytes
 11495 ;; Hardware stack levels used:    1
 11496 ;; Hardware stack levels required when called:    6
 11497 ;; This function calls:
 11498 ;;		Nothing
 11499 ;; This function is called by:
 11500 ;;		_SYSTEM_Initialize
 11501 ;; This function uses a reentrant model
 11502 ;;
 11503                           
 11504                           	psect	text71
 11505  012A6C                     __ptext71:
 11506                           	opt callstack 0
 11507  012A6C                     _INTERRUPT_Initialize:
 11508                           	opt callstack 0
 11509                           
 11510                           ; BSR set to: 57
 11511                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11512  012A6C  52E6               	movf	postinc1,f,c
 11513                           
 11514                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11515                           
 11516                           ;incstack = 0
 11517  012A6E  8AD2               	bsf	210,5,c	;volatile
 11518                           
 11519                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11520  012A70  AED2               	btfss	16338,7,c	;volatile
 11521  012A72  D003               	goto	u2810
 11522  012A74  6A44               	clrf	(btemp+11)^0,c
 11523  012A76  2A44               	incf	(btemp+11)^0,f,c
 11524  012A78  D001               	goto	u2828
 11525  012A7A                     u2810:
 11526  012A7A  6A44               	clrf	(btemp+11)^0,c
 11527  012A7C                     u2828:
 11528                           
 11529                           ;stkvar	_state @ sp[(-1)+0]
 11530  012A7C  0EFF               	movlw	-1
 11531  012A7E  0060  F113  FFE3   	movff	btemp+11,plusw1
 11532                           
 11533                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11534  012A84  9ED2               	bcf	16338,7,c	;volatile
 11535                           
 11536                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11537  012A86  0E55               	movlw	85
 11538  012A88  6ED4               	movwf	212,c	;volatile
 11539                           
 11540                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11541  012A8A  0EAA               	movlw	170
 11542  012A8C  6ED4               	movwf	212,c	;volatile
 11543                           
 11544                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11545  012A8E  90D4               	bcf	212,0,c	;volatile
 11546                           
 11547                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11548  012A90  0138               	movlb	56	; () banked
 11549  012A92  6B9F               	clrf	159,b	;volatile
 11550                           
 11551                           ; BSR set to: 56
 11552                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11553  012A94  6B9E               	clrf	158,b	;volatile
 11554                           
 11555                           ; BSR set to: 56
 11556                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11557  012A96  0E08               	movlw	8
 11558  012A98  6F9D               	movwf	157,b	;volatile
 11559                           
 11560                           ; BSR set to: 56
 11561                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11562  012A9A  0E55               	movlw	85
 11563  012A9C  6ED4               	movwf	212,c	;volatile
 11564                           
 11565                           ; BSR set to: 56
 11566                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11567  012A9E  0EAA               	movlw	170
 11568  012AA0  6ED4               	movwf	212,c	;volatile
 11569                           
 11570                           ; BSR set to: 56
 11571                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11572  012AA2  80D4               	bsf	212,0,c	;volatile
 11573                           
 11574                           ; BSR set to: 56
 11575                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11576                           ;stkvar	_state @ sp[(-1)+0]
 11577  012AA4  0EFF               	movlw	-1
 11578  012AA6  B0E3               	btfsc	plusw1,0,c
 11579  012AA8  D002               	bra	u2835
 11580  012AAA  9ED2               	bcf	16338,7,c	;volatile
 11581  012AAC  D001               	bra	u2836
 11582  012AAE                     u2835:
 11583  012AAE  8ED2               	bsf	16338,7,c	;volatile
 11584  012AB0                     u2836:
 11585                           
 11586                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 11587  012AB0  0139               	movlb	57	; () banked
 11588  012AB2  8782               	bsf	130,3,b	;volatile
 11589                           
 11590                           ; BSR set to: 57
 11591                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 11592  012AB4  8382               	bsf	130,1,b	;volatile
 11593                           
 11594                           ; BSR set to: 57
 11595                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 11596  012AB6  8182               	bsf	130,0,b	;volatile
 11597                           
 11598                           ; BSR set to: 57
 11599                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 11600  012AB8  8582               	bsf	130,2,b	;volatile
 11601                           
 11602                           ; BSR set to: 57
 11603                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 11604  012ABA  8786               	bsf	134,3,b	;volatile
 11605                           
 11606                           ; BSR set to: 57
 11607                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 11608  012ABC  8586               	bsf	134,2,b	;volatile
 11609                           
 11610                           ; BSR set to: 57
 11611                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 11612  012ABE  8983               	bsf	131,4,b	;volatile
 11613                           
 11614                           ; BSR set to: 57
 11615                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 11616  012AC0  8783               	bsf	131,3,b	;volatile
 11617                           
 11618                           ; BSR set to: 57
 11619                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 11620  012AC2  8181               	bsf	129,0,b	;volatile
 11621                           
 11622                           ; BSR set to: 57
 11623                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 11624  012AC4  8185               	bsf	133,0,b	;volatile
 11625                           
 11626                           ; BSR set to: 57
 11627                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 11628  012AC6  8189               	bsf	137,0,b	;volatile
 11629                           
 11630                           ; BSR set to: 57
 11631                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 11632  012AC8  9D88               	bcf	136,6,b	;volatile
 11633                           
 11634                           ; BSR set to: 57
 11635                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 11636  012ACA  8581               	bsf	129,2,b	;volatile
 11637                           
 11638                           ; BSR set to: 57
 11639                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 11640  012ACC  52E5               	movf	postdec1,f,c
 11641  012ACE  0012               	return		;funcret
 11642  012AD0                     __end_of_INTERRUPT_Initialize:
 11643                           	opt callstack 0
 11644                           
 11645 ;; *************** function _FVR_Initialize *****************
 11646 ;; Defined at:
 11647 ;;		line 58 in file "mcc_generated_files/fvr.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;		None
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  1  [STACK] void 
 11654 ;; Registers used:
 11655 ;;		wreg, status,2
 11656 ;; Tracked objects:
 11657 ;;		On entry : 3F/39
 11658 ;;		On exit  : 3F/3E
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11665 ;;Total ram usage:        0 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:    6
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_SYSTEM_Initialize
 11672 ;; This function uses a reentrant model
 11673 ;;
 11674                           
 11675                           	psect	text72
 11676  0136FA                     __ptext72:
 11677                           	opt callstack 0
 11678  0136FA                     _FVR_Initialize:
 11679                           	opt callstack 23
 11680                           
 11681                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 11682                           
 11683                           ; BSR set to: 57
 11684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11685                           ;incstack = 0
 11686  0136FA  0EAF               	movlw	175
 11687  0136FC  013E               	movlb	62	; () banked
 11688  0136FE  6FC1               	movwf	193,b	;volatile
 11689                           
 11690                           ; BSR set to: 62
 11691                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11692  013700  0012               	return		;funcret
 11693  013702                     __end_of_FVR_Initialize:
 11694                           	opt callstack 0
 11695                           
 11696 ;; *************** function _EXT_INT_Initialize *****************
 11697 ;; Defined at:
 11698 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;		None
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1  [STACK] void 
 11705 ;; Registers used:
 11706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11707 ;; Tracked objects:
 11708 ;;		On entry : 3F/39
 11709 ;;		On exit  : 3F/39
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11716 ;;Total ram usage:        0 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    7
 11719 ;; This function calls:
 11720 ;;		_INT0_SetInterruptHandler
 11721 ;;		_INT1_SetInterruptHandler
 11722 ;; This function is called by:
 11723 ;;		_SYSTEM_Initialize
 11724 ;; This function uses a reentrant model
 11725 ;;
 11726                           
 11727                           	psect	text73
 11728  01302C                     __ptext73:
 11729                           	opt callstack 0
 11730  01302C                     _EXT_INT_Initialize:
 11731                           	opt callstack 22
 11732                           
 11733                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 11734                           
 11735                           ; BSR set to: 62
 11736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11737                           ;incstack = 0
 11738  01302C  0139               	movlb	57	; () banked
 11739  01302E  91A1               	bcf	161,0,b	;volatile
 11740                           
 11741                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 11742  013030  90D2               	bcf	210,0,c	;volatile
 11743                           
 11744                           ; BSR set to: 57
 11745                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 11746  013032  0E16               	movlw	low _INT0_DefaultInterruptHandler
 11747  013034  6EE6               	movwf	postinc1,c
 11748  013036  0E37               	movlw	high _INT0_DefaultInterruptHandler
 11749  013038  6EE6               	movwf	postinc1,c
 11750  01303A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 11751  01303C  6EE6               	movwf	postinc1,c
 11752  01303E  EC95  F099         	call	_INT0_SetInterruptHandler	;wreg free
 11753                           
 11754                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 11755  013042  0139               	movlb	57	; () banked
 11756  013044  8191               	bsf	145,0,b	;volatile
 11757                           
 11758                           ; BSR set to: 57
 11759                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 11760  013046  91A5               	bcf	165,0,b	;volatile
 11761                           
 11762                           ; BSR set to: 57
 11763                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 11764  013048  92D2               	bcf	210,1,c	;volatile
 11765                           
 11766                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 11767  01304A  0E18               	movlw	low _INT1_DefaultInterruptHandler
 11768  01304C  6EE6               	movwf	postinc1,c
 11769  01304E  0E37               	movlw	high _INT1_DefaultInterruptHandler
 11770  013050  6EE6               	movwf	postinc1,c
 11771  013052  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 11772  013054  6EE6               	movwf	postinc1,c
 11773  013056  EC81  F099         	call	_INT1_SetInterruptHandler	;wreg free
 11774                           
 11775                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 11776  01305A  0139               	movlb	57	; () banked
 11777  01305C  8195               	bsf	149,0,b	;volatile
 11778                           
 11779                           ; BSR set to: 57
 11780                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 11781  01305E  0012               	return		;funcret
 11782  013060                     __end_of_EXT_INT_Initialize:
 11783                           	opt callstack 0
 11784                           
 11785 ;; *************** function _INT1_SetInterruptHandler *****************
 11786 ;; Defined at:
 11787 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11790 ;;		 -> INT1_DefaultInterruptHandler(1), 
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;		None
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  1  [STACK] void 
 11795 ;; Registers used:
 11796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11797 ;; Tracked objects:
 11798 ;;		On entry : 3F/39
 11799 ;;		On exit  : 0/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11806 ;;Total ram usage:        0 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:    6
 11809 ;; This function calls:
 11810 ;;		Nothing
 11811 ;; This function is called by:
 11812 ;;		_EXT_INT_Initialize
 11813 ;; This function uses a reentrant model
 11814 ;;
 11815                           
 11816                           	psect	text74
 11817  013302                     __ptext74:
 11818                           	opt callstack 0
 11819  013302                     _INT1_SetInterruptHandler:
 11820                           	opt callstack 22
 11821                           
 11822                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 11823                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11824                           
 11825                           ; BSR set to: 57
 11826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11827                           ;incstack = 0
 11828  013302  50E1               	movf	fsr1l,w,c
 11829  013304  0FFD               	addlw	-3
 11830  013306  6ED9               	movwf	fsr2l,c
 11831  013308  50E2               	movf	fsr1h,w,c
 11832  01330A  6EDA               	movwf	fsr2h,c
 11833  01330C  0EFF               	movlw	255
 11834  01330E  22DA               	addwfc	fsr2h,f,c
 11835  013310  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 11836  013316  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 11837  01331C  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 11838                           
 11839                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11840  013322  52E5               	movf	postdec1,f,c
 11841  013324  52E5               	movf	postdec1,f,c
 11842  013326  52E5               	movf	postdec1,f,c
 11843  013328  0012               	return		;funcret
 11844  01332A                     __end_of_INT1_SetInterruptHandler:
 11845                           	opt callstack 0
 11846                           
 11847 ;; *************** function _INT0_SetInterruptHandler *****************
 11848 ;; Defined at:
 11849 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11852 ;;		 -> INT0_DefaultInterruptHandler(1), 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;		None
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  1  [STACK] void 
 11857 ;; Registers used:
 11858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11859 ;; Tracked objects:
 11860 ;;		On entry : 3F/39
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11868 ;;Total ram usage:        0 bytes
 11869 ;; Hardware stack levels used:    1
 11870 ;; Hardware stack levels required when called:    6
 11871 ;; This function calls:
 11872 ;;		Nothing
 11873 ;; This function is called by:
 11874 ;;		_EXT_INT_Initialize
 11875 ;; This function uses a reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text75
 11879  01332A                     __ptext75:
 11880                           	opt callstack 0
 11881  01332A                     _INT0_SetInterruptHandler:
 11882                           	opt callstack 22
 11883                           
 11884                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 11885                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11886                           
 11887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11888                           ;incstack = 0
 11889  01332A  50E1               	movf	fsr1l,w,c
 11890  01332C  0FFD               	addlw	-3
 11891  01332E  6ED9               	movwf	fsr2l,c
 11892  013330  50E2               	movf	fsr1h,w,c
 11893  013332  6EDA               	movwf	fsr2h,c
 11894  013334  0EFF               	movlw	255
 11895  013336  22DA               	addwfc	fsr2h,f,c
 11896  013338  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 11897  01333E  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 11898  013344  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 11899                           
 11900                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11901  01334A  52E5               	movf	postdec1,f,c
 11902  01334C  52E5               	movf	postdec1,f,c
 11903  01334E  52E5               	movf	postdec1,f,c
 11904  013350  0012               	return		;funcret
 11905  013352                     __end_of_INT0_SetInterruptHandler:
 11906                           	opt callstack 0
 11907                           
 11908 ;; *************** function _DMA2_Initialize *****************
 11909 ;; Defined at:
 11910 ;;		line 61 in file "mcc_generated_files/dma2.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;		None
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;		None
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1  [STACK] void 
 11917 ;; Registers used:
 11918 ;;		wreg, status,2
 11919 ;; Tracked objects:
 11920 ;;		On entry : 3F/3D
 11921 ;;		On exit  : 3F/3B
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11928 ;;Total ram usage:        0 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:    6
 11931 ;; This function calls:
 11932 ;;		Nothing
 11933 ;; This function is called by:
 11934 ;;		_SYSTEM_Initialize
 11935 ;; This function uses a reentrant model
 11936 ;;
 11937                           
 11938                           	psect	text76
 11939  012B90                     __ptext76:
 11940                           	opt callstack 0
 11941  012B90                     _DMA2_Initialize:
 11942                           	opt callstack 23
 11943                           
 11944                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 11945                           
 11946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11947                           ;incstack = 0
 11948  012B90  0E00               	movlw	0
 11949  012B92  013B               	movlb	59	; () banked
 11950  012B94  6FD9               	movwf	217,b	;volatile
 11951  012B96  0E10               	movlw	16
 11952  012B98  6FDA               	movwf	218,b	;volatile
 11953  012B9A  0E00               	movlw	0
 11954  012B9C  6FDB               	movwf	219,b	;volatile
 11955                           
 11956                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 11957  012B9E  0E3F               	movlw	63
 11958  012BA0  6FD1               	movwf	209,b	;volatile
 11959  012BA2  0EBB               	movlw	187
 11960  012BA4  6FD0               	movwf	208,b	;volatile
 11961                           
 11962                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 11963  012BA6  0E03               	movlw	3
 11964  012BA8  6FDD               	movwf	221,b	;volatile
 11965                           
 11966                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 11967  012BAA  0E00               	movlw	0
 11968  012BAC  6FD8               	movwf	216,b	;volatile
 11969  012BAE  0E01               	movlw	1
 11970  012BB0  6FD7               	movwf	215,b	;volatile
 11971                           
 11972                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 11973  012BB2  0E00               	movlw	0
 11974  012BB4  6FCF               	movwf	207,b	;volatile
 11975  012BB6  0E01               	movlw	1
 11976  012BB8  6FCE               	movwf	206,b	;volatile
 11977                           
 11978                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 11979  012BBA  0E46               	movlw	70
 11980  012BBC  6FDF               	movwf	223,b	;volatile
 11981                           
 11982                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 11983  012BBE  0E3D               	movlw	61
 11984  012BC0  6FDE               	movwf	222,b	;volatile
 11985                           
 11986                           ; BSR set to: 59
 11987                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 11988  012BC2  0139               	movlb	57	; () banked
 11989  012BC4  97A5               	bcf	165,3,b	;volatile
 11990                           
 11991                           ; BSR set to: 57
 11992                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 11993  012BC6  95A5               	bcf	165,2,b	;volatile
 11994                           
 11995                           ; BSR set to: 57
 11996                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 11997  012BC8  9BA5               	bcf	165,5,b	;volatile
 11998                           
 11999                           ; BSR set to: 57
 12000                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 12001  012BCA  99A5               	bcf	165,4,b	;volatile
 12002                           
 12003                           ; BSR set to: 57
 12004                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 12005  012BCC  9795               	bcf	149,3,b	;volatile
 12006                           
 12007                           ; BSR set to: 57
 12008                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 12009  012BCE  9595               	bcf	149,2,b	;volatile
 12010                           
 12011                           ; BSR set to: 57
 12012                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 12013  012BD0  9B95               	bcf	149,5,b	;volatile
 12014                           
 12015                           ; BSR set to: 57
 12016                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 12017  012BD2  9995               	bcf	149,4,b	;volatile
 12018  012BD4  9ED2               	bcf	16338,7,c	;# 
 12019  012BD6  0139               	banksel	14831	;# 
 12020  012BD8  0E55               	movlw	85	;# 
 12021  012BDA  6FEF               	movwf	14831,b	;# 
 12022  012BDC  0EAA               	movlw	170	;# 
 12023  012BDE  6FEF               	movwf	14831,b	;# 
 12024  012BE0  81EF               	bsf	14831,0,b	;# 
 12025  012BE2  8ED2               	bsf	16338,7,c	;# 
 12026                           
 12027                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 12028  012BE4  013B               	movlb	59	; () banked
 12029  012BE6  6BDC               	clrf	220,b	;volatile
 12030                           
 12031                           ; BSR set to: 59
 12032                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12033  012BE8  0012               	return		;funcret
 12034  012BEA                     __end_of_DMA2_Initialize:
 12035                           	opt callstack 0
 12036                           
 12037 ;; *************** function _DMA1_Initialize *****************
 12038 ;; Defined at:
 12039 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12040 ;; Parameters:    Size  Location     Type
 12041 ;;		None
 12042 ;; Auto vars:     Size  Location     Type
 12043 ;;		None
 12044 ;; Return value:  Size  Location     Type
 12045 ;;                  1  [STACK] void 
 12046 ;; Registers used:
 12047 ;;		wreg, status,2
 12048 ;; Tracked objects:
 12049 ;;		On entry : 3F/3B
 12050 ;;		On exit  : 3F/3B
 12051 ;;		Unchanged: 0/0
 12052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12057 ;;Total ram usage:        0 bytes
 12058 ;; Hardware stack levels used:    1
 12059 ;; Hardware stack levels required when called:    6
 12060 ;; This function calls:
 12061 ;;		Nothing
 12062 ;; This function is called by:
 12063 ;;		_SYSTEM_Initialize
 12064 ;; This function uses a reentrant model
 12065 ;;
 12066                           
 12067                           	psect	text77
 12068  01299E                     __ptext77:
 12069                           	opt callstack 0
 12070  01299E                     _DMA1_Initialize:
 12071                           	opt callstack 23
 12072                           
 12073                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12074                           
 12075                           ; BSR set to: 59
 12076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12077                           ;incstack = 0
 12078  01299E  0E00               	movlw	0
 12079  0129A0  013B               	movlb	59	; () banked
 12080  0129A2  6FF9               	movwf	249,b	;volatile
 12081  0129A4  0E10               	movlw	16
 12082  0129A6  6FFA               	movwf	250,b	;volatile
 12083  0129A8  0E00               	movlw	0
 12084  0129AA  6FFB               	movwf	251,b	;volatile
 12085                           
 12086                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12087  0129AC  0E3D               	movlw	61
 12088  0129AE  6FF1               	movwf	241,b	;volatile
 12089  0129B0  0E11               	movlw	17
 12090  0129B2  6FF0               	movwf	240,b	;volatile
 12091                           
 12092                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12093  0129B4  0E03               	movlw	3
 12094  0129B6  6FFD               	movwf	253,b	;volatile
 12095                           
 12096                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12097  0129B8  0E00               	movlw	0
 12098  0129BA  6FF8               	movwf	248,b	;volatile
 12099  0129BC  0E01               	movlw	1
 12100  0129BE  6FF7               	movwf	247,b	;volatile
 12101                           
 12102                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12103  0129C0  0E00               	movlw	0
 12104  0129C2  6FEF               	movwf	239,b	;volatile
 12105  0129C4  0E01               	movlw	1
 12106  0129C6  6FEE               	movwf	238,b	;volatile
 12107                           
 12108                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12109  0129C8  0E15               	movlw	21
 12110  0129CA  6FFF               	movwf	255,b	;volatile
 12111                           
 12112                           ; BSR set to: 59
 12113                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12114  0129CC  6BFE               	clrf	254,b	;volatile
 12115                           
 12116                           ; BSR set to: 59
 12117                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12118  0129CE  0139               	movlb	57	; () banked
 12119  0129D0  93A2               	bcf	162,1,b	;volatile
 12120                           
 12121                           ; BSR set to: 57
 12122                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12123  0129D2  91A2               	bcf	162,0,b	;volatile
 12124                           
 12125                           ; BSR set to: 57
 12126                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12127  0129D4  97A2               	bcf	162,3,b	;volatile
 12128                           
 12129                           ; BSR set to: 57
 12130                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12131  0129D6  95A2               	bcf	162,2,b	;volatile
 12132                           
 12133                           ; BSR set to: 57
 12134                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12135  0129D8  8392               	bsf	146,1,b	;volatile
 12136                           
 12137                           ; BSR set to: 57
 12138                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12139  0129DA  8192               	bsf	146,0,b	;volatile
 12140                           
 12141                           ; BSR set to: 57
 12142                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12143  0129DC  8792               	bsf	146,3,b	;volatile
 12144                           
 12145                           ; BSR set to: 57
 12146                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12147  0129DE  8592               	bsf	146,2,b	;volatile
 12148                           
 12149                           ; BSR set to: 57
 12150                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12151  0129E0  6BF1               	clrf	241,b	;volatile
 12152                           
 12153                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12154  0129E2  0E01               	movlw	1
 12155  0129E4  6FF2               	movwf	242,b	;volatile
 12156                           
 12157                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12158  0129E6  0E04               	movlw	4
 12159  0129E8  6FF3               	movwf	243,b	;volatile
 12160                           
 12161                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12162  0129EA  0E02               	movlw	2
 12163  0129EC  6FF4               	movwf	244,b	;volatile
 12164                           
 12165                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12166  0129EE  0E03               	movlw	3
 12167  0129F0  6FF7               	movwf	247,b	;volatile
 12168  0129F2  9ED2               	bcf	16338,7,c	;# 
 12169  0129F4  0139               	banksel	14831	;# 
 12170  0129F6  0E55               	movlw	85	;# 
 12171  0129F8  6FEF               	movwf	14831,b	;# 
 12172  0129FA  0EAA               	movlw	170	;# 
 12173  0129FC  6FEF               	movwf	14831,b	;# 
 12174  0129FE  81EF               	bsf	14831,0,b	;# 
 12175  012A00  8ED2               	bsf	16338,7,c	;# 
 12176                           
 12177                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12178  012A02  013B               	movlb	59	; () banked
 12179  012A04  6BFC               	clrf	252,b	;volatile
 12180                           
 12181                           ; BSR set to: 59
 12182                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12183  012A06  0012               	return		;funcret
 12184  012A08                     __end_of_DMA1_Initialize:
 12185                           	opt callstack 0
 12186                           
 12187 ;; *************** function _CLKREF_Initialize *****************
 12188 ;; Defined at:
 12189 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;		None
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;		None
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1  [STACK] void 
 12196 ;; Registers used:
 12197 ;;		wreg, status,2
 12198 ;; Tracked objects:
 12199 ;;		On entry : 3F/3B
 12200 ;;		On exit  : 3F/3C
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12207 ;;Total ram usage:        0 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; Hardware stack levels required when called:    6
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		_SYSTEM_Initialize
 12214 ;; This function uses a reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text78
 12218  0136BE                     __ptext78:
 12219                           	opt callstack 0
 12220  0136BE                     _CLKREF_Initialize:
 12221                           	opt callstack 23
 12222                           
 12223                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12224                           
 12225                           ; BSR set to: 59
 12226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12227                           ;incstack = 0
 12228  0136BE  013C               	movlb	60	; () banked
 12229  0136C0  6BE6               	clrf	230,b	;volatile
 12230                           
 12231                           ; BSR set to: 60
 12232                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12233  0136C2  0E94               	movlw	148
 12234  0136C4  6FE5               	movwf	229,b	;volatile
 12235                           
 12236                           ; BSR set to: 60
 12237                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12238  0136C6  0012               	return		;funcret
 12239  0136C8                     __end_of_CLKREF_Initialize:
 12240                           	opt callstack 0
 12241                           
 12242 ;; *************** function _ADCC_Initialize *****************
 12243 ;; Defined at:
 12244 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1  [STACK] void 
 12251 ;; Registers used:
 12252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12253 ;; Tracked objects:
 12254 ;;		On entry : 3F/3E
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12262 ;;Total ram usage:        0 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    7
 12265 ;; This function calls:
 12266 ;;		_ADCC_SetADIInterruptHandler
 12267 ;; This function is called by:
 12268 ;;		_SYSTEM_Initialize
 12269 ;; This function uses a reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text79
 12273  012CF0                     __ptext79:
 12274                           	opt callstack 0
 12275  012CF0                     _ADCC_Initialize:
 12276                           	opt callstack 22
 12277                           
 12278                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12279                           
 12280                           ; BSR set to: 60
 12281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12282                           ;incstack = 0
 12283  012CF0  013E               	movlb	62	; () banked
 12284  012CF2  6BDE               	clrf	222,b	;volatile
 12285                           
 12286                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12287  012CF4  6BDF               	clrf	223,b	;volatile
 12288                           
 12289                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12290  012CF6  6BE0               	clrf	224,b	;volatile
 12291                           
 12292                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12293  012CF8  6BE1               	clrf	225,b	;volatile
 12294                           
 12295                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12296  012CFA  6BE4               	clrf	228,b	;volatile
 12297                           
 12298                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12299  012CFC  6BE5               	clrf	229,b	;volatile
 12300                           
 12301                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12302  012CFE  6BEA               	clrf	234,b	;volatile
 12303                           
 12304                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12305  012D00  6BEC               	clrf	236,b	;volatile
 12306                           
 12307                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12308  012D02  6BF1               	clrf	241,b	;volatile
 12309                           
 12310                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12311  012D04  6BF3               	clrf	243,b	;volatile
 12312                           
 12313                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12314  012D06  6BF4               	clrf	244,b	;volatile
 12315                           
 12316                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12317  012D08  6BF5               	clrf	245,b	;volatile
 12318                           
 12319                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12320  012D0A  6BF6               	clrf	246,b	;volatile
 12321                           
 12322                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12323  012D0C  6BF7               	clrf	247,b	;volatile
 12324                           
 12325                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12326  012D0E  6BF9               	clrf	249,b	;volatile
 12327                           
 12328                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12329  012D10  6BFA               	clrf	250,b	;volatile
 12330                           
 12331                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12332  012D12  6BFB               	clrf	251,b	;volatile
 12333                           
 12334                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12335  012D14  6BFC               	clrf	252,b	;volatile
 12336                           
 12337                           ; BSR set to: 62
 12338                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12339  012D16  0E02               	movlw	2
 12340  012D18  6FFD               	movwf	253,b	;volatile
 12341                           
 12342                           ; BSR set to: 62
 12343                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12344  012D1A  6BFE               	clrf	254,b	;volatile
 12345                           
 12346                           ; BSR set to: 62
 12347                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12348  012D1C  6BFF               	clrf	255,b	;volatile
 12349                           
 12350                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12351  012D1E  0E94               	movlw	148
 12352  012D20  6FF8               	movwf	248,b	;volatile
 12353                           
 12354                           ; BSR set to: 62
 12355                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12356  012D22  0139               	movlb	57	; () banked
 12357  012D24  95A1               	bcf	161,2,b	;volatile
 12358                           
 12359                           ; BSR set to: 57
 12360                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12361  012D26  8591               	bsf	145,2,b	;volatile
 12362                           
 12363                           ; BSR set to: 57
 12364                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12365  012D28  0E1A               	movlw	low _ADCC_DefaultInterruptHandler
 12366  012D2A  6EE6               	movwf	postinc1,c
 12367  012D2C  0E37               	movlw	high _ADCC_DefaultInterruptHandler
 12368  012D2E  6EE6               	movwf	postinc1,c
 12369  012D30  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12370  012D32  6EE6               	movwf	postinc1,c
 12371  012D34  ECA9  F099         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12372                           
 12373                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12374  012D38  0012               	return		;funcret
 12375  012D3A                     __end_of_ADCC_Initialize:
 12376                           	opt callstack 0
 12377                           
 12378 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12379 ;; Defined at:
 12380 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12381 ;; Parameters:    Size  Location     Type
 12382 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12383 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12384 ;; Auto vars:     Size  Location     Type
 12385 ;;		None
 12386 ;; Return value:  Size  Location     Type
 12387 ;;                  1  [STACK] void 
 12388 ;; Registers used:
 12389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12390 ;; Tracked objects:
 12391 ;;		On entry : 3F/39
 12392 ;;		On exit  : 0/0
 12393 ;;		Unchanged: 0/0
 12394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12399 ;;Total ram usage:        0 bytes
 12400 ;; Hardware stack levels used:    1
 12401 ;; Hardware stack levels required when called:    6
 12402 ;; This function calls:
 12403 ;;		Nothing
 12404 ;; This function is called by:
 12405 ;;		_ADCC_Initialize
 12406 ;; This function uses a reentrant model
 12407 ;;
 12408                           
 12409                           	psect	text80
 12410  013352                     __ptext80:
 12411                           	opt callstack 0
 12412  013352                     _ADCC_SetADIInterruptHandler:
 12413                           	opt callstack 22
 12414                           
 12415                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12416                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12417                           
 12418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12419                           ;incstack = 0
 12420  013352  50E1               	movf	fsr1l,w,c
 12421  013354  0FFD               	addlw	-3
 12422  013356  6ED9               	movwf	fsr2l,c
 12423  013358  50E2               	movf	fsr1h,w,c
 12424  01335A  6EDA               	movwf	fsr2h,c
 12425  01335C  0EFF               	movlw	255
 12426  01335E  22DA               	addwfc	fsr2h,f,c
 12427  013360  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12428  013366  006F FF78  F00C    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12429  01336C  006F FF74  F00D    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12430                           
 12431                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12432  013372  52E5               	movf	postdec1,f,c
 12433  013374  52E5               	movf	postdec1,f,c
 12434  013376  52E5               	movf	postdec1,f,c
 12435  013378  0012               	return		;funcret
 12436  01337A                     __end_of_ADCC_SetADIInterruptHandler:
 12437                           	opt callstack 0
 12438                           
 12439 ;; *************** function _TMR5_ISR *****************
 12440 ;; Defined at:
 12441 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;		None
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;		None
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1    wreg      void 
 12448 ;; Registers used:
 12449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12457 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12458 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;Total ram usage:        4 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; Hardware stack levels required when called:    5
 12462 ;; This function calls:
 12463 ;;		_TMR5_CallBack
 12464 ;;		_TMR5_WriteTimer
 12465 ;; This function is called by:
 12466 ;;		Interrupt level 1
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text81
 12471  012BEC                     __ptext81:
 12472                           	opt callstack 0
 12473  012BEC                     _TMR5_ISR:
 12474                           	opt callstack 12
 12475                           
 12476                           ;incstack = 0
 12477  012BEC  006F FF60  F05C    	movff	status,??_TMR5_ISR+2
 12478  012BF2  0060  F110  F05D   	movff	btemp+11,??_TMR5_ISR+3
 12479  012BF8  EE15  F355         	lfsr	1,___intlo_sp
 12480                           
 12481                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 12482  012BFC  0139               	movlb	57	; () banked
 12483  012BFE  9DA8               	bcf	168,6,b	;volatile
 12484                           
 12485                           ; BSR set to: 57
 12486                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 12487  012C00  0060  F0AB  FFE6   	movff	_timer5ReloadVal,postinc1
 12488  012C06  0060  F0AF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 12489  012C0C  EC6C  F097         	call	_TMR5_WriteTimer	;wreg free
 12490                           
 12491                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 12492  012C10  0101               	movlb	1	; () banked
 12493  012C12  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 12494  012C14  6E5A               	movwf	??_TMR5_ISR^0,c
 12495  012C16  6A5B               	clrf	(??_TMR5_ISR+1)^0,c
 12496  012C18  0E05               	movlw	5
 12497  012C1A  265A               	addwf	??_TMR5_ISR^0,f,c
 12498  012C1C  0E00               	movlw	0
 12499  012C1E  225B               	addwfc	(??_TMR5_ISR+1)^0,f,c
 12500  012C20  4A28               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 12501  012C22  2A29               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 12502  012C24  505A               	movf	??_TMR5_ISR^0,w,c
 12503  012C26  5C28               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 12504  012C28  505B               	movf	(??_TMR5_ISR+1)^0,w,c
 12505  012C2A  5829               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 12506  012C2C  A0D8               	btfss	status,0,c
 12507  012C2E  D004               	goto	i1l1040
 12508                           
 12509                           ; BSR set to: 1
 12510                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 12511  012C30  EC1F  F09A         	call	_TMR5_CallBack	;wreg free
 12512                           
 12513                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 12514  012C34  6A28               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 12515  012C36  6A29               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 12516  012C38                     i1l1040:
 12517  012C38  0060  F174  F044   	movff	??_TMR5_ISR+3,btemp+11
 12518  012C3E  0060  F173  FFD8   	movff	??_TMR5_ISR+2,status
 12519  012C44  0011               	retfie		f
 12520  012C46                     __end_of_TMR5_ISR:
 12521                           	opt callstack 0
 12522                           
 12523 ;; *************** function _TMR5_WriteTimer *****************
 12524 ;; Defined at:
 12525 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;  timerVal        2  [STACK] unsigned short 
 12528 ;; Auto vars:     Size  Location     Type
 12529 ;;		None
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  1  [STACK] void 
 12532 ;; Registers used:
 12533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12534 ;; Tracked objects:
 12535 ;;		On entry : 3F/39
 12536 ;;		On exit  : 0/0
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12543 ;;Total ram usage:        0 bytes
 12544 ;; Hardware stack levels used:    1
 12545 ;; Hardware stack levels required when called:    3
 12546 ;; This function calls:
 12547 ;;		Nothing
 12548 ;; This function is called by:
 12549 ;;		_TMR5_ISR
 12550 ;; This function uses a reentrant model
 12551 ;;
 12552                           
 12553                           	psect	text82
 12554  012ED8                     __ptext82:
 12555                           	opt callstack 0
 12556  012ED8                     _TMR5_WriteTimer:
 12557                           	opt callstack 13
 12558                           
 12559                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 12560                           
 12561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12562                           ;incstack = 0
 12563  012ED8  A49A               	btfss	154,2,c	;volatile
 12564  012EDA  D00F               	goto	l5212
 12565                           
 12566                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 12567  012EDC  909A               	bcf	154,0,c	;volatile
 12568                           
 12569                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 12570                           ;stkvar	_timerVal @ sp[(0)+-2]
 12571  012EDE  0EFF               	movlw	255
 12572  012EE0  24E1               	addwf	fsr1l,w,c
 12573  012EE2  6ED9               	movwf	fsr2l,c
 12574  012EE4  0EFF               	movlw	255
 12575  012EE6  20E2               	addwfc	fsr1h,w,c
 12576  012EE8  6EDA               	movwf	fsr2h,c
 12577  012EEA  50DF               	movf	indf2,w,c
 12578  012EEC  6E99               	movwf	153,c	;volatile
 12579                           
 12580                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 12581                           ;stkvar	_timerVal @ sp[(0)+-2]
 12582  012EEE  0EFE               	movlw	-2
 12583  012EF0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 12584                           
 12585                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 12586  012EF6  809A               	bsf	154,0,c	;volatile
 12587                           
 12588                           ;mcc_generated_files/tmr5.c: 142:  } else {
 12589  012EF8  D00C               	goto	l1023
 12590  012EFA                     l5212:
 12591                           
 12592                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 12593                           ;stkvar	_timerVal @ sp[(0)+-2]
 12594  012EFA  0EFF               	movlw	255
 12595  012EFC  24E1               	addwf	fsr1l,w,c
 12596  012EFE  6ED9               	movwf	fsr2l,c
 12597  012F00  0EFF               	movlw	255
 12598  012F02  20E2               	addwfc	fsr1h,w,c
 12599  012F04  6EDA               	movwf	fsr2h,c
 12600  012F06  50DF               	movf	indf2,w,c
 12601  012F08  6E99               	movwf	153,c	;volatile
 12602                           
 12603                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 12604                           ;stkvar	_timerVal @ sp[(0)+-2]
 12605  012F0A  0EFE               	movlw	-2
 12606  012F0C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 12607  012F12                     l1023:
 12608                           
 12609                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 12610  012F12  52E5               	movf	postdec1,f,c
 12611  012F14  52E5               	movf	postdec1,f,c
 12612  012F16  0012               	return		;funcret
 12613  012F18                     __end_of_TMR5_WriteTimer:
 12614                           	opt callstack 0
 12615                           
 12616 ;; *************** function _TMR5_CallBack *****************
 12617 ;; Defined at:
 12618 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;		None
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;		None
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1  [STACK] void 
 12625 ;; Registers used:
 12626 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 12627 ;; Tracked objects:
 12628 ;;		On entry : 3F/1
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12636 ;;Total ram usage:        0 bytes
 12637 ;; Hardware stack levels used:    1
 12638 ;; Hardware stack levels required when called:    4
 12639 ;; This function calls:
 12640 ;;		Absolute function
 12641 ;;		_TMR5_DefaultInterruptHandler
 12642 ;; This function is called by:
 12643 ;;		_TMR5_ISR
 12644 ;; This function uses a reentrant model
 12645 ;;
 12646                           
 12647                           	psect	text83
 12648  01343E                     __ptext83:
 12649                           	opt callstack 0
 12650  01343E                     _TMR5_CallBack:
 12651                           	opt callstack 12
 12652                           
 12653                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 12654                           
 12655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12656                           ;incstack = 0
 12657  01343E  5005               	movf	_TMR5_InterruptHandler^0,w,c
 12658  013440  1006               	iorwf	(_TMR5_InterruptHandler+1)^0,w,c
 12659  013442  1007               	iorwf	(_TMR5_InterruptHandler+2)^0,w,c
 12660  013444  B4D8               	btfsc	status,2,c
 12661  013446  0012               	return	
 12662                           
 12663                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 12664  013448  D801               	call	u304_28
 12665  01344A  0012               	return	
 12666  01344C                     u304_28:
 12667  01344C  0005               	push	
 12668  01344E  6EFA               	movwf	pclath,c
 12669  013450  5005               	movf	_TMR5_InterruptHandler^0,w,c
 12670  013452  6EFD               	movwf	tosl,c
 12671  013454  5006               	movf	(_TMR5_InterruptHandler+1)^0,w,c
 12672  013456  6EFE               	movwf	tosh,c
 12673  013458  5007               	movf	(_TMR5_InterruptHandler+2)^0,w,c
 12674  01345A  6EFF               	movwf	tosu,c
 12675  01345C  50FA               	movf	pclath,w,c
 12676  01345E  0012               	return		;indir
 12677  013460                     __end_of_TMR5_CallBack:
 12678                           	opt callstack 0
 12679                           
 12680 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 12681 ;; Defined at:
 12682 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;		None
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;		None
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1  [STACK] void 
 12689 ;; Registers used:
 12690 ;;		wreg, status,2, status,0, btemp+11
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/1
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12700 ;;Total ram usage:        0 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:    3
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_TMR5_Initialize
 12707 ;;		_TMR5_CallBack
 12708 ;; This function uses a reentrant model
 12709 ;;
 12710                           
 12711                           	psect	text84
 12712  0135AA                     __ptext84:
 12713                           	opt callstack 0
 12714  0135AA                     _TMR5_DefaultInterruptHandler:
 12715                           	opt callstack 12
 12716                           
 12717                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 12718                           
 12719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12720                           ;incstack = 0
 12721  0135AA  A0BE               	btfss	190,0,c	;volatile
 12722  0135AC  D002               	goto	u287_20
 12723  0135AE  0E01               	movlw	1
 12724  0135B0  D001               	goto	u287_26
 12725  0135B2                     u287_20:
 12726  0135B2  0E00               	movlw	0
 12727  0135B4                     u287_26:
 12728  0135B4  0AFF               	xorlw	255
 12729  0135B6  6E44               	movwf	(btemp+11)^0,c
 12730  0135B8  50BE               	movf	190,w,c	;volatile
 12731  0135BA  1844               	xorwf	(btemp+11)^0,w,c
 12732  0135BC  0BFE               	andlw	-2
 12733  0135BE  1844               	xorwf	(btemp+11)^0,w,c
 12734  0135C0  6EBE               	movwf	190,c	;volatile
 12735                           
 12736                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 12737  0135C2  0012               	return		;funcret
 12738  0135C4                     __end_of_TMR5_DefaultInterruptHandler:
 12739                           	opt callstack 0
 12740                           
 12741 ;; *************** function _INT0_ISR *****************
 12742 ;; Defined at:
 12743 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, status,2, status,0, pclath, tosl
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12761 ;;Total ram usage:        0 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    2
 12764 ;; This function calls:
 12765 ;;		_INT0_CallBack
 12766 ;; This function is called by:
 12767 ;;		Interrupt level 2
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text85
 12772  0136A0                     __ptext85:
 12773                           	opt callstack 0
 12774  0136A0                     _INT0_ISR:
 12775                           	opt callstack 12
 12776                           
 12777                           ;incstack = 0
 12778  0136A0  EE13  F2AA         	lfsr	1,___inthi_sp
 12779                           
 12780                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 12781  0136A4  0139               	movlb	57	; () banked
 12782  0136A6  91A1               	bcf	161,0,b	;volatile
 12783                           
 12784                           ; BSR set to: 57
 12785                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 12786  0136A8  EC30  F09A         	call	_INT0_CallBack	;wreg free
 12787  0136AC  0011               	retfie		f
 12788  0136AE                     __end_of_INT0_ISR:
 12789                           	opt callstack 0
 12790                           
 12791 ;; *************** function _INT0_CallBack *****************
 12792 ;; Defined at:
 12793 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;		None
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;		None
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1  [STACK] void 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, pclath, tosl
 12802 ;; Tracked objects:
 12803 ;;		On entry : 3F/39
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12811 ;;Total ram usage:        0 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:    1
 12814 ;; This function calls:
 12815 ;;		Absolute function
 12816 ;;		_INT0_DefaultInterruptHandler
 12817 ;; This function is called by:
 12818 ;;		_INT0_ISR
 12819 ;; This function uses a reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text86
 12823  013460                     __ptext86:
 12824                           	opt callstack 0
 12825  013460                     _INT0_CallBack:
 12826                           	opt callstack 12
 12827                           
 12828                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 12829                           
 12830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12831                           ;incstack = 0
 12832  013460  501D               	movf	_INT0_InterruptHandler^0,w,c
 12833  013462  101E               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 12834  013464  101F               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 12835  013466  B4D8               	btfsc	status,2,c
 12836  013468  0012               	return	
 12837                           
 12838                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 12839  01346A  D801               	call	u128_48
 12840  01346C  0012               	return	
 12841  01346E                     u128_48:
 12842  01346E  0005               	push	
 12843  013470  6EFA               	movwf	pclath,c
 12844  013472  501D               	movf	_INT0_InterruptHandler^0,w,c
 12845  013474  6EFD               	movwf	tosl,c
 12846  013476  501E               	movf	(_INT0_InterruptHandler+1)^0,w,c
 12847  013478  6EFE               	movwf	tosh,c
 12848  01347A  501F               	movf	(_INT0_InterruptHandler+2)^0,w,c
 12849  01347C  6EFF               	movwf	tosu,c
 12850  01347E  50FA               	movf	pclath,w,c
 12851  013480  0012               	return		;indir
 12852  013482                     __end_of_INT0_CallBack:
 12853                           	opt callstack 0
 12854                           
 12855 ;; *************** function _INT0_DefaultInterruptHandler *****************
 12856 ;; Defined at:
 12857 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 12858 ;; Parameters:    Size  Location     Type
 12859 ;;		None
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;		None
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  1  [STACK] void 
 12864 ;; Registers used:
 12865 ;;		None
 12866 ;; Tracked objects:
 12867 ;;		On entry : 0/39
 12868 ;;		On exit  : 0/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12875 ;;Total ram usage:        0 bytes
 12876 ;; Hardware stack levels used:    1
 12877 ;; This function calls:
 12878 ;;		Nothing
 12879 ;; This function is called by:
 12880 ;;		_EXT_INT_Initialize
 12881 ;;		_INT0_CallBack
 12882 ;; This function uses a reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text87
 12886  013716                     __ptext87:
 12887                           	opt callstack 0
 12888  013716                     _INT0_DefaultInterruptHandler:
 12889                           	opt callstack 12
 12890                           
 12891                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 12892                           
 12893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12894                           ;incstack = 0
 12895  013716  0012               	return		;funcret
 12896  013718                     __end_of_INT0_DefaultInterruptHandler:
 12897                           	opt callstack 0
 12898                           
 12899 ;; *************** function _INT1_ISR *****************
 12900 ;; Defined at:
 12901 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, status,2, status,0, pclath, tosl
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12919 ;;Total ram usage:        0 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    2
 12922 ;; This function calls:
 12923 ;;		_INT1_CallBack
 12924 ;; This function is called by:
 12925 ;;		Interrupt level 2
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text88
 12930  0136B0                     __ptext88:
 12931                           	opt callstack 0
 12932  0136B0                     _INT1_ISR:
 12933                           	opt callstack 12
 12934                           
 12935                           ;incstack = 0
 12936  0136B0  EE13  F2AA         	lfsr	1,___inthi_sp
 12937                           
 12938                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 12939  0136B4  0139               	movlb	57	; () banked
 12940  0136B6  91A5               	bcf	165,0,b	;volatile
 12941                           
 12942                           ; BSR set to: 57
 12943                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 12944  0136B8  EC41  F09A         	call	_INT1_CallBack	;wreg free
 12945  0136BC  0011               	retfie		f
 12946  0136BE                     __end_of_INT1_ISR:
 12947                           	opt callstack 0
 12948                           
 12949 ;; *************** function _INT1_CallBack *****************
 12950 ;; Defined at:
 12951 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;		None
 12954 ;; Auto vars:     Size  Location     Type
 12955 ;;		None
 12956 ;; Return value:  Size  Location     Type
 12957 ;;                  1  [STACK] void 
 12958 ;; Registers used:
 12959 ;;		wreg, status,2, status,0, pclath, tosl
 12960 ;; Tracked objects:
 12961 ;;		On entry : 3F/39
 12962 ;;		On exit  : 0/0
 12963 ;;		Unchanged: 0/0
 12964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12969 ;;Total ram usage:        0 bytes
 12970 ;; Hardware stack levels used:    1
 12971 ;; Hardware stack levels required when called:    1
 12972 ;; This function calls:
 12973 ;;		Absolute function
 12974 ;;		_INT1_DefaultInterruptHandler
 12975 ;; This function is called by:
 12976 ;;		_INT1_ISR
 12977 ;; This function uses a reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text89
 12981  013482                     __ptext89:
 12982                           	opt callstack 0
 12983  013482                     _INT1_CallBack:
 12984                           	opt callstack 12
 12985                           
 12986                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 12987                           
 12988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12989                           ;incstack = 0
 12990  013482  501A               	movf	_INT1_InterruptHandler^0,w,c
 12991  013484  101B               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 12992  013486  101C               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 12993  013488  B4D8               	btfsc	status,2,c
 12994  01348A  0012               	return	
 12995                           
 12996                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 12997  01348C  D801               	call	u130_48
 12998  01348E  0012               	return	
 12999  013490                     u130_48:
 13000  013490  0005               	push	
 13001  013492  6EFA               	movwf	pclath,c
 13002  013494  501A               	movf	_INT1_InterruptHandler^0,w,c
 13003  013496  6EFD               	movwf	tosl,c
 13004  013498  501B               	movf	(_INT1_InterruptHandler+1)^0,w,c
 13005  01349A  6EFE               	movwf	tosh,c
 13006  01349C  501C               	movf	(_INT1_InterruptHandler+2)^0,w,c
 13007  01349E  6EFF               	movwf	tosu,c
 13008  0134A0  50FA               	movf	pclath,w,c
 13009  0134A2  0012               	return		;indir
 13010  0134A4                     __end_of_INT1_CallBack:
 13011                           	opt callstack 0
 13012                           
 13013 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13014 ;; Defined at:
 13015 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 13016 ;; Parameters:    Size  Location     Type
 13017 ;;		None
 13018 ;; Auto vars:     Size  Location     Type
 13019 ;;		None
 13020 ;; Return value:  Size  Location     Type
 13021 ;;                  1  [STACK] void 
 13022 ;; Registers used:
 13023 ;;		None
 13024 ;; Tracked objects:
 13025 ;;		On entry : 0/39
 13026 ;;		On exit  : 0/0
 13027 ;;		Unchanged: 0/0
 13028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13033 ;;Total ram usage:        0 bytes
 13034 ;; Hardware stack levels used:    1
 13035 ;; This function calls:
 13036 ;;		Nothing
 13037 ;; This function is called by:
 13038 ;;		_EXT_INT_Initialize
 13039 ;;		_INT1_CallBack
 13040 ;; This function uses a reentrant model
 13041 ;;
 13042                           
 13043                           	psect	text90
 13044  013718                     __ptext90:
 13045                           	opt callstack 0
 13046  013718                     _INT1_DefaultInterruptHandler:
 13047                           	opt callstack 12
 13048                           
 13049                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13050                           
 13051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13052                           ;incstack = 0
 13053  013718  0012               	return		;funcret
 13054  01371A                     __end_of_INT1_DefaultInterruptHandler:
 13055                           	opt callstack 0
 13056                           
 13057 ;; *************** function _Default_ISR *****************
 13058 ;; Defined at:
 13059 ;;		line 87 in file "mcc_generated_files/interrupt_manager.c"
 13060 ;; Parameters:    Size  Location     Type
 13061 ;;		None
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;		None
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  1    wreg      void 
 13066 ;; Registers used:
 13067 ;;		None
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13077 ;;Total ram usage:        0 bytes
 13078 ;; Hardware stack levels used:    1
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		Interrupt level 2
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           	psect	text91
 13087  013710                     __ptext91:
 13088                           	opt callstack 0
 13089  013710                     _Default_ISR:
 13090                           	opt callstack 14
 13091                           
 13092                           ;incstack = 0
 13093  013710  EE13  F2AA         	lfsr	1,___inthi_sp
 13094  013714  0011               	retfie		f
 13095  013716                     __end_of_Default_ISR:
 13096                           	opt callstack 0
 13097                           
 13098 ;; *************** function _ADCC_ISR *****************
 13099 ;; Defined at:
 13100 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;		None
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;		None
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		wreg, status,2, status,0, pclath, tosl
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used:    1
 13120 ;; Hardware stack levels required when called:    1
 13121 ;; This function calls:
 13122 ;;		Absolute function
 13123 ;;		_ADCC_DefaultInterruptHandler
 13124 ;; This function is called by:
 13125 ;;		Interrupt level 2
 13126 ;; This function uses a non-reentrant model
 13127 ;;
 13128                           
 13129                           	psect	text92
 13130  013170                     __ptext92:
 13131                           	opt callstack 0
 13132  013170                     _ADCC_ISR:
 13133                           	opt callstack 13
 13134                           
 13135                           ;incstack = 0
 13136  013170  EE13  F2AA         	lfsr	1,___inthi_sp
 13137                           
 13138                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13139  013174  0139               	movlb	57	; () banked
 13140  013176  95A1               	bcf	161,2,b	;volatile
 13141                           
 13142                           ; BSR set to: 57
 13143                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13144  013178  500B               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 13145  01317A  100C               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 13146  01317C  100D               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 13147  01317E  B4D8               	btfsc	status,2,c
 13148  013180  0011               	retfie		f
 13149                           
 13150                           ; BSR set to: 57
 13151                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13152  013182  D801               	call	i2u151_48
 13153  013184  0011               	retfie		f
 13154  013186                     i2u151_48:
 13155  013186  0005               	push	
 13156  013188  6EFA               	movwf	pclath,c
 13157  01318A  500B               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 13158  01318C  6EFD               	movwf	tosl,c
 13159  01318E  500C               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 13160  013190  6EFE               	movwf	tosh,c
 13161  013192  500D               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 13162  013194  6EFF               	movwf	tosu,c
 13163  013196  50FA               	movf	pclath,w,c
 13164  013198  0012               	return		;indir
 13165  01319A                     __end_of_ADCC_ISR:
 13166                           	opt callstack 0
 13167                           
 13168 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13169 ;; Defined at:
 13170 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13171 ;; Parameters:    Size  Location     Type
 13172 ;;		None
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;		None
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1  [STACK] void 
 13177 ;; Registers used:
 13178 ;;		None
 13179 ;; Tracked objects:
 13180 ;;		On entry : 3F/39
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13188 ;;Total ram usage:        0 bytes
 13189 ;; Hardware stack levels used:    1
 13190 ;; This function calls:
 13191 ;;		Nothing
 13192 ;; This function is called by:
 13193 ;;		_ADCC_Initialize
 13194 ;;		_ADCC_ISR
 13195 ;; This function uses a reentrant model
 13196 ;;
 13197                           
 13198                           	psect	text93
 13199  01371A                     __ptext93:
 13200                           	opt callstack 0
 13201  01371A                     _ADCC_DefaultInterruptHandler:
 13202                           	opt callstack 13
 13203                           
 13204                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13205                           
 13206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13207                           ;incstack = 0
 13208  01371A  0012               	return		;funcret
 13209  01371C                     __end_of_ADCC_DefaultInterruptHandler:
 13210                           	opt callstack 0
 13211                           
 13212 ;; *************** function _UART1_tx_vect_isr *****************
 13213 ;; Defined at:
 13214 ;;		line 200 in file "mcc_generated_files/uart1.c"
 13215 ;; Parameters:    Size  Location     Type
 13216 ;;		None
 13217 ;; Auto vars:     Size  Location     Type
 13218 ;;		None
 13219 ;; Return value:  Size  Location     Type
 13220 ;;                  1    wreg      void 
 13221 ;; Registers used:
 13222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13223 ;; Tracked objects:
 13224 ;;		On entry : 0/0
 13225 ;;		On exit  : 0/0
 13226 ;;		Unchanged: 0/0
 13227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13232 ;;Total ram usage:        0 bytes
 13233 ;; Hardware stack levels used:    1
 13234 ;; Hardware stack levels required when called:    1
 13235 ;; This function calls:
 13236 ;;		Absolute function
 13237 ;;		_UART1_Transmit_ISR
 13238 ;; This function is called by:
 13239 ;;		Interrupt level 2
 13240 ;; This function uses a non-reentrant model
 13241 ;;
 13242                           
 13243                           	psect	text94
 13244  01337C                     __ptext94:
 13245                           	opt callstack 0
 13246  01337C                     _UART1_tx_vect_isr:
 13247                           	opt callstack 13
 13248                           
 13249                           ;incstack = 0
 13250  01337C  EE13  F2AA         	lfsr	1,___inthi_sp
 13251                           
 13252                           ;mcc_generated_files/uart1.c: 202:  if (UART1_TxInterruptHandler) {
 13253  013380  500E               	movf	_UART1_TxInterruptHandler^0,w,c
 13254  013382  100F               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 13255  013384  1010               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 13256  013386  B4D8               	btfsc	status,2,c
 13257  013388  0011               	retfie		f
 13258                           
 13259                           ;mcc_generated_files/uart1.c: 203:   UART1_TxInterruptHandler();
 13260  01338A  D801               	call	i2u314_48
 13261  01338C  0011               	retfie		f
 13262  01338E                     i2u314_48:
 13263  01338E  0005               	push	
 13264  013390  6EFA               	movwf	pclath,c
 13265  013392  500E               	movf	_UART1_TxInterruptHandler^0,w,c
 13266  013394  6EFD               	movwf	tosl,c
 13267  013396  500F               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 13268  013398  6EFE               	movwf	tosh,c
 13269  01339A  5010               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 13270  01339C  6EFF               	movwf	tosu,c
 13271  01339E  50FA               	movf	pclath,w,c
 13272  0133A0  0012               	return		;indir
 13273  0133A2                     __end_of_UART1_tx_vect_isr:
 13274                           	opt callstack 0
 13275                           
 13276 ;; *************** function _UART1_Transmit_ISR *****************
 13277 ;; Defined at:
 13278 ;;		line 214 in file "mcc_generated_files/uart1.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;		None
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1  [STACK] void 
 13285 ;; Registers used:
 13286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 3B/39
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13296 ;;Total ram usage:        0 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		_UART1_Initialize
 13302 ;;		_UART1_tx_vect_isr
 13303 ;; This function uses a reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text95
 13307  0130EE                     __ptext95:
 13308                           	opt callstack 0
 13309  0130EE                     _UART1_Transmit_ISR:
 13310                           	opt callstack 13
 13311                           
 13312                           ;mcc_generated_files/uart1.c: 217:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13313                           
 13314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13315                           ;incstack = 0
 13316  0130EE  0E40               	movlw	64
 13317  0130F0  6036               	cpfslt	_uart1TxBufferRemaining^0,c
 13318  0130F2  D010               	goto	l572
 13319                           
 13320                           ;mcc_generated_files/uart1.c: 218:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13321  0130F4  0EBD               	movlw	low _uart1TxBuffer
 13322  0130F6  2437               	addwf	_uart1TxTail^0,w,c	;volatile
 13323  0130F8  6ED9               	movwf	fsr2l,c
 13324  0130FA  6ADA               	clrf	fsr2h,c
 13325  0130FC  0E01               	movlw	high _uart1TxBuffer
 13326  0130FE  22DA               	addwfc	fsr2h,f,c
 13327  013100  50DF               	movf	indf2,w,c
 13328  013102  013D               	movlb	61	; () banked
 13329  013104  6FEA               	movwf	234,b	;volatile
 13330                           
 13331                           ; BSR set to: 61
 13332  013106  2A37               	incf	_uart1TxTail^0,f,c	;volatile
 13333                           
 13334                           ; BSR set to: 61
 13335                           ;mcc_generated_files/uart1.c: 219:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13336  013108  0E3F               	movlw	63
 13337  01310A  6437               	cpfsgt	_uart1TxTail^0,c
 13338  01310C  D001               	goto	l5164
 13339                           
 13340                           ; BSR set to: 61
 13341                           ;mcc_generated_files/uart1.c: 220:    uart1TxTail = 0;
 13342  01310E  6A37               	clrf	_uart1TxTail^0,c	;volatile
 13343  013110                     l5164:
 13344                           
 13345                           ; BSR set to: 61
 13346                           ;mcc_generated_files/uart1.c: 222:   uart1TxBufferRemaining++;
 13347  013110  2A36               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 13348                           
 13349                           ;mcc_generated_files/uart1.c: 223:  } else {
 13350  013112  0012               	return	
 13351  013114                     l572:
 13352                           
 13353                           ;mcc_generated_files/uart1.c: 224:   PIE3bits.U1TXIE = 0;
 13354  013114  0139               	movlb	57	; () banked
 13355  013116  9993               	bcf	147,4,b	;volatile
 13356                           
 13357                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13358  013118  0012               	return		;funcret
 13359  01311A                     __end_of_UART1_Transmit_ISR:
 13360                           	opt callstack 0
 13361                           
 13362 ;; *************** function _UART1_rx_vect_isr *****************
 13363 ;; Defined at:
 13364 ;;		line 207 in file "mcc_generated_files/uart1.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;		None
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;		None
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  1    wreg      void 
 13371 ;; Registers used:
 13372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13373 ;; Tracked objects:
 13374 ;;		On entry : 0/0
 13375 ;;		On exit  : 0/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13382 ;;Total ram usage:        0 bytes
 13383 ;; Hardware stack levels used:    1
 13384 ;; Hardware stack levels required when called:    1
 13385 ;; This function calls:
 13386 ;;		Absolute function
 13387 ;;		_UART1_Receive_ISR
 13388 ;; This function is called by:
 13389 ;;		Interrupt level 2
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text96
 13394  0133A4                     __ptext96:
 13395                           	opt callstack 0
 13396  0133A4                     _UART1_rx_vect_isr:
 13397                           	opt callstack 13
 13398                           
 13399                           ;incstack = 0
 13400  0133A4  EE13  F2AA         	lfsr	1,___inthi_sp
 13401                           
 13402                           ;mcc_generated_files/uart1.c: 209:  if (UART1_RxInterruptHandler) {
 13403  0133A8  5011               	movf	_UART1_RxInterruptHandler^0,w,c
 13404  0133AA  1012               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 13405  0133AC  1013               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 13406  0133AE  B4D8               	btfsc	status,2,c
 13407  0133B0  0011               	retfie		f
 13408                           
 13409                           ;mcc_generated_files/uart1.c: 210:   UART1_RxInterruptHandler();
 13410  0133B2  D801               	call	i2u316_48
 13411  0133B4  0011               	retfie		f
 13412  0133B6                     i2u316_48:
 13413  0133B6  0005               	push	
 13414  0133B8  6EFA               	movwf	pclath,c
 13415  0133BA  5011               	movf	_UART1_RxInterruptHandler^0,w,c
 13416  0133BC  6EFD               	movwf	tosl,c
 13417  0133BE  5012               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 13418  0133C0  6EFE               	movwf	tosh,c
 13419  0133C2  5013               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 13420  0133C4  6EFF               	movwf	tosu,c
 13421  0133C6  50FA               	movf	pclath,w,c
 13422  0133C8  0012               	return		;indir
 13423  0133CA                     __end_of_UART1_rx_vect_isr:
 13424                           	opt callstack 0
 13425                           
 13426 ;; *************** function _UART1_Receive_ISR *****************
 13427 ;; Defined at:
 13428 ;;		line 230 in file "mcc_generated_files/uart1.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;		None
 13431 ;; Auto vars:     Size  Location     Type
 13432 ;;		None
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  1  [STACK] void 
 13435 ;; Registers used:
 13436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13437 ;; Tracked objects:
 13438 ;;		On entry : 0/0
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13446 ;;Total ram usage:        0 bytes
 13447 ;; Hardware stack levels used:    1
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_UART1_Initialize
 13452 ;;		_UART1_rx_vect_isr
 13453 ;; This function uses a reentrant model
 13454 ;;
 13455                           
 13456                           	psect	text97
 13457  013502                     __ptext97:
 13458                           	opt callstack 0
 13459  013502                     _UART1_Receive_ISR:
 13460                           	opt callstack 13
 13461                           
 13462                           ;mcc_generated_files/uart1.c: 233:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13463                           
 13464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13465                           ;incstack = 0
 13466  013502  0E00               	movlw	low _uart1RxBuffer
 13467  013504  2435               	addwf	_uart1RxHead^0,w,c	;volatile
 13468  013506  6ED9               	movwf	fsr2l,c
 13469  013508  6ADA               	clrf	fsr2h,c
 13470  01350A  0E04               	movlw	high _uart1RxBuffer
 13471  01350C  22DA               	addwfc	fsr2h,f,c
 13472  01350E  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13473  013514  2A35               	incf	_uart1RxHead^0,f,c	;volatile
 13474                           
 13475                           ;mcc_generated_files/uart1.c: 234:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13476  013516  2835               	incf	_uart1RxHead^0,w,c
 13477  013518  B4D8               	btfsc	status,2,c
 13478                           
 13479                           ;mcc_generated_files/uart1.c: 235:   uart1RxHead = 0;
 13480  01351A  6A35               	clrf	_uart1RxHead^0,c	;volatile
 13481                           
 13482                           ;mcc_generated_files/uart1.c: 237:  uart1RxCount++;
 13483  01351C  2A33               	incf	_uart1RxCount^0,f,c	;volatile
 13484                           
 13485                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13486  01351E  0012               	return		;funcret
 13487  013520                     __end_of_UART1_Receive_ISR:
 13488                           	opt callstack 0
 13489                           
 13490 ;; *************** function _UART2_tx_vect_isr *****************
 13491 ;; Defined at:
 13492 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13493 ;; Parameters:    Size  Location     Type
 13494 ;;		None
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;		None
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  1    wreg      void 
 13499 ;; Registers used:
 13500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13510 ;;Total ram usage:        0 bytes
 13511 ;; Hardware stack levels used:    1
 13512 ;; Hardware stack levels required when called:    1
 13513 ;; This function calls:
 13514 ;;		Absolute function
 13515 ;;		_UART2_Transmit_ISR
 13516 ;; This function is called by:
 13517 ;;		Interrupt level 2
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           	psect	text98
 13522  0133CC                     __ptext98:
 13523                           	opt callstack 0
 13524  0133CC                     _UART2_tx_vect_isr:
 13525                           	opt callstack 13
 13526                           
 13527                           ;incstack = 0
 13528  0133CC  EE13  F2AA         	lfsr	1,___inthi_sp
 13529                           
 13530                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13531  0133D0  5014               	movf	_UART2_TxInterruptHandler^0,w,c
 13532  0133D2  1015               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 13533  0133D4  1016               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 13534  0133D6  B4D8               	btfsc	status,2,c
 13535  0133D8  0011               	retfie		f
 13536                           
 13537                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13538  0133DA  D801               	call	i2u318_48
 13539  0133DC  0011               	retfie		f
 13540  0133DE                     i2u318_48:
 13541  0133DE  0005               	push	
 13542  0133E0  6EFA               	movwf	pclath,c
 13543  0133E2  5014               	movf	_UART2_TxInterruptHandler^0,w,c
 13544  0133E4  6EFD               	movwf	tosl,c
 13545  0133E6  5015               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 13546  0133E8  6EFE               	movwf	tosh,c
 13547  0133EA  5016               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 13548  0133EC  6EFF               	movwf	tosu,c
 13549  0133EE  50FA               	movf	pclath,w,c
 13550  0133F0  0012               	return		;indir
 13551  0133F2                     __end_of_UART2_tx_vect_isr:
 13552                           	opt callstack 0
 13553                           
 13554 ;; *************** function _UART2_Transmit_ISR *****************
 13555 ;; Defined at:
 13556 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13557 ;; Parameters:    Size  Location     Type
 13558 ;;		None
 13559 ;; Auto vars:     Size  Location     Type
 13560 ;;		None
 13561 ;; Return value:  Size  Location     Type
 13562 ;;                  1  [STACK] void 
 13563 ;; Registers used:
 13564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13565 ;; Tracked objects:
 13566 ;;		On entry : 0/0
 13567 ;;		On exit  : 3B/39
 13568 ;;		Unchanged: 0/0
 13569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13574 ;;Total ram usage:        0 bytes
 13575 ;; Hardware stack levels used:    1
 13576 ;; This function calls:
 13577 ;;		Nothing
 13578 ;; This function is called by:
 13579 ;;		_UART2_Initialize
 13580 ;;		_UART2_tx_vect_isr
 13581 ;; This function uses a reentrant model
 13582 ;;
 13583                           
 13584                           	psect	text99
 13585  01311A                     __ptext99:
 13586                           	opt callstack 0
 13587  01311A                     _UART2_Transmit_ISR:
 13588                           	opt callstack 13
 13589                           
 13590                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13591                           
 13592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13593                           ;incstack = 0
 13594  01311A  0E40               	movlw	64
 13595  01311C  6030               	cpfslt	_uart2TxBufferRemaining^0,c
 13596  01311E  D010               	goto	l692
 13597                           
 13598                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 13599  013120  0E00               	movlw	low _uart2TxBuffer
 13600  013122  2431               	addwf	_uart2TxTail^0,w,c	;volatile
 13601  013124  6ED9               	movwf	fsr2l,c
 13602  013126  6ADA               	clrf	fsr2h,c
 13603  013128  0E02               	movlw	high _uart2TxBuffer
 13604  01312A  22DA               	addwfc	fsr2h,f,c
 13605  01312C  50DF               	movf	indf2,w,c
 13606  01312E  013D               	movlb	61	; () banked
 13607  013130  6FD2               	movwf	210,b	;volatile
 13608                           
 13609                           ; BSR set to: 61
 13610  013132  2A31               	incf	_uart2TxTail^0,f,c	;volatile
 13611                           
 13612                           ; BSR set to: 61
 13613                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 13614  013134  0E3F               	movlw	63
 13615  013136  6431               	cpfsgt	_uart2TxTail^0,c
 13616  013138  D001               	goto	l5186
 13617                           
 13618                           ; BSR set to: 61
 13619                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 13620  01313A  6A31               	clrf	_uart2TxTail^0,c	;volatile
 13621  01313C                     l5186:
 13622                           
 13623                           ; BSR set to: 61
 13624                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 13625  01313C  2A30               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 13626                           
 13627                           ;mcc_generated_files/uart2.c: 224:     }
 13628  01313E  0012               	return	
 13629  013140                     l692:
 13630                           
 13631                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 13632  013140  0139               	movlb	57	; () banked
 13633  013142  9796               	bcf	150,3,b	;volatile
 13634                           
 13635                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13636  013144  0012               	return		;funcret
 13637  013146                     __end_of_UART2_Transmit_ISR:
 13638                           	opt callstack 0
 13639                           
 13640 ;; *************** function _UART2_rx_vect_isr *****************
 13641 ;; Defined at:
 13642 ;;		line 203 in file "mcc_generated_files/uart2.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;		None
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;		None
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      void 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13660 ;;Total ram usage:        0 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    1
 13663 ;; This function calls:
 13664 ;;		Absolute function
 13665 ;;		_UART2_Receive_ISR
 13666 ;; This function is called by:
 13667 ;;		Interrupt level 2
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           	psect	text100
 13672  0133F4                     __ptext100:
 13673                           	opt callstack 0
 13674  0133F4                     _UART2_rx_vect_isr:
 13675                           	opt callstack 13
 13676                           
 13677                           ;incstack = 0
 13678  0133F4  EE13  F2AA         	lfsr	1,___inthi_sp
 13679                           
 13680                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 13681  0133F8  5017               	movf	_UART2_RxInterruptHandler^0,w,c
 13682  0133FA  1018               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 13683  0133FC  1019               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 13684  0133FE  B4D8               	btfsc	status,2,c
 13685  013400  0011               	retfie		f
 13686                           
 13687                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 13688  013402  D801               	call	i2u320_48
 13689  013404  0011               	retfie		f
 13690  013406                     i2u320_48:
 13691  013406  0005               	push	
 13692  013408  6EFA               	movwf	pclath,c
 13693  01340A  5017               	movf	_UART2_RxInterruptHandler^0,w,c
 13694  01340C  6EFD               	movwf	tosl,c
 13695  01340E  5018               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 13696  013410  6EFE               	movwf	tosh,c
 13697  013412  5019               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 13698  013414  6EFF               	movwf	tosu,c
 13699  013416  50FA               	movf	pclath,w,c
 13700  013418  0012               	return		;indir
 13701  01341A                     __end_of_UART2_rx_vect_isr:
 13702                           	opt callstack 0
 13703                           
 13704 ;; *************** function _UART2_Receive_ISR *****************
 13705 ;; Defined at:
 13706 ;;		line 233 in file "mcc_generated_files/uart2.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;		None
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1  [STACK] void 
 13713 ;; Registers used:
 13714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13724 ;;Total ram usage:        0 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_UART2_Initialize
 13730 ;;		_UART2_rx_vect_isr
 13731 ;; This function uses a reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text101
 13735  013520                     __ptext101:
 13736                           	opt callstack 0
 13737  013520                     _UART2_Receive_ISR:
 13738                           	opt callstack 13
 13739                           
 13740                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 13741                           
 13742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13743                           ;incstack = 0
 13744  013520  0E00               	movlw	low _uart2RxBuffer
 13745  013522  242F               	addwf	_uart2RxHead^0,w,c	;volatile
 13746  013524  6ED9               	movwf	fsr2l,c
 13747  013526  6ADA               	clrf	fsr2h,c
 13748  013528  0E05               	movlw	high _uart2RxBuffer
 13749  01352A  22DA               	addwfc	fsr2h,f,c
 13750  01352C  006F F743 FFDF     	movff	15824,indf2	;volatile
 13751  013532  2A2F               	incf	_uart2RxHead^0,f,c	;volatile
 13752                           
 13753                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 13754  013534  282F               	incf	_uart2RxHead^0,w,c
 13755  013536  B4D8               	btfsc	status,2,c
 13756                           
 13757                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 13758  013538  6A2F               	clrf	_uart2RxHead^0,c	;volatile
 13759                           
 13760                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 13761  01353A  2A2D               	incf	_uart2RxCount^0,f,c	;volatile
 13762                           
 13763                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13764  01353C  0012               	return		;funcret
 13765  01353E                     __end_of_UART2_Receive_ISR:
 13766                           	opt callstack 0
 13767                           
 13768 ;; *************** function _TMR6_ISR *****************
 13769 ;; Defined at:
 13770 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 13771 ;; Parameters:    Size  Location     Type
 13772 ;;		None
 13773 ;; Auto vars:     Size  Location     Type
 13774 ;;		None
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      void 
 13777 ;; Registers used:
 13778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 13779 ;; Tracked objects:
 13780 ;;		On entry : 0/0
 13781 ;;		On exit  : 0/0
 13782 ;;		Unchanged: 0/0
 13783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13788 ;;Total ram usage:        1 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; Hardware stack levels required when called:    2
 13791 ;; This function calls:
 13792 ;;		_TMR6_CallBack
 13793 ;; This function is called by:
 13794 ;;		Interrupt level 2
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text102
 13799  0135C4                     __ptext102:
 13800                           	opt callstack 0
 13801  0135C4                     _TMR6_ISR:
 13802                           	opt callstack 12
 13803                           
 13804                           ;incstack = 0
 13805  0135C4  0060  F0E4  F059   	movff	btemp,??_TMR6_ISR
 13806  0135CA  EE13  F2AA         	lfsr	1,___inthi_sp
 13807                           
 13808                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 13809  0135CE  0139               	movlb	57	; () banked
 13810  0135D0  91A9               	bcf	169,0,b	;volatile
 13811                           
 13812                           ; BSR set to: 57
 13813                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 13814  0135D2  EC52  F09A         	call	_TMR6_CallBack	;wreg free
 13815  0135D6  0060  F164  F039   	movff	??_TMR6_ISR,btemp
 13816  0135DC  0011               	retfie		f
 13817  0135DE                     __end_of_TMR6_ISR:
 13818                           	opt callstack 0
 13819                           
 13820 ;; *************** function _TMR6_CallBack *****************
 13821 ;; Defined at:
 13822 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 13823 ;; Parameters:    Size  Location     Type
 13824 ;;		None
 13825 ;; Auto vars:     Size  Location     Type
 13826 ;;		None
 13827 ;; Return value:  Size  Location     Type
 13828 ;;                  1  [STACK] void 
 13829 ;; Registers used:
 13830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 13831 ;; Tracked objects:
 13832 ;;		On entry : 3F/39
 13833 ;;		On exit  : 0/0
 13834 ;;		Unchanged: 0/0
 13835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13840 ;;Total ram usage:        0 bytes
 13841 ;; Hardware stack levels used:    1
 13842 ;; Hardware stack levels required when called:    1
 13843 ;; This function calls:
 13844 ;;		Absolute function
 13845 ;;		_TMR6_DefaultInterruptHandler
 13846 ;; This function is called by:
 13847 ;;		_TMR6_ISR
 13848 ;; This function uses a reentrant model
 13849 ;;
 13850                           
 13851                           	psect	text103
 13852  0134A4                     __ptext103:
 13853                           	opt callstack 0
 13854  0134A4                     _TMR6_CallBack:
 13855                           	opt callstack 12
 13856                           
 13857                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 13858                           
 13859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13860                           ;incstack = 0
 13861  0134A4  5008               	movf	_TMR6_InterruptHandler^0,w,c
 13862  0134A6  1009               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 13863  0134A8  100A               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 13864  0134AA  B4D8               	btfsc	status,2,c
 13865  0134AC  0012               	return	
 13866                           
 13867                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 13868  0134AE  D801               	call	u301_48
 13869  0134B0  0012               	return	
 13870  0134B2                     u301_48:
 13871  0134B2  0005               	push	
 13872  0134B4  6EFA               	movwf	pclath,c
 13873  0134B6  5008               	movf	_TMR6_InterruptHandler^0,w,c
 13874  0134B8  6EFD               	movwf	tosl,c
 13875  0134BA  5009               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 13876  0134BC  6EFE               	movwf	tosh,c
 13877  0134BE  500A               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 13878  0134C0  6EFF               	movwf	tosu,c
 13879  0134C2  50FA               	movf	pclath,w,c
 13880  0134C4  0012               	return		;indir
 13881  0134C6                     __end_of_TMR6_CallBack:
 13882                           	opt callstack 0
 13883                           
 13884 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13885 ;; Defined at:
 13886 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 13887 ;; Parameters:    Size  Location     Type
 13888 ;;		None
 13889 ;; Auto vars:     Size  Location     Type
 13890 ;;  i               1  [STACK] unsigned char 
 13891 ;; Return value:  Size  Location     Type
 13892 ;;                  1  [STACK] void 
 13893 ;; Registers used:
 13894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 13895 ;; Tracked objects:
 13896 ;;		On entry : 0/39
 13897 ;;		On exit  : 0/0
 13898 ;;		Unchanged: 0/0
 13899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13904 ;;Total ram usage:        0 bytes
 13905 ;; Hardware stack levels used:    1
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_TMR6_Initialize
 13910 ;;		_TMR6_CallBack
 13911 ;; This function uses a reentrant model
 13912 ;;
 13913                           
 13914                           	psect	text104
 13915  012E0C                     __ptext104:
 13916                           	opt callstack 0
 13917  012E0C                     _TMR6_DefaultInterruptHandler:
 13918                           	opt callstack 0
 13919                           
 13920                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13921  012E0C  52E6               	movf	postinc1,f,c
 13922                           
 13923                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 13924                           ;stkvar	_i @ sp[(-1)+0]
 13925                           
 13926                           ;incstack = 0
 13927  012E0E  0EFF               	movlw	-1
 13928  012E10  6AE3               	clrf	plusw1,c
 13929  012E12                     l5010:
 13930                           
 13931                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 13932                           ;stkvar	_i @ sp[(-1)+0]
 13933  012E12  0EFF               	movlw	-1
 13934  012E14  50E3               	movf	plusw1,w,c
 13935  012E16  0D02               	mullw	2
 13936  012E18  50F3               	movf	243,w,c
 13937  012E1A  0F60               	addlw	low _tickCount
 13938  012E1C  6ED9               	movwf	fsr2l,c
 13939  012E1E  6ADA               	clrf	fsr2h,c
 13940  012E20  50DE               	movf	postinc2,w,c
 13941  012E22  10DE               	iorwf	postinc2,w,c
 13942  012E24  B4D8               	btfsc	status,2,c
 13943  012E26  D00A               	goto	l5014
 13944                           
 13945                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 13946                           ;stkvar	_i @ sp[(-1)+0]
 13947  012E28  0EFF               	movlw	-1
 13948  012E2A  50E3               	movf	plusw1,w,c
 13949  012E2C  0D02               	mullw	2
 13950  012E2E  50F3               	movf	243,w,c
 13951  012E30  0F60               	addlw	low _tickCount
 13952  012E32  6ED9               	movwf	fsr2l,c
 13953  012E34  6ADA               	clrf	fsr2h,c
 13954  012E36  06DE               	decf	postinc2,f,c
 13955  012E38  0E00               	movlw	0
 13956  012E3A  5ADD               	subwfb	postdec2,f,c
 13957  012E3C                     l5014:
 13958                           
 13959                           ;mcc_generated_files/tmr6.c: 207:  }
 13960                           ;stkvar	_i @ sp[(-1)+0]
 13961  012E3C  0EFF               	movlw	-1
 13962  012E3E  2AE3               	incf	plusw1,f,c
 13963                           
 13964                           ;stkvar	_i @ sp[(-1)+0]
 13965  012E40  0EFF               	movlw	-1
 13966  012E42  006F FF8C  F039    	movff	plusw1,btemp
 13967  012E48  0E0C               	movlw	12
 13968  012E4A  6439               	cpfsgt	btemp^0,c
 13969  012E4C  D7E2               	goto	l5010
 13970                           
 13971                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13972  012E4E  52E5               	movf	postdec1,f,c
 13973  012E50  0012               	return		;funcret
 13974  012E52                     __end_of_TMR6_DefaultInterruptHandler:
 13975                           	opt callstack 0
 13976                           
 13977 ;; *************** function _DMA1_DMASCNT_ISR *****************
 13978 ;; Defined at:
 13979 ;;		line 126 in file "mcc_generated_files/dma1.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;		None
 13982 ;; Auto vars:     Size  Location     Type
 13983 ;;		None
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      void 
 13986 ;; Registers used:
 13987 ;;		None
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 3F/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13997 ;;Total ram usage:        0 bytes
 13998 ;; Hardware stack levels used:    1
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		Interrupt level 2
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text105
 14007  013674                     __ptext105:
 14008                           	opt callstack 0
 14009  013674                     _DMA1_DMASCNT_ISR:
 14010                           	opt callstack 14
 14011                           
 14012                           ;incstack = 0
 14013  013674  EE13  F2AA         	lfsr	1,___inthi_sp
 14014                           
 14015                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14016  013678  0139               	movlb	57	; () banked
 14017  01367A  91A2               	bcf	162,0,b	;volatile
 14018                           
 14019                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14020  01367C  0100               	movlb	0	; () banked
 14021  01367E  977A               	bcf	_spi_link& (0+255),3,b	;volatile
 14022                           
 14023                           ; BSR set to: 0
 14024                           
 14025                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE2 = 0; } while(0);
 14026  013680  94BE               	bcf	190,2,c	;volatile
 14027                           
 14028                           ; BSR set to: 0
 14029  013682  0011               	retfie		f
 14030  013684                     __end_of_DMA1_DMASCNT_ISR:
 14031                           	opt callstack 0
 14032                           
 14033 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14034 ;; Defined at:
 14035 ;;		line 134 in file "mcc_generated_files/dma1.c"
 14036 ;; Parameters:    Size  Location     Type
 14037 ;;		None
 14038 ;; Auto vars:     Size  Location     Type
 14039 ;;		None
 14040 ;; Return value:  Size  Location     Type
 14041 ;;                  1    wreg      void 
 14042 ;; Registers used:
 14043 ;;		None
 14044 ;; Tracked objects:
 14045 ;;		On entry : 0/0
 14046 ;;		On exit  : 3F/39
 14047 ;;		Unchanged: 0/0
 14048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14053 ;;Total ram usage:        0 bytes
 14054 ;; Hardware stack levels used:    1
 14055 ;; This function calls:
 14056 ;;		Nothing
 14057 ;; This function is called by:
 14058 ;;		Interrupt level 2
 14059 ;; This function uses a non-reentrant model
 14060 ;;
 14061                           
 14062                           	psect	text106
 14063  0136C8                     __ptext106:
 14064                           	opt callstack 0
 14065  0136C8                     _DMA1_DMADCNT_ISR:
 14066                           	opt callstack 14
 14067                           
 14068                           ; BSR set to: 0
 14069                           ;incstack = 0
 14070  0136C8  EE13  F2AA         	lfsr	1,___inthi_sp
 14071                           
 14072                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 14073  0136CC  0139               	movlb	57	; () banked
 14074  0136CE  93A2               	bcf	162,1,b	;volatile
 14075                           
 14076                           ; BSR set to: 57
 14077  0136D0  0011               	retfie		f
 14078  0136D2                     __end_of_DMA1_DMADCNT_ISR:
 14079                           	opt callstack 0
 14080                           
 14081 ;; *************** function _DMA1_DMAA_ISR *****************
 14082 ;; Defined at:
 14083 ;;		line 144 in file "mcc_generated_files/dma1.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;		None
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      void 
 14090 ;; Registers used:
 14091 ;;		None
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 3F/39
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;Total ram usage:        0 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; This function calls:
 14104 ;;		Nothing
 14105 ;; This function is called by:
 14106 ;;		Interrupt level 2
 14107 ;; This function uses a non-reentrant model
 14108 ;;
 14109                           
 14110                           	psect	text107
 14111  0136D4                     __ptext107:
 14112                           	opt callstack 0
 14113  0136D4                     _DMA1_DMAA_ISR:
 14114                           	opt callstack 14
 14115                           
 14116                           ; BSR set to: 57
 14117                           ;incstack = 0
 14118  0136D4  EE13  F2AA         	lfsr	1,___inthi_sp
 14119                           
 14120                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 14121  0136D8  0139               	movlb	57	; () banked
 14122  0136DA  97A2               	bcf	162,3,b	;volatile
 14123                           
 14124                           ; BSR set to: 57
 14125  0136DC  0011               	retfie		f
 14126  0136DE                     __end_of_DMA1_DMAA_ISR:
 14127                           	opt callstack 0
 14128                           
 14129 ;; *************** function _DMA1_DMAOR_ISR *****************
 14130 ;; Defined at:
 14131 ;;		line 155 in file "mcc_generated_files/dma1.c"
 14132 ;; Parameters:    Size  Location     Type
 14133 ;;		None
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;		None
 14136 ;; Return value:  Size  Location     Type
 14137 ;;                  1    wreg      void 
 14138 ;; Registers used:
 14139 ;;		None
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 3F/39
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14149 ;;Total ram usage:        0 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; This function calls:
 14152 ;;		Nothing
 14153 ;; This function is called by:
 14154 ;;		Interrupt level 2
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158                           	psect	text108
 14159  0136E0                     __ptext108:
 14160                           	opt callstack 0
 14161  0136E0                     _DMA1_DMAOR_ISR:
 14162                           	opt callstack 14
 14163                           
 14164                           ; BSR set to: 57
 14165                           ;incstack = 0
 14166  0136E0  EE13  F2AA         	lfsr	1,___inthi_sp
 14167                           
 14168                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 14169  0136E4  0139               	movlb	57	; () banked
 14170  0136E6  95A2               	bcf	162,2,b	;volatile
 14171                           
 14172                           ; BSR set to: 57
 14173  0136E8  0011               	retfie		f
 14174  0136EA                     __end_of_DMA1_DMAOR_ISR:
 14175                           	opt callstack 0
 14176                           
 14177                           ;
 14178                           ; Interrupt Vector Table @ 0x8
 14179                           ;
 14180                           
 14181                           	psect	ivt0x8
 14182  000008                     __pivt0x8:
 14183                           	opt callstack 0
 14184  000008                     ivt0x8_base:
 14185                           	opt callstack 0
 14186                           
 14187                           ; Vector 0 : SWINT
 14188  000008  4DC4               	dw	_Default_ISR shr (0+2)
 14189                           
 14190                           ; Vector 1 : HLVD
 14191  00000A  4DC4               	dw	_Default_ISR shr (0+2)
 14192                           
 14193                           ; Vector 2 : OSF
 14194  00000C  4DC4               	dw	_Default_ISR shr (0+2)
 14195                           
 14196                           ; Vector 3 : CSW
 14197  00000E  4DC4               	dw	_Default_ISR shr (0+2)
 14198                           
 14199                           ; Vector 4 : NVM
 14200  000010  4DC4               	dw	_Default_ISR shr (0+2)
 14201                           
 14202                           ; Vector 5 : SCAN
 14203  000012  4DC4               	dw	_Default_ISR shr (0+2)
 14204                           
 14205                           ; Vector 6 : CRC
 14206  000014  4DC4               	dw	_Default_ISR shr (0+2)
 14207                           
 14208                           ; Vector 7 : IOC
 14209  000016  4DC4               	dw	_Default_ISR shr (0+2)
 14210                           
 14211                           ; Vector 8 : INT0
 14212  000018  4DA8               	dw	_INT0_ISR shr (0+2)
 14213                           
 14214                           ; Vector 9 : ZCD
 14215  00001A  4DC4               	dw	_Default_ISR shr (0+2)
 14216                           
 14217                           ; Vector 10 : AD
 14218  00001C  4C5C               	dw	_ADCC_ISR shr (0+2)
 14219                           
 14220                           ; Vector 11 : ADT
 14221  00001E  4DC4               	dw	_Default_ISR shr (0+2)
 14222                           
 14223                           ; Vector 12 : CMP1
 14224  000020  4DC4               	dw	_Default_ISR shr (0+2)
 14225                           
 14226                           ; Vector 13 : SMT1
 14227  000022  4DC4               	dw	_Default_ISR shr (0+2)
 14228                           
 14229                           ; Vector 14 : SMT1PRA
 14230  000024  4DC4               	dw	_Default_ISR shr (0+2)
 14231                           
 14232                           ; Vector 15 : SMT1PRW
 14233  000026  4DC4               	dw	_Default_ISR shr (0+2)
 14234                           
 14235                           ; Vector 16 : DMA1SCNT
 14236  000028  4D9D               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14237                           
 14238                           ; Vector 17 : DMA1DCNT
 14239  00002A  4DB2               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14240                           
 14241                           ; Vector 18 : DMA1OR
 14242  00002C  4DB8               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14243                           
 14244                           ; Vector 19 : DMA1A
 14245  00002E  4DB5               	dw	_DMA1_DMAA_ISR shr (0+2)
 14246                           
 14247                           ; Vector 20 : SPI1RX
 14248  000030  4DC4               	dw	_Default_ISR shr (0+2)
 14249                           
 14250                           ; Vector 21 : SPI1TX
 14251  000032  4DC4               	dw	_Default_ISR shr (0+2)
 14252                           
 14253                           ; Vector 22 : SPI1
 14254  000034  4DC4               	dw	_Default_ISR shr (0+2)
 14255                           
 14256                           ; Vector 23 : I2C1RX
 14257  000036  4DC4               	dw	_Default_ISR shr (0+2)
 14258                           
 14259                           ; Vector 24 : I2C1TX
 14260  000038  4DC4               	dw	_Default_ISR shr (0+2)
 14261                           
 14262                           ; Vector 25 : I2C1
 14263  00003A  4DC4               	dw	_Default_ISR shr (0+2)
 14264                           
 14265                           ; Vector 26 : I2C1E
 14266  00003C  4DC4               	dw	_Default_ISR shr (0+2)
 14267                           
 14268                           ; Vector 27 : U1RX
 14269  00003E  4CE9               	dw	_UART1_rx_vect_isr shr (0+2)
 14270                           
 14271                           ; Vector 28 : U1TX
 14272  000040  4CDF               	dw	_UART1_tx_vect_isr shr (0+2)
 14273                           
 14274                           ; Vector 29 : U1E
 14275  000042  4DC4               	dw	_Default_ISR shr (0+2)
 14276                           
 14277                           ; Vector 30 : U1
 14278  000044  4DC4               	dw	_Default_ISR shr (0+2)
 14279                           
 14280                           ; Vector 31 : TMR0
 14281  000046  4DC4               	dw	_Default_ISR shr (0+2)
 14282                           
 14283                           ; Vector 32 : TMR1
 14284  000048  4DC4               	dw	_Default_ISR shr (0+2)
 14285                           
 14286                           ; Vector 33 : TMR1G
 14287  00004A  4DC4               	dw	_Default_ISR shr (0+2)
 14288                           
 14289                           ; Vector 34 : TMR2
 14290  00004C  4DC4               	dw	_Default_ISR shr (0+2)
 14291                           
 14292                           ; Vector 35 : CCP1
 14293  00004E  4DC4               	dw	_Default_ISR shr (0+2)
 14294                           
 14295                           ; Vector 36 : Undefined
 14296  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14297                           
 14298                           ; Vector 37 : NCO1
 14299  000052  4DC4               	dw	_Default_ISR shr (0+2)
 14300                           
 14301                           ; Vector 38 : CWG1
 14302  000054  4DC4               	dw	_Default_ISR shr (0+2)
 14303                           
 14304                           ; Vector 39 : CLC1
 14305  000056  4DC4               	dw	_Default_ISR shr (0+2)
 14306                           
 14307                           ; Vector 40 : INT1
 14308  000058  4DAC               	dw	_INT1_ISR shr (0+2)
 14309                           
 14310                           ; Vector 41 : CMP2
 14311  00005A  4DC4               	dw	_Default_ISR shr (0+2)
 14312                           
 14313                           ; Vector 42 : DMA2SCNT
 14314  00005C  4DC4               	dw	_Default_ISR shr (0+2)
 14315                           
 14316                           ; Vector 43 : DMA2DCNT
 14317  00005E  4DC4               	dw	_Default_ISR shr (0+2)
 14318                           
 14319                           ; Vector 44 : DMA2OR
 14320  000060  4DC4               	dw	_Default_ISR shr (0+2)
 14321                           
 14322                           ; Vector 45 : DMA2A
 14323  000062  4DC4               	dw	_Default_ISR shr (0+2)
 14324                           
 14325                           ; Vector 46 : I2C2RX
 14326  000064  4DC4               	dw	_Default_ISR shr (0+2)
 14327                           
 14328                           ; Vector 47 : I2C2TX
 14329  000066  4DC4               	dw	_Default_ISR shr (0+2)
 14330                           
 14331                           ; Vector 48 : I2C2
 14332  000068  4DC4               	dw	_Default_ISR shr (0+2)
 14333                           
 14334                           ; Vector 49 : I2C2E
 14335  00006A  4DC4               	dw	_Default_ISR shr (0+2)
 14336                           
 14337                           ; Vector 50 : U2RX
 14338  00006C  4CFD               	dw	_UART2_rx_vect_isr shr (0+2)
 14339                           
 14340                           ; Vector 51 : U2TX
 14341  00006E  4CF3               	dw	_UART2_tx_vect_isr shr (0+2)
 14342                           
 14343                           ; Vector 52 : U2E
 14344  000070  4DC4               	dw	_Default_ISR shr (0+2)
 14345                           
 14346                           ; Vector 53 : U2
 14347  000072  4DC4               	dw	_Default_ISR shr (0+2)
 14348                           
 14349                           ; Vector 54 : TMR3
 14350  000074  4DC4               	dw	_Default_ISR shr (0+2)
 14351                           
 14352                           ; Vector 55 : TMR3G
 14353  000076  4DC4               	dw	_Default_ISR shr (0+2)
 14354                           
 14355                           ; Vector 56 : TMR4
 14356  000078  4DC4               	dw	_Default_ISR shr (0+2)
 14357                           
 14358                           ; Vector 57 : CCP2
 14359  00007A  4DC4               	dw	_Default_ISR shr (0+2)
 14360                           
 14361                           ; Vector 58 : Undefined
 14362  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 14363                           
 14364                           ; Vector 59 : CWG2
 14365  00007E  4DC4               	dw	_Default_ISR shr (0+2)
 14366                           
 14367                           ; Vector 60 : CLC2
 14368  000080  4DC4               	dw	_Default_ISR shr (0+2)
 14369                           
 14370                           ; Vector 61 : INT2
 14371  000082  4DC4               	dw	_Default_ISR shr (0+2)
 14372                           
 14373                           ; Vector 62 : Undefined
 14374  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 14375                           
 14376                           ; Vector 63 : Undefined
 14377  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 14378                           
 14379                           ; Vector 64 : Undefined
 14380  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 14381                           
 14382                           ; Vector 65 : Undefined
 14383  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 14384                           
 14385                           ; Vector 66 : Undefined
 14386  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 14387                           
 14388                           ; Vector 67 : Undefined
 14389  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 14390                           
 14391                           ; Vector 68 : Undefined
 14392  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 14393                           
 14394                           ; Vector 69 : Undefined
 14395  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 14396                           
 14397                           ; Vector 70 : TMR5
 14398  000094  4AFB               	dw	_TMR5_ISR shr (0+2)
 14399                           
 14400                           ; Vector 71 : TMR5G
 14401  000096  4DC4               	dw	_Default_ISR shr (0+2)
 14402                           
 14403                           ; Vector 72 : TMR6
 14404  000098  4D71               	dw	_TMR6_ISR shr (0+2)
 14405                           
 14406                           ; Vector 73 : CCP3
 14407  00009A  4DC4               	dw	_Default_ISR shr (0+2)
 14408                           
 14409                           ; Vector 74 : CWG3
 14410  00009C  4DC4               	dw	_Default_ISR shr (0+2)
 14411                           
 14412                           ; Vector 75 : CLC3
 14413  00009E  4DC4               	dw	_Default_ISR shr (0+2)
 14414                           
 14415                           ; Vector 76 : Undefined
 14416  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 14417                           
 14418                           ; Vector 77 : Undefined
 14419  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 14420                           
 14421                           ; Vector 78 : Undefined
 14422  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 14423                           
 14424                           ; Vector 79 : Undefined
 14425  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 14426                           
 14427                           ; Vector 80 : CCP4
 14428  0000A8  4DC4               	dw	_Default_ISR shr (0+2)
 14429                           
 14430                           ; Vector 81 : CLC4
 14431  0000AA  4DC4               	dw	_Default_ISR shr (0+2)
 14432  0000AC                     ivt0x8_undefint:
 14433                           	opt callstack 0
 14434  0000AC  00FF               	reset	
 14435                           
 14436                           	psect	text109
 14437  000000                     __ptext109:
 14438                           	opt callstack 0
 14439                           
 14440                           	psect	rparam
 14441  0000                     
 14442                           	psect	temp
 14443  000039                     btemp:
 14444                           	opt callstack 0
 14445  000039                     	ds	32
 14446  0000                     wtemp0	set	btemp
 14447  0000                     wtemp1	set	btemp+2
 14448  0000                     wtemp2	set	btemp+4
 14449  0000                     wtemp3	set	btemp+6
 14450  0000                     wtemp4	set	btemp+8
 14451  0000                     wtemp5	set	btemp+10
 14452  0000                     wtemp8	set	btemp+1
 14453  0000                     ttemp0	set	btemp
 14454  0000                     ttemp1	set	btemp+3
 14455  0000                     ttemp2	set	btemp+6
 14456  0000                     ttemp3	set	btemp+9
 14457  0000                     ttemp5	set	btemp+1
 14458  0000                     ttemp6	set	btemp+4
 14459  0000                     ttemp7	set	btemp+8
 14460  0000                     ltemp0	set	btemp
 14461  0000                     ltemp1	set	btemp+4
 14462  0000                     ltemp2	set	btemp+8
 14463  0000                     lltemp0	set	btemp
 14464  0000                     lltemp1	set	btemp+8
 14465  0000                     lltemp2	set	btemp+16
 14466  0000                     lltemp3	set	btemp+24
 14467                           tosu	equ	0x3FFF
 14468                           tosh	equ	0x3FFE
 14469                           tosl	equ	0x3FFD
 14470                           stkptr	equ	0x3FFC
 14471                           pclatu	equ	0x3FFB
 14472                           pclath	equ	0x3FFA
 14473                           pcl	equ	0x3FF9
 14474                           tblptru	equ	0x3FF8
 14475                           tblptrh	equ	0x3FF7
 14476                           tblptrl	equ	0x3FF6
 14477                           tablat	equ	0x3FF5
 14478                           prodh	equ	0x3FF4
 14479                           prodl	equ	0x3FF3
 14480                           indf0	equ	0x3FEF
 14481                           postinc0	equ	0x3FEE
 14482                           postdec0	equ	0x3FED
 14483                           preinc0	equ	0x3FEC
 14484                           plusw0	equ	0x3FEB
 14485                           fsr0h	equ	0x3FEA
 14486                           fsr0l	equ	0x3FE9
 14487                           wreg	equ	0x3FE8
 14488                           indf1	equ	0x3FE7
 14489                           postinc1	equ	0x3FE6
 14490                           postdec1	equ	0x3FE5
 14491                           preinc1	equ	0x3FE4
 14492                           plusw1	equ	0x3FE3
 14493                           fsr1h	equ	0x3FE2
 14494                           fsr1l	equ	0x3FE1
 14495                           bsr	equ	0x3FE0
 14496                           indf2	equ	0x3FDF
 14497                           postinc2	equ	0x3FDE
 14498                           postdec2	equ	0x3FDD
 14499                           preinc2	equ	0x3FDC
 14500                           plusw2	equ	0x3FDB
 14501                           fsr2h	equ	0x3FDA
 14502                           fsr2l	equ	0x3FD9
 14503                           status	equ	0x3FD8


Data Sizes:
    Strings     249
    Constant    144
    Data        212
    BSS         1124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      5      61
    BANK0           160      0     101
    BANK1           256      0     253
    BANK2           256      0     198
    BANK3           256      0     218
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_9(CODE[29]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4406_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK3[218]), V(BANK1[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK3[218]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[29]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[29]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_14(CODE[9]), STR_13(CODE[12]), 
		 -> D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_14(CODE[9]), STR_13(CODE[12]), 
		 -> D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_14(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_13(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1935spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1935spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  119060
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                         _check_help
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   11866
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1   70275
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   34891
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    10     16   10813
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   24166
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   23902
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   11835
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   11974
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   10588
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   10489
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           39    33      6   10253
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     221
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DA      11       85.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      65       5       63.1%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      5      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     53D      58        0.0%
DATA                 0      0     53D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov  1 17:24:50 2019

                    _SPI1_Exchange8bit 34C6               __end_of_set_display_info 3502  
                                    _D 0300                                      _T FE75  
                                    _V 0100       __end_of_TMR5_SetInterruptHandler 3302  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 3702                            __CFG_LVP$ON 000000  
                                  l171 364A                                    l572 3114  
                                  l826 34D4                                    l692 3140  
                                  _GIE 01FE97                                    _abs 2D3A  
                                  _pad 20F0                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 3590                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 3460                     _UART1_Transmit_ISR 30EE  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 3482  
                         __CFG_ZCD$OFF 000000                                   l1023 2F12  
                                 l1223 0D4C                                   l1232 0EF4  
                                 l1309 2C4E                                   l1531 2F70  
                                 l1451 24FC                                   l1540 1B26  
                                 l1470 2FA4                                   l1455 2780  
                                 l1544 1C82                                   l2417 2D7A  
                                 l5010 2E12                                   l4050 267A  
                                 l1626 2144                                   l4130 1616  
                                 l1722 0524                                   l2451 1ECE  
                                 l4052 269C                                   l1548 1FE2  
                                 l5014 2E3C                                   l4142 16B0  
                                 l1646 060C                                   l4118 2882  
                                 l4136 166A                                   l1673 13E0  
                                 l4154 1782                                   l5212 2EFA  
                                 l1588 34FE                                   l4190 19C6  
                                 l4182 191A                                   l4174 1892  
                                 l1694 09C8                                   l6110 0D36  
                                 l4096 2D6A                                   l2497 2892  
                                 l6114 0D54                                   l5164 3110  
                                 l6116 0D66                                   l6108 0D2E  
                                 l5086 2F86                                   l5510 2930  
                                 l5520 2114                                   l5186 313C  
                                 l5514 296E                                   l5530 218A  
                                 l5610 091C                                   l6066 1AF6  
                                 l6154 0EF8                                   l5524 213C  
                                 l4652 2FAE                                   l6172 0FC4  
                                 l6156 0F20                                   l5534 21CC  
                                 l5526 214E                                   l5542 28BA  
                                 l5614 094C                                   l6078 1C1E  
                                 l6166 0F54                                   l5544 28E6  
                                 l6184 0FF8                                   l4578 3436  
                                 l5650 1482                                   l5642 1416  
                                 l5626 1362                                   l5714 0B84  
                                 l5722 0BFE                                   l5802 04AC  
                                 l5580 0664                                   l5660 1538  
                                 l5812 04D0                                   l5590 086A  
                                 l5646 1452                                   l5806 04B0  
                                 l5576 0646                                   l5568 05FC  
                                 l5664 1574                                   l5656 150C  
                                 l5760 00EA                                   l5840 1160  
                                 l5498 1DE4                                   l5738 0CD0  
                                 l5690 0A2E                                   l5834 10A2  
                                 l5914 255E                                   l5684 09F2  
                                 l5772 0228                                   l5678 09B8  
                                 l5782 02D6                                   l5854 1278  
                                 l5846 11CA                                   l5950 1EFA  
                                 l5698 0A8E                                   l5866 25D6  
                                 l5796 0452                                   l5868 2616  
                                 STR_1 FF95                                   STR_2 FFC6  
                                 STR_3 FFF4                                   STR_4 FF84  
                                 STR_5 FFA6                                   STR_6 FFC6  
                                 STR_7 FFF4                                   STR_8 FF73  
                                 STR_9 FF05                                   u2000 180C  
                                 u2110 1A50                                   u2030 188C  
                                 u2050 18E2                                   u2060 1914  
                                 _LATA 003FBA                                   u2070 1946  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u4000 253E                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2090 19FE  
                                 _LATF 003FBF                                   u4100 1C70  
                                 u3310 1DD8                                   u3330 1E54  
                                 u1730 26CA                                   u3410 055E  
                                 _T2PR 003FAB                                   u1820 2D4E  
                                 u3420 0560                                   u3501 08AE  
                                 u1910 1610                                   u3510 08C4  
                                 u1830 30B4                                   u3511 08C2  
                                 u3520 08D8                                   u3440 05D0  
                                 u1840 30B6                                   u1760 3084  
                                 u1737 26BC                                   u2810 2A7A  
                                 u1930 1666                                   u3530 08DC  
                                 u1850 2E8A                                   u1770 3086  
                                 u4090 1C6E                                   u3460 05E2  
                                 u3620 1478                                   u1860 2E8C  
                                 u1941 1670                                   u1950 16AA  
                                 u3550 08F2                                   u3630 14BE  
                                 u1870 2840                                   u3710 0A86  
                                 u1960 16DC                                   u3480 0632  
                                 u1880 2842                                   u3720 0ADA  
                                 u3801 0C4A                                   u3490 087E  
                                 u3810 0C60                                   u3730 0ADC  
                                 _T6PR 003F93                                   u2835 2AAE  
                                 u3811 0C5E                                   u2836 2AB0  
                                 u2828 2A7C                                   u1980 17BA  
                                 u3660 159A                                   u3820 0C74  
                                 _PMD0 0039C0                                   u3637 14B0  
                                 _PMD1 0039C1                                   u3830 0C78  
                                 u3750 0B3A                                   u3910 032A  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u3760 0B3C                                   u3680 099E  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 _PMD6 0039C6                                   u2795 2EC6  
                                 _PMD7 0039C7                                   u3780 0BFA  
                                 u3790 0C1A                                   u3880 013E  
                                 u3785 0BDC                                   u3970 12EC  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                       __end_of_ADCC_ISR 319A  
                        __CFG_FCMEN$ON 000000                                   _dbuf 0086  
                                 _ctoa 289C                                   _main 0D08  
                                 _dtoa 052E                                   _seed 00A6  
                                 _prec 0024                                   _nout 0020  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 12F6  
                                 btemp 0039                                   _xtoa 0984  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 002A  
            __end_of_SPI1_Exchange8bit 34E4                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 33A4                           ___param_bank 000000  
                   ?_UART1_rx_vect_isr 0059                       __end_of_INT0_ISR 36AE  
                     __end_of_INT1_ISR 36BE         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 2504          __end_of_OSCILLATOR_Initialize 3650  
                                PRLOCK 0039EF                        __end_of___aodiv 1834  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 1A74  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 FFFB                                  STR_11 FFF8  
                                STR_20 FFB7                                  STR_21 FFB7  
                                STR_13 FFD5                                  STR_14 FFEB  
                                STR_22 FF22                                  STR_15 FF4D  
                                STR_16 FF4D                                  STR_24 FF60  
                                STR_17 FFE1                                  STR_25 FF3A  
                        __CFG_WDTE$OFF 000000                                  STR_18 FFE1  
                                STR_19 FFB7                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _T2CON 003FAC                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T2HLT 003FAD  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 0059                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 3710  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 337C  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 2C46  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 35DE  
                         _DMA1CON1bits 003BFD                                  _flags 0026  
                                _fputc 1DB4             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 2E96                                  _fputs 2920  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0059  
                                _srand 2FF8                                  _width 0022  
                                _putch 3576                        __end_of_islower 3090  
             _INT1_SetInterruptHandler 3302                        __end_of_isupper 30C0  
                                pclath 003FFA                                  tablat 003FF5  
                                ltemp0 0039                                  ltemp1 003D  
                                ltemp2 0041               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 0039  
                                ttemp1 003C                                  ttemp2 003F  
                                ttemp3 0042                                  ttemp5 003A  
                                ttemp6 003D                                  ttemp7 0041  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 32B2  
          _UART1_SetRxInterruptHandler 328A                                  wtemp0 0039  
                                wtemp1 003B                                  wtemp2 003D  
                                wtemp3 003F                                  wtemp4 0041  
                                wtemp5 0043                                  wtemp8 003A  
                      __end_of_sprintf 20F0                        __end_of_toupper 289C  
                  ??_UART1_tx_vect_isr 0059              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 33CA               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 2DC6                  __end_of_ringBufS_init 3212  
                      __initialization 23A0                      _UART2_rx_vect_isr 33F4  
                         __end_of_ctoa 2920                           __end_of_main 100A  
                         __end_of_dtoa 0984                           __end_of_stoa 15B4  
                         __end_of_xtoa 0D08                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 0059                __end_of_TMR2_Initialize 35AA  
             __size_of_DMA2_Initialize 005A               _TMR5_SetInterruptHandler 32DA  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 0010  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 0059  
            __end_of_UART1_tx_vect_isr 33A2                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 3146                        _PWM8_Initialize 3624  
                     _UART1_Initialize 2A08                      _UART2_tx_vect_isr 33CC  
                   _UART2_Transmit_ISR 311A                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                     _PWM8_LoadDutyValue 2E96  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0059                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               i1l1040 2C38                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u130_48 3490                         __CFG_WDTCCS$SC 000000  
                               u301_48 34B2                                 u304_28 344C  
                               u128_48 346E                                 _FVRCON 003EC1  
                     _mode_lamp_bright 3692                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u287_20 35B2  
                               u287_26 35B4           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 2CF0  
                  ??_UART2_tx_vect_isr 0059              __end_of_UART2_rx_vect_isr 341A  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 36BE  
                     _UART2_Initialize 2B32                                 _WaitMs 2F8C  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 26F6  
                               _memset 100A                   __size_of_help_button 0038  
                               clear_0 23EC                                 clear_1 2400  
                               clear_2 2412                                 clear_3 241E  
                               clear_4 242A                                 clear_5 2436  
                               clear_6 2442                                 _printf 2AD0  
                   _eaDogM_WriteString 2504                              ?_ADCC_ISR 0059  
                               _strlen 2654                     __size_of_TimerDone 0024  
                      _ADCC_Initialize 2CF0                         _PMD_Initialize 3650  
            __end_of_UART2_tx_vect_isr 33F2                                 lltemp0 0039  
                               lltemp1 0041                                 lltemp2 0049  
                               lltemp3 0051                           __mediumconst FE74  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 2C9C  
                     __end_of_vfprintf 2654                             _StartTimer 2F18  
        __size_of_INTERRUPT_Initialize 0064                __end_of_TMR5_Initialize 2E0C  
                    _SYSTEM_Initialize 2D80                             __accesstop 0060  
              __end_of__initialization 2454                              ?_INT0_ISR 0059  
                            ?_INT1_ISR 0059                   __end_of_display_help 36FA  
                 __end_of_display_info 36F2              __end_of_CLKREF_Initialize 36C8  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 2ED8                  _set_temp_display_help 3664  
               __end_of_ringBufS_flush 2788                         __pcstackCOMRAM 0059  
                           ___inthi_sp 0EAA                             ___intlo_sp 1755  
                         __pidataBANK0 35F6                           __pidataBANK1 22E2  
                            ?_TMR5_ISR 0059                              ?_TMR6_ISR 0059  
                       ivt0x8_undefint 00AC                          __end_of_fputc 1ED8  
                        __end_of_fputs 299E                          __end_of_srand 302C  
                __end_of_TMR5_CallBack 3460                          __end_of_putch 3590  
              __end_of_PWM8_Initialize 363A                __end_of_TMR6_Initialize 3170  
               __end_of_PMD_Initialize 3664                             ??_ADCC_ISR 0059  
                __end_of_TMR6_CallBack 34C6            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 36D4  
               __size_of_mode_lamp_dim 0018               _UART2_RxInterruptHandler 0017  
            __end_of_SYSTEM_Initialize 2DC6                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                             __pbssBANK0 0060  
                           __pbssBANK1 01BD                             __pbssBANK2 0200  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                           __pbssBANK5 0500                             _check_help 1A74  
                _INT0_InterruptHandler 001D                             ??_INT0_ISR 0059  
                           ??_INT1_ISR 0059                      __end_of_TimerDone 343E  
                     _DMA1_DMADCNT_ISR 36C8             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 355A  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 32DA  
              __end_of_ADCC_Initialize 2D3A                             ??_TMR5_ISR 005A  
                           ??_TMR6_ISR 0059                                _DMA1DSA 003BF0  
                              _DMA2DSA 003BD0                                _DMA1DSZ 003BEE  
                              _DMA2DSZ 003BCE                                _DMA1SSA 003BF9  
                              _DMA2SSA 003BD9                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 3502  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                       ?_DMA1_DMAA_ISR 0059                       _DMA1_DMASCNT_ISR 3674  
                              _U1ERRIE 003DFA                     __size_of_set_vterm 001C  
                              _U1ERRIR 003DF9                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                         ?_Default_ISR 0059             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 052E  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
                              _PWM8DCH 003F61                                _PWM8DCL 003F60  
                              _PWM8CON 003F62                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 2F18      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                          _mode_lamp_dim 35DE  
                              __Lparam 0000               __end_of_UART1_Initialize 2A6C  
                      __size_of_WaitMs 0036                                ___aodiv 15B4  
                              ___aomod 1834              __end_of_UART1_Receive_ISR 3520  
                 __end_of_init_display 22E2                                __pcinit 23A0  
             __end_of_mode_lamp_bright 36A0                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 3684                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C                                __ptext0 0D08  
                              __ptext1 2FF8                                __ptext2 21F8  
                              __ptext3 319A                                __ptext4 31C2  
                              __ptext5 34C6                                __ptext6 31EA  
                              __ptext7 3684                                __ptext8 1A74  
                              __ptext9 1C86                      _UART2_Receive_ISR 3520  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                              us201999 181E                        __size_of_strlen 00A2  
                              us212999 1A62                                us340999 0548  
                              us370999 0A04                  _OSCILLATOR_Initialize 363A  
                              us357999 1308                           __size_of_abs 0046  
                         __size_of_pad 0108                                _isalpha 2E52  
                              _mode_sw 002C                                _islower 3060  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 2B90                                _isupper 3090  
           __size_of_SYSTEM_Initialize 0046                                _sprintf 1FE6  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _toupper 2818                   end_of_initialization 2454  
  __end_of_UART1_SetTxInterruptHandler 328A            _UART1_SetTxInterruptHandler 3262  
  __end_of_UART2_SetRxInterruptHandler 3262            _UART2_SetRxInterruptHandler 323A  
                    __end_of_set_vterm 3576                      __end_of_vfpfcnvrt 052E  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 370E  
            __end_of_UART2_Receive_ISR 353E                         wdtdelay@dcount 0001  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005A  
                _INT1_InterruptHandler 001A                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 32B2                           _display_help 36F2  
                _TMR5_InterruptHandler 0005                           _display_info 36EA  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 337A            _ADCC_SetADIInterruptHandler 3352  
                           _update_lcd 1ED8                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 299E  
                      _SPI1_Initialize 360E                  __end_of_get_vterm_ptr 30EE  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 2FC2           __end_of_INTERRUPT_Initialize 2AD0  
                           _vterm_dump 1C86   __end_of_INT0_DefaultInterruptHandler 3718  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 3716  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 2B90  
                    __size_of_TMR5_ISR 005A                      __size_of_TMR6_ISR 001A  
                  __size_of_check_help 0212            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 12F6                         __end_of_printf 2B32  
             __end_of_DMA1_DMADCNT_ISR 36D2            __size_of_PWM8_LoadDutyValue 0042  
                __end_of_INT0_CallBack 3482                         __end_of_strlen 26F6  
                  start_initialization 23A0   __end_of_TMR5_DefaultInterruptHandler 35C4  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 35AA  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 2D80  
                __end_of_INT1_CallBack 34A4              __size_of_set_display_info 001E  
                          __end_of_pad 21F8                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 31EA                             ivt0x8_base 0008  
                        _uart1RxBuffer 0400                          _uart2RxBuffer 0500  
                        _uart1TxBuffer 01BD               __end_of_DMA1_DMASCNT_ISR 3684  
                        _uart2TxBuffer 0200                         _DMA1_DMAOR_ISR 36E0  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A8                              _TimerDone 341A  
                        _ringBufS_init 31EA                            __pdataBANK0 00AE  
                          __pdataBANK1 0100             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 3060                    __end_of_help_button 2F8C  
      __end_of_eaDogM_WriteStringAtPos 2FF8                __end_of_DMA1_Initialize 2A08  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 3352  
             __size_of_TMR2_Initialize 001A                __end_of_SPI1_Initialize 3624  
             _UART1_RxInterruptHandler 0011               _UART2_TxInterruptHandler 0014  
                            __end_of_T FF05              __size_of_ringBufS_put_dma 00AA  
                         _init_display 21F8                 __end_of_DMA1_DMAOR_ISR 36EA  
               __size_of_TMR5_CallBack 0022                  _TMR6_InterruptHandler 0008  
               __size_of_TMR6_CallBack 0022                __end_of_DMA2_Initialize 2BEA  
               _PIN_MANAGER_Initialize 2788                   __end_of_wait_lcd_set 3708  
                        __pmediumconst FE74                              __ptext100 33F4  
                            __ptext101 3520                              __ptext102 35C4  
                            __ptext103 34A4                              __ptext104 2E0C  
                            __ptext105 3674                              __ptext106 36C8  
                            __ptext107 36D4                              __ptext108 36E0  
                            __ptext109 0000                     __end_of_StartTimer 2F54  
                    __size_of_wdtdelay 0056                      __size_of_vfprintf 00A8  
                             _ADCC_ISR 3170                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 0124  
                             _T2CLKCON 003FAE                         __size_of_fputs 007E  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 2A6C                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0059                               _INT0_ISR 36A0  
                             _INT1_ISR 36B0                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0060                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                               i2u151_48 3186  
                             i2u320_48 3406                              _ring_buf1 0283  
                            _ring_buf2 0240                               i2u314_48 338E  
                             i2u316_48 33B6                               i2u318_48 33DE  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               _PIR4bits 0039A4  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046                              _set_vterm 355A  
                  __size_of_update_lcd 010E                            _help_button 2F54  
           __end_of_UART1_Transmit_ISR 311A                               _TMR5_ISR 2BEC  
                             _TMR6_ISR 35C4                              _port_data 00B5  
                            _vfpfcnvrt 0000                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 343E                     __end_of_check_help 1C86  
                            _start_lcd 3708                __size_of_FVR_Initialize 0008  
            __size_of_send_lcd_cmd_dma 0054                          _TMR6_CallBack 34A4  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                     _set_display_info 34E4               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 002A                            _INTCON0bits 003FD2  
                            copy_data0 23B4                              copy_data1 23D6  
             _INT0_SetInterruptHandler 332A                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 0036    __end_of_UART2_SetTxInterruptHandler 323A  
          _UART2_SetTxInterruptHandler 3212                           _uart1RxCount 0033  
                         _uart2RxCount 002D                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 0036                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 353E                           _send_lcd_cmd 31C2  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                __end_of_DMA1_DMAA_ISR 36DE   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 0059               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 3692                       __size_of_isalpha 0044  
                             __pivt0x8 0008                       __size_of_islower 0030  
                   ??_DMA1_DMADCNT_ISR 005A                               __ptext10 1FE6  
                             __ptext11 30C0                               __ptext20 3708  
                             __ptext12 2F8C                               __ptext21 26F6  
                             __ptext13 1ED8                               __ptext30 2E52  
                             __ptext22 100A                               __ptext14 2FC2  
                             __ptext31 12F6                               __ptext23 2AD0  
                             __ptext15 2C9C                               __ptext40 1DB4  
                             __ptext32 052E                               __ptext24 25AC  
                             __ptext16 353E                               __ptext41 3576  
                             __ptext33 2D3A                               __ptext25 0000  
                             __ptext17 2C46                               __ptext50 341A  
                             __ptext42 245A                               __ptext34 1834  
                             __ptext26 0984                               __ptext18 2504  
                             __ptext51 2F18                               __ptext43 355A  
                             __ptext35 15B4                               __ptext27 2818  
                             __ptext19 3702                               __ptext60 328A  
                             __ptext52 36EA                               __ptext44 3664  
                             __ptext36 289C                               __ptext28 3060  
                             __ptext61 3146                               __ptext53 36F2  
                             __ptext45 34E4                               __ptext37 20F0  
                             __ptext29 3090                               __ptext70 363A  
                             __ptext62 32B2                               __ptext54 2D80  
                             __ptext46 35DE                               __ptext38 2654  
                             __ptext71 2A6C                               __ptext63 2DC6  
                             __ptext55 2B32                               __ptext47 3692  
                             __ptext39 2920                               __ptext80 3352  
                             __ptext72 36FA                               __ptext64 32DA  
                             __ptext56 3212                               __ptext48 2E96  
                             __ptext81 2BEC                               __ptext73 302C  
                             __ptext65 3590                               __ptext57 323A  
                             __ptext49 2F54                               __ptext90 3718  
                             __ptext82 2ED8                               __ptext74 3302  
                             __ptext66 360E                               __ptext58 2A08  
                             __ptext91 3710                               __ptext83 343E  
                             __ptext75 332A                               __ptext67 3624  
                             __ptext59 3262                               __ptext92 3170  
                             __ptext84 35AA                               __ptext76 2B90  
                             __ptext68 3650                               __ptext93 371A  
                             __ptext85 36A0                               __ptext77 299E  
                             __ptext69 2788                               __ptext94 337C  
                             __ptext86 3460                               __ptext78 36BE  
                             __ptext95 30EE                               __ptext87 3716  
                             __ptext79 2CF0                               __ptext96 33A4  
                             __ptext88 36B0                               __ptext97 3502  
                             __ptext89 3482                               __ptext98 33CC  
                             __ptext99 311A                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_toupper 0084  
                     _ringBufS_put_dma 245A                          __size_of_ctoa 0084  
                        __size_of_main 0302                          __size_of_dtoa 0456  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                        __size_of_xtoa 0384                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 0059                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 000B  
                            stoa@F1144 00AE                     ??_DMA1_DMASCNT_ISR 005A  
                             _spi_link 007A                               _wdtdelay 2C46  
           __end_of_UART2_Transmit_ISR 3146                               _vfprintf 25AC  
           __end_of_PWM8_LoadDutyValue 2ED8   __end_of_INT1_DefaultInterruptHandler 371A  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 3718  
                        ??_Default_ISR 0059                            _uart1RxHead 0035  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0038  
                          _uart2RxHead 002F                            _uart1RxTail 0034  
                          _uart2TxHead 0032                            _uart1TxTail 0037  
                          _uart2RxTail 002E                            _uart2TxTail 0031  
                         _wait_lcd_set 3702                     _EXT_INT_Initialize 302C  
 __end_of_TMR6_DefaultInterruptHandler 2E52  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 2E0C   __end_of_ADCC_DefaultInterruptHandler 371C  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 371A  
                             intlevel1 0000                               intlevel2 0000  
                    _send_lcd_cmd_long 319A         __size_of_set_temp_display_help 0010  
        __end_of_set_temp_display_help 3674                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 25AC                  __end_of_mode_lamp_dim 35F6  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 1FE6                 _uart2TxBufferRemaining 0030  
                       _FVR_Initialize 36FA                       _send_lcd_cmd_dma 2C9C  
                TMR5_ISR@CountCallBack 0028       __end_of_INT1_SetInterruptHandler 332A  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 005A  
             _UART1_TxInterruptHandler 000E              __end_of_send_lcd_cmd_long 31C2  
                  __end_of_Default_ISR 3716         __end_of_PIN_MANAGER_Initialize 2818  
            __size_of_mode_lamp_bright 000E                     __end_of_vterm_dump 1DB4  
              _eaDogM_WriteStringAtPos 2FC2                          _get_vterm_ptr 30C0  
            __size_of_UART2_Initialize 005E  
