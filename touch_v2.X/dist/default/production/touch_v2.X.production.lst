

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb  7 03:23:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=4,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=4,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=4,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=4,class=CODE,delta=1
   191                           	psect	text169,global,reloc=4,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=4,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	text184,global,reloc=4,class=CODE,delta=1
   207                           	psect	text185,global,reloc=4,class=CODE,delta=1
   208                           	psect	text186,global,reloc=4,class=CODE,delta=1
   209                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   210                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   213                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   214  0000                     
   215                           ; Version 2.10
   216                           ; Generated 31/07/2019 GMT
   217                           ; 
   218                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   219                           ; All rights reserved.
   220                           ; 
   221                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   222                           ; 
   223                           ; Redistribution and use in source and binary forms, with or without modification, are
   224                           ; permitted provided that the following conditions are met:
   225                           ; 
   226                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   227                           ;        conditions and the following disclaimer.
   228                           ; 
   229                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   230                           ;        of conditions and the following disclaimer in the documentation and/or other
   231                           ;        materials provided with the distribution.
   232                           ; 
   233                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   234                           ;        software without specific prior written permission.
   235                           ; 
   236                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   237                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   238                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   239                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   240                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   241                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   242                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   243                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   244                           ; 
   245                           ; 
   246                           ; Code-generator required, PIC18F57K42 Definitions
   247                           ; 
   248                           ; SFR Addresses
   249  0000                     
   250 ;;_main$3790	offset	0
   251 ;;_main$3786	offset	2
   252 ;;_esr_temp	offset	4
   253 ;;_i_esr	offset	8
   254 ;;_shape	offset	10
   255 ;;_inp_index	offset	11
   256 ;;_k	offset	12
   257 ;;_j	offset	13
   258 ;;_i	offset	14
   259 ;;_mode	offset	15
   260 ;;_i_ror	offset	16
   261 ;;_s	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_fsm	offset=-1 (param)
   277 ;;_channel	offset=-1 (param)
   278 ;;_mode	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_cmd	offset=-1 (param)
   281 ;;_x	offset	0
   282 ;;_c	offset	0
   283 ;;_shape	offset=-1 (param)
   284 ;;_reset	offset=-2 (param)
   285 ;;_i	offset=-1 (param)
   286 ;;_a200	offset	0
   287 ;;_a100	offset	2
   288 ;;_mode	offset=-1 (param)
   289 ;;_value	offset=-2 (param)
   290 ;;_window	offset=-4 (param)
   291 ;;_standard	offset=-6 (param)
   292 ;;_i	offset	0
   293 ;;_h	offset=-2 (param)
   294 ;;_flipper	offset=-1 (param)
   295 ;;_f	offset	0
   296 ;;_ap	offset	6
   297 ;;_s	offset=-3 (param)
   298 ;;_fmt	offset=-5 (param)
   299 ;;_line	offset=-1 (param)
   300 ;;_vterm	offset=-2 (param)
   301 ;;_numMilliseconds	offset=-2 (param)
   302 ;;_vterm	offset=-1 (param)
   303 ;;_row	offset	0
   304 ;;_r	offset=-1 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_strPtr	offset=-4 (param)
   307 ;;_strPtr	offset=-1 (param)
   308 ;;_delay	offset=-4 (param)
   309 ;;_strPtr	offset=-1 (param)
   310 ;;_strPtr	offset=-2 (param)
   311 ;;__this	offset=-2 (param)
   312 ;;_clearBuffer	offset=-3 (param)
   313 ;;_s	offset	0
   314 ;;_k	offset	2
   315 ;;_dest	offset=-2 (param)
   316 ;;_c	offset=-4 (param)
   317 ;;_n	offset=-6 (param)
   318 ;;_ap	offset	0
   319 ;;_fmt	offset=-3 (param)
   320 ;;_cfmt	offset	0
   321 ;;_fp	offset=-2 (param)
   322 ;;_fmt	offset=-4 (param)
   323 ;;_ap	offset=-6 (param)
   324 ;;_vfpfcnvrt$5911	offset	0
   325 ;;_vfpfcnvrt$5922	offset	2
   326 ;;_vfpfcnvrt$5910	offset	4
   327 ;;_llu	offset	6
   328 ;;_ll	offset	14
   329 ;;_f	offset	22
   330 ;;_ct	offset	26
   331 ;;_cp	offset	29
   332 ;;_c	offset	31
   333 ;;_fp	offset=-2 (param)
   334 ;;_fmt	offset=-4 (param)
   335 ;;_ap	offset=-6 (param)
   336 ;;_xtoa$5896	offset	0
   337 ;;_xtoa$5895	offset	2
   338 ;;_n	offset	4
   339 ;;_c	offset	12
   340 ;;_i	offset	14
   341 ;;_w	offset	16
   342 ;;_p	offset	18
   343 ;;_fp	offset=-2 (param)
   344 ;;_d	offset=-10 (param)
   345 ;;_x	offset=-11 (param)
   346 ;;_toupper$6702	offset	0
   347 ;;_c	offset=-2 (param)
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_n	offset	0
   351 ;;_i	offset	8
   352 ;;_w	offset	10
   353 ;;_p	offset	12
   354 ;;_fp	offset=-2 (param)
   355 ;;_d	offset=-10 (param)
   356 ;;_counter	offset	0
   357 ;;_dividend	offset=-8 (param)
   358 ;;_divisor	offset=-16 (param)
   359 ;;_quotient	offset	0
   360 ;;_counter	offset	8
   361 ;;_dividend	offset=-8 (param)
   362 ;;_divisor	offset=-16 (param)
   363 ;;_r	offset	0
   364 ;;_l	offset	2
   365 ;;__l	offset=-2 (param)
   366 ;;__r	offset=-4 (param)
   367 ;;_n	offset=-6 (param)
   368 ;;_nuls	offset	0
   369 ;;_l	offset	7
   370 ;;_p	offset	9
   371 ;;_cp	offset	11
   372 ;;_w	offset	13
   373 ;;_i	offset	15
   374 ;;_fp	offset=-2 (param)
   375 ;;_s	offset=-4 (param)
   376 ;;_efgtoa$5868	offset	0
   377 ;;_efgtoa$5867	offset	2
   378 ;;_efgtoa$5866	offset	4
   379 ;;_efgtoa$5862	offset	6
   380 ;;_efgtoa$5858	offset	8
   381 ;;_efgtoa$5857	offset	10
   382 ;;_u	offset	12
   383 ;;_g	offset	16
   384 ;;_l	offset	20
   385 ;;_h	offset	24
   386 ;;_ou	offset	28
   387 ;;_n	offset	32
   388 ;;_e	offset	34
   389 ;;_i	offset	36
   390 ;;_w	offset	38
   391 ;;_p	offset	40
   392 ;;_sign	offset	42
   393 ;;_d	offset	44
   394 ;;_ne	offset	46
   395 ;;_m	offset	48
   396 ;;_pp	offset	50
   397 ;;_t	offset	52
   398 ;;_mode	offset	54
   399 ;;_nmode	offset	55
   400 ;;_fp	offset=-2 (param)
   401 ;;_f	offset=-6 (param)
   402 ;;_c	offset=-7 (param)
   403 ;;_tolower$6687	offset	0
   404 ;;_c	offset=-2 (param)
   405 ;;_c	offset=-2 (param)
   406 ;;_d	offset	0
   407 ;;_s	offset	2
   408 ;;_dest	offset=-2 (param)
   409 ;;_src	offset=-4 (param)
   410 ;;_u	offset	0
   411 ;;_m	offset	4
   412 ;;_e	offset	8
   413 ;;_x	offset=-4 (param)
   414 ;;_u	offset	0
   415 ;;_e	offset	4
   416 ;;_x	offset=-4 (param)
   417 ;;_exp1	offset	0
   418 ;;_sign1	offset	1
   419 ;;_f1	offset=-4 (param)
   420 ;;_f1	offset=-4 (param)
   421 ;;_ff1	offset=-4 (param)
   422 ;;_ff2	offset=-8 (param)
   423 ;;_sign	offset	0
   424 ;;_counter	offset	1
   425 ;;_dividend	offset=-2 (param)
   426 ;;_divisor	offset=-4 (param)
   427 ;;_quotient	offset	0
   428 ;;_sign	offset	2
   429 ;;_counter	offset	3
   430 ;;_dividend	offset=-2 (param)
   431 ;;_divisor	offset=-4 (param)
   432 ;;_dtoa$5834	offset	0
   433 ;;_n	offset	2
   434 ;;_i	offset	10
   435 ;;_s	offset	12
   436 ;;_w	offset	14
   437 ;;_p	offset	16
   438 ;;_fp	offset=-2 (param)
   439 ;;_d	offset=-10 (param)
   440 ;;_a	offset=-2 (param)
   441 ;;_sign	offset	0
   442 ;;_counter	offset	1
   443 ;;_dividend	offset=-8 (param)
   444 ;;_divisor	offset=-16 (param)
   445 ;;_quotient	offset	0
   446 ;;_sign	offset	8
   447 ;;_counter	offset	9
   448 ;;_dividend	offset=-8 (param)
   449 ;;_divisor	offset=-16 (param)
   450 ;;_w	offset	0
   451 ;;_fp	offset=-2 (param)
   452 ;;_c	offset=-3 (param)
   453 ;;_w	offset	0
   454 ;;_i	offset	2
   455 ;;_fp	offset=-2 (param)
   456 ;;_buf	offset=-4 (param)
   457 ;;_p	offset=-6 (param)
   458 ;;_a	offset	0
   459 ;;_s	offset=-2 (param)
   460 ;;_i	offset	0
   461 ;;_c	offset	2
   462 ;;_s	offset=-2 (param)
   463 ;;_fp	offset=-4 (param)
   464 ;;_c	offset=-2 (param)
   465 ;;_fp	offset=-4 (param)
   466 ;;_c	offset=-1 (param)
   467 ;;__this	offset=-2 (param)
   468 ;;_c	offset=-3 (param)
   469 ;;_atoi$6418	offset	0
   470 ;;_atoi$6416	offset	2
   471 ;;_atoi$6417	offset	4
   472 ;;_n	offset	5
   473 ;;_neg	offset	7
   474 ;;_s	offset=-2 (param)
   475 ;;_isspace$6467	offset	0
   476 ;;_c	offset=-2 (param)
   477 ;;_c	offset=-2 (param)
   478 ;;_vterm	offset=-1 (param)
   479 ;;_new_response_info	offset=-1 (param)
   480 ;;_new_response_info	offset=-1 (param)
   481 ;;_level	offset=-2 (param)
   482 ;;_dutyValue	offset=-2 (param)
   483 ;;_timer	offset=-1 (param)
   484 ;;_timer	offset=-1 (param)
   485 ;;_count	offset=-3 (param)
   486 ;;_h	offset=-2 (param)
   487 ;;_u	offset	0
   488 ;;_x	offset=-4 (param)
   489 ;;_chan	offset=-1 (param)
   490 ;;_to_what	offset=-2 (param)
   491 ;;_u	offset	0
   492 ;;_s	offset=-2 (param)
   493 ;;_index	offset=-1 (param)
   494 ;;_arg	offset	0
   495 ;;_exp	offset	4
   496 ;;_sign	offset=-1 (param)
   497 ;;_val	offset=-5 (param)
   498 ;;_grs	offset	0
   499 ;;_rem	offset	4
   500 ;;_new_exp	offset	8
   501 ;;_aexp	offset	10
   502 ;;_bexp	offset	11
   503 ;;_sign	offset	12
   504 ;;_b	offset=-4 (param)
   505 ;;_a	offset=-8 (param)
   506 ;;_ff1	offset=-4 (param)
   507 ;;_ff2	offset=-8 (param)
   508 ;;_lp_speed	offset	0
   509 ;;_new	offset=-4 (param)
   510 ;;_bn	offset=-5 (param)
   511 ;;_slow	offset=-6 (param)
   512 ;;_b	offset=-4 (param)
   513 ;;_a	offset=-8 (param)
   514 ;;_grs	offset	0
   515 ;;_bexp	offset	1
   516 ;;_aexp	offset	2
   517 ;;_signs	offset	3
   518 ;;_b	offset=-4 (param)
   519 ;;_a	offset=-8 (param)
   520 ;;_prod	offset	0
   521 ;;_grs	offset	4
   522 ;;_temp	offset	8
   523 ;;_bexp	offset	10
   524 ;;_aexp	offset	11
   525 ;;_sign	offset	12
   526 ;;_b	offset=-4 (param)
   527 ;;_a	offset=-8 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_InterruptHandler	offset=-3 (param)
   530 ;;_InterruptHandler	offset=-3 (param)
   531 ;;_InterruptHandler	offset=-3 (param)
   532 ;;_InterruptHandler	offset=-3 (param)
   533 ;;_InterruptHandler	offset=-3 (param)
   534 ;;_state	offset	0
   535 ;;_InterruptHandler	offset=-3 (param)
   536 ;;_InterruptHandler	offset=-3 (param)
   537 ;;_InterruptHandler	offset=-3 (param)
   538 ;;_InterruptHandler	offset=-3 (param)
   539 ;;_i	offset	0
   540 ;;_sw_value	offset	1
   541 ;;_timerVal	offset=-2 (param)
   542 ;;_light	offset	0
   543 ;;_mode	offset=-1 (param)
   544 ;;_chan	offset=-1 (param)
   545 ;;_to_what	offset=-2 (param)
   546 ;;_u	offset	0
   547 ;;_s	offset=-2 (param)
   548 ;;_index	offset=-1 (param)
   549 ;;_arg	offset	0
   550 ;;_exp	offset	4
   551 ;;_sign	offset=-1 (param)
   552 ;;_val	offset=-5 (param)
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_grs	offset	0
   556 ;;_bexp	offset	1
   557 ;;_aexp	offset	2
   558 ;;_signs	offset	3
   559 ;;_b	offset=-4 (param)
   560 ;;_a	offset=-8 (param)
   561 ;;_prod	offset	0
   562 ;;_grs	offset	4
   563 ;;_temp	offset	8
   564 ;;_bexp	offset	10
   565 ;;_aexp	offset	11
   566 ;;_sign	offset	12
   567 ;;_b	offset=-4 (param)
   568 ;;_a	offset=-8 (param)
   569 ;;_grs	offset	0
   570 ;;_rem	offset	4
   571 ;;_new_exp	offset	8
   572 ;;_aexp	offset	10
   573 ;;_bexp	offset	11
   574 ;;_sign	offset	12
   575 ;;_b	offset=-4 (param)
   576 ;;_a	offset=-8 (param)
   577 ;;_ff1	offset=-4 (param)
   578 ;;_ff2	offset=-8 (param)
   579 ;;_timerVal	offset=-2 (param)
   580 ;;_adj	offset	0
   581 ;;_log_ptr	offset	4
   582 ;;_f	offset	0
   583 ;;_ap	offset	6
   584 ;;_s	offset=-3 (param)
   585 ;;_fmt	offset=-5 (param)
   586 ;;_cfmt	offset	0
   587 ;;_fp	offset=-2 (param)
   588 ;;_fmt	offset=-4 (param)
   589 ;;_ap	offset=-6 (param)
   590 ;;_vfpfcnvrt$5911	offset	0
   591 ;;_vfpfcnvrt$5922	offset	2
   592 ;;_vfpfcnvrt$5910	offset	4
   593 ;;_llu	offset	6
   594 ;;_ll	offset	14
   595 ;;_f	offset	22
   596 ;;_ct	offset	26
   597 ;;_cp	offset	29
   598 ;;_c	offset	31
   599 ;;_fp	offset=-2 (param)
   600 ;;_fmt	offset=-4 (param)
   601 ;;_ap	offset=-6 (param)
   602 ;;_xtoa$5896	offset	0
   603 ;;_xtoa$5895	offset	2
   604 ;;_n	offset	4
   605 ;;_c	offset	12
   606 ;;_i	offset	14
   607 ;;_w	offset	16
   608 ;;_p	offset	18
   609 ;;_fp	offset=-2 (param)
   610 ;;_d	offset=-10 (param)
   611 ;;_x	offset=-11 (param)
   612 ;;_toupper$6702	offset	0
   613 ;;_c	offset=-2 (param)
   614 ;;_c	offset=-2 (param)
   615 ;;_c	offset=-2 (param)
   616 ;;_n	offset	0
   617 ;;_i	offset	8
   618 ;;_w	offset	10
   619 ;;_p	offset	12
   620 ;;_fp	offset=-2 (param)
   621 ;;_d	offset=-10 (param)
   622 ;;_counter	offset	0
   623 ;;_dividend	offset=-8 (param)
   624 ;;_divisor	offset=-16 (param)
   625 ;;_quotient	offset	0
   626 ;;_counter	offset	8
   627 ;;_dividend	offset=-8 (param)
   628 ;;_divisor	offset=-16 (param)
   629 ;;_r	offset	0
   630 ;;_l	offset	2
   631 ;;__l	offset=-2 (param)
   632 ;;__r	offset=-4 (param)
   633 ;;_n	offset=-6 (param)
   634 ;;_nuls	offset	0
   635 ;;_l	offset	7
   636 ;;_p	offset	9
   637 ;;_cp	offset	11
   638 ;;_w	offset	13
   639 ;;_i	offset	15
   640 ;;_fp	offset=-2 (param)
   641 ;;_s	offset=-4 (param)
   642 ;;_efgtoa$5868	offset	0
   643 ;;_efgtoa$5867	offset	2
   644 ;;_efgtoa$5866	offset	4
   645 ;;_efgtoa$5862	offset	6
   646 ;;_efgtoa$5858	offset	8
   647 ;;_efgtoa$5857	offset	10
   648 ;;_u	offset	12
   649 ;;_g	offset	16
   650 ;;_l	offset	20
   651 ;;_h	offset	24
   652 ;;_ou	offset	28
   653 ;;_n	offset	32
   654 ;;_e	offset	34
   655 ;;_i	offset	36
   656 ;;_w	offset	38
   657 ;;_p	offset	40
   658 ;;_sign	offset	42
   659 ;;_d	offset	44
   660 ;;_ne	offset	46
   661 ;;_m	offset	48
   662 ;;_pp	offset	50
   663 ;;_t	offset	52
   664 ;;_mode	offset	54
   665 ;;_nmode	offset	55
   666 ;;_fp	offset=-2 (param)
   667 ;;_f	offset=-6 (param)
   668 ;;_c	offset=-7 (param)
   669 ;;_tolower$6687	offset	0
   670 ;;_c	offset=-2 (param)
   671 ;;_c	offset=-2 (param)
   672 ;;_d	offset	0
   673 ;;_s	offset	2
   674 ;;_dest	offset=-2 (param)
   675 ;;_src	offset=-4 (param)
   676 ;;_u	offset	0
   677 ;;_m	offset	4
   678 ;;_e	offset	8
   679 ;;_x	offset=-4 (param)
   680 ;;_u	offset	0
   681 ;;_e	offset	4
   682 ;;_x	offset=-4 (param)
   683 ;;_exp1	offset	0
   684 ;;_sign1	offset	1
   685 ;;_f1	offset=-4 (param)
   686 ;;_f1	offset=-4 (param)
   687 ;;_ff1	offset=-4 (param)
   688 ;;_ff2	offset=-8 (param)
   689 ;;_sign	offset	0
   690 ;;_counter	offset	1
   691 ;;_dividend	offset=-2 (param)
   692 ;;_divisor	offset=-4 (param)
   693 ;;_quotient	offset	0
   694 ;;_sign	offset	2
   695 ;;_counter	offset	3
   696 ;;_dividend	offset=-2 (param)
   697 ;;_divisor	offset=-4 (param)
   698 ;;_dtoa$5834	offset	0
   699 ;;_n	offset	2
   700 ;;_i	offset	10
   701 ;;_s	offset	12
   702 ;;_w	offset	14
   703 ;;_p	offset	16
   704 ;;_fp	offset=-2 (param)
   705 ;;_d	offset=-10 (param)
   706 ;;_a	offset=-2 (param)
   707 ;;_sign	offset	0
   708 ;;_counter	offset	1
   709 ;;_dividend	offset=-8 (param)
   710 ;;_divisor	offset=-16 (param)
   711 ;;_quotient	offset	0
   712 ;;_sign	offset	8
   713 ;;_counter	offset	9
   714 ;;_dividend	offset=-8 (param)
   715 ;;_divisor	offset=-16 (param)
   716 ;;_w	offset	0
   717 ;;_fp	offset=-2 (param)
   718 ;;_c	offset=-3 (param)
   719 ;;_w	offset	0
   720 ;;_i	offset	2
   721 ;;_fp	offset=-2 (param)
   722 ;;_buf	offset=-4 (param)
   723 ;;_p	offset=-6 (param)
   724 ;;_a	offset	0
   725 ;;_s	offset=-2 (param)
   726 ;;_i	offset	0
   727 ;;_c	offset	2
   728 ;;_s	offset=-2 (param)
   729 ;;_fp	offset=-4 (param)
   730 ;;_c	offset=-2 (param)
   731 ;;_fp	offset=-4 (param)
   732 ;;_c	offset=-1 (param)
   733 ;;__this	offset=-2 (param)
   734 ;;_c	offset=-3 (param)
   735 ;;_atoi$6418	offset	0
   736 ;;_atoi$6416	offset	2
   737 ;;_atoi$6417	offset	4
   738 ;;_n	offset	5
   739 ;;_neg	offset	7
   740 ;;_s	offset=-2 (param)
   741 ;;_isspace$6467	offset	0
   742 ;;_c	offset=-2 (param)
   743 ;;_c	offset=-2 (param)
   744 ;;_dsize	offset=-2 (param)
   745 ;;_u	offset	0
   746 ;;_x	offset=-4 (param)
   747 ;;_f1p	offset=-2 (param)
   748 ;;_f2	offset=-6 (param)
   749 ;;_timer	offset=-1 (param)
   750 ;;_count	offset=-3 (param)
   751 ;;_channel	offset=-1 (param)
   752 ;;_i	offset	0
   753                           
   754                           	psect	idataBIGRAM
   755  016EFC                     __pidataBIGRAM:
   756                           	opt callstack 0
   757                           
   758                           ;initializer for _port_data
   759  016EFC  FF                 	db	255
   760  016EFD  00                 	db	0
   761  016EFE  FF                 	db	255
   762  016EFF  00                 	db	0
   763  016F00  FF                 	db	255
   764  016F01  00                 	db	0
   765  016F02  FF                 	db	255
   766  016F03  00                 	db	0
   767  016F04  FF                 	db	255
   768  016F05  00                 	db	0
   769  016F06  FF                 	db	255
   770  016F07  00                 	db	0
   771  016F08  FF                 	db	255
   772  016F09  00                 	db	0
   773  016F0A  FF                 	db	255
   774  016F0B  00                 	db	0
   775  016F0C  00                 	db	0
   776  016F0D  00                 	db	0
   777  016F0E  00                 	db	0
   778  016F0F  00                 	db	0
   779  016F10  00                 	db	0
   780  016F11  00                 	db	0
   781  016F12  00                 	db	0
   782  016F13  00                 	db	0
   783  016F14  00                 	db	0
   784  016F15  00                 	db	0
   785  016F16  00                 	db	0
   786  016F17  00                 	db	0
   787  016F18  00                 	db	0
   788  016F19  00                 	db	0
   789  016F1A  00                 	db	0
   790  016F1B  00                 	db	0
   791  016F1C  00                 	db	0
   792  016F1D  00                 	db	0
   793  016F1E  00                 	db	0
   794  016F1F  00                 	db	0
   795  016F20  00                 	db	0
   796  016F21  00                 	db	0
   797  016F22  00                 	db	0
   798  016F23  00                 	db	0
   799  016F24  00                 	db	0
   800  016F25  00                 	db	0
   801  016F26  00                 	db	0
   802  016F27  00                 	db	0
   803  016F28  00                 	db	0
   804  016F29  00                 	db	0
   805  016F2A  00                 	db	0
   806  016F2B  00                 	db	0
   807  016F2C  00                 	db	0
   808  016F2D  00                 	db	0
   809  016F2E  00                 	db	0
   810  016F2F  00                 	db	0
   811  016F30  00                 	db	0
   812  016F31  00                 	db	0
   813  016F32  00                 	db	0
   814  016F33  00                 	db	0
   815  016F34  00                 	db	0
   816  016F35  00                 	db	0
   817  016F36  00                 	db	0
   818  016F37  00                 	db	0
   819  016F38  00                 	db	0
   820  016F39  00                 	db	0
   821  016F3A  00                 	db	0
   822  016F3B  00                 	db	0
   823  016F3C  00                 	db	0
   824  016F3D  00                 	db	0
   825  016F3E  00                 	db	0
   826  016F3F  00                 	db	0
   827  016F40  00                 	db	0
   828  016F41  00                 	db	0
   829  016F42  00                 	db	0
   830  016F43  00                 	db	0
   831  016F44  00                 	db	0
   832  016F45  00                 	db	0
   833  016F46  00                 	db	0
   834  016F47  00                 	db	0
   835  016F48  00                 	db	0
   836  016F49  00                 	db	0
   837  016F4A  00                 	db	0
   838  016F4B  00                 	db	0
   839  016F4C  00                 	db	0
   840  016F4D  00                 	db	0
   841  016F4E  00                 	db	0
   842  016F4F  00                 	db	0
   843  016F50  00                 	db	0
   844  016F51  00                 	db	0
   845  016F52  00                 	db	0
   846  016F53  00                 	db	0
   847  016F54  00                 	db	0
   848  016F55  00                 	db	0
   849  016F56  00                 	db	0
   850  016F57  00                 	db	0
   851  016F58  00                 	db	0
   852  016F59  00                 	db	0
   853  016F5A  00                 	db	0
   854  016F5B  00                 	db	0
   855  016F5C  00                 	db	0
   856  016F5D  00                 	db	0
   857  016F5E  00                 	db	0
   858  016F5F  00                 	db	0
   859  016F60  00                 	db	0
   860  016F61  00                 	db	0
   861  016F62  00                 	db	0
   862  016F63  00                 	db	0
   863  016F64  00                 	db	0
   864  016F65  00                 	db	0
   865  016F66  00                 	db	0
   866  016F67  00                 	db	0
   867  016F68  00                 	db	0
   868  016F69  00                 	db	0
   869  016F6A  00                 	db	0
   870  016F6B  00                 	db	0
   871  016F6C  00                 	db	0
   872  016F6D  00                 	db	0
   873  016F6E  00                 	db	0
   874  016F6F  00                 	db	0
   875  016F70  00                 	db	0
   876  016F71  00                 	db	0
   877  016F72  00                 	db	0
   878  016F73  00                 	db	0
   879  016F74  00                 	db	0
   880  016F75  00                 	db	0
   881  016F76  00                 	db	0
   882  016F77  00                 	db	0
   883  016F78  00                 	db	0
   884  016F79  00                 	db	0
   885  016F7A  00                 	db	0
   886  016F7B  00                 	db	0
   887  016F7C  00                 	db	0
   888  016F7D  00                 	db	0
   889  016F7E  00                 	db	0
   890  016F7F  00                 	db	0
   891  016F80  00                 	db	0
   892  016F81  00                 	db	0
   893  016F82  00                 	db	0
   894  016F83  00                 	db	0
   895  016F84  00                 	db	0
   896  016F85  00                 	db	0
   897  016F86  00                 	db	0
   898  016F87  00                 	db	0
   899  016F88  00                 	db	0
   900  016F89  00                 	db	0
   901  016F8A  00                 	db	0
   902  016F8B  00                 	db	0
   903  016F8C  00                 	db	0
   904  016F8D  00                 	db	0
   905  016F8E  00                 	db	0
   906  016F8F  00                 	db	0
   907  016F90  00                 	db	0
   908  016F91  00                 	db	0
   909  016F92  00                 	db	0
   910  016F93  00                 	db	0
   911  016F94  00                 	db	0
   912  016F95  00                 	db	0
   913  016F96  00                 	db	0
   914  016F97  00                 	db	0
   915  016F98  00                 	db	0
   916  016F99  00                 	db	0
   917  016F9A  00                 	db	0
   918  016F9B  00                 	db	0
   919  016F9C  00                 	db	0
   920  016F9D  00                 	db	0
   921  016F9E  00                 	db	0
   922  016F9F  00                 	db	0
   923  016FA0  00                 	db	0
   924  016FA1  00                 	db	0
   925  016FA2  00                 	db	0
   926  016FA3  00                 	db	0
   927  016FA4  00                 	db	0
   928  016FA5  00                 	db	0
   929  016FA6  00                 	db	0
   930  016FA7  00                 	db	0
   931  016FA8  00                 	db	0
   932  016FA9  00                 	db	0
   933  016FAA  00                 	db	0
   934  016FAB  00                 	db	0
   935  016FAC  00                 	db	0
   936  016FAD  00                 	db	0
   937  016FAE  00                 	db	0
   938  016FAF  00                 	db	0
   939  016FB0  00                 	db	0
   940  016FB1  00                 	db	0
   941  016FB2  00                 	db	0
   942  016FB3  00                 	db	0
   943  016FB4  00                 	db	0
   944  016FB5  00                 	db	0
   945  016FB6  00                 	db	0
   946  016FB7  00                 	db	0
   947  016FB8  00                 	db	0
   948  016FB9  00                 	db	0
   949  016FBA  00                 	db	0
   950  016FBB  00                 	db	0
   951  016FBC  00                 	db	0
   952  016FBD  00                 	db	0
   953  016FBE  00                 	db	0
   954  016FBF  00                 	db	0
   955  016FC0  00                 	db	0
   956  016FC1  00                 	db	0
   957  016FC2  00                 	db	0
   958  016FC3  00                 	db	0
   959  016FC4  00                 	db	0
   960  016FC5  00                 	db	0
   961  016FC6  00                 	db	0
   962  016FC7  00                 	db	0
   963  016FC8  00                 	db	0
   964  016FC9  00                 	db	0
   965  016FCA  00                 	db	0
   966  016FCB  00                 	db	0
   967  016FCC  00                 	db	0
   968  016FCD  00                 	db	0
   969  016FCE  00                 	db	0
   970  016FCF  00                 	db	0
   971  016FD0  00                 	db	0
   972  016FD1  00                 	db	0
   973  016FD2  00                 	db	0
   974  016FD3  00                 	db	0
   975  016FD4  00                 	db	0
   976  016FD5  00                 	db	0
   977  016FD6  00                 	db	0
   978  016FD7  00                 	db	0
   979  016FD8  00                 	db	0
   980  016FD9  00                 	db	0
   981  016FDA  00                 	db	0
   982  016FDB  00                 	db	0
   983  016FDC  00                 	db	0
   984  016FDD  00                 	db	0
   985  016FDE  00                 	db	0
   986  016FDF  00                 	db	0
   987  016FE0  00                 	db	0
   988  016FE1  00                 	db	0
   989  016FE2  00                 	db	0
   990  016FE3  00                 	db	0
   991  016FE4  00                 	db	0
   992  016FE5  00                 	db	0
   993  016FE6  00                 	db	0
   994  016FE7  00                 	db	0
   995  016FE8  00                 	db	0
   996  016FE9  00                 	db	0
   997  016FEA  00                 	db	0
   998  016FEB  00                 	db	0
   999  016FEC  00                 	db	0
  1000  016FED  00                 	db	0
  1001  016FEE  00                 	db	0
  1002  016FEF  00                 	db	0
  1003  016FF0  00                 	db	0
  1004  016FF1  00                 	db	0
  1005  016FF2  00                 	db	0
  1006  016FF3  00                 	db	0
  1007  016FF4  00                 	db	0
  1008  016FF5  00                 	db	0
  1009  016FF6  00                 	db	0
  1010  016FF7  00                 	db	0
  1011  016FF8  00                 	db	0
  1012  016FF9  00                 	db	0
  1013  016FFA  00                 	db	0
  1014  016FFB  00                 	db	0
  1015  016FFC  00                 	db	0
  1016  016FFD  00                 	db	0
  1017  016FFE  00                 	db	0
  1018  016FFF  00                 	db	0
  1019  017000  00                 	db	0
  1020  017001  00                 	db	0
  1021  017002  00                 	db	0
  1022  017003  00                 	db	0
  1023  017004  00                 	db	0
  1024  017005  00                 	db	0
  1025  017006  00                 	db	0
  1026  017007  00                 	db	0
  1027  017008  00                 	db	0
  1028  017009  00                 	db	0
  1029  01700A  00                 	db	0
  1030  01700B  00                 	db	0
  1031  01700C  00                 	db	0
  1032  01700D  00                 	db	0
  1033  01700E  00                 	db	0
  1034  01700F  00                 	db	0
  1035  017010  00                 	db	0
  1036  017011  00                 	db	0
  1037  017012  00                 	db	0
  1038  017013  00                 	db	0
  1039  017014  00                 	db	0
  1040  017015  00                 	db	0
  1041  017016  00                 	db	0
  1042  017017  00                 	db	0
  1043  017018  00                 	db	0
  1044  017019  00                 	db	0
  1045  01701A  00                 	db	0
  1046  01701B  00                 	db	0
  1047  01701C  00                 	db	0
  1048  01701D  00                 	db	0
  1049  01701E  00                 	db	0
  1050  01701F  00                 	db	0
  1051  017020  00                 	db	0
  1052  017021  00                 	db	0
  1053  017022  00                 	db	0
  1054  017023  00                 	db	0
  1055  017024  00                 	db	0
  1056  017025  00                 	db	0
  1057  017026  00                 	db	0
  1058  017027  00                 	db	0
  1059  017028  00                 	db	0
  1060  017029  00                 	db	0
  1061  01702A  00                 	db	0
  1062  01702B  00                 	db	0
  1063  01702C  00                 	db	0
  1064  01702D  00                 	db	0
  1065  01702E  00                 	db	0
  1066  01702F  00                 	db	0
  1067  017030  00                 	db	0
  1068  017031  00                 	db	0
  1069  017032  00                 	db	0
  1070  017033  00                 	db	0
  1071  017034  00                 	db	0
  1072  017035  00                 	db	0
  1073  017036  00                 	db	0
  1074  017037  00                 	db	0
  1075  017038  00                 	db	0
  1076  017039  00                 	db	0
  1077  01703A  00                 	db	0
  1078  01703B  00                 	db	0
  1079  01703C  00                 	db	0
  1080  01703D  00                 	db	0
  1081  01703E  00                 	db	0
  1082  01703F  00                 	db	0
  1083  017040  00                 	db	0
  1084  017041  00                 	db	0
  1085  017042  00                 	db	0
  1086  017043  00                 	db	0
  1087  017044  00                 	db	0
  1088  017045  00                 	db	0
  1089  017046  00                 	db	0
  1090  017047  00                 	db	0
  1091  017048  00                 	db	0
  1092  017049  00                 	db	0
  1093  01704A  00                 	db	0
  1094  01704B  00                 	db	0
  1095  01704C  00                 	db	0
  1096  01704D  00                 	db	0
  1097  01704E  00                 	db	0
  1098  01704F  00                 	db	0
  1099  017050  00                 	db	0
  1100  017051  00                 	db	0
  1101  017052  00                 	db	0
  1102  017053  00                 	db	0
  1103  017054  00                 	db	0
  1104  017055  00                 	db	0
  1105  017056  00                 	db	0
  1106  017057  00                 	db	0
  1107  017058  00                 	db	0
  1108  017059  00                 	db	0
  1109  01705A  00                 	db	0
  1110  01705B  00                 	db	0
  1111  01705C  00                 	db	0
  1112  01705D  00                 	db	0
  1113  01705E  00                 	db	0
  1114  01705F  00                 	db	0
  1115  017060  00                 	db	0
  1116  017061  00                 	db	0
  1117  017062  00                 	db	0
  1118  017063  00                 	db	0
  1119  017064  00                 	db	0
  1120  017065  00                 	db	0
  1121  017066  00                 	db	0
  1122  017067  00                 	db	0
  1123  017068  00                 	db	0
  1124  017069  00                 	db	0
  1125  01706A  00                 	db	0
  1126  01706B  00                 	db	0
  1127  01706C  00                 	db	0
  1128  01706D  00                 	db	0
  1129  01706E  00                 	db	0
  1130  01706F  00                 	db	0
  1131  017070  00                 	db	0
  1132  017071  00                 	db	0
  1133  017072  00                 	db	0
  1134  017073  00                 	db	0
  1135  017074  00                 	db	0
  1136  017075  00                 	db	0
  1137  017076  00                 	db	0
  1138  017077  00                 	db	0
  1139  017078  00                 	db	0
  1140  017079  00                 	db	0
  1141  01707A  00                 	db	0
  1142  01707B  00                 	db	0
  1143  01707C  00                 	db	0
  1144  01707D  00                 	db	0
  1145  01707E  00                 	db	0
  1146  01707F  00                 	db	0
  1147  017080  00                 	db	0
  1148  017081  00                 	db	0
  1149  017082  00                 	db	0
  1150  017083  00                 	db	0
  1151  017084  00                 	db	0
  1152  017085  00                 	db	0
  1153  017086  00                 	db	0
  1154  017087  00                 	db	0
  1155  017088  00                 	db	0
  1156  017089  00                 	db	0
  1157  01708A  00                 	db	0
  1158  01708B  00                 	db	0
  1159  01708C  00                 	db	0
  1160  01708D  00                 	db	0
  1161  01708E  00                 	db	0
  1162  01708F  00                 	db	0
  1163  017090  00                 	db	0
  1164  017091  00                 	db	0
  1165  017092  00                 	db	0
  1166  017093  00                 	db	0
  1167  017094  00                 	db	0
  1168  017095  00                 	db	0
  1169  017096  00                 	db	0
  1170  017097  00                 	db	0
  1171  017098  00                 	db	0
  1172  017099  00                 	db	0
  1173  01709A  00                 	db	0
  1174  01709B  00                 	db	0
  1175  01709C  00                 	db	0
  1176  01709D  00                 	db	0
  1177  01709E  00                 	db	0
  1178  01709F  00                 	db	0
  1179  0170A0  00                 	db	0
  1180  0170A1  00                 	db	0
  1181  0170A2  00                 	db	0
  1182  0170A3  00                 	db	0
  1183  0170A4  00                 	db	0
  1184  0170A5  00                 	db	0
  1185  0170A6  00                 	db	0
  1186  0170A7  00                 	db	0
  1187  0170A8  00                 	db	0
  1188  0170A9  00                 	db	0
  1189  0170AA  00                 	db	0
  1190  0170AB  00                 	db	0
  1191  0170AC  00                 	db	0
  1192  0170AD  00                 	db	0
  1193  0170AE  00                 	db	0
  1194  0170AF  00                 	db	0
  1195  0170B0  00                 	db	0
  1196  0170B1  00                 	db	0
  1197  0170B2  00                 	db	0
  1198  0170B3  00                 	db	0
  1199  0170B4  00                 	db	0
  1200  0170B5  00                 	db	0
  1201  0170B6  00                 	db	0
  1202  0170B7  00                 	db	0
  1203  0170B8  00                 	db	0
  1204  0170B9  00                 	db	0
  1205  0170BA  00                 	db	0
  1206  0170BB  00                 	db	0
  1207  0170BC  00                 	db	0
  1208  0170BD  00                 	db	0
  1209  0170BE  00                 	db	0
  1210  0170BF  00                 	db	0
  1211  0170C0  00                 	db	0
  1212  0170C1  00                 	db	0
  1213  0170C2  00                 	db	0
  1214  0170C3  00                 	db	0
  1215  0170C4  00                 	db	0
  1216  0170C5  00                 	db	0
  1217  0170C6  00                 	db	0
  1218  0170C7  00                 	db	0
  1219  0170C8  00                 	db	0
  1220  0170C9  00                 	db	0
  1221  0170CA  00                 	db	0
  1222  0170CB  00                 	db	0
  1223  0170CC  00                 	db	0
  1224  0170CD  00                 	db	0
  1225  0170CE  00                 	db	0
  1226  0170CF  00                 	db	0
  1227  0170D0  00                 	db	0
  1228  0170D1  00                 	db	0
  1229  0170D2  00                 	db	0
  1230  0170D3  00                 	db	0
  1231  0170D4  00                 	db	0
  1232  0170D5  00                 	db	0
  1233  0170D6  00                 	db	0
  1234  0170D7  00                 	db	0
  1235  0170D8  00                 	db	0
  1236  0170D9  00                 	db	0
  1237  0170DA  00                 	db	0
  1238  0170DB  00                 	db	0
  1239  0170DC  00                 	db	0
  1240  0170DD  00                 	db	0
  1241  0170DE  00                 	db	0
  1242  0170DF  00                 	db	0
  1243  0170E0  00                 	db	0
  1244  0170E1  00                 	db	0
  1245  0170E2  00                 	db	0
  1246  0170E3  00                 	db	0
  1247  0170E4  00                 	db	0
  1248  0170E5  00                 	db	0
  1249  0170E6  00                 	db	0
  1250  0170E7  00                 	db	0
  1251  0170E8  00                 	db	0
  1252  0170E9  00                 	db	0
  1253  0170EA  00                 	db	0
  1254  0170EB  00                 	db	0
  1255  0170EC  00                 	db	0
  1256  0170ED  00                 	db	0
  1257  0170EE  00                 	db	0
  1258  0170EF  00                 	db	0
  1259  0170F0  00                 	db	0
  1260  0170F1  00                 	db	0
  1261  0170F2  00                 	db	0
  1262  0170F3  00                 	db	0
  1263  0170F4  00                 	db	0
  1264  0170F5  00                 	db	0
  1265  0170F6  00                 	db	0
  1266  0170F7  00                 	db	0
  1267  0170F8  00                 	db	0
  1268  0170F9  00                 	db	0
  1269  0170FA  00                 	db	0
  1270  0170FB  00                 	db	0
  1271                           
  1272                           ;initializer for _C
  1273  0170FC  0000               	dw	0
  1274  0170FE  0000               	dw	0
  1275  017100  0000               	dw	0
  1276  017102  0000               	dw	0
  1277  017104  0000               	dw	0
  1278  017106  0000               	dw	0
  1279  017108  0000               	dw	0
  1280  01710A  0000               	dw	0
  1281  01710C  0000               	dw	0
  1282  01710E  0000               	dw	0
  1283  017110  0000               	dw	0
  1284  017112  0000               	dw	0
  1285  017114  0000               	dw	0
  1286  017116  0000               	dw	0
  1287  017118  0000               	dw	0
  1288  01711A  0000               	dw	0
  1289  01711C  0000               	dw	0
  1290  01711E  0000               	dw	0
  1291  017120  0000               	dw	0
  1292  017122  0000               	dw	0
  1293  017124  0000               	dw	0
  1294  017126  0000               	dw	0
  1295  017128  0000               	dw	0
  1296  01712A  0000               	dw	0
  1297  01712C  0000               	dw	0
  1298  01712E  0000               	dw	0
  1299  017130  0000               	dw	0
  1300  017132  0000               	dw	0
  1301  017134  0000               	dw	0
  1302  017136  0000               	dw	0
  1303  017138  0000               	dw	0
  1304  01713A  0000               	dw	0
  1305  01713C  0000               	dw	0
  1306  01713E  0000               	dw	0
  1307  017140  0000               	dw	0
  1308  017142  0000               	dw	0
  1309  017144  0000               	dw	0
  1310  017146  0000               	dw	0
  1311  017148  0000               	dw	0
  1312  01714A  0000               	dw	0
  1313  01714C  0000               	dw	0
  1314  01714E  0000               	dw	0
  1315  017150  0000               	dw	0
  1316  017152  0000               	dw	0
  1317  017154  0000               	dw	0
  1318  017156  0000               	dw	0
  1319  017158  0000               	dw	0
  1320  01715A  0000               	dw	0
  1321  01715C  0000               	dw	0
  1322  01715E  0000               	dw	0
  1323  017160  0000               	dw	0
  1324  017162  0000               	dw	0
  1325  017164  0000               	dw	0
  1326  017166  0000               	dw	0
  1327  017168  0000               	dw	0
  1328  01716A  0000               	dw	0
  1329  01716C  0000               	dw	0
  1330  01716E  0000               	dw	0
  1331  017170  0000               	dw	0
  1332  017172  0000               	dw	0
  1333  017174  0000               	dw	0
  1334  017176  0000               	dw	0
  1335  017178  0000               	dw	0
  1336  01717A  0000               	dw	0
  1337  01717C  0000               	dw	0
  1338  01717E  0000               	dw	0
  1339  017180  0000               	dw	0
  1340  017182  0000               	dw	0
  1341  017184  0000               	dw	0
  1342  017186  0000               	dw	0
  1343  017188  0000               	dw	0
  1344  01718A  42FA               	dw	17146
  1345  01718C  0000               	dw	0
  1346  01718E  0000               	dw	0
  1347  017190  0000               	dw	0
  1348  017192  0000               	dw	0
  1349  017194  0000               	dw	0
  1350  017196  0000               	dw	0
  1351  017198  0000               	dw	0
  1352  01719A  0000               	dw	0
  1353  01719C  0000               	dw	0
  1354  01719E  0000               	dw	0
  1355  0171A0  0000               	dw	0
  1356  0171A2  0000               	dw	0
  1357  0171A4  0000               	dw	0
  1358  0171A6  0000               	dw	0
  1359  0171A8  0000               	dw	0
  1360  0171AA  0000               	dw	0
  1361  0171AC  0000               	dw	0
  1362  0171AE  0000               	dw	0
  1363  0171B0  0000               	dw	0
  1364  0171B2  0000               	dw	0
  1365  0171B4  00                 	db	0
  1366  0171B5  01                 	db	1
  1367  0171B6  0000               	dw	0
  1368  0171B8  3F80               	dw	16256
  1369  0171BA  0000               	dw	0
  1370  0171BC  3F80               	dw	16256
  1371  0171BE  00                 	db	0
  1372  0171BF  00                 	db	0
  1373  0171C0  00                 	db	0
  1374  0171C1  00                 	db	0
  1375  0171C2  00                 	db	0
  1376  0171C3  00                 	db	0
  1377  0171C4  00                 	db	0
  1378  0171C5  00                 	db	0
  1379  0171C6  00                 	db	0
  1380  0171C7  00                 	db	0
  1381  0171C8  00                 	db	0
  1382  0171C9  00                 	db	0
  1383  0171CA  00                 	db	0
  1384  0171CB  00                 	db	0
  1385  0171CC  00                 	db	0
  1386  0171CD  00                 	db	0
  1387  0171CE  00                 	db	0
  1388  0171CF  00                 	db	0
  1389  0171D0  00                 	db	0
  1390  0171D1  00                 	db	0
  1391  0171D2  00                 	db	0
  1392  0171D3  00                 	db	0
  1393  0171D4  00                 	db	0
  1394  0171D5  00                 	db	0
  1395  0171D6  00                 	db	0
  1396  0171D7  00                 	db	0
  1397  0171D8  00                 	db	0
  1398  0171D9  00                 	db	0
  1399  0171DA  00                 	db	0
  1400  0171DB  00                 	db	0
  1401  0171DC  00                 	db	0
  1402  0171DD  00                 	db	0
  1403  0171DE  00                 	db	0
  1404  0171DF  00                 	db	0
  1405  0171E0  00                 	db	0
  1406  0171E1  00                 	db	0
  1407  0171E2  00                 	db	0
  1408  0171E3  00                 	db	0
  1409  0171E4  00                 	db	0
  1410  0171E5  00                 	db	0
  1411  0171E6  00                 	db	0
  1412  0171E7  00                 	db	0
  1413  0171E8  00                 	db	0
  1414  0171E9  00                 	db	0
  1415  0171EA  00                 	db	0
  1416  0171EB  00                 	db	0
  1417  0171EC  00                 	db	0
  1418  0171ED  00                 	db	0
  1419  0171EE  00                 	db	0
  1420  0171EF  00                 	db	0
  1421  0171F0  00                 	db	0
  1422  0171F1  00                 	db	0
  1423  0171F2  00                 	db	0
  1424  0171F3  00                 	db	0
  1425  0171F4  00                 	db	0
  1426  0171F5  00                 	db	0
  1427  0171F6  00                 	db	0
  1428  0171F7  00                 	db	0
  1429  0171F8  00                 	db	0
  1430  0171F9  00                 	db	0
  1431  0171FA  00                 	db	0
  1432  0171FB  00                 	db	0
  1433  0171FC  00                 	db	0
  1434  0171FD  00                 	db	0
  1435  0171FE  00                 	db	0
  1436  0171FF  00                 	db	0
  1437  017200  00                 	db	0
  1438  017201  00                 	db	0
  1439  017202  00                 	db	0
  1440  017203  00                 	db	0
  1441  017204  00                 	db	0
  1442  017205  00                 	db	0
  1443  017206  00                 	db	0
  1444  017207  00                 	db	0
  1445  017208  00                 	db	0
  1446  017209  00                 	db	0
  1447  01720A  0000               	dw	0
  1448  01720C  0000               	dw	0
  1449  01720E  0000               	dw	0
  1450  017210  0000               	dw	0
  1451  017212  0000               	dw	0
  1452  017214  0000               	dw	0
  1453  017216  0000               	dw	0
  1454  017218  0000               	dw	0
  1455  01721A  0000               	dw	0
  1456  01721C  0000               	dw	0
  1457  01721E  01                 	db	1
  1458  01721F  00                 	db	0
  1459  017220  00                 	db	0
  1460  017221  00                 	db	0
  1461  017222  00                 	db	0
  1462  017223  00                 	db	0
  1463  017224  00                 	db	0
  1464  017225  00                 	db	0
  1465  017226  00                 	db	0
  1466                           
  1467                           	psect	idataBANK0
  1468  01C27C                     __pidataBANK0:
  1469                           	opt callstack 0
  1470                           
  1471                           ;initializer for _R
  1472  01C27C  0000               	dw	0
  1473  01C27E  0000               	dw	0
  1474  01C280  0000               	dw	0
  1475  01C282  0000               	dw	0
  1476  01C284  0000               	dw	0
  1477  01C286  0000               	dw	0
  1478  01C288  0000               	dw	0
  1479  01C28A  0000               	dw	0
  1480  01C28C  0000               	dw	0
  1481  01C28E  0000               	dw	0
  1482  01C290  0000               	dw	0
  1483  01C292  0000               	dw	0
  1484  01C294  0000               	dw	0
  1485  01C296  0000               	dw	0
  1486  01C298  0000               	dw	0
  1487  01C29A  0000               	dw	0
  1488  01C29C  0000               	dw	0
  1489  01C29E  0000               	dw	0
  1490  01C2A0  0000               	dw	0
  1491  01C2A2  0F62               	dw	3938
  1492  01C2A4  0FA4               	dw	4004
  1493  01C2A6  2D0E               	dw	11534
  1494  01C2A8  3DB2               	dw	15794
  1495  01C2AA  DD98               	dw	56728
  1496  01C2AC  3D13               	dw	15635
  1497  01C2AE  00                 	db	0
  1498  01C2AF  0000               	dw	0
  1499  01C2B1  00                 	db	0
  1500                           
  1501                           	psect	idataBANK1
  1502  01A9D6                     __pidataBANK1:
  1503                           	opt callstack 0
  1504                           
  1505                           ;initializer for stoa@F1166
  1506  01A9D6  28                 	db	40
  1507  01A9D7  6E                 	db	110
  1508  01A9D8  75                 	db	117
  1509  01A9D9  6C                 	db	108
  1510  01A9DA  6C                 	db	108
  1511  01A9DB  29                 	db	41
  1512  01A9DC  00                 	db	0
  1513                           
  1514                           ;initializer for _V
  1515  01A9DD  00                 	db	0
  1516  01A9DE  00                 	db	0
  1517  01A9DF  00                 	db	0
  1518  01A9E0  00                 	db	0
  1519  01A9E1  00                 	db	0
  1520  01A9E2  00                 	db	0
  1521  01A9E3  00                 	db	0
  1522  01A9E4  00                 	db	0
  1523  01A9E5  00                 	db	0
  1524  01A9E6  00                 	db	0
  1525  01A9E7  00                 	db	0
  1526  01A9E8  00                 	db	0
  1527  01A9E9  00                 	db	0
  1528  01A9EA  00                 	db	0
  1529  01A9EB  00                 	db	0
  1530  01A9EC  00                 	db	0
  1531  01A9ED  00                 	db	0
  1532  01A9EE  00                 	db	0
  1533  01A9EF  00                 	db	0
  1534  01A9F0  00                 	db	0
  1535  01A9F1  00                 	db	0
  1536  01A9F2  00                 	db	0
  1537  01A9F3  00                 	db	0
  1538  01A9F4  00                 	db	0
  1539  01A9F5  00                 	db	0
  1540  01A9F6  00                 	db	0
  1541  01A9F7  00                 	db	0
  1542  01A9F8  00                 	db	0
  1543  01A9F9  00                 	db	0
  1544  01A9FA  00                 	db	0
  1545  01A9FB  00                 	db	0
  1546  01A9FC  00                 	db	0
  1547  01A9FD  00                 	db	0
  1548  01A9FE  00                 	db	0
  1549  01A9FF  00                 	db	0
  1550  01AA00  00                 	db	0
  1551  01AA01  00                 	db	0
  1552  01AA02  00                 	db	0
  1553  01AA03  00                 	db	0
  1554  01AA04  00                 	db	0
  1555  01AA05  00                 	db	0
  1556  01AA06  00                 	db	0
  1557  01AA07  00                 	db	0
  1558  01AA08  00                 	db	0
  1559  01AA09  00                 	db	0
  1560  01AA0A  00                 	db	0
  1561  01AA0B  00                 	db	0
  1562  01AA0C  00                 	db	0
  1563  01AA0D  00                 	db	0
  1564  01AA0E  00                 	db	0
  1565  01AA0F  00                 	db	0
  1566  01AA10  00                 	db	0
  1567  01AA11  00                 	db	0
  1568  01AA12  00                 	db	0
  1569  01AA13  00                 	db	0
  1570  01AA14  00                 	db	0
  1571  01AA15  00                 	db	0
  1572  01AA16  00                 	db	0
  1573  01AA17  00                 	db	0
  1574  01AA18  00                 	db	0
  1575  01AA19  00                 	db	0
  1576  01AA1A  00                 	db	0
  1577  01AA1B  00                 	db	0
  1578  01AA1C  00                 	db	0
  1579  01AA1D  00                 	db	0
  1580  01AA1E  00                 	db	0
  1581  01AA1F  00                 	db	0
  1582  01AA20  00                 	db	0
  1583  01AA21  00                 	db	0
  1584  01AA22  00                 	db	0
  1585  01AA23  00                 	db	0
  1586  01AA24  00                 	db	0
  1587  01AA25  00                 	db	0
  1588  01AA26  00                 	db	0
  1589  01AA27  00                 	db	0
  1590  01AA28  00                 	db	0
  1591  01AA29  00                 	db	0
  1592  01AA2A  00                 	db	0
  1593  01AA2B  00                 	db	0
  1594  01AA2C  00                 	db	0
  1595  01AA2D  00                 	db	0
  1596  01AA2E  00                 	db	0
  1597  01AA2F  00                 	db	0
  1598  01AA30  00                 	db	0
  1599  01AA31  00                 	db	0
  1600  01AA32  00                 	db	0
  1601  01AA33  00                 	db	0
  1602  01AA34  00                 	db	0
  1603  01AA35  00                 	db	0
  1604  01AA36  00                 	db	0
  1605  01AA37  00                 	db	0
  1606  01AA38  00                 	db	0
  1607  01AA39  00                 	db	0
  1608  01AA3A  00                 	db	0
  1609  01AA3B  00                 	db	0
  1610  01AA3C  00                 	db	0
  1611  01AA3D  00                 	db	0
  1612  01AA3E  00                 	db	0
  1613  01AA3F  00                 	db	0
  1614  01AA40  00                 	db	0
  1615  01AA41  00                 	db	0
  1616  01AA42  00                 	db	0
  1617  01AA43  00                 	db	0
  1618  01AA44  00                 	db	0
  1619  01AA45  00                 	db	0
  1620  01AA46  00                 	db	0
  1621  01AA47  00                 	db	0
  1622  01AA48  00                 	db	0
  1623  01AA49  00                 	db	0
  1624  01AA4A  00                 	db	0
  1625  01AA4B  00                 	db	0
  1626  01AA4C  00                 	db	0
  1627  01AA4D  00                 	db	0
  1628  01AA4E  00                 	db	0
  1629  01AA4F  00                 	db	0
  1630  01AA50  00                 	db	0
  1631  01AA51  00                 	db	0
  1632  01AA52  00                 	db	0
  1633  01AA53  00                 	db	0
  1634  01AA54  00                 	db	0
  1635  01AA55  00                 	db	0
  1636  01AA56  00                 	db	0
  1637  01AA57  00                 	db	0
  1638  01AA58  00                 	db	0
  1639  01AA59  00                 	db	0
  1640  01AA5A  00                 	db	0
  1641  01AA5B  00                 	db	0
  1642  01AA5C  00                 	db	0
  1643  01AA5D  00                 	db	0
  1644  01AA5E  0000               	dw	0
  1645  01AA60  0000               	dw	0
  1646  01AA62  0000               	dw	0
  1647  01AA64  0000               	dw	0
  1648  01AA66  00                 	db	0
  1649  01AA67  00                 	db	0
  1650  01AA68  00                 	db	0
  1651  01AA69  00                 	db	0
  1652  01AA6A  00                 	db	0
  1653  01AA6B  00                 	db	0
  1654  01AA6C  0000               	dw	0
  1655  01AA6E  0000               	dw	0
  1656  01AA70  0000               	dw	0
  1657  01AA72  0000               	dw	0
  1658  01AA74  0000               	dw	0
  1659  01AA76  0000               	dw	0
  1660  01AA78  00                 	db	0
  1661  01AA79  00                 	db	0
  1662  01AA7A  00                 	db	0
  1663  01AA7B  00                 	db	0
  1664  01AA7C  00                 	db	0
  1665  01AA7D  00                 	db	0
  1666  01AA7E  00                 	db	0
  1667  01AA7F  00                 	db	0
  1668  01AA80  00                 	db	0
  1669  01AA81  00                 	db	0
  1670  01AA82  00                 	db	0
  1671  01AA83  0000               	dw	0
  1672  01AA85  0000               	dw	0
  1673  01AA87  2D                 	db	45
  1674  01AA88  00                 	db	0
  1675  01AA89  00                 	db	0
  1676  01AA8A  00                 	db	0
  1677  01AA8B  00                 	db	0
  1678  01AA8C  00                 	db	0
  1679  01AA8D  0000               	dw	0
  1680  01AA8F  0000               	dw	0
  1681  01AA91  0000               	dw	0
  1682  01AA93  0000               	dw	0
  1683  01AA95  0000               	dw	0
  1684  01AA97  0000               	dw	0
  1685  01AA99  0000               	dw	0
  1686  01AA9B  0000               	dw	0
  1687                           
  1688                           ;initializer for _H
  1689  01AA9D  00                 	db	0
  1690  01AA9E  00                 	db	0
  1691  01AA9F  01                 	db	1
  1692  01AAA0  00                 	db	0
  1693  01AAA1  01                 	db	1
  1694  01AAA2  00                 	db	0
  1695  01AAA3  01                 	db	1
  1696  01AAA4  00                 	db	0
  1697  01AAA5  00                 	db	0
  1698                           
  1699                           	psect	mediumconst
  1700  00F90C                     __pmediumconst:
  1701                           	opt callstack 0
  1702  00F90C  00                 	db	0
  1703  00F90D                     _BVSOC_TABLE:
  1704                           	opt callstack 0
  1705  00F90D  59D8               	dw	23000
  1706  00F90F  0000               	dw	0
  1707  00F911  0005               	dw	5
  1708  00F913  0000               	dw	0
  1709  00F915  5B68               	dw	23400
  1710  00F917  0000               	dw	0
  1711  00F919  000A               	dw	10
  1712  00F91B  0000               	dw	0
  1713  00F91D  5C30               	dw	23600
  1714  00F91F  0000               	dw	0
  1715  00F921  0014               	dw	20
  1716  00F923  0000               	dw	0
  1717  00F925  5E38               	dw	24120
  1718  00F927  0000               	dw	0
  1719  00F929  0019               	dw	25
  1720  00F92B  0000               	dw	0
  1721  00F92D  5E88               	dw	24200
  1722  00F92F  0000               	dw	0
  1723  00F931  001E               	dw	30
  1724  00F933  0000               	dw	0
  1725  00F935  5F78               	dw	24440
  1726  00F937  0000               	dw	0
  1727  00F939  0028               	dw	40
  1728  00F93B  0000               	dw	0
  1729  00F93D  5FDC               	dw	24540
  1730  00F93F  0000               	dw	0
  1731  00F941  002D               	dw	45
  1732  00F943  0000               	dw	0
  1733  00F945  6018               	dw	24600
  1734  00F947  0000               	dw	0
  1735  00F949  0032               	dw	50
  1736  00F94B  0000               	dw	0
  1737  00F94D  6046               	dw	24646
  1738  00F94F  0000               	dw	0
  1739  00F951  0035               	dw	53
  1740  00F953  0000               	dw	0
  1741  00F955  607C               	dw	24700
  1742  00F957  0000               	dw	0
  1743  00F959  0037               	dw	55
  1744  00F95B  0000               	dw	0
  1745  00F95D  60AE               	dw	24750
  1746  00F95F  0000               	dw	0
  1747  00F961  0039               	dw	57
  1748  00F963  0000               	dw	0
  1749  00F965  60E0               	dw	24800
  1750  00F967  0000               	dw	0
  1751  00F969  003C               	dw	60
  1752  00F96B  0000               	dw	0
  1753  00F96D  6112               	dw	24850
  1754  00F96F  0000               	dw	0
  1755  00F971  003F               	dw	63
  1756  00F973  0000               	dw	0
  1757  00F975  615D               	dw	24925
  1758  00F977  0000               	dw	0
  1759  00F979  0043               	dw	67
  1760  00F97B  0000               	dw	0
  1761  00F97D  61A8               	dw	25000
  1762  00F97F  0000               	dw	0
  1763  00F981  0046               	dw	70
  1764  00F983  0000               	dw	0
  1765  00F985  61BC               	dw	25020
  1766  00F987  0000               	dw	0
  1767  00F989  0048               	dw	72
  1768  00F98B  0000               	dw	0
  1769  00F98D  61D0               	dw	25040
  1770  00F98F  0000               	dw	0
  1771  00F991  004B               	dw	75
  1772  00F993  0000               	dw	0
  1773  00F995  61DA               	dw	25050
  1774  00F997  0000               	dw	0
  1775  00F999  0050               	dw	80
  1776  00F99B  0000               	dw	0
  1777  00F99D  61E4               	dw	25060
  1778  00F99F  0000               	dw	0
  1779  00F9A1  0055               	dw	85
  1780  00F9A3  0000               	dw	0
  1781  00F9A5  61F8               	dw	25080
  1782  00F9A7  0000               	dw	0
  1783  00F9A9  005A               	dw	90
  1784  00F9AB  0000               	dw	0
  1785  00F9AD  6208               	dw	25096
  1786  00F9AF  0000               	dw	0
  1787  00F9B1  005C               	dw	92
  1788  00F9B3  0000               	dw	0
  1789  00F9B5  6222               	dw	25122
  1790  00F9B7  0000               	dw	0
  1791  00F9B9  005D               	dw	93
  1792  00F9BB  0000               	dw	0
  1793  00F9BD  6234               	dw	25140
  1794  00F9BF  0000               	dw	0
  1795  00F9C1  005F               	dw	95
  1796  00F9C3  0000               	dw	0
  1797  00F9C5  6248               	dw	25160
  1798  00F9C7  0000               	dw	0
  1799  00F9C9  0061               	dw	97
  1800  00F9CB  0000               	dw	0
  1801  00F9CD  625C               	dw	25180
  1802  00F9CF  0000               	dw	0
  1803  00F9D1  0064               	dw	100
  1804  00F9D3  0000               	dw	0
  1805  00F9D5  6784               	dw	26500
  1806  00F9D7  0000               	dw	0
  1807  00F9D9  0062               	dw	98
  1808  00F9DB  0000               	dw	0
  1809  00F9DD                     __end_of_BVSOC_TABLE:
  1810                           	opt callstack 0
  1811  00F9DD                     _T:
  1812                           	opt callstack 0
  1813  00F9DD  63                 	db	99
  1814  00F9DE  6F                 	db	111
  1815  00F9DF  6D                 	db	109
  1816  00F9E0  6D                 	db	109
  1817  00F9E1  61                 	db	97
  1818  00F9E2  6E                 	db	110
  1819  00F9E3  64                 	db	100
  1820  00F9E4  73                 	db	115
  1821  00F9E5  20                 	db	32
  1822  00F9E6  31                 	db	49
  1823  00F9E7  00                 	db	0
  1824  00F9E8  00                 	db	0
  1825  00F9E9  00                 	db	0
  1826  00F9EA  00                 	db	0
  1827  00F9EB  00                 	db	0
  1828  00F9EC  00                 	db	0
  1829  00F9ED  00                 	db	0
  1830  00F9EE  00                 	db	0
  1831  00F9EF  64                 	db	100
  1832  00F9F0  69                 	db	105
  1833  00F9F1  73                 	db	115
  1834  00F9F2  70                 	db	112
  1835  00F9F3  6C                 	db	108
  1836  00F9F4  61                 	db	97
  1837  00F9F5  79                 	db	121
  1838  00F9F6  73                 	db	115
  1839  00F9F7  20                 	db	32
  1840  00F9F8  31                 	db	49
  1841  00F9F9  00                 	db	0
  1842  00F9FA  00                 	db	0
  1843  00F9FB  00                 	db	0
  1844  00F9FC  00                 	db	0
  1845  00F9FD  00                 	db	0
  1846  00F9FE  00                 	db	0
  1847  00F9FF  00                 	db	0
  1848  00FA00  00                 	db	0
  1849  00FA01  63                 	db	99
  1850  00FA02  6F                 	db	111
  1851  00FA03  6D                 	db	109
  1852  00FA04  6D                 	db	109
  1853  00FA05  61                 	db	97
  1854  00FA06  6E                 	db	110
  1855  00FA07  64                 	db	100
  1856  00FA08  73                 	db	115
  1857  00FA09  20                 	db	32
  1858  00FA0A  32                 	db	50
  1859  00FA0B  00                 	db	0
  1860  00FA0C  00                 	db	0
  1861  00FA0D  00                 	db	0
  1862  00FA0E  00                 	db	0
  1863  00FA0F  00                 	db	0
  1864  00FA10  00                 	db	0
  1865  00FA11  00                 	db	0
  1866  00FA12  00                 	db	0
  1867  00FA13  64                 	db	100
  1868  00FA14  69                 	db	105
  1869  00FA15  73                 	db	115
  1870  00FA16  70                 	db	112
  1871  00FA17  6C                 	db	108
  1872  00FA18  61                 	db	97
  1873  00FA19  79                 	db	121
  1874  00FA1A  73                 	db	115
  1875  00FA1B  20                 	db	32
  1876  00FA1C  32                 	db	50
  1877  00FA1D  00                 	db	0
  1878  00FA1E  00                 	db	0
  1879  00FA1F  00                 	db	0
  1880  00FA20  00                 	db	0
  1881  00FA21  00                 	db	0
  1882  00FA22  00                 	db	0
  1883  00FA23  00                 	db	0
  1884  00FA24  00                 	db	0
  1885  00FA25  63                 	db	99
  1886  00FA26  6F                 	db	111
  1887  00FA27  6D                 	db	109
  1888  00FA28  6D                 	db	109
  1889  00FA29  61                 	db	97
  1890  00FA2A  6E                 	db	110
  1891  00FA2B  64                 	db	100
  1892  00FA2C  73                 	db	115
  1893  00FA2D  20                 	db	32
  1894  00FA2E  33                 	db	51
  1895  00FA2F  00                 	db	0
  1896  00FA30  00                 	db	0
  1897  00FA31  00                 	db	0
  1898  00FA32  00                 	db	0
  1899  00FA33  00                 	db	0
  1900  00FA34  00                 	db	0
  1901  00FA35  00                 	db	0
  1902  00FA36  00                 	db	0
  1903  00FA37  64                 	db	100
  1904  00FA38  69                 	db	105
  1905  00FA39  73                 	db	115
  1906  00FA3A  70                 	db	112
  1907  00FA3B  6C                 	db	108
  1908  00FA3C  61                 	db	97
  1909  00FA3D  79                 	db	121
  1910  00FA3E  73                 	db	115
  1911  00FA3F  20                 	db	32
  1912  00FA40  33                 	db	51
  1913  00FA41  00                 	db	0
  1914  00FA42  00                 	db	0
  1915  00FA43  00                 	db	0
  1916  00FA44  00                 	db	0
  1917  00FA45  00                 	db	0
  1918  00FA46  00                 	db	0
  1919  00FA47  00                 	db	0
  1920  00FA48  00                 	db	0
  1921  00FA49  63                 	db	99
  1922  00FA4A  6F                 	db	111
  1923  00FA4B  6D                 	db	109
  1924  00FA4C  6D                 	db	109
  1925  00FA4D  61                 	db	97
  1926  00FA4E  6E                 	db	110
  1927  00FA4F  64                 	db	100
  1928  00FA50  73                 	db	115
  1929  00FA51  20                 	db	32
  1930  00FA52  34                 	db	52
  1931  00FA53  00                 	db	0
  1932  00FA54  00                 	db	0
  1933  00FA55  00                 	db	0
  1934  00FA56  00                 	db	0
  1935  00FA57  00                 	db	0
  1936  00FA58  00                 	db	0
  1937  00FA59  00                 	db	0
  1938  00FA5A  00                 	db	0
  1939  00FA5B  64                 	db	100
  1940  00FA5C  69                 	db	105
  1941  00FA5D  73                 	db	115
  1942  00FA5E  70                 	db	112
  1943  00FA5F  6C                 	db	108
  1944  00FA60  61                 	db	97
  1945  00FA61  79                 	db	121
  1946  00FA62  73                 	db	115
  1947  00FA63  20                 	db	32
  1948  00FA64  34                 	db	52
  1949  00FA65  00                 	db	0
  1950  00FA66  00                 	db	0
  1951  00FA67  00                 	db	0
  1952  00FA68  00                 	db	0
  1953  00FA69  00                 	db	0
  1954  00FA6A  00                 	db	0
  1955  00FA6B  00                 	db	0
  1956  00FA6C  00                 	db	0
  1957  00FA6D                     __end_of_T:
  1958                           	opt callstack 0
  1959  00FA6D                     _spin:
  1960                           	opt callstack 0
  1961  00FA6D  7C                 	db	124
  1962  00FA6E  7C                 	db	124
  1963  00FA6F  2F                 	db	47
  1964  00FA70  2F                 	db	47
  1965  00FA71  2D                 	db	45
  1966  00FA72  2D                 	db	45
  1967  00FA73  00                 	db	0
  1968  00FA74  00                 	db	0
  1969  00FA75  00                 	db	0
  1970  00FA76  00                 	db	0
  1971  00FA77  00                 	db	0
  1972  00FA78  00                 	db	0
  1973  00FA79  00                 	db	0
  1974  00FA7A  00                 	db	0
  1975  00FA7B  00                 	db	0
  1976  00FA7C  00                 	db	0
  1977  00FA7D  00                 	db	0
  1978  00FA7E  00                 	db	0
  1979  00FA7F  00                 	db	0
  1980  00FA80  00                 	db	0
  1981  00FA81  7C                 	db	124
  1982  00FA82  7C                 	db	124
  1983  00FA83  2F                 	db	47
  1984  00FA84  2F                 	db	47
  1985  00FA85  2D                 	db	45
  1986  00FA86  2D                 	db	45
  1987  00FA87  5C                 	db	92
  1988  00FA88  5C                 	db	92
  1989  00FA89  00                 	db	0
  1990  00FA8A  00                 	db	0
  1991  00FA8B  00                 	db	0
  1992  00FA8C  00                 	db	0
  1993  00FA8D  00                 	db	0
  1994  00FA8E  00                 	db	0
  1995  00FA8F  00                 	db	0
  1996  00FA90  00                 	db	0
  1997  00FA91  00                 	db	0
  1998  00FA92  00                 	db	0
  1999  00FA93  00                 	db	0
  2000  00FA94  00                 	db	0
  2001  00FA95  4F                 	db	79
  2002  00FA96  4F                 	db	79
  2003  00FA97  4F                 	db	79
  2004  00FA98  4F                 	db	79
  2005  00FA99  4F                 	db	79
  2006  00FA9A  4F                 	db	79
  2007  00FA9B  2D                 	db	45
  2008  00FA9C  2D                 	db	45
  2009  00FA9D  5F                 	db	95
  2010  00FA9E  5F                 	db	95
  2011  00FA9F  2D                 	db	45
  2012  00FAA0  00                 	db	0
  2013  00FAA1  00                 	db	0
  2014  00FAA2  00                 	db	0
  2015  00FAA3  00                 	db	0
  2016  00FAA4  00                 	db	0
  2017  00FAA5  00                 	db	0
  2018  00FAA6  00                 	db	0
  2019  00FAA7  00                 	db	0
  2020  00FAA8  00                 	db	0
  2021  00FAA9  76                 	db	118
  2022  00FAAA  76                 	db	118
  2023  00FAAB  3C                 	db	60
  2024  00FAAC  3C                 	db	60
  2025  00FAAD  5E                 	db	94
  2026  00FAAE  5E                 	db	94
  2027  00FAAF  3E                 	db	62
  2028  00FAB0  3E                 	db	62
  2029  00FAB1  00                 	db	0
  2030  00FAB2  00                 	db	0
  2031  00FAB3  00                 	db	0
  2032  00FAB4  00                 	db	0
  2033  00FAB5  00                 	db	0
  2034  00FAB6  00                 	db	0
  2035  00FAB7  00                 	db	0
  2036  00FAB8  00                 	db	0
  2037  00FAB9  00                 	db	0
  2038  00FABA  00                 	db	0
  2039  00FABB  00                 	db	0
  2040  00FABC  00                 	db	0
  2041  00FABD  2E                 	db	46
  2042  00FABE  2E                 	db	46
  2043  00FABF  2A                 	db	42
  2044  00FAC0  2A                 	db	42
  2045  00FAC1  78                 	db	120
  2046  00FAC2  23                 	db	35
  2047  00FAC3  78                 	db	120
  2048  00FAC4  23                 	db	35
  2049  00FAC5  58                 	db	88
  2050  00FAC6  58                 	db	88
  2051  00FAC7  7C                 	db	124
  2052  00FAC8  7C                 	db	124
  2053  00FAC9  2D                 	db	45
  2054  00FACA  2D                 	db	45
  2055  00FACB  00                 	db	0
  2056  00FACC  00                 	db	0
  2057  00FACD  00                 	db	0
  2058  00FACE  00                 	db	0
  2059  00FACF  00                 	db	0
  2060  00FAD0  00                 	db	0
  2061  00FAD1  2E                 	db	46
  2062  00FAD2  2E                 	db	46
  2063  00FAD3  6F                 	db	111
  2064  00FAD4  6F                 	db	111
  2065  00FAD5  4F                 	db	79
  2066  00FAD6  4F                 	db	79
  2067  00FAD7  6F                 	db	111
  2068  00FAD8  6F                 	db	111
  2069  00FAD9  00                 	db	0
  2070  00FADA  00                 	db	0
  2071  00FADB  00                 	db	0
  2072  00FADC  00                 	db	0
  2073  00FADD  00                 	db	0
  2074  00FADE  00                 	db	0
  2075  00FADF  00                 	db	0
  2076  00FAE0  00                 	db	0
  2077  00FAE1  00                 	db	0
  2078  00FAE2  00                 	db	0
  2079  00FAE3  00                 	db	0
  2080  00FAE4  00                 	db	0
  2081  00FAE5                     __end_of_spin:
  2082                           	opt callstack 0
  2083  00FAE5  0000               	dw	0
  2084  00FAE7  3F80               	dw	16256
  2085  00FAE9  0000               	dw	0
  2086  00FAEB  3FC0               	dw	16320
  2087  00FAED                     __end_of_bp:
  2088                           	opt callstack 0
  2089  00FAED  AA00               	dw	43520
  2090  00FAEF  3FB8               	dw	16312
  2091  00FAF1                     __end_of_ivln2_h:
  2092                           	opt callstack 0
  2093  00FAF1  23C6               	dw	9158
  2094  00FAF3  B8F6               	dw	47350
  2095  00FAF5                     __end_of_cp_l:
  2096                           	opt callstack 0
  2097  00FAF5  4000               	dw	16384
  2098  00FAF7  3F76               	dw	16246
  2099  00FAF9                     __end_of_cp_h:
  2100                           	opt callstack 0
  2101  0000                     _IVTADL	set	14493
  2102  0000                     _IVTADH	set	14494
  2103  0000                     _IVTADU	set	14495
  2104  0000                     _PIR6bits	set	14758
  2105  0000                     _PIR4bits	set	14756
  2106  0000                     _PIE8bits	set	14744
  2107  0000                     _PIR8bits	set	14760
  2108  0000                     _SCANPR	set	14839
  2109  0000                     _DMA2PR	set	14836
  2110  0000                     _DMA1PR	set	14835
  2111  0000                     _MAINPR	set	14834
  2112  0000                     _ISRPR	set	14833
  2113  0000                     _PIE2bits	set	14738
  2114  0000                     _PIR2bits	set	14754
  2115  0000                     _PIE9bits	set	14745
  2116  0000                     _PIR9bits	set	14761
  2117  0000                     _PIE6bits	set	14742
  2118  0000                     _PIE3bits	set	14739
  2119  0000                     _PMD7	set	14791
  2120  0000                     _PMD6	set	14790
  2121  0000                     _PMD5	set	14789
  2122  0000                     _PMD4	set	14788
  2123  0000                     _PMD3	set	14787
  2124  0000                     _PMD2	set	14786
  2125  0000                     _PMD1	set	14785
  2126  0000                     _PMD0	set	14784
  2127  0000                     _OSCTUNE	set	14814
  2128  0000                     _OSCFRQ	set	14815
  2129  0000                     _OSCEN	set	14813
  2130  0000                     _OSCCON3	set	14811
  2131  0000                     _OSCCON1	set	14809
  2132  0000                     _IPR8bits	set	14728
  2133  0000                     _IPR9bits	set	14729
  2134  0000                     _IPR5bits	set	14725
  2135  0000                     _IPR1bits	set	14721
  2136  0000                     _IPR3bits	set	14723
  2137  0000                     _IPR6bits	set	14726
  2138  0000                     _IPR2bits	set	14722
  2139  0000                     _PIE5bits	set	14741
  2140  0000                     _PIE1bits	set	14737
  2141  0000                     _PIR5bits	set	14757
  2142  0000                     _PIR1bits	set	14753
  2143  0000                     _PLLR	set	118496
  2144  0000                     _SPI1SDIPPS	set	15071
  2145  0000                     _U1RXPPS	set	15077
  2146  0000                     _RC6PPS	set	14870
  2147  0000                     _RC5PPS	set	14869
  2148  0000                     _INT1PPS	set	15041
  2149  0000                     _RD1PPS	set	14873
  2150  0000                     _INT0PPS	set	15040
  2151  0000                     _RC3PPS	set	14867
  2152  0000                     _RB6PPS	set	14862
  2153  0000                     _SPI1SCKPPS	set	15070
  2154  0000                     _U2RXPPS	set	15080
  2155  0000                     _SLRCONF	set	14995
  2156  0000                     _SLRCONE	set	14979
  2157  0000                     _SLRCOND	set	14963
  2158  0000                     _SLRCONC	set	14947
  2159  0000                     _SLRCONB	set	14931
  2160  0000                     _SLRCONA	set	14915
  2161  0000                     _ODCOND	set	14962
  2162  0000                     _ODCONC	set	14946
  2163  0000                     _ODCONB	set	14930
  2164  0000                     _ODCONA	set	14914
  2165  0000                     _ODCONF	set	14994
  2166  0000                     _ODCONE	set	14978
  2167  0000                     _WPUC	set	14945
  2168  0000                     _WPUA	set	14913
  2169  0000                     _WPUB	set	14929
  2170  0000                     _WPUE	set	14977
  2171  0000                     _WPUF	set	14993
  2172  0000                     _WPUD	set	14961
  2173  0000                     _ANSELA	set	14912
  2174  0000                     _ANSELF	set	14992
  2175  0000                     _ANSELE	set	14976
  2176  0000                     _ANSELB	set	14928
  2177  0000                     _ANSELC	set	14944
  2178  0000                     _ANSELD	set	14960
  2179  0000                     _DMA2SSA	set	15321
  2180  0000                     _DMA1SSA	set	15353
  2181  0000                     _DMA2DSZ	set	15310
  2182  0000                     _DMA2SSZ	set	15319
  2183  0000                     _DMA2DSA	set	15312
  2184  0000                     _DMA1DSZ	set	15342
  2185  0000                     _DMA1SSZ	set	15351
  2186  0000                     _DMA1DSA	set	15344
  2187  0000                     _DMA2CON0bits	set	15324
  2188  0000                     _DMA2CON1bits	set	15325
  2189  0000                     _DMA1CON0bits	set	15356
  2190  0000                     _DMA1CON1bits	set	15357
  2191  0000                     _DMA2CON0	set	15324
  2192  0000                     _DMA2AIRQ	set	15326
  2193  0000                     _DMA2SIRQ	set	15327
  2194  0000                     _DMA2CON1	set	15325
  2195  0000                     _DMA1CON0	set	15356
  2196  0000                     _DMA1AIRQ	set	15358
  2197  0000                     _DMA1SIRQ	set	15359
  2198  0000                     _DMA1CON1	set	15357
  2199  0000                     _CLKRCON	set	15589
  2200  0000                     _CLKRCLK	set	15590
  2201  0000                     _SPI1CON1bits	set	15637
  2202  0000                     _SPI1STATUSbits	set	15639
  2203  0000                     _SPI1INTFbits	set	15642
  2204  0000                     _SPI1CON0bits	set	15636
  2205  0000                     _SPI1RXB	set	15632
  2206  0000                     _SPI1TXB	set	15633
  2207  0000                     _SPI1TCNTL	set	15634
  2208  0000                     _SPI1CON0	set	15636
  2209  0000                     _SPI1CLK	set	15644
  2210  0000                     _SPI1BAUD	set	15641
  2211  0000                     _SPI1CON2	set	15638
  2212  0000                     _SPI1CON1	set	15637
  2213  0000                     _U2RXB	set	15824
  2214  0000                     _U2TXB	set	15826
  2215  0000                     _U2ERRIE	set	15842
  2216  0000                     _U2ERRIR	set	15841
  2217  0000                     _U2UIR	set	15840
  2218  0000                     _U2FIFO	set	15839
  2219  0000                     _U2BRGH	set	15838
  2220  0000                     _U2BRGL	set	15837
  2221  0000                     _U2CON2	set	15836
  2222  0000                     _U2CON1	set	15835
  2223  0000                     _U2CON0	set	15834
  2224  0000                     _U2P3L	set	15832
  2225  0000                     _U2P2L	set	15830
  2226  0000                     _U2P1L	set	15828
  2227  0000                     _U1RXB	set	15848
  2228  0000                     _U1ERRIE	set	15866
  2229  0000                     _U1ERRIR	set	15865
  2230  0000                     _U1UIR	set	15864
  2231  0000                     _U1FIFO	set	15863
  2232  0000                     _U1BRGH	set	15862
  2233  0000                     _U1BRGL	set	15861
  2234  0000                     _U1CON2	set	15860
  2235  0000                     _U1CON1	set	15859
  2236  0000                     _U1CON0	set	15858
  2237  0000                     _U1P3H	set	15857
  2238  0000                     _U1P3L	set	15856
  2239  0000                     _U1P2H	set	15855
  2240  0000                     _U1P2L	set	15854
  2241  0000                     _U1P1H	set	15853
  2242  0000                     _U1P1L	set	15852
  2243  0000                     _FVRCON	set	16065
  2244  0000                     _ADFLTRL	set	16102
  2245  0000                     _ADFLTRH	set	16103
  2246  0000                     _ADCON0bits	set	16120
  2247  0000                     _ADCON0	set	16120
  2248  0000                     _ADCLK	set	16127
  2249  0000                     _ADACT	set	16126
  2250  0000                     _ADREF	set	16125
  2251  0000                     _ADSTAT	set	16124
  2252  0000                     _ADCON3	set	16123
  2253  0000                     _ADCON2	set	16122
  2254  0000                     _ADCON1	set	16121
  2255  0000                     _ADPREH	set	16119
  2256  0000                     _ADPREL	set	16118
  2257  0000                     _ADCAP	set	16117
  2258  0000                     _ADACQH	set	16116
  2259  0000                     _ADACQL	set	16115
  2260  0000                     _ADPCH	set	16113
  2261  0000                     _ADRPT	set	16108
  2262  0000                     _ADACCU	set	16106
  2263  0000                     _ADSTPTH	set	16101
  2264  0000                     _ADSTPTL	set	16100
  2265  0000                     _ADUTHH	set	16097
  2266  0000                     _ADUTHL	set	16096
  2267  0000                     _ADLTHH	set	16095
  2268  0000                     _ADLTHL	set	16094
  2269  0000                     _CCPTMRS1bits	set	16223
  2270  0000                     _PORTDbits	set	16333
  2271  0000                     _PORTFbits	set	16335
  2272  0000                     _LATFbits	set	16319
  2273  0000                     _LATCbits	set	16316
  2274  0000                     _LATDbits	set	16317
  2275  0000                     _PORTBbits	set	16331
  2276  0000                     _T3CONbits	set	16294
  2277  0000                     _T3CON	set	16294
  2278  0000                     _TMR3L	set	16292
  2279  0000                     _TMR3H	set	16293
  2280  0000                     _T3CLK	set	16297
  2281  0000                     _T3GATE	set	16296
  2282  0000                     _T3GCON	set	16295
  2283  0000                     _T2CON	set	16300
  2284  0000                     _T2TMR	set	16298
  2285  0000                     _T2PR	set	16299
  2286  0000                     _T2RST	set	16303
  2287  0000                     _T2HLT	set	16301
  2288  0000                     _T2CLKCON	set	16302
  2289  0000                     _PWM8DCL	set	16224
  2290  0000                     _PWM8DCH	set	16225
  2291  0000                     _PWM8CON	set	16226
  2292  0000                     _LATEbits	set	16318
  2293  0000                     _T5CONbits	set	16282
  2294  0000                     _T5CON	set	16282
  2295  0000                     _TMR5L	set	16280
  2296  0000                     _TMR5H	set	16281
  2297  0000                     _T5CLK	set	16285
  2298  0000                     _T5GATE	set	16284
  2299  0000                     _T5GCON	set	16283
  2300  0000                     _T6CON	set	16276
  2301  0000                     _T6TMR	set	16274
  2302  0000                     _T6PR	set	16275
  2303  0000                     _T6RST	set	16279
  2304  0000                     _T6HLT	set	16277
  2305  0000                     _T6CLKCON	set	16278
  2306  0000                     _TRISD	set	16325
  2307  0000                     _TRISC	set	16324
  2308  0000                     _TRISB	set	16323
  2309  0000                     _TRISA	set	16322
  2310  0000                     _TRISF	set	16327
  2311  0000                     _TRISE	set	16326
  2312  0000                     _LATC	set	16316
  2313  0000                     _LATB	set	16315
  2314  0000                     _LATF	set	16319
  2315  0000                     _LATA	set	16314
  2316  0000                     _LATD	set	16317
  2317  0000                     _LATE	set	16318
  2318  0000                     _IVTLOCKbits	set	16340
  2319  0000                     _IVTLOCK	set	16340
  2320  0000                     _INTCON0bits	set	16338
  2321  0000                     _GIE	set	130711
  2322  00FAF9                     STR_78:
  2323                           
  2324                           ; BSR set to: 57
  2325  00FAF9  20                 	db	32
  2326  00FAFA  25                 	db	37
  2327  00FAFB  63                 	db	99	;'c'
  2328  00FAFC  20                 	db	32
  2329  00FAFD  2C                 	db	44
  2330  00FAFE  25                 	db	37
  2331  00FAFF  6C                 	db	108	;'l'
  2332  00FB00  75                 	db	117	;'u'
  2333  00FB01  2C                 	db	44
  2334  00FB02  25                 	db	37
  2335  00FB03  34                 	db	52	;'4'
  2336  00FB04  2E                 	db	46
  2337  00FB05  34                 	db	52	;'4'
  2338  00FB06  66                 	db	102	;'f'
  2339  00FB07  2C                 	db	44
  2340  00FB08  25                 	db	37
  2341  00FB09  34                 	db	52	;'4'
  2342  00FB0A  2E                 	db	46
  2343  00FB0B  34                 	db	52	;'4'
  2344  00FB0C  66                 	db	102	;'f'
  2345  00FB0D  2C                 	db	44
  2346  00FB0E  25                 	db	37
  2347  00FB0F  34                 	db	52	;'4'
  2348  00FB10  2E                 	db	46
  2349  00FB11  34                 	db	52	;'4'
  2350  00FB12  66                 	db	102	;'f'
  2351  00FB13  2C                 	db	44
  2352  00FB14  25                 	db	37
  2353  00FB15  34                 	db	52	;'4'
  2354  00FB16  2E                 	db	46
  2355  00FB17  34                 	db	52	;'4'
  2356  00FB18  66                 	db	102	;'f'
  2357  00FB19  2C                 	db	44
  2358  00FB1A  25                 	db	37
  2359  00FB1B  34                 	db	52	;'4'
  2360  00FB1C  2E                 	db	46
  2361  00FB1D  34                 	db	52	;'4'
  2362  00FB1E  66                 	db	102	;'f'
  2363  00FB1F  2C                 	db	44
  2364  00FB20  25                 	db	37
  2365  00FB21  34                 	db	52	;'4'
  2366  00FB22  2E                 	db	46
  2367  00FB23  33                 	db	51	;'3'
  2368  00FB24  66                 	db	102	;'f'
  2369  00FB25  2C                 	db	44
  2370  00FB26  25                 	db	37
  2371  00FB27  34                 	db	52	;'4'
  2372  00FB28  2E                 	db	46
  2373  00FB29  33                 	db	51	;'3'
  2374  00FB2A  66                 	db	102	;'f'
  2375  00FB2B  2C                 	db	44
  2376  00FB2C  25                 	db	37
  2377  00FB2D  34                 	db	52	;'4'
  2378  00FB2E  2E                 	db	46
  2379  00FB2F  33                 	db	51	;'3'
  2380  00FB30  66                 	db	102	;'f'
  2381  00FB31  2C                 	db	44
  2382  00FB32  25                 	db	37
  2383  00FB33  34                 	db	52	;'4'
  2384  00FB34  2E                 	db	46
  2385  00FB35  33                 	db	51	;'3'
  2386  00FB36  66                 	db	102	;'f'
  2387  00FB37  2C                 	db	44
  2388  00FB38  25                 	db	37
  2389  00FB39  34                 	db	52	;'4'
  2390  00FB3A  2E                 	db	46
  2391  00FB3B  33                 	db	51	;'3'
  2392  00FB3C  66                 	db	102	;'f'
  2393  00FB3D  2C                 	db	44
  2394  00FB3E  25                 	db	37
  2395  00FB3F  34                 	db	52	;'4'
  2396  00FB40  2E                 	db	46
  2397  00FB41  33                 	db	51	;'3'
  2398  00FB42  66                 	db	102	;'f'
  2399  00FB43  2C                 	db	44
  2400  00FB44  25                 	db	37
  2401  00FB45  64                 	db	100	;'d'
  2402  00FB46  2C                 	db	44
  2403  00FB47  25                 	db	37
  2404  00FB48  64                 	db	100	;'d'
  2405  00FB49  2C                 	db	44
  2406  00FB4A  25                 	db	37
  2407  00FB4B  32                 	db	50	;'2'
  2408  00FB4C  2E                 	db	46
  2409  00FB4D  36                 	db	54	;'6'
  2410  00FB4E  66                 	db	102	;'f'
  2411  00FB4F  2C                 	db	44
  2412  00FB50  25                 	db	37
  2413  00FB51  34                 	db	52	;'4'
  2414  00FB52  2E                 	db	46
  2415  00FB53  33                 	db	51	;'3'
  2416  00FB54  66                 	db	102	;'f'
  2417  00FB55  2C                 	db	44
  2418  00FB56  25                 	db	37
  2419  00FB57  64                 	db	100	;'d'
  2420  00FB58  2C                 	db	44
  2421  00FB59  25                 	db	37
  2422  00FB5A  64                 	db	100	;'d'
  2423  00FB5B  2C                 	db	44
  2424  00FB5C  25                 	db	37
  2425  00FB5D  6C                 	db	108	;'l'
  2426  00FB5E  75                 	db	117	;'u'
  2427  00FB5F  2C                 	db	44
  2428  00FB60  25                 	db	37
  2429  00FB61  6C                 	db	108	;'l'
  2430  00FB62  75                 	db	117	;'u'
  2431  00FB63  2C                 	db	44
  2432  00FB64  25                 	db	37
  2433  00FB65  34                 	db	52	;'4'
  2434  00FB66  2E                 	db	46
  2435  00FB67  33                 	db	51	;'3'
  2436  00FB68  66                 	db	102	;'f'
  2437  00FB69  2C                 	db	44
  2438  00FB6A  25                 	db	37
  2439  00FB6B  34                 	db	52	;'4'
  2440  00FB6C  2E                 	db	46
  2441  00FB6D  33                 	db	51	;'3'
  2442  00FB6E  66                 	db	102	;'f'
  2443  00FB6F  2C                 	db	44
  2444  00FB70  25                 	db	37
  2445  00FB71  34                 	db	52	;'4'
  2446  00FB72  2E                 	db	46
  2447  00FB73  33                 	db	51	;'3'
  2448  00FB74  66                 	db	102	;'f'
  2449  00FB75  0D                 	db	13
  2450  00FB76  0A                 	db	10
  2451  00FB77  00                 	db	0
  2452  00FB78                     STR_36:
  2453                           
  2454                           ; BSR set to: 57
  2455  00FB78  53                 	db	83	;'S'
  2456  00FB79  25                 	db	37
  2457  00FB7A  63                 	db	99	;'c'
  2458  00FB7B  43                 	db	67	;'C'
  2459  00FB7C  20                 	db	32
  2460  00FB7D  25                 	db	37
  2461  00FB7E  64                 	db	100	;'d'
  2462  00FB7F  20                 	db	32
  2463  00FB80  52                 	db	82	;'R'
  2464  00FB81  55                 	db	85	;'U'
  2465  00FB82  4E                 	db	78	;'N'
  2466  00FB83  20                 	db	32
  2467  00FB84  25                 	db	37
  2468  00FB85  64                 	db	100	;'d'
  2469  00FB86  20                 	db	32
  2470  00FB87  56                 	db	86	;'V'
  2471  00FB88  25                 	db	37
  2472  00FB89  32                 	db	50	;'2'
  2473  00FB8A  2E                 	db	46
  2474  00FB8B  32                 	db	50	;'2'
  2475  00FB8C  66                 	db	102	;'f'
  2476  00FB8D  20                 	db	32
  2477  00FB8E  20                 	db	32
  2478  00FB8F  20                 	db	32
  2479  00FB90  20                 	db	32
  2480  00FB91  20                 	db	32
  2481  00FB92  20                 	db	32
  2482  00FB93  20                 	db	32
  2483  00FB94  00                 	db	0
  2484  00FB95                     STR_17:
  2485                           
  2486                           ; BSR set to: 57
  2487  00FB95  52                 	db	82	;'R'
  2488  00FB96  31                 	db	49	;'1'
  2489  00FB97  20                 	db	32
  2490  00FB98  25                 	db	37
  2491  00FB99  32                 	db	50	;'2'
  2492  00FB9A  2E                 	db	46
  2493  00FB9B  33                 	db	51	;'3'
  2494  00FB9C  66                 	db	102	;'f'
  2495  00FB9D  20                 	db	32
  2496  00FB9E  25                 	db	37
  2497  00FB9F  33                 	db	51	;'3'
  2498  00FBA0  2E                 	db	46
  2499  00FBA1  34                 	db	52	;'4'
  2500  00FBA2  66                 	db	102	;'f'
  2501  00FBA3  20                 	db	32
  2502  00FBA4  20                 	db	32
  2503  00FBA5  20                 	db	32
  2504  00FBA6  20                 	db	32
  2505  00FBA7  20                 	db	32
  2506  00FBA8  20                 	db	32
  2507  00FBA9  20                 	db	32
  2508  00FBAA  20                 	db	32
  2509  00FBAB  20                 	db	32
  2510  00FBAC  20                 	db	32
  2511  00FBAD  20                 	db	32
  2512  00FBAE  00                 	db	0
  2513  00FBAF                     STR_18:
  2514                           
  2515                           ; BSR set to: 57
  2516  00FBAF  52                 	db	82	;'R'
  2517  00FBB0  32                 	db	50	;'2'
  2518  00FBB1  20                 	db	32
  2519  00FBB2  25                 	db	37
  2520  00FBB3  32                 	db	50	;'2'
  2521  00FBB4  2E                 	db	46
  2522  00FBB5  33                 	db	51	;'3'
  2523  00FBB6  66                 	db	102	;'f'
  2524  00FBB7  20                 	db	32
  2525  00FBB8  25                 	db	37
  2526  00FBB9  33                 	db	51	;'3'
  2527  00FBBA  2E                 	db	46
  2528  00FBBB  34                 	db	52	;'4'
  2529  00FBBC  66                 	db	102	;'f'
  2530  00FBBD  20                 	db	32
  2531  00FBBE  20                 	db	32
  2532  00FBBF  20                 	db	32
  2533  00FBC0  20                 	db	32
  2534  00FBC1  20                 	db	32
  2535  00FBC2  20                 	db	32
  2536  00FBC3  20                 	db	32
  2537  00FBC4  20                 	db	32
  2538  00FBC5  20                 	db	32
  2539  00FBC6  20                 	db	32
  2540  00FBC7  20                 	db	32
  2541  00FBC8  00                 	db	0
  2542  00FBC9                     STR_9:
  2543                           
  2544                           ; BSR set to: 57
  2545  00FBC9  53                 	db	83	;'S'
  2546  00FBCA  20                 	db	32
  2547  00FBCB  53                 	db	83	;'S'
  2548  00FBCC  25                 	db	37
  2549  00FBCD  63                 	db	99	;'c'
  2550  00FBCE  43                 	db	67	;'C'
  2551  00FBCF  20                 	db	32
  2552  00FBD0  25                 	db	37
  2553  00FBD1  64                 	db	100	;'d'
  2554  00FBD2  20                 	db	32
  2555  00FBD3  25                 	db	37
  2556  00FBD4  32                 	db	50	;'2'
  2557  00FBD5  2E                 	db	46
  2558  00FBD6  34                 	db	52	;'4'
  2559  00FBD7  66                 	db	102	;'f'
  2560  00FBD8  20                 	db	32
  2561  00FBD9  20                 	db	32
  2562  00FBDA  20                 	db	32
  2563  00FBDB  20                 	db	32
  2564  00FBDC  20                 	db	32
  2565  00FBDD  20                 	db	32
  2566  00FBDE  20                 	db	32
  2567  00FBDF  20                 	db	32
  2568  00FBE0  20                 	db	32
  2569  00FBE1  20                 	db	32
  2570  00FBE2  00                 	db	0
  2571  00FBE3                     
  2572                           ; BSR set to: 57
  2573  00FBE3  20                 	db	32
  2574  00FBE4  4D                 	db	77	;'M'
  2575  00FBE5  65                 	db	101	;'e'
  2576  00FBE6  73                 	db	115	;'s'
  2577  00FBE7  67                 	db	103	;'g'
  2578  00FBE8  20                 	db	32
  2579  00FBE9  25                 	db	37
  2580  00FBEA  64                 	db	100	;'d'
  2581  00FBEB  20                 	db	32
  2582  00FBEC  53                 	db	83	;'S'
  2583  00FBED  74                 	db	116	;'t'
  2584  00FBEE  61                 	db	97	;'a'
  2585  00FBEF  63                 	db	99	;'c'
  2586  00FBF0  6B                 	db	107	;'k'
  2587  00FBF1  20                 	db	32
  2588  00FBF2  25                 	db	37
  2589  00FBF3  64                 	db	100	;'d'
  2590  00FBF4  20                 	db	32
  2591  00FBF5  20                 	db	32
  2592  00FBF6  20                 	db	32
  2593  00FBF7  20                 	db	32
  2594  00FBF8  20                 	db	32
  2595  00FBF9  20                 	db	32
  2596  00FBFA  00                 	db	0
  2597  00FBFB                     STR_37:
  2598                           
  2599                           ; BSR set to: 57
  2600  00FBFB  45                 	db	69	;'E'
  2601  00FBFC  53                 	db	83	;'S'
  2602  00FBFD  52                 	db	82	;'R'
  2603  00FBFE  20                 	db	32
  2604  00FBFF  20                 	db	32
  2605  00FC00  25                 	db	37
  2606  00FC01  32                 	db	50	;'2'
  2607  00FC02  2E                 	db	46
  2608  00FC03  36                 	db	54	;'6'
  2609  00FC04  66                 	db	102	;'f'
  2610  00FC05  20                 	db	32
  2611  00FC06  20                 	db	32
  2612  00FC07  20                 	db	32
  2613  00FC08  20                 	db	32
  2614  00FC09  20                 	db	32
  2615  00FC0A  20                 	db	32
  2616  00FC0B  20                 	db	32
  2617  00FC0C  20                 	db	32
  2618  00FC0D  20                 	db	32
  2619  00FC0E  20                 	db	32
  2620  00FC0F  20                 	db	32
  2621  00FC10  20                 	db	32
  2622  00FC11  00                 	db	0
  2623  00FC12                     STR_34:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FC12  42                 	db	66	;'B'
  2627  00FC13  41                 	db	65	;'A'
  2628  00FC14  54                 	db	84	;'T'
  2629  00FC15  54                 	db	84	;'T'
  2630  00FC16  20                 	db	32
  2631  00FC17  50                 	db	80	;'P'
  2632  00FC18  57                 	db	87	;'W'
  2633  00FC19  52                 	db	82	;'R'
  2634  00FC1A  20                 	db	32
  2635  00FC1B  25                 	db	37
  2636  00FC1C  33                 	db	51	;'3'
  2637  00FC1D  2E                 	db	46
  2638  00FC1E  32                 	db	50	;'2'
  2639  00FC1F  66                 	db	102	;'f'
  2640  00FC20  20                 	db	32
  2641  00FC21  20                 	db	32
  2642  00FC22  20                 	db	32
  2643  00FC23  20                 	db	32
  2644  00FC24  20                 	db	32
  2645  00FC25  20                 	db	32
  2646  00FC26  20                 	db	32
  2647  00FC27  20                 	db	32
  2648  00FC28  00                 	db	0
  2649  00FC29                     STR_38:
  2650                           
  2651                           ; BSR set to: 57
  2652  00FC29  52                 	db	82	;'R'
  2653  00FC2A  31                 	db	49	;'1'
  2654  00FC2B  20                 	db	32
  2655  00FC2C  25                 	db	37
  2656  00FC2D  32                 	db	50	;'2'
  2657  00FC2E  2E                 	db	46
  2658  00FC2F  33                 	db	51	;'3'
  2659  00FC30  66                 	db	102	;'f'
  2660  00FC31  20                 	db	32
  2661  00FC32  25                 	db	37
  2662  00FC33  33                 	db	51	;'3'
  2663  00FC34  2E                 	db	46
  2664  00FC35  34                 	db	52	;'4'
  2665  00FC36  66                 	db	102	;'f'
  2666  00FC37  20                 	db	32
  2667  00FC38  20                 	db	32
  2668  00FC39  20                 	db	32
  2669  00FC3A  20                 	db	32
  2670  00FC3B  20                 	db	32
  2671  00FC3C  20                 	db	32
  2672  00FC3D  20                 	db	32
  2673  00FC3E  20                 	db	32
  2674  00FC3F  00                 	db	0
  2675  00FC40                     STR_39:
  2676                           
  2677                           ; BSR set to: 57
  2678  00FC40  52                 	db	82	;'R'
  2679  00FC41  32                 	db	50	;'2'
  2680  00FC42  20                 	db	32
  2681  00FC43  25                 	db	37
  2682  00FC44  32                 	db	50	;'2'
  2683  00FC45  2E                 	db	46
  2684  00FC46  33                 	db	51	;'3'
  2685  00FC47  66                 	db	102	;'f'
  2686  00FC48  20                 	db	32
  2687  00FC49  25                 	db	37
  2688  00FC4A  33                 	db	51	;'3'
  2689  00FC4B  2E                 	db	46
  2690  00FC4C  34                 	db	52	;'4'
  2691  00FC4D  66                 	db	102	;'f'
  2692  00FC4E  20                 	db	32
  2693  00FC4F  20                 	db	32
  2694  00FC50  20                 	db	32
  2695  00FC51  20                 	db	32
  2696  00FC52  20                 	db	32
  2697  00FC53  20                 	db	32
  2698  00FC54  20                 	db	32
  2699  00FC55  20                 	db	32
  2700  00FC56  00                 	db	0
  2701  00FC57                     STR_35:
  2702                           
  2703                           ; BSR set to: 57
  2704  00FC57  42                 	db	66	;'B'
  2705  00FC58  41                 	db	65	;'A'
  2706  00FC59  48                 	db	72	;'H'
  2707  00FC5A  20                 	db	32
  2708  00FC5B  25                 	db	37
  2709  00FC5C  33                 	db	51	;'3'
  2710  00FC5D  2E                 	db	46
  2711  00FC5E  32                 	db	50	;'2'
  2712  00FC5F  66                 	db	102	;'f'
  2713  00FC60  20                 	db	32
  2714  00FC61  50                 	db	80	;'P'
  2715  00FC62  25                 	db	37
  2716  00FC63  33                 	db	51	;'3'
  2717  00FC64  2E                 	db	46
  2718  00FC65  32                 	db	50	;'2'
  2719  00FC66  66                 	db	102	;'f'
  2720  00FC67  20                 	db	32
  2721  00FC68  20                 	db	32
  2722  00FC69  20                 	db	32
  2723  00FC6A  20                 	db	32
  2724  00FC6B  20                 	db	32
  2725  00FC6C  20                 	db	32
  2726  00FC6D  00                 	db	0
  2727  00FC6E                     STR_16:
  2728                           
  2729                           ; BSR set to: 57
  2730  00FC6E  45                 	db	69	;'E'
  2731  00FC6F  53                 	db	83	;'S'
  2732  00FC70  52                 	db	82	;'R'
  2733  00FC71  20                 	db	32
  2734  00FC72  20                 	db	32
  2735  00FC73  25                 	db	37
  2736  00FC74  32                 	db	50	;'2'
  2737  00FC75  2E                 	db	46
  2738  00FC76  36                 	db	54	;'6'
  2739  00FC77  66                 	db	102	;'f'
  2740  00FC78  20                 	db	32
  2741  00FC79  20                 	db	32
  2742  00FC7A  20                 	db	32
  2743  00FC7B  20                 	db	32
  2744  00FC7C  20                 	db	32
  2745  00FC7D  20                 	db	32
  2746  00FC7E  20                 	db	32
  2747  00FC7F  20                 	db	32
  2748  00FC80  20                 	db	32
  2749  00FC81  20                 	db	32
  2750  00FC82  20                 	db	32
  2751  00FC83  00                 	db	0
  2752  00FC84                     STR_10:
  2753                           
  2754                           ; BSR set to: 57
  2755  00FC84  53                 	db	83	;'S'
  2756  00FC85  74                 	db	116	;'t'
  2757  00FC86  61                 	db	97	;'a'
  2758  00FC87  74                 	db	116	;'t'
  2759  00FC88  69                 	db	105	;'i'
  2760  00FC89  63                 	db	99	;'c'
  2761  00FC8A  20                 	db	32
  2762  00FC8B  53                 	db	83	;'S'
  2763  00FC8C  4F                 	db	79	;'O'
  2764  00FC8D  43                 	db	67	;'C'
  2765  00FC8E  20                 	db	32
  2766  00FC8F  25                 	db	37
  2767  00FC90  64                 	db	100	;'d'
  2768  00FC91  20                 	db	32
  2769  00FC92  20                 	db	32
  2770  00FC93  20                 	db	32
  2771  00FC94  20                 	db	32
  2772  00FC95  20                 	db	32
  2773  00FC96  20                 	db	32
  2774  00FC97  20                 	db	32
  2775  00FC98  20                 	db	32
  2776  00FC99  00                 	db	0
  2777  00FC9A                     STR_31:
  2778                           
  2779                           ; BSR set to: 57
  2780  00FC9A  42                 	db	66	;'B'
  2781  00FC9B  41                 	db	65	;'A'
  2782  00FC9C  54                 	db	84	;'T'
  2783  00FC9D  20                 	db	32
  2784  00FC9E  49                 	db	73	;'I'
  2785  00FC9F  57                 	db	87	;'W'
  2786  00FCA0  48                 	db	72	;'H'
  2787  00FCA1  20                 	db	32
  2788  00FCA2  25                 	db	37
  2789  00FCA3  34                 	db	52	;'4'
  2790  00FCA4  2E                 	db	46
  2791  00FCA5  31                 	db	49	;'1'
  2792  00FCA6  66                 	db	102	;'f'
  2793  00FCA7  20                 	db	32
  2794  00FCA8  20                 	db	32
  2795  00FCA9  20                 	db	32
  2796  00FCAA  20                 	db	32
  2797  00FCAB  20                 	db	32
  2798  00FCAC  20                 	db	32
  2799  00FCAD  20                 	db	32
  2800  00FCAE  20                 	db	32
  2801  00FCAF  00                 	db	0
  2802  00FCB0                     STR_32:
  2803                           
  2804                           ; BSR set to: 57
  2805  00FCB0  42                 	db	66	;'B'
  2806  00FCB1  41                 	db	65	;'A'
  2807  00FCB2  54                 	db	84	;'T'
  2808  00FCB3  20                 	db	32
  2809  00FCB4  4F                 	db	79	;'O'
  2810  00FCB5  57                 	db	87	;'W'
  2811  00FCB6  48                 	db	72	;'H'
  2812  00FCB7  20                 	db	32
  2813  00FCB8  25                 	db	37
  2814  00FCB9  34                 	db	52	;'4'
  2815  00FCBA  2E                 	db	46
  2816  00FCBB  31                 	db	49	;'1'
  2817  00FCBC  66                 	db	102	;'f'
  2818  00FCBD  20                 	db	32
  2819  00FCBE  20                 	db	32
  2820  00FCBF  20                 	db	32
  2821  00FCC0  20                 	db	32
  2822  00FCC1  20                 	db	32
  2823  00FCC2  20                 	db	32
  2824  00FCC3  20                 	db	32
  2825  00FCC4  20                 	db	32
  2826  00FCC5  00                 	db	0
  2827  00FCC6                     STR_33:
  2828                           
  2829                           ; BSR set to: 57
  2830  00FCC6  42                 	db	66	;'B'
  2831  00FCC7  41                 	db	65	;'A'
  2832  00FCC8  54                 	db	84	;'T'
  2833  00FCC9  20                 	db	32
  2834  00FCCA  54                 	db	84	;'T'
  2835  00FCCB  57                 	db	87	;'W'
  2836  00FCCC  48                 	db	72	;'H'
  2837  00FCCD  20                 	db	32
  2838  00FCCE  25                 	db	37
  2839  00FCCF  34                 	db	52	;'4'
  2840  00FCD0  2E                 	db	46
  2841  00FCD1  31                 	db	49	;'1'
  2842  00FCD2  66                 	db	102	;'f'
  2843  00FCD3  20                 	db	32
  2844  00FCD4  20                 	db	32
  2845  00FCD5  20                 	db	32
  2846  00FCD6  20                 	db	32
  2847  00FCD7  20                 	db	32
  2848  00FCD8  20                 	db	32
  2849  00FCD9  20                 	db	32
  2850  00FCDA  20                 	db	32
  2851  00FCDB  00                 	db	0
  2852  00FCDC                     STR_27:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FCDC  49                 	db	73	;'I'
  2856  00FCDD  4E                 	db	78	;'N'
  2857  00FCDE  56                 	db	86	;'V'
  2858  00FCDF  20                 	db	32
  2859  00FCE0  20                 	db	32
  2860  00FCE1  57                 	db	87	;'W'
  2861  00FCE2  48                 	db	72	;'H'
  2862  00FCE3  20                 	db	32
  2863  00FCE4  25                 	db	37
  2864  00FCE5  33                 	db	51	;'3'
  2865  00FCE6  2E                 	db	46
  2866  00FCE7  32                 	db	50	;'2'
  2867  00FCE8  66                 	db	102	;'f'
  2868  00FCE9  20                 	db	32
  2869  00FCEA  20                 	db	32
  2870  00FCEB  20                 	db	32
  2871  00FCEC  20                 	db	32
  2872  00FCED  20                 	db	32
  2873  00FCEE  20                 	db	32
  2874  00FCEF  20                 	db	32
  2875  00FCF0  20                 	db	32
  2876  00FCF1  00                 	db	0
  2877  00FCF2                     STR_26:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FCF2  4C                 	db	76	;'L'
  2881  00FCF3  4F                 	db	79	;'O'
  2882  00FCF4  41                 	db	65	;'A'
  2883  00FCF5  44                 	db	68	;'D'
  2884  00FCF6  20                 	db	32
  2885  00FCF7  57                 	db	87	;'W'
  2886  00FCF8  48                 	db	72	;'H'
  2887  00FCF9  20                 	db	32
  2888  00FCFA  25                 	db	37
  2889  00FCFB  33                 	db	51	;'3'
  2890  00FCFC  2E                 	db	46
  2891  00FCFD  32                 	db	50	;'2'
  2892  00FCFE  66                 	db	102	;'f'
  2893  00FCFF  20                 	db	32
  2894  00FD00  20                 	db	32
  2895  00FD01  20                 	db	32
  2896  00FD02  20                 	db	32
  2897  00FD03  20                 	db	32
  2898  00FD04  20                 	db	32
  2899  00FD05  20                 	db	32
  2900  00FD06  20                 	db	32
  2901  00FD07  00                 	db	0
  2902  00FD08                     STR_25:
  2903                           
  2904                           ; BSR set to: 57
  2905  00FD08  50                 	db	80	;'P'
  2906  00FD09  56                 	db	86	;'V'
  2907  00FD0A  20                 	db	32
  2908  00FD0B  25                 	db	37
  2909  00FD0C  63                 	db	99	;'c'
  2910  00FD0D  20                 	db	32
  2911  00FD0E  57                 	db	87	;'W'
  2912  00FD0F  48                 	db	72	;'H'
  2913  00FD10  20                 	db	32
  2914  00FD11  25                 	db	37
  2915  00FD12  33                 	db	51	;'3'
  2916  00FD13  2E                 	db	46
  2917  00FD14  32                 	db	50	;'2'
  2918  00FD15  66                 	db	102	;'f'
  2919  00FD16  20                 	db	32
  2920  00FD17  20                 	db	32
  2921  00FD18  20                 	db	32
  2922  00FD19  20                 	db	32
  2923  00FD1A  20                 	db	32
  2924  00FD1B  20                 	db	32
  2925  00FD1C  20                 	db	32
  2926  00FD1D  00                 	db	0
  2927  00FD1E                     STR_24:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FD1E  49                 	db	73	;'I'
  2931  00FD1F  4E                 	db	78	;'N'
  2932  00FD20  56                 	db	86	;'V'
  2933  00FD21  20                 	db	32
  2934  00FD22  20                 	db	32
  2935  00FD23  50                 	db	80	;'P'
  2936  00FD24  57                 	db	87	;'W'
  2937  00FD25  52                 	db	82	;'R'
  2938  00FD26  20                 	db	32
  2939  00FD27  25                 	db	37
  2940  00FD28  33                 	db	51	;'3'
  2941  00FD29  2E                 	db	46
  2942  00FD2A  32                 	db	50	;'2'
  2943  00FD2B  66                 	db	102	;'f'
  2944  00FD2C  20                 	db	32
  2945  00FD2D  20                 	db	32
  2946  00FD2E  20                 	db	32
  2947  00FD2F  20                 	db	32
  2948  00FD30  20                 	db	32
  2949  00FD31  20                 	db	32
  2950  00FD32  20                 	db	32
  2951  00FD33  00                 	db	0
  2952  00FD34                     STR_23:
  2953                           
  2954                           ; BSR set to: 57
  2955  00FD34  4C                 	db	76	;'L'
  2956  00FD35  4F                 	db	79	;'O'
  2957  00FD36  41                 	db	65	;'A'
  2958  00FD37  44                 	db	68	;'D'
  2959  00FD38  20                 	db	32
  2960  00FD39  50                 	db	80	;'P'
  2961  00FD3A  57                 	db	87	;'W'
  2962  00FD3B  52                 	db	82	;'R'
  2963  00FD3C  20                 	db	32
  2964  00FD3D  25                 	db	37
  2965  00FD3E  33                 	db	51	;'3'
  2966  00FD3F  2E                 	db	46
  2967  00FD40  32                 	db	50	;'2'
  2968  00FD41  66                 	db	102	;'f'
  2969  00FD42  20                 	db	32
  2970  00FD43  20                 	db	32
  2971  00FD44  20                 	db	32
  2972  00FD45  20                 	db	32
  2973  00FD46  20                 	db	32
  2974  00FD47  20                 	db	32
  2975  00FD48  20                 	db	32
  2976  00FD49  00                 	db	0
  2977  00FD4A                     STR_22:
  2978                           
  2979                           ; BSR set to: 57
  2980  00FD4A  50                 	db	80	;'P'
  2981  00FD4B  56                 	db	86	;'V'
  2982  00FD4C  20                 	db	32
  2983  00FD4D  25                 	db	37
  2984  00FD4E  63                 	db	99	;'c'
  2985  00FD4F  20                 	db	32
  2986  00FD50  50                 	db	80	;'P'
  2987  00FD51  57                 	db	87	;'W'
  2988  00FD52  52                 	db	82	;'R'
  2989  00FD53  20                 	db	32
  2990  00FD54  25                 	db	37
  2991  00FD55  33                 	db	51	;'3'
  2992  00FD56  2E                 	db	46
  2993  00FD57  32                 	db	50	;'2'
  2994  00FD58  66                 	db	102	;'f'
  2995  00FD59  20                 	db	32
  2996  00FD5A  20                 	db	32
  2997  00FD5B  20                 	db	32
  2998  00FD5C  20                 	db	32
  2999  00FD5D  20                 	db	32
  3000  00FD5E  20                 	db	32
  3001  00FD5F  00                 	db	0
  3002  00FD60                     STR_11:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FD60  42                 	db	66	;'B'
  3006  00FD61  61                 	db	97	;'a'
  3007  00FD62  74                 	db	116	;'t'
  3008  00FD63  74                 	db	116	;'t'
  3009  00FD64  65                 	db	101	;'e'
  3010  00FD65  72                 	db	114	;'r'
  3011  00FD66  79                 	db	121	;'y'
  3012  00FD67  20                 	db	32
  3013  00FD68  41                 	db	65	;'A'
  3014  00FD69  68                 	db	104	;'h'
  3015  00FD6A  20                 	db	32
  3016  00FD6B  25                 	db	37
  3017  00FD6C  33                 	db	51	;'3'
  3018  00FD6D  2E                 	db	46
  3019  00FD6E  32                 	db	50	;'2'
  3020  00FD6F  66                 	db	102	;'f'
  3021  00FD70  20                 	db	32
  3022  00FD71  20                 	db	32
  3023  00FD72  20                 	db	32
  3024  00FD73  20                 	db	32
  3025  00FD74  20                 	db	32
  3026  00FD75  00                 	db	0
  3027  00FD76                     STR_29:
  3028                           
  3029                           ; BSR set to: 57
  3030  00FD76  42                 	db	66	;'B'
  3031  00FD77  56                 	db	86	;'V'
  3032  00FD78  20                 	db	32
  3033  00FD79  25                 	db	37
  3034  00FD7A  32                 	db	50	;'2'
  3035  00FD7B  2E                 	db	46
  3036  00FD7C  32                 	db	50	;'2'
  3037  00FD7D  66                 	db	102	;'f'
  3038  00FD7E  20                 	db	32
  3039  00FD7F  42                 	db	66	;'B'
  3040  00FD80  41                 	db	65	;'A'
  3041  00FD81  20                 	db	32
  3042  00FD82  25                 	db	37
  3043  00FD83  32                 	db	50	;'2'
  3044  00FD84  2E                 	db	46
  3045  00FD85  32                 	db	50	;'2'
  3046  00FD86  66                 	db	102	;'f'
  3047  00FD87  20                 	db	32
  3048  00FD88  20                 	db	32
  3049  00FD89  20                 	db	32
  3050  00FD8A  20                 	db	32
  3051  00FD8B  00                 	db	0
  3052  00FD8C                     STR_30:
  3053                           
  3054                           ; BSR set to: 57
  3055  00FD8C  43                 	db	67	;'C'
  3056  00FD8D  56                 	db	86	;'V'
  3057  00FD8E  20                 	db	32
  3058  00FD8F  25                 	db	37
  3059  00FD90  32                 	db	50	;'2'
  3060  00FD91  2E                 	db	46
  3061  00FD92  32                 	db	50	;'2'
  3062  00FD93  66                 	db	102	;'f'
  3063  00FD94  20                 	db	32
  3064  00FD95  4C                 	db	76	;'L'
  3065  00FD96  41                 	db	65	;'A'
  3066  00FD97  20                 	db	32
  3067  00FD98  25                 	db	37
  3068  00FD99  32                 	db	50	;'2'
  3069  00FD9A  2E                 	db	46
  3070  00FD9B  32                 	db	50	;'2'
  3071  00FD9C  66                 	db	102	;'f'
  3072  00FD9D  20                 	db	32
  3073  00FD9E  20                 	db	32
  3074  00FD9F  20                 	db	32
  3075  00FDA0  20                 	db	32
  3076  00FDA1  00                 	db	0
  3077  00FDA2                     STR_28:
  3078                           
  3079                           ; BSR set to: 57
  3080  00FDA2  50                 	db	80	;'P'
  3081  00FDA3  56                 	db	86	;'V'
  3082  00FDA4  20                 	db	32
  3083  00FDA5  25                 	db	37
  3084  00FDA6  32                 	db	50	;'2'
  3085  00FDA7  2E                 	db	46
  3086  00FDA8  32                 	db	50	;'2'
  3087  00FDA9  66                 	db	102	;'f'
  3088  00FDAA  20                 	db	32
  3089  00FDAB  50                 	db	80	;'P'
  3090  00FDAC  41                 	db	65	;'A'
  3091  00FDAD  20                 	db	32
  3092  00FDAE  25                 	db	37
  3093  00FDAF  32                 	db	50	;'2'
  3094  00FDB0  2E                 	db	46
  3095  00FDB1  32                 	db	50	;'2'
  3096  00FDB2  66                 	db	102	;'f'
  3097  00FDB3  20                 	db	32
  3098  00FDB4  20                 	db	32
  3099  00FDB5  20                 	db	32
  3100  00FDB6  20                 	db	32
  3101  00FDB7  00                 	db	0
  3102  00FDB8                     STR_40:
  3103                           
  3104                           ; BSR set to: 57
  3105  00FDB8  25                 	db	37
  3106  00FDB9  64                 	db	100	;'d'
  3107  00FDBA  20                 	db	32
  3108  00FDBB  25                 	db	37
  3109  00FDBC  32                 	db	50	;'2'
  3110  00FDBD  2E                 	db	46
  3111  00FDBE  34                 	db	52	;'4'
  3112  00FDBF  66                 	db	102	;'f'
  3113  00FDC0  2C                 	db	44
  3114  00FDC1  20                 	db	32
  3115  00FDC2  25                 	db	37
  3116  00FDC3  64                 	db	100	;'d'
  3117  00FDC4  20                 	db	32
  3118  00FDC5  20                 	db	32
  3119  00FDC6  54                 	db	84	;'T'
  3120  00FDC7  52                 	db	82	;'R'
  3121  00FDC8  49                 	db	73	;'I'
  3122  00FDC9  4D                 	db	77	;'M'
  3123  00FDCA  20                 	db	32
  3124  00FDCB  20                 	db	32
  3125  00FDCC  20                 	db	32
  3126  00FDCD  00                 	db	0
  3127  00FDCE                     STR_5:
  3128                           
  3129                           ; BSR set to: 57
  3130  00FDCE  20                 	db	32
  3131  00FDCF  20                 	db	32
  3132  00FDD0  20                 	db	32
  3133  00FDD1  20                 	db	32
  3134  00FDD2  20                 	db	32
  3135  00FDD3  20                 	db	32
  3136  00FDD4  20                 	db	32
  3137  00FDD5  20                 	db	32
  3138  00FDD6  20                 	db	32
  3139  00FDD7  20                 	db	32
  3140  00FDD8  20                 	db	32
  3141  00FDD9  20                 	db	32
  3142  00FDDA  20                 	db	32
  3143  00FDDB  20                 	db	32
  3144  00FDDC  20                 	db	32
  3145  00FDDD  20                 	db	32
  3146  00FDDE  20                 	db	32
  3147  00FDDF  20                 	db	32
  3148  00FDE0  20                 	db	32
  3149  00FDE1  20                 	db	32
  3150  00FDE2  00                 	db	0
  3151  00FDE3                     STR_49:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FDE3  20                 	db	32
  3155  00FDE4  25                 	db	37
  3156  00FDE5  64                 	db	100	;'d'
  3157  00FDE6  20                 	db	32
  3158  00FDE7  25                 	db	37
  3159  00FDE8  64                 	db	100	;'d'
  3160  00FDE9  20                 	db	32
  3161  00FDEA  20                 	db	32
  3162  00FDEB  20                 	db	32
  3163  00FDEC  20                 	db	32
  3164  00FDED  20                 	db	32
  3165  00FDEE  20                 	db	32
  3166  00FDEF  20                 	db	32
  3167  00FDF0  20                 	db	32
  3168  00FDF1  20                 	db	32
  3169  00FDF2  20                 	db	32
  3170  00FDF3  20                 	db	32
  3171  00FDF4  20                 	db	32
  3172  00FDF5  20                 	db	32
  3173  00FDF6  20                 	db	32
  3174  00FDF7  00                 	db	0
  3175  00FDF8                     STR_44:
  3176                           
  3177                           ; BSR set to: 57
  3178  00FDF8  53                 	db	83	;'S'
  3179  00FDF9  65                 	db	101	;'e'
  3180  00FDFA  6E                 	db	110	;'n'
  3181  00FDFB  73                 	db	115	;'s'
  3182  00FDFC  6F                 	db	111	;'o'
  3183  00FDFD  72                 	db	114	;'r'
  3184  00FDFE  20                 	db	32
  3185  00FDFF  20                 	db	32
  3186  00FE00  20                 	db	32
  3187  00FE01  20                 	db	32
  3188  00FE02  20                 	db	32
  3189  00FE03  20                 	db	32
  3190  00FE04  20                 	db	32
  3191  00FE05  20                 	db	32
  3192  00FE06  20                 	db	32
  3193  00FE07  20                 	db	32
  3194  00FE08  20                 	db	32
  3195  00FE09  20                 	db	32
  3196  00FE0A  20                 	db	32
  3197  00FE0B  20                 	db	32
  3198  00FE0C  00                 	db	0
  3199  00FE0D                     STR_52:
  3200                           
  3201                           ; BSR set to: 57
  3202  00FE0D  53                 	db	83	;'S'
  3203  00FE0E  65                 	db	101	;'e'
  3204  00FE0F  6E                 	db	110	;'n'
  3205  00FE10  73                 	db	115	;'s'
  3206  00FE11  6F                 	db	111	;'o'
  3207  00FE12  72                 	db	114	;'r'
  3208  00FE13  73                 	db	115	;'s'
  3209  00FE14  20                 	db	32
  3210  00FE15  20                 	db	32
  3211  00FE16  20                 	db	32
  3212  00FE17  20                 	db	32
  3213  00FE18  20                 	db	32
  3214  00FE19  20                 	db	32
  3215  00FE1A  20                 	db	32
  3216  00FE1B  20                 	db	32
  3217  00FE1C  20                 	db	32
  3218  00FE1D  20                 	db	32
  3219  00FE1E  20                 	db	32
  3220  00FE1F  20                 	db	32
  3221  00FE20  20                 	db	32
  3222  00FE21  00                 	db	0
  3223  00FE22                     STR_50:
  3224                           
  3225                           ; BSR set to: 57
  3226  00FE22  20                 	db	32
  3227  00FE23  54                 	db	84	;'T'
  3228  00FE24  69                 	db	105	;'i'
  3229  00FE25  6D                 	db	109	;'m'
  3230  00FE26  65                 	db	101	;'e'
  3231  00FE27  20                 	db	32
  3232  00FE28  25                 	db	37
  3233  00FE29  64                 	db	100	;'d'
  3234  00FE2A  20                 	db	32
  3235  00FE2B  20                 	db	32
  3236  00FE2C  20                 	db	32
  3237  00FE2D  20                 	db	32
  3238  00FE2E  20                 	db	32
  3239  00FE2F  20                 	db	32
  3240  00FE30  20                 	db	32
  3241  00FE31  20                 	db	32
  3242  00FE32  20                 	db	32
  3243  00FE33  20                 	db	32
  3244  00FE34  20                 	db	32
  3245  00FE35  20                 	db	32
  3246  00FE36  00                 	db	0
  3247  00FE37                     STR_8:
  3248                           
  3249                           ; BSR set to: 57
  3250  00FE37  42                 	db	66	;'B'
  3251  00FE38  56                 	db	86	;'V'
  3252  00FE39  20                 	db	32
  3253  00FE3A  25                 	db	37
  3254  00FE3B  32                 	db	50	;'2'
  3255  00FE3C  2E                 	db	46
  3256  00FE3D  34                 	db	52	;'4'
  3257  00FE3E  66                 	db	102	;'f'
  3258  00FE3F  20                 	db	32
  3259  00FE40  20                 	db	32
  3260  00FE41  20                 	db	32
  3261  00FE42  20                 	db	32
  3262  00FE43  20                 	db	32
  3263  00FE44  20                 	db	32
  3264  00FE45  20                 	db	32
  3265  00FE46  20                 	db	32
  3266  00FE47  20                 	db	32
  3267  00FE48  20                 	db	32
  3268  00FE49  20                 	db	32
  3269  00FE4A  20                 	db	32
  3270  00FE4B  00                 	db	0
  3271  00FE4C                     STR_4:
  3272                           
  3273                           ; BSR set to: 57
  3274  00FE4C  20                 	db	32
  3275  00FE4D  4E                 	db	78	;'N'
  3276  00FE4E  53                 	db	83	;'S'
  3277  00FE4F  41                 	db	65	;'A'
  3278  00FE50  53                 	db	83	;'S'
  3279  00FE51  50                 	db	80	;'P'
  3280  00FE52  4F                 	db	79	;'O'
  3281  00FE53  4F                 	db	79	;'O'
  3282  00FE54  4B                 	db	75	;'K'
  3283  00FE55  20                 	db	32
  3284  00FE56  20                 	db	32
  3285  00FE57  20                 	db	32
  3286  00FE58  20                 	db	32
  3287  00FE59  20                 	db	32
  3288  00FE5A  20                 	db	32
  3289  00FE5B  20                 	db	32
  3290  00FE5C  20                 	db	32
  3291  00FE5D  20                 	db	32
  3292  00FE5E  20                 	db	32
  3293  00FE5F  20                 	db	32
  3294  00FE60  00                 	db	0
  3295  00FE61                     STR_12:
  3296                           
  3297                           ; BSR set to: 57
  3298  00FE61  42                 	db	66	;'B'
  3299  00FE62  61                 	db	97	;'a'
  3300  00FE63  74                 	db	116	;'t'
  3301  00FE64  74                 	db	116	;'t'
  3302  00FE65  65                 	db	101	;'e'
  3303  00FE66  72                 	db	114	;'r'
  3304  00FE67  79                 	db	121	;'y'
  3305  00FE68  20                 	db	32
  3306  00FE69  45                 	db	69	;'E'
  3307  00FE6A  53                 	db	83	;'S'
  3308  00FE6B  52                 	db	82	;'R'
  3309  00FE6C  20                 	db	32
  3310  00FE6D  20                 	db	32
  3311  00FE6E  20                 	db	32
  3312  00FE6F  20                 	db	32
  3313  00FE70  20                 	db	32
  3314  00FE71  20                 	db	32
  3315  00FE72  20                 	db	32
  3316  00FE73  20                 	db	32
  3317  00FE74  20                 	db	32
  3318  00FE75  00                 	db	0
  3319  00FE76                     STR_13:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FE76  43                 	db	67	;'C'
  3323  00FE77  61                 	db	97	;'a'
  3324  00FE78  6C                 	db	108	;'l'
  3325  00FE79  63                 	db	99	;'c'
  3326  00FE7A  75                 	db	117	;'u'
  3327  00FE7B  6C                 	db	108	;'l'
  3328  00FE7C  61                 	db	97	;'a'
  3329  00FE7D  74                 	db	116	;'t'
  3330  00FE7E  69                 	db	105	;'i'
  3331  00FE7F  6F                 	db	111	;'o'
  3332  00FE80  6E                 	db	110	;'n'
  3333  00FE81  20                 	db	32
  3334  00FE82  20                 	db	32
  3335  00FE83  20                 	db	32
  3336  00FE84  20                 	db	32
  3337  00FE85  20                 	db	32
  3338  00FE86  20                 	db	32
  3339  00FE87  20                 	db	32
  3340  00FE88  20                 	db	32
  3341  00FE89  20                 	db	32
  3342  00FE8A  00                 	db	0
  3343  00FE8B                     STR_45:
  3344                           
  3345                           ; BSR set to: 57
  3346  00FE8B  43                 	db	67	;'C'
  3347  00FE8C  61                 	db	97	;'a'
  3348  00FE8D  6C                 	db	108	;'l'
  3349  00FE8E  69                 	db	105	;'i'
  3350  00FE8F  62                 	db	98	;'b'
  3351  00FE90  72                 	db	114	;'r'
  3352  00FE91  61                 	db	97	;'a'
  3353  00FE92  74                 	db	116	;'t'
  3354  00FE93  69                 	db	105	;'i'
  3355  00FE94  6F                 	db	111	;'o'
  3356  00FE95  6E                 	db	110	;'n'
  3357  00FE96  20                 	db	32
  3358  00FE97  20                 	db	32
  3359  00FE98  20                 	db	32
  3360  00FE99  20                 	db	32
  3361  00FE9A  20                 	db	32
  3362  00FE9B  20                 	db	32
  3363  00FE9C  20                 	db	32
  3364  00FE9D  20                 	db	32
  3365  00FE9E  20                 	db	32
  3366  00FE9F  00                 	db	0
  3367  00FEA0                     STR_2:
  3368                           
  3369                           ; BSR set to: 57
  3370  00FEA0  20                 	db	32
  3371  00FEA1  56                 	db	86	;'V'
  3372  00FEA2  65                 	db	101	;'e'
  3373  00FEA3  72                 	db	114	;'r'
  3374  00FEA4  73                 	db	115	;'s'
  3375  00FEA5  69                 	db	105	;'i'
  3376  00FEA6  6F                 	db	111	;'o'
  3377  00FEA7  6E                 	db	110	;'n'
  3378  00FEA8  20                 	db	32
  3379  00FEA9  25                 	db	37
  3380  00FEAA  73                 	db	115	;'s'
  3381  00FEAB  20                 	db	32
  3382  00FEAC  20                 	db	32
  3383  00FEAD  20                 	db	32
  3384  00FEAE  20                 	db	32
  3385  00FEAF  20                 	db	32
  3386  00FEB0  20                 	db	32
  3387  00FEB1  20                 	db	32
  3388  00FEB2  20                 	db	32
  3389  00FEB3  20                 	db	32
  3390  00FEB4  00                 	db	0
  3391  00FEB5                     STR_56:
  3392                           
  3393                           ; BSR set to: 57
  3394  00FEB5  4F                 	db	79	;'O'
  3395  00FEB6  75                 	db	117	;'u'
  3396  00FEB7  74                 	db	116	;'t'
  3397  00FEB8  20                 	db	32
  3398  00FEB9  4F                 	db	79	;'O'
  3399  00FEBA  66                 	db	102	;'f'
  3400  00FEBB  20                 	db	32
  3401  00FEBC  52                 	db	82	;'R'
  3402  00FEBD  61                 	db	97	;'a'
  3403  00FEBE  6E                 	db	110	;'n'
  3404  00FEBF  67                 	db	103	;'g'
  3405  00FEC0  65                 	db	101	;'e'
  3406  00FEC1  20                 	db	32
  3407  00FEC2  20                 	db	32
  3408  00FEC3  20                 	db	32
  3409  00FEC4  20                 	db	32
  3410  00FEC5  20                 	db	32
  3411  00FEC6  20                 	db	32
  3412  00FEC7  20                 	db	32
  3413  00FEC8  20                 	db	32
  3414  00FEC9  00                 	db	0
  3415  00FECA                     STR_53:
  3416                           
  3417                           ; BSR set to: 57
  3418  00FECA  5A                 	db	90	;'Z'
  3419  00FECB  65                 	db	101	;'e'
  3420  00FECC  72                 	db	114	;'r'
  3421  00FECD  6F                 	db	111	;'o'
  3422  00FECE  20                 	db	32
  3423  00FECF  43                 	db	67	;'C'
  3424  00FED0  61                 	db	97	;'a'
  3425  00FED1  6C                 	db	108	;'l'
  3426  00FED2  20                 	db	32
  3427  00FED3  53                 	db	83	;'S'
  3428  00FED4  65                 	db	101	;'e'
  3429  00FED5  74                 	db	116	;'t'
  3430  00FED6  20                 	db	32
  3431  00FED7  20                 	db	32
  3432  00FED8  20                 	db	32
  3433  00FED9  20                 	db	32
  3434  00FEDA  20                 	db	32
  3435  00FEDB  20                 	db	32
  3436  00FEDC  20                 	db	32
  3437  00FEDD  20                 	db	32
  3438  00FEDE  00                 	db	0
  3439  00FEDF                     STR_1:
  3440                           
  3441                           ; BSR set to: 57
  3442  00FEDF  20                 	db	32
  3443  00FEE0  4D                 	db	77	;'M'
  3444  00FEE1  42                 	db	66	;'B'
  3445  00FEE2  4D                 	db	77	;'M'
  3446  00FEE3  43                 	db	67	;'C'
  3447  00FEE4  20                 	db	32
  3448  00FEE5  53                 	db	83	;'S'
  3449  00FEE6  4F                 	db	79	;'O'
  3450  00FEE7  4C                 	db	76	;'L'
  3451  00FEE8  41                 	db	65	;'A'
  3452  00FEE9  52                 	db	82	;'R'
  3453  00FEEA  4D                 	db	77	;'M'
  3454  00FEEB  4F                 	db	79	;'O'
  3455  00FEEC  4E                 	db	78	;'N'
  3456  00FEED  20                 	db	32
  3457  00FEEE  20                 	db	32
  3458  00FEEF  20                 	db	32
  3459  00FEF0  20                 	db	32
  3460  00FEF1  20                 	db	32
  3461  00FEF2  20                 	db	32
  3462  00FEF3  00                 	db	0
  3463  00FEF4                     STR_43:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FEF4  50                 	db	80	;'P'
  3467  00FEF5  56                 	db	86	;'V'
  3468  00FEF6  20                 	db	32
  3469  00FEF7  61                 	db	97	;'a'
  3470  00FEF8  6E                 	db	110	;'n'
  3471  00FEF9  64                 	db	100	;'d'
  3472  00FEFA  20                 	db	32
  3473  00FEFB  42                 	db	66	;'B'
  3474  00FEFC  41                 	db	65	;'A'
  3475  00FEFD  54                 	db	84	;'T'
  3476  00FEFE  54                 	db	84	;'T'
  3477  00FEFF  45                 	db	69	;'E'
  3478  00FF00  52                 	db	82	;'R'
  3479  00FF01  59                 	db	89	;'Y'
  3480  00FF02  20                 	db	32
  3481  00FF03  20                 	db	32
  3482  00FF04  20                 	db	32
  3483  00FF05  20                 	db	32
  3484  00FF06  20                 	db	32
  3485  00FF07  20                 	db	32
  3486  00FF08  00                 	db	0
  3487  00FF09                     STR_15:
  3488                           
  3489                           ; BSR set to: 57
  3490  00FF09  43                 	db	67	;'C'
  3491  00FF0A  68                 	db	104	;'h'
  3492  00FF0B  65                 	db	101	;'e'
  3493  00FF0C  63                 	db	99	;'c'
  3494  00FF0D  6B                 	db	107	;'k'
  3495  00FF0E  69                 	db	105	;'i'
  3496  00FF0F  6E                 	db	110	;'n'
  3497  00FF10  67                 	db	103	;'g'
  3498  00FF11  20                 	db	32
  3499  00FF12  25                 	db	37
  3500  00FF13  63                 	db	99	;'c'
  3501  00FF14  20                 	db	32
  3502  00FF15  25                 	db	37
  3503  00FF16  63                 	db	99	;'c'
  3504  00FF17  20                 	db	32
  3505  00FF18  20                 	db	32
  3506  00FF19  20                 	db	32
  3507  00FF1A  20                 	db	32
  3508  00FF1B  20                 	db	32
  3509  00FF1C  20                 	db	32
  3510  00FF1D  00                 	db	0
  3511  00FF1E                     STR_48:
  3512                           
  3513                           ; BSR set to: 57
  3514  00FF1E  53                 	db	83	;'S'
  3515  00FF1F  65                 	db	101	;'e'
  3516  00FF20  6E                 	db	110	;'n'
  3517  00FF21  73                 	db	115	;'s'
  3518  00FF22  6F                 	db	111	;'o'
  3519  00FF23  72                 	db	114	;'r'
  3520  00FF24  20                 	db	32
  3521  00FF25  52                 	db	82	;'R'
  3522  00FF26  65                 	db	101	;'e'
  3523  00FF27  61                 	db	97	;'a'
  3524  00FF28  64                 	db	100	;'d'
  3525  00FF29  69                 	db	105	;'i'
  3526  00FF2A  6E                 	db	110	;'n'
  3527  00FF2B  67                 	db	103	;'g'
  3528  00FF2C  73                 	db	115	;'s'
  3529  00FF2D  20                 	db	32
  3530  00FF2E  20                 	db	32
  3531  00FF2F  20                 	db	32
  3532  00FF30  20                 	db	32
  3533  00FF31  20                 	db	32
  3534  00FF32  00                 	db	0
  3535  00FF33                     STR_14:
  3536                           
  3537                           ; BSR set to: 57
  3538  00FF33  43                 	db	67	;'C'
  3539  00FF34  68                 	db	104	;'h'
  3540  00FF35  65                 	db	101	;'e'
  3541  00FF36  63                 	db	99	;'c'
  3542  00FF37  6B                 	db	107	;'k'
  3543  00FF38  20                 	db	32
  3544  00FF39  33                 	db	51	;'3'
  3545  00FF3A  30                 	db	48	;'0'
  3546  00FF3B  20                 	db	32
  3547  00FF3C  73                 	db	115	;'s'
  3548  00FF3D  65                 	db	101	;'e'
  3549  00FF3E  63                 	db	99	;'c'
  3550  00FF3F  6F                 	db	111	;'o'
  3551  00FF40  6E                 	db	110	;'n'
  3552  00FF41  64                 	db	100	;'d'
  3553  00FF42  73                 	db	115	;'s'
  3554  00FF43  20                 	db	32
  3555  00FF44  20                 	db	32
  3556  00FF45  20                 	db	32
  3557  00FF46  20                 	db	32
  3558  00FF47  00                 	db	0
  3559  00FF48                     STR_46:
  3560                           
  3561                           ; BSR set to: 57
  3562  00FF48  52                 	db	82	;'R'
  3563  00FF49  65                 	db	101	;'e'
  3564  00FF4A  6C                 	db	108	;'l'
  3565  00FF4B  65                 	db	101	;'e'
  3566  00FF4C  61                 	db	97	;'a'
  3567  00FF4D  73                 	db	115	;'s'
  3568  00FF4E  65                 	db	101	;'e'
  3569  00FF4F  20                 	db	32
  3570  00FF50  62                 	db	98	;'b'
  3571  00FF51  75                 	db	117	;'u'
  3572  00FF52  74                 	db	116	;'t'
  3573  00FF53  74                 	db	116	;'t'
  3574  00FF54  6F                 	db	111	;'o'
  3575  00FF55  6E                 	db	110	;'n'
  3576  00FF56  20                 	db	32
  3577  00FF57  25                 	db	37
  3578  00FF58  63                 	db	99	;'c'
  3579  00FF59  20                 	db	32
  3580  00FF5A  20                 	db	32
  3581  00FF5B  00                 	db	0
  3582  00FF5C                     STR_61:
  3583                           
  3584                           ; BSR set to: 57
  3585  00FF5C  48                 	db	72	;'H'
  3586  00FF5D  45                 	db	69	;'E'
  3587  00FF5E  4C                 	db	76	;'L'
  3588  00FF5F  50                 	db	80	;'P'
  3589  00FF60  20                 	db	32
  3590  00FF61  25                 	db	37
  3591  00FF62  73                 	db	115	;'s'
  3592  00FF63  20                 	db	32
  3593  00FF64  20                 	db	32
  3594  00FF65  20                 	db	32
  3595  00FF66  20                 	db	32
  3596  00FF67  20                 	db	32
  3597  00FF68  20                 	db	32
  3598  00FF69  20                 	db	32
  3599  00FF6A  20                 	db	32
  3600  00FF6B  20                 	db	32
  3601  00FF6C  20                 	db	32
  3602  00FF6D  20                 	db	32
  3603  00FF6E  00                 	db	0
  3604  00FF6F                     
  3605                           ; BSR set to: 57
  3606  00FF6F  44                 	db	68	;'D'
  3607  00FF70  49                 	db	73	;'I'
  3608  00FF71  53                 	db	83	;'S'
  3609  00FF72  50                 	db	80	;'P'
  3610  00FF73  4C                 	db	76	;'L'
  3611  00FF74  41                 	db	65	;'A'
  3612  00FF75  59                 	db	89	;'Y'
  3613  00FF76  20                 	db	32
  3614  00FF77  25                 	db	37
  3615  00FF78  73                 	db	115	;'s'
  3616  00FF79  20                 	db	32
  3617  00FF7A  20                 	db	32
  3618  00FF7B  20                 	db	32
  3619  00FF7C  20                 	db	32
  3620  00FF7D  20                 	db	32
  3621  00FF7E  20                 	db	32
  3622  00FF7F  20                 	db	32
  3623  00FF80  20                 	db	32
  3624  00FF81  00                 	db	0
  3625  00FF82                     
  3626                           ; BSR set to: 57
  3627  00FF82  25                 	db	37
  3628  00FF83  64                 	db	100	;'d'
  3629  00FF84  20                 	db	32
  3630  00FF85  25                 	db	37
  3631  00FF86  32                 	db	50	;'2'
  3632  00FF87  2E                 	db	46
  3633  00FF88  34                 	db	52	;'4'
  3634  00FF89  66                 	db	102	;'f'
  3635  00FF8A  2C                 	db	44
  3636  00FF8B  20                 	db	32
  3637  00FF8C  25                 	db	37
  3638  00FF8D  64                 	db	100	;'d'
  3639  00FF8E  20                 	db	32
  3640  00FF8F  20                 	db	32
  3641  00FF90  20                 	db	32
  3642  00FF91  23                 	db	35
  3643  00FF92  00                 	db	0
  3644  00FF93                     STR_19:
  3645                           
  3646                           ; BSR set to: 57
  3647  00FF93  25                 	db	37
  3648  00FF94  64                 	db	100	;'d'
  3649  00FF95  20                 	db	32
  3650  00FF96  25                 	db	37
  3651  00FF97  32                 	db	50	;'2'
  3652  00FF98  2E                 	db	46
  3653  00FF99  34                 	db	52	;'4'
  3654  00FF9A  66                 	db	102	;'f'
  3655  00FF9B  20                 	db	32
  3656  00FF9C  20                 	db	32
  3657  00FF9D  20                 	db	32
  3658  00FF9E  25                 	db	37
  3659  00FF9F  64                 	db	100	;'d'
  3660  00FFA0  20                 	db	32
  3661  00FFA1  20                 	db	32
  3662  00FFA2  00                 	db	0
  3663  00FFA3                     STR_65:
  3664                           
  3665                           ; BSR set to: 57
  3666  00FFA3  76                 	db	118	;'v'
  3667  00FFA4  74                 	db	116	;'t'
  3668  00FFA5  65                 	db	101	;'e'
  3669  00FFA6  72                 	db	114	;'r'
  3670  00FFA7  6D                 	db	109	;'m'
  3671  00FFA8  20                 	db	32
  3672  00FFA9  25                 	db	37
  3673  00FFAA  78                 	db	120	;'x'
  3674  00FFAB  3A                 	db	58	;':'
  3675  00FFAC  25                 	db	37
  3676  00FFAD  78                 	db	120	;'x'
  3677  00FFAE  20                 	db	32
  3678  00FFAF  20                 	db	32
  3679  00FFB0  20                 	db	32
  3680  00FFB1  00                 	db	0
  3681  00FFB2                     STR_59:
  3682                           
  3683                           ; BSR set to: 57
  3684  00FFB2  46                 	db	70	;'F'
  3685  00FFB3  65                 	db	101	;'e'
  3686  00FFB4  62                 	db	98	;'b'
  3687  00FFB5  20                 	db	32
  3688  00FFB6  20                 	db	32
  3689  00FFB7  36                 	db	54	;'6'
  3690  00FFB8  20                 	db	32
  3691  00FFB9  32                 	db	50	;'2'
  3692  00FFBA  30                 	db	48	;'0'
  3693  00FFBB  32                 	db	50	;'2'
  3694  00FFBC  30                 	db	48	;'0'
  3695  00FFBD  00                 	db	0
  3696  00FFBE                     STR_63:
  3697                           
  3698                           ; BSR set to: 57
  3699  00FFBE  25                 	db	37
  3700  00FFBF  73                 	db	115	;'s'
  3701  00FFC0  20                 	db	32
  3702  00FFC1  20                 	db	32
  3703  00FFC2  20                 	db	32
  3704  00FFC3  20                 	db	32
  3705  00FFC4  20                 	db	32
  3706  00FFC5  20                 	db	32
  3707  00FFC6  20                 	db	32
  3708  00FFC7  00                 	db	0
  3709  00FFC8                     STR_60:
  3710                           
  3711                           ; BSR set to: 57
  3712  00FFC8  31                 	db	49	;'1'
  3713  00FFC9  36                 	db	54	;'6'
  3714  00FFCA  3A                 	db	58	;':'
  3715  00FFCB  34                 	db	52	;'4'
  3716  00FFCC  37                 	db	55	;'7'
  3717  00FFCD  3A                 	db	58	;':'
  3718  00FFCE  34                 	db	52	;'4'
  3719  00FFCF  33                 	db	51	;'3'
  3720  00FFD0  00                 	db	0
  3721  00FFD1                     STR_3:
  3722                           
  3723                           ; BSR set to: 57
  3724  00FFD1  31                 	db	49	;'1'
  3725  00FFD2  2E                 	db	46
  3726  00FFD3  31                 	db	49	;'1'
  3727  00FFD4  37                 	db	55	;'7'
  3728  00FFD5  00                 	db	0
  3729  00FFD6                     STR_79:
  3730                           
  3731                           ; BSR set to: 57
  3732  00FFD6  49                 	db	73	;'I'
  3733  00FFD7  4E                 	db	78	;'N'
  3734  00FFD8  46                 	db	70	;'F'
  3735  00FFD9  00                 	db	0
  3736  00FFDA                     STR_83:
  3737                           
  3738                           ; BSR set to: 57
  3739  00FFDA  4E                 	db	78	;'N'
  3740  00FFDB  41                 	db	65	;'A'
  3741  00FFDC  4E                 	db	78	;'N'
  3742  00FFDD  00                 	db	0
  3743  00FFDE                     STR_80:
  3744                           
  3745                           ; BSR set to: 57
  3746  00FFDE  69                 	db	105	;'i'
  3747  00FFDF  6E                 	db	110	;'n'
  3748  00FFE0  66                 	db	102	;'f'
  3749  00FFE1  00                 	db	0
  3750  00FFE2                     STR_84:
  3751                           
  3752                           ; BSR set to: 57
  3753  00FFE2  6E                 	db	110	;'n'
  3754  00FFE3  61                 	db	97	;'a'
  3755  00FFE4  6E                 	db	110	;'n'
  3756  00FFE5  00                 	db	0
  3757  00FFE6                     STR_110:
  3758                           
  3759                           ; BSR set to: 57
  3760  00FFE6  6C                 	db	108	;'l'
  3761  00FFE7  58                 	db	88	;'X'
  3762  00FFE8  00                 	db	0
  3763  00FFE9                     STR_87:
  3764                           
  3765                           ; BSR set to: 57
  3766  00FFE9  6C                 	db	108	;'l'
  3767  00FFEA  64                 	db	100	;'d'
  3768  00FFEB  00                 	db	0
  3769  00FFEC                     STR_96:
  3770                           
  3771                           ; BSR set to: 57
  3772  00FFEC  6C                 	db	108	;'l'
  3773  00FFED  66                 	db	102	;'f'
  3774  00FFEE  00                 	db	0
  3775  00FFEF                     STR_91:
  3776                           
  3777                           ; BSR set to: 57
  3778  00FFEF  6C                 	db	108	;'l'
  3779  00FFF0  69                 	db	105	;'i'
  3780  00FFF1  00                 	db	0
  3781  00FFF2                     STR_101:
  3782                           
  3783                           ; BSR set to: 57
  3784  00FFF2  6C                 	db	108	;'l'
  3785  00FFF3  75                 	db	117	;'u'
  3786  00FFF4  00                 	db	0
  3787  00FFF5                     STR_106:
  3788                           
  3789                           ; BSR set to: 57
  3790  00FFF5  6C                 	db	108	;'l'
  3791  00FFF6  78                 	db	120	;'x'
  3792  00FFF7  00                 	db	0
  3793  00FFF8                     STR_58:
  3794                           
  3795                           ; BSR set to: 57
  3796  00FFF8  25                 	db	37
  3797  00FFF9  63                 	db	99	;'c'
  3798  00FFFA  00                 	db	0
  3799  00FFFB                     STR_57:
  3800                           
  3801                           ; BSR set to: 57
  3802  00FFFB  25                 	db	37
  3803  00FFFC  73                 	db	115	;'s'
  3804  00FFFD  00                 	db	0
  3805  0000                     
  3806                           ; #config settings
  3807  00FFFE  00                 	db	0	; dummy byte at the end
  3808  0000                     
  3809                           	psect	cinit
  3810  01A822                     __pcinit:
  3811                           	opt callstack 0
  3812  01A822                     start_initialization:
  3813                           	opt callstack 0
  3814  01A822                     __initialization:
  3815                           	opt callstack 0
  3816                           
  3817                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3818                           ; load TBLPTR registers with __pidataBIGRAM
  3819  01A822  0EFC               	movlw	low __pidataBIGRAM
  3820  01A824  6EF6               	movwf	tblptrl,c
  3821  01A826  0E6E               	movlw	high __pidataBIGRAM
  3822  01A828  6EF7               	movwf	tblptrh,c
  3823  01A82A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3824  01A82C  6EF8               	movwf	tblptru,c
  3825  01A82E  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3826  01A832  EE20 F32B          	lfsr	2,811
  3827  01A836                     copy_data0:
  3828  01A836  0009               	tblrd		*+
  3829  01A838  006F FFD7 FFEE     	movff	tablat,postinc0
  3830  01A83E  50DD               	movf	postdec2,w,c
  3831  01A840  50D9               	movf	fsr2l,w,c
  3832  01A842  E1F9               	bnz	copy_data0
  3833  01A844  50DA               	movf	fsr2h,w,c
  3834  01A846  E1F7               	bnz	copy_data0
  3835                           
  3836                           ; Initialize objects allocated to BANK1 (208 bytes)
  3837                           ; load TBLPTR registers with __pidataBANK1
  3838  01A848  0ED6               	movlw	low __pidataBANK1
  3839  01A84A  6EF6               	movwf	tblptrl,c
  3840  01A84C  0EA9               	movlw	high __pidataBANK1
  3841  01A84E  6EF7               	movwf	tblptrh,c
  3842  01A850  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3843  01A852  6EF8               	movwf	tblptru,c
  3844  01A854  EE00  F100         	lfsr	0,__pdataBANK1
  3845  01A858  EE20 F0D0          	lfsr	2,208
  3846  01A85C                     copy_data1:
  3847  01A85C  0009               	tblrd		*+
  3848  01A85E  006F FFD7 FFEE     	movff	tablat,postinc0
  3849  01A864  50DD               	movf	postdec2,w,c
  3850  01A866  50D9               	movf	fsr2l,w,c
  3851  01A868  E1F9               	bnz	copy_data1
  3852                           
  3853                           ; Initialize objects allocated to BANK0 (54 bytes)
  3854                           ; load TBLPTR registers with __pidataBANK0
  3855  01A86A  0E7C               	movlw	low __pidataBANK0
  3856  01A86C  6EF6               	movwf	tblptrl,c
  3857  01A86E  0EC2               	movlw	high __pidataBANK0
  3858  01A870  6EF7               	movwf	tblptrh,c
  3859  01A872  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3860  01A874  6EF8               	movwf	tblptru,c
  3861  01A876  EE00  F0AF         	lfsr	0,__pdataBANK0
  3862  01A87A  EE20 F036          	lfsr	2,54
  3863  01A87E                     copy_data2:
  3864  01A87E  0009               	tblrd		*+
  3865  01A880  006F FFD7 FFEE     	movff	tablat,postinc0
  3866  01A886  50DD               	movf	postdec2,w,c
  3867  01A888  50D9               	movf	fsr2l,w,c
  3868  01A88A  E1F9               	bnz	copy_data2
  3869                           
  3870                           ; Clear objects allocated to BIGRAM (482 bytes)
  3871  01A88C  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3872  01A890  EE20 F1E2          	lfsr	2,482
  3873  01A894                     clear_0:
  3874  01A894  6AEE               	clrf	postinc0,c
  3875  01A896  50DD               	movf	postdec2,w,c
  3876  01A898  50D9               	movf	fsr2l,w,c
  3877  01A89A  E1FC               	bnz	clear_0
  3878  01A89C  50DA               	movf	fsr2h,w,c
  3879  01A89E  E1FA               	bnz	clear_0
  3880                           
  3881                           ; Clear objects allocated to BANK4 (255 bytes)
  3882  01A8A0  EE01  F000         	lfsr	0,__pbssBANK4
  3883  01A8A4  EE20 F0FF          	lfsr	2,255
  3884  01A8A8                     clear_1:
  3885  01A8A8  6AEE               	clrf	postinc0,c
  3886  01A8AA  50DD               	movf	postdec2,w,c
  3887  01A8AC  50D9               	movf	fsr2l,w,c
  3888  01A8AE  E1FC               	bnz	clear_1
  3889  01A8B0  50DA               	movf	fsr2h,w,c
  3890  01A8B2  E1FA               	bnz	clear_1
  3891                           
  3892                           ; Clear objects allocated to BANK3 (198 bytes)
  3893  01A8B4  EE00  F300         	lfsr	0,__pbssBANK3
  3894  01A8B8  0EC6               	movlw	198
  3895  01A8BA                     clear_2:
  3896  01A8BA  6AEE               	clrf	postinc0,c
  3897  01A8BC  06E8               	decf	wreg,f,c
  3898  01A8BE  E1FD               	bnz	clear_2
  3899                           
  3900                           ; Clear objects allocated to BANK2 (231 bytes)
  3901  01A8C0  EE00  F200         	lfsr	0,__pbssBANK2
  3902  01A8C4  0EE7               	movlw	231
  3903  01A8C6                     clear_3:
  3904  01A8C6  6AEE               	clrf	postinc0,c
  3905  01A8C8  06E8               	decf	wreg,f,c
  3906  01A8CA  E1FD               	bnz	clear_3
  3907                           
  3908                           ; Clear objects allocated to BANK1 (46 bytes)
  3909  01A8CC  EE00  F1D0         	lfsr	0,__pbssBANK1
  3910  01A8D0  0E2E               	movlw	46
  3911  01A8D2                     clear_4:
  3912  01A8D2  6AEE               	clrf	postinc0,c
  3913  01A8D4  06E8               	decf	wreg,f,c
  3914  01A8D6  E1FD               	bnz	clear_4
  3915                           
  3916                           ; Clear objects allocated to BANK0 (79 bytes)
  3917  01A8D8  EE00  F060         	lfsr	0,__pbssBANK0
  3918  01A8DC  0E4F               	movlw	79
  3919  01A8DE                     clear_5:
  3920  01A8DE  6AEE               	clrf	postinc0,c
  3921  01A8E0  06E8               	decf	wreg,f,c
  3922  01A8E2  E1FD               	bnz	clear_5
  3923                           
  3924                           ; Clear objects allocated to COMRAM (14 bytes)
  3925  01A8E4  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3926  01A8E8  0E0E               	movlw	14
  3927  01A8EA                     clear_6:
  3928  01A8EA  6AEE               	clrf	postinc0,c
  3929  01A8EC  06E8               	decf	wreg,f,c
  3930  01A8EE  E1FD               	bnz	clear_6
  3931                           
  3932                           ;
  3933                           ; Setup IVTBASE
  3934                           ;
  3935  01A8F0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3936  01A8F2  6ED5               	movwf	213,c
  3937  01A8F4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3938  01A8F6  6ED6               	movwf	214,c
  3939  01A8F8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3940  01A8FA  6ED7               	movwf	215,c
  3941  01A8FC                     end_of_initialization:
  3942                           	opt callstack 0
  3943  01A8FC                     __end_of__initialization:
  3944                           	opt callstack 0
  3945  01A8FC  0100               	movlb	0
  3946  01A8FE  EF22  F089         	goto	_main	;jump to C main() function
  3947                           
  3948                           	psect	bssCOMRAM
  3949  00003A                     __pbssCOMRAM:
  3950                           	opt callstack 0
  3951  00003A                     _width:
  3952                           	opt callstack 0
  3953  00003A                     	ds	2
  3954  00003C                     _prec:
  3955                           	opt callstack 0
  3956  00003C                     	ds	2
  3957  00003E                     _flags:
  3958                           	opt callstack 0
  3959  00003E                     	ds	2
  3960  000040                     calc_bsoc@log_update_wait:
  3961                           	opt callstack 0
  3962  000040                     	ds	1
  3963  000041                     check_day_time@day_delay:
  3964                           	opt callstack 0
  3965  000041                     	ds	1
  3966  000042                     dac_spi_control@S0:
  3967                           	opt callstack 0
  3968  000042                     	ds	1
  3969  000043                     dac_spi_control@init:
  3970                           	opt callstack 0
  3971  000043                     	ds	1
  3972  000044                     _uart2RxHead:
  3973                           	opt callstack 0
  3974  000044                     	ds	1
  3975  000045                     _uart2TxBufferRemaining:
  3976                           	opt callstack 0
  3977  000045                     	ds	1
  3978  000046                     _uart2TxTail:
  3979                           	opt callstack 0
  3980  000046                     	ds	1
  3981  000047                     _uart1RxHead:
  3982                           	opt callstack 0
  3983  000047                     	ds	1
  3984                           
  3985                           	psect	bssBANK0
  3986  000060                     __pbssBANK0:
  3987                           	opt callstack 0
  3988  000060                     fabsf@F463:
  3989                           	opt callstack 0
  3990  000060                     	ds	4
  3991  000064                     ___fpclassifyf@F463:
  3992                           	opt callstack 0
  3993  000064                     	ds	4
  3994  000068                     calc_ror_data@bcror:
  3995                           	opt callstack 0
  3996  000068                     	ds	4
  3997  00006C                     calc_ror_data@bvror:
  3998                           	opt callstack 0
  3999  00006C                     	ds	4
  4000  000070                     calc_model_data@bcror:
  4001                           	opt callstack 0
  4002  000070                     	ds	4
  4003  000074                     calc_model_data@bvror:
  4004                           	opt callstack 0
  4005  000074                     	ds	4
  4006  000078                     wdtdelay@dcount:
  4007                           	opt callstack 0
  4008  000078                     	ds	4
  4009  00007C                     _TMR3_InterruptHandler:
  4010                           	opt callstack 0
  4011  00007C                     	ds	3
  4012  00007F                     _TMR5_InterruptHandler:
  4013                           	opt callstack 0
  4014  00007F                     	ds	3
  4015  000082                     _TMR6_InterruptHandler:
  4016                           	opt callstack 0
  4017  000082                     	ds	3
  4018  000085                     _ADCC_ADTI_InterruptHandler:
  4019                           	opt callstack 0
  4020  000085                     	ds	3
  4021  000088                     _ADCC_ADI_InterruptHandler:
  4022                           	opt callstack 0
  4023  000088                     	ds	3
  4024  00008B                     _UART1_RxInterruptHandler:
  4025                           	opt callstack 0
  4026  00008B                     	ds	3
  4027  00008E                     _UART2_TxInterruptHandler:
  4028                           	opt callstack 0
  4029  00008E                     	ds	3
  4030  000091                     _UART2_RxInterruptHandler:
  4031                           	opt callstack 0
  4032  000091                     	ds	3
  4033  000094                     _INT1_InterruptHandler:
  4034                           	opt callstack 0
  4035  000094                     	ds	3
  4036  000097                     _INT0_InterruptHandler:
  4037                           	opt callstack 0
  4038  000097                     	ds	3
  4039  00009A                     _nout:
  4040                           	opt callstack 0
  4041  00009A                     	ds	2
  4042  00009C                     TMR3_ISR@CountCallBack:
  4043                           	opt callstack 0
  4044  00009C                     	ds	2
  4045  00009E                     _timer3ReloadVal:
  4046                           	opt callstack 0
  4047  00009E                     	ds	2
  4048  0000A0                     TMR5_ISR@CountCallBack:
  4049                           	opt callstack 0
  4050  0000A0                     	ds	2
  4051  0000A2                     _timer5ReloadVal:
  4052                           	opt callstack 0
  4053  0000A2                     	ds	2
  4054  0000A4                     esr_check@esr_state:
  4055                           	opt callstack 0
  4056  0000A4                     	ds	1
  4057  0000A5                     dac_spi_control@SB:
  4058                           	opt callstack 0
  4059  0000A5                     	ds	1
  4060  0000A6                     dac_spi_control@SC:
  4061                           	opt callstack 0
  4062  0000A6                     	ds	1
  4063  0000A7                     dac_spi_control@S2:
  4064                           	opt callstack 0
  4065  0000A7                     	ds	1
  4066  0000A8                     dac_spi_control@S1:
  4067                           	opt callstack 0
  4068  0000A8                     	ds	1
  4069  0000A9                     _mode_sw:
  4070                           	opt callstack 0
  4071  0000A9                     	ds	1
  4072  0000AA                     _uart2RxCount:
  4073                           	opt callstack 0
  4074  0000AA                     	ds	1
  4075  0000AB                     _uart2RxTail:
  4076                           	opt callstack 0
  4077  0000AB                     	ds	1
  4078  0000AC                     _uart2TxHead:
  4079                           	opt callstack 0
  4080  0000AC                     	ds	1
  4081  0000AD                     _uart1RxCount:
  4082                           	opt callstack 0
  4083  0000AD                     	ds	1
  4084  0000AE                     _uart1RxTail:
  4085                           	opt callstack 0
  4086  0000AE                     	ds	1
  4087                           
  4088                           	psect	dataBANK0
  4089  0000AF                     __pdataBANK0:
  4090                           	opt callstack 0
  4091  0000AF                     _R:
  4092                           	opt callstack 0
  4093  0000AF                     	ds	54
  4094                           
  4095                           	psect	bssBANK1
  4096  0001D0                     __pbssBANK1:
  4097                           	opt callstack 0
  4098  0001D0                     _spi_link:
  4099                           	opt callstack 0
  4100  0001D0                     	ds	12
  4101  0001DC                     _uart1RxBuffer:
  4102                           	opt callstack 0
  4103  0001DC                     	ds	8
  4104  0001E4                     spinners@s:
  4105                           	opt callstack 0
  4106  0001E4                     	ds	6
  4107  0001EA                     floorf@F524:
  4108                           	opt callstack 0
  4109  0001EA                     	ds	4
  4110  0001EE                     _utctime:
  4111                           	opt callstack 0
  4112  0001EE                     	ds	4
  4113  0001F2                     _P:
  4114                           	opt callstack 0
  4115  0001F2                     	ds	4
  4116  0001F6                     _seed:
  4117                           	opt callstack 0
  4118  0001F6                     	ds	8
  4119                           
  4120                           	psect	dataBANK1
  4121  000100                     __pdataBANK1:
  4122                           	opt callstack 0
  4123  000100                     stoa@F1166:
  4124                           	opt callstack 0
  4125  000100                     	ds	7
  4126  000107                     _V:
  4127                           	opt callstack 0
  4128  000107                     	ds	192
  4129  0001C7                     _H:
  4130                           	opt callstack 0
  4131  0001C7                     	ds	9
  4132                           
  4133                           	psect	bssBANK2
  4134  000200                     __pbssBANK2:
  4135                           	opt callstack 0
  4136  000200                     lp_filter@smooth:
  4137                           	opt callstack 0
  4138  000200                     	ds	84
  4139  000254                     _S:
  4140                           	opt callstack 0
  4141  000254                     	ds	41
  4142  00027D                     _tickCount:
  4143                           	opt callstack 0
  4144  00027D                     	ds	26
  4145  000297                     _dbuf:
  4146                           	opt callstack 0
  4147  000297                     	ds	80
  4148                           
  4149                           	psect	bssBANK3
  4150  000300                     __pbssBANK3:
  4151                           	opt callstack 0
  4152  000300                     _uart2TxBuffer:
  4153                           	opt callstack 0
  4154  000300                     	ds	64
  4155  000340                     _ring_buf2:
  4156                           	opt callstack 0
  4157  000340                     	ds	67
  4158  000383                     _ring_buf1:
  4159                           	opt callstack 0
  4160  000383                     	ds	67
  4161                           
  4162                           	psect	bssBANK4
  4163  000400                     __pbssBANK4:
  4164                           	opt callstack 0
  4165  000400                     _uart2RxBuffer:
  4166                           	opt callstack 0
  4167  000400                     	ds	255
  4168                           
  4169                           	psect	bssBIGRAM
  4170  00082A                     __pbssBIGRAM:
  4171                           	opt callstack 0
  4172  00082A                     _D:
  4173                           	opt callstack 0
  4174  00082A                     	ds	482
  4175                           
  4176                           	psect	dataBIGRAM
  4177  0004FF                     __pdataBIGRAM:
  4178                           	opt callstack 0
  4179  0004FF                     _port_data:
  4180                           	opt callstack 0
  4181  0004FF                     	ds	512
  4182  0006FF                     _C:
  4183                           	opt callstack 0
  4184  0006FF                     	ds	299
  4185                           
  4186                           	psect	cstackBANK0
  4187  0000E5                     __pcstackBANK0:
  4188                           	opt callstack 0
  4189  0000E5                     ??_TMR3_ISR:
  4190                           
  4191                           ; 1 bytes @ 0x0
  4192  0000E5                     	ds	25
  4193                           
  4194                           	psect	cstackCOMRAM
  4195  000021                     __pcstackCOMRAM:
  4196                           	opt callstack 0
  4197  000021                     ??_ADCC_ThresholdISR:
  4198  000021                     
  4199                           ; 1 bytes @ 0x0
  4200  000021                     	ds	5
  4201  000026                     ??_TMR6_ISR:
  4202                           
  4203                           ; 1 bytes @ 0x5
  4204  000026                     	ds	1
  4205  000027                     ??_INT1_ISR:
  4206  000027                     
  4207                           ; 1 bytes @ 0x6
  4208  000027                     	ds	4
  4209  00002B                     ??_TMR5_ISR:
  4210                           
  4211                           ; 1 bytes @ 0xA
  4212  00002B                     	ds	15
  4213                           
  4214 ;;
  4215 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4216 ;;
  4217 ;; *************** function _main *****************
  4218 ;; Defined at:
  4219 ;;		line 189 in file "main.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  esr_temp        4  [STACK] float 
  4224 ;;  i_esr           2  [STACK] unsigned short 
  4225 ;;  shape           1  [STACK] unsigned char 
  4226 ;;  inp_index       1  [STACK] unsigned char 
  4227 ;;  k               1  [STACK] unsigned char 
  4228 ;;  j               1  [STACK] unsigned char 
  4229 ;;  i               1  [STACK] unsigned char 
  4230 ;;  mode            1  [STACK] enum E17013
  4231 ;;  i_ror           1  [STACK] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1  [STACK] void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels required when called:   29
  4247 ;; This function calls:
  4248 ;;		_SYSTEM_Initialize
  4249 ;;		_StartTimer
  4250 ;;		_TimerDone
  4251 ;;		_WaitMs
  4252 ;;		___fladd
  4253 ;;		___flge
  4254 ;;		___fltol
  4255 ;;		_calc_model_data
  4256 ;;		_calc_ror_data
  4257 ;;		_check_adc_scan
  4258 ;;		_check_enter_button
  4259 ;;		_check_help
  4260 ;;		_clear_adc_scan
  4261 ;;		_clear_hid_pflags
  4262 ;;		_conv_raw_result
  4263 ;;		_convert_adc_data
  4264 ;;		_current_sensor_cal
  4265 ;;		_eaDogM_WriteCommand
  4266 ;;		_esr_check
  4267 ;;		_fabsf
  4268 ;;		_get_raw_result
  4269 ;;		_get_switch
  4270 ;;		_get_vterm_ptr
  4271 ;;		_hid_display
  4272 ;;		_init_bsoc
  4273 ;;		_init_display
  4274 ;;		_init_port_dma
  4275 ;;		_lp_filter
  4276 ;;		_mode_lamp_dim
  4277 ;;		_set_dac
  4278 ;;		_set_dac_a
  4279 ;;		_set_dac_b
  4280 ;;		_set_display_info
  4281 ;;		_set_load_relay_one
  4282 ;;		_set_load_relay_two
  4283 ;;		_set_vterm
  4284 ;;		_spinners
  4285 ;;		_sprintf
  4286 ;;		_srand
  4287 ;;		_start_adc_scan
  4288 ;;		_start_switch_handler
  4289 ;;		_static_soc
  4290 ;;		_update_lcd
  4291 ;;		_wait_lcd_done
  4292 ;; This function is called by:
  4293 ;;		Startup code after reset
  4294 ;; This function uses a reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text0
  4298  011244                     __ptext0:
  4299                           	opt callstack 0
  4300  011244                     _main:
  4301                           	opt callstack 0
  4302                           
  4303                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4304  011244  0E11               	movlw	17
  4305  011246  26E1               	addwf	fsr1l,f,c
  4306  011248  0E00               	movlw	0
  4307  01124A  22E2               	addwfc	fsr1h,f,c
  4308                           
  4309                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4310                           ;stkvar	_inp_index @ sp[(-17)+11]
  4311                           
  4312                           ;incstack = 0
  4313  01124C  0EFA               	movlw	-6
  4314  01124E  6AE3               	clrf	plusw1,c
  4315                           
  4316                           ;stkvar	_i @ sp[(-17)+14]
  4317  011250  0EFD               	movlw	-3
  4318  011252  6AE3               	clrf	plusw1,c
  4319                           
  4320                           ;stkvar	_j @ sp[(-17)+13]
  4321  011254  0EFC               	movlw	-4
  4322  011256  6AE3               	clrf	plusw1,c
  4323  011258  2AE3               	incf	plusw1,f,c
  4324                           
  4325                           ;stkvar	_k @ sp[(-17)+12]
  4326  01125A  0EFB               	movlw	-5
  4327  01125C  6AE3               	clrf	plusw1,c
  4328  01125E  82E3               	bsf	plusw1,1,c
  4329                           
  4330                           ;main.c: 195:  SYSTEM_Initialize();
  4331  011260  ECEC  F0DE         	call	_SYSTEM_Initialize	;wreg free
  4332                           
  4333                           ; BSR set to: 60
  4334                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4335  011264  8ED2               	bsf	210,7,c	;volatile
  4336                           
  4337                           ; BSR set to: 60
  4338                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4339  011266  8CD2               	bsf	210,6,c	;volatile
  4340                           
  4341                           ; BSR set to: 60
  4342                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4343  011268  0101               	movlb	1	; () banked
  4344  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;main.c: 208:  WaitMs(300);
  4348  01126C  0E2C               	movlw	44
  4349  01126E  6EE6               	movwf	postinc1,c
  4350  011270  0E01               	movlw	1
  4351  011272  6EE6               	movwf	postinc1,c
  4352  011274  EC59  F0E1         	call	_WaitMs	;wreg free
  4353                           
  4354                           ;main.c: 209:  if (PORTBbits.RB0) {
  4355  011278  A0CB               	btfss	203,0,c	;volatile
  4356  01127A  D004               	goto	l13759
  4357                           
  4358                           ;main.c: 210:   mode = UI_STATE_HOST;
  4359                           ;stkvar	_mode @ sp[(-17)+15]
  4360  01127C  0EFE               	movlw	-2
  4361  01127E  6AE3               	clrf	plusw1,c
  4362  011280  2AE3               	incf	plusw1,f,c
  4363                           
  4364                           ;main.c: 211:  } else {
  4365  011282  D004               	goto	l13761
  4366  011284                     l13759:
  4367                           
  4368                           ;main.c: 212:   mode = UI_STATE_LOG;
  4369                           ;stkvar	_mode @ sp[(-17)+15]
  4370  011284  0EFE               	movlw	-2
  4371  011286  6AE3               	clrf	plusw1,c
  4372  011288  80E3               	bsf	plusw1,0,c
  4373  01128A  82E3               	bsf	plusw1,1,c	;indir
  4374  01128C                     l13761:
  4375                           
  4376                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4377                           ;stkvar	_mode @ sp[(-17)+15]
  4378  01128C  0EFE               	movlw	-2
  4379  01128E  04E3               	decf	plusw1,w,c
  4380  011290  A4D8               	btfss	status,2,c
  4381  011292  D007               	goto	l1336
  4382                           
  4383                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4384  011294  80BD               	bsf	189,0,c	;volatile
  4385                           
  4386                           ;main.c: 217:   V.mode_pwm = 70;
  4387  011296  0E00               	movlw	0
  4388  011298  0101               	movlb	1	; () banked
  4389  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4390  01129C  0E46               	movlw	70
  4391  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4392                           
  4393                           ;main.c: 218:  } else {
  4394  0112A0  D004               	goto	l13765
  4395  0112A2                     l1336:
  4396  0112A2  90BD               	bcf	189,0,c	;volatile
  4397                           
  4398                           ;main.c: 220:   V.mode_pwm = 0;
  4399  0112A4  0101               	movlb	1	; () banked
  4400  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4401  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4402  0112AA                     l13765:
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4406  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4407  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4408  0112B6  ECFD  F0E4         	call	_mode_lamp_dim	;wreg free
  4409  0112BA  D34D               	goto	l13901
  4410  0112BC                     l13767:
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;main.c: 230:    init_port_dma();
  4414  0112BC  ECDC  F0E1         	call	_init_port_dma	;wreg free
  4415                           
  4416                           ; BSR set to: 59
  4417                           ;main.c: 232:    init_display();
  4418  0112C0  EC2A  F0D3         	call	_init_display	;wreg free
  4419                           
  4420                           ; BSR set to: 61
  4421                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4422  0112C4  0E0C               	movlw	12
  4423  0112C6  6EE6               	movwf	postinc1,c
  4424  0112C8  EC69  F0E5         	call	_eaDogM_WriteCommand	;wreg free
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;main.c: 234:    set_dac();
  4428  0112CC  ECD1  F0D6         	call	_set_dac	;wreg free
  4429                           
  4430                           ;main.c: 238:    set_load_relay_one(1);
  4431  0112D0  0E01               	movlw	1
  4432  0112D2  6EE6               	movwf	postinc1,c
  4433  0112D4  EC51  F0E5         	call	_set_load_relay_one	;wreg free
  4434                           
  4435                           ;main.c: 239:    set_load_relay_two(1);
  4436  0112D8  0E01               	movlw	1
  4437  0112DA  6EE6               	movwf	postinc1,c
  4438  0112DC  EC49  F0E5         	call	_set_load_relay_two	;wreg free
  4439                           
  4440                           ;main.c: 241:    V.ui_state = mode;
  4441                           ;stkvar	_mode @ sp[(-17)+15]
  4442  0112E0  0EFE               	movlw	-2
  4443  0112E2  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4444                           
  4445                           ;main.c: 242:    srand(1957);
  4446  0112E8  0EA5               	movlw	165
  4447  0112EA  6EE6               	movwf	postinc1,c
  4448  0112EC  0E07               	movlw	7
  4449  0112EE  6EE6               	movwf	postinc1,c
  4450  0112F0  EC74  F0E1         	call	_srand	;wreg free
  4451                           
  4452                           ; BSR set to: 1
  4453                           ;main.c: 243:    set_vterm(0);
  4454  0112F4  0E00               	movlw	0
  4455  0112F6  6EE6               	movwf	postinc1,c
  4456  0112F8  ECB5  F0E4         	call	_set_vterm	;wreg free
  4457                           
  4458                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4459  0112FC  0EDF               	movlw	low STR_1
  4460  0112FE  6EE6               	movwf	postinc1,c
  4461  011300  0EFE               	movlw	high STR_1
  4462  011302  6EE6               	movwf	postinc1,c
  4463  011304  0E00               	movlw	0
  4464  011306  6EE6               	movwf	postinc1,c
  4465  011308  0E00               	movlw	0
  4466  01130A  6EE6               	movwf	postinc1,c
  4467  01130C  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4468  011310  0060  F007  FFE6   	movff	btemp,postinc1
  4469  011316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4470  01131C  0E04               	movlw	4
  4471  01131E  6EE6               	movwf	postinc1,c
  4472  011320  EC2A  F0D2         	call	_sprintf	;wreg free
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.17");
  4476  011324  0ED1               	movlw	low STR_3
  4477  011326  6EE6               	movwf	postinc1,c
  4478  011328  0EFF               	movlw	high STR_3
  4479  01132A  6EE6               	movwf	postinc1,c
  4480  01132C  0EA0               	movlw	low STR_2
  4481  01132E  6EE6               	movwf	postinc1,c
  4482  011330  0EFE               	movlw	high STR_2
  4483  011332  6EE6               	movwf	postinc1,c
  4484  011334  0E00               	movlw	0
  4485  011336  6EE6               	movwf	postinc1,c
  4486  011338  0E01               	movlw	1
  4487  01133A  6EE6               	movwf	postinc1,c
  4488  01133C  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4489  011340  0060  F007  FFE6   	movff	btemp,postinc1
  4490  011346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4491  01134C  0E06               	movlw	6
  4492  01134E  6EE6               	movwf	postinc1,c
  4493  011350  EC2A  F0D2         	call	_sprintf	;wreg free
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4497  011354  0E4C               	movlw	low STR_4
  4498  011356  6EE6               	movwf	postinc1,c
  4499  011358  0EFE               	movlw	high STR_4
  4500  01135A  6EE6               	movwf	postinc1,c
  4501  01135C  0E00               	movlw	0
  4502  01135E  6EE6               	movwf	postinc1,c
  4503  011360  0E02               	movlw	2
  4504  011362  6EE6               	movwf	postinc1,c
  4505  011364  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4506  011368  0060  F007  FFE6   	movff	btemp,postinc1
  4507  01136E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4508  011374  0E04               	movlw	4
  4509  011376  6EE6               	movwf	postinc1,c
  4510  011378  EC2A  F0D2         	call	_sprintf	;wreg free
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4514  01137C  0ECE               	movlw	low STR_5
  4515  01137E  6EE6               	movwf	postinc1,c
  4516  011380  0EFD               	movlw	high STR_5
  4517  011382  6EE6               	movwf	postinc1,c
  4518  011384  0E02               	movlw	2
  4519  011386  6EE6               	movwf	postinc1,c
  4520  011388  0E00               	movlw	0
  4521  01138A  6EE6               	movwf	postinc1,c
  4522  01138C  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4523  011390  0060  F007  FFE6   	movff	btemp,postinc1
  4524  011396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4525  01139C  0E04               	movlw	4
  4526  01139E  6EE6               	movwf	postinc1,c
  4527  0113A0  EC2A  F0D2         	call	_sprintf	;wreg free
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4531  0113A4  0ECE               	movlw	low STR_5
  4532  0113A6  6EE6               	movwf	postinc1,c
  4533  0113A8  0EFD               	movlw	high STR_5
  4534  0113AA  6EE6               	movwf	postinc1,c
  4535  0113AC  0E02               	movlw	2
  4536  0113AE  6EE6               	movwf	postinc1,c
  4537  0113B0  0E01               	movlw	1
  4538  0113B2  6EE6               	movwf	postinc1,c
  4539  0113B4  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4540  0113B8  0060  F007  FFE6   	movff	btemp,postinc1
  4541  0113BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4542  0113C4  0E04               	movlw	4
  4543  0113C6  6EE6               	movwf	postinc1,c
  4544  0113C8  EC2A  F0D2         	call	_sprintf	;wreg free
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4548  0113CC  0ECE               	movlw	low STR_5
  4549  0113CE  6EE6               	movwf	postinc1,c
  4550  0113D0  0EFD               	movlw	high STR_5
  4551  0113D2  6EE6               	movwf	postinc1,c
  4552  0113D4  0E02               	movlw	2
  4553  0113D6  6EE6               	movwf	postinc1,c
  4554  0113D8  0E02               	movlw	2
  4555  0113DA  6EE6               	movwf	postinc1,c
  4556  0113DC  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4557  0113E0  0060  F007  FFE6   	movff	btemp,postinc1
  4558  0113E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4559  0113EC  0E04               	movlw	4
  4560  0113EE  6EE6               	movwf	postinc1,c
  4561  0113F0  EC2A  F0D2         	call	_sprintf	;wreg free
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;main.c: 250:    update_lcd(0);
  4565  0113F4  0E00               	movlw	0
  4566  0113F6  6EE6               	movwf	postinc1,c
  4567  0113F8  ECA2  F0D1         	call	_update_lcd	;wreg free
  4568                           
  4569                           ;main.c: 251:    WaitMs(1000);
  4570  0113FC  0EE8               	movlw	232
  4571  0113FE  6EE6               	movwf	postinc1,c
  4572  011400  0E03               	movlw	3
  4573  011402  6EE6               	movwf	postinc1,c
  4574  011404  EC59  F0E1         	call	_WaitMs	;wreg free
  4575                           
  4576                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4577  011408  0EFA               	movlw	250
  4578  01140A  6EE6               	movwf	postinc1,c
  4579  01140C  0E00               	movlw	0
  4580  01140E  6EE6               	movwf	postinc1,c
  4581  011410  0E0A               	movlw	10
  4582  011412  6EE6               	movwf	postinc1,c
  4583  011414  EC6A  F0E0         	call	_StartTimer	;wreg free
  4584                           
  4585                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4586  011418  0EC8               	movlw	200
  4587  01141A  6EE6               	movwf	postinc1,c
  4588  01141C  0E00               	movlw	0
  4589  01141E  6EE6               	movwf	postinc1,c
  4590  011420  0E01               	movlw	1
  4591  011422  6EE6               	movwf	postinc1,c
  4592  011424  EC6A  F0E0         	call	_StartTimer	;wreg free
  4593                           
  4594                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4595  011428  0EB8               	movlw	184
  4596  01142A  6EE6               	movwf	postinc1,c
  4597  01142C  0E0B               	movlw	11
  4598  01142E  6EE6               	movwf	postinc1,c
  4599  011430  0E07               	movlw	7
  4600  011432  6EE6               	movwf	postinc1,c
  4601  011434  EC6A  F0E0         	call	_StartTimer	;wreg free
  4602                           
  4603                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4604  011438  0EDC               	movlw	220
  4605  01143A  6EE6               	movwf	postinc1,c
  4606  01143C  0E05               	movlw	5
  4607  01143E  6EE6               	movwf	postinc1,c
  4608  011440  0E0B               	movlw	11
  4609  011442  6EE6               	movwf	postinc1,c
  4610  011444  EC6A  F0E0         	call	_StartTimer	;wreg free
  4611                           
  4612                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4613  011448  0EB8               	movlw	184
  4614  01144A  6EE6               	movwf	postinc1,c
  4615  01144C  0E0B               	movlw	11
  4616  01144E  6EE6               	movwf	postinc1,c
  4617  011450  0E09               	movlw	9
  4618  011452  6EE6               	movwf	postinc1,c
  4619  011454  EC6A  F0E0         	call	_StartTimer	;wreg free
  4620                           
  4621                           ;main.c: 258:    start_adc_scan();
  4622  011458  EC03  F0DD         	call	_start_adc_scan	;wreg free
  4623                           
  4624                           ;main.c: 259:    start_switch_handler();
  4625  01145C  EC77  F0E4         	call	_start_switch_handler	;wreg free
  4626                           
  4627                           ; BSR set to: 57
  4628                           ;main.c: 260:    WaitMs(1000);
  4629  011460  0EE8               	movlw	232
  4630  011462  6EE6               	movwf	postinc1,c
  4631  011464  0E03               	movlw	3
  4632  011466  6EE6               	movwf	postinc1,c
  4633  011468  EC59  F0E1         	call	_WaitMs	;wreg free
  4634                           
  4635                           ;main.c: 265:    i_ror = 1;
  4636                           ;stkvar	_i_ror @ sp[(-17)+16]
  4637  01146C  0EFF               	movlw	-1
  4638  01146E  6AE3               	clrf	plusw1,c
  4639  011470  2AE3               	incf	plusw1,f,c
  4640  011472                     l13819:
  4641                           
  4642                           ;main.c: 267:     calc_ror_data();
  4643  011472  ECB4  F0C8         	call	_calc_ror_data	;wreg free
  4644                           
  4645                           ;main.c: 268:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4646  011476  0E00               	movlw	0
  4647  011478  6EE6               	movwf	postinc1,c
  4648  01147A  0E04               	movlw	4
  4649  01147C  6EE6               	movwf	postinc1,c
  4650  01147E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  4651  011482  0060  F007  FFE6   	movff	btemp,postinc1
  4652  011488  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4653  01148E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4654  011494  0060  F013  FFE6   	movff	btemp+3,postinc1
  4655  01149A  0E37               	movlw	low STR_8
  4656  01149C  6EE6               	movwf	postinc1,c
  4657  01149E  0EFE               	movlw	high STR_8
  4658  0114A0  6EE6               	movwf	postinc1,c
  4659  0114A2  0E00               	movlw	0
  4660  0114A4  6EE6               	movwf	postinc1,c
  4661  0114A6  0E01               	movlw	1
  4662  0114A8  6EE6               	movwf	postinc1,c
  4663  0114AA  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4664  0114AE  0060  F007  FFE6   	movff	btemp,postinc1
  4665  0114B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4666  0114BA  0E08               	movlw	8
  4667  0114BC  6EE6               	movwf	postinc1,c
  4668  0114BE  EC2A  F0D2         	call	_sprintf	;wreg free
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4672  0114C2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4673  0114C6  006F FF7B FFE6     	movff	postinc2,postinc1
  4674  0114CC  006F FF7B FFE6     	movff	postinc2,postinc1
  4675  0114D2  006F FF7B FFE6     	movff	postinc2,postinc1
  4676  0114D8  006F FF7B FFE6     	movff	postinc2,postinc1
  4677                           
  4678                           ;stkvar	_i_ror @ sp[(-21)+16]
  4679  0114DE  0EFB               	movlw	-5
  4680  0114E0  50E3               	movf	plusw1,w,c
  4681  0114E2  6EE6               	movwf	postinc1,c
  4682  0114E4  0E00               	movlw	0
  4683  0114E6  6EE6               	movwf	postinc1,c
  4684  0114E8  0E00               	movlw	0
  4685  0114EA  6EE6               	movwf	postinc1,c
  4686  0114EC  0E05               	movlw	5
  4687  0114EE  6EE6               	movwf	postinc1,c
  4688  0114F0  ECAF  F0D2         	call	_spinners	;wreg free
  4689  0114F4  5001               	movf	btemp^0,w,c
  4690  0114F6  6EE6               	movwf	postinc1,c
  4691  0114F8  0E00               	movlw	0
  4692  0114FA  6EE6               	movwf	postinc1,c
  4693  0114FC  0EC9               	movlw	low STR_9
  4694  0114FE  6EE6               	movwf	postinc1,c
  4695  011500  0EFB               	movlw	high STR_9
  4696  011502  6EE6               	movwf	postinc1,c
  4697  011504  0E00               	movlw	0
  4698  011506  6EE6               	movwf	postinc1,c
  4699  011508  0E02               	movlw	2
  4700  01150A  6EE6               	movwf	postinc1,c
  4701  01150C  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4702  011510  0060  F007  FFE6   	movff	btemp,postinc1
  4703  011516  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4704  01151C  0E0C               	movlw	12
  4705  01151E  6EE6               	movwf	postinc1,c
  4706  011520  EC2A  F0D2         	call	_sprintf	;wreg free
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;main.c: 270:     update_lcd(0);
  4710  011524  0E00               	movlw	0
  4711  011526  6EE6               	movwf	postinc1,c
  4712  011528  ECA2  F0D1         	call	_update_lcd	;wreg free
  4713                           
  4714                           ;main.c: 271:     clear_adc_scan();
  4715  01152C  ECBD  F0E5         	call	_clear_adc_scan	;wreg free
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;main.c: 272:     start_adc_scan();
  4719  011530  EC03  F0DD         	call	_start_adc_scan	;wreg free
  4720                           
  4721                           ;main.c: 273:     WaitMs(2000);
  4722  011534  0ED0               	movlw	208
  4723  011536  6EE6               	movwf	postinc1,c
  4724  011538  0E07               	movlw	7
  4725  01153A  6EE6               	movwf	postinc1,c
  4726  01153C  EC59  F0E1         	call	_WaitMs	;wreg free
  4727                           
  4728                           ;main.c: 276:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4729                           ;stkvar	_i_ror @ sp[(-17)+16]
  4730  011540  0EFF               	movlw	-1
  4731  011542  006F FF8C  F00C    	movff	plusw1,btemp+11
  4732  011548  2A0C               	incf	(btemp+11)^0,f,c
  4733  01154A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4734  011550  060C               	decf	(btemp+11)^0,f,c
  4735  011552  0E1E               	movlw	30
  4736  011554  600C               	cpfslt	(btemp+11)^0,c
  4737  011556  D01A               	goto	u13230
  4738  011558  EE21  F36B         	lfsr	2,_C+108	;volatile
  4739  01155C  006F FF7B FFE6     	movff	postinc2,postinc1
  4740  011562  006F FF7B FFE6     	movff	postinc2,postinc1
  4741  011568  006F FF7B FFE6     	movff	postinc2,postinc1
  4742  01156E  006F FF7B FFE6     	movff	postinc2,postinc1
  4743  011574  0E42               	movlw	66
  4744  011576  6EE6               	movwf	postinc1,c
  4745  011578  0E60               	movlw	96
  4746  01157A  6EE6               	movwf	postinc1,c
  4747  01157C  0E65               	movlw	101
  4748  01157E  6EE6               	movwf	postinc1,c
  4749  011580  0E3C               	movlw	60
  4750  011582  6EE6               	movwf	postinc1,c
  4751  011584  ECF0  F0CA         	call	___flge	;wreg free
  4752  011588  A001               	btfss	btemp& (0+255),0,c
  4753  01158A  D773               	goto	l13819
  4754  01158C                     u13230:
  4755                           
  4756                           ;main.c: 278:    static_soc();
  4757  01158C  ECC7  F0DD         	call	_static_soc	;wreg free
  4758                           
  4759                           ;main.c: 279:    init_bsoc();
  4760  011590  ECCF  F0BF         	call	_init_bsoc	;wreg free
  4761                           
  4762                           ;main.c: 280:    set_load_relay_one(0);
  4763  011594  0E00               	movlw	0
  4764  011596  6EE6               	movwf	postinc1,c
  4765  011598  EC51  F0E5         	call	_set_load_relay_one	;wreg free
  4766                           
  4767                           ;main.c: 281:    set_load_relay_two(0);
  4768  01159C  0E00               	movlw	0
  4769  01159E  6EE6               	movwf	postinc1,c
  4770  0115A0  EC49  F0E5         	call	_set_load_relay_two	;wreg free
  4771                           
  4772                           ;main.c: 282:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4773  0115A4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4774  0115A8  006F FF78  F00B    	movff	postinc2,btemp+10
  4775  0115AE  006F FF74  F00C    	movff	postdec2,btemp+11
  4776  0115B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4777  0115BA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4778  0115C0  0E84               	movlw	low STR_10
  4779  0115C2  6EE6               	movwf	postinc1,c
  4780  0115C4  0EFC               	movlw	high STR_10
  4781  0115C6  6EE6               	movwf	postinc1,c
  4782  0115C8  0E00               	movlw	0
  4783  0115CA  6EE6               	movwf	postinc1,c
  4784  0115CC  0E00               	movlw	0
  4785  0115CE  6EE6               	movwf	postinc1,c
  4786  0115D0  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4787  0115D4  0060  F007  FFE6   	movff	btemp,postinc1
  4788  0115DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4789  0115E0  0E06               	movlw	6
  4790  0115E2  6EE6               	movwf	postinc1,c
  4791  0115E4  EC2A  F0D2         	call	_sprintf	;wreg free
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;main.c: 283:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4795  0115E8  EE21  F38F         	lfsr	2,_C+144	;volatile
  4796  0115EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4797  0115F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4798  0115F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4799  0115FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4800  011604  0E60               	movlw	low STR_11
  4801  011606  6EE6               	movwf	postinc1,c
  4802  011608  0EFD               	movlw	high STR_11
  4803  01160A  6EE6               	movwf	postinc1,c
  4804  01160C  0E00               	movlw	0
  4805  01160E  6EE6               	movwf	postinc1,c
  4806  011610  0E01               	movlw	1
  4807  011612  6EE6               	movwf	postinc1,c
  4808  011614  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4809  011618  0060  F007  FFE6   	movff	btemp,postinc1
  4810  01161E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4811  011624  0E08               	movlw	8
  4812  011626  6EE6               	movwf	postinc1,c
  4813  011628  EC2A  F0D2         	call	_sprintf	;wreg free
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;main.c: 284:    update_lcd(0);
  4817  01162C  0E00               	movlw	0
  4818  01162E  6EE6               	movwf	postinc1,c
  4819  011630  ECA2  F0D1         	call	_update_lcd	;wreg free
  4820                           
  4821                           ;main.c: 285:    WaitMs(2000);
  4822  011634  0ED0               	movlw	208
  4823  011636  6EE6               	movwf	postinc1,c
  4824  011638  0E07               	movlw	7
  4825  01163A  6EE6               	movwf	postinc1,c
  4826  01163C  EC59  F0E1         	call	_WaitMs	;wreg free
  4827                           
  4828                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4829  011640  0E61               	movlw	low STR_12
  4830  011642  6EE6               	movwf	postinc1,c
  4831  011644  0EFE               	movlw	high STR_12
  4832  011646  6EE6               	movwf	postinc1,c
  4833  011648  0E00               	movlw	0
  4834  01164A  6EE6               	movwf	postinc1,c
  4835  01164C  0E00               	movlw	0
  4836  01164E  6EE6               	movwf	postinc1,c
  4837  011650  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4838  011654  0060  F007  FFE6   	movff	btemp,postinc1
  4839  01165A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4840  011660  0E04               	movlw	4
  4841  011662  6EE6               	movwf	postinc1,c
  4842  011664  EC2A  F0D2         	call	_sprintf	;wreg free
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4846  011668  0E76               	movlw	low STR_13
  4847  01166A  6EE6               	movwf	postinc1,c
  4848  01166C  0EFE               	movlw	high STR_13
  4849  01166E  6EE6               	movwf	postinc1,c
  4850  011670  0E00               	movlw	0
  4851  011672  6EE6               	movwf	postinc1,c
  4852  011674  0E01               	movlw	1
  4853  011676  6EE6               	movwf	postinc1,c
  4854  011678  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4855  01167C  0060  F007  FFE6   	movff	btemp,postinc1
  4856  011682  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4857  011688  0E04               	movlw	4
  4858  01168A  6EE6               	movwf	postinc1,c
  4859  01168C  EC2A  F0D2         	call	_sprintf	;wreg free
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4863  011690  0E33               	movlw	low STR_14
  4864  011692  6EE6               	movwf	postinc1,c
  4865  011694  0EFF               	movlw	high STR_14
  4866  011696  6EE6               	movwf	postinc1,c
  4867  011698  0E00               	movlw	0
  4868  01169A  6EE6               	movwf	postinc1,c
  4869  01169C  0E02               	movlw	2
  4870  01169E  6EE6               	movwf	postinc1,c
  4871  0116A0  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4872  0116A4  0060  F007  FFE6   	movff	btemp,postinc1
  4873  0116AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4874  0116B0  0E04               	movlw	4
  4875  0116B2  6EE6               	movwf	postinc1,c
  4876  0116B4  EC2A  F0D2         	call	_sprintf	;wreg free
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;main.c: 289:    update_lcd(0);
  4880  0116B8  0E00               	movlw	0
  4881  0116BA  6EE6               	movwf	postinc1,c
  4882  0116BC  ECA2  F0D1         	call	_update_lcd	;wreg free
  4883                           
  4884                           ;main.c: 290:    uint16_t i_esr = 1;
  4885  0116C0  0E01               	movlw	1
  4886  0116C2  6E0B               	movwf	(btemp+10)^0,c
  4887  0116C4  0E00               	movlw	0
  4888  0116C6  6E0C               	movwf	(btemp+11)^0,c
  4889                           
  4890                           ;stkvar	_i_esr @ sp[(-17)+8]
  4891  0116C8  0EF7               	movlw	-9
  4892  0116CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4893  0116D0  0EF8               	movlw	-8
  4894  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4895                           
  4896                           ;main.c: 292:    float esr_temp;;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4897  0116D8  D06D               	goto	l13877
  4898  0116DA                     l13865:
  4899                           
  4900                           ;main.c: 294:     WaitMs(110);
  4901  0116DA  0E6E               	movlw	110
  4902  0116DC  6EE6               	movwf	postinc1,c
  4903  0116DE  0E00               	movlw	0
  4904  0116E0  6EE6               	movwf	postinc1,c
  4905  0116E2  EC59  F0E1         	call	_WaitMs	;wreg free
  4906                           
  4907                           ;main.c: 295:     shape = (uint8_t) fabsf(esr_temp);
  4908                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4909  0116E6  0EF3               	movlw	-13
  4910  0116E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4911  0116EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4912  0116F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4913  0116FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4914  011700  EC2C  F0D7         	call	_fabsf	;wreg free
  4915  011704  0060  F007  FFE6   	movff	btemp,postinc1
  4916  01170A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4917  011710  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4918  011716  0060  F013  FFE6   	movff	btemp+3,postinc1
  4919  01171C  EC37  F0CA         	call	___fltol	;wreg free
  4920  011720  0060  F004  F00C   	movff	btemp,btemp+11
  4921                           
  4922                           ;stkvar	_shape @ sp[(-17)+10]
  4923  011726  0EF9               	movlw	-7
  4924  011728  0060  F033  FFE3   	movff	btemp+11,plusw1
  4925                           
  4926                           ;main.c: 296:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4927  01172E  0E00               	movlw	0
  4928  011730  6EE6               	movwf	postinc1,c
  4929                           
  4930                           ;stkvar	_shape @ sp[(-18)+10]
  4931  011732  0EF8               	movlw	-8
  4932  011734  50E3               	movf	plusw1,w,c
  4933  011736  6EE6               	movwf	postinc1,c
  4934  011738  ECAF  F0D2         	call	_spinners	;wreg free
  4935  01173C  5001               	movf	btemp^0,w,c
  4936  01173E  6EE6               	movwf	postinc1,c
  4937  011740  0E00               	movlw	0
  4938  011742  6EE6               	movwf	postinc1,c
  4939  011744  0E00               	movlw	0
  4940  011746  6EE6               	movwf	postinc1,c
  4941  011748  0E00               	movlw	0
  4942  01174A  6EE6               	movwf	postinc1,c
  4943  01174C  ECAF  F0D2         	call	_spinners	;wreg free
  4944  011750  5001               	movf	btemp^0,w,c
  4945  011752  6EE6               	movwf	postinc1,c
  4946  011754  0E00               	movlw	0
  4947  011756  6EE6               	movwf	postinc1,c
  4948  011758  0E09               	movlw	low STR_15
  4949  01175A  6EE6               	movwf	postinc1,c
  4950  01175C  0EFF               	movlw	high STR_15
  4951  01175E  6EE6               	movwf	postinc1,c
  4952  011760  0E00               	movlw	0
  4953  011762  6EE6               	movwf	postinc1,c
  4954  011764  0E02               	movlw	2
  4955  011766  6EE6               	movwf	postinc1,c
  4956  011768  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  4957  01176C  0060  F007  FFE6   	movff	btemp,postinc1
  4958  011772  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4959  011778  0E08               	movlw	8
  4960  01177A  6EE6               	movwf	postinc1,c
  4961  01177C  EC2A  F0D2         	call	_sprintf	;wreg free
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;main.c: 297:     update_lcd(0);
  4965  011780  0E00               	movlw	0
  4966  011782  6EE6               	movwf	postinc1,c
  4967  011784  ECA2  F0D1         	call	_update_lcd	;wreg free
  4968                           
  4969                           ;main.c: 299:     if (i_esr++ > 512)
  4970                           ;stkvar	_i_esr @ sp[(-17)+8]
  4971  011788  50E1               	movf	fsr1l,w,c
  4972  01178A  0FF7               	addlw	-9
  4973  01178C  6ED9               	movwf	fsr2l,c
  4974  01178E  50E2               	movf	fsr1h,w,c
  4975  011790  6EDA               	movwf	fsr2h,c
  4976  011792  0EFF               	movlw	255
  4977  011794  22DA               	addwfc	fsr2h,f,c
  4978  011796  006F FF7C  F00B    	movff	indf2,btemp+10
  4979  01179C  0E01               	movlw	1
  4980  01179E  26DE               	addwf	postinc2,f,c
  4981  0117A0  006F FF7C  F00C    	movff	indf2,btemp+11
  4982  0117A6  0E00               	movlw	0
  4983  0117A8  22DD               	addwfc	postdec2,f,c
  4984  0117AA  040B               	decf	(btemp+10)^0,w,c
  4985  0117AC  0E02               	movlw	2
  4986  0117AE  580C               	subwfb	(btemp+11)^0,w,c
  4987  0117B0  B0D8               	btfsc	status,0,c
  4988  0117B2  D017               	goto	u13250
  4989  0117B4                     l13877:
  4990                           
  4991                           ;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0) {
  4992  0117B4  0E00               	movlw	0
  4993  0117B6  6EE6               	movwf	postinc1,c
  4994  0117B8  EC8A  F0BA         	call	_esr_check	;wreg free
  4995                           
  4996                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4997  0117BC  0EF3               	movlw	-13
  4998  0117BE  0060  F007  FFE3   	movff	btemp,plusw1
  4999  0117C4  0EF4               	movlw	-12
  5000  0117C6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5001  0117CC  0EF5               	movlw	-11
  5002  0117CE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5003  0117D4  0EF6               	movlw	-10
  5004  0117D6  0060  F013  FFE3   	movff	btemp+3,plusw1
  5005  0117DC  0EF6               	movlw	-10
  5006  0117DE  BEE3               	btfsc	plusw1,7,c
  5007  0117E0  D77C               	goto	l13865
  5008  0117E2                     u13250:
  5009                           
  5010                           ;main.c: 302:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5011  0117E2  EE21  F387         	lfsr	2,_C+136	;volatile
  5012  0117E6  006F FF7B FFE6     	movff	postinc2,postinc1
  5013  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  5014  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5016  0117FE  0E6E               	movlw	low STR_16
  5017  011800  6EE6               	movwf	postinc1,c
  5018  011802  0EFC               	movlw	high STR_16
  5019  011804  6EE6               	movwf	postinc1,c
  5020  011806  0E00               	movlw	0
  5021  011808  6EE6               	movwf	postinc1,c
  5022  01180A  0E00               	movlw	0
  5023  01180C  6EE6               	movwf	postinc1,c
  5024  01180E  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5025  011812  0060  F007  FFE6   	movff	btemp,postinc1
  5026  011818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5027  01181E  0E08               	movlw	8
  5028  011820  6EE6               	movwf	postinc1,c
  5029  011822  EC2A  F0D2         	call	_sprintf	;wreg free
  5030                           
  5031                           ;main.c: 303:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5032  011826  EE22  F00D         	lfsr	2,_C+270	;volatile
  5033  01182A  006F FF7B FFE6     	movff	postinc2,postinc1
  5034  011830  006F FF7B FFE6     	movff	postinc2,postinc1
  5035  011836  006F FF7B FFE6     	movff	postinc2,postinc1
  5036  01183C  006F FF7B FFE6     	movff	postinc2,postinc1
  5037  011842  EE22  F019         	lfsr	2,_C+282	;volatile
  5038  011846  006F FF7B FFE6     	movff	postinc2,postinc1
  5039  01184C  006F FF7B FFE6     	movff	postinc2,postinc1
  5040  011852  006F FF7B FFE6     	movff	postinc2,postinc1
  5041  011858  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  01185E  0E95               	movlw	low STR_17
  5043  011860  6EE6               	movwf	postinc1,c
  5044  011862  0EFB               	movlw	high STR_17
  5045  011864  6EE6               	movwf	postinc1,c
  5046  011866  0E00               	movlw	0
  5047  011868  6EE6               	movwf	postinc1,c
  5048  01186A  0E01               	movlw	1
  5049  01186C  6EE6               	movwf	postinc1,c
  5050  01186E  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5051  011872  0060  F007  FFE6   	movff	btemp,postinc1
  5052  011878  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5053  01187E  0E0C               	movlw	12
  5054  011880  6EE6               	movwf	postinc1,c
  5055  011882  EC2A  F0D2         	call	_sprintf	;wreg free
  5056                           
  5057                           ;main.c: 304:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5058  011886  EE22  F011         	lfsr	2,_C+274	;volatile
  5059  01188A  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  011890  006F FF7B FFE6     	movff	postinc2,postinc1
  5061  011896  006F FF7B FFE6     	movff	postinc2,postinc1
  5062  01189C  006F FF7B FFE6     	movff	postinc2,postinc1
  5063  0118A2  EE22  F01D         	lfsr	2,_C+286	;volatile
  5064  0118A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5065  0118AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5066  0118B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5067  0118B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5068  0118BE  0EAF               	movlw	low STR_18
  5069  0118C0  6EE6               	movwf	postinc1,c
  5070  0118C2  0EFB               	movlw	high STR_18
  5071  0118C4  6EE6               	movwf	postinc1,c
  5072  0118C6  0E00               	movlw	0
  5073  0118C8  6EE6               	movwf	postinc1,c
  5074  0118CA  0E02               	movlw	2
  5075  0118CC  6EE6               	movwf	postinc1,c
  5076  0118CE  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5077  0118D2  0060  F007  FFE6   	movff	btemp,postinc1
  5078  0118D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5079  0118DE  0E0C               	movlw	12
  5080  0118E0  6EE6               	movwf	postinc1,c
  5081  0118E2  EC2A  F0D2         	call	_sprintf	;wreg free
  5082                           
  5083                           ;main.c: 305:    update_lcd(0);
  5084  0118E6  0E00               	movlw	0
  5085  0118E8  6EE6               	movwf	postinc1,c
  5086  0118EA  ECA2  F0D1         	call	_update_lcd	;wreg free
  5087                           
  5088                           ;main.c: 306:    WaitMs(4000);
  5089  0118EE  0EA0               	movlw	160
  5090  0118F0  6EE6               	movwf	postinc1,c
  5091  0118F2  0E0F               	movlw	15
  5092  0118F4  6EE6               	movwf	postinc1,c
  5093  0118F6  EC59  F0E1         	call	_WaitMs	;wreg free
  5094                           
  5095                           ;main.c: 307:    V.sensor_set = get_switch(SCALIB);
  5096  0118FA  0E04               	movlw	4
  5097  0118FC  6EE6               	movwf	postinc1,c
  5098  0118FE  EC53  F0E2         	call	_get_switch	;wreg free
  5099  011902  5001               	movf	btemp^0,w,c
  5100  011904  B4D8               	btfsc	status,2,c
  5101  011906  D002               	goto	u13260
  5102  011908  0E01               	movlw	1
  5103  01190A  D001               	goto	u13270
  5104  01190C                     u13260:
  5105  01190C  0E00               	movlw	0
  5106  01190E                     u13270:
  5107  01190E  0101               	movlb	1	; () banked
  5108  011910  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;main.c: 308:    WaitMs(1000);
  5112  011912  0EE8               	movlw	232
  5113  011914  6EE6               	movwf	postinc1,c
  5114  011916  0E03               	movlw	3
  5115  011918  6EE6               	movwf	postinc1,c
  5116  01191A  EC59  F0E1         	call	_WaitMs	;wreg free
  5117                           
  5118                           ;main.c: 309:    if (V.sensor_set && get_switch(SCALIB)) {
  5119  01191E  0101               	movlb	1	; () banked
  5120  011920  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5121  011922  B4D8               	btfsc	status,2,c
  5122  011924  D00F               	goto	l13895
  5123                           
  5124                           ; BSR set to: 1
  5125  011926  0E04               	movlw	4
  5126  011928  6EE6               	movwf	postinc1,c
  5127  01192A  EC53  F0E2         	call	_get_switch	;wreg free
  5128  01192E  5001               	movf	btemp^0,w,c
  5129  011930  B4D8               	btfsc	status,2,c
  5130  011932  D008               	goto	l13895
  5131                           
  5132                           ;main.c: 310:     current_sensor_cal();
  5133  011934  EC71  F0B2         	call	_current_sensor_cal	;wreg free
  5134                           
  5135                           ;main.c: 311:     WaitMs(4000);
  5136  011938  0EA0               	movlw	160
  5137  01193A  6EE6               	movwf	postinc1,c
  5138  01193C  0E0F               	movlw	15
  5139  01193E  6EE6               	movwf	postinc1,c
  5140  011940  EC59  F0E1         	call	_WaitMs	;wreg free
  5141  011944                     l13895:
  5142                           
  5143                           ;main.c: 313:    V.sensor_set = 0;
  5144  011944  0101               	movlb	1	; () banked
  5145  011946  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5146                           
  5147                           ; BSR set to: 1
  5148                           ;main.c: 314:    V.system_stable = 1;
  5149  011948  0E01               	movlw	1
  5150  01194A  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5151                           
  5152                           ;main.c: 315:    break;
  5153  01194C  D01B               	goto	l13903
  5154  01194E                     l1353:
  5155                           
  5156                           ; BSR set to: 1
  5157                           ;main.c: 321:    P.SYSTEM_STABLE = 1;
  5158  01194E  81F3               	bsf	(_P+1)& (0+255),0,b	;volatile
  5159                           
  5160                           ;main.c: 322:    break;
  5161  011950  D019               	goto	l13903
  5162  011952                     l1355:
  5163                           
  5164                           ; BSR set to: 1
  5165                           ;main.c: 325:    V.ui_state = UI_STATE_INIT;
  5166  011952  6B07               	clrf	_V& (0+255),b	;volatile
  5167                           
  5168                           ;main.c: 326:    break;
  5169  011954  D017               	goto	l13903
  5170  011956                     l13901:
  5171  011956  0101               	movlb	1	; () banked
  5172  011958  5107               	movf	_V& (0+255),w,b	;volatile
  5173  01195A  6E0B               	movwf	(btemp+10)^0,c
  5174  01195C  6A0C               	clrf	(btemp+11)^0,c
  5175                           
  5176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5177                           ; Switch size 1, requested type "simple"
  5178                           ; Number of cases is 1, Range of values is 0 to 0
  5179                           ; switch strategies available:
  5180                           ; Name         Instructions Cycles
  5181                           ; simple_byte            4     3 (average)
  5182                           ;	Chosen strategy is simple_byte
  5183  01195E  500C               	movf	(btemp+11)^0,w,c
  5184  011960  0A00               	xorlw	0	; case 0
  5185  011962  A4D8               	btfss	status,2,c
  5186  011964  D7F6               	goto	l1355
  5187                           
  5188                           ; BSR set to: 1
  5189                           ; Switch size 1, requested type "simple"
  5190                           ; Number of cases is 5, Range of values is 0 to 5
  5191                           ; switch strategies available:
  5192                           ; Name         Instructions Cycles
  5193                           ; simple_byte           16     9 (average)
  5194                           ;	Chosen strategy is simple_byte
  5195  011966  500B               	movf	(btemp+10)^0,w,c
  5196  011968  0A00               	xorlw	0	; case 0
  5197  01196A  B4D8               	btfsc	status,2,c
  5198  01196C  D4A7               	goto	l13767
  5199  01196E  0A01               	xorlw	1	; case 1
  5200  011970  B4D8               	btfsc	status,2,c
  5201  011972  D008               	goto	l13903
  5202  011974  0A02               	xorlw	2	; case 3
  5203  011976  B4D8               	btfsc	status,2,c
  5204  011978  D005               	goto	l13903
  5205  01197A  0A07               	xorlw	7	; case 4
  5206  01197C  B4D8               	btfsc	status,2,c
  5207  01197E  D7E7               	goto	l1353
  5208  011980  0A01               	xorlw	1	; case 5
  5209  011982  D7E7               	goto	l1355
  5210  011984                     l13903:
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;main.c: 329:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5214  011984  0E01               	movlw	1
  5215  011986  6EE6               	movwf	postinc1,c
  5216  011988  ECBF  F0E2         	call	_TimerDone	;wreg free
  5217  01198C  5001               	movf	btemp^0,w,c
  5218  01198E  B4D8               	btfsc	status,2,c
  5219  011990  D013               	goto	l13915
  5220  011992  ECAD  F0E5         	call	_check_adc_scan	;wreg free
  5221  011996  5001               	movf	btemp^0,w,c
  5222  011998  B4D8               	btfsc	status,2,c
  5223  01199A  D00E               	goto	l13915
  5224                           
  5225                           ;main.c: 333:    convert_adc_data();
  5226  01199C  EC75  F0D6         	call	_convert_adc_data	;wreg free
  5227                           
  5228                           ;main.c: 337:    clear_adc_scan();
  5229  0119A0  ECBD  F0E5         	call	_clear_adc_scan	;wreg free
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;main.c: 338:    start_adc_scan();
  5233  0119A4  EC03  F0DD         	call	_start_adc_scan	;wreg free
  5234                           
  5235                           ;main.c: 339:    StartTimer(TMR_ADC, 200);
  5236  0119A8  0EC8               	movlw	200
  5237  0119AA  6EE6               	movwf	postinc1,c
  5238  0119AC  0E00               	movlw	0
  5239  0119AE  6EE6               	movwf	postinc1,c
  5240  0119B0  0E01               	movlw	1
  5241  0119B2  6EE6               	movwf	postinc1,c
  5242  0119B4  EC6A  F0E0         	call	_StartTimer	;wreg free
  5243  0119B8                     l13915:
  5244                           
  5245                           ;main.c: 346:   if (TimerDone(TMR_DISPLAY)) {
  5246                           
  5247                           ;main.c: 342:   if (V.ticks) {
  5248  0119B8  0E0A               	movlw	10
  5249  0119BA  6EE6               	movwf	postinc1,c
  5250  0119BC  ECBF  F0E2         	call	_TimerDone	;wreg free
  5251  0119C0  5001               	movf	btemp^0,w,c
  5252  0119C2  B4D8               	btfsc	status,2,c
  5253  0119C4  EF88  F091         	goto	l13999
  5254                           
  5255                           ;main.c: 347:    if (TimerDone(TMR_HELPDIS)) {
  5256  0119C8  0E09               	movlw	9
  5257  0119CA  6EE6               	movwf	postinc1,c
  5258  0119CC  ECBF  F0E2         	call	_TimerDone	;wreg free
  5259  0119D0  5001               	movf	btemp^0,w,c
  5260  0119D2  B4D8               	btfsc	status,2,c
  5261  0119D4  D004               	goto	l13923
  5262                           
  5263                           ;main.c: 348:     set_display_info(DIS_STR);
  5264  0119D6  0E00               	movlw	0
  5265  0119D8  6EE6               	movwf	postinc1,c
  5266  0119DA  ECC4  F0E4         	call	_set_display_info	;wreg free
  5267  0119DE                     l13923:
  5268                           
  5269                           ;main.c: 350:    calc_model_data();
  5270  0119DE  EC6E  F0AE         	call	_calc_model_data	;wreg free
  5271                           
  5272                           ; BSR set to: 57
  5273                           ;main.c: 357:     hid_display(&H);
  5274                           
  5275                           ;main.c: 352:    if (0) {
  5276  0119E2  0EC7               	movlw	low _H
  5277  0119E4  6EE6               	movwf	postinc1,c
  5278  0119E6  0E01               	movlw	high _H
  5279  0119E8  6EE6               	movwf	postinc1,c
  5280  0119EA  EC22  F0C3         	call	_hid_display	;wreg free
  5281                           
  5282                           ;main.c: 358:     switch (H.hid_display) {
  5283  0119EE  EF1E  F091         	goto	l13971
  5284  0119F2                     l1363:
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;main.c: 360:      V.calib = 0;
  5288  0119F2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5289                           
  5290                           ; BSR set to: 1
  5291                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5292  0119F4  EE22  F021         	lfsr	2,_C+290	;volatile
  5293  0119F8  50DF               	movf	indf2,w,c
  5294  0119FA  A4D8               	btfss	status,2,c
  5295  0119FC  D002               	goto	l13933
  5296                           
  5297                           ; BSR set to: 1
  5298  0119FE  0E20               	movlw	32
  5299  011A00  D001               	goto	L1
  5300  011A02                     l13933:
  5301                           
  5302                           ; BSR set to: 1
  5303  011A02  0E44               	movlw	68
  5304  011A04                     L1:
  5305  011A04  6E0B               	movwf	(btemp+10)^0,c
  5306  011A06  0E00               	movlw	0
  5307  011A08  6E0C               	movwf	(btemp+11)^0,c
  5308                           
  5309                           ;stkvar	_main$3786 @ sp[(-17)+2]
  5310  011A0A  0EF1               	movlw	-15
  5311  011A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5312  011A12  0EF2               	movlw	-14
  5313  011A14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5314                           
  5315                           ; BSR set to: 1
  5316  011A1A  EE21  F37B         	lfsr	2,_C+124	;volatile
  5317  011A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5318  011A24  006F FF7B FFE6     	movff	postinc2,postinc1
  5319  011A2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5320  011A30  006F FF7B FFE6     	movff	postinc2,postinc1
  5321                           
  5322                           ;stkvar	_main$3786 @ sp[(-21)+2]
  5323  011A36  0EED               	movlw	-19
  5324  011A38  006F FF8F FFE6     	movff	plusw1,postinc1
  5325  011A3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5326  011A44  0E4A               	movlw	low STR_22
  5327  011A46  6EE6               	movwf	postinc1,c
  5328  011A48  0EFD               	movlw	high STR_22
  5329  011A4A  6EE6               	movwf	postinc1,c
  5330  011A4C  0E00               	movlw	0
  5331  011A4E  6EE6               	movwf	postinc1,c
  5332  011A50  0E00               	movlw	0
  5333  011A52  6EE6               	movwf	postinc1,c
  5334  011A54  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5335  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  5336  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5337  011A64  0E0A               	movlw	10
  5338  011A66  6EE6               	movwf	postinc1,c
  5339  011A68  EC2A  F0D2         	call	_sprintf	;wreg free
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5343  011A6C  EE21  F373         	lfsr	2,_C+116	;volatile
  5344  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5346  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5347  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5348  011A88  0E34               	movlw	low STR_23
  5349  011A8A  6EE6               	movwf	postinc1,c
  5350  011A8C  0EFD               	movlw	high STR_23
  5351  011A8E  6EE6               	movwf	postinc1,c
  5352  011A90  0E00               	movlw	0
  5353  011A92  6EE6               	movwf	postinc1,c
  5354  011A94  0E01               	movlw	1
  5355  011A96  6EE6               	movwf	postinc1,c
  5356  011A98  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5357  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5358  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5359  011AA8  0E08               	movlw	8
  5360  011AAA  6EE6               	movwf	postinc1,c
  5361  011AAC  EC2A  F0D2         	call	_sprintf	;wreg free
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5365  011AB0  EE21  F377         	lfsr	2,_C+120	;volatile
  5366  011AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  011ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  011AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5369  011AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  011ACC  0E1E               	movlw	low STR_24
  5371  011ACE  6EE6               	movwf	postinc1,c
  5372  011AD0  0EFD               	movlw	high STR_24
  5373  011AD2  6EE6               	movwf	postinc1,c
  5374  011AD4  0E00               	movlw	0
  5375  011AD6  6EE6               	movwf	postinc1,c
  5376  011AD8  0E02               	movlw	2
  5377  011ADA  6EE6               	movwf	postinc1,c
  5378  011ADC  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5379  011AE0  0060  F007  FFE6   	movff	btemp,postinc1
  5380  011AE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5381  011AEC  0E08               	movlw	8
  5382  011AEE  6EE6               	movwf	postinc1,c
  5383  011AF0  EC2A  F0D2         	call	_sprintf	;wreg free
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5387  011AF4  EE22  F021         	lfsr	2,_C+290	;volatile
  5388  011AF8  50DF               	movf	indf2,w,c
  5389  011AFA  A4D8               	btfss	status,2,c
  5390  011AFC  D002               	goto	l13945
  5391                           
  5392                           ; BSR set to: 0
  5393  011AFE  0E20               	movlw	32
  5394  011B00  D001               	goto	L2
  5395  011B02                     l13945:
  5396                           
  5397                           ; BSR set to: 0
  5398  011B02  0E44               	movlw	68
  5399  011B04                     L2:
  5400  011B04  6E0B               	movwf	(btemp+10)^0,c
  5401  011B06  0E00               	movlw	0
  5402  011B08  6E0C               	movwf	(btemp+11)^0,c
  5403                           
  5404                           ;stkvar	_main$3790 @ sp[(-17)+0]
  5405  011B0A  0EEF               	movlw	-17
  5406  011B0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5407  011B12  0EF0               	movlw	-16
  5408  011B14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5409                           
  5410                           ; BSR set to: 0
  5411  011B1A  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5412  011B1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5413  011B24  006F FF7B FFE6     	movff	postinc2,postinc1
  5414  011B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  011B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5416                           
  5417                           ;stkvar	_main$3790 @ sp[(-21)+0]
  5418  011B36  0EEB               	movlw	-21
  5419  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
  5420  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5421  011B44  0E08               	movlw	low STR_25
  5422  011B46  6EE6               	movwf	postinc1,c
  5423  011B48  0EFD               	movlw	high STR_25
  5424  011B4A  6EE6               	movwf	postinc1,c
  5425  011B4C  0E01               	movlw	1
  5426  011B4E  6EE6               	movwf	postinc1,c
  5427  011B50  0E00               	movlw	0
  5428  011B52  6EE6               	movwf	postinc1,c
  5429  011B54  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5430  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  5431  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5432  011B64  0E0A               	movlw	10
  5433  011B66  6EE6               	movwf	postinc1,c
  5434  011B68  EC2A  F0D2         	call	_sprintf	;wreg free
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5438  011B6C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5439  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5440  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5441  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5442  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  5443  011B88  0EF2               	movlw	low STR_26
  5444  011B8A  6EE6               	movwf	postinc1,c
  5445  011B8C  0EFC               	movlw	high STR_26
  5446  011B8E  6EE6               	movwf	postinc1,c
  5447  011B90  0E01               	movlw	1
  5448  011B92  6EE6               	movwf	postinc1,c
  5449  011B94  0E01               	movlw	1
  5450  011B96  6EE6               	movwf	postinc1,c
  5451  011B98  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5452  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  5453  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5454  011BA8  0E08               	movlw	8
  5455  011BAA  6EE6               	movwf	postinc1,c
  5456  011BAC  EC2A  F0D2         	call	_sprintf	;wreg free
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5460  011BB0  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5461  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5462  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5463  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5464  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5465  011BCC  0EDC               	movlw	low STR_27
  5466  011BCE  6EE6               	movwf	postinc1,c
  5467  011BD0  0EFC               	movlw	high STR_27
  5468  011BD2  6EE6               	movwf	postinc1,c
  5469  011BD4  0E01               	movlw	1
  5470  011BD6  6EE6               	movwf	postinc1,c
  5471  011BD8  0E02               	movlw	2
  5472  011BDA  6EE6               	movwf	postinc1,c
  5473  011BDC  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5474  011BE0  0060  F007  FFE6   	movff	btemp,postinc1
  5475  011BE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5476  011BEC  0E08               	movlw	8
  5477  011BEE  6EE6               	movwf	postinc1,c
  5478  011BF0  EC2A  F0D2         	call	_sprintf	;wreg free
  5479                           
  5480                           ;main.c: 368:      break;
  5481  011BF4  D339               	goto	l13973
  5482  011BF6                     l1373:
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;main.c: 370:      V.calib = 0;
  5486  011BF6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5487                           
  5488                           ; BSR set to: 1
  5489                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5490  011BF8  EE21  F303         	lfsr	2,_C+4	;volatile
  5491  011BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5492  011C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5493  011C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5494  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5495  011C14  EE21  F313         	lfsr	2,_C+20	;volatile
  5496  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5497  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5498  011C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5499  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5500  011C30  0EA2               	movlw	low STR_28
  5501  011C32  6EE6               	movwf	postinc1,c
  5502  011C34  0EFD               	movlw	high STR_28
  5503  011C36  6EE6               	movwf	postinc1,c
  5504  011C38  0E00               	movlw	0
  5505  011C3A  6EE6               	movwf	postinc1,c
  5506  011C3C  0E00               	movlw	0
  5507  011C3E  6EE6               	movwf	postinc1,c
  5508  011C40  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5509  011C44  0060  F007  FFE6   	movff	btemp,postinc1
  5510  011C4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5511  011C50  0E0C               	movlw	12
  5512  011C52  6EE6               	movwf	postinc1,c
  5513  011C54  EC2A  F0D2         	call	_sprintf	;wreg free
  5514                           
  5515                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5516  011C58  EE21  F2FF         	lfsr	2,_C
  5517  011C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5518  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  5519  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  5520  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5521  011C74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5522  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5523  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5524  011C84  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  011C90  0E76               	movlw	low STR_29
  5527  011C92  6EE6               	movwf	postinc1,c
  5528  011C94  0EFD               	movlw	high STR_29
  5529  011C96  6EE6               	movwf	postinc1,c
  5530  011C98  0E00               	movlw	0
  5531  011C9A  6EE6               	movwf	postinc1,c
  5532  011C9C  0E01               	movlw	1
  5533  011C9E  6EE6               	movwf	postinc1,c
  5534  011CA0  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5535  011CA4  0060  F007  FFE6   	movff	btemp,postinc1
  5536  011CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5537  011CB0  0E0C               	movlw	12
  5538  011CB2  6EE6               	movwf	postinc1,c
  5539  011CB4  EC2A  F0D2         	call	_sprintf	;wreg free
  5540                           
  5541                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5542  011CB8  EE21  F33F         	lfsr	2,_C+64	;volatile
  5543  011CBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5544  011CC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5545  011CC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5546  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5547  011CD4  EE21  F307         	lfsr	2,_C+8	;volatile
  5548  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5549  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5550  011CE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5551  011CEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5552  011CF0  0E8C               	movlw	low STR_30
  5553  011CF2  6EE6               	movwf	postinc1,c
  5554  011CF4  0EFD               	movlw	high STR_30
  5555  011CF6  6EE6               	movwf	postinc1,c
  5556  011CF8  0E00               	movlw	0
  5557  011CFA  6EE6               	movwf	postinc1,c
  5558  011CFC  0E02               	movlw	2
  5559  011CFE  6EE6               	movwf	postinc1,c
  5560  011D00  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5561  011D04  0060  F007  FFE6   	movff	btemp,postinc1
  5562  011D0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5563  011D10  0E0C               	movlw	12
  5564  011D12  6EE6               	movwf	postinc1,c
  5565  011D14  EC2A  F0D2         	call	_sprintf	;wreg free
  5566                           
  5567                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5568  011D18  EE21  F39F         	lfsr	2,_C+160	;volatile
  5569  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5570  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5571  011D28  006F FF7B FFE6     	movff	postinc2,postinc1
  5572  011D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5573  011D34  0E9A               	movlw	low STR_31
  5574  011D36  6EE6               	movwf	postinc1,c
  5575  011D38  0EFC               	movlw	high STR_31
  5576  011D3A  6EE6               	movwf	postinc1,c
  5577  011D3C  0E01               	movlw	1
  5578  011D3E  6EE6               	movwf	postinc1,c
  5579  011D40  0E00               	movlw	0
  5580  011D42  6EE6               	movwf	postinc1,c
  5581  011D44  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5582  011D48  0060  F007  FFE6   	movff	btemp,postinc1
  5583  011D4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5584  011D54  0E08               	movlw	8
  5585  011D56  6EE6               	movwf	postinc1,c
  5586  011D58  EC2A  F0D2         	call	_sprintf	;wreg free
  5587                           
  5588                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5589  011D5C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5590  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5591  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5592  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5593  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5594  011D78  0EB0               	movlw	low STR_32
  5595  011D7A  6EE6               	movwf	postinc1,c
  5596  011D7C  0EFC               	movlw	high STR_32
  5597  011D7E  6EE6               	movwf	postinc1,c
  5598  011D80  0E01               	movlw	1
  5599  011D82  6EE6               	movwf	postinc1,c
  5600  011D84  0E01               	movlw	1
  5601  011D86  6EE6               	movwf	postinc1,c
  5602  011D88  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5603  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5604  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5605  011D98  0E08               	movlw	8
  5606  011D9A  6EE6               	movwf	postinc1,c
  5607  011D9C  EC2A  F0D2         	call	_sprintf	;wreg free
  5608                           
  5609                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5610  011DA0  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5611  011DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5612  011DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5613  011DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5614  011DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5615  011DBC  EE21  F39F         	lfsr	2,_C+160	;volatile
  5616  011DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5617  011DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5618  011DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5619  011DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5620  011DD8  EC35  F0A3         	call	___fladd	;wreg free
  5621  011DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5622  011DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5623  011DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5624  011DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5625  011DF4  0EC6               	movlw	low STR_33
  5626  011DF6  6EE6               	movwf	postinc1,c
  5627  011DF8  0EFC               	movlw	high STR_33
  5628  011DFA  6EE6               	movwf	postinc1,c
  5629  011DFC  0E01               	movlw	1
  5630  011DFE  6EE6               	movwf	postinc1,c
  5631  011E00  0E02               	movlw	2
  5632  011E02  6EE6               	movwf	postinc1,c
  5633  011E04  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5634  011E08  0060  F007  FFE6   	movff	btemp,postinc1
  5635  011E0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5636  011E14  0E08               	movlw	8
  5637  011E16  6EE6               	movwf	postinc1,c
  5638  011E18  EC2A  F0D2         	call	_sprintf	;wreg free
  5639                           
  5640                           ;main.c: 378:      break;
  5641  011E1C  D225               	goto	l13973
  5642  011E1E                     l1374:
  5643                           
  5644                           ; BSR set to: 1
  5645                           ;main.c: 380:      V.calib = 0;
  5646  011E1E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5647                           
  5648                           ; BSR set to: 1
  5649                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5650  011E20  EE21  F37F         	lfsr	2,_C+128	;volatile
  5651  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5652  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5653  011E30  006F FF7B FFE6     	movff	postinc2,postinc1
  5654  011E36  006F FF7B FFE6     	movff	postinc2,postinc1
  5655  011E3C  0E12               	movlw	low STR_34
  5656  011E3E  6EE6               	movwf	postinc1,c
  5657  011E40  0EFC               	movlw	high STR_34
  5658  011E42  6EE6               	movwf	postinc1,c
  5659  011E44  0E00               	movlw	0
  5660  011E46  6EE6               	movwf	postinc1,c
  5661  011E48  0E00               	movlw	0
  5662  011E4A  6EE6               	movwf	postinc1,c
  5663  011E4C  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5664  011E50  0060  F007  FFE6   	movff	btemp,postinc1
  5665  011E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5666  011E5C  0E08               	movlw	8
  5667  011E5E  6EE6               	movwf	postinc1,c
  5668  011E60  EC2A  F0D2         	call	_sprintf	;wreg free
  5669                           
  5670                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5671  011E64  EE21  F393         	lfsr	2,_C+148	;volatile
  5672  011E68  006F FF7B FFE6     	movff	postinc2,postinc1
  5673  011E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5674  011E74  006F FF7B FFE6     	movff	postinc2,postinc1
  5675  011E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5676  011E80  EE21  F38F         	lfsr	2,_C+144	;volatile
  5677  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5678  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5679  011E90  006F FF7B FFE6     	movff	postinc2,postinc1
  5680  011E96  006F FF7B FFE6     	movff	postinc2,postinc1
  5681  011E9C  0E57               	movlw	low STR_35
  5682  011E9E  6EE6               	movwf	postinc1,c
  5683  011EA0  0EFC               	movlw	high STR_35
  5684  011EA2  6EE6               	movwf	postinc1,c
  5685  011EA4  0E00               	movlw	0
  5686  011EA6  6EE6               	movwf	postinc1,c
  5687  011EA8  0E01               	movlw	1
  5688  011EAA  6EE6               	movwf	postinc1,c
  5689  011EAC  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5690  011EB0  0060  F007  FFE6   	movff	btemp,postinc1
  5691  011EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5692  011EBC  0E0C               	movlw	12
  5693  011EBE  6EE6               	movwf	postinc1,c
  5694  011EC0  EC2A  F0D2         	call	_sprintf	;wreg free
  5695                           
  5696                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5697  011EC4  EE21  F30F         	lfsr	2,_C+16	;volatile
  5698  011EC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5699  011ECE  006F FF7B FFE6     	movff	postinc2,postinc1
  5700  011ED4  006F FF7B FFE6     	movff	postinc2,postinc1
  5701  011EDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5702  011EE0  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5703  011EE4  006F FF78  F00B    	movff	postinc2,btemp+10
  5704  011EEA  006F FF74  F00C    	movff	postdec2,btemp+11
  5705  011EF0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5706  011EF6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5707  011EFC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5708  011F00  006F FF78  F00B    	movff	postinc2,btemp+10
  5709  011F06  006F FF74  F00C    	movff	postdec2,btemp+11
  5710  011F0C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5711  011F12  0060  F033  FFE6   	movff	btemp+11,postinc1
  5712  011F18  0E00               	movlw	0
  5713  011F1A  6EE6               	movwf	postinc1,c
  5714  011F1C  0E05               	movlw	5
  5715  011F1E  6EE6               	movwf	postinc1,c
  5716  011F20  ECAF  F0D2         	call	_spinners	;wreg free
  5717  011F24  5001               	movf	btemp^0,w,c
  5718  011F26  6EE6               	movwf	postinc1,c
  5719  011F28  0E00               	movlw	0
  5720  011F2A  6EE6               	movwf	postinc1,c
  5721  011F2C  0E78               	movlw	low STR_36
  5722  011F2E  6EE6               	movwf	postinc1,c
  5723  011F30  0EFB               	movlw	high STR_36
  5724  011F32  6EE6               	movwf	postinc1,c
  5725  011F34  0E00               	movlw	0
  5726  011F36  6EE6               	movwf	postinc1,c
  5727  011F38  0E02               	movlw	2
  5728  011F3A  6EE6               	movwf	postinc1,c
  5729  011F3C  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5730  011F40  0060  F007  FFE6   	movff	btemp,postinc1
  5731  011F46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5732  011F4C  0E0E               	movlw	14
  5733  011F4E  6EE6               	movwf	postinc1,c
  5734  011F50  EC2A  F0D2         	call	_sprintf	;wreg free
  5735                           
  5736                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5737  011F54  EE21  F387         	lfsr	2,_C+136	;volatile
  5738  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5739  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5740  011F64  006F FF7B FFE6     	movff	postinc2,postinc1
  5741  011F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5742  011F70  0EFB               	movlw	low STR_37
  5743  011F72  6EE6               	movwf	postinc1,c
  5744  011F74  0EFB               	movlw	high STR_37
  5745  011F76  6EE6               	movwf	postinc1,c
  5746  011F78  0E01               	movlw	1
  5747  011F7A  6EE6               	movwf	postinc1,c
  5748  011F7C  0E00               	movlw	0
  5749  011F7E  6EE6               	movwf	postinc1,c
  5750  011F80  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5751  011F84  0060  F007  FFE6   	movff	btemp,postinc1
  5752  011F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5753  011F90  0E08               	movlw	8
  5754  011F92  6EE6               	movwf	postinc1,c
  5755  011F94  EC2A  F0D2         	call	_sprintf	;wreg free
  5756                           
  5757                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5758  011F98  EE22  F00D         	lfsr	2,_C+270	;volatile
  5759  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5760  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5761  011FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5762  011FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5763  011FB4  EE22  F019         	lfsr	2,_C+282	;volatile
  5764  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5765  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5766  011FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5767  011FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5768  011FD0  0E29               	movlw	low STR_38
  5769  011FD2  6EE6               	movwf	postinc1,c
  5770  011FD4  0EFC               	movlw	high STR_38
  5771  011FD6  6EE6               	movwf	postinc1,c
  5772  011FD8  0E01               	movlw	1
  5773  011FDA  6EE6               	movwf	postinc1,c
  5774  011FDC  0E01               	movlw	1
  5775  011FDE  6EE6               	movwf	postinc1,c
  5776  011FE0  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5777  011FE4  0060  F007  FFE6   	movff	btemp,postinc1
  5778  011FEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5779  011FF0  0E0C               	movlw	12
  5780  011FF2  6EE6               	movwf	postinc1,c
  5781  011FF4  EC2A  F0D2         	call	_sprintf	;wreg free
  5782                           
  5783                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5784  011FF8  EE22  F011         	lfsr	2,_C+274	;volatile
  5785  011FFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5786  012002  006F FF7B FFE6     	movff	postinc2,postinc1
  5787  012008  006F FF7B FFE6     	movff	postinc2,postinc1
  5788  01200E  006F FF7B FFE6     	movff	postinc2,postinc1
  5789  012014  EE22  F01D         	lfsr	2,_C+286	;volatile
  5790  012018  006F FF7B FFE6     	movff	postinc2,postinc1
  5791  01201E  006F FF7B FFE6     	movff	postinc2,postinc1
  5792  012024  006F FF7B FFE6     	movff	postinc2,postinc1
  5793  01202A  006F FF7B FFE6     	movff	postinc2,postinc1
  5794  012030  0E40               	movlw	low STR_39
  5795  012032  6EE6               	movwf	postinc1,c
  5796  012034  0EFC               	movlw	high STR_39
  5797  012036  6EE6               	movwf	postinc1,c
  5798  012038  0E01               	movlw	1
  5799  01203A  6EE6               	movwf	postinc1,c
  5800  01203C  0E02               	movlw	2
  5801  01203E  6EE6               	movwf	postinc1,c
  5802  012040  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5803  012044  0060  F007  FFE6   	movff	btemp,postinc1
  5804  01204A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5805  012050  0E0C               	movlw	12
  5806  012052  6EE6               	movwf	postinc1,c
  5807  012054  EC2A  F0D2         	call	_sprintf	;wreg free
  5808                           
  5809                           ;main.c: 388:      break;
  5810  012058  D107               	goto	l13973
  5811  01205A                     l13957:
  5812                           
  5813                           ; BSR set to: 1
  5814                           ;main.c: 390:      if (!V.calib) {
  5815  01205A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5816  01205C  A4D8               	btfss	status,2,c
  5817  01205E  D02D               	goto	l13961
  5818                           
  5819                           ; BSR set to: 1
  5820                           ;main.c: 391:       lp_filter(0.0, i, -1);
  5821  012060  0EFF               	movlw	255
  5822  012062  6EE6               	movwf	postinc1,c
  5823                           
  5824                           ;stkvar	_i @ sp[(-18)+14]
  5825  012064  0EFC               	movlw	-4
  5826  012066  50E3               	movf	plusw1,w,c
  5827  012068  6EE6               	movwf	postinc1,c
  5828  01206A  0E00               	movlw	0
  5829  01206C  6EE6               	movwf	postinc1,c
  5830  01206E  0E00               	movlw	0
  5831  012070  6EE6               	movwf	postinc1,c
  5832  012072  0E00               	movlw	0
  5833  012074  6EE6               	movwf	postinc1,c
  5834  012076  0E00               	movlw	0
  5835  012078  6EE6               	movwf	postinc1,c
  5836  01207A  EC3B  F0C6         	call	_lp_filter	;wreg free
  5837                           
  5838                           ;main.c: 392:       lp_filter(0.0, j, -1);
  5839  01207E  0EFF               	movlw	255
  5840  012080  6EE6               	movwf	postinc1,c
  5841                           
  5842                           ;stkvar	_j @ sp[(-18)+13]
  5843  012082  0EFB               	movlw	-5
  5844  012084  50E3               	movf	plusw1,w,c
  5845  012086  6EE6               	movwf	postinc1,c
  5846  012088  0E00               	movlw	0
  5847  01208A  6EE6               	movwf	postinc1,c
  5848  01208C  0E00               	movlw	0
  5849  01208E  6EE6               	movwf	postinc1,c
  5850  012090  0E00               	movlw	0
  5851  012092  6EE6               	movwf	postinc1,c
  5852  012094  0E00               	movlw	0
  5853  012096  6EE6               	movwf	postinc1,c
  5854  012098  EC3B  F0C6         	call	_lp_filter	;wreg free
  5855                           
  5856                           ;main.c: 393:       lp_filter(0.0, k, -1);
  5857  01209C  0EFF               	movlw	255
  5858  01209E  6EE6               	movwf	postinc1,c
  5859                           
  5860                           ;stkvar	_k @ sp[(-18)+12]
  5861  0120A0  0EFA               	movlw	-6
  5862  0120A2  50E3               	movf	plusw1,w,c
  5863  0120A4  6EE6               	movwf	postinc1,c
  5864  0120A6  0E00               	movlw	0
  5865  0120A8  6EE6               	movwf	postinc1,c
  5866  0120AA  0E00               	movlw	0
  5867  0120AC  6EE6               	movwf	postinc1,c
  5868  0120AE  0E00               	movlw	0
  5869  0120B0  6EE6               	movwf	postinc1,c
  5870  0120B2  0E00               	movlw	0
  5871  0120B4  6EE6               	movwf	postinc1,c
  5872  0120B6  EC3B  F0C6         	call	_lp_filter	;wreg free
  5873  0120BA                     l13961:
  5874                           
  5875                           ;main.c: 395:      V.calib = 1;
  5876  0120BA  0E01               	movlw	1
  5877  0120BC  0101               	movlb	1	; () banked
  5878  0120BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  5882                           ;stkvar	_inp_index @ sp[(-17)+11]
  5883  0120C0  0EFA               	movlw	-6
  5884  0120C2  50E3               	movf	plusw1,w,c
  5885  0120C4  6EE6               	movwf	postinc1,c
  5886  0120C6  0E00               	movlw	0
  5887  0120C8  6EE6               	movwf	postinc1,c
  5888                           
  5889                           ;stkvar	_i @ sp[(-19)+14]
  5890  0120CA  0EFB               	movlw	-5
  5891  0120CC  50E3               	movf	plusw1,w,c
  5892  0120CE  0D04               	mullw	4
  5893  0120D0  0EFF               	movlw	low _C
  5894  0120D2  24F3               	addwf	243,w,c
  5895  0120D4  6ED9               	movwf	fsr2l,c
  5896  0120D6  0E06               	movlw	high _C
  5897  0120D8  20F4               	addwfc	prodh,w,c
  5898  0120DA  6EDA               	movwf	fsr2h,c
  5899  0120DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5900  0120E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5901  0120E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5902  0120EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5903                           
  5904                           ;stkvar	_i @ sp[(-23)+14]
  5905  0120F4  0EF7               	movlw	-9
  5906  0120F6  50E3               	movf	plusw1,w,c
  5907  0120F8  6EE6               	movwf	postinc1,c
  5908  0120FA  ECD3  F0E4         	call	_get_raw_result	;wreg free
  5909  0120FE  0060  F007  FFE6   	movff	btemp,postinc1
  5910  012104  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5911  01210A  0EB8               	movlw	low STR_40
  5912  01210C  6EE6               	movwf	postinc1,c
  5913  01210E  0EFD               	movlw	high STR_40
  5914  012110  6EE6               	movwf	postinc1,c
  5915  012112  0E00               	movlw	0
  5916  012114  6EE6               	movwf	postinc1,c
  5917  012116  0E00               	movlw	0
  5918  012118  6EE6               	movwf	postinc1,c
  5919  01211A  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5920  01211E  0060  F007  FFE6   	movff	btemp,postinc1
  5921  012124  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5922  01212A  0E0C               	movlw	12
  5923  01212C  6EE6               	movwf	postinc1,c
  5924  01212E  EC2A  F0D2         	call	_sprintf	;wreg free
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  5928                           ;stkvar	_inp_index @ sp[(-17)+11]
  5929  012132  0EFA               	movlw	-6
  5930  012134  50E3               	movf	plusw1,w,c
  5931  012136  6E0B               	movwf	(btemp+10)^0,c
  5932  012138  6A0C               	clrf	(btemp+11)^0,c
  5933  01213A  0E01               	movlw	1
  5934  01213C  260B               	addwf	(btemp+10)^0,f,c
  5935  01213E  0E00               	movlw	0
  5936  012140  220C               	addwfc	(btemp+11)^0,f,c
  5937  012142  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5938  012148  0060  F033  FFE6   	movff	btemp+11,postinc1
  5939                           
  5940                           ;stkvar	_j @ sp[(-19)+13]
  5941  01214E  0EFA               	movlw	-6
  5942  012150  50E3               	movf	plusw1,w,c
  5943  012152  0D04               	mullw	4
  5944  012154  0EFF               	movlw	low _C
  5945  012156  24F3               	addwf	243,w,c
  5946  012158  6ED9               	movwf	fsr2l,c
  5947  01215A  0E06               	movlw	high _C
  5948  01215C  20F4               	addwfc	prodh,w,c
  5949  01215E  6EDA               	movwf	fsr2h,c
  5950  012160  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  012166  006F FF7B FFE6     	movff	postinc2,postinc1
  5952  01216C  006F FF7B FFE6     	movff	postinc2,postinc1
  5953  012172  006F FF7B FFE6     	movff	postinc2,postinc1
  5954                           
  5955                           ;stkvar	_j @ sp[(-23)+13]
  5956  012178  0EF6               	movlw	-10
  5957  01217A  50E3               	movf	plusw1,w,c
  5958  01217C  6EE6               	movwf	postinc1,c
  5959  01217E  ECD3  F0E4         	call	_get_raw_result	;wreg free
  5960  012182  0060  F007  FFE6   	movff	btemp,postinc1
  5961  012188  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5962  01218E  0EB8               	movlw	low STR_40
  5963  012190  6EE6               	movwf	postinc1,c
  5964  012192  0EFD               	movlw	high STR_40
  5965  012194  6EE6               	movwf	postinc1,c
  5966  012196  0E00               	movlw	0
  5967  012198  6EE6               	movwf	postinc1,c
  5968  01219A  0E01               	movlw	1
  5969  01219C  6EE6               	movwf	postinc1,c
  5970  01219E  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  5971  0121A2  0060  F007  FFE6   	movff	btemp,postinc1
  5972  0121A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5973  0121AE  0E0C               	movlw	12
  5974  0121B0  6EE6               	movwf	postinc1,c
  5975  0121B2  EC2A  F0D2         	call	_sprintf	;wreg free
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  5979                           ;stkvar	_inp_index @ sp[(-17)+11]
  5980  0121B6  0EFA               	movlw	-6
  5981  0121B8  50E3               	movf	plusw1,w,c
  5982  0121BA  6E0B               	movwf	(btemp+10)^0,c
  5983  0121BC  6A0C               	clrf	(btemp+11)^0,c
  5984  0121BE  0E02               	movlw	2
  5985  0121C0  260B               	addwf	(btemp+10)^0,f,c
  5986  0121C2  0E00               	movlw	0
  5987  0121C4  220C               	addwfc	(btemp+11)^0,f,c
  5988  0121C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5989  0121CC  0060  F033  FFE6   	movff	btemp+11,postinc1
  5990                           
  5991                           ;stkvar	_k @ sp[(-19)+12]
  5992  0121D2  0EF9               	movlw	-7
  5993  0121D4  50E3               	movf	plusw1,w,c
  5994  0121D6  0D04               	mullw	4
  5995  0121D8  0EFF               	movlw	low _C
  5996  0121DA  24F3               	addwf	243,w,c
  5997  0121DC  6ED9               	movwf	fsr2l,c
  5998  0121DE  0E06               	movlw	high _C
  5999  0121E0  20F4               	addwfc	prodh,w,c
  6000  0121E2  6EDA               	movwf	fsr2h,c
  6001  0121E4  006F FF7B FFE6     	movff	postinc2,postinc1
  6002  0121EA  006F FF7B FFE6     	movff	postinc2,postinc1
  6003  0121F0  006F FF7B FFE6     	movff	postinc2,postinc1
  6004  0121F6  006F FF7B FFE6     	movff	postinc2,postinc1
  6005                           
  6006                           ;stkvar	_k @ sp[(-23)+12]
  6007  0121FC  0EF5               	movlw	-11
  6008  0121FE  50E3               	movf	plusw1,w,c
  6009  012200  6EE6               	movwf	postinc1,c
  6010  012202  ECD3  F0E4         	call	_get_raw_result	;wreg free
  6011  012206  0060  F007  FFE6   	movff	btemp,postinc1
  6012  01220C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6013  012212  0EB8               	movlw	low STR_40
  6014  012214  6EE6               	movwf	postinc1,c
  6015  012216  0EFD               	movlw	high STR_40
  6016  012218  6EE6               	movwf	postinc1,c
  6017  01221A  0E00               	movlw	0
  6018  01221C  6EE6               	movwf	postinc1,c
  6019  01221E  0E02               	movlw	2
  6020  012220  6EE6               	movwf	postinc1,c
  6021  012222  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  6022  012226  0060  F007  FFE6   	movff	btemp,postinc1
  6023  01222C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6024  012232  0E0C               	movlw	12
  6025  012234  6EE6               	movwf	postinc1,c
  6026  012236  EC2A  F0D2         	call	_sprintf	;wreg free
  6027                           
  6028                           ;main.c: 399:      break;
  6029  01223A  D016               	goto	l13973
  6030  01223C                     l13971:
  6031  01223C  0101               	movlb	1	; () banked
  6032  01223E  51C7               	movf	_H& (0+255),w,b
  6033  012240  6E0B               	movwf	(btemp+10)^0,c
  6034  012242  6A0C               	clrf	(btemp+11)^0,c
  6035                           
  6036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6037                           ; Switch size 1, requested type "simple"
  6038                           ; Number of cases is 1, Range of values is 0 to 0
  6039                           ; switch strategies available:
  6040                           ; Name         Instructions Cycles
  6041                           ; simple_byte            4     3 (average)
  6042                           ;	Chosen strategy is simple_byte
  6043  012244  500C               	movf	(btemp+11)^0,w,c
  6044  012246  0A00               	xorlw	0	; case 0
  6045  012248  A4D8               	btfss	status,2,c
  6046  01224A  D00E               	goto	l13973
  6047                           
  6048                           ; BSR set to: 1
  6049                           ; Switch size 1, requested type "simple"
  6050                           ; Number of cases is 4, Range of values is 0 to 3
  6051                           ; switch strategies available:
  6052                           ; Name         Instructions Cycles
  6053                           ; simple_byte           13     7 (average)
  6054                           ;	Chosen strategy is simple_byte
  6055  01224C  500B               	movf	(btemp+10)^0,w,c
  6056  01224E  0A00               	xorlw	0	; case 0
  6057  012250  B4D8               	btfsc	status,2,c
  6058  012252  D4D1               	goto	l1373
  6059  012254  0A01               	xorlw	1	; case 1
  6060  012256  B4D8               	btfsc	status,2,c
  6061  012258  EFF9  F08C         	goto	l1363
  6062  01225C  0A03               	xorlw	3	; case 2
  6063  01225E  B4D8               	btfsc	status,2,c
  6064  012260  D5DE               	goto	l1374
  6065  012262  0A01               	xorlw	1	; case 3
  6066  012264  B4D8               	btfsc	status,2,c
  6067  012266  D6F9               	goto	l13957
  6068  012268                     l13973:
  6069                           
  6070                           ;main.c: 403:     clear_hid_pflags(&H);
  6071  012268  0EC7               	movlw	low _H
  6072  01226A  6EE6               	movwf	postinc1,c
  6073  01226C  0E01               	movlw	high _H
  6074  01226E  6EE6               	movwf	postinc1,c
  6075  012270  EC9D  F0DC         	call	_clear_hid_pflags	;wreg free
  6076                           
  6077                           ;main.c: 405:    StartTimer(TMR_DISPLAY, 250);
  6078  012274  0EFA               	movlw	250
  6079  012276  6EE6               	movwf	postinc1,c
  6080  012278  0E00               	movlw	0
  6081  01227A  6EE6               	movwf	postinc1,c
  6082  01227C  0E0A               	movlw	10
  6083  01227E  6EE6               	movwf	postinc1,c
  6084  012280  EC6A  F0E0         	call	_StartTimer	;wreg free
  6085                           
  6086                           ;main.c: 406:    V.enter = check_enter_button(&H);
  6087  012284  0EC7               	movlw	low _H
  6088  012286  6EE6               	movwf	postinc1,c
  6089  012288  0E01               	movlw	high _H
  6090  01228A  6EE6               	movwf	postinc1,c
  6091  01228C  ECC4  F0DB         	call	_check_enter_button	;wreg free
  6092  012290  5001               	movf	btemp^0,w,c
  6093  012292  0101               	movlb	1	; () banked
  6094  012294  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6095                           
  6096                           ; BSR set to: 1
  6097                           ;main.c: 407:    if (V.enter && (H.hid_display != HID_AUX)) {
  6098  012296  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6099  012298  B4D8               	btfsc	status,2,c
  6100  01229A  D011               	goto	l13987
  6101                           
  6102                           ; BSR set to: 1
  6103  01229C  0E03               	movlw	3
  6104  01229E  19C7               	xorwf	_H& (0+255),w,b
  6105  0122A0  B4D8               	btfsc	status,2,c
  6106  0122A2  D00D               	goto	l13987
  6107                           
  6108                           ; BSR set to: 1
  6109                           ;main.c: 408:     V.enter = 0;
  6110  0122A4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6111                           
  6112                           ; BSR set to: 1
  6113                           ;main.c: 409:     V.screen = ~V.screen;
  6114  0122A6  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6115  0122A8  D002               	goto	u13390
  6116  0122AA  0E01               	movlw	1
  6117  0122AC  D001               	goto	u13396
  6118  0122AE                     u13390:
  6119  0122AE  0E00               	movlw	0
  6120  0122B0                     u13396:
  6121  0122B0  0AFF               	xorlw	255
  6122  0122B2  6E0C               	movwf	(btemp+11)^0,c
  6123  0122B4  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6124  0122B6  180C               	xorwf	(btemp+11)^0,w,c
  6125  0122B8  0BFE               	andlw	-2
  6126  0122BA  180C               	xorwf	(btemp+11)^0,w,c
  6127  0122BC  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6128  0122BE                     l13987:
  6129                           
  6130                           ; BSR set to: 1
  6131                           ;main.c: 411:    set_vterm(V.screen);
  6132  0122BE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6133  0122C0  D002               	goto	u13400
  6134  0122C2  0E01               	movlw	1
  6135  0122C4  D001               	goto	u13406
  6136  0122C6                     u13400:
  6137  0122C6  0E00               	movlw	0
  6138  0122C8                     u13406:
  6139  0122C8  6EE6               	movwf	postinc1,c
  6140  0122CA  ECB5  F0E4         	call	_set_vterm	;wreg free
  6141                           
  6142                           ;main.c: 412:    update_lcd(V.screen);
  6143  0122CE  0101               	movlb	1	; () banked
  6144  0122D0  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6145  0122D2  D002               	goto	u13410
  6146  0122D4  0E01               	movlw	1
  6147  0122D6  D001               	goto	u13416
  6148  0122D8                     u13410:
  6149  0122D8  0E00               	movlw	0
  6150  0122DA                     u13416:
  6151  0122DA  6EE6               	movwf	postinc1,c
  6152  0122DC  ECA2  F0D1         	call	_update_lcd	;wreg free
  6153                           
  6154                           ;main.c: 414:    wait_lcd_done();
  6155  0122E0  EC44  F0E4         	call	_wait_lcd_done	;wreg free
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;main.c: 415:    set_dac_a(3.333);
  6159  0122E4  0EDF               	movlw	223
  6160  0122E6  6EE6               	movwf	postinc1,c
  6161  0122E8  0E4F               	movlw	79
  6162  0122EA  6EE6               	movwf	postinc1,c
  6163  0122EC  0E55               	movlw	85
  6164  0122EE  6EE6               	movwf	postinc1,c
  6165  0122F0  0E40               	movlw	64
  6166  0122F2  6EE6               	movwf	postinc1,c
  6167  0122F4  ECA8  F0E1         	call	_set_dac_a	;wreg free
  6168                           
  6169                           ;main.c: 416:    set_dac_b(6.666);
  6170  0122F8  0EDF               	movlw	223
  6171  0122FA  6EE6               	movwf	postinc1,c
  6172  0122FC  0E4F               	movlw	79
  6173  0122FE  6EE6               	movwf	postinc1,c
  6174  012300  0ED5               	movlw	213
  6175  012302  6EE6               	movwf	postinc1,c
  6176  012304  0E40               	movlw	64
  6177  012306  6EE6               	movwf	postinc1,c
  6178  012308  EC8E  F0E1         	call	_set_dac_b	;wreg free
  6179                           
  6180                           ;main.c: 417:    set_dac();
  6181  01230C  ECD1  F0D6         	call	_set_dac	;wreg free
  6182  012310                     l13999:
  6183                           
  6184                           ;main.c: 423:   check_help(V.flipper);
  6185  012310  0101               	movlb	1	; () banked
  6186  012312  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6187  012314  6EE6               	movwf	postinc1,c
  6188  012316  EC30  F0C4         	call	_check_help	;wreg free
  6189                           
  6190                           ;main.c: 425:   if (V.enter) {
  6191  01231A  0101               	movlb	1	; () banked
  6192  01231C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6193  01231E  B4D8               	btfsc	status,2,c
  6194  012320  D062               	goto	l1379
  6195                           
  6196                           ; BSR set to: 1
  6197                           ;main.c: 426:    V.enter = 0;
  6198  012322  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6199                           
  6200                           ;main.c: 427:    V.calib = 0;
  6201  012324  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6202                           
  6203                           ; BSR set to: 1
  6204                           ;main.c: 428:    inp_index += 3;
  6205                           ;stkvar	_inp_index @ sp[(-17)+11]
  6206  012326  0EFA               	movlw	-6
  6207  012328  006F FF8C  F001    	movff	plusw1,btemp
  6208  01232E  0E03               	movlw	3
  6209  012330  2601               	addwf	btemp^0,f,c
  6210  012332  0EFA               	movlw	-6
  6211  012334  0060  F007  FFE3   	movff	btemp,plusw1
  6212                           
  6213                           ;main.c: 429:    if (inp_index > 9)
  6214                           ;stkvar	_inp_index @ sp[(-17)+11]
  6215  01233A  0EFA               	movlw	-6
  6216  01233C  006F FF8C  F001    	movff	plusw1,btemp
  6217  012342  0E09               	movlw	9
  6218  012344  6401               	cpfsgt	btemp^0,c
  6219  012346  D03A               	goto	l14027
  6220                           
  6221                           ; BSR set to: 1
  6222                           ;main.c: 430:     inp_index = 0;
  6223                           ;stkvar	_inp_index @ sp[(-17)+11]
  6224  012348  0EFA               	movlw	-6
  6225  01234A  6AE3               	clrf	plusw1,c
  6226  01234C  D037               	goto	l14027
  6227  01234E                     l14009:
  6228                           
  6229                           ; BSR set to: 1
  6230                           ;main.c: 433:     i = C_BATT;
  6231                           ;stkvar	_i @ sp[(-17)+14]
  6232  01234E  0EFD               	movlw	-3
  6233  012350  6AE3               	clrf	plusw1,c
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;main.c: 434:     j = C_PV;
  6237                           ;stkvar	_j @ sp[(-17)+13]
  6238  012352  0EFC               	movlw	-4
  6239  012354  6AE3               	clrf	plusw1,c
  6240  012356  2AE3               	incf	plusw1,f,c
  6241                           
  6242                           ; BSR set to: 1
  6243                           ;main.c: 435:     k = V_CC;
  6244                           ;stkvar	_k @ sp[(-17)+12]
  6245  012358  0EFB               	movlw	-5
  6246  01235A  6AE3               	clrf	plusw1,c
  6247  01235C  82E3               	bsf	plusw1,1,c
  6248                           
  6249                           ;main.c: 436:     break;
  6250  01235E  D043               	goto	l1379
  6251  012360                     l14015:
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;main.c: 438:     i = V_BAT;
  6255                           ;stkvar	_i @ sp[(-17)+14]
  6256  012360  0EFD               	movlw	-3
  6257  012362  6AE3               	clrf	plusw1,c
  6258  012364  84E3               	bsf	plusw1,2,c
  6259                           
  6260                           ;main.c: 439:     j = V_PV;
  6261                           ;stkvar	_j @ sp[(-17)+13]
  6262  012366  0EFC               	movlw	-4
  6263  012368  6AE3               	clrf	plusw1,c
  6264  01236A  80E3               	bsf	plusw1,0,c
  6265  01236C  84E3               	bsf	plusw1,2,c	;indir
  6266                           
  6267                           ;main.c: 440:     k = V_CBUS;
  6268                           ;stkvar	_k @ sp[(-17)+12]
  6269  01236E  0EFB               	movlw	-5
  6270  012370  6AE3               	clrf	plusw1,c
  6271  012372  82E3               	bsf	plusw1,1,c
  6272  012374  84E3               	bsf	plusw1,2,c	;indir
  6273                           
  6274                           ;main.c: 441:     break;
  6275  012376  D037               	goto	l1379
  6276  012378                     l14017:
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;main.c: 443:     i = V_BBAT;
  6280                           ;stkvar	_i @ sp[(-17)+14]
  6281  012378  0EFD               	movlw	-3
  6282  01237A  6AE3               	clrf	plusw1,c
  6283  01237C  82E3               	bsf	plusw1,1,c
  6284  01237E  86E3               	bsf	plusw1,3,c	;indir
  6285                           
  6286                           ; BSR set to: 1
  6287                           ;main.c: 444:     j = V_TEMP;
  6288  012380  0E0B               	movlw	11
  6289  012382  6E0C               	movwf	(btemp+11)^0,c
  6290                           
  6291                           ;stkvar	_j @ sp[(-17)+13]
  6292  012384  0EFC               	movlw	-4
  6293  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
  6294                           
  6295                           ; BSR set to: 1
  6296                           ;main.c: 445:     k = V_INVERTER;
  6297                           ;stkvar	_k @ sp[(-17)+12]
  6298  01238C  0EFB               	movlw	-5
  6299  01238E  6AE3               	clrf	plusw1,c
  6300  012390  84E3               	bsf	plusw1,2,c
  6301  012392  86E3               	bsf	plusw1,3,c	;indir
  6302                           
  6303                           ;main.c: 446:     break;
  6304  012394  D028               	goto	l1379
  6305  012396                     l14023:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;main.c: 448:     i = V_LIGHT_SENSOR;
  6309  012396  0E0D               	movlw	13
  6310  012398  6E0C               	movwf	(btemp+11)^0,c
  6311                           
  6312                           ;stkvar	_i @ sp[(-17)+14]
  6313  01239A  0EFD               	movlw	-3
  6314  01239C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6315                           
  6316                           ;main.c: 449:     j = V_LIGHT_SENSOR;
  6317  0123A2  0E0D               	movlw	13
  6318  0123A4  6E0C               	movwf	(btemp+11)^0,c
  6319                           
  6320                           ;stkvar	_j @ sp[(-17)+13]
  6321  0123A6  0EFC               	movlw	-4
  6322  0123A8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6323                           
  6324                           ;main.c: 450:     k = V_LIGHT_SENSOR;
  6325  0123AE  0E0D               	movlw	13
  6326  0123B0  6E0C               	movwf	(btemp+11)^0,c
  6327                           
  6328                           ;stkvar	_k @ sp[(-17)+12]
  6329  0123B2  0EFB               	movlw	-5
  6330  0123B4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6331                           
  6332                           ;main.c: 451:     break;
  6333  0123BA  D015               	goto	l1379
  6334  0123BC                     l14027:
  6335                           
  6336                           ; BSR set to: 1
  6337                           ;stkvar	_inp_index @ sp[(-17)+11]
  6338  0123BC  0EFA               	movlw	-6
  6339  0123BE  50E3               	movf	plusw1,w,c
  6340  0123C0  6E0B               	movwf	(btemp+10)^0,c
  6341  0123C2  6A0C               	clrf	(btemp+11)^0,c
  6342                           
  6343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6344                           ; Switch size 1, requested type "simple"
  6345                           ; Number of cases is 1, Range of values is 0 to 0
  6346                           ; switch strategies available:
  6347                           ; Name         Instructions Cycles
  6348                           ; simple_byte            4     3 (average)
  6349                           ;	Chosen strategy is simple_byte
  6350  0123C4  500C               	movf	(btemp+11)^0,w,c
  6351  0123C6  0A00               	xorlw	0	; case 0
  6352  0123C8  A4D8               	btfss	status,2,c
  6353  0123CA  D00D               	goto	l1379
  6354                           
  6355                           ; BSR set to: 1
  6356                           ; Switch size 1, requested type "simple"
  6357                           ; Number of cases is 4, Range of values is 0 to 9
  6358                           ; switch strategies available:
  6359                           ; Name         Instructions Cycles
  6360                           ; simple_byte           13     7 (average)
  6361                           ;	Chosen strategy is simple_byte
  6362  0123CC  500B               	movf	(btemp+10)^0,w,c
  6363  0123CE  0A00               	xorlw	0	; case 0
  6364  0123D0  B4D8               	btfsc	status,2,c
  6365  0123D2  D7BD               	goto	l14009
  6366  0123D4  0A03               	xorlw	3	; case 3
  6367  0123D6  B4D8               	btfsc	status,2,c
  6368  0123D8  D7C3               	goto	l14015
  6369  0123DA  0A05               	xorlw	5	; case 6
  6370  0123DC  B4D8               	btfsc	status,2,c
  6371  0123DE  D7CC               	goto	l14017
  6372  0123E0  0A0F               	xorlw	15	; case 9
  6373  0123E2  B4D8               	btfsc	status,2,c
  6374  0123E4  D7D8               	goto	l14023
  6375  0123E6                     l1379:
  6376                           
  6377                           ; BSR set to: 1
  6378                           ;main.c: 460:   if (V.set_sequ) {
  6379  0123E6  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6380  0123E8  EFAB  F08C         	goto	l13901
  6381                           
  6382                           ; BSR set to: 1
  6383                           ;main.c: 461:    if (TimerDone(TMR_INFO)) {
  6384  0123EC  0E07               	movlw	7
  6385  0123EE  6EE6               	movwf	postinc1,c
  6386  0123F0  ECBF  F0E2         	call	_TimerDone	;wreg free
  6387  0123F4  5001               	movf	btemp^0,w,c
  6388  0123F6  B4D8               	btfsc	status,2,c
  6389  0123F8  D00C               	goto	l14037
  6390                           
  6391                           ;main.c: 462:     V.set_sequ = 0;
  6392  0123FA  0101               	movlb	1	; () banked
  6393  0123FC  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6394                           
  6395                           ; BSR set to: 1
  6396                           ;main.c: 463:     set_vterm(0);
  6397  0123FE  0E00               	movlw	0
  6398  012400  6EE6               	movwf	postinc1,c
  6399  012402  ECB5  F0E4         	call	_set_vterm	;wreg free
  6400                           
  6401                           ;main.c: 464:     update_lcd(0);
  6402  012406  0E00               	movlw	0
  6403  012408  6EE6               	movwf	postinc1,c
  6404  01240A  ECA2  F0D1         	call	_update_lcd	;wreg free
  6405                           
  6406                           ;main.c: 465:    } else {
  6407  01240E  EFAB  F08C         	goto	l13901
  6408  012412                     l14037:
  6409                           
  6410                           ;main.c: 466:     set_vterm(2);
  6411  012412  0E02               	movlw	2
  6412  012414  6EE6               	movwf	postinc1,c
  6413  012416  ECB5  F0E4         	call	_set_vterm	;wreg free
  6414                           
  6415                           ;main.c: 467:     update_lcd(2);
  6416  01241A  0E02               	movlw	2
  6417  01241C  6EE6               	movwf	postinc1,c
  6418  01241E  ECA2  F0D1         	call	_update_lcd	;wreg free
  6419  012422  EFAB  F08C         	goto	l13901
  6420  012426                     __end_of_main:
  6421                           	opt callstack 0
  6422                           
  6423 ;; *************** function _static_soc *****************
  6424 ;; Defined at:
  6425 ;;		line 117 in file "mbmc.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1  [STACK] void 
  6432 ;; Registers used:
  6433 ;;		wreg, fsr2l, fsr2h
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:   15
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_main
  6450 ;; This function uses a reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text1
  6454  01BB8E                     __ptext1:
  6455                           	opt callstack 0
  6456  01BB8E                     _static_soc:
  6457                           	opt callstack 15
  6458                           
  6459                           ;mbmc.c: 119:  C.runtime = 120;
  6460                           
  6461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6462                           ;incstack = 0
  6463  01BB8E  0E78               	movlw	120
  6464  01BB90  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6465  01BB96  0E00               	movlw	0
  6466  01BB98  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6467                           
  6468                           ;mbmc.c: 120:  C.soc = 100;
  6469  01BB9E  0E64               	movlw	100
  6470  01BBA0  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6471  01BBA6  0E00               	movlw	0
  6472  01BBA8  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6473                           
  6474                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6475  01BBAE  EE21  F38B         	lfsr	2,_C+140	;volatile
  6476  01BBB2  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6477  01BBB8  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6478  01BBBE  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6479  01BBC4  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6480                           
  6481                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6482  01BBCA  EE21  F38F         	lfsr	2,_C+144	;volatile
  6483  01BBCE  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6484  01BBD4  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6485  01BBDA  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6486  01BBE0  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6487                           
  6488                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6489  01BBE6  0012               	return		;funcret
  6490  01BBE8                     __end_of_static_soc:
  6491                           	opt callstack 0
  6492                           
  6493 ;; *************** function _start_switch_handler *****************
  6494 ;; Defined at:
  6495 ;;		line 125 in file "dio.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1  [STACK] void 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6504 ;; Tracked objects:
  6505 ;;		On entry : 1/0
  6506 ;;		On exit  : 3F/39
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;Total ram usage:        0 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:   16
  6516 ;; This function calls:
  6517 ;;		_INT1_SetInterruptHandler
  6518 ;; This function is called by:
  6519 ;;		_main
  6520 ;; This function uses a reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text2
  6524  01C8EE                     __ptext2:
  6525                           	opt callstack 0
  6526  01C8EE                     _start_switch_handler:
  6527                           	opt callstack 14
  6528                           
  6529                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6530                           
  6531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6532                           ;incstack = 0
  6533  01C8EE  0139               	movlb	57	; () banked
  6534  01C8F0  9195               	bcf	149,0,b	;volatile
  6535                           
  6536                           ; BSR set to: 57
  6537                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6538  01C8F2  0EF4               	movlw	low _switch_handler
  6539  01C8F4  6EE6               	movwf	postinc1,c
  6540  01C8F6  0E99               	movlw	high _switch_handler
  6541  01C8F8  6EE6               	movwf	postinc1,c
  6542  01C8FA  0E01               	movlw	low (_switch_handler shr (0+16))
  6543  01C8FC  6EE6               	movwf	postinc1,c
  6544  01C8FE  EC4B  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
  6545                           
  6546                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6547  01C902  0E02               	movlw	2
  6548  01C904  0102               	movlb	2	; () banked
  6549  01C906  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6550                           
  6551                           ; BSR set to: 2
  6552                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6553  01C908  0139               	movlb	57	; () banked
  6554  01C90A  8195               	bsf	149,0,b	;volatile
  6555                           
  6556                           ; BSR set to: 57
  6557                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6558  01C90C  0012               	return		;funcret
  6559  01C90E                     __end_of_start_switch_handler:
  6560                           	opt callstack 0
  6561                           
  6562 ;; *************** function _srand *****************
  6563 ;; Defined at:
  6564 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  s               2  [STACK] unsigned int 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1  [STACK] void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 3F/1
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:   15
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_main
  6589 ;; This function uses a reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text3
  6593  01C2E8                     __ptext3:
  6594                           	opt callstack 0
  6595  01C2E8                     _srand:
  6596                           	opt callstack 15
  6597                           
  6598                           ;stkvar	_s @ sp[(0)+-2]
  6599                           
  6600                           ; BSR set to: 57
  6601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6602                           ;incstack = 0
  6603  01C2E8  0EFE               	movlw	-2
  6604  01C2EA  50E3               	movf	plusw1,w,c
  6605  01C2EC  0FFF               	addlw	255
  6606  01C2EE  6E0B               	movwf	(btemp+10)^0,c
  6607  01C2F0  0EFF               	movlw	-1
  6608  01C2F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  6609  01C2F8  0EFF               	movlw	255
  6610  01C2FA  220C               	addwfc	(btemp+11)^0,f,c
  6611  01C2FC  0060  F02C  F1F6   	movff	btemp+10,_seed
  6612  01C302  0060  F030  F1F7   	movff	btemp+11,_seed+1
  6613  01C308  0101               	movlb	1	; () banked
  6614  01C30A  6BF8               	clrf	(_seed+2)& (0+255),b
  6615  01C30C  6BF9               	clrf	(_seed+3)& (0+255),b
  6616  01C30E  6BFA               	clrf	(_seed+4)& (0+255),b
  6617  01C310  6BFB               	clrf	(_seed+5)& (0+255),b
  6618  01C312  6BFC               	clrf	(_seed+6)& (0+255),b
  6619  01C314  6BFD               	clrf	(_seed+7)& (0+255),b
  6620                           
  6621                           ; BSR set to: 1
  6622                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6623  01C316  52E5               	movf	postdec1,f,c
  6624  01C318  52E5               	movf	postdec1,f,c
  6625  01C31A  0012               	return		;funcret
  6626  01C31C                     __end_of_srand:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _set_dac_b *****************
  6630 ;; Defined at:
  6631 ;;		line 296 in file "daq.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  voltage         4  [STACK] const float 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2  [STACK] unsigned short 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:   17
  6652 ;; This function calls:
  6653 ;;		_convert_dac_raw
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text4
  6660  01C31C                     __ptext4:
  6661                           	opt callstack 0
  6662  01C31C                     _set_dac_b:
  6663                           	opt callstack 13
  6664                           
  6665                           ;daq.c: 296: uint16_t set_dac_b(const float voltage);daq.c: 297: {;daq.c: 298:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6666                           ;stkvar	_voltage @ sp[(0)+-4]
  6667                           
  6668                           ; BSR set to: 1
  6669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6670                           ;incstack = 0
  6671  01C31C  0EFC               	movlw	-4
  6672  01C31E  006F FF8F FFE6     	movff	plusw1,postinc1
  6673  01C324  006F FF8F FFE6     	movff	plusw1,postinc1
  6674  01C32A  006F FF8F FFE6     	movff	plusw1,postinc1
  6675  01C330  006F FF8F FFE6     	movff	plusw1,postinc1
  6676  01C336  EC00  F0D0         	call	_convert_dac_raw	;wreg free
  6677  01C33A  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6678  01C340  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6679                           
  6680                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6681                           
  6682                           ;daq.c: 299:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6683  01C346  52E5               	movf	postdec1,f,c
  6684  01C348  52E5               	movf	postdec1,f,c
  6685  01C34A  52E5               	movf	postdec1,f,c
  6686  01C34C  52E5               	movf	postdec1,f,c
  6687  01C34E  0012               	return		;funcret
  6688  01C350                     __end_of_set_dac_b:
  6689                           	opt callstack 0
  6690                           
  6691 ;; *************** function _set_dac_a *****************
  6692 ;; Defined at:
  6693 ;;		line 287 in file "daq.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  voltage         4  [STACK] const float 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  2  [STACK] unsigned short 
  6700 ;; Registers used:
  6701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6702 ;; Tracked objects:
  6703 ;;		On entry : 3F/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6711 ;;Total ram usage:        0 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:   17
  6714 ;; This function calls:
  6715 ;;		_convert_dac_raw
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text5
  6722  01C350                     __ptext5:
  6723                           	opt callstack 0
  6724  01C350                     _set_dac_a:
  6725                           	opt callstack 13
  6726                           
  6727                           ;daq.c: 287: uint16_t set_dac_a(const float voltage);daq.c: 288: {;daq.c: 289:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6728                           ;stkvar	_voltage @ sp[(0)+-4]
  6729                           
  6730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6731                           ;incstack = 0
  6732  01C350  0EFC               	movlw	-4
  6733  01C352  006F FF8F FFE6     	movff	plusw1,postinc1
  6734  01C358  006F FF8F FFE6     	movff	plusw1,postinc1
  6735  01C35E  006F FF8F FFE6     	movff	plusw1,postinc1
  6736  01C364  006F FF8F FFE6     	movff	plusw1,postinc1
  6737  01C36A  EC00  F0D0         	call	_convert_dac_raw	;wreg free
  6738  01C36E  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6739  01C374  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6740                           
  6741                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6742                           
  6743                           ;daq.c: 290:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6744  01C37A  52E5               	movf	postdec1,f,c
  6745  01C37C  52E5               	movf	postdec1,f,c
  6746  01C37E  52E5               	movf	postdec1,f,c
  6747  01C380  52E5               	movf	postdec1,f,c
  6748  01C382  0012               	return		;funcret
  6749  01C384                     __end_of_set_dac_a:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _convert_dac_raw *****************
  6753 ;; Defined at:
  6754 ;;		line 269 in file "daq.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  voltage         4  [STACK] float 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  2  [STACK] unsigned short 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:   16
  6775 ;; This function calls:
  6776 ;;		___fldiv
  6777 ;;		___flge
  6778 ;;		___fltol
  6779 ;; This function is called by:
  6780 ;;		_set_dac_a
  6781 ;;		_set_dac_b
  6782 ;; This function uses a reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text6
  6786  01A000                     __ptext6:
  6787                           	opt callstack 0
  6788  01A000                     _convert_dac_raw:
  6789                           	opt callstack 13
  6790                           
  6791                           ;daq.c: 269: static uint16_t convert_dac_raw(float voltage);daq.c: 270: {;daq.c: 274:  i
      +                          f (voltage < 0.001)
  6792                           
  6793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6794                           ;incstack = 0
  6795  01A000  0E6F               	movlw	111
  6796  01A002  6EE6               	movwf	postinc1,c
  6797  01A004  0E12               	movlw	18
  6798  01A006  6EE6               	movwf	postinc1,c
  6799  01A008  0E83               	movlw	131
  6800  01A00A  6EE6               	movwf	postinc1,c
  6801  01A00C  0E3A               	movlw	58
  6802  01A00E  6EE6               	movwf	postinc1,c
  6803                           
  6804                           ;stkvar	_voltage @ sp[(-4)+-4]
  6805  01A010  0EF8               	movlw	-8
  6806  01A012  006F FF8F FFE6     	movff	plusw1,postinc1
  6807  01A018  006F FF8F FFE6     	movff	plusw1,postinc1
  6808  01A01E  006F FF8F FFE6     	movff	plusw1,postinc1
  6809  01A024  006F FF8F FFE6     	movff	plusw1,postinc1
  6810  01A02A  ECF0  F0CA         	call	___flge	;wreg free
  6811  01A02E  B001               	btfsc	btemp& (0+255),0,c
  6812  01A030  D018               	goto	l10963
  6813                           
  6814                           ;daq.c: 275:   voltage = 0.001;
  6815  01A032  0E6F               	movlw	111
  6816  01A034  6E09               	movwf	(btemp+8)^0,c
  6817  01A036  0E12               	movlw	18
  6818  01A038  6E0A               	movwf	(btemp+9)^0,c
  6819  01A03A  0E83               	movlw	131
  6820  01A03C  6E0B               	movwf	(btemp+10)^0,c
  6821  01A03E  0E3A               	movlw	58
  6822  01A040  6E0C               	movwf	(btemp+11)^0,c
  6823                           
  6824                           ;stkvar	_voltage @ sp[(0)+-4]
  6825  01A042  0EFC               	movlw	-4
  6826  01A044  0060  F027  FFE3   	movff	btemp+8,plusw1
  6827  01A04A  0EFD               	movlw	-3
  6828  01A04C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6829  01A052  0EFE               	movlw	-2
  6830  01A054  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6831  01A05A  0EFF               	movlw	-1
  6832  01A05C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6833  01A062                     l10963:
  6834                           
  6835                           ;daq.c: 276:  if (voltage > 10.0)
  6836                           ;stkvar	_voltage @ sp[(0)+-4]
  6837  01A062  0EFC               	movlw	-4
  6838  01A064  006F FF8F FFE6     	movff	plusw1,postinc1
  6839  01A06A  006F FF8F FFE6     	movff	plusw1,postinc1
  6840  01A070  006F FF8F FFE6     	movff	plusw1,postinc1
  6841  01A076  006F FF8F FFE6     	movff	plusw1,postinc1
  6842  01A07C  0E00               	movlw	0
  6843  01A07E  6EE6               	movwf	postinc1,c
  6844  01A080  0E00               	movlw	0
  6845  01A082  6EE6               	movwf	postinc1,c
  6846  01A084  0E20               	movlw	32
  6847  01A086  6EE6               	movwf	postinc1,c
  6848  01A088  0E41               	movlw	65
  6849  01A08A  6EE6               	movwf	postinc1,c
  6850  01A08C  ECF0  F0CA         	call	___flge	;wreg free
  6851  01A090  B001               	btfsc	btemp& (0+255),0,c
  6852  01A092  D018               	goto	l10967
  6853                           
  6854                           ;daq.c: 277:   voltage = 10.0;
  6855  01A094  0E00               	movlw	0
  6856  01A096  6E09               	movwf	(btemp+8)^0,c
  6857  01A098  0E00               	movlw	0
  6858  01A09A  6E0A               	movwf	(btemp+9)^0,c
  6859  01A09C  0E20               	movlw	32
  6860  01A09E  6E0B               	movwf	(btemp+10)^0,c
  6861  01A0A0  0E41               	movlw	65
  6862  01A0A2  6E0C               	movwf	(btemp+11)^0,c
  6863                           
  6864                           ;stkvar	_voltage @ sp[(0)+-4]
  6865  01A0A4  0EFC               	movlw	-4
  6866  01A0A6  0060  F027  FFE3   	movff	btemp+8,plusw1
  6867  01A0AC  0EFD               	movlw	-3
  6868  01A0AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6869  01A0B4  0EFE               	movlw	-2
  6870  01A0B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6871  01A0BC  0EFF               	movlw	-1
  6872  01A0BE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6873  01A0C4                     l10967:
  6874                           
  6875                           ;daq.c: 281:  return(uint16_t) (voltage / 0.002442);
  6876  01A0C4  0EF6               	movlw	246
  6877  01A0C6  6EE6               	movwf	postinc1,c
  6878  01A0C8  0E09               	movlw	9
  6879  01A0CA  6EE6               	movwf	postinc1,c
  6880  01A0CC  0E20               	movlw	32
  6881  01A0CE  6EE6               	movwf	postinc1,c
  6882  01A0D0  0E3B               	movlw	59
  6883  01A0D2  6EE6               	movwf	postinc1,c
  6884                           
  6885                           ;stkvar	_voltage @ sp[(-4)+-4]
  6886  01A0D4  0EF8               	movlw	-8
  6887  01A0D6  006F FF8F FFE6     	movff	plusw1,postinc1
  6888  01A0DC  006F FF8F FFE6     	movff	plusw1,postinc1
  6889  01A0E2  006F FF8F FFE6     	movff	plusw1,postinc1
  6890  01A0E8  006F FF8F FFE6     	movff	plusw1,postinc1
  6891  01A0EE  EC13  F0A7         	call	___fldiv	;wreg free
  6892  01A0F2  0060  F007  FFE6   	movff	btemp,postinc1
  6893  01A0F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6894  01A0FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6895  01A104  0060  F013  FFE6   	movff	btemp+3,postinc1
  6896  01A10A  EC37  F0CA         	call	___fltol	;wreg free
  6897                           
  6898                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6899  01A10E  52E5               	movf	postdec1,f,c
  6900  01A110  52E5               	movf	postdec1,f,c
  6901  01A112  52E5               	movf	postdec1,f,c
  6902  01A114  52E5               	movf	postdec1,f,c
  6903  01A116  0012               	return		;funcret
  6904  01A118                     __end_of_convert_dac_raw:
  6905                           	opt callstack 0
  6906                           
  6907 ;; *************** function _set_dac *****************
  6908 ;; Defined at:
  6909 ;;		line 245 in file "daq.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1  [STACK] void 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6927 ;;Total ram usage:        0 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:   16
  6930 ;; This function calls:
  6931 ;;		_SPI1_Exchange8bit
  6932 ;;		_dac_spi_control
  6933 ;; This function is called by:
  6934 ;;		_main
  6935 ;; This function uses a reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text7
  6939  01ADA2                     __ptext7:
  6940                           	opt callstack 0
  6941  01ADA2                     _set_dac:
  6942                           	opt callstack 14
  6943                           
  6944                           ;daq.c: 247:  while (!SPI1STATUSbits.TXBE);
  6945                           
  6946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6947                           ;incstack = 0
  6948  01ADA2  013D               	movlb	61	; () banked
  6949  01ADA4  AB17               	btfss	23,5,b	;volatile
  6950  01ADA6  D7FD               	goto	_set_dac
  6951                           
  6952                           ; BSR set to: 61
  6953                           
  6954                           ;daq.c: 248:  do { LATCbits.LATC2 = 1; } while(0);
  6955  01ADA8  84BC               	bsf	188,2,c	;volatile
  6956                           
  6957                           ; BSR set to: 61
  6958                           
  6959                           ;daq.c: 249:  do { LATCbits.LATC0 = 1; } while(0);
  6960  01ADAA  80BC               	bsf	188,0,c	;volatile
  6961                           
  6962                           ; BSR set to: 61
  6963                           ;daq.c: 250:  dac_spi_control(1);
  6964  01ADAC  0E01               	movlw	1
  6965  01ADAE  6EE6               	movwf	postinc1,c
  6966  01ADB0  EC4B  F0DB         	call	_dac_spi_control	;wreg free
  6967                           
  6968                           ;daq.c: 251:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6969  01ADB4  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6970                           
  6971                           ;daq.c: 252:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6972  01ADB8  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6973  01ADBC  006F FF78  F00B    	movff	postinc2,btemp+10
  6974  01ADC2  006F FF74  F00C    	movff	postdec2,btemp+11
  6975  01ADC8  0060  F030  F00B   	movff	btemp+11,btemp+10
  6976  01ADCE  6A0C               	clrf	(btemp+11)^0,c
  6977  01ADD0  0E0F               	movlw	15
  6978  01ADD2  160B               	andwf	(btemp+10)^0,f,c
  6979  01ADD4  0100               	movlb	0	; () banked
  6980  01ADD6  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6981  01ADD8  180B               	xorwf	(btemp+10)^0,w,c
  6982  01ADDA  0BF0               	andlw	-16
  6983  01ADDC  180B               	xorwf	(btemp+10)^0,w,c
  6984  01ADDE  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;daq.c: 253:  R.max5322_cmd.map.cont = 0b0100;
  6988  01ADE0  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6989  01ADE2  0B0F               	andlw	-241
  6990  01ADE4  0940               	iorlw	64
  6991  01ADE6  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6992                           
  6993                           ; BSR set to: 0
  6994  01ADE8  90BF               	bcf	191,0,c	;volatile
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6998  01ADEA  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6999  01ADEC  6EE6               	movwf	postinc1,c
  7000  01ADEE  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7001                           
  7002                           ; BSR set to: 57
  7003                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7004  01ADF2  0100               	movlb	0	; () banked
  7005  01ADF4  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  7006  01ADF6  6EE6               	movwf	postinc1,c
  7007  01ADF8  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7008                           
  7009                           ; BSR set to: 57
  7010  01ADFC  80BF               	bsf	191,0,c	;volatile
  7011                           
  7012                           ; BSR set to: 57
  7013                           ;daq.c: 258:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7014  01ADFE  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  7015                           
  7016                           ; BSR set to: 57
  7017                           ;daq.c: 259:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7018  01AE02  EE20  F0D1         	lfsr	2,_R+34	;volatile
  7019  01AE06  006F FF78  F00B    	movff	postinc2,btemp+10
  7020  01AE0C  006F FF74  F00C    	movff	postdec2,btemp+11
  7021  01AE12  0060  F030  F00B   	movff	btemp+11,btemp+10
  7022  01AE18  6A0C               	clrf	(btemp+11)^0,c
  7023  01AE1A  0E0F               	movlw	15
  7024  01AE1C  160B               	andwf	(btemp+10)^0,f,c
  7025  01AE1E  0100               	movlb	0	; () banked
  7026  01AE20  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7027  01AE22  180B               	xorwf	(btemp+10)^0,w,c
  7028  01AE24  0BF0               	andlw	-16
  7029  01AE26  180B               	xorwf	(btemp+10)^0,w,c
  7030  01AE28  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;daq.c: 260:  R.max5322_cmd.map.cont = 0b0101;
  7034  01AE2A  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7035  01AE2C  0B0F               	andlw	-241
  7036  01AE2E  0950               	iorlw	80
  7037  01AE30  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  7038                           
  7039                           ; BSR set to: 0
  7040  01AE32  90BF               	bcf	191,0,c	;volatile
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7044  01AE34  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7045  01AE36  6EE6               	movwf	postinc1,c
  7046  01AE38  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7047                           
  7048                           ; BSR set to: 57
  7049                           ;daq.c: 263:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7050  01AE3C  0100               	movlb	0	; () banked
  7051  01AE3E  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  7052  01AE40  6EE6               	movwf	postinc1,c
  7053  01AE42  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7054  01AE46                     l1887:
  7055  01AE46  013D               	movlb	61	; () banked
  7056  01AE48  AB17               	btfss	23,5,b	;volatile
  7057  01AE4A  D7FD               	goto	l1887
  7058                           
  7059                           ; BSR set to: 61
  7060                           
  7061                           ;daq.c: 265:  do { LATFbits.LATF0 = 1; } while(0);
  7062  01AE4C  80BF               	bsf	191,0,c	;volatile
  7063                           
  7064                           ; BSR set to: 61
  7065                           ;daq.c: 266:  dac_spi_control(0);
  7066  01AE4E  0E00               	movlw	0
  7067  01AE50  6EE6               	movwf	postinc1,c
  7068  01AE52  EC4B  F0DB         	call	_dac_spi_control	;wreg free
  7069                           
  7070                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7071  01AE56  0012               	return		;funcret
  7072  01AE58                     __end_of_set_dac:
  7073                           	opt callstack 0
  7074                           
  7075 ;; *************** function _dac_spi_control *****************
  7076 ;; Defined at:
  7077 ;;		line 197 in file "daq.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  set             1  [STACK] _Bool 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;		None
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1  [STACK] void 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr1l, fsr1h, status,2
  7086 ;; Tracked objects:
  7087 ;;		On entry : 3F/3D
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;Total ram usage:        0 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:   15
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_set_dac
  7102 ;; This function uses a reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text8
  7106  01B696                     __ptext8:
  7107                           	opt callstack 0
  7108  01B696                     _dac_spi_control:
  7109                           	opt callstack 14
  7110                           
  7111                           ;daq.c: 197: void dac_spi_control(_Bool set);daq.c: 198: {;daq.c: 199:  static _Bool ini
      +                          t = 0;;daq.c: 200:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 202:  if (set) {
  7112                           ;stkvar	_set @ sp[(0)+-1]
  7113                           
  7114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7115                           ;incstack = 0
  7116  01B696  0EFF               	movlw	-1
  7117  01B698  50E3               	movf	plusw1,w,c
  7118  01B69A  B4D8               	btfsc	status,2,c
  7119  01B69C  D022               	goto	l10955
  7120                           
  7121                           ;daq.c: 203:   SPI1CON0bits.EN = 0;
  7122  01B69E  013D               	movlb	61	; () banked
  7123  01B6A0  9F14               	bcf	20,7,b	;volatile
  7124                           
  7125                           ; BSR set to: 61
  7126                           ;daq.c: 204:   if (!init) {
  7127  01B6A2  5043               	movf	dac_spi_control@init^0,w,c
  7128  01B6A4  A4D8               	btfss	status,2,c
  7129  01B6A6  D011               	goto	l10943
  7130                           
  7131                           ; BSR set to: 61
  7132                           ;daq.c: 205:    init = 1;
  7133  01B6A8  0E01               	movlw	1
  7134  01B6AA  6E43               	movwf	dac_spi_control@init^0,c
  7135                           
  7136                           ; BSR set to: 61
  7137                           ;daq.c: 206:    S0 = SPI1CON0;
  7138  01B6AC  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7139                           
  7140                           ; BSR set to: 61
  7141                           ;daq.c: 207:    S1 = SPI1CON1;
  7142  01B6B2  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7143                           
  7144                           ; BSR set to: 61
  7145                           ;daq.c: 208:    S2 = SPI1CON2;
  7146  01B6B8  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7147                           
  7148                           ; BSR set to: 61
  7149                           ;daq.c: 209:    SC = SPI1CLK;
  7150  01B6BE  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7151                           
  7152                           ; BSR set to: 61
  7153                           ;daq.c: 210:    SB = SPI1BAUD;
  7154  01B6C4  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7155  01B6CA                     l10943:
  7156                           
  7157                           ; BSR set to: 61
  7158                           ;daq.c: 216:   SPI1CON1 = 0x00;
  7159  01B6CA  6B15               	clrf	21,b	;volatile
  7160                           
  7161                           ; BSR set to: 61
  7162                           ;daq.c: 217:   SPI1CON1bits.CKE = 1;
  7163  01B6CC  8D15               	bsf	21,6,b	;volatile
  7164                           
  7165                           ; BSR set to: 61
  7166                           ;daq.c: 218:   SPI1CON1bits.CKP = 0;
  7167  01B6CE  9B15               	bcf	21,5,b	;volatile
  7168                           
  7169                           ; BSR set to: 61
  7170                           ;daq.c: 219:   SPI1CON1bits.SMP = 0;
  7171  01B6D0  9F15               	bcf	21,7,b	;volatile
  7172                           
  7173                           ;daq.c: 221:   SPI1CON2 = 0x03;
  7174  01B6D2  0E03               	movlw	3
  7175  01B6D4  6F16               	movwf	22,b	;volatile
  7176                           
  7177                           ;daq.c: 223:   SPI1BAUD = 0x0f;
  7178  01B6D6  0E0F               	movlw	15
  7179  01B6D8  6F19               	movwf	25,b	;volatile
  7180                           
  7181                           ; BSR set to: 61
  7182                           ;daq.c: 225:   SPI1CLK = 0x00;
  7183  01B6DA  6B1C               	clrf	28,b	;volatile
  7184                           
  7185                           ;daq.c: 227:   SPI1CON0 = 0x83;
  7186  01B6DC  0E83               	movlw	131
  7187  01B6DE  6F14               	movwf	20,b	;volatile
  7188  01B6E0  D014               	goto	L3
  7189  01B6E2                     l10955:
  7190                           
  7191                           ;daq.c: 230:   if (init) {
  7192  01B6E2  5043               	movf	dac_spi_control@init^0,w,c
  7193  01B6E4  B4D8               	btfsc	status,2,c
  7194  01B6E6  D012               	goto	l1871
  7195                           
  7196                           ;daq.c: 234:    SPI1CON0bits.EN = 0;
  7197  01B6E8  013D               	movlb	61	; () banked
  7198  01B6EA  9F14               	bcf	20,7,b	;volatile
  7199                           
  7200                           ;daq.c: 235:    SPI1CON1 = S1;
  7201  01B6EC  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7202                           
  7203                           ;daq.c: 236:    SPI1CON2 = S2;
  7204  01B6F2  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7205                           
  7206                           ;daq.c: 237:    SPI1CLK = SC;
  7207  01B6F8  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7208                           
  7209                           ;daq.c: 238:    SPI1BAUD = SB;
  7210  01B6FE  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7211                           
  7212                           ;daq.c: 239:    SPI1CON0 = S0;
  7213  01B704  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7214  01B70A                     L3:
  7215                           
  7216                           ;daq.c: 240:    SPI1CON0bits.EN = 1;
  7217  01B70A  8F14               	bsf	20,7,b	;volatile
  7218  01B70C                     l1871:
  7219                           
  7220                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7221  01B70C  52E5               	movf	postdec1,f,c
  7222  01B70E  0012               	return		;funcret
  7223  01B710                     __end_of_dac_spi_control:
  7224                           	opt callstack 0
  7225                           
  7226 ;; *************** function _init_port_dma *****************
  7227 ;; Defined at:
  7228 ;;		line 104 in file "eadog.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1  [STACK] void 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/1
  7239 ;;		On exit  : 3F/3B
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7246 ;;Total ram usage:        0 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:   15
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;; This function uses a reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text9
  7257  01C3B8                     __ptext9:
  7258                           	opt callstack 0
  7259  01C3B8                     _init_port_dma:
  7260                           	opt callstack 15
  7261                           
  7262                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7263                           
  7264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7265                           ;incstack = 0
  7266  01C3B8  0E3F               	movlw	-193
  7267  01C3BA  013B               	movlb	59	; () banked
  7268  01C3BC  17DD               	andwf	221,f,b	;volatile
  7269                           
  7270                           ; BSR set to: 59
  7271                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7272  01C3BE  9BDD               	bcf	221,5,b	;volatile
  7273                           
  7274                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7275  01C3C0  51DD               	movf	221,w,b	;volatile
  7276  01C3C2  0BF9               	andlw	-7
  7277  01C3C4  0902               	iorlw	2
  7278  01C3C6  6FDD               	movwf	221,b	;volatile
  7279                           
  7280                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7281  01C3C8  0EE7               	movlw	-25
  7282  01C3CA  17DD               	andwf	221,f,b	;volatile
  7283                           
  7284                           ; BSR set to: 59
  7285                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7286  01C3CC  81DD               	bsf	221,0,b	;volatile
  7287                           
  7288                           ; BSR set to: 59
  7289                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7290  01C3CE  9DDC               	bcf	220,6,b	;volatile
  7291                           
  7292                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7293  01C3D0  0E3D               	movlw	61
  7294  01C3D2  6FD1               	movwf	209,b	;volatile
  7295  01C3D4  0EEA               	movlw	234
  7296  01C3D6  6FD0               	movwf	208,b	;volatile
  7297                           
  7298                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7299  01C3D8  0EFF               	movlw	low _port_data
  7300  01C3DA  6FD9               	movwf	217,b	;volatile
  7301  01C3DC  0E04               	movlw	high _port_data
  7302  01C3DE  6FDA               	movwf	218,b	;volatile
  7303  01C3E0  0E00               	movlw	low (_port_data shr (0+16))
  7304  01C3E2  6FDB               	movwf	219,b	;volatile
  7305                           
  7306                           ; BSR set to: 59
  7307                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7308  01C3E4  9BDC               	bcf	220,5,b	;volatile
  7309                           
  7310                           ; BSR set to: 59
  7311                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7312  01C3E6  0012               	return		;funcret
  7313  01C3E8                     __end_of_init_port_dma:
  7314                           	opt callstack 0
  7315                           
  7316 ;; *************** function _init_display *****************
  7317 ;; Defined at:
  7318 ;;		line 38 in file "eadog.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1  [STACK] void 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7327 ;; Tracked objects:
  7328 ;;		On entry : 3F/3B
  7329 ;;		On exit  : 3F/3D
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:   17
  7339 ;; This function calls:
  7340 ;;		_ringBufS_init
  7341 ;;		_send_lcd_cmd
  7342 ;;		_send_lcd_cmd_long
  7343 ;;		_send_lcd_data
  7344 ;;		_wdtdelay
  7345 ;; This function is called by:
  7346 ;;		_main
  7347 ;; This function uses a reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text10
  7351  01A654                     __ptext10:
  7352                           	opt callstack 0
  7353  01A654                     _init_display:
  7354                           	opt callstack 13
  7355                           
  7356                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7357                           
  7358                           ; BSR set to: 59
  7359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7360                           ;incstack = 0
  7361  01A654  0E83               	movlw	low _ring_buf1
  7362  01A656  0101               	movlb	1	; () banked
  7363  01A658  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7364  01A65A  0E03               	movlw	high _ring_buf1
  7365  01A65C  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7366                           
  7367                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7368  01A65E  0E40               	movlw	low _ring_buf2
  7369  01A660  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7370  01A662  0E03               	movlw	high _ring_buf2
  7371  01A664  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7372                           
  7373                           ; BSR set to: 1
  7374                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7375  01A666  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7376  01A66C  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7377  01A672  ECAB  F0E2         	call	_ringBufS_init	;wreg free
  7378                           
  7379                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7380  01A676  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7381  01A67C  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7382  01A682  ECAB  F0E2         	call	_ringBufS_init	;wreg free
  7383                           
  7384                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7385  01A686  84BE               	bsf	190,2,c	;volatile
  7386                           
  7387                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7388  01A688  013D               	movlb	61	; () banked
  7389  01A68A  9F14               	bcf	20,7,b	;volatile
  7390                           
  7391                           ; BSR set to: 61
  7392                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7393  01A68C  0E20               	movlw	32
  7394  01A68E  6F15               	movwf	21,b	;volatile
  7395                           
  7396                           ; BSR set to: 61
  7397                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7398  01A690  0E03               	movlw	3
  7399  01A692  6F16               	movwf	22,b	;volatile
  7400                           
  7401                           ; BSR set to: 61
  7402                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7403  01A694  0E04               	movlw	4
  7404  01A696  6F19               	movwf	25,b	;volatile
  7405                           
  7406                           ; BSR set to: 61
  7407                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7408  01A698  0E02               	movlw	2
  7409  01A69A  6F1C               	movwf	28,b	;volatile
  7410                           
  7411                           ; BSR set to: 61
  7412                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7413  01A69C  0E83               	movlw	131
  7414  01A69E  6F14               	movwf	20,b	;volatile
  7415                           
  7416                           ; BSR set to: 61
  7417                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7418  01A6A0  8F14               	bsf	20,7,b	;volatile
  7419                           
  7420                           ; BSR set to: 61
  7421                           ;eadog.c: 60:  wdtdelay(350000);
  7422  01A6A2  0E30               	movlw	48
  7423  01A6A4  6EE6               	movwf	postinc1,c
  7424  01A6A6  0E57               	movlw	87
  7425  01A6A8  6EE6               	movwf	postinc1,c
  7426  01A6AA  0E05               	movlw	5
  7427  01A6AC  6EE6               	movwf	postinc1,c
  7428  01A6AE  0E00               	movlw	0
  7429  01A6B0  6EE6               	movwf	postinc1,c
  7430  01A6B2  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7434  01A6B6  0E46               	movlw	70
  7435  01A6B8  6EE6               	movwf	postinc1,c
  7436  01A6BA  EC2A  F0E0         	call	_send_lcd_cmd_long	;wreg free
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7440  01A6BE  0E41               	movlw	65
  7441  01A6C0  6EE6               	movwf	postinc1,c
  7442  01A6C2  EC4A  F0E0         	call	_send_lcd_cmd	;wreg free
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;eadog.c: 63:  wdtdelay(80);
  7446  01A6C6  0E50               	movlw	80
  7447  01A6C8  6EE6               	movwf	postinc1,c
  7448  01A6CA  0E00               	movlw	0
  7449  01A6CC  6EE6               	movwf	postinc1,c
  7450  01A6CE  0E00               	movlw	0
  7451  01A6D0  6EE6               	movwf	postinc1,c
  7452  01A6D2  0E00               	movlw	0
  7453  01A6D4  6EE6               	movwf	postinc1,c
  7454  01A6D6  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7458  01A6DA  0E53               	movlw	83
  7459  01A6DC  6EE6               	movwf	postinc1,c
  7460  01A6DE  EC4A  F0E0         	call	_send_lcd_cmd	;wreg free
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;eadog.c: 65:  send_lcd_data(2);
  7464  01A6E2  0E02               	movlw	2
  7465  01A6E4  6EE6               	movwf	postinc1,c
  7466  01A6E6  ECD8  F0E3         	call	_send_lcd_data	;wreg free
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;eadog.c: 66:  wdtdelay(80);
  7470  01A6EA  0E50               	movlw	80
  7471  01A6EC  6EE6               	movwf	postinc1,c
  7472  01A6EE  0E00               	movlw	0
  7473  01A6F0  6EE6               	movwf	postinc1,c
  7474  01A6F2  0E00               	movlw	0
  7475  01A6F4  6EE6               	movwf	postinc1,c
  7476  01A6F6  0E00               	movlw	0
  7477  01A6F8  6EE6               	movwf	postinc1,c
  7478  01A6FA  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7482  01A6FE  0E51               	movlw	81
  7483  01A700  6EE6               	movwf	postinc1,c
  7484  01A702  EC2A  F0E0         	call	_send_lcd_cmd_long	;wreg free
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7488  01A706  013D               	movlb	61	; () banked
  7489  01A708  9F14               	bcf	20,7,b	;volatile
  7490                           
  7491                           ; BSR set to: 61
  7492                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7493  01A70A  0E02               	movlw	2
  7494  01A70C  6F16               	movwf	22,b	;volatile
  7495                           
  7496                           ; BSR set to: 61
  7497                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7498  01A70E  8F14               	bsf	20,7,b	;volatile
  7499                           
  7500                           ; BSR set to: 61
  7501                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7502  01A710  931A               	bcf	26,1,b	;volatile
  7503                           
  7504                           ; BSR set to: 61
  7505                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7506  01A712  0E3F               	movlw	-193
  7507  01A714  013B               	movlb	59	; () banked
  7508  01A716  17FD               	andwf	253,f,b	;volatile
  7509                           
  7510                           ; BSR set to: 59
  7511                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7512  01A718  9BFD               	bcf	253,5,b	;volatile
  7513                           
  7514                           ; BSR set to: 59
  7515                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7516  01A71A  51FD               	movf	253,w,b	;volatile
  7517  01A71C  0BF9               	andlw	-7
  7518  01A71E  0902               	iorlw	2
  7519  01A720  6FFD               	movwf	253,b	;volatile
  7520                           
  7521                           ; BSR set to: 59
  7522                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7523  01A722  0EE7               	movlw	-25
  7524  01A724  17FD               	andwf	253,f,b	;volatile
  7525                           
  7526                           ; BSR set to: 59
  7527                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7528  01A726  81FD               	bsf	253,0,b	;volatile
  7529                           
  7530                           ; BSR set to: 59
  7531                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7532  01A728  0E83               	movlw	low _ring_buf1
  7533  01A72A  6FF9               	movwf	249,b	;volatile
  7534  01A72C  0E03               	movlw	high _ring_buf1
  7535  01A72E  6FFA               	movwf	250,b	;volatile
  7536  01A730  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7537  01A732  6FFB               	movwf	251,b	;volatile
  7538                           
  7539                           ; BSR set to: 59
  7540                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7541  01A734  9BFC               	bcf	252,5,b	;volatile
  7542                           
  7543                           ; BSR set to: 59
  7544                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7545  01A736  013D               	movlb	61	; () banked
  7546  01A738  831A               	bsf	26,1,b	;volatile
  7547                           
  7548                           ; BSR set to: 61
  7549                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7550  01A73A  94BE               	bcf	190,2,c	;volatile
  7551                           
  7552                           ; BSR set to: 61
  7553                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7554  01A73C  0012               	return		;funcret
  7555  01A73E                     __end_of_init_display:
  7556                           	opt callstack 0
  7557                           
  7558 ;; *************** function _send_lcd_data *****************
  7559 ;; Defined at:
  7560 ;;		line 123 in file "eadog.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  data            1  [STACK] const unsigned char 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1  [STACK] void 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7569 ;; Tracked objects:
  7570 ;;		On entry : 3F/0
  7571 ;;		On exit  : 3F/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7578 ;;Total ram usage:        0 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:   16
  7581 ;; This function calls:
  7582 ;;		_SPI1_Exchange8bit
  7583 ;;		_wdtdelay
  7584 ;; This function is called by:
  7585 ;;		_init_display
  7586 ;; This function uses a reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text11
  7590  01C7B0                     __ptext11:
  7591                           	opt callstack 0
  7592  01C7B0                     _send_lcd_data:
  7593                           	opt callstack 13
  7594                           
  7595                           ; BSR set to: 61
  7596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7597                           ;incstack = 0
  7598                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7599  01C7B0  94BC               	bcf	188,2,c	;volatile
  7600                           
  7601                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7602                           ;stkvar	_data @ sp[(0)+-1]
  7603  01C7B2  0EFF               	movlw	-1
  7604  01C7B4  50E3               	movf	plusw1,w,c
  7605  01C7B6  6EE6               	movwf	postinc1,c
  7606  01C7B8  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7607                           
  7608                           ; BSR set to: 57
  7609                           ;eadog.c: 127:  wdtdelay(8);
  7610  01C7BC  0E08               	movlw	8
  7611  01C7BE  6EE6               	movwf	postinc1,c
  7612  01C7C0  0E00               	movlw	0
  7613  01C7C2  6EE6               	movwf	postinc1,c
  7614  01C7C4  0E00               	movlw	0
  7615  01C7C6  6EE6               	movwf	postinc1,c
  7616  01C7C8  0E00               	movlw	0
  7617  01C7CA  6EE6               	movwf	postinc1,c
  7618  01C7CC  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7619                           
  7620                           ; BSR set to: 0
  7621                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7622  01C7D0  52E5               	movf	postdec1,f,c
  7623  01C7D2  0012               	return		;funcret
  7624  01C7D4                     __end_of_send_lcd_data:
  7625                           	opt callstack 0
  7626                           
  7627 ;; *************** function _send_lcd_cmd_long *****************
  7628 ;; Defined at:
  7629 ;;		line 139 in file "eadog.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  cmd             1  [STACK] const unsigned char 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1  [STACK] void 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7638 ;; Tracked objects:
  7639 ;;		On entry : 3F/0
  7640 ;;		On exit  : 3F/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:   16
  7650 ;; This function calls:
  7651 ;;		_SPI1_Exchange8bit
  7652 ;;		_wdtdelay
  7653 ;; This function is called by:
  7654 ;;		_init_display
  7655 ;; This function uses a reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text12
  7659  01C054                     __ptext12:
  7660                           	opt callstack 0
  7661  01C054                     _send_lcd_cmd_long:
  7662                           	opt callstack 13
  7663                           
  7664                           ; BSR set to: 0
  7665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7666                           ;incstack = 0
  7667                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7668  01C054  94BC               	bcf	188,2,c	;volatile
  7669                           
  7670                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7671  01C056  0EFE               	movlw	254
  7672  01C058  6EE6               	movwf	postinc1,c
  7673  01C05A  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7674                           
  7675                           ; BSR set to: 57
  7676                           ;eadog.c: 143:  wdtdelay(8);
  7677  01C05E  0E08               	movlw	8
  7678  01C060  6EE6               	movwf	postinc1,c
  7679  01C062  0E00               	movlw	0
  7680  01C064  6EE6               	movwf	postinc1,c
  7681  01C066  0E00               	movlw	0
  7682  01C068  6EE6               	movwf	postinc1,c
  7683  01C06A  0E00               	movlw	0
  7684  01C06C  6EE6               	movwf	postinc1,c
  7685  01C06E  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7689                           ;stkvar	_cmd @ sp[(0)+-1]
  7690  01C072  0EFF               	movlw	-1
  7691  01C074  50E3               	movf	plusw1,w,c
  7692  01C076  6EE6               	movwf	postinc1,c
  7693  01C078  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7694                           
  7695                           ;eadog.c: 145:  wdtdelay(800);
  7696  01C07C  0E20               	movlw	32
  7697  01C07E  6EE6               	movwf	postinc1,c
  7698  01C080  0E03               	movlw	3
  7699  01C082  6EE6               	movwf	postinc1,c
  7700  01C084  0E00               	movlw	0
  7701  01C086  6EE6               	movwf	postinc1,c
  7702  01C088  0E00               	movlw	0
  7703  01C08A  6EE6               	movwf	postinc1,c
  7704  01C08C  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7705                           
  7706                           ; BSR set to: 0
  7707                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7708  01C090  52E5               	movf	postdec1,f,c
  7709  01C092  0012               	return		;funcret
  7710  01C094                     __end_of_send_lcd_cmd_long:
  7711                           	opt callstack 0
  7712                           
  7713 ;; *************** function _send_lcd_cmd *****************
  7714 ;; Defined at:
  7715 ;;		line 130 in file "eadog.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  cmd             1  [STACK] const unsigned char 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1  [STACK] void 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7724 ;; Tracked objects:
  7725 ;;		On entry : 3F/0
  7726 ;;		On exit  : 3F/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;Total ram usage:        0 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:   16
  7736 ;; This function calls:
  7737 ;;		_SPI1_Exchange8bit
  7738 ;;		_wdtdelay
  7739 ;; This function is called by:
  7740 ;;		_init_display
  7741 ;; This function uses a reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text13
  7745  01C094                     __ptext13:
  7746                           	opt callstack 0
  7747  01C094                     _send_lcd_cmd:
  7748                           	opt callstack 13
  7749                           
  7750                           ; BSR set to: 0
  7751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7752                           ;incstack = 0
  7753                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7754  01C094  94BC               	bcf	188,2,c	;volatile
  7755                           
  7756                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7757  01C096  0EFE               	movlw	254
  7758  01C098  6EE6               	movwf	postinc1,c
  7759  01C09A  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7760                           
  7761                           ; BSR set to: 57
  7762                           ;eadog.c: 134:  wdtdelay(8);
  7763  01C09E  0E08               	movlw	8
  7764  01C0A0  6EE6               	movwf	postinc1,c
  7765  01C0A2  0E00               	movlw	0
  7766  01C0A4  6EE6               	movwf	postinc1,c
  7767  01C0A6  0E00               	movlw	0
  7768  01C0A8  6EE6               	movwf	postinc1,c
  7769  01C0AA  0E00               	movlw	0
  7770  01C0AC  6EE6               	movwf	postinc1,c
  7771  01C0AE  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7775                           ;stkvar	_cmd @ sp[(0)+-1]
  7776  01C0B2  0EFF               	movlw	-1
  7777  01C0B4  50E3               	movf	plusw1,w,c
  7778  01C0B6  6EE6               	movwf	postinc1,c
  7779  01C0B8  EC97  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7780                           
  7781                           ;eadog.c: 136:  wdtdelay(8);
  7782  01C0BC  0E08               	movlw	8
  7783  01C0BE  6EE6               	movwf	postinc1,c
  7784  01C0C0  0E00               	movlw	0
  7785  01C0C2  6EE6               	movwf	postinc1,c
  7786  01C0C4  0E00               	movlw	0
  7787  01C0C6  6EE6               	movwf	postinc1,c
  7788  01C0C8  0E00               	movlw	0
  7789  01C0CA  6EE6               	movwf	postinc1,c
  7790  01C0CC  ECF4  F0DD         	call	_wdtdelay	;wreg free
  7791                           
  7792                           ; BSR set to: 0
  7793                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7794  01C0D0  52E5               	movf	postdec1,f,c
  7795  01C0D2  0012               	return		;funcret
  7796  01C0D4                     __end_of_send_lcd_cmd:
  7797                           	opt callstack 0
  7798                           
  7799 ;; *************** function _SPI1_Exchange8bit *****************
  7800 ;; Defined at:
  7801 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  data            1  [STACK] unsigned char 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1  [STACK] unsigned char 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 3F/39
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:   15
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_send_lcd_data
  7826 ;;		_send_lcd_cmd
  7827 ;;		_send_lcd_cmd_long
  7828 ;;		_set_dac
  7829 ;; This function uses a reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text14
  7833  01C92E                     __ptext14:
  7834                           	opt callstack 0
  7835  01C92E                     _SPI1_Exchange8bit:
  7836                           	opt callstack 14
  7837                           
  7838                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7839                           
  7840                           ; BSR set to: 0
  7841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7842                           ;incstack = 0
  7843  01C92E  0E01               	movlw	1
  7844  01C930  013D               	movlb	61	; () banked
  7845  01C932  6F12               	movwf	18,b	;volatile
  7846                           
  7847                           ; BSR set to: 61
  7848                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7849                           ;stkvar	_data @ sp[(0)+-1]
  7850  01C934  0EFF               	movlw	-1
  7851  01C936  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7852  01C93C                     l807:
  7853                           
  7854                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7855  01C93C  0139               	movlb	57	; () banked
  7856  01C93E  A9A2               	btfss	162,4,b	;volatile
  7857  01C940  D7FD               	goto	l807
  7858                           
  7859                           ; BSR set to: 57
  7860                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7861  01C942  006F F440  F001    	movff	15632,btemp	;volatile
  7862                           
  7863                           ; BSR set to: 57
  7864                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7865  01C948  52E5               	movf	postdec1,f,c
  7866  01C94A  0012               	return		;funcret
  7867  01C94C                     __end_of_SPI1_Exchange8bit:
  7868                           	opt callstack 0
  7869                           
  7870 ;; *************** function _ringBufS_init *****************
  7871 ;; Defined at:
  7872 ;;		line 22 in file "ringbufs.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  _this           2  [STACK] PTR volatile struct ring
  7875 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1  [STACK] void 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/1
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:   16
  7894 ;; This function calls:
  7895 ;;		_memset
  7896 ;; This function is called by:
  7897 ;;		_init_display
  7898 ;; This function uses a reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text15
  7902  01C556                     __ptext15:
  7903                           	opt callstack 0
  7904  01C556                     _ringBufS_init:
  7905                           	opt callstack 13
  7906                           
  7907                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7908                           
  7909                           ; BSR set to: 57
  7910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7911                           ;incstack = 0
  7912  01C556  0E43               	movlw	67
  7913  01C558  6EE6               	movwf	postinc1,c
  7914  01C55A  0E00               	movlw	0
  7915  01C55C  6EE6               	movwf	postinc1,c
  7916  01C55E  0E00               	movlw	0
  7917  01C560  6EE6               	movwf	postinc1,c
  7918  01C562  0E00               	movlw	0
  7919  01C564  6EE6               	movwf	postinc1,c
  7920                           
  7921                           ;stkvar	__this @ sp[(-4)+-2]
  7922  01C566  0EFA               	movlw	-6
  7923  01C568  006F FF8F FFE6     	movff	plusw1,postinc1
  7924  01C56E  006F FF8F FFE6     	movff	plusw1,postinc1
  7925  01C574  EC14  F0B9         	call	_memset	;wreg free
  7926                           
  7927                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7928  01C578  52E5               	movf	postdec1,f,c
  7929  01C57A  52E5               	movf	postdec1,f,c
  7930  01C57C  0012               	return		;funcret
  7931  01C57E                     __end_of_ringBufS_init:
  7932                           	opt callstack 0
  7933                           
  7934 ;; *************** function _init_bsoc *****************
  7935 ;; Defined at:
  7936 ;;		line 110 in file "bsoc.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;		None
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1  [STACK] void 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7954 ;;Total ram usage:        0 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:   18
  7957 ;; This function calls:
  7958 ;;		_TMR3_SetInterruptHandler
  7959 ;;		_Volts_to_SOC
  7960 ;;		___fldiv
  7961 ;;		___flmul
  7962 ;;		___fltol
  7963 ;;		___xxtofl
  7964 ;;		_conv_raw_result
  7965 ;; This function is called by:
  7966 ;;		_main
  7967 ;; This function uses a reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text16
  7971  017F9E                     __ptext16:
  7972                           	opt callstack 0
  7973  017F9E                     _init_bsoc:
  7974                           	opt callstack 12
  7975                           
  7976                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7977                           
  7978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7979                           ;incstack = 0
  7980  017F9E  0E00               	movlw	0
  7981  017FA0  6EE6               	movwf	postinc1,c
  7982  017FA2  0E00               	movlw	0
  7983  017FA4  6EE6               	movwf	postinc1,c
  7984  017FA6  0E7A               	movlw	122
  7985  017FA8  6EE6               	movwf	postinc1,c
  7986  017FAA  0E44               	movlw	68
  7987  017FAC  6EE6               	movwf	postinc1,c
  7988  017FAE  0E00               	movlw	0
  7989  017FB0  6EE6               	movwf	postinc1,c
  7990  017FB2  0E04               	movlw	4
  7991  017FB4  6EE6               	movwf	postinc1,c
  7992  017FB6  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  7993  017FBA  0060  F007  FFE6   	movff	btemp,postinc1
  7994  017FC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7995  017FC6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7996  017FCC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7997  017FD2  EC37  F0CA         	call	___fltol	;wreg free
  7998  017FD6  0060  F007  FFE6   	movff	btemp,postinc1
  7999  017FDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8000  017FE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8001  017FE8  0060  F013  FFE6   	movff	btemp+3,postinc1
  8002  017FEE  0E00               	movlw	0
  8003  017FF0  6EE6               	movwf	postinc1,c
  8004  017FF2  EC39  F0C5         	call	___xxtofl	;wreg free
  8005  017FF6  0060  F007  FFE6   	movff	btemp,postinc1
  8006  017FFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8007  018002  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8008  018008  0060  F013  FFE6   	movff	btemp+3,postinc1
  8009  01800E  EC20  F09F         	call	___flmul	;wreg free
  8010  018012  0060  F007  FFE6   	movff	btemp,postinc1
  8011  018018  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8012  01801E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8013  018024  0060  F013  FFE6   	movff	btemp+3,postinc1
  8014  01802A  EC37  F0CA         	call	___fltol	;wreg free
  8015  01802E  0060  F007  FFE6   	movff	btemp,postinc1
  8016  018034  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8017  01803A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8018  018040  0060  F013  FFE6   	movff	btemp+3,postinc1
  8019  018046  EC18  F0D6         	call	_Volts_to_SOC	;wreg free
  8020  01804A  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  8021  018050  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  8022                           
  8023                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8024  018056  EE21  F38B         	lfsr	2,_C+140	;volatile
  8025  01805A  006F FF7B FFE6     	movff	postinc2,postinc1
  8026  018060  006F FF7B FFE6     	movff	postinc2,postinc1
  8027  018066  006F FF7B FFE6     	movff	postinc2,postinc1
  8028  01806C  006F FF7B FFE6     	movff	postinc2,postinc1
  8029  018072  0E00               	movlw	0
  8030  018074  6EE6               	movwf	postinc1,c
  8031  018076  0E00               	movlw	0
  8032  018078  6EE6               	movwf	postinc1,c
  8033  01807A  0EC8               	movlw	200
  8034  01807C  6EE6               	movwf	postinc1,c
  8035  01807E  0E42               	movlw	66
  8036  018080  6EE6               	movwf	postinc1,c
  8037  018082  0E00               	movlw	0
  8038  018084  6EE6               	movwf	postinc1,c
  8039  018086  0E00               	movlw	0
  8040  018088  6EE6               	movwf	postinc1,c
  8041  01808A  0E7A               	movlw	122
  8042  01808C  6EE6               	movwf	postinc1,c
  8043  01808E  0E44               	movlw	68
  8044  018090  6EE6               	movwf	postinc1,c
  8045  018092  0E00               	movlw	0
  8046  018094  6EE6               	movwf	postinc1,c
  8047  018096  0E04               	movlw	4
  8048  018098  6EE6               	movwf	postinc1,c
  8049  01809A  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8050  01809E  0060  F007  FFE6   	movff	btemp,postinc1
  8051  0180A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8052  0180AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8053  0180B0  0060  F013  FFE6   	movff	btemp+3,postinc1
  8054  0180B6  EC37  F0CA         	call	___fltol	;wreg free
  8055  0180BA  0060  F007  FFE6   	movff	btemp,postinc1
  8056  0180C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8057  0180C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8058  0180CC  0060  F013  FFE6   	movff	btemp+3,postinc1
  8059  0180D2  0E00               	movlw	0
  8060  0180D4  6EE6               	movwf	postinc1,c
  8061  0180D6  EC39  F0C5         	call	___xxtofl	;wreg free
  8062  0180DA  0060  F007  FFE6   	movff	btemp,postinc1
  8063  0180E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8064  0180E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8065  0180EC  0060  F013  FFE6   	movff	btemp+3,postinc1
  8066  0180F2  EC20  F09F         	call	___flmul	;wreg free
  8067  0180F6  0060  F007  FFE6   	movff	btemp,postinc1
  8068  0180FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8069  018102  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8070  018108  0060  F013  FFE6   	movff	btemp+3,postinc1
  8071  01810E  EC37  F0CA         	call	___fltol	;wreg free
  8072  018112  0060  F007  FFE6   	movff	btemp,postinc1
  8073  018118  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8074  01811E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8075  018124  0060  F013  FFE6   	movff	btemp+3,postinc1
  8076  01812A  EC18  F0D6         	call	_Volts_to_SOC	;wreg free
  8077  01812E  0060  F004  F00B   	movff	btemp,btemp+10
  8078  018134  0060  F008  F00C   	movff	btemp+1,btemp+11
  8079  01813A  500B               	movf	(btemp+10)^0,w,c
  8080  01813C  6E05               	movwf	(btemp+4)^0,c
  8081  01813E  500C               	movf	(btemp+11)^0,w,c
  8082  018140  6E06               	movwf	(btemp+5)^0,c
  8083  018142  6A07               	clrf	(btemp+6)^0,c
  8084  018144  6A08               	clrf	(btemp+7)^0,c
  8085  018146  0060  F017  FFE6   	movff	btemp+4,postinc1
  8086  01814C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8087  018152  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8088  018158  0060  F023  FFE6   	movff	btemp+7,postinc1
  8089  01815E  0E00               	movlw	0
  8090  018160  6EE6               	movwf	postinc1,c
  8091  018162  EC39  F0C5         	call	___xxtofl	;wreg free
  8092  018166  0060  F007  FFE6   	movff	btemp,postinc1
  8093  01816C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8094  018172  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8095  018178  0060  F013  FFE6   	movff	btemp+3,postinc1
  8096  01817E  EC13  F0A7         	call	___fldiv	;wreg free
  8097  018182  0060  F007  FFE6   	movff	btemp,postinc1
  8098  018188  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8099  01818E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8100  018194  0060  F013  FFE6   	movff	btemp+3,postinc1
  8101  01819A  EC20  F09F         	call	___flmul	;wreg free
  8102  01819E  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  8103  0181A4  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  8104  0181AA  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  8105  0181B0  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  8106                           
  8107                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8108  0181B6  EE21  F38F         	lfsr	2,_C+144	;volatile
  8109  0181BA  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8110  0181C0  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8111  0181C6  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8112  0181CC  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8113                           
  8114                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8115  0181D2  0ED2               	movlw	low _calc_bsoc
  8116  0181D4  6EE6               	movwf	postinc1,c
  8117  0181D6  0E33               	movlw	high _calc_bsoc
  8118  0181D8  6EE6               	movwf	postinc1,c
  8119  0181DA  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8120  0181DC  6EE6               	movwf	postinc1,c
  8121  0181DE  EC37  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
  8122                           
  8123                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8124  0181E2  0012               	return		;funcret
  8125  0181E4                     __end_of_init_bsoc:
  8126                           	opt callstack 0
  8127                           
  8128 ;; *************** function _Volts_to_SOC *****************
  8129 ;; Defined at:
  8130 ;;		line 175 in file "bsoc.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  cvoltage        4  [STACK] const unsigned long 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  soc             2  [STACK] unsigned short 
  8135 ;;  slot            1  [STACK] unsigned char 
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  2  [STACK] unsigned short 
  8138 ;; Registers used:
  8139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8149 ;;Total ram usage:        0 bytes
  8150 ;; Hardware stack levels used:    1
  8151 ;; Hardware stack levels required when called:   15
  8152 ;; This function calls:
  8153 ;;		Nothing
  8154 ;; This function is called by:
  8155 ;;		_init_bsoc
  8156 ;; This function uses a reentrant model
  8157 ;;
  8158                           
  8159                           	psect	text17
  8160  01AC30                     __ptext17:
  8161                           	opt callstack 0
  8162  01AC30                     _Volts_to_SOC:
  8163                           	opt callstack 0
  8164                           
  8165                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8166  01AC30  52E6               	movf	postinc1,f,c
  8167  01AC32  52E6               	movf	postinc1,f,c
  8168  01AC34  52E6               	movf	postinc1,f,c
  8169                           
  8170                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8171                           ;stkvar	_soc @ sp[(-3)+0]
  8172                           
  8173                           ;incstack = 0
  8174  01AC36  0EFD               	movlw	-3
  8175  01AC38  6AE3               	clrf	plusw1,c
  8176  01AC3A  0EFE               	movlw	-2
  8177  01AC3C  6AE3               	clrf	plusw1,c
  8178                           
  8179                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8180                           ;stkvar	_slot @ sp[(-3)+2]
  8181  01AC3E  0EFF               	movlw	-1
  8182  01AC40  6AE3               	clrf	plusw1,c
  8183  01AC42                     l11131:
  8184                           
  8185                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8186                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8187                           ;stkvar	_slot @ sp[(-3)+2]
  8188  01AC42  0EFF               	movlw	-1
  8189  01AC44  50E3               	movf	plusw1,w,c
  8190  01AC46  0D08               	mullw	8
  8191  01AC48  0E0D               	movlw	low _BVSOC_TABLE
  8192  01AC4A  24F3               	addwf	243,w,c
  8193  01AC4C  6EF6               	movwf	tblptrl,c
  8194  01AC4E  0EF9               	movlw	high _BVSOC_TABLE
  8195  01AC50  20F4               	addwfc	244,w,c
  8196  01AC52  6EF7               	movwf	tblptrh,c
  8197  01AC54                     	if	1	;There are 3 active tblptr bytes
  8198  01AC54  6AF8               	clrf	tblptru,c
  8199  01AC56  0E00               	movlw	low (__mediumconst shr (0+16))
  8200  01AC58  22F8               	addwfc	tblptru,f,c
  8201  01AC5A                     	endif
  8202  01AC5A  0EF9               	movlw	-7
  8203  01AC5C  50E3               	movf	plusw1,w,c
  8204  01AC5E  0009               	tblrd		*+
  8205  01AC60  5CF5               	subwf	tablat,w,c
  8206  01AC62  0EFA               	movlw	-6
  8207  01AC64  50E3               	movf	plusw1,w,c
  8208  01AC66  0009               	tblrd		*+
  8209  01AC68  58F5               	subwfb	tablat,w,c
  8210  01AC6A  0EFB               	movlw	-5
  8211  01AC6C  50E3               	movf	plusw1,w,c
  8212  01AC6E  0009               	tblrd		*+
  8213  01AC70  58F5               	subwfb	tablat,w,c
  8214  01AC72  0EFC               	movlw	-4
  8215  01AC74  50E3               	movf	plusw1,w,c
  8216  01AC76  0009               	tblrd		*+
  8217  01AC78  58F5               	subwfb	tablat,w,c
  8218  01AC7A  B0D8               	btfsc	status,0,c
  8219  01AC7C  D020               	goto	l11135
  8220                           
  8221                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8222                           ;stkvar	_slot @ sp[(-3)+2]
  8223  01AC7E  0EFF               	movlw	-1
  8224  01AC80  50E3               	movf	plusw1,w,c
  8225  01AC82  0D08               	mullw	8
  8226  01AC84  0E04               	movlw	4
  8227  01AC86  26F3               	addwf	243,f,c
  8228  01AC88  0E00               	movlw	0
  8229  01AC8A  22F4               	addwfc	244,f,c
  8230  01AC8C  0E0D               	movlw	low _BVSOC_TABLE
  8231  01AC8E  24F3               	addwf	243,w,c
  8232  01AC90  6EF6               	movwf	tblptrl,c
  8233  01AC92  0EF9               	movlw	high _BVSOC_TABLE
  8234  01AC94  20F4               	addwfc	244,w,c
  8235  01AC96  6EF7               	movwf	tblptrh,c
  8236  01AC98                     	if	1	;There are 3 active tblptr bytes
  8237  01AC98  6AF8               	clrf	tblptru,c
  8238  01AC9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8239  01AC9C  22F8               	addwfc	tblptru,f,c
  8240  01AC9E                     	endif
  8241  01AC9E  0009               	tblrd		*+
  8242  01ACA0  006F FFD4  F00B    	movff	tablat,btemp+10
  8243  01ACA6  0009               	tblrd		*+
  8244  01ACA8  006F FFD4  F00C    	movff	tablat,btemp+11
  8245                           
  8246                           ;stkvar	_soc @ sp[(-3)+0]
  8247  01ACAE  0EFD               	movlw	-3
  8248  01ACB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8249  01ACB6  0EFE               	movlw	-2
  8250  01ACB8  0060  F033  FFE3   	movff	btemp+11,plusw1
  8251  01ACBE                     l11135:
  8252                           
  8253                           ;bsoc.c: 187:  }
  8254                           ;stkvar	_slot @ sp[(-3)+2]
  8255  01ACBE  0EFF               	movlw	-1
  8256  01ACC0  2AE3               	incf	plusw1,f,c
  8257                           
  8258                           ;stkvar	_slot @ sp[(-3)+2]
  8259  01ACC2  0EFF               	movlw	-1
  8260  01ACC4  006F FF8C  F001    	movff	plusw1,btemp
  8261  01ACCA  0E19               	movlw	25
  8262  01ACCC  6401               	cpfsgt	btemp^0,c
  8263  01ACCE  D7B9               	goto	l11131
  8264                           
  8265                           ;bsoc.c: 188:  return soc;
  8266                           ;stkvar	_soc @ sp[(-3)+0]
  8267  01ACD0  0EFD               	movlw	-3
  8268  01ACD2  006F FF8C  F001    	movff	plusw1,btemp
  8269  01ACD8  0EFE               	movlw	-2
  8270  01ACDA  006F FF8C  F002    	movff	plusw1,btemp+1
  8271                           
  8272                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8273  01ACE0  0EF9               	movlw	249
  8274  01ACE2  26E1               	addwf	fsr1l,f,c
  8275  01ACE4  0EFF               	movlw	255
  8276  01ACE6  22E2               	addwfc	fsr1h,f,c
  8277  01ACE8  0012               	return		;funcret
  8278  01ACEA                     __end_of_Volts_to_SOC:
  8279                           	opt callstack 0
  8280                           
  8281 ;; *************** function _hid_display *****************
  8282 ;; Defined at:
  8283 ;;		line 22 in file "hid.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  h               2  [STACK] PTR struct H_data
  8286 ;;		 -> H(9), 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  2  [STACK] PTR struct H_data
  8291 ;; Registers used:
  8292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8293 ;; Tracked objects:
  8294 ;;		On entry : 3F/39
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:   17
  8305 ;; This function calls:
  8306 ;;		_hid_input
  8307 ;; This function is called by:
  8308 ;;		_main
  8309 ;; This function uses a reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text18
  8313  018644                     __ptext18:
  8314                           	opt callstack 0
  8315  018644                     _hid_display:
  8316                           	opt callstack 13
  8317                           
  8318                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8319                           ;stkvar	_h @ sp[(0)+-2]
  8320                           
  8321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8322                           ;incstack = 0
  8323  018644  0EFE               	movlw	-2
  8324  018646  006F FF8F FFE6     	movff	plusw1,postinc1
  8325  01864C  006F FF8F FFE6     	movff	plusw1,postinc1
  8326  018652  EC3B  F0CE         	call	_hid_input	;wreg free
  8327                           
  8328                           ;hid.c: 26:  switch (h->h_state) {
  8329  018656  D0E6               	goto	l13653
  8330  018658                     l13627:
  8331                           
  8332                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8333                           ;stkvar	_h @ sp[(0)+-2]
  8334  018658  0EFE               	movlw	-2
  8335  01865A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8336  018660  0EFF               	movlw	-1
  8337  018662  006F FF8C  F00C    	movff	plusw1,btemp+11
  8338  018668  0E01               	movlw	1
  8339  01866A  240B               	addwf	(btemp+10)^0,w,c
  8340  01866C  6ED9               	movwf	fsr2l,c
  8341  01866E  0E00               	movlw	0
  8342  018670  200C               	addwfc	(btemp+11)^0,w,c
  8343  018672  6EDA               	movwf	fsr2h,c
  8344  018674  0E01               	movlw	1
  8345  018676  6EDF               	movwf	indf2,c
  8346                           
  8347                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8348                           ;stkvar	_h @ sp[(0)+-2]
  8349  018678  0EFE               	movlw	-2
  8350  01867A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8351  018680  0EFF               	movlw	-1
  8352  018682  006F FF8F FFDA     	movff	plusw1,fsr2h
  8353  018688  0E00               	movlw	0
  8354  01868A  6EDF               	movwf	indf2,c
  8355                           
  8356                           ;hid.c: 30:   h->wait_enter = 1;
  8357                           ;stkvar	_h @ sp[(0)+-2]
  8358  01868C  0EFE               	movlw	-2
  8359  01868E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8360  018694  0EFF               	movlw	-1
  8361  018696  006F FF8C  F00C    	movff	plusw1,btemp+11
  8362  01869C  0E04               	movlw	4
  8363  01869E  240B               	addwf	(btemp+10)^0,w,c
  8364  0186A0  6ED9               	movwf	fsr2l,c
  8365  0186A2  0E00               	movlw	0
  8366  0186A4  200C               	addwfc	(btemp+11)^0,w,c
  8367  0186A6  6EDA               	movwf	fsr2h,c
  8368  0186A8  0E01               	movlw	1
  8369  0186AA  6EDF               	movwf	indf2,c
  8370                           
  8371                           ;hid.c: 31:   h->wait_select = 1;
  8372                           ;stkvar	_h @ sp[(0)+-2]
  8373  0186AC  0EFE               	movlw	-2
  8374  0186AE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8375  0186B4  0EFF               	movlw	-1
  8376  0186B6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8377  0186BC  0E02               	movlw	2
  8378  0186BE  240B               	addwf	(btemp+10)^0,w,c
  8379  0186C0  6ED9               	movwf	fsr2l,c
  8380  0186C2  0E00               	movlw	0
  8381  0186C4  200C               	addwfc	(btemp+11)^0,w,c
  8382  0186C6  6EDA               	movwf	fsr2h,c
  8383  0186C8  0E01               	movlw	1
  8384  0186CA  6EDF               	movwf	indf2,c
  8385                           
  8386                           ;hid.c: 32:   h->wait_calib = 1;
  8387                           ;stkvar	_h @ sp[(0)+-2]
  8388  0186CC  0EFE               	movlw	-2
  8389  0186CE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8390  0186D4  0EFF               	movlw	-1
  8391  0186D6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8392  0186DC  0E06               	movlw	6
  8393  0186DE  240B               	addwf	(btemp+10)^0,w,c
  8394  0186E0  6ED9               	movwf	fsr2l,c
  8395  0186E2  0E00               	movlw	0
  8396  0186E4  200C               	addwfc	(btemp+11)^0,w,c
  8397  0186E6  6EDA               	movwf	fsr2h,c
  8398  0186E8  0E01               	movlw	1
  8399  0186EA  6EDF               	movwf	indf2,c
  8400                           
  8401                           ;hid.c: 33:   h->select_p = SW_OFF;
  8402                           ;stkvar	_h @ sp[(0)+-2]
  8403  0186EC  0EFE               	movlw	-2
  8404  0186EE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8405  0186F4  0EFF               	movlw	-1
  8406  0186F6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8407  0186FC  0E03               	movlw	3
  8408  0186FE  240B               	addwf	(btemp+10)^0,w,c
  8409  018700  6ED9               	movwf	fsr2l,c
  8410  018702  0E00               	movlw	0
  8411  018704  200C               	addwfc	(btemp+11)^0,w,c
  8412  018706  6EDA               	movwf	fsr2h,c
  8413  018708  0E00               	movlw	0
  8414  01870A  6EDF               	movwf	indf2,c
  8415                           
  8416                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8417                           ;stkvar	_h @ sp[(0)+-2]
  8418  01870C  0EFE               	movlw	-2
  8419  01870E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8420  018714  0EFF               	movlw	-1
  8421  018716  006F FF8C  F00C    	movff	plusw1,btemp+11
  8422  01871C  0E05               	movlw	5
  8423  01871E  240B               	addwf	(btemp+10)^0,w,c
  8424  018720  6ED9               	movwf	fsr2l,c
  8425  018722  0E00               	movlw	0
  8426  018724  200C               	addwfc	(btemp+11)^0,w,c
  8427  018726  6EDA               	movwf	fsr2h,c
  8428  018728  0E00               	movlw	0
  8429  01872A  6EDF               	movwf	indf2,c
  8430                           
  8431                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8432                           ;stkvar	_h @ sp[(0)+-2]
  8433  01872C  0EFE               	movlw	-2
  8434  01872E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8435  018734  0EFF               	movlw	-1
  8436  018736  006F FF8C  F00C    	movff	plusw1,btemp+11
  8437  01873C  0E07               	movlw	7
  8438  01873E  240B               	addwf	(btemp+10)^0,w,c
  8439  018740  6ED9               	movwf	fsr2l,c
  8440  018742  0E00               	movlw	0
  8441  018744  200C               	addwfc	(btemp+11)^0,w,c
  8442  018746  6EDA               	movwf	fsr2h,c
  8443  018748  0E00               	movlw	0
  8444  01874A  D06A               	goto	L4
  8445  01874C                     l13643:
  8446                           
  8447                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8448                           ;stkvar	_h @ sp[(0)+-2]
  8449  01874C  0EFE               	movlw	-2
  8450  01874E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8451  018754  0EFF               	movlw	-1
  8452  018756  006F FF8C  F00C    	movff	plusw1,btemp+11
  8453  01875C  0E02               	movlw	2
  8454  01875E  240B               	addwf	(btemp+10)^0,w,c
  8455  018760  6ED9               	movwf	fsr2l,c
  8456  018762  0E00               	movlw	0
  8457  018764  200C               	addwfc	(btemp+11)^0,w,c
  8458  018766  6EDA               	movwf	fsr2h,c
  8459  018768  50DF               	movf	indf2,w,c
  8460  01876A  A4D8               	btfss	status,2,c
  8461  01876C  D076               	goto	l2086
  8462                           
  8463                           ;stkvar	_h @ sp[(0)+-2]
  8464  01876E  0EFE               	movlw	-2
  8465  018770  006F FF8C  F00B    	movff	plusw1,btemp+10
  8466  018776  0EFF               	movlw	-1
  8467  018778  006F FF8C  F00C    	movff	plusw1,btemp+11
  8468  01877E  0E03               	movlw	3
  8469  018780  240B               	addwf	(btemp+10)^0,w,c
  8470  018782  6ED9               	movwf	fsr2l,c
  8471  018784  0E00               	movlw	0
  8472  018786  200C               	addwfc	(btemp+11)^0,w,c
  8473  018788  6EDA               	movwf	fsr2h,c
  8474  01878A  50DF               	movf	indf2,w,c
  8475  01878C  A4D8               	btfss	status,2,c
  8476  01878E  D065               	goto	l2086
  8477                           
  8478                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8479                           ;stkvar	_h @ sp[(0)+-2]
  8480  018790  0EFE               	movlw	-2
  8481  018792  006F FF8C  F00B    	movff	plusw1,btemp+10
  8482  018798  0EFF               	movlw	-1
  8483  01879A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8484  0187A0  0E08               	movlw	8
  8485  0187A2  240B               	addwf	(btemp+10)^0,w,c
  8486  0187A4  6ED9               	movwf	fsr2l,c
  8487  0187A6  0E00               	movlw	0
  8488  0187A8  200C               	addwfc	(btemp+11)^0,w,c
  8489  0187AA  6EDA               	movwf	fsr2h,c
  8490                           
  8491                           ;stkvar	_h @ sp[(0)+-2]
  8492  0187AC  0EFE               	movlw	-2
  8493  0187AE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8494  0187B4  0EFF               	movlw	-1
  8495  0187B6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8496  0187BC  0E08               	movlw	8
  8497  0187BE  240B               	addwf	(btemp+10)^0,w,c
  8498  0187C0  6EE9               	movwf	fsr0l,c
  8499  0187C2  0E00               	movlw	0
  8500  0187C4  200C               	addwfc	(btemp+11)^0,w,c
  8501  0187C6  6EEA               	movwf	fsr0h,c
  8502  0187C8  2AEF               	incf	indf0,f,c
  8503  0187CA  50EF               	movf	indf0,w,c
  8504  0187CC  0B03               	andlw	3
  8505  0187CE  6EDF               	movwf	indf2,c
  8506                           
  8507                           ;hid.c: 41:    h->hid_display = h->sequence;
  8508                           ;stkvar	_h @ sp[(0)+-2]
  8509  0187D0  0EFE               	movlw	-2
  8510  0187D2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8511  0187D8  0EFF               	movlw	-1
  8512  0187DA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8513  0187E0  0E08               	movlw	8
  8514  0187E2  240B               	addwf	(btemp+10)^0,w,c
  8515  0187E4  6ED9               	movwf	fsr2l,c
  8516  0187E6  0E00               	movlw	0
  8517  0187E8  200C               	addwfc	(btemp+11)^0,w,c
  8518  0187EA  6EDA               	movwf	fsr2h,c
  8519                           
  8520                           ;stkvar	_h @ sp[(0)+-2]
  8521  0187EC  0EFE               	movlw	-2
  8522  0187EE  006F FF8F FFE9     	movff	plusw1,fsr0l
  8523  0187F4  0EFF               	movlw	-1
  8524  0187F6  006F FF8F FFEA     	movff	plusw1,fsr0h
  8525  0187FC  006F FF7F FFEF     	movff	indf2,indf0
  8526                           
  8527                           ;hid.c: 42:    h->wait_select = 1;
  8528                           ;stkvar	_h @ sp[(0)+-2]
  8529  018802  0EFE               	movlw	-2
  8530  018804  006F FF8C  F00B    	movff	plusw1,btemp+10
  8531  01880A  0EFF               	movlw	-1
  8532  01880C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8533  018812  0E02               	movlw	2
  8534  018814  240B               	addwf	(btemp+10)^0,w,c
  8535  018816  6ED9               	movwf	fsr2l,c
  8536  018818  0E00               	movlw	0
  8537  01881A  200C               	addwfc	(btemp+11)^0,w,c
  8538  01881C  6EDA               	movwf	fsr2h,c
  8539  01881E  0E01               	movlw	1
  8540  018820                     L4:
  8541  018820  6EDF               	movwf	indf2,c
  8542  018822  D01B               	goto	l2086
  8543  018824                     l13653:
  8544                           
  8545                           ;stkvar	_h @ sp[(0)+-2]
  8546  018824  0EFE               	movlw	-2
  8547  018826  006F FF8C  F00B    	movff	plusw1,btemp+10
  8548  01882C  0EFF               	movlw	-1
  8549  01882E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8550  018834  0E01               	movlw	1
  8551  018836  240B               	addwf	(btemp+10)^0,w,c
  8552  018838  6ED9               	movwf	fsr2l,c
  8553  01883A  0E00               	movlw	0
  8554  01883C  200C               	addwfc	(btemp+11)^0,w,c
  8555  01883E  6EDA               	movwf	fsr2h,c
  8556  018840  50DF               	movf	indf2,w,c
  8557  018842  6E0B               	movwf	(btemp+10)^0,c
  8558  018844  6A0C               	clrf	(btemp+11)^0,c
  8559                           
  8560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8561                           ; Switch size 1, requested type "simple"
  8562                           ; Number of cases is 1, Range of values is 0 to 0
  8563                           ; switch strategies available:
  8564                           ; Name         Instructions Cycles
  8565                           ; simple_byte            4     3 (average)
  8566                           ;	Chosen strategy is simple_byte
  8567  018846  500C               	movf	(btemp+11)^0,w,c
  8568  018848  0A00               	xorlw	0	; case 0
  8569  01884A  A4D8               	btfss	status,2,c
  8570  01884C  D77F               	goto	l13643
  8571                           
  8572                           ; Switch size 1, requested type "simple"
  8573                           ; Number of cases is 2, Range of values is 0 to 1
  8574                           ; switch strategies available:
  8575                           ; Name         Instructions Cycles
  8576                           ; simple_byte            7     4 (average)
  8577                           ;	Chosen strategy is simple_byte
  8578  01884E  500B               	movf	(btemp+10)^0,w,c
  8579  018850  0A00               	xorlw	0	; case 0
  8580  018852  B4D8               	btfsc	status,2,c
  8581  018854  D701               	goto	l13627
  8582  018856  0A01               	xorlw	1	; case 1
  8583  018858  D779               	goto	l13643
  8584  01885A                     l2086:
  8585                           
  8586                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8587  01885A  52E5               	movf	postdec1,f,c
  8588  01885C  52E5               	movf	postdec1,f,c
  8589  01885E  0012               	return		;funcret
  8590  018860                     __end_of_hid_display:
  8591                           	opt callstack 0
  8592                           
  8593 ;; *************** function _hid_input *****************
  8594 ;; Defined at:
  8595 ;;		line 3 in file "hid.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  h               2  [STACK] PTR struct H_data
  8598 ;;		 -> H(9), 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;		None
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  2  [STACK] PTR struct H_data
  8603 ;; Registers used:
  8604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/39
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8614 ;;Total ram usage:        0 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:   16
  8617 ;; This function calls:
  8618 ;;		_get_switch
  8619 ;; This function is called by:
  8620 ;;		_hid_display
  8621 ;; This function uses a reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text19
  8625  019C76                     __ptext19:
  8626                           	opt callstack 0
  8627  019C76                     _hid_input:
  8628                           	opt callstack 13
  8629                           
  8630                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8631                           
  8632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8633                           ;incstack = 0
  8634  019C76  0E02               	movlw	2
  8635  019C78  6EE6               	movwf	postinc1,c
  8636  019C7A  EC53  F0E2         	call	_get_switch	;wreg free
  8637  019C7E  5001               	movf	btemp^0,w,c
  8638  019C80  B4D8               	btfsc	status,2,c
  8639  019C82  D02C               	goto	l13401
  8640                           
  8641                           ;hid.c: 6:   h->wait_select = 0;
  8642                           ;stkvar	_h @ sp[(0)+-2]
  8643  019C84  0EFE               	movlw	-2
  8644  019C86  006F FF8C  F00B    	movff	plusw1,btemp+10
  8645  019C8C  0EFF               	movlw	-1
  8646  019C8E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8647  019C94  0E02               	movlw	2
  8648  019C96  240B               	addwf	(btemp+10)^0,w,c
  8649  019C98  6ED9               	movwf	fsr2l,c
  8650  019C9A  0E00               	movlw	0
  8651  019C9C  200C               	addwfc	(btemp+11)^0,w,c
  8652  019C9E  6EDA               	movwf	fsr2h,c
  8653  019CA0  0E00               	movlw	0
  8654  019CA2  6EDF               	movwf	indf2,c
  8655                           
  8656                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8657  019CA4  0E02               	movlw	2
  8658  019CA6  6EE6               	movwf	postinc1,c
  8659  019CA8  EC53  F0E2         	call	_get_switch	;wreg free
  8660  019CAC  5001               	movf	btemp^0,w,c
  8661  019CAE  B4D8               	btfsc	status,2,c
  8662  019CB0  D003               	goto	u12790
  8663  019CB2  6A0C               	clrf	(btemp+11)^0,c
  8664  019CB4  2A0C               	incf	(btemp+11)^0,f,c
  8665  019CB6  D001               	goto	u12808
  8666  019CB8                     u12790:
  8667  019CB8  6A0C               	clrf	(btemp+11)^0,c
  8668  019CBA                     u12808:
  8669                           
  8670                           ;stkvar	_h @ sp[(0)+-2]
  8671  019CBA  0EFE               	movlw	-2
  8672  019CBC  006F FF8C  F009    	movff	plusw1,btemp+8
  8673  019CC2  0EFF               	movlw	-1
  8674  019CC4  006F FF8C  F00A    	movff	plusw1,btemp+9
  8675  019CCA  0E03               	movlw	3
  8676  019CCC  2409               	addwf	(btemp+8)^0,w,c
  8677  019CCE  6ED9               	movwf	fsr2l,c
  8678  019CD0  0E00               	movlw	0
  8679  019CD2  200A               	addwfc	(btemp+9)^0,w,c
  8680  019CD4  6EDA               	movwf	fsr2h,c
  8681  019CD6  0060  F033  FFDF   	movff	btemp+11,indf2
  8682  019CDC                     l13401:
  8683                           
  8684                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8685  019CDC  0E03               	movlw	3
  8686  019CDE  6EE6               	movwf	postinc1,c
  8687  019CE0  EC53  F0E2         	call	_get_switch	;wreg free
  8688  019CE4  5001               	movf	btemp^0,w,c
  8689  019CE6  B4D8               	btfsc	status,2,c
  8690  019CE8  D02C               	goto	l13407
  8691                           
  8692                           ;hid.c: 11:   h->wait_enter = 0;
  8693                           ;stkvar	_h @ sp[(0)+-2]
  8694  019CEA  0EFE               	movlw	-2
  8695  019CEC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8696  019CF2  0EFF               	movlw	-1
  8697  019CF4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8698  019CFA  0E04               	movlw	4
  8699  019CFC  240B               	addwf	(btemp+10)^0,w,c
  8700  019CFE  6ED9               	movwf	fsr2l,c
  8701  019D00  0E00               	movlw	0
  8702  019D02  200C               	addwfc	(btemp+11)^0,w,c
  8703  019D04  6EDA               	movwf	fsr2h,c
  8704  019D06  0E00               	movlw	0
  8705  019D08  6EDF               	movwf	indf2,c
  8706                           
  8707                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8708  019D0A  0E03               	movlw	3
  8709  019D0C  6EE6               	movwf	postinc1,c
  8710  019D0E  EC53  F0E2         	call	_get_switch	;wreg free
  8711  019D12  5001               	movf	btemp^0,w,c
  8712  019D14  B4D8               	btfsc	status,2,c
  8713  019D16  D003               	goto	u12820
  8714  019D18  6A0C               	clrf	(btemp+11)^0,c
  8715  019D1A  2A0C               	incf	(btemp+11)^0,f,c
  8716  019D1C  D001               	goto	u12838
  8717  019D1E                     u12820:
  8718  019D1E  6A0C               	clrf	(btemp+11)^0,c
  8719  019D20                     u12838:
  8720                           
  8721                           ;stkvar	_h @ sp[(0)+-2]
  8722  019D20  0EFE               	movlw	-2
  8723  019D22  006F FF8C  F009    	movff	plusw1,btemp+8
  8724  019D28  0EFF               	movlw	-1
  8725  019D2A  006F FF8C  F00A    	movff	plusw1,btemp+9
  8726  019D30  0E05               	movlw	5
  8727  019D32  2409               	addwf	(btemp+8)^0,w,c
  8728  019D34  6ED9               	movwf	fsr2l,c
  8729  019D36  0E00               	movlw	0
  8730  019D38  200A               	addwfc	(btemp+9)^0,w,c
  8731  019D3A  6EDA               	movwf	fsr2h,c
  8732  019D3C  0060  F033  FFDF   	movff	btemp+11,indf2
  8733  019D42                     l13407:
  8734                           
  8735                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  8736  019D42  0E04               	movlw	4
  8737  019D44  6EE6               	movwf	postinc1,c
  8738  019D46  EC53  F0E2         	call	_get_switch	;wreg free
  8739  019D4A  5001               	movf	btemp^0,w,c
  8740  019D4C  B4D8               	btfsc	status,2,c
  8741  019D4E  D02C               	goto	l2077
  8742                           
  8743                           ;hid.c: 16:   h->wait_calib = 0;
  8744                           ;stkvar	_h @ sp[(0)+-2]
  8745  019D50  0EFE               	movlw	-2
  8746  019D52  006F FF8C  F00B    	movff	plusw1,btemp+10
  8747  019D58  0EFF               	movlw	-1
  8748  019D5A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8749  019D60  0E06               	movlw	6
  8750  019D62  240B               	addwf	(btemp+10)^0,w,c
  8751  019D64  6ED9               	movwf	fsr2l,c
  8752  019D66  0E00               	movlw	0
  8753  019D68  200C               	addwfc	(btemp+11)^0,w,c
  8754  019D6A  6EDA               	movwf	fsr2h,c
  8755  019D6C  0E00               	movlw	0
  8756  019D6E  6EDF               	movwf	indf2,c
  8757                           
  8758                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  8759  019D70  0E04               	movlw	4
  8760  019D72  6EE6               	movwf	postinc1,c
  8761  019D74  EC53  F0E2         	call	_get_switch	;wreg free
  8762  019D78  5001               	movf	btemp^0,w,c
  8763  019D7A  B4D8               	btfsc	status,2,c
  8764  019D7C  D003               	goto	u12850
  8765  019D7E  6A0C               	clrf	(btemp+11)^0,c
  8766  019D80  2A0C               	incf	(btemp+11)^0,f,c
  8767  019D82  D001               	goto	u12868
  8768  019D84                     u12850:
  8769  019D84  6A0C               	clrf	(btemp+11)^0,c
  8770  019D86                     u12868:
  8771                           
  8772                           ;stkvar	_h @ sp[(0)+-2]
  8773  019D86  0EFE               	movlw	-2
  8774  019D88  006F FF8C  F009    	movff	plusw1,btemp+8
  8775  019D8E  0EFF               	movlw	-1
  8776  019D90  006F FF8C  F00A    	movff	plusw1,btemp+9
  8777  019D96  0E07               	movlw	7
  8778  019D98  2409               	addwf	(btemp+8)^0,w,c
  8779  019D9A  6ED9               	movwf	fsr2l,c
  8780  019D9C  0E00               	movlw	0
  8781  019D9E  200A               	addwfc	(btemp+9)^0,w,c
  8782  019DA0  6EDA               	movwf	fsr2h,c
  8783  019DA2  0060  F033  FFDF   	movff	btemp+11,indf2
  8784  019DA8                     l2077:
  8785                           
  8786                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8787  019DA8  52E5               	movf	postdec1,f,c
  8788  019DAA  52E5               	movf	postdec1,f,c
  8789  019DAC  0012               	return		;funcret
  8790  019DAE                     __end_of_hid_input:
  8791                           	opt callstack 0
  8792                           
  8793 ;; *************** function _esr_check *****************
  8794 ;; Defined at:
  8795 ;;		line 197 in file "bsoc.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  fsm             1  [STACK] const unsigned char 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  4  [STACK] float 
  8802 ;; Registers used:
  8803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:   18
  8816 ;; This function calls:
  8817 ;;		_StartTimer
  8818 ;;		_TimerDone
  8819 ;;		___fldiv
  8820 ;;		___flsub
  8821 ;;		_conv_raw_result
  8822 ;;		_fabsf
  8823 ;;		_set_load_relay_one
  8824 ;;		_set_load_relay_two
  8825 ;;		_update_adc_result
  8826 ;; This function is called by:
  8827 ;;		_main
  8828 ;; This function uses a reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text20
  8832  017514                     __ptext20:
  8833                           	opt callstack 0
  8834  017514                     _esr_check:
  8835                           	opt callstack 12
  8836                           
  8837                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  8838                           ;stkvar	_fsm @ sp[(0)+-1]
  8839                           
  8840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8841                           ;incstack = 0
  8842  017514  0EFF               	movlw	-1
  8843  017516  50E3               	movf	plusw1,w,c
  8844  017518  B4D8               	btfsc	status,2,c
  8845  01751A  D149               	goto	l11471
  8846                           
  8847                           ;bsoc.c: 202:   esr_state = 0;
  8848  01751C  0100               	movlb	0	; () banked
  8849  01751E  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;bsoc.c: 203:   return -10.0;
  8853  017520  0E00               	movlw	0
  8854  017522  6E01               	movwf	btemp^0,c
  8855  017524  0E00               	movlw	0
  8856  017526  6E02               	movwf	(btemp+1)^0,c
  8857  017528  0E20               	movlw	32
  8858  01752A  6E03               	movwf	(btemp+2)^0,c
  8859  01752C  0EC1               	movlw	193
  8860  01752E  D15B               	goto	L5
  8861  017530                     l11403:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  8865  017530  0E10               	movlw	16
  8866  017532  6EE6               	movwf	postinc1,c
  8867  017534  0E27               	movlw	39
  8868  017536  6EE6               	movwf	postinc1,c
  8869  017538  0E0C               	movlw	12
  8870  01753A  6EE6               	movwf	postinc1,c
  8871  01753C  EC6A  F0E0         	call	_StartTimer	;wreg free
  8872  017540                     l11405:
  8873                           
  8874                           ;bsoc.c: 209:   esr_state++;
  8875  017540  0100               	movlb	0	; () banked
  8876  017542  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8877                           
  8878                           ;bsoc.c: 210:   break;
  8879  017544  D149               	goto	l11473
  8880  017546                     l11407:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;bsoc.c: 215:   set_load_relay_one(0);
  8884  017546  0E00               	movlw	0
  8885  017548  6EE6               	movwf	postinc1,c
  8886  01754A  EC51  F0E5         	call	_set_load_relay_one	;wreg free
  8887                           
  8888                           ;bsoc.c: 216:   set_load_relay_two(0);
  8889  01754E  0E00               	movlw	0
  8890  017550  6EE6               	movwf	postinc1,c
  8891  017552  EC49  F0E5         	call	_set_load_relay_two	;wreg free
  8892                           
  8893                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  8894  017556  0E0C               	movlw	12
  8895  017558  6EE6               	movwf	postinc1,c
  8896  01755A  ECBF  F0E2         	call	_TimerDone	;wreg free
  8897  01755E  5001               	movf	btemp^0,w,c
  8898  017560  B4D8               	btfsc	status,2,c
  8899  017562  D009               	goto	l11413
  8900                           
  8901                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  8902  017564  0E10               	movlw	16
  8903  017566  6EE6               	movwf	postinc1,c
  8904  017568  0E27               	movlw	39
  8905  01756A  6EE6               	movwf	postinc1,c
  8906  01756C  0E0C               	movlw	12
  8907  01756E  6EE6               	movwf	postinc1,c
  8908  017570  EC6A  F0E0         	call	_StartTimer	;wreg free
  8909                           
  8910                           ;bsoc.c: 219:   } else {
  8911  017574  D006               	goto	l11417
  8912  017576                     l11413:
  8913                           
  8914                           ;bsoc.c: 220:    return -2.0;
  8915  017576  0E00               	movlw	0
  8916  017578  6E01               	movwf	btemp^0,c
  8917  01757A  0E00               	movlw	0
  8918  01757C  6E02               	movwf	(btemp+1)^0,c
  8919  01757E  0E00               	movlw	0
  8920  017580  D066               	goto	L7
  8921  017582                     l11417:
  8922                           
  8923                           ;bsoc.c: 225:   update_adc_result();
  8924  017582  ECE9  F0E0         	call	_update_adc_result	;wreg free
  8925                           
  8926                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8927  017586  0E00               	movlw	0
  8928  017588  6EE6               	movwf	postinc1,c
  8929  01758A  0E04               	movlw	4
  8930  01758C  6EE6               	movwf	postinc1,c
  8931  01758E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8932  017592  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8933  017598  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8934  01759E  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8935  0175A4  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8936  0175AA  D7CA               	goto	l11405
  8937  0175AC                     l11423:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;bsoc.c: 230:   set_load_relay_one(1);
  8941  0175AC  0E01               	movlw	1
  8942  0175AE  6EE6               	movwf	postinc1,c
  8943  0175B0  EC51  F0E5         	call	_set_load_relay_one	;wreg free
  8944                           
  8945                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  8946  0175B4  0E0C               	movlw	12
  8947  0175B6  6EE6               	movwf	postinc1,c
  8948  0175B8  ECBF  F0E2         	call	_TimerDone	;wreg free
  8949  0175BC  5001               	movf	btemp^0,w,c
  8950  0175BE  B4D8               	btfsc	status,2,c
  8951  0175C0  D009               	goto	l11429
  8952                           
  8953                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  8954  0175C2  0E10               	movlw	16
  8955  0175C4  6EE6               	movwf	postinc1,c
  8956  0175C6  0E27               	movlw	39
  8957  0175C8  6EE6               	movwf	postinc1,c
  8958  0175CA  0E0C               	movlw	12
  8959  0175CC  6EE6               	movwf	postinc1,c
  8960  0175CE  EC6A  F0E0         	call	_StartTimer	;wreg free
  8961                           
  8962                           ;bsoc.c: 233:   } else {
  8963  0175D2  D006               	goto	l11433
  8964  0175D4                     l11429:
  8965                           
  8966                           ;bsoc.c: 234:    return -3.0;
  8967  0175D4  0E00               	movlw	0
  8968  0175D6  6E01               	movwf	btemp^0,c
  8969  0175D8  0E00               	movlw	0
  8970  0175DA  6E02               	movwf	(btemp+1)^0,c
  8971  0175DC  0E40               	movlw	64
  8972  0175DE  D037               	goto	L7
  8973  0175E0                     l11433:
  8974                           
  8975                           ;bsoc.c: 237:   update_adc_result();
  8976  0175E0  ECE9  F0E0         	call	_update_adc_result	;wreg free
  8977                           
  8978                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8979  0175E4  0E00               	movlw	0
  8980  0175E6  6EE6               	movwf	postinc1,c
  8981  0175E8  0E04               	movlw	4
  8982  0175EA  6EE6               	movwf	postinc1,c
  8983  0175EC  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8984  0175F0  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8985  0175F6  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8986  0175FC  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8987  017602  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8988                           
  8989                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8990  017608  0E00               	movlw	0
  8991  01760A  6EE6               	movwf	postinc1,c
  8992  01760C  0E00               	movlw	0
  8993  01760E  6EE6               	movwf	postinc1,c
  8994  017610  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8995  017614  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8996  01761A  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8997  017620  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8998  017626  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8999  01762C  D789               	goto	l11405
  9000  01762E                     l11441:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;bsoc.c: 243:   set_load_relay_two(1);
  9004  01762E  0E01               	movlw	1
  9005  017630  6EE6               	movwf	postinc1,c
  9006  017632  EC49  F0E5         	call	_set_load_relay_two	;wreg free
  9007                           
  9008                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9009  017636  0E0C               	movlw	12
  9010  017638  6EE6               	movwf	postinc1,c
  9011  01763A  ECBF  F0E2         	call	_TimerDone	;wreg free
  9012  01763E  5001               	movf	btemp^0,w,c
  9013  017640  A4D8               	btfss	status,2,c
  9014  017642  D008               	goto	l11449
  9015                           
  9016                           ;bsoc.c: 245:    return -4.0;
  9017  017644  0E00               	movlw	0
  9018  017646  6E01               	movwf	btemp^0,c
  9019  017648  0E00               	movlw	0
  9020  01764A  6E02               	movwf	(btemp+1)^0,c
  9021  01764C  0E80               	movlw	128
  9022  01764E                     L7:
  9023  01764E  6E03               	movwf	(btemp+2)^0,c
  9024  017650  0EC0               	movlw	192
  9025  017652  D0C9               	goto	L5
  9026  017654                     l11449:
  9027                           
  9028                           ;bsoc.c: 247:   update_adc_result();
  9029  017654  ECE9  F0E0         	call	_update_adc_result	;wreg free
  9030                           
  9031                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9032  017658  0E00               	movlw	0
  9033  01765A  6EE6               	movwf	postinc1,c
  9034  01765C  0E04               	movlw	4
  9035  01765E  6EE6               	movwf	postinc1,c
  9036  017660  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9037  017664  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  9038  01766A  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  9039  017670  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  9040  017676  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  9041                           
  9042                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9043  01767C  0E00               	movlw	0
  9044  01767E  6EE6               	movwf	postinc1,c
  9045  017680  0E00               	movlw	0
  9046  017682  6EE6               	movwf	postinc1,c
  9047  017684  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9048  017688  0060  F004  F811   	movff	btemp,_C+274	;volatile
  9049  01768E  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  9050  017694  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  9051  01769A  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  9052                           
  9053                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9054  0176A0  EE22  F011         	lfsr	2,_C+274	;volatile
  9055  0176A4  006F FF7B FFE6     	movff	postinc2,postinc1
  9056  0176AA  006F FF7B FFE6     	movff	postinc2,postinc1
  9057  0176B0  006F FF7B FFE6     	movff	postinc2,postinc1
  9058  0176B6  006F FF7B FFE6     	movff	postinc2,postinc1
  9059  0176BC  EE22  F00D         	lfsr	2,_C+270	;volatile
  9060  0176C0  006F FF7B FFE6     	movff	postinc2,postinc1
  9061  0176C6  006F FF7B FFE6     	movff	postinc2,postinc1
  9062  0176CC  006F FF7B FFE6     	movff	postinc2,postinc1
  9063  0176D2  006F FF7B FFE6     	movff	postinc2,postinc1
  9064  0176D8  ECC4  F0DF         	call	___flsub	;wreg free
  9065  0176DC  0060  F007  FFE6   	movff	btemp,postinc1
  9066  0176E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9067  0176E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9068  0176EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  9069  0176F4  EE22  F01D         	lfsr	2,_C+286	;volatile
  9070  0176F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9071  0176FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9072  017704  006F FF7B FFE6     	movff	postinc2,postinc1
  9073  01770A  006F FF7B FFE6     	movff	postinc2,postinc1
  9074  017710  EE22  F019         	lfsr	2,_C+282	;volatile
  9075  017714  006F FF7B FFE6     	movff	postinc2,postinc1
  9076  01771A  006F FF7B FFE6     	movff	postinc2,postinc1
  9077  017720  006F FF7B FFE6     	movff	postinc2,postinc1
  9078  017726  006F FF7B FFE6     	movff	postinc2,postinc1
  9079  01772C  ECC4  F0DF         	call	___flsub	;wreg free
  9080  017730  0060  F007  FFE6   	movff	btemp,postinc1
  9081  017736  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9082  01773C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9083  017742  0060  F013  FFE6   	movff	btemp+3,postinc1
  9084  017748  EC13  F0A7         	call	___fldiv	;wreg free
  9085  01774C  0060  F007  FFE6   	movff	btemp,postinc1
  9086  017752  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9087  017758  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9088  01775E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9089  017764  EC2C  F0D7         	call	_fabsf	;wreg free
  9090  017768  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9091  01776E  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9092  017774  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9093  01777A  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9094                           
  9095                           ;bsoc.c: 252:   set_load_relay_one(0);
  9096  017780  0E00               	movlw	0
  9097  017782  6EE6               	movwf	postinc1,c
  9098  017784  EC51  F0E5         	call	_set_load_relay_one	;wreg free
  9099                           
  9100                           ;bsoc.c: 253:   set_load_relay_two(0);
  9101  017788  0E00               	movlw	0
  9102  01778A  6EE6               	movwf	postinc1,c
  9103  01778C  EC49  F0E5         	call	_set_load_relay_two	;wreg free
  9104                           
  9105                           ;bsoc.c: 254:   esr_state = 0;
  9106  017790  0100               	movlb	0	; () banked
  9107  017792  6BA4               	clrf	esr_check@esr_state& (0+255),b
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;bsoc.c: 255:   return C.esr;
  9111  017794  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9112  01779A  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9113  0177A0  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9114  0177A6  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9115  0177AC  D01D               	goto	l2202
  9116  0177AE                     l11471:
  9117  0177AE  0100               	movlb	0	; () banked
  9118  0177B0  51A4               	movf	esr_check@esr_state& (0+255),w,b
  9119  0177B2  6E0B               	movwf	(btemp+10)^0,c
  9120  0177B4  6A0C               	clrf	(btemp+11)^0,c
  9121                           
  9122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9123                           ; Switch size 1, requested type "simple"
  9124                           ; Number of cases is 1, Range of values is 0 to 0
  9125                           ; switch strategies available:
  9126                           ; Name         Instructions Cycles
  9127                           ; simple_byte            4     3 (average)
  9128                           ;	Chosen strategy is simple_byte
  9129  0177B6  500C               	movf	(btemp+11)^0,w,c
  9130  0177B8  0A00               	xorlw	0	; case 0
  9131  0177BA  A4D8               	btfss	status,2,c
  9132  0177BC  D00D               	goto	l11473
  9133                           
  9134                           ; BSR set to: 0
  9135                           ; Switch size 1, requested type "simple"
  9136                           ; Number of cases is 4, Range of values is 0 to 3
  9137                           ; switch strategies available:
  9138                           ; Name         Instructions Cycles
  9139                           ; simple_byte           13     7 (average)
  9140                           ;	Chosen strategy is simple_byte
  9141  0177BE  500B               	movf	(btemp+10)^0,w,c
  9142  0177C0  0A00               	xorlw	0	; case 0
  9143  0177C2  B4D8               	btfsc	status,2,c
  9144  0177C4  D6B5               	goto	l11403
  9145  0177C6  0A01               	xorlw	1	; case 1
  9146  0177C8  B4D8               	btfsc	status,2,c
  9147  0177CA  D6BD               	goto	l11407
  9148  0177CC  0A03               	xorlw	3	; case 2
  9149  0177CE  B4D8               	btfsc	status,2,c
  9150  0177D0  D6ED               	goto	l11423
  9151  0177D2  0A01               	xorlw	1	; case 3
  9152  0177D4  B4D8               	btfsc	status,2,c
  9153  0177D6  D72B               	goto	l11441
  9154  0177D8                     l11473:
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;bsoc.c: 260:  return -1.0;
  9158  0177D8  0E00               	movlw	0
  9159  0177DA  6E01               	movwf	btemp^0,c
  9160  0177DC  0E00               	movlw	0
  9161  0177DE  6E02               	movwf	(btemp+1)^0,c
  9162  0177E0  0E80               	movlw	128
  9163  0177E2  6E03               	movwf	(btemp+2)^0,c
  9164  0177E4  0EBF               	movlw	191
  9165  0177E6                     L5:
  9166  0177E6  6E04               	movwf	(btemp+3)^0,c
  9167  0177E8                     l2202:
  9168                           
  9169                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9170  0177E8  52E5               	movf	postdec1,f,c
  9171  0177EA  0012               	return		;funcret
  9172  0177EC                     __end_of_esr_check:
  9173                           	opt callstack 0
  9174                           
  9175 ;; *************** function _update_adc_result *****************
  9176 ;; Defined at:
  9177 ;;		line 99 in file "daq.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1  [STACK] _Bool 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:   17
  9198 ;; This function calls:
  9199 ;;		_StartTimer
  9200 ;;		_TimerDone
  9201 ;;		_check_adc_scan
  9202 ;;		_clear_adc_scan
  9203 ;;		_start_adc_scan
  9204 ;; This function is called by:
  9205 ;;		_esr_check
  9206 ;; This function uses a reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text21
  9210  01C1D2                     __ptext21:
  9211                           	opt callstack 0
  9212  01C1D2                     _update_adc_result:
  9213                           	opt callstack 12
  9214                           
  9215                           ;daq.c: 101:  if (R.done) {
  9216                           
  9217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9218                           ;incstack = 0
  9219  01C1D2  0100               	movlb	0	; () banked
  9220  01C1D4  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9221  01C1D6  B4D8               	btfsc	status,2,c
  9222  01C1D8  0012               	return	
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;daq.c: 102:   clear_adc_scan();
  9226  01C1DA  ECBD  F0E5         	call	_clear_adc_scan	;wreg free
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;daq.c: 103:   start_adc_scan();
  9230  01C1DE  EC03  F0DD         	call	_start_adc_scan	;wreg free
  9231                           
  9232                           ;daq.c: 104:   StartTimer(TMR_ADC, 200);
  9233  01C1E2  0EC8               	movlw	200
  9234  01C1E4  6EE6               	movwf	postinc1,c
  9235  01C1E6  0E00               	movlw	0
  9236  01C1E8  6EE6               	movwf	postinc1,c
  9237  01C1EA  0E01               	movlw	1
  9238  01C1EC  6EE6               	movwf	postinc1,c
  9239  01C1EE  EC6A  F0E0         	call	_StartTimer	;wreg free
  9240  01C1F2                     l10919:
  9241  01C1F2  0E01               	movlw	1
  9242  01C1F4  6EE6               	movwf	postinc1,c
  9243  01C1F6  ECBF  F0E2         	call	_TimerDone	;wreg free
  9244  01C1FA  5001               	movf	btemp^0,w,c
  9245  01C1FC  A4D8               	btfss	status,2,c
  9246  01C1FE  0012               	return	
  9247  01C200  ECAD  F0E5         	call	_check_adc_scan	;wreg free
  9248  01C204  5001               	movf	btemp^0,w,c
  9249  01C206  A4D8               	btfss	status,2,c
  9250  01C208  0012               	return	
  9251  01C20A  D7F3               	goto	l10919
  9252  01C20C                     __end_of_update_adc_result:
  9253                           	opt callstack 0
  9254                           
  9255 ;; *************** function _start_adc_scan *****************
  9256 ;; Defined at:
  9257 ;;		line 60 in file "daq.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1  [STACK] _Bool 
  9264 ;; Registers used:
  9265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 1/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:   16
  9278 ;; This function calls:
  9279 ;;		_ADCC_DischargeSampleCapacitor
  9280 ;;		_ADCC_SetADIInterruptHandler
  9281 ;;		_ADCC_SetADTIInterruptHandler
  9282 ;;		_ADCC_StartConversion
  9283 ;; This function is called by:
  9284 ;;		_main
  9285 ;;		_update_adc_result
  9286 ;; This function uses a reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text22
  9290  01BA06                     __ptext22:
  9291                           	opt callstack 0
  9292  01BA06                     _start_adc_scan:
  9293                           	opt callstack 14
  9294                           
  9295                           ;daq.c: 62:  if (R.done)
  9296                           
  9297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9298                           ;incstack = 0
  9299  01BA06  0100               	movlb	0	; () banked
  9300  01BA08  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9301  01BA0A  A4D8               	btfss	status,2,c
  9302  01BA0C  0012               	return	
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;daq.c: 65:  R.scan_index = 0;
  9306  01BA0E  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;daq.c: 66:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9310  01BA10  013A               	movlb	58	; () banked
  9311  01BA12  5140               	movf	64,w,b	;volatile
  9312  01BA14  006E F940  F001    	movff	14928,btemp	;volatile
  9313  01BA1A  6A02               	clrf	(btemp+1)^0,c
  9314  01BA1C  0060  F004  F002   	movff	btemp,btemp+1
  9315  01BA22  6A01               	clrf	btemp^0,c
  9316  01BA24  2601               	addwf	btemp^0,f,c
  9317  01BA26  0E00               	movlw	0
  9318  01BA28  2202               	addwfc	(btemp+1)^0,f,c
  9319  01BA2A  0E77               	movlw	119
  9320  01BA2C  1401               	andwf	btemp^0,w,c
  9321  01BA2E  0100               	movlb	0	; () banked
  9322  01BA30  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9323  01BA32  0E3C               	movlw	60
  9324  01BA34  1402               	andwf	(btemp+1)^0,w,c
  9325  01BA36  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;daq.c: 67:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9329  01BA38  0EA2               	movlw	low _adc_int_handler
  9330  01BA3A  6EE6               	movwf	postinc1,c
  9331  01BA3C  0ECB               	movlw	high _adc_int_handler
  9332  01BA3E  6EE6               	movwf	postinc1,c
  9333  01BA40  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9334  01BA42  6EE6               	movwf	postinc1,c
  9335  01BA44  EC87  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9336                           
  9337                           ;daq.c: 68:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9338  01BA48  0E18               	movlw	low _adc_int_t_handler
  9339  01BA4A  6EE6               	movwf	postinc1,c
  9340  01BA4C  0EB6               	movlw	high _adc_int_t_handler
  9341  01BA4E  6EE6               	movwf	postinc1,c
  9342  01BA50  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9343  01BA52  6EE6               	movwf	postinc1,c
  9344  01BA54  EC73  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9345                           
  9346                           ;daq.c: 69:  ADCC_DischargeSampleCapacitor();
  9347  01BA58  ECA9  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9348                           
  9349                           ; BSR set to: 62
  9350                           ;daq.c: 70:  ADCC_StartConversion(R.scan_index & 0xf);
  9351  01BA5C  0100               	movlb	0	; () banked
  9352  01BA5E  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9353  01BA60  0B0F               	andlw	15
  9354  01BA62  6EE6               	movwf	postinc1,c
  9355  01BA64  EC40  F0E5         	call	_ADCC_StartConversion	;wreg free
  9356                           
  9357                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9358  01BA68  0012               	return		;funcret
  9359  01BA6A                     __end_of_start_adc_scan:
  9360                           	opt callstack 0
  9361                           
  9362 ;; *************** function _ADCC_StartConversion *****************
  9363 ;; Defined at:
  9364 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  channel         1  [STACK] enum E16136
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1  [STACK] void 
  9371 ;; Registers used:
  9372 ;;		fsr1l, fsr1h
  9373 ;; Tracked objects:
  9374 ;;		On entry : 3F/0
  9375 ;;		On exit  : 3F/3E
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9382 ;;Total ram usage:        0 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; Hardware stack levels required when called:   15
  9385 ;; This function calls:
  9386 ;;		Nothing
  9387 ;; This function is called by:
  9388 ;;		_start_adc_scan
  9389 ;;		_adc_int_t_handler
  9390 ;; This function uses a reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text23
  9394  01CA80                     __ptext23:
  9395                           	opt callstack 0
  9396  01CA80                     _ADCC_StartConversion:
  9397                           	opt callstack 0
  9398                           
  9399                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9400                           ;stkvar	_channel @ sp[(0)+-1]
  9401                           
  9402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9403                           ;incstack = 0
  9404 ;; hardware stack exceeded
  9405  01CA80  0EFF               	movlw	-1
  9406  01CA82  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9407                           
  9408                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9409  01CA88  013E               	movlb	62	; () banked
  9410  01CA8A  8FF8               	bsf	248,7,b	;volatile
  9411                           
  9412                           ; BSR set to: 62
  9413                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9414  01CA8C  81F8               	bsf	248,0,b	;volatile
  9415                           
  9416                           ; BSR set to: 62
  9417                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9418  01CA8E  52E5               	movf	postdec1,f,c
  9419  01CA90  0012               	return		;funcret
  9420  01CA92                     __end_of_ADCC_StartConversion:
  9421                           	opt callstack 0
  9422                           
  9423 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9424 ;; Defined at:
  9425 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;		None
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1  [STACK] void 
  9432 ;; Registers used:
  9433 ;;		wreg, status,2
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 3F/3E
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;Total ram usage:        0 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:   15
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_start_adc_scan
  9450 ;;		_adc_int_t_handler
  9451 ;; This function uses a reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text24
  9455  01CB52                     __ptext24:
  9456                           	opt callstack 0
  9457  01CB52                     _ADCC_DischargeSampleCapacitor:
  9458                           	opt callstack 0
  9459                           
  9460                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9461                           
  9462                           ; BSR set to: 62
  9463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9464                           ;incstack = 0
  9465 ;; hardware stack exceeded
  9466  01CB52  0E3B               	movlw	59
  9467  01CB54  013E               	movlb	62	; () banked
  9468  01CB56  6FF1               	movwf	241,b	;volatile
  9469                           
  9470                           ; BSR set to: 62
  9471                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9472  01CB58  0012               	return		;funcret
  9473  01CB5A                     __end_of_ADCC_DischargeSampleCapacitor:
  9474                           	opt callstack 0
  9475                           
  9476 ;; *************** function _clear_adc_scan *****************
  9477 ;; Defined at:
  9478 ;;		line 91 in file "daq.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;		None
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;		None
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  1  [STACK] void 
  9485 ;; Registers used:
  9486 ;;		None
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 3F/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;Total ram usage:        0 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:   15
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_main
  9503 ;;		_update_adc_result
  9504 ;; This function uses a reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text25
  9508  01CB7A                     __ptext25:
  9509                           	opt callstack 0
  9510  01CB7A                     _clear_adc_scan:
  9511                           	opt callstack 13
  9512                           
  9513                           ;daq.c: 93:  R.done = 0;
  9514                           
  9515                           ; BSR set to: 62
  9516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9517                           ;incstack = 0
  9518  01CB7A  0100               	movlb	0	; () banked
  9519  01CB7C  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9520                           
  9521                           ; BSR set to: 0
  9522                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9523  01CB7E  0012               	return		;funcret
  9524  01CB80                     __end_of_clear_adc_scan:
  9525                           	opt callstack 0
  9526                           
  9527 ;; *************** function _check_adc_scan *****************
  9528 ;; Defined at:
  9529 ;;		line 83 in file "daq.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1  [STACK] _Bool 
  9536 ;; Registers used:
  9537 ;;		btemp
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/1
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:   15
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_main
  9554 ;;		_update_adc_result
  9555 ;; This function uses a reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text26
  9559  01CB5A                     __ptext26:
  9560                           	opt callstack 0
  9561  01CB5A                     _check_adc_scan:
  9562                           	opt callstack 13
  9563                           
  9564                           ;daq.c: 85:  return R.done;
  9565                           
  9566                           ; BSR set to: 0
  9567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9568                           ;incstack = 0
  9569  01CB5A  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9570                           
  9571                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9572  01CB60  0012               	return		;funcret
  9573  01CB62                     __end_of_check_adc_scan:
  9574                           	opt callstack 0
  9575                           
  9576 ;; *************** function _set_load_relay_two *****************
  9577 ;; Defined at:
  9578 ;;		line 130 in file "mbmc.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  mode            1  [STACK] const _Bool 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;		None
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1  [STACK] void 
  9585 ;; Registers used:
  9586 ;;		wreg, fsr1l, fsr1h
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9596 ;;Total ram usage:        0 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:   15
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_main
  9603 ;;		_esr_check
  9604 ;; This function uses a reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text27
  9608  01CA92                     __ptext27:
  9609                           	opt callstack 0
  9610  01CA92                     _set_load_relay_two:
  9611                           	opt callstack 15
  9612                           
  9613                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9614                           ;stkvar	_mode @ sp[(0)+-1]
  9615                           
  9616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9617                           ;incstack = 0
  9618  01CA92  0EFF               	movlw	-1
  9619  01CA94  B0E3               	btfsc	plusw1,0,c
  9620  01CA96  D002               	bra	u9775
  9621  01CA98  9ABD               	bcf	189,5,c	;volatile
  9622  01CA9A  D001               	bra	u9776
  9623  01CA9C                     u9775:
  9624  01CA9C  8ABD               	bsf	189,5,c	;volatile
  9625  01CA9E                     u9776:
  9626                           
  9627                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9628  01CA9E  52E5               	movf	postdec1,f,c
  9629  01CAA0  0012               	return		;funcret
  9630  01CAA2                     __end_of_set_load_relay_two:
  9631                           	opt callstack 0
  9632                           
  9633 ;; *************** function _set_load_relay_one *****************
  9634 ;; Defined at:
  9635 ;;		line 125 in file "mbmc.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  mode            1  [STACK] const _Bool 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1  [STACK] void 
  9642 ;; Registers used:
  9643 ;;		wreg, fsr1l, fsr1h
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:   15
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;;		_esr_check
  9661 ;; This function uses a reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text28
  9665  01CAA2                     __ptext28:
  9666                           	opt callstack 0
  9667  01CAA2                     _set_load_relay_one:
  9668                           	opt callstack 15
  9669                           
  9670                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9671                           ;stkvar	_mode @ sp[(0)+-1]
  9672                           
  9673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9674                           ;incstack = 0
  9675  01CAA2  0EFF               	movlw	-1
  9676  01CAA4  B0E3               	btfsc	plusw1,0,c
  9677  01CAA6  D002               	bra	u9765
  9678  01CAA8  98BD               	bcf	189,4,c	;volatile
  9679  01CAAA  D001               	bra	u9766
  9680  01CAAC                     u9765:
  9681  01CAAC  88BD               	bsf	189,4,c	;volatile
  9682  01CAAE                     u9766:
  9683                           
  9684                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9685  01CAAE  52E5               	movf	postdec1,f,c
  9686  01CAB0  0012               	return		;funcret
  9687  01CAB2                     __end_of_set_load_relay_one:
  9688                           	opt callstack 0
  9689                           
  9690 ;; *************** function _eaDogM_WriteCommand *****************
  9691 ;; Defined at:
  9692 ;;		line 385 in file "eadog.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  cmd             1  [STACK] const unsigned char 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1  [STACK] void 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9701 ;; Tracked objects:
  9702 ;;		On entry : 3F/3D
  9703 ;;		On exit  : 3F/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:   26
  9713 ;; This function calls:
  9714 ;;		_send_lcd_cmd_dma
  9715 ;; This function is called by:
  9716 ;;		_main
  9717 ;; This function uses a reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text29
  9721  01CAD2                     __ptext29:
  9722                           	opt callstack 0
  9723  01CAD2                     _eaDogM_WriteCommand:
  9724                           	opt callstack 4
  9725                           
  9726                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9727                           ;stkvar	_cmd @ sp[(0)+-1]
  9728                           
  9729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9730                           ;incstack = 0
  9731  01CAD2  0EFF               	movlw	-1
  9732  01CAD4  50E3               	movf	plusw1,w,c
  9733  01CAD6  6EE6               	movwf	postinc1,c
  9734  01CAD8  ECA6  F0E4         	call	_send_lcd_cmd_dma	;wreg free
  9735                           
  9736                           ; BSR set to: 0
  9737                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9738  01CADC  52E5               	movf	postdec1,f,c
  9739  01CADE  0012               	return		;funcret
  9740  01CAE0                     __end_of_eaDogM_WriteCommand:
  9741                           	opt callstack 0
  9742                           
  9743 ;; *************** function _current_sensor_cal *****************
  9744 ;; Defined at:
  9745 ;;		line 473 in file "main.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;		None
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;  x               1  [STACK] unsigned char 
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1  [STACK] _Bool 
  9752 ;; Registers used:
  9753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/1
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9763 ;;Total ram usage:        0 bytes
  9764 ;; Hardware stack levels used:    1
  9765 ;; Hardware stack levels required when called:   28
  9766 ;; This function calls:
  9767 ;;		_WaitMs
  9768 ;;		_cal_current_zero
  9769 ;;		_get_raw_result
  9770 ;;		_get_switch
  9771 ;;		_get_vterm_ptr
  9772 ;;		_spinners
  9773 ;;		_sprintf
  9774 ;;		_update_lcd
  9775 ;; This function is called by:
  9776 ;;		_main
  9777 ;; This function uses a reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text30
  9781  0164E2                     __ptext30:
  9782                           	opt callstack 0
  9783  0164E2                     _current_sensor_cal:
  9784                           	opt callstack 0
  9785                           
  9786                           ; BSR set to: 0
  9787                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9788  0164E2  52E6               	movf	postinc1,f,c
  9789                           
  9790                           ;main.c: 475:  uint8_t x = 0;
  9791                           ;stkvar	_x @ sp[(-1)+0]
  9792                           
  9793                           ;incstack = 0
  9794  0164E4  0EFF               	movlw	-1
  9795  0164E6  6AE3               	clrf	plusw1,c
  9796                           
  9797                           ;main.c: 477:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9798  0164E8  0EF4               	movlw	low STR_43
  9799  0164EA  6EE6               	movwf	postinc1,c
  9800  0164EC  0EFE               	movlw	high STR_43
  9801  0164EE  6EE6               	movwf	postinc1,c
  9802  0164F0  0E00               	movlw	0
  9803  0164F2  6EE6               	movwf	postinc1,c
  9804  0164F4  0E00               	movlw	0
  9805  0164F6  6EE6               	movwf	postinc1,c
  9806  0164F8  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  9807  0164FC  0060  F007  FFE6   	movff	btemp,postinc1
  9808  016502  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9809  016508  0E04               	movlw	4
  9810  01650A  6EE6               	movwf	postinc1,c
  9811  01650C  EC2A  F0D2         	call	_sprintf	;wreg free
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;main.c: 478:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
  9815  016510  0EF8               	movlw	low STR_44
  9816  016512  6EE6               	movwf	postinc1,c
  9817  016514  0EFD               	movlw	high STR_44
  9818  016516  6EE6               	movwf	postinc1,c
  9819  016518  0E00               	movlw	0
  9820  01651A  6EE6               	movwf	postinc1,c
  9821  01651C  0E01               	movlw	1
  9822  01651E  6EE6               	movwf	postinc1,c
  9823  016520  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  9824  016524  0060  F007  FFE6   	movff	btemp,postinc1
  9825  01652A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9826  016530  0E04               	movlw	4
  9827  016532  6EE6               	movwf	postinc1,c
  9828  016534  EC2A  F0D2         	call	_sprintf	;wreg free
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;main.c: 479:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
  9832  016538  0E8B               	movlw	low STR_45
  9833  01653A  6EE6               	movwf	postinc1,c
  9834  01653C  0EFE               	movlw	high STR_45
  9835  01653E  6EE6               	movwf	postinc1,c
  9836  016540  0E00               	movlw	0
  9837  016542  6EE6               	movwf	postinc1,c
  9838  016544  0E02               	movlw	2
  9839  016546  6EE6               	movwf	postinc1,c
  9840  016548  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  9841  01654C  0060  F007  FFE6   	movff	btemp,postinc1
  9842  016552  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9843  016558  0E04               	movlw	4
  9844  01655A  6EE6               	movwf	postinc1,c
  9845  01655C  EC2A  F0D2         	call	_sprintf	;wreg free
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;main.c: 480:  update_lcd(0);
  9849  016560  0E00               	movlw	0
  9850  016562  6EE6               	movwf	postinc1,c
  9851  016564  ECA2  F0D1         	call	_update_lcd	;wreg free
  9852                           
  9853                           ;main.c: 481:  WaitMs(2000);
  9854  016568  0ED0               	movlw	208
  9855  01656A  6EE6               	movwf	postinc1,c
  9856  01656C  0E07               	movlw	7
  9857  01656E  6EE6               	movwf	postinc1,c
  9858  016570  EC59  F0E1         	call	_WaitMs	;wreg free
  9859                           
  9860                           ;main.c: 482:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9861  016574  0E00               	movlw	0
  9862  016576  6EE6               	movwf	postinc1,c
  9863  016578  0E04               	movlw	4
  9864  01657A  6EE6               	movwf	postinc1,c
  9865  01657C  ECAF  F0D2         	call	_spinners	;wreg free
  9866  016580  5001               	movf	btemp^0,w,c
  9867  016582  6EE6               	movwf	postinc1,c
  9868  016584  0E00               	movlw	0
  9869  016586  6EE6               	movwf	postinc1,c
  9870  016588  0E48               	movlw	low STR_46
  9871  01658A  6EE6               	movwf	postinc1,c
  9872  01658C  0EFF               	movlw	high STR_46
  9873  01658E  6EE6               	movwf	postinc1,c
  9874  016590  0E00               	movlw	0
  9875  016592  6EE6               	movwf	postinc1,c
  9876  016594  0E02               	movlw	2
  9877  016596  6EE6               	movwf	postinc1,c
  9878  016598  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  9879  01659C  0060  F007  FFE6   	movff	btemp,postinc1
  9880  0165A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9881  0165A8  0E06               	movlw	6
  9882  0165AA  6EE6               	movwf	postinc1,c
  9883  0165AC  EC2A  F0D2         	call	_sprintf	;wreg free
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;main.c: 483:  update_lcd(0);
  9887  0165B0  0E00               	movlw	0
  9888  0165B2  6EE6               	movwf	postinc1,c
  9889  0165B4  ECA2  F0D1         	call	_update_lcd	;wreg free
  9890  0165B8                     l13581:
  9891                           
  9892                           ;main.c: 485:   if (++x > 50)
  9893                           ;stkvar	_x @ sp[(-1)+0]
  9894  0165B8  0EFF               	movlw	-1
  9895  0165BA  2AE3               	incf	plusw1,f,c
  9896  0165BC  0EFF               	movlw	-1
  9897  0165BE  006F FF8C  F001    	movff	plusw1,btemp
  9898  0165C4  0E32               	movlw	50
  9899  0165C6  6401               	cpfsgt	btemp^0,c
  9900  0165C8  D001               	goto	l13585
  9901  0165CA  D140               	goto	l1398
  9902  0165CC                     l13585:
  9903                           
  9904                           ;main.c: 487:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9905  0165CC  0E00               	movlw	0
  9906  0165CE  6EE6               	movwf	postinc1,c
  9907  0165D0  0E04               	movlw	4
  9908  0165D2  6EE6               	movwf	postinc1,c
  9909  0165D4  ECAF  F0D2         	call	_spinners	;wreg free
  9910  0165D8  5001               	movf	btemp^0,w,c
  9911  0165DA  6EE6               	movwf	postinc1,c
  9912  0165DC  0E00               	movlw	0
  9913  0165DE  6EE6               	movwf	postinc1,c
  9914  0165E0  0E48               	movlw	low STR_46
  9915  0165E2  6EE6               	movwf	postinc1,c
  9916  0165E4  0EFF               	movlw	high STR_46
  9917  0165E6  6EE6               	movwf	postinc1,c
  9918  0165E8  0E00               	movlw	0
  9919  0165EA  6EE6               	movwf	postinc1,c
  9920  0165EC  0E02               	movlw	2
  9921  0165EE  6EE6               	movwf	postinc1,c
  9922  0165F0  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  9923  0165F4  0060  F007  FFE6   	movff	btemp,postinc1
  9924  0165FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9925  016600  0E06               	movlw	6
  9926  016602  6EE6               	movwf	postinc1,c
  9927  016604  EC2A  F0D2         	call	_sprintf	;wreg free
  9928                           
  9929                           ;main.c: 488:   update_lcd(0);
  9930  016608  0E00               	movlw	0
  9931  01660A  6EE6               	movwf	postinc1,c
  9932  01660C  ECA2  F0D1         	call	_update_lcd	;wreg free
  9933                           
  9934                           ;main.c: 489:   WaitMs(100);
  9935  016610  0E64               	movlw	100
  9936  016612  6EE6               	movwf	postinc1,c
  9937  016614  0E00               	movlw	0
  9938  016616  6EE6               	movwf	postinc1,c
  9939  016618  EC59  F0E1         	call	_WaitMs	;wreg free
  9940                           
  9941                           ;main.c: 490:  } while (get_switch(SCALIB));
  9942  01661C  0E04               	movlw	4
  9943  01661E  6EE6               	movwf	postinc1,c
  9944  016620  EC53  F0E2         	call	_get_switch	;wreg free
  9945  016624  5001               	movf	btemp^0,w,c
  9946  016626  A4D8               	btfss	status,2,c
  9947  016628  D7C7               	goto	l13581
  9948                           
  9949                           ;main.c: 492:  x = 0;
  9950                           ;stkvar	_x @ sp[(-1)+0]
  9951  01662A  0EFF               	movlw	-1
  9952  01662C  6AE3               	clrf	plusw1,c
  9953  01662E                     l13593:
  9954                           
  9955                           ;main.c: 494:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
  9956  01662E  0E1E               	movlw	low STR_48
  9957  016630  6EE6               	movwf	postinc1,c
  9958  016632  0EFF               	movlw	high STR_48
  9959  016634  6EE6               	movwf	postinc1,c
  9960  016636  0E00               	movlw	0
  9961  016638  6EE6               	movwf	postinc1,c
  9962  01663A  0E00               	movlw	0
  9963  01663C  6EE6               	movwf	postinc1,c
  9964  01663E  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  9965  016642  0060  F007  FFE6   	movff	btemp,postinc1
  9966  016648  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9967  01664E  0E04               	movlw	4
  9968  016650  6EE6               	movwf	postinc1,c
  9969  016652  EC2A  F0D2         	call	_sprintf	;wreg free
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;main.c: 495:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(0), 
      +                          get_raw_result(1));
  9973  016656  0E01               	movlw	1
  9974  016658  6EE6               	movwf	postinc1,c
  9975  01665A  ECD3  F0E4         	call	_get_raw_result	;wreg free
  9976  01665E  0060  F007  FFE6   	movff	btemp,postinc1
  9977  016664  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9978  01666A  0E00               	movlw	0
  9979  01666C  6EE6               	movwf	postinc1,c
  9980  01666E  ECD3  F0E4         	call	_get_raw_result	;wreg free
  9981  016672  0060  F007  FFE6   	movff	btemp,postinc1
  9982  016678  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9983  01667E  0EE3               	movlw	low STR_49
  9984  016680  6EE6               	movwf	postinc1,c
  9985  016682  0EFD               	movlw	high STR_49
  9986  016684  6EE6               	movwf	postinc1,c
  9987  016686  0E00               	movlw	0
  9988  016688  6EE6               	movwf	postinc1,c
  9989  01668A  0E01               	movlw	1
  9990  01668C  6EE6               	movwf	postinc1,c
  9991  01668E  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
  9992  016692  0060  F007  FFE6   	movff	btemp,postinc1
  9993  016698  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9994  01669E  0E08               	movlw	8
  9995  0166A0  6EE6               	movwf	postinc1,c
  9996  0166A2  EC2A  F0D2         	call	_sprintf	;wreg free
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;main.c: 496:   sprintf(get_vterm_ptr(2, 0), " Time %d            ", x);
 10000                           ;stkvar	_x @ sp[(-1)+0]
 10001  0166A6  0EFF               	movlw	-1
 10002  0166A8  50E3               	movf	plusw1,w,c
 10003  0166AA  6EE6               	movwf	postinc1,c
 10004  0166AC  0E00               	movlw	0
 10005  0166AE  6EE6               	movwf	postinc1,c
 10006  0166B0  0E22               	movlw	low STR_50
 10007  0166B2  6EE6               	movwf	postinc1,c
 10008  0166B4  0EFE               	movlw	high STR_50
 10009  0166B6  6EE6               	movwf	postinc1,c
 10010  0166B8  0E00               	movlw	0
 10011  0166BA  6EE6               	movwf	postinc1,c
 10012  0166BC  0E02               	movlw	2
 10013  0166BE  6EE6               	movwf	postinc1,c
 10014  0166C0  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 10015  0166C4  0060  F007  FFE6   	movff	btemp,postinc1
 10016  0166CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10017  0166D0  0E06               	movlw	6
 10018  0166D2  6EE6               	movwf	postinc1,c
 10019  0166D4  EC2A  F0D2         	call	_sprintf	;wreg free
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;main.c: 497:   update_lcd(0);
 10023  0166D8  0E00               	movlw	0
 10024  0166DA  6EE6               	movwf	postinc1,c
 10025  0166DC  ECA2  F0D1         	call	_update_lcd	;wreg free
 10026                           
 10027                           ;main.c: 498:   WaitMs(100);
 10028  0166E0  0E64               	movlw	100
 10029  0166E2  6EE6               	movwf	postinc1,c
 10030  0166E4  0E00               	movlw	0
 10031  0166E6  6EE6               	movwf	postinc1,c
 10032  0166E8  EC59  F0E1         	call	_WaitMs	;wreg free
 10033                           
 10034                           ;main.c: 499:  } while (++x < 50);
 10035                           ;stkvar	_x @ sp[(-1)+0]
 10036  0166EC  0EFF               	movlw	-1
 10037  0166EE  2AE3               	incf	plusw1,f,c
 10038  0166F0  0EFF               	movlw	-1
 10039  0166F2  006F FF8C  F001    	movff	plusw1,btemp
 10040  0166F8  0E31               	movlw	49
 10041  0166FA  6401               	cpfsgt	btemp^0,c
 10042  0166FC  D798               	goto	l13593
 10043                           
 10044                           ;main.c: 501:  if (cal_current_zero(0)) {
 10045  0166FE  0E00               	movlw	0
 10046  016700  6EE6               	movwf	postinc1,c
 10047  016702  EC53  F0D5         	call	_cal_current_zero	;wreg free
 10048  016706  5001               	movf	btemp^0,w,c
 10049  016708  B4D8               	btfsc	status,2,c
 10050  01670A  D04B               	goto	l13619
 10051                           
 10052                           ;main.c: 502:   cal_current_zero(1);
 10053  01670C  0E01               	movlw	1
 10054  01670E  6EE6               	movwf	postinc1,c
 10055  016710  EC53  F0D5         	call	_cal_current_zero	;wreg free
 10056                           
 10057                           ;main.c: 503:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10058  016714  0EF4               	movlw	low STR_43
 10059  016716  6EE6               	movwf	postinc1,c
 10060  016718  0EFE               	movlw	high STR_43
 10061  01671A  6EE6               	movwf	postinc1,c
 10062  01671C  0E00               	movlw	0
 10063  01671E  6EE6               	movwf	postinc1,c
 10064  016720  0E00               	movlw	0
 10065  016722  6EE6               	movwf	postinc1,c
 10066  016724  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 10067  016728  0060  F007  FFE6   	movff	btemp,postinc1
 10068  01672E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10069  016734  0E04               	movlw	4
 10070  016736  6EE6               	movwf	postinc1,c
 10071  016738  EC2A  F0D2         	call	_sprintf	;wreg free
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;main.c: 504:   sprintf(get_vterm_ptr(1, 0), "Sensors             ");
 10075  01673C  0E0D               	movlw	low STR_52
 10076  01673E  6EE6               	movwf	postinc1,c
 10077  016740  0EFE               	movlw	high STR_52
 10078  016742  6EE6               	movwf	postinc1,c
 10079  016744  0E00               	movlw	0
 10080  016746  6EE6               	movwf	postinc1,c
 10081  016748  0E01               	movlw	1
 10082  01674A  6EE6               	movwf	postinc1,c
 10083  01674C  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 10084  016750  0060  F007  FFE6   	movff	btemp,postinc1
 10085  016756  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10086  01675C  0E04               	movlw	4
 10087  01675E  6EE6               	movwf	postinc1,c
 10088  016760  EC2A  F0D2         	call	_sprintf	;wreg free
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;main.c: 505:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10092  016764  0ECA               	movlw	low STR_53
 10093  016766  6EE6               	movwf	postinc1,c
 10094  016768  0EFE               	movlw	high STR_53
 10095  01676A  6EE6               	movwf	postinc1,c
 10096  01676C  0E00               	movlw	0
 10097  01676E  6EE6               	movwf	postinc1,c
 10098  016770  0E02               	movlw	2
 10099  016772  6EE6               	movwf	postinc1,c
 10100  016774  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 10101  016778  0060  F007  FFE6   	movff	btemp,postinc1
 10102  01677E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10103  016784  0E04               	movlw	4
 10104  016786  6EE6               	movwf	postinc1,c
 10105  016788  EC2A  F0D2         	call	_sprintf	;wreg free
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;main.c: 506:   update_lcd(0);
 10109  01678C  0E00               	movlw	0
 10110  01678E  6EE6               	movwf	postinc1,c
 10111  016790  ECA2  F0D1         	call	_update_lcd	;wreg free
 10112  016794                     l13617:
 10113                           
 10114                           ;main.c: 507:   WaitMs(2000);
 10115  016794  0ED0               	movlw	208
 10116  016796  6EE6               	movwf	postinc1,c
 10117  016798  0E07               	movlw	7
 10118  01679A  6EE6               	movwf	postinc1,c
 10119  01679C  EC59  F0E1         	call	_WaitMs	;wreg free
 10120                           
 10121                           ;main.c: 508:  } else {
 10122  0167A0  D055               	goto	l1398
 10123  0167A2                     l13619:
 10124                           
 10125                           ;main.c: 509:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10126  0167A2  0EF4               	movlw	low STR_43
 10127  0167A4  6EE6               	movwf	postinc1,c
 10128  0167A6  0EFE               	movlw	high STR_43
 10129  0167A8  6EE6               	movwf	postinc1,c
 10130  0167AA  0E00               	movlw	0
 10131  0167AC  6EE6               	movwf	postinc1,c
 10132  0167AE  0E00               	movlw	0
 10133  0167B0  6EE6               	movwf	postinc1,c
 10134  0167B2  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 10135  0167B6  0060  F007  FFE6   	movff	btemp,postinc1
 10136  0167BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10137  0167C2  0E04               	movlw	4
 10138  0167C4  6EE6               	movwf	postinc1,c
 10139  0167C6  EC2A  F0D2         	call	_sprintf	;wreg free
 10140                           
 10141                           ;main.c: 510:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(0), 
      +                          get_raw_result(1));
 10142  0167CA  0E01               	movlw	1
 10143  0167CC  6EE6               	movwf	postinc1,c
 10144  0167CE  ECD3  F0E4         	call	_get_raw_result	;wreg free
 10145  0167D2  0060  F007  FFE6   	movff	btemp,postinc1
 10146  0167D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10147  0167DE  0E00               	movlw	0
 10148  0167E0  6EE6               	movwf	postinc1,c
 10149  0167E2  ECD3  F0E4         	call	_get_raw_result	;wreg free
 10150  0167E6  0060  F007  FFE6   	movff	btemp,postinc1
 10151  0167EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10152  0167F2  0EE3               	movlw	low STR_49
 10153  0167F4  6EE6               	movwf	postinc1,c
 10154  0167F6  0EFD               	movlw	high STR_49
 10155  0167F8  6EE6               	movwf	postinc1,c
 10156  0167FA  0E00               	movlw	0
 10157  0167FC  6EE6               	movwf	postinc1,c
 10158  0167FE  0E01               	movlw	1
 10159  016800  6EE6               	movwf	postinc1,c
 10160  016802  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 10161  016806  0060  F007  FFE6   	movff	btemp,postinc1
 10162  01680C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10163  016812  0E08               	movlw	8
 10164  016814  6EE6               	movwf	postinc1,c
 10165  016816  EC2A  F0D2         	call	_sprintf	;wreg free
 10166                           
 10167                           ;main.c: 511:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
 10168  01681A  0EB5               	movlw	low STR_56
 10169  01681C  6EE6               	movwf	postinc1,c
 10170  01681E  0EFE               	movlw	high STR_56
 10171  016820  6EE6               	movwf	postinc1,c
 10172  016822  0E00               	movlw	0
 10173  016824  6EE6               	movwf	postinc1,c
 10174  016826  0E02               	movlw	2
 10175  016828  6EE6               	movwf	postinc1,c
 10176  01682A  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 10177  01682E  0060  F007  FFE6   	movff	btemp,postinc1
 10178  016834  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10179  01683A  0E04               	movlw	4
 10180  01683C  6EE6               	movwf	postinc1,c
 10181  01683E  EC2A  F0D2         	call	_sprintf	;wreg free
 10182                           
 10183                           ;main.c: 512:   update_lcd(0);
 10184  016842  0E00               	movlw	0
 10185  016844  6EE6               	movwf	postinc1,c
 10186  016846  ECA2  F0D1         	call	_update_lcd	;wreg free
 10187  01684A  D7A4               	goto	l13617
 10188  01684C                     l1398:
 10189                           
 10190                           ; _current_sensor_cal: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10191  01684C  52E5               	movf	postdec1,f,c
 10192  01684E  0012               	return		;funcret
 10193  016850                     __end_of_current_sensor_cal:
 10194                           	opt callstack 0
 10195                           
 10196 ;; *************** function _spinners *****************
 10197 ;; Defined at:
 10198 ;;		line 146 in file "mbmc.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  shape           1  [STACK] unsigned char 
 10201 ;;  reset           1  [STACK] const unsigned char 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  c               1  [STACK] unsigned char 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1  [STACK] unsigned char 
 10206 ;; Registers used:
 10207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10217 ;;Total ram usage:        0 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:   16
 10220 ;; This function calls:
 10221 ;;		_strlen
 10222 ;; This function is called by:
 10223 ;;		_main
 10224 ;;		_current_sensor_cal
 10225 ;; This function uses a reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text31
 10229  01A55E                     __ptext31:
 10230                           	opt callstack 0
 10231  01A55E                     _spinners:
 10232                           	opt callstack 0
 10233                           
 10234                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10235  01A55E  52E6               	movf	postinc1,f,c
 10236                           
 10237                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 10238                           ;stkvar	_shape @ sp[(-1)+-1]
 10239                           
 10240                           ;incstack = 0
 10241  01A560  0EFE               	movlw	-2
 10242  01A562  006F FF8C  F001    	movff	plusw1,btemp
 10243  01A568  0E05               	movlw	5
 10244  01A56A  6401               	cpfsgt	btemp^0,c
 10245  01A56C  D002               	goto	l1994
 10246                           
 10247                           ;mbmc.c: 152:   shape = 0;
 10248                           ;stkvar	_shape @ sp[(-1)+-1]
 10249  01A56E  0EFE               	movlw	-2
 10250  01A570  6AE3               	clrf	plusw1,c
 10251  01A572                     l1994:
 10252                           
 10253                           ;mbmc.c: 153:  if (reset)
 10254                           ;stkvar	_reset @ sp[(-1)+-2]
 10255  01A572  0EFD               	movlw	-3
 10256  01A574  50E3               	movf	plusw1,w,c
 10257  01A576  B4D8               	btfsc	status,2,c
 10258  01A578  D00C               	goto	l10775
 10259                           
 10260                           ;mbmc.c: 154:   s[shape] = 0;
 10261                           ;stkvar	_shape @ sp[(-1)+-1]
 10262  01A57A  0EFE               	movlw	-2
 10263  01A57C  50E3               	movf	plusw1,w,c
 10264  01A57E  6E0B               	movwf	(btemp+10)^0,c
 10265  01A580  6A0C               	clrf	(btemp+11)^0,c
 10266  01A582  0EE4               	movlw	low spinners@s
 10267  01A584  240B               	addwf	(btemp+10)^0,w,c
 10268  01A586  6ED9               	movwf	fsr2l,c
 10269  01A588  0E01               	movlw	high spinners@s
 10270  01A58A  200C               	addwfc	(btemp+11)^0,w,c
 10271  01A58C  6EDA               	movwf	fsr2h,c
 10272  01A58E  0E00               	movlw	0
 10273  01A590  6EDF               	movwf	indf2,c
 10274  01A592                     l10775:
 10275                           
 10276                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 10277                           ;stkvar	_shape @ sp[(-1)+-1]
 10278  01A592  0EFE               	movlw	-2
 10279  01A594  50E3               	movf	plusw1,w,c
 10280  01A596  0D14               	mullw	20
 10281  01A598  0E6D               	movlw	low _spin
 10282  01A59A  6E0B               	movwf	(btemp+10)^0,c
 10283  01A59C  0EFA               	movlw	high _spin
 10284  01A59E  6E0C               	movwf	(btemp+11)^0,c
 10285  01A5A0  50F3               	movf	243,w,c
 10286  01A5A2  260B               	addwf	(btemp+10)^0,f,c
 10287  01A5A4  50F4               	movf	244,w,c
 10288  01A5A6  220C               	addwfc	(btemp+11)^0,f,c
 10289                           
 10290                           ;stkvar	_shape @ sp[(-1)+-1]
 10291  01A5A8  0EFE               	movlw	-2
 10292  01A5AA  50E3               	movf	plusw1,w,c
 10293  01A5AC  6E09               	movwf	(btemp+8)^0,c
 10294  01A5AE  6A0A               	clrf	(btemp+9)^0,c
 10295  01A5B0  0EE4               	movlw	low spinners@s
 10296  01A5B2  2409               	addwf	(btemp+8)^0,w,c
 10297  01A5B4  6ED9               	movwf	fsr2l,c
 10298  01A5B6  0E01               	movlw	high spinners@s
 10299  01A5B8  200A               	addwfc	(btemp+9)^0,w,c
 10300  01A5BA  6EDA               	movwf	fsr2h,c
 10301  01A5BC  50DF               	movf	indf2,w,c
 10302  01A5BE  260B               	addwf	(btemp+10)^0,f,c
 10303  01A5C0  0E00               	movlw	0
 10304  01A5C2  220C               	addwfc	(btemp+11)^0,f,c
 10305  01A5C4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10306  01A5CA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10307  01A5D0                     	if	0	;tblptru may be non-zero
 10308  01A5D0                     	endif
 10309  01A5D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10310  01A5D0  0E00               	movlw	low (__mediumconst shr (0+16))
 10311  01A5D2  6EF8               	movwf	tblptru,c
 10312  01A5D4                     	endif
 10313                           
 10314                           ;stkvar	_c @ sp[(-1)+0]
 10315  01A5D4  0008               	tblrd		*
 10316  01A5D6  0EFF               	movlw	-1
 10317  01A5D8  006F FFD7 FFE3     	movff	tablat,plusw1
 10318                           
 10319                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 10320                           ;stkvar	_shape @ sp[(-1)+-1]
 10321  01A5DE  0EFE               	movlw	-2
 10322  01A5E0  50E3               	movf	plusw1,w,c
 10323  01A5E2  0D14               	mullw	20
 10324  01A5E4  0E6D               	movlw	low _spin
 10325  01A5E6  6E0B               	movwf	(btemp+10)^0,c
 10326  01A5E8  0EFA               	movlw	high _spin
 10327  01A5EA  6E0C               	movwf	(btemp+11)^0,c
 10328  01A5EC  50F3               	movf	243,w,c
 10329  01A5EE  260B               	addwf	(btemp+10)^0,f,c
 10330  01A5F0  50F4               	movf	244,w,c
 10331  01A5F2  220C               	addwfc	(btemp+11)^0,f,c
 10332  01A5F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10333  01A5FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10334  01A600  ECD5  F0D8         	call	_strlen	;wreg free
 10335                           
 10336                           ;stkvar	_shape @ sp[(-1)+-1]
 10337  01A604  0EFE               	movlw	-2
 10338  01A606  50E3               	movf	plusw1,w,c
 10339  01A608  6E0B               	movwf	(btemp+10)^0,c
 10340  01A60A  6A0C               	clrf	(btemp+11)^0,c
 10341  01A60C  0EE4               	movlw	low spinners@s
 10342  01A60E  240B               	addwf	(btemp+10)^0,w,c
 10343  01A610  6ED9               	movwf	fsr2l,c
 10344  01A612  0E01               	movlw	high spinners@s
 10345  01A614  200C               	addwfc	(btemp+11)^0,w,c
 10346  01A616  6EDA               	movwf	fsr2h,c
 10347  01A618  2ADF               	incf	indf2,f,c
 10348  01A61A  50DF               	movf	indf2,w,c
 10349  01A61C  6E0B               	movwf	(btemp+10)^0,c
 10350  01A61E  6A0C               	clrf	(btemp+11)^0,c
 10351  01A620  5001               	movf	btemp^0,w,c
 10352  01A622  5C0B               	subwf	(btemp+10)^0,w,c
 10353  01A624  5002               	movf	(btemp+1)^0,w,c
 10354  01A626  580C               	subwfb	(btemp+11)^0,w,c
 10355  01A628  A0D8               	btfss	status,0,c
 10356  01A62A  D00C               	goto	l10781
 10357                           
 10358                           ;mbmc.c: 157:   s[shape] = 0;
 10359                           ;stkvar	_shape @ sp[(-1)+-1]
 10360  01A62C  0EFE               	movlw	-2
 10361  01A62E  50E3               	movf	plusw1,w,c
 10362  01A630  6E0B               	movwf	(btemp+10)^0,c
 10363  01A632  6A0C               	clrf	(btemp+11)^0,c
 10364  01A634  0EE4               	movlw	low spinners@s
 10365  01A636  240B               	addwf	(btemp+10)^0,w,c
 10366  01A638  6ED9               	movwf	fsr2l,c
 10367  01A63A  0E01               	movlw	high spinners@s
 10368  01A63C  200C               	addwfc	(btemp+11)^0,w,c
 10369  01A63E  6EDA               	movwf	fsr2h,c
 10370  01A640  0E00               	movlw	0
 10371  01A642  6EDF               	movwf	indf2,c
 10372  01A644                     l10781:
 10373                           
 10374                           ;mbmc.c: 158:  return c;
 10375                           ;stkvar	_c @ sp[(-1)+0]
 10376  01A644  0EFF               	movlw	-1
 10377  01A646  006F FF8C  F001    	movff	plusw1,btemp
 10378                           
 10379                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 10380  01A64C  52E5               	movf	postdec1,f,c
 10381  01A64E  52E5               	movf	postdec1,f,c
 10382  01A650  52E5               	movf	postdec1,f,c
 10383  01A652  0012               	return		;funcret
 10384  01A654                     __end_of_spinners:
 10385                           	opt callstack 0
 10386                           
 10387 ;; *************** function _get_switch *****************
 10388 ;; Defined at:
 10389 ;;		line 18 in file "dio.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  i               1  [STACK] const unsigned char 
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;		None
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  1  [STACK] enum E17021
 10396 ;; Registers used:
 10397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10407 ;;Total ram usage:        0 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:   15
 10410 ;; This function calls:
 10411 ;;		Nothing
 10412 ;; This function is called by:
 10413 ;;		_main
 10414 ;;		_current_sensor_cal
 10415 ;;		_hid_input
 10416 ;; This function uses a reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text32
 10420  01C4A6                     __ptext32:
 10421                           	opt callstack 0
 10422  01C4A6                     _get_switch:
 10423                           	opt callstack 13
 10424                           
 10425                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 10426                           ;stkvar	_i @ sp[(0)+-1]
 10427                           
 10428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10429                           ;incstack = 0
 10430  01C4A6  0EFF               	movlw	-1
 10431  01C4A8  006F FF8C  F001    	movff	plusw1,btemp
 10432  01C4AE  0E05               	movlw	5
 10433  01C4B0  6401               	cpfsgt	btemp^0,c
 10434  01C4B2  D002               	goto	l10275
 10435                           
 10436                           ;dio.c: 21:   return SW_OFF;
 10437  01C4B4  0E00               	movlw	0
 10438  01C4B6  D00A               	goto	L8
 10439  01C4B8                     l10275:
 10440                           
 10441                           ;dio.c: 23:  return S.button[i].sw;
 10442                           ;stkvar	_i @ sp[(0)+-1]
 10443  01C4B8  0EFF               	movlw	-1
 10444  01C4BA  50E3               	movf	plusw1,w,c
 10445  01C4BC  0D05               	mullw	5
 10446  01C4BE  0E54               	movlw	low _S
 10447  01C4C0  24F3               	addwf	243,w,c
 10448  01C4C2  6ED9               	movwf	fsr2l,c
 10449  01C4C4  0E02               	movlw	high _S
 10450  01C4C6  20F4               	addwfc	prodh,w,c
 10451  01C4C8  6EDA               	movwf	fsr2h,c
 10452  01C4CA  50DF               	movf	indf2,w,c
 10453  01C4CC                     L8:
 10454  01C4CC  6E01               	movwf	btemp^0,c
 10455                           
 10456                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10457  01C4CE  52E5               	movf	postdec1,f,c
 10458  01C4D0  0012               	return		;funcret
 10459  01C4D2                     __end_of_get_switch:
 10460                           	opt callstack 0
 10461                           
 10462 ;; *************** function _cal_current_zero *****************
 10463 ;; Defined at:
 10464 ;;		line 317 in file "daq.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  mode            1  [STACK] _Bool 
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;  a200            2  [STACK] short 
 10469 ;;  a100            2  [STACK] short 
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  1  [STACK] _Bool 
 10472 ;; Registers used:
 10473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10483 ;;Total ram usage:        0 bytes
 10484 ;; Hardware stack levels used:    1
 10485 ;; Hardware stack levels required when called:   16
 10486 ;; This function calls:
 10487 ;;		_check_range
 10488 ;;		_get_raw_result
 10489 ;; This function is called by:
 10490 ;;		_current_sensor_cal
 10491 ;; This function uses a reentrant model
 10492 ;;
 10493                           
 10494                           	psect	text33
 10495  01AAA6                     __ptext33:
 10496                           	opt callstack 0
 10497  01AAA6                     _cal_current_zero:
 10498                           	opt callstack 0
 10499                           
 10500                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10501  01AAA6  52E6               	movf	postinc1,f,c
 10502  01AAA8  52E6               	movf	postinc1,f,c
 10503  01AAAA  52E6               	movf	postinc1,f,c
 10504  01AAAC  52E6               	movf	postinc1,f,c
 10505                           
 10506                           ;daq.c: 317: _Bool cal_current_zero(_Bool mode);daq.c: 318: {;daq.c: 319:  int16_t a100,
      +                           a200;;daq.c: 321:  a100 = get_raw_result(C_PV);
 10507                           
 10508                           ;incstack = 0
 10509  01AAAE  0E01               	movlw	1
 10510  01AAB0  6EE6               	movwf	postinc1,c
 10511  01AAB2  ECD3  F0E4         	call	_get_raw_result	;wreg free
 10512                           
 10513                           ;stkvar	_a100 @ sp[(-4)+2]
 10514  01AAB6  0EFE               	movlw	-2
 10515  01AAB8  0060  F007  FFE3   	movff	btemp,plusw1
 10516  01AABE  0EFF               	movlw	-1
 10517  01AAC0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10518                           
 10519                           ;daq.c: 322:  if (!check_range(a100, 100, 4000))
 10520  01AAC6  0EA0               	movlw	160
 10521  01AAC8  6EE6               	movwf	postinc1,c
 10522  01AACA  0E0F               	movlw	15
 10523  01AACC  6EE6               	movwf	postinc1,c
 10524  01AACE  0E64               	movlw	100
 10525  01AAD0  6EE6               	movwf	postinc1,c
 10526  01AAD2  0E00               	movlw	0
 10527  01AAD4  6EE6               	movwf	postinc1,c
 10528                           
 10529                           ;stkvar	_a100 @ sp[(-8)+2]
 10530  01AAD6  0EFA               	movlw	-6
 10531  01AAD8  006F FF8F FFE6     	movff	plusw1,postinc1
 10532  01AADE  006F FF8F FFE6     	movff	plusw1,postinc1
 10533  01AAE4  ECCC  F0DA         	call	_check_range	;wreg free
 10534  01AAE8  5001               	movf	btemp^0,w,c
 10535  01AAEA  A4D8               	btfss	status,2,c
 10536  01AAEC  D002               	goto	l10825
 10537  01AAEE                     u9870:
 10538                           
 10539                           ;daq.c: 323:   return 0;
 10540  01AAEE  0E00               	movlw	0
 10541  01AAF0  D025               	goto	L9
 10542  01AAF2                     l10825:
 10543                           
 10544                           ;daq.c: 324:  a200 = get_raw_result(C_BATT);
 10545  01AAF2  0E00               	movlw	0
 10546  01AAF4  6EE6               	movwf	postinc1,c
 10547  01AAF6  ECD3  F0E4         	call	_get_raw_result	;wreg free
 10548                           
 10549                           ;stkvar	_a200 @ sp[(-4)+0]
 10550  01AAFA  0EFC               	movlw	-4
 10551  01AAFC  0060  F007  FFE3   	movff	btemp,plusw1
 10552  01AB02  0EFD               	movlw	-3
 10553  01AB04  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10554                           
 10555                           ;daq.c: 325:  if (!check_range(a200, 100, 4000))
 10556  01AB0A  0EA0               	movlw	160
 10557  01AB0C  6EE6               	movwf	postinc1,c
 10558  01AB0E  0E0F               	movlw	15
 10559  01AB10  6EE6               	movwf	postinc1,c
 10560  01AB12  0E64               	movlw	100
 10561  01AB14  6EE6               	movwf	postinc1,c
 10562  01AB16  0E00               	movlw	0
 10563  01AB18  6EE6               	movwf	postinc1,c
 10564                           
 10565                           ;stkvar	_a200 @ sp[(-8)+0]
 10566  01AB1A  0EF8               	movlw	-8
 10567  01AB1C  006F FF8F FFE6     	movff	plusw1,postinc1
 10568  01AB22  006F FF8F FFE6     	movff	plusw1,postinc1
 10569  01AB28  ECCC  F0DA         	call	_check_range	;wreg free
 10570  01AB2C  5001               	movf	btemp^0,w,c
 10571  01AB2E  B4D8               	btfsc	status,2,c
 10572  01AB30  D7DE               	goto	u9870
 10573                           
 10574                           ;daq.c: 328:  if (!mode)
 10575                           ;stkvar	_mode @ sp[(-4)+-1]
 10576  01AB32  0EFB               	movlw	-5
 10577  01AB34  50E3               	movf	plusw1,w,c
 10578  01AB36  A4D8               	btfss	status,2,c
 10579  01AB38  D003               	goto	l10839
 10580  01AB3A                     u9890:
 10581                           
 10582                           ;daq.c: 329:   return 1;
 10583  01AB3A  0E01               	movlw	1
 10584  01AB3C                     L9:
 10585  01AB3C  6E01               	movwf	btemp^0,c
 10586  01AB3E  D011               	goto	l1912
 10587  01AB40                     l10839:
 10588                           
 10589                           ;daq.c: 331:  R.n_offset[1] = a100;
 10590                           ;stkvar	_a100 @ sp[(-4)+2]
 10591  01AB40  0EFE               	movlw	-2
 10592  01AB42  006F FF8C  F0D7    	movff	plusw1,_R+40	;volatile
 10593  01AB48  0EFF               	movlw	-1
 10594  01AB4A  006F FF8C  F0D8    	movff	plusw1,_R+41	;volatile
 10595                           
 10596                           ;daq.c: 332:  R.n_offset[0] = a200;
 10597                           ;stkvar	_a200 @ sp[(-4)+0]
 10598  01AB50  0EFC               	movlw	-4
 10599  01AB52  006F FF8C  F0D5    	movff	plusw1,_R+38	;volatile
 10600  01AB58  0EFD               	movlw	-3
 10601  01AB5A  006F FF8C  F0D6    	movff	plusw1,_R+39	;volatile
 10602  01AB60  D7EC               	goto	u9890
 10603  01AB62                     l1912:
 10604                           
 10605                           ; _cal_current_zero: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10606  01AB62  0EFB               	movlw	251
 10607  01AB64  26E1               	addwf	fsr1l,f,c
 10608  01AB66  0EFF               	movlw	255
 10609  01AB68  22E2               	addwfc	fsr1h,f,c
 10610  01AB6A  0012               	return		;funcret
 10611  01AB6C                     __end_of_cal_current_zero:
 10612                           	opt callstack 0
 10613                           
 10614 ;; *************** function _check_range *****************
 10615 ;; Defined at:
 10616 ;;		line 305 in file "daq.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;  value           2  [STACK] short 
 10619 ;;  window          2  [STACK] short 
 10620 ;;  standard        2  [STACK] short 
 10621 ;; Auto vars:     Size  Location     Type
 10622 ;;		None
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  1  [STACK] _Bool 
 10625 ;; Registers used:
 10626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10636 ;;Total ram usage:        0 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:   15
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_cal_current_zero
 10643 ;; This function uses a reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text34
 10647  01B598                     __ptext34:
 10648                           	opt callstack 0
 10649  01B598                     _check_range:
 10650                           	opt callstack 13
 10651                           
 10652                           ;daq.c: 305: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 306: {;daq.c: 307:  if (value > (standard + window))
 10653                           ;stkvar	_value @ sp[(0)+-2]
 10654                           ;stkvar	_window @ sp[(0)+-4]
 10655                           ;stkvar	_standard @ sp[(0)+-6]
 10656                           
 10657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10658                           ;incstack = 0
 10659  01B598  0EFA               	movlw	-6
 10660  01B59A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10661  01B5A0  0EFB               	movlw	-5
 10662  01B5A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10663  01B5A8  0EFC               	movlw	-4
 10664  01B5AA  50E3               	movf	plusw1,w,c
 10665  01B5AC  260B               	addwf	(btemp+10)^0,f,c
 10666  01B5AE  0EFD               	movlw	-3
 10667  01B5B0  50E3               	movf	plusw1,w,c
 10668  01B5B2  220C               	addwfc	(btemp+11)^0,f,c
 10669  01B5B4  0EFE               	movlw	-2
 10670  01B5B6  50E3               	movf	plusw1,w,c
 10671  01B5B8  5C0B               	subwf	(btemp+10)^0,w,c
 10672  01B5BA  500C               	movf	(btemp+11)^0,w,c
 10673  01B5BC  0A80               	xorlw	128
 10674  01B5BE  6E01               	movwf	btemp^0,c
 10675  01B5C0  0EFF               	movlw	-1
 10676  01B5C2  50E3               	movf	plusw1,w,c
 10677  01B5C4  0A80               	xorlw	128
 10678  01B5C6  5801               	subwfb	btemp^0,w,c
 10679  01B5C8  B0D8               	btfsc	status,0,c
 10680  01B5CA  D002               	goto	l10333
 10681  01B5CC                     u9660:
 10682                           
 10683                           ;daq.c: 308:   return 0;
 10684  01B5CC  0E00               	movlw	0
 10685  01B5CE  D01E               	goto	L10
 10686  01B5D0                     l10333:
 10687                           
 10688                           ;daq.c: 309:  if (value < (standard - window))
 10689                           ;stkvar	_window @ sp[(0)+-4]
 10690                           ;stkvar	_standard @ sp[(0)+-6]
 10691  01B5D0  0EFA               	movlw	-6
 10692  01B5D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10693  01B5D8  0EFB               	movlw	-5
 10694  01B5DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10695  01B5E0  0EFC               	movlw	-4
 10696  01B5E2  50E3               	movf	plusw1,w,c
 10697  01B5E4  5E0B               	subwf	(btemp+10)^0,f,c
 10698  01B5E6  0EFD               	movlw	-3
 10699  01B5E8  50E3               	movf	plusw1,w,c
 10700  01B5EA  5A0C               	subwfb	(btemp+11)^0,f,c
 10701                           
 10702                           ;stkvar	_value @ sp[(0)+-2]
 10703  01B5EC  0EFE               	movlw	-2
 10704  01B5EE  006F FF8C  F001    	movff	plusw1,btemp
 10705  01B5F4  500B               	movf	(btemp+10)^0,w,c
 10706  01B5F6  5C01               	subwf	btemp^0,w,c
 10707  01B5F8  0EFF               	movlw	-1
 10708  01B5FA  50E3               	movf	plusw1,w,c
 10709  01B5FC  0A80               	xorlw	128
 10710  01B5FE  6E01               	movwf	btemp^0,c
 10711  01B600  500C               	movf	(btemp+11)^0,w,c
 10712  01B602  0A80               	xorlw	128
 10713  01B604  5801               	subwfb	btemp^0,w,c
 10714  01B606  A0D8               	btfss	status,0,c
 10715  01B608  D7E1               	goto	u9660
 10716                           
 10717                           ;daq.c: 311:  return 1;
 10718  01B60A  0E01               	movlw	1
 10719  01B60C                     L10:
 10720  01B60C  6E01               	movwf	btemp^0,c
 10721                           
 10722                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 10723  01B60E  0EFA               	movlw	250
 10724  01B610  26E1               	addwf	fsr1l,f,c
 10725  01B612  0EFF               	movlw	255
 10726  01B614  22E2               	addwfc	fsr1h,f,c
 10727  01B616  0012               	return		;funcret
 10728  01B618                     __end_of_check_range:
 10729                           	opt callstack 0
 10730                           
 10731 ;; *************** function _convert_adc_data *****************
 10732 ;; Defined at:
 10733 ;;		line 51 in file "mbmc.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;		None
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;  i               1  [STACK] unsigned char 
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  1  [STACK] void 
 10740 ;; Registers used:
 10741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/1
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10751 ;;Total ram usage:        0 bytes
 10752 ;; Hardware stack levels used:    1
 10753 ;; Hardware stack levels required when called:   18
 10754 ;; This function calls:
 10755 ;;		_conv_raw_result
 10756 ;;		_lp_filter
 10757 ;; This function is called by:
 10758 ;;		_main
 10759 ;; This function uses a reentrant model
 10760 ;;
 10761                           
 10762                           	psect	text35
 10763  01ACEA                     __ptext35:
 10764                           	opt callstack 0
 10765  01ACEA                     _convert_adc_data:
 10766                           	opt callstack 0
 10767                           
 10768                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10769  01ACEA  52E6               	movf	postinc1,f,c
 10770                           
 10771                           ;mbmc.c: 53:  uint8_t i = 0;
 10772                           ;stkvar	_i @ sp[(-1)+0]
 10773                           
 10774                           ;incstack = 0
 10775  01ACEC  0EFF               	movlw	-1
 10776  01ACEE  6AE3               	clrf	plusw1,c
 10777  01ACF0                     l11545:
 10778                           
 10779                           ;mbmc.c: 56:   if (V.calib) {
 10780  01ACF0  0101               	movlb	1	; () banked
 10781  01ACF2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 10782  01ACF4  B4D8               	btfsc	status,2,c
 10783  01ACF6  D01B               	goto	l11549
 10784                           
 10785                           ; BSR set to: 1
 10786                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 10787  01ACF8  0E01               	movlw	1
 10788  01ACFA  6EE6               	movwf	postinc1,c
 10789                           
 10790                           ;stkvar	_i @ sp[(-2)+0]
 10791  01ACFC  0EFE               	movlw	-2
 10792  01ACFE  50E3               	movf	plusw1,w,c
 10793  01AD00  6EE6               	movwf	postinc1,c
 10794  01AD02  0E01               	movlw	1
 10795  01AD04  6EE6               	movwf	postinc1,c
 10796                           
 10797                           ;stkvar	_i @ sp[(-4)+0]
 10798  01AD06  0EFC               	movlw	-4
 10799  01AD08  50E3               	movf	plusw1,w,c
 10800  01AD0A  6EE6               	movwf	postinc1,c
 10801  01AD0C  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10802  01AD10  0060  F007  FFE6   	movff	btemp,postinc1
 10803  01AD16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10804  01AD1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10805  01AD22  0060  F013  FFE6   	movff	btemp+3,postinc1
 10806  01AD28  EC3B  F0C6         	call	_lp_filter	;wreg free
 10807  01AD2C  D01A               	goto	L11
 10808  01AD2E                     l11549:
 10809                           
 10810                           ; BSR set to: 1
 10811                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 10812  01AD2E  0E00               	movlw	0
 10813  01AD30  6EE6               	movwf	postinc1,c
 10814                           
 10815                           ;stkvar	_i @ sp[(-2)+0]
 10816  01AD32  0EFE               	movlw	-2
 10817  01AD34  50E3               	movf	plusw1,w,c
 10818  01AD36  6EE6               	movwf	postinc1,c
 10819  01AD38  0E00               	movlw	0
 10820  01AD3A  6EE6               	movwf	postinc1,c
 10821                           
 10822                           ;stkvar	_i @ sp[(-4)+0]
 10823  01AD3C  0EFC               	movlw	-4
 10824  01AD3E  50E3               	movf	plusw1,w,c
 10825  01AD40  6EE6               	movwf	postinc1,c
 10826  01AD42  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10827  01AD46  0060  F007  FFE6   	movff	btemp,postinc1
 10828  01AD4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10829  01AD52  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10830  01AD58  0060  F013  FFE6   	movff	btemp+3,postinc1
 10831  01AD5E  EC3B  F0C6         	call	_lp_filter	;wreg free
 10832  01AD62                     L11:
 10833                           
 10834                           ;stkvar	_i @ sp[(-1)+0]
 10835  01AD62  0EFF               	movlw	-1
 10836  01AD64  50E3               	movf	plusw1,w,c
 10837  01AD66  0D04               	mullw	4
 10838  01AD68  0EFF               	movlw	low _C
 10839  01AD6A  24F3               	addwf	243,w,c
 10840  01AD6C  6ED9               	movwf	fsr2l,c
 10841  01AD6E  0E06               	movlw	high _C
 10842  01AD70  20F4               	addwfc	prodh,w,c
 10843  01AD72  6EDA               	movwf	fsr2h,c
 10844  01AD74  0060  F007  FFDE   	movff	btemp,postinc2
 10845  01AD7A  0060  F00B  FFDE   	movff	btemp+1,postinc2
 10846  01AD80  0060  F00F  FFDE   	movff	btemp+2,postinc2
 10847  01AD86  0060  F013  FFDE   	movff	btemp+3,postinc2
 10848                           
 10849                           ;mbmc.c: 61:  } while (++i < 16);
 10850                           ;stkvar	_i @ sp[(-1)+0]
 10851  01AD8C  0EFF               	movlw	-1
 10852  01AD8E  2AE3               	incf	plusw1,f,c
 10853  01AD90  0EFF               	movlw	-1
 10854  01AD92  006F FF8C  F001    	movff	plusw1,btemp
 10855  01AD98  0E0F               	movlw	15
 10856  01AD9A  6401               	cpfsgt	btemp^0,c
 10857  01AD9C  D7A9               	goto	l11545
 10858                           
 10859                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10860  01AD9E  52E5               	movf	postdec1,f,c
 10861  01ADA0  0012               	return		;funcret
 10862  01ADA2                     __end_of_convert_adc_data:
 10863                           	opt callstack 0
 10864                           
 10865 ;; *************** function _clear_hid_pflags *****************
 10866 ;; Defined at:
 10867 ;;		line 67 in file "hid.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  h               2  [STACK] PTR struct H_data
 10870 ;;		 -> H(9), 
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1  [STACK] void 
 10875 ;; Registers used:
 10876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 10877 ;; Tracked objects:
 10878 ;;		On entry : 3E/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; Hardware stack levels required when called:   15
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_main
 10893 ;; This function uses a reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text36
 10897  01B93A                     __ptext36:
 10898                           	opt callstack 0
 10899  01B93A                     _clear_hid_pflags:
 10900                           	opt callstack 15
 10901                           
 10902                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 10903                           ;stkvar	_h @ sp[(0)+-2]
 10904                           
 10905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10906                           ;incstack = 0
 10907  01B93A  0EFE               	movlw	-2
 10908  01B93C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10909  01B942  0EFF               	movlw	-1
 10910  01B944  006F FF8C  F00C    	movff	plusw1,btemp+11
 10911  01B94A  0E03               	movlw	3
 10912  01B94C  240B               	addwf	(btemp+10)^0,w,c
 10913  01B94E  6ED9               	movwf	fsr2l,c
 10914  01B950  0E00               	movlw	0
 10915  01B952  200C               	addwfc	(btemp+11)^0,w,c
 10916  01B954  6EDA               	movwf	fsr2h,c
 10917  01B956  0E00               	movlw	0
 10918  01B958  6EDF               	movwf	indf2,c
 10919                           
 10920                           ;hid.c: 70:  h->enter_p = SW_OFF;
 10921                           ;stkvar	_h @ sp[(0)+-2]
 10922  01B95A  0EFE               	movlw	-2
 10923  01B95C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10924  01B962  0EFF               	movlw	-1
 10925  01B964  006F FF8C  F00C    	movff	plusw1,btemp+11
 10926  01B96A  0E05               	movlw	5
 10927  01B96C  240B               	addwf	(btemp+10)^0,w,c
 10928  01B96E  6ED9               	movwf	fsr2l,c
 10929  01B970  0E00               	movlw	0
 10930  01B972  200C               	addwfc	(btemp+11)^0,w,c
 10931  01B974  6EDA               	movwf	fsr2h,c
 10932  01B976  0E00               	movlw	0
 10933  01B978  6EDF               	movwf	indf2,c
 10934                           
 10935                           ;hid.c: 71:  h->calib_p = SW_OFF;
 10936                           ;stkvar	_h @ sp[(0)+-2]
 10937  01B97A  0EFE               	movlw	-2
 10938  01B97C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10939  01B982  0EFF               	movlw	-1
 10940  01B984  006F FF8C  F00C    	movff	plusw1,btemp+11
 10941  01B98A  0E07               	movlw	7
 10942  01B98C  240B               	addwf	(btemp+10)^0,w,c
 10943  01B98E  6ED9               	movwf	fsr2l,c
 10944  01B990  0E00               	movlw	0
 10945  01B992  200C               	addwfc	(btemp+11)^0,w,c
 10946  01B994  6EDA               	movwf	fsr2h,c
 10947  01B996  0E00               	movlw	0
 10948  01B998  6EDF               	movwf	indf2,c
 10949                           
 10950                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 10951  01B99A  52E5               	movf	postdec1,f,c
 10952  01B99C  52E5               	movf	postdec1,f,c
 10953  01B99E  0012               	return		;funcret
 10954  01B9A0                     __end_of_clear_hid_pflags:
 10955                           	opt callstack 0
 10956                           
 10957 ;; *************** function _check_help *****************
 10958 ;; Defined at:
 10959 ;;		line 40 in file "mconfig.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  flipper         1  [STACK] const _Bool 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  estatus         1    0        _Bool 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1  [STACK] _Bool 
 10966 ;; Registers used:
 10967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10968 ;; Tracked objects:
 10969 ;;		On entry : 3F/1
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10977 ;;Total ram usage:        0 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:   28
 10980 ;; This function calls:
 10981 ;;		_StartTimer
 10982 ;;		_TimerDone
 10983 ;;		_display_help
 10984 ;;		_display_info
 10985 ;;		_get_vterm_ptr
 10986 ;;		_help_button
 10987 ;;		_mode_lamp_bright
 10988 ;;		_mode_lamp_dim
 10989 ;;		_set_display_info
 10990 ;;		_set_temp_display_help
 10991 ;;		_set_vterm
 10992 ;;		_sprintf
 10993 ;;		_update_lcd
 10994 ;;		_vterm_dump
 10995 ;; This function is called by:
 10996 ;;		_main
 10997 ;; This function uses a reentrant model
 10998 ;;
 10999                           
 11000                           	psect	text37
 11001  018860                     __ptext37:
 11002                           	opt callstack 0
 11003  018860                     _check_help:
 11004                           	opt callstack 2
 11005                           
 11006                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 11007                           
 11008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11009                           ;incstack = 0
 11010  018860  EC06  F0E1         	call	_help_button	;wreg free
 11011  018864  5001               	movf	btemp^0,w,c
 11012  018866  B4D8               	btfsc	status,2,c
 11013  018868  D0D0               	goto	l13711
 11014  01886A  ECB1  F0E5         	call	_display_info	;wreg free
 11015  01886E  0401               	decf	btemp^0,w,c
 11016  018870  B4D8               	btfsc	status,2,c
 11017  018872  D0CB               	goto	l13711
 11018                           
 11019                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 11020  018874  0EDC               	movlw	220
 11021  018876  6EE6               	movwf	postinc1,c
 11022  018878  0E05               	movlw	5
 11023  01887A  6EE6               	movwf	postinc1,c
 11024  01887C  0E0B               	movlw	11
 11025  01887E  6EE6               	movwf	postinc1,c
 11026  018880  EC6A  F0E0         	call	_StartTimer	;wreg free
 11027                           
 11028                           ;mconfig.c: 48:   if (V.debug)
 11029  018884  0101               	movlb	1	; () banked
 11030  018886  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 11031                           
 11032                           ; BSR set to: 1
 11033                           ;mconfig.c: 49:    vterm_dump();
 11034  018888  ECD7  F0CE         	call	_vterm_dump	;wreg free
 11035                           
 11036                           ;mconfig.c: 51:   set_vterm(1);
 11037  01888C  0E01               	movlw	1
 11038  01888E  6EE6               	movwf	postinc1,c
 11039  018890  ECB5  F0E4         	call	_set_vterm	;wreg free
 11040                           
 11041                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 11042  018894  ECB1  F0E5         	call	_display_info	;wreg free
 11043  018898  5001               	movf	btemp^0,w,c
 11044  01889A  6EE6               	movwf	postinc1,c
 11045  01889C  EC59  F0E5         	call	_set_temp_display_help	;wreg free
 11046                           
 11047                           ; BSR set to: 1
 11048                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 11049  0188A0  0E01               	movlw	1
 11050  0188A2  6EE6               	movwf	postinc1,c
 11051  0188A4  ECC4  F0E4         	call	_set_display_info	;wreg free
 11052                           
 11053                           ;mconfig.c: 54:   if (flipper) {
 11054                           ;stkvar	_flipper @ sp[(0)+-1]
 11055  0188A8  0EFF               	movlw	-1
 11056  0188AA  50E3               	movf	plusw1,w,c
 11057  0188AC  B4D8               	btfsc	status,2,c
 11058  0188AE  D019               	goto	l13697
 11059                           
 11060                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 11061  0188B0  0EB2               	movlw	low STR_59
 11062  0188B2  6EE6               	movwf	postinc1,c
 11063  0188B4  0EFF               	movlw	high STR_59
 11064  0188B6  6EE6               	movwf	postinc1,c
 11065  0188B8  0E5C               	movlw	low STR_61
 11066  0188BA  6EE6               	movwf	postinc1,c
 11067  0188BC  0EFF               	movlw	high STR_61
 11068  0188BE  6EE6               	movwf	postinc1,c
 11069  0188C0  0E01               	movlw	1
 11070  0188C2  6EE6               	movwf	postinc1,c
 11071  0188C4  0E00               	movlw	0
 11072  0188C6  6EE6               	movwf	postinc1,c
 11073  0188C8  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11074  0188CC  0060  F007  FFE6   	movff	btemp,postinc1
 11075  0188D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11076  0188D8  0E06               	movlw	6
 11077  0188DA  6EE6               	movwf	postinc1,c
 11078  0188DC  EC2A  F0D2         	call	_sprintf	;wreg free
 11079                           
 11080                           ;mconfig.c: 56:   } else {
 11081  0188E0  D018               	goto	l1699
 11082  0188E2                     l13697:
 11083                           
 11084                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 11085  0188E2  0EC8               	movlw	low STR_60
 11086  0188E4  6EE6               	movwf	postinc1,c
 11087  0188E6  0EFF               	movlw	high STR_60
 11088  0188E8  6EE6               	movwf	postinc1,c
 11089  0188EA  0E5C               	movlw	low STR_61
 11090  0188EC  6EE6               	movwf	postinc1,c
 11091  0188EE  0EFF               	movlw	high STR_61
 11092  0188F0  6EE6               	movwf	postinc1,c
 11093  0188F2  0E01               	movlw	1
 11094  0188F4  6EE6               	movwf	postinc1,c
 11095  0188F6  0E00               	movlw	0
 11096  0188F8  6EE6               	movwf	postinc1,c
 11097  0188FA  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11098  0188FE  0060  F007  FFE6   	movff	btemp,postinc1
 11099  018904  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11100  01890A  0E06               	movlw	6
 11101  01890C  6EE6               	movwf	postinc1,c
 11102  01890E  EC2A  F0D2         	call	_sprintf	;wreg free
 11103  018912                     l1699:
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 11107  018912  0101               	movlb	1	; () banked
 11108  018914  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 11109  018916  32E8               	rrcf	wreg,f,c
 11110  018918  32E8               	rrcf	wreg,f,c
 11111  01891A  0B03               	andlw	3
 11112  01891C  0D24               	mullw	36
 11113  01891E  0E12               	movlw	18
 11114  018920  26F3               	addwf	243,f,c
 11115  018922  0E00               	movlw	0
 11116  018924  22F4               	addwfc	244,f,c
 11117  018926  0EDD               	movlw	low _T
 11118  018928  6E0B               	movwf	(btemp+10)^0,c
 11119  01892A  0EF9               	movlw	high _T
 11120  01892C  6E0C               	movwf	(btemp+11)^0,c
 11121  01892E  50F3               	movf	243,w,c
 11122  018930  260B               	addwf	(btemp+10)^0,f,c
 11123  018932  50F4               	movf	244,w,c
 11124  018934  220C               	addwfc	(btemp+11)^0,f,c
 11125  018936  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11126  01893C  0060  F033  FFE6   	movff	btemp+11,postinc1
 11127  018942  0EBE               	movlw	low STR_63
 11128  018944  6EE6               	movwf	postinc1,c
 11129  018946  0EFF               	movlw	high STR_63
 11130  018948  6EE6               	movwf	postinc1,c
 11131  01894A  0E01               	movlw	1
 11132  01894C  6EE6               	movwf	postinc1,c
 11133  01894E  0E01               	movlw	1
 11134  018950  6EE6               	movwf	postinc1,c
 11135  018952  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11136  018956  0060  F007  FFE6   	movff	btemp,postinc1
 11137  01895C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11138  018962  0E06               	movlw	6
 11139  018964  6EE6               	movwf	postinc1,c
 11140  018966  EC2A  F0D2         	call	_sprintf	;wreg free
 11141                           
 11142                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 11143  01896A  0101               	movlb	1	; () banked
 11144  01896C  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 11145  01896E  32E8               	rrcf	wreg,f,c
 11146  018970  32E8               	rrcf	wreg,f,c
 11147  018972  0B03               	andlw	3
 11148  018974  0D24               	mullw	36
 11149  018976  0EDD               	movlw	low _T
 11150  018978  6E0B               	movwf	(btemp+10)^0,c
 11151  01897A  0EF9               	movlw	high _T
 11152  01897C  6E0C               	movwf	(btemp+11)^0,c
 11153  01897E  50F3               	movf	243,w,c
 11154  018980  260B               	addwf	(btemp+10)^0,f,c
 11155  018982  50F4               	movf	244,w,c
 11156  018984  220C               	addwfc	(btemp+11)^0,f,c
 11157  018986  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11158  01898C  0060  F033  FFE6   	movff	btemp+11,postinc1
 11159  018992  0EBE               	movlw	low STR_63
 11160  018994  6EE6               	movwf	postinc1,c
 11161  018996  0EFF               	movlw	high STR_63
 11162  018998  6EE6               	movwf	postinc1,c
 11163  01899A  0E01               	movlw	1
 11164  01899C  6EE6               	movwf	postinc1,c
 11165  01899E  0E02               	movlw	2
 11166  0189A0  6EE6               	movwf	postinc1,c
 11167  0189A2  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11168  0189A6  0060  F007  FFE6   	movff	btemp,postinc1
 11169  0189AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11170  0189B2  0E06               	movlw	6
 11171  0189B4  6EE6               	movwf	postinc1,c
 11172  0189B6  EC2A  F0D2         	call	_sprintf	;wreg free
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;mconfig.c: 61:   V.help_id++;
 11176  0189BA  EE20  F1A2         	lfsr	2,_V+155	;volatile
 11177  0189BE  38DF               	swapf	223,w,c
 11178  0189C0  6E0C               	movwf	(btemp+11)^0,c
 11179  0189C2  320C               	rrcf	(btemp+11)^0,f,c
 11180  0189C4  300C               	rrcf	(btemp+11)^0,w,c
 11181  0189C6  0B03               	andlw	3
 11182  0189C8  6E0C               	movwf	(btemp+11)^0,c
 11183  0189CA  2A0C               	incf	(btemp+11)^0,f,c
 11184  0189CC  3A0C               	swapf	(btemp+11)^0,f,c
 11185  0189CE  360C               	rlcf	(btemp+11)^0,f,c
 11186  0189D0  360C               	rlcf	(btemp+11)^0,f,c
 11187  0189D2  50DF               	movf	223,w,c
 11188  0189D4  180C               	xorwf	(btemp+11)^0,w,c
 11189  0189D6  0B3F               	andlw	-193
 11190  0189D8  180C               	xorwf	(btemp+11)^0,w,c
 11191  0189DA  6EDF               	movwf	223,c
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 11195  0189DC  0EB8               	movlw	184
 11196  0189DE  6EE6               	movwf	postinc1,c
 11197  0189E0  0E0B               	movlw	11
 11198  0189E2  6EE6               	movwf	postinc1,c
 11199  0189E4  0E09               	movlw	9
 11200  0189E6  6EE6               	movwf	postinc1,c
 11201  0189E8  EC6A  F0E0         	call	_StartTimer	;wreg free
 11202                           
 11203                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 11204  0189EC  0EB8               	movlw	184
 11205  0189EE  6EE6               	movwf	postinc1,c
 11206  0189F0  0E0B               	movlw	11
 11207  0189F2  6EE6               	movwf	postinc1,c
 11208  0189F4  0E07               	movlw	7
 11209  0189F6  6EE6               	movwf	postinc1,c
 11210  0189F8  EC6A  F0E0         	call	_StartTimer	;wreg free
 11211                           
 11212                           ;mconfig.c: 64:   mode_lamp_bright();
 11213  0189FC  EC70  F0E5         	call	_mode_lamp_bright	;wreg free
 11214                           
 11215                           ;mconfig.c: 65:   update_lcd(1);
 11216  018A00  0E01               	movlw	1
 11217  018A02  6EE6               	movwf	postinc1,c
 11218  018A04  ECA2  F0D1         	call	_update_lcd	;wreg free
 11219                           
 11220                           ;mconfig.c: 67:  } else {
 11221  018A08  D032               	goto	l1700
 11222  018A0A                     l13711:
 11223                           
 11224                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 11225  018A0A  0E09               	movlw	9
 11226  018A0C  6EE6               	movwf	postinc1,c
 11227  018A0E  ECBF  F0E2         	call	_TimerDone	;wreg free
 11228  018A12  5001               	movf	btemp^0,w,c
 11229  018A14  B4D8               	btfsc	status,2,c
 11230  018A16  D02B               	goto	l1700
 11231                           
 11232                           ;mconfig.c: 69:    set_vterm(0);
 11233  018A18  0E00               	movlw	0
 11234  018A1A  6EE6               	movwf	postinc1,c
 11235  018A1C  ECB5  F0E4         	call	_set_vterm	;wreg free
 11236                           
 11237                           ;mconfig.c: 70:    V.help = 0;
 11238  018A20  0101               	movlb	1	; () banked
 11239  018A22  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 11240                           
 11241                           ; BSR set to: 1
 11242                           ;mconfig.c: 71:    set_display_info(display_help());
 11243  018A24  ECB5  F0E5         	call	_display_help	;wreg free
 11244  018A28  5001               	movf	btemp^0,w,c
 11245  018A2A  6EE6               	movwf	postinc1,c
 11246  018A2C  ECC4  F0E4         	call	_set_display_info	;wreg free
 11247                           
 11248                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 11249  018A30  0060  F673  FFE6   	movff	_V+149,postinc1
 11250  018A36  0060  F677  FFE6   	movff	_V+150,postinc1
 11251  018A3C  ECFD  F0E4         	call	_mode_lamp_dim	;wreg free
 11252                           
 11253                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 11254  018A40  0E0B               	movlw	11
 11255  018A42  6EE6               	movwf	postinc1,c
 11256  018A44  ECBF  F0E2         	call	_TimerDone	;wreg free
 11257  018A48  5001               	movf	btemp^0,w,c
 11258  018A4A  B4D8               	btfsc	status,2,c
 11259  018A4C  D010               	goto	l1700
 11260                           
 11261                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 11262  018A4E  0101               	movlb	1	; () banked
 11263  018A50  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 11264  018A52  A4D8               	btfss	status,2,c
 11265  018A54  D002               	goto	u13170
 11266  018A56  0E01               	movlw	1
 11267  018A58  D001               	goto	u13180
 11268  018A5A                     u13170:
 11269  018A5A  0E00               	movlw	0
 11270  018A5C                     u13180:
 11271  018A5C  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 11272                           
 11273                           ; BSR set to: 1
 11274                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 11275  018A5E  0EDC               	movlw	220
 11276  018A60  6EE6               	movwf	postinc1,c
 11277  018A62  0E05               	movlw	5
 11278  018A64  6EE6               	movwf	postinc1,c
 11279  018A66  0E0B               	movlw	11
 11280  018A68  6EE6               	movwf	postinc1,c
 11281  018A6A  EC6A  F0E0         	call	_StartTimer	;wreg free
 11282  018A6E                     l1700:
 11283                           
 11284                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11285  018A6E  52E5               	movf	postdec1,f,c
 11286  018A70  0012               	return		;funcret
 11287  018A72                     __end_of_check_help:
 11288                           	opt callstack 0
 11289                           
 11290 ;; *************** function _vterm_dump *****************
 11291 ;; Defined at:
 11292 ;;		line 121 in file "mconfig.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;		None
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1  [STACK] void 
 11299 ;; Registers used:
 11300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11301 ;; Tracked objects:
 11302 ;;		On entry : 3F/1
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;Total ram usage:        0 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:   27
 11313 ;; This function calls:
 11314 ;;		_WaitMs
 11315 ;;		_eaDogM_WriteStringAtPos
 11316 ;;		_get_vterm_ptr
 11317 ;;		_sprintf
 11318 ;;		_wait_lcd_done
 11319 ;; This function is called by:
 11320 ;;		_check_help
 11321 ;; This function uses a reentrant model
 11322 ;;
 11323                           
 11324                           	psect	text38
 11325  019DAE                     __ptext38:
 11326                           	opt callstack 0
 11327  019DAE                     _vterm_dump:
 11328                           	opt callstack 2
 11329                           
 11330                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 11331                           
 11332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11333                           ;incstack = 0
 11334  019DAE  0E01               	movlw	1
 11335  019DB0  6EE6               	movwf	postinc1,c
 11336  019DB2  0E00               	movlw	0
 11337  019DB4  6EE6               	movwf	postinc1,c
 11338  019DB6  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11339  019DBA  0060  F007  FFE6   	movff	btemp,postinc1
 11340  019DC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11341  019DC6  0E00               	movlw	0
 11342  019DC8  6EE6               	movwf	postinc1,c
 11343  019DCA  0E00               	movlw	0
 11344  019DCC  6EE6               	movwf	postinc1,c
 11345  019DCE  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11346  019DD2  0060  F007  FFE6   	movff	btemp,postinc1
 11347  019DD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11348  019DDE  0EA3               	movlw	low STR_65
 11349  019DE0  6EE6               	movwf	postinc1,c
 11350  019DE2  0EFF               	movlw	high STR_65
 11351  019DE4  6EE6               	movwf	postinc1,c
 11352  019DE6  0E08               	movlw	low (_V+1)
 11353  019DE8  6EE6               	movwf	postinc1,c
 11354  019DEA  0E01               	movlw	high (_V+1)
 11355  019DEC  6EE6               	movwf	postinc1,c
 11356  019DEE  0E08               	movlw	8
 11357  019DF0  6EE6               	movwf	postinc1,c
 11358  019DF2  EC2A  F0D2         	call	_sprintf	;wreg free
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;mconfig.c: 124:  wait_lcd_done();
 11362  019DF6  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 11366  019DFA  0E08               	movlw	low (_V+1)
 11367  019DFC  6EE6               	movwf	postinc1,c
 11368  019DFE  0E01               	movlw	high (_V+1)
 11369  019E00  6EE6               	movwf	postinc1,c
 11370  019E02  0E00               	movlw	0
 11371  019E04  6EE6               	movwf	postinc1,c
 11372  019E06  0E00               	movlw	0
 11373  019E08  6EE6               	movwf	postinc1,c
 11374  019E0A  EC2E  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11375                           
 11376                           ; BSR set to: 59
 11377                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 11378  019E0E  0E01               	movlw	1
 11379  019E10  6EE6               	movwf	postinc1,c
 11380  019E12  0E01               	movlw	1
 11381  019E14  6EE6               	movwf	postinc1,c
 11382  019E16  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11383  019E1A  0060  F007  FFE6   	movff	btemp,postinc1
 11384  019E20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11385  019E26  0E00               	movlw	0
 11386  019E28  6EE6               	movwf	postinc1,c
 11387  019E2A  0E01               	movlw	1
 11388  019E2C  6EE6               	movwf	postinc1,c
 11389  019E2E  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11390  019E32  0060  F007  FFE6   	movff	btemp,postinc1
 11391  019E38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11392  019E3E  0EA3               	movlw	low STR_65
 11393  019E40  6EE6               	movwf	postinc1,c
 11394  019E42  0EFF               	movlw	high STR_65
 11395  019E44  6EE6               	movwf	postinc1,c
 11396  019E46  0E08               	movlw	low (_V+1)
 11397  019E48  6EE6               	movwf	postinc1,c
 11398  019E4A  0E01               	movlw	high (_V+1)
 11399  019E4C  6EE6               	movwf	postinc1,c
 11400  019E4E  0E08               	movlw	8
 11401  019E50  6EE6               	movwf	postinc1,c
 11402  019E52  EC2A  F0D2         	call	_sprintf	;wreg free
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;mconfig.c: 127:  wait_lcd_done();
 11406  019E56  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 11407                           
 11408                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 11409  019E5A  0E08               	movlw	low (_V+1)
 11410  019E5C  6EE6               	movwf	postinc1,c
 11411  019E5E  0E01               	movlw	high (_V+1)
 11412  019E60  6EE6               	movwf	postinc1,c
 11413  019E62  0E00               	movlw	0
 11414  019E64  6EE6               	movwf	postinc1,c
 11415  019E66  0E01               	movlw	1
 11416  019E68  6EE6               	movwf	postinc1,c
 11417  019E6A  EC2E  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11418                           
 11419                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 11420  019E6E  0E01               	movlw	1
 11421  019E70  6EE6               	movwf	postinc1,c
 11422  019E72  0E02               	movlw	2
 11423  019E74  6EE6               	movwf	postinc1,c
 11424  019E76  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11425  019E7A  0060  F007  FFE6   	movff	btemp,postinc1
 11426  019E80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11427  019E86  0E00               	movlw	0
 11428  019E88  6EE6               	movwf	postinc1,c
 11429  019E8A  0E02               	movlw	2
 11430  019E8C  6EE6               	movwf	postinc1,c
 11431  019E8E  EC3C  F0E2         	call	_get_vterm_ptr	;wreg free
 11432  019E92  0060  F007  FFE6   	movff	btemp,postinc1
 11433  019E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11434  019E9E  0EA3               	movlw	low STR_65
 11435  019EA0  6EE6               	movwf	postinc1,c
 11436  019EA2  0EFF               	movlw	high STR_65
 11437  019EA4  6EE6               	movwf	postinc1,c
 11438  019EA6  0E08               	movlw	low (_V+1)
 11439  019EA8  6EE6               	movwf	postinc1,c
 11440  019EAA  0E01               	movlw	high (_V+1)
 11441  019EAC  6EE6               	movwf	postinc1,c
 11442  019EAE  0E08               	movlw	8
 11443  019EB0  6EE6               	movwf	postinc1,c
 11444  019EB2  EC2A  F0D2         	call	_sprintf	;wreg free
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;mconfig.c: 130:  wait_lcd_done();
 11448  019EB6  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 11452  019EBA  0E08               	movlw	low (_V+1)
 11453  019EBC  6EE6               	movwf	postinc1,c
 11454  019EBE  0E01               	movlw	high (_V+1)
 11455  019EC0  6EE6               	movwf	postinc1,c
 11456  019EC2  0E00               	movlw	0
 11457  019EC4  6EE6               	movwf	postinc1,c
 11458  019EC6  0E02               	movlw	2
 11459  019EC8  6EE6               	movwf	postinc1,c
 11460  019ECA  EC2E  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11461                           
 11462                           ; BSR set to: 59
 11463                           ;mconfig.c: 132:  WaitMs(3000);
 11464  019ECE  0EB8               	movlw	184
 11465  019ED0  6EE6               	movwf	postinc1,c
 11466  019ED2  0E0B               	movlw	11
 11467  019ED4  6EE6               	movwf	postinc1,c
 11468  019ED6  EC59  F0E1         	call	_WaitMs	;wreg free
 11469                           
 11470                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11471  019EDA  0012               	return		;funcret
 11472  019EDC                     __end_of_vterm_dump:
 11473                           	opt callstack 0
 11474                           
 11475 ;; *************** function _sprintf *****************
 11476 ;; Defined at:
 11477 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  s               2  [STACK] PTR unsigned char 
 11480 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 11481 ;;  fmt             2  [STACK] PTR const unsigned char 
 11482 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 11483 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 11484 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 11485 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 11486 ;;		 -> STR_61(19), STR_56(21), STR_55(21), STR_54(21), 
 11487 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 11488 ;;		 -> STR_49(21), STR_48(21), STR_47(20), STR_46(20), 
 11489 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 11490 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11491 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 11492 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11493 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11494 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11495 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11496 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11497 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11498 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11499 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;  f               6  [STACK] struct _IO_FILE
 11502 ;;  ap              2  [STACK] PTR void [1]
 11503 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11504 ;;  ret             2    0        int 
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  2  [STACK] int 
 11507 ;; Registers used:
 11508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/1
 11511 ;;		On exit  : 3F/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11518 ;;Total ram usage:        0 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:   23
 11521 ;; This function calls:
 11522 ;;		_vfprintf
 11523 ;; This function is called by:
 11524 ;;		_main
 11525 ;;		_current_sensor_cal
 11526 ;;		_check_help
 11527 ;;		_vterm_dump
 11528 ;;		_calc_bsoc
 11529 ;; This function uses a reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text39
 11533  01A454                     __ptext39:
 11534                           	opt callstack 0
 11535  01A454                     _sprintf:
 11536                           	opt callstack 0
 11537                           
 11538                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11539  01A454  0E08               	movlw	8
 11540  01A456  26E1               	addwf	fsr1l,f,c
 11541  01A458  0E00               	movlw	0
 11542  01A45A  22E2               	addwfc	fsr1h,f,c
 11543                           
 11544                           ;incstack = 0
 11545 ;; hardware stack exceeded
 11546  01A45C  0EFE               	movlw	254
 11547  01A45E  6E0B               	movwf	(btemp+10)^0,c
 11548  01A460  0EFF               	movlw	255
 11549  01A462  6E0C               	movwf	(btemp+11)^0,c
 11550                           
 11551                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 11552  01A464  0EF5               	movlw	245
 11553  01A466  24E1               	addwf	fsr1l,w,c
 11554  01A468  6E09               	movwf	(btemp+8)^0,c
 11555  01A46A  0EFF               	movlw	255
 11556  01A46C  20E2               	addwfc	fsr1h,w,c
 11557  01A46E  6E0A               	movwf	(btemp+9)^0,c
 11558  01A470  500B               	movf	(btemp+10)^0,w,c
 11559  01A472  2609               	addwf	(btemp+8)^0,f,c
 11560  01A474  500C               	movf	(btemp+11)^0,w,c
 11561  01A476  220A               	addwfc	(btemp+9)^0,f,c
 11562                           
 11563                           ;stkvar	_ap @ sp[(-8)+6]
 11564  01A478  0EFF               	movlw	-1
 11565  01A47A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11566  01A480  0EFE               	movlw	-2
 11567  01A482  0060  F027  FFE3   	movff	btemp+8,plusw1
 11568                           
 11569                           ;stkvar	_s @ sp[(-8)+-3]
 11570  01A488  0EF5               	movlw	-11
 11571  01A48A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11572  01A490  0EF6               	movlw	-10
 11573  01A492  006F FF8C  F00C    	movff	plusw1,btemp+11
 11574                           
 11575                           ;stkvar	_f @ sp[(-8)+0]
 11576  01A498  0EF9               	movlw	-7
 11577  01A49A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11578  01A4A0  0EF8               	movlw	-8
 11579  01A4A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11580                           
 11581                           ;stkvar	_f @ sp[(-8)+0]
 11582  01A4A8  0EFA               	movlw	250
 11583  01A4AA  24E1               	addwf	fsr1l,w,c
 11584  01A4AC  6ED9               	movwf	fsr2l,c
 11585  01A4AE  0EFF               	movlw	255
 11586  01A4B0  20E2               	addwfc	fsr1h,w,c
 11587  01A4B2  6EDA               	movwf	fsr2h,c
 11588  01A4B4  0E00               	movlw	0
 11589  01A4B6  6EDE               	movwf	postinc2,c
 11590  01A4B8  0E00               	movlw	0
 11591  01A4BA  6EDD               	movwf	postdec2,c
 11592                           
 11593                           ;stkvar	_f @ sp[(-8)+0]
 11594  01A4BC  0EFC               	movlw	252
 11595  01A4BE  24E1               	addwf	fsr1l,w,c
 11596  01A4C0  6ED9               	movwf	fsr2l,c
 11597  01A4C2  0EFF               	movlw	255
 11598  01A4C4  20E2               	addwfc	fsr1h,w,c
 11599  01A4C6  6EDA               	movwf	fsr2h,c
 11600  01A4C8  0E00               	movlw	0
 11601  01A4CA  6EDE               	movwf	postinc2,c
 11602  01A4CC  0E00               	movlw	0
 11603  01A4CE  6EDD               	movwf	postdec2,c
 11604                           
 11605                           ;stkvar	_ap @ sp[(-8)+6]
 11606  01A4D0  0EFE               	movlw	254
 11607  01A4D2  24E1               	addwf	fsr1l,w,c
 11608  01A4D4  6E01               	movwf	btemp^0,c
 11609  01A4D6  0EFF               	movlw	255
 11610  01A4D8  20E2               	addwfc	fsr1h,w,c
 11611  01A4DA  6E02               	movwf	(btemp+1)^0,c
 11612  01A4DC  0060  F007  FFE6   	movff	btemp,postinc1
 11613  01A4E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11614                           
 11615                           ;stkvar	_fmt @ sp[(-10)+-5]
 11616  01A4E8  0EF1               	movlw	-15
 11617  01A4EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11618  01A4F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11619                           
 11620                           ;stkvar	_f @ sp[(-12)+0]
 11621  01A4F6  0EF4               	movlw	244
 11622  01A4F8  24E1               	addwf	fsr1l,w,c
 11623  01A4FA  6E01               	movwf	btemp^0,c
 11624  01A4FC  0EFF               	movlw	255
 11625  01A4FE  20E2               	addwfc	fsr1h,w,c
 11626  01A500  6E02               	movwf	(btemp+1)^0,c
 11627  01A502  0060  F007  FFE6   	movff	btemp,postinc1
 11628  01A508  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11629  01A50E  EC83  F0D7         	call	_vfprintf	;wreg free
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;stkvar	_f @ sp[(-8)+0]
 11633  01A512  0EFA               	movlw	250
 11634  01A514  24E1               	addwf	fsr1l,w,c
 11635  01A516  6ED9               	movwf	fsr2l,c
 11636  01A518  0EFF               	movlw	255
 11637  01A51A  20E2               	addwfc	fsr1h,w,c
 11638  01A51C  6EDA               	movwf	fsr2h,c
 11639  01A51E  006F FF78  F00B    	movff	postinc2,btemp+10
 11640  01A524  006F FF74  F00C    	movff	postdec2,btemp+11
 11641                           
 11642                           ;stkvar	_s @ sp[(-8)+-3]
 11643  01A52A  0EF5               	movlw	-11
 11644  01A52C  006F FF8C  F009    	movff	plusw1,btemp+8
 11645  01A532  0EF6               	movlw	-10
 11646  01A534  006F FF8C  F00A    	movff	plusw1,btemp+9
 11647  01A53A  500B               	movf	(btemp+10)^0,w,c
 11648  01A53C  2409               	addwf	(btemp+8)^0,w,c
 11649  01A53E  6ED9               	movwf	fsr2l,c
 11650  01A540  500C               	movf	(btemp+11)^0,w,c
 11651  01A542  200A               	addwfc	(btemp+9)^0,w,c
 11652  01A544  6EDA               	movwf	fsr2h,c
 11653  01A546  0E00               	movlw	0
 11654  01A548  6EDF               	movwf	indf2,c
 11655                           
 11656                           ; BSR set to: 0
 11657                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 11658  01A54A  0EF8               	movlw	248
 11659  01A54C  26E1               	addwf	fsr1l,f,c
 11660  01A54E  0EFF               	movlw	255
 11661  01A550  22E2               	addwfc	fsr1h,f,c
 11662  01A552  52E5               	movf	postdec1,f,c
 11663  01A554  50E7               	movf	indf1,w,c
 11664  01A556  5EE1               	subwf	fsr1l,f,c
 11665  01A558  0E00               	movlw	0
 11666  01A55A  5AE2               	subwfb	fsr1h,f,c
 11667  01A55C  0012               	return		;funcret
 11668  01A55E                     __end_of_sprintf:
 11669                           	opt callstack 0
 11670                           
 11671 ;; *************** function _get_vterm_ptr *****************
 11672 ;; Defined at:
 11673 ;;		line 116 in file "mconfig.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;  line            1  [STACK] const unsigned char 
 11676 ;;  vterm           1  [STACK] const unsigned char 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;		None
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  2  [STACK] PTR unsigned char 
 11681 ;; Registers used:
 11682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/1
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11692 ;;Total ram usage:        0 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; Hardware stack levels required when called:   15
 11695 ;; This function calls:
 11696 ;;		Nothing
 11697 ;; This function is called by:
 11698 ;;		_main
 11699 ;;		_current_sensor_cal
 11700 ;;		_check_help
 11701 ;;		_vterm_dump
 11702 ;; This function uses a reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text40
 11706  01C478                     __ptext40:
 11707                           	opt callstack 0
 11708  01C478                     _get_vterm_ptr:
 11709                           	opt callstack 15
 11710                           
 11711                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 11712                           ;stkvar	_vterm @ sp[(0)+-2]
 11713                           
 11714                           ; BSR set to: 0
 11715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11716                           ;incstack = 0
 11717  01C478  0EFE               	movlw	-2
 11718  01C47A  50E3               	movf	plusw1,w,c
 11719  01C47C  0B03               	andlw	3
 11720  01C47E  0D78               	mullw	120
 11721  01C480  0E2A               	movlw	low _D
 11722  01C482  6E01               	movwf	btemp^0,c
 11723  01C484  0E08               	movlw	high _D
 11724  01C486  6E02               	movwf	(btemp+1)^0,c
 11725  01C488  50F3               	movf	243,w,c
 11726  01C48A  2601               	addwf	btemp^0,f,c
 11727  01C48C  50F4               	movf	244,w,c
 11728  01C48E  2202               	addwfc	(btemp+1)^0,f,c
 11729                           
 11730                           ;stkvar	_line @ sp[(0)+-1]
 11731  01C490  0EFF               	movlw	-1
 11732  01C492  50E3               	movf	plusw1,w,c
 11733  01C494  0B03               	andlw	3
 11734  01C496  0D28               	mullw	40
 11735  01C498  50F3               	movf	243,w,c
 11736  01C49A  2601               	addwf	btemp^0,f,c
 11737  01C49C  50F4               	movf	244,w,c
 11738  01C49E  2202               	addwfc	(btemp+1)^0,f,c
 11739                           
 11740                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 11741  01C4A0  52E5               	movf	postdec1,f,c
 11742  01C4A2  52E5               	movf	postdec1,f,c
 11743  01C4A4  0012               	return		;funcret
 11744  01C4A6                     __end_of_get_vterm_ptr:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _WaitMs *****************
 11748 ;; Defined at:
 11749 ;;		line 32 in file "timers.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;  numMilliseco    2  [STACK] const unsigned short 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1  [STACK] void 
 11756 ;; Registers used:
 11757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/1
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:   16
 11770 ;; This function calls:
 11771 ;;		_StartTimer
 11772 ;;		_TimerDone
 11773 ;; This function is called by:
 11774 ;;		_main
 11775 ;;		_current_sensor_cal
 11776 ;;		_vterm_dump
 11777 ;; This function uses a reentrant model
 11778 ;;
 11779                           
 11780                           	psect	text41
 11781  01C2B2                     __ptext41:
 11782                           	opt callstack 0
 11783  01C2B2                     _WaitMs:
 11784                           	opt callstack 13
 11785                           
 11786                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 11787                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 11788                           
 11789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11790                           ;incstack = 0
 11791  01C2B2  0EFE               	movlw	-2
 11792  01C2B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11793  01C2BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11794  01C2C0  0E00               	movlw	0
 11795  01C2C2  6EE6               	movwf	postinc1,c
 11796  01C2C4  EC6A  F0E0         	call	_StartTimer	;wreg free
 11797                           
 11798                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11799  01C2C8  D005               	goto	l10221
 11800  01C2CA                     l1631:
 11801                           
 11802                           ;timers.c: 36:   __nop();
 11803  01C2CA  F000               	nop	
 11804                           
 11805                           ;timers.c: 37:   __nop();
 11806  01C2CC  F000               	nop	
 11807                           
 11808                           ;timers.c: 38:   __nop();
 11809  01C2CE  F000               	nop	
 11810                           
 11811                           ;timers.c: 39:   __nop();
 11812  01C2D0  F000               	nop	
 11813  01C2D2  0004               	clrwdt		;# 
 11814  01C2D4                     l10221:
 11815                           
 11816                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11817  01C2D4  0E00               	movlw	0
 11818  01C2D6  6EE6               	movwf	postinc1,c
 11819  01C2D8  ECBF  F0E2         	call	_TimerDone	;wreg free
 11820  01C2DC  5001               	movf	btemp^0,w,c
 11821  01C2DE  B4D8               	btfsc	status,2,c
 11822  01C2E0  D7F4               	goto	l1631
 11823                           
 11824                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11825  01C2E2  52E5               	movf	postdec1,f,c
 11826  01C2E4  52E5               	movf	postdec1,f,c
 11827  01C2E6  0012               	return		;funcret
 11828  01C2E8                     __end_of_WaitMs:
 11829                           	opt callstack 0
 11830                           
 11831 ;; *************** function _update_lcd *****************
 11832 ;; Defined at:
 11833 ;;		line 85 in file "mconfig.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;  vterm           1  [STACK] unsigned char 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;		None
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1  [STACK] unsigned char 
 11840 ;; Registers used:
 11841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11851 ;;Total ram usage:        0 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:   27
 11854 ;; This function calls:
 11855 ;;		_eaDogM_WriteStringAtPos
 11856 ;;		_wait_lcd_done
 11857 ;; This function is called by:
 11858 ;;		_main
 11859 ;;		_current_sensor_cal
 11860 ;;		_check_help
 11861 ;; This function uses a reentrant model
 11862 ;;
 11863                           
 11864                           	psect	text42
 11865  01A344                     __ptext42:
 11866                           	opt callstack 0
 11867  01A344                     _update_lcd:
 11868                           	opt callstack 3
 11869                           
 11870                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 11871                           ;stkvar	_vterm @ sp[(0)+-1]
 11872                           
 11873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11874                           ;incstack = 0
 11875  01A344  0EFF               	movlw	-1
 11876  01A346  006F FF8C  F001    	movff	plusw1,btemp
 11877  01A34C  0E03               	movlw	3
 11878  01A34E  1601               	andwf	btemp^0,f,c
 11879  01A350  0EFF               	movlw	-1
 11880  01A352  0060  F007  FFE3   	movff	btemp,plusw1
 11881                           
 11882                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 11883  01A358  EE22  F20A         	lfsr	2,_D+480
 11884  01A35C  A0DF               	btfss	indf2,0,c
 11885  01A35E  D004               	goto	l13361
 11886                           
 11887                           ;stkvar	_vterm @ sp[(0)+-1]
 11888  01A360  0EFF               	movlw	-1
 11889  01A362  50E3               	movf	plusw1,w,c
 11890  01A364  B4D8               	btfsc	status,2,c
 11891  01A366  D074               	goto	l1707
 11892  01A368                     l13361:
 11893                           
 11894                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 11895                           ;stkvar	_vterm @ sp[(0)+-1]
 11896  01A368  0EFF               	movlw	-1
 11897  01A36A  50E3               	movf	plusw1,w,c
 11898  01A36C  0D78               	mullw	120
 11899  01A36E  0E3E               	movlw	low (_D+20)
 11900  01A370  24F3               	addwf	243,w,c
 11901  01A372  6ED9               	movwf	fsr2l,c
 11902  01A374  0E08               	movlw	high (_D+20)
 11903  01A376  20F4               	addwfc	prodh,w,c
 11904  01A378  6EDA               	movwf	fsr2h,c
 11905  01A37A  0E00               	movlw	0
 11906  01A37C  6EDF               	movwf	indf2,c
 11907                           
 11908                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 11909                           ;stkvar	_vterm @ sp[(0)+-1]
 11910  01A37E  0EFF               	movlw	-1
 11911  01A380  50E3               	movf	plusw1,w,c
 11912  01A382  0D78               	mullw	120
 11913  01A384  0E66               	movlw	low (_D+60)
 11914  01A386  24F3               	addwf	243,w,c
 11915  01A388  6ED9               	movwf	fsr2l,c
 11916  01A38A  0E08               	movlw	high (_D+60)
 11917  01A38C  20F4               	addwfc	prodh,w,c
 11918  01A38E  6EDA               	movwf	fsr2h,c
 11919  01A390  0E00               	movlw	0
 11920  01A392  6EDF               	movwf	indf2,c
 11921                           
 11922                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 11923                           ;stkvar	_vterm @ sp[(0)+-1]
 11924  01A394  0EFF               	movlw	-1
 11925  01A396  50E3               	movf	plusw1,w,c
 11926  01A398  0D78               	mullw	120
 11927  01A39A  0E8E               	movlw	low (_D+100)
 11928  01A39C  24F3               	addwf	243,w,c
 11929  01A39E  6ED9               	movwf	fsr2l,c
 11930  01A3A0  0E08               	movlw	high (_D+100)
 11931  01A3A2  20F4               	addwfc	prodh,w,c
 11932  01A3A4  6EDA               	movwf	fsr2h,c
 11933  01A3A6  0E00               	movlw	0
 11934  01A3A8  6EDF               	movwf	indf2,c
 11935                           
 11936                           ;mconfig.c: 95:  wait_lcd_done();
 11937  01A3AA  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 11941                           ;stkvar	_vterm @ sp[(0)+-1]
 11942  01A3AE  0EFF               	movlw	-1
 11943  01A3B0  50E3               	movf	plusw1,w,c
 11944  01A3B2  0D78               	mullw	120
 11945  01A3B4  0E2A               	movlw	low _D
 11946  01A3B6  6E0B               	movwf	(btemp+10)^0,c
 11947  01A3B8  0E08               	movlw	high _D
 11948  01A3BA  6E0C               	movwf	(btemp+11)^0,c
 11949  01A3BC  50F3               	movf	243,w,c
 11950  01A3BE  260B               	addwf	(btemp+10)^0,f,c
 11951  01A3C0  50F4               	movf	244,w,c
 11952  01A3C2  220C               	addwfc	(btemp+11)^0,f,c
 11953  01A3C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11954  01A3CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 11955  01A3D0  0E00               	movlw	0
 11956  01A3D2  6EE6               	movwf	postinc1,c
 11957  01A3D4  0E00               	movlw	0
 11958  01A3D6  6EE6               	movwf	postinc1,c
 11959  01A3D8  EC2E  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11960                           
 11961                           ; BSR set to: 59
 11962                           ;mconfig.c: 97:  wait_lcd_done();
 11963  01A3DC  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 11967                           ;stkvar	_vterm @ sp[(0)+-1]
 11968  01A3E0  0EFF               	movlw	-1
 11969  01A3E2  50E3               	movf	plusw1,w,c
 11970  01A3E4  0D78               	mullw	120
 11971  01A3E6  0E2A               	movlw	low _D
 11972  01A3E8  6E0B               	movwf	(btemp+10)^0,c
 11973  01A3EA  0E08               	movlw	high _D
 11974  01A3EC  6E0C               	movwf	(btemp+11)^0,c
 11975  01A3EE  0E28               	movlw	40
 11976  01A3F0  260B               	addwf	(btemp+10)^0,f,c
 11977  01A3F2  0E00               	movlw	0
 11978  01A3F4  220C               	addwfc	(btemp+11)^0,f,c
 11979  01A3F6  50F3               	movf	243,w,c
 11980  01A3F8  260B               	addwf	(btemp+10)^0,f,c
 11981  01A3FA  50F4               	movf	244,w,c
 11982  01A3FC  220C               	addwfc	(btemp+11)^0,f,c
 11983  01A3FE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11984  01A404  0060  F033  FFE6   	movff	btemp+11,postinc1
 11985  01A40A  0E00               	movlw	0
 11986  01A40C  6EE6               	movwf	postinc1,c
 11987  01A40E  0E01               	movlw	1
 11988  01A410  6EE6               	movwf	postinc1,c
 11989  01A412  EC2E  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11990                           
 11991                           ; BSR set to: 59
 11992                           ;mconfig.c: 99:  wait_lcd_done();
 11993  01A416  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 11997                           ;stkvar	_vterm @ sp[(0)+-1]
 11998  01A41A  0EFF               	movlw	-1
 11999  01A41C  50E3               	movf	plusw1,w,c
 12000  01A41E  0D78               	mullw	120
 12001  01A420  0E2A               	movlw	low _D
 12002  01A422  6E0B               	movwf	(btemp+10)^0,c
 12003  01A424  0E08               	movlw	high _D
 12004  01A426  6E0C               	movwf	(btemp+11)^0,c
 12005  01A428  0E50               	movlw	80
 12006  01A42A  260B               	addwf	(btemp+10)^0,f,c
 12007  01A42C  0E00               	movlw	0
 12008  01A42E  220C               	addwfc	(btemp+11)^0,f,c
 12009  01A430  50F3               	movf	243,w,c
 12010  01A432  260B               	addwf	(btemp+10)^0,f,c
 12011  01A434  50F4               	movf	244,w,c
 12012  01A436  220C               	addwfc	(btemp+11)^0,f,c
 12013  01A438  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12014  01A43E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12015  01A444  0E00               	movlw	0
 12016  01A446  6EE6               	movwf	postinc1,c
 12017  01A448  0E02               	movlw	2
 12018  01A44A  6EE6               	movwf	postinc1,c
 12019  01A44C  EC2E  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 12020  01A450                     l1707:
 12021                           
 12022                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12023  01A450  52E5               	movf	postdec1,f,c
 12024  01A452  0012               	return		;funcret
 12025  01A454                     __end_of_update_lcd:
 12026                           	opt callstack 0
 12027                           
 12028 ;; *************** function _eaDogM_WriteStringAtPos *****************
 12029 ;; Defined at:
 12030 ;;		line 195 in file "eadog.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;  r               1  [STACK] const unsigned char 
 12033 ;;  c               1  [STACK] const unsigned char 
 12034 ;;  strPtr          2  [STACK] PTR unsigned char 
 12035 ;;		 -> D.lcd(480), D(482), V(192), 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;  row             1  [STACK] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1  [STACK] void 
 12040 ;; Registers used:
 12041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12042 ;; Tracked objects:
 12043 ;;		On entry : 3F/0
 12044 ;;		On exit  : 3F/3B
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12051 ;;Total ram usage:        0 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:   26
 12054 ;; This function calls:
 12055 ;;		_eaDogM_WriteString
 12056 ;;		_send_lcd_cmd_dma
 12057 ;;		_send_lcd_data_dma
 12058 ;;		_wait_lcd_done
 12059 ;;		_wdtdelay
 12060 ;; This function is called by:
 12061 ;;		_update_lcd
 12062 ;;		_vterm_dump
 12063 ;; This function uses a reentrant model
 12064 ;;
 12065                           
 12066                           	psect	text43
 12067  01B05C                     __ptext43:
 12068                           	opt callstack 0
 12069  01B05C                     _eaDogM_WriteStringAtPos:
 12070                           	opt callstack 0
 12071                           
 12072                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12073  01B05C  52E6               	movf	postinc1,f,c
 12074                           
 12075                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 12076                           
 12077                           ;incstack = 0
 12078  01B05E  D014               	goto	l13337
 12079  01B060                     l13325:
 12080                           
 12081                           ;eadog.c: 201:   row = 0x40;
 12082                           ;stkvar	_row @ sp[(-1)+0]
 12083  01B060  0EFF               	movlw	-1
 12084  01B062  6AE3               	clrf	plusw1,c
 12085  01B064  8CE3               	bsf	plusw1,6,c
 12086                           
 12087                           ;eadog.c: 202:   break;
 12088  01B066  D026               	goto	l13339
 12089  01B068                     l13327:
 12090                           
 12091                           ;eadog.c: 204:   row = 0x14;
 12092                           ;stkvar	_row @ sp[(-1)+0]
 12093  01B068  0EFF               	movlw	-1
 12094  01B06A  6AE3               	clrf	plusw1,c
 12095  01B06C  84E3               	bsf	plusw1,2,c
 12096  01B06E  88E3               	bsf	plusw1,4,c	;indir
 12097                           
 12098                           ;eadog.c: 205:   break;
 12099  01B070  D021               	goto	l13339
 12100  01B072                     l13329:
 12101                           
 12102                           ;eadog.c: 207:   row = 0x54;
 12103  01B072  0E54               	movlw	84
 12104  01B074  6E0C               	movwf	(btemp+11)^0,c
 12105                           
 12106                           ;stkvar	_row @ sp[(-1)+0]
 12107  01B076  0EFF               	movlw	-1
 12108  01B078  0060  F033  FFE3   	movff	btemp+11,plusw1
 12109                           
 12110                           ;eadog.c: 208:   break;
 12111  01B07E  D01A               	goto	l13339
 12112  01B080                     l13331:
 12113                           
 12114                           ;eadog.c: 210:   row = 0x1;
 12115                           ;stkvar	_row @ sp[(-1)+0]
 12116  01B080  0EFF               	movlw	-1
 12117  01B082  6AE3               	clrf	plusw1,c
 12118  01B084  2AE3               	incf	plusw1,f,c
 12119                           
 12120                           ;eadog.c: 211:   break;
 12121  01B086  D016               	goto	l13339
 12122  01B088                     l13337:
 12123                           
 12124                           ;stkvar	_r @ sp[(-1)+-1]
 12125  01B088  0EFE               	movlw	-2
 12126  01B08A  50E3               	movf	plusw1,w,c
 12127  01B08C  6E0B               	movwf	(btemp+10)^0,c
 12128  01B08E  6A0C               	clrf	(btemp+11)^0,c
 12129                           
 12130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12131                           ; Switch size 1, requested type "simple"
 12132                           ; Number of cases is 1, Range of values is 0 to 0
 12133                           ; switch strategies available:
 12134                           ; Name         Instructions Cycles
 12135                           ; simple_byte            4     3 (average)
 12136                           ;	Chosen strategy is simple_byte
 12137  01B090  500C               	movf	(btemp+11)^0,w,c
 12138  01B092  0A00               	xorlw	0	; case 0
 12139  01B094  A4D8               	btfss	status,2,c
 12140  01B096  D7E4               	goto	l13325
 12141                           
 12142                           ; Switch size 1, requested type "simple"
 12143                           ; Number of cases is 4, Range of values is 0 to 3
 12144                           ; switch strategies available:
 12145                           ; Name         Instructions Cycles
 12146                           ; simple_byte           13     7 (average)
 12147                           ;	Chosen strategy is simple_byte
 12148  01B098  500B               	movf	(btemp+10)^0,w,c
 12149  01B09A  0A00               	xorlw	0	; case 0
 12150  01B09C  B4D8               	btfsc	status,2,c
 12151  01B09E  D7E0               	goto	l13325
 12152  01B0A0  0A01               	xorlw	1	; case 1
 12153  01B0A2  B4D8               	btfsc	status,2,c
 12154  01B0A4  D7E1               	goto	l13327
 12155  01B0A6  0A03               	xorlw	3	; case 2
 12156  01B0A8  B4D8               	btfsc	status,2,c
 12157  01B0AA  D7E3               	goto	l13329
 12158  01B0AC  0A01               	xorlw	1	; case 3
 12159  01B0AE  B4D8               	btfsc	status,2,c
 12160  01B0B0  D7E7               	goto	l13331
 12161  01B0B2  D7D6               	goto	l13325
 12162  01B0B4                     l13339:
 12163                           
 12164                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 12165  01B0B4  0E45               	movlw	69
 12166  01B0B6  6EE6               	movwf	postinc1,c
 12167  01B0B8  ECA6  F0E4         	call	_send_lcd_cmd_dma	;wreg free
 12168                           
 12169                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 12170                           ;stkvar	_c @ sp[(-1)+-2]
 12171  01B0BC  0EFD               	movlw	-3
 12172  01B0BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 12173                           
 12174                           ;stkvar	_row @ sp[(-1)+0]
 12175  01B0C4  0EFF               	movlw	-1
 12176  01B0C6  50E3               	movf	plusw1,w,c
 12177  01B0C8  240C               	addwf	(btemp+11)^0,w,c
 12178  01B0CA  6EE6               	movwf	postinc1,c
 12179  01B0CC  ECC7  F0DE         	call	_send_lcd_data_dma	;wreg free
 12180                           
 12181                           ; BSR set to: 59
 12182                           ;eadog.c: 218:  wait_lcd_done();
 12183  01B0D0  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;eadog.c: 219:  wdtdelay(8);
 12187  01B0D4  0E08               	movlw	8
 12188  01B0D6  6EE6               	movwf	postinc1,c
 12189  01B0D8  0E00               	movlw	0
 12190  01B0DA  6EE6               	movwf	postinc1,c
 12191  01B0DC  0E00               	movlw	0
 12192  01B0DE  6EE6               	movwf	postinc1,c
 12193  01B0E0  0E00               	movlw	0
 12194  01B0E2  6EE6               	movwf	postinc1,c
 12195  01B0E4  ECF4  F0DD         	call	_wdtdelay	;wreg free
 12196                           
 12197                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 12198                           ;stkvar	_strPtr @ sp[(-1)+-4]
 12199  01B0E8  0EFB               	movlw	-5
 12200  01B0EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12201  01B0F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12202  01B0F6  EC82  F0D8         	call	_eaDogM_WriteString	;wreg free
 12203                           
 12204                           ; BSR set to: 59
 12205                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 12206  01B0FA  0EFB               	movlw	251
 12207  01B0FC  26E1               	addwf	fsr1l,f,c
 12208  01B0FE  0EFF               	movlw	255
 12209  01B100  22E2               	addwfc	fsr1h,f,c
 12210  01B102  0012               	return		;funcret
 12211  01B104                     __end_of_eaDogM_WriteStringAtPos:
 12212                           	opt callstack 0
 12213                           
 12214 ;; *************** function _send_lcd_cmd_dma *****************
 12215 ;; Defined at:
 12216 ;;		line 171 in file "eadog.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;  strPtr          1  [STACK] const unsigned char 
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;		None
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1  [STACK] void 
 12223 ;; Registers used:
 12224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/3D
 12227 ;;		On exit  : 3F/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12234 ;;Total ram usage:        0 bytes
 12235 ;; Hardware stack levels used:    1
 12236 ;; Hardware stack levels required when called:   25
 12237 ;; This function calls:
 12238 ;;		_send_lcd_data_dma
 12239 ;;		_wait_lcd_done
 12240 ;; This function is called by:
 12241 ;;		_eaDogM_WriteStringAtPos
 12242 ;;		_eaDogM_WriteCommand
 12243 ;; This function uses a reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text44
 12247  01C94C                     __ptext44:
 12248                           	opt callstack 0
 12249  01C94C                     _send_lcd_cmd_dma:
 12250                           	opt callstack 3
 12251                           
 12252                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 12253                           
 12254                           ; BSR set to: 59
 12255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12256                           ;incstack = 0
 12257  01C94C  0EFE               	movlw	254
 12258  01C94E  6EE6               	movwf	postinc1,c
 12259  01C950  ECC7  F0DE         	call	_send_lcd_data_dma	;wreg free
 12260                           
 12261                           ; BSR set to: 59
 12262                           ;eadog.c: 174:  wait_lcd_done();
 12263  01C954  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 12267                           ;stkvar	_strPtr @ sp[(0)+-1]
 12268  01C958  0EFF               	movlw	-1
 12269  01C95A  50E3               	movf	plusw1,w,c
 12270  01C95C  6EE6               	movwf	postinc1,c
 12271  01C95E  ECC7  F0DE         	call	_send_lcd_data_dma	;wreg free
 12272                           
 12273                           ;eadog.c: 176:  wait_lcd_done();
 12274  01C962  EC44  F0E4         	call	_wait_lcd_done	;wreg free
 12275                           
 12276                           ; BSR set to: 0
 12277                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 12278  01C966  52E5               	movf	postdec1,f,c
 12279  01C968  0012               	return		;funcret
 12280  01C96A                     __end_of_send_lcd_cmd_dma:
 12281                           	opt callstack 0
 12282                           
 12283 ;; *************** function _wait_lcd_done *****************
 12284 ;; Defined at:
 12285 ;;		line 444 in file "eadog.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;		None
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  1  [STACK] void 
 12292 ;; Registers used:
 12293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/1
 12296 ;;		On exit  : 3F/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12303 ;;Total ram usage:        0 bytes
 12304 ;; Hardware stack levels used:    1
 12305 ;; Hardware stack levels required when called:   16
 12306 ;; This function calls:
 12307 ;;		_wdtdelay
 12308 ;; This function is called by:
 12309 ;;		_main
 12310 ;;		_send_lcd_cmd_dma
 12311 ;;		_eaDogM_WriteStringAtPos
 12312 ;;		_update_lcd
 12313 ;;		_vterm_dump
 12314 ;; This function uses a reentrant model
 12315 ;;
 12316                           
 12317                           	psect	text45
 12318  01C888                     __ptext45:
 12319                           	opt callstack 0
 12320  01C888                     _wait_lcd_done:
 12321                           	opt callstack 14
 12322                           
 12323                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 12324                           
 12325                           ; BSR set to: 0
 12326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12327                           ;incstack = 0
 12328  01C888  0101               	movlb	1	; () banked
 12329  01C88A  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 12330  01C88C  D7FD               	goto	_wait_lcd_done
 12331  01C88E                     u8900:
 12332  01C88E  013D               	movlb	61	; () banked
 12333  01C890  AB17               	btfss	23,5,b	;volatile
 12334  01C892  D7FD               	goto	u8900
 12335                           
 12336                           ; BSR set to: 61
 12337                           ;eadog.c: 448:  wdtdelay(50);
 12338  01C894  0E32               	movlw	50
 12339  01C896  6EE6               	movwf	postinc1,c
 12340  01C898  0E00               	movlw	0
 12341  01C89A  6EE6               	movwf	postinc1,c
 12342  01C89C  0E00               	movlw	0
 12343  01C89E  6EE6               	movwf	postinc1,c
 12344  01C8A0  0E00               	movlw	0
 12345  01C8A2  6EE6               	movwf	postinc1,c
 12346  01C8A4  ECF4  F0DD         	call	_wdtdelay	;wreg free
 12347                           
 12348                           ; BSR set to: 0
 12349                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 12350  01C8A8  0012               	return		;funcret
 12351  01C8AA                     __end_of_wait_lcd_done:
 12352                           	opt callstack 0
 12353                           
 12354 ;; *************** function _wdtdelay *****************
 12355 ;; Defined at:
 12356 ;;		line 23 in file "eadog.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;  delay           4  [STACK] const unsigned long 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1  [STACK] void 
 12363 ;; Registers used:
 12364 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12365 ;; Tracked objects:
 12366 ;;		On entry : 2/3D
 12367 ;;		On exit  : 3F/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;Total ram usage:        0 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; Hardware stack levels required when called:   15
 12377 ;; This function calls:
 12378 ;;		Nothing
 12379 ;; This function is called by:
 12380 ;;		_init_display
 12381 ;;		_send_lcd_data
 12382 ;;		_send_lcd_cmd
 12383 ;;		_send_lcd_cmd_long
 12384 ;;		_eaDogM_WriteStringAtPos
 12385 ;;		_wait_lcd_done
 12386 ;; This function uses a reentrant model
 12387 ;;
 12388                           
 12389                           	psect	text46
 12390  01BBE8                     __ptext46:
 12391                           	opt callstack 0
 12392  01BBE8                     _wdtdelay:
 12393                           	opt callstack 14
 12394                           
 12395                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 12396                           
 12397                           ; BSR set to: 0
 12398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12399                           ;incstack = 0
 12400  01BBE8  0100               	movlb	0	; () banked
 12401  01BBEA  6B78               	clrf	wdtdelay@dcount& (0+255),b
 12402  01BBEC  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 12403  01BBEE  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 12404  01BBF0  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 12405  01BBF2                     l1484:
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;eadog.c: 28:   __nop();
 12409  01BBF2  F000               	nop	
 12410  01BBF4  0004               	clrwdt		;# 
 12411                           
 12412                           ;eadog.c: 30:  };
 12413  01BBF6  0E01               	movlw	1
 12414  01BBF8  0100               	movlb	0	; () banked
 12415  01BBFA  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 12416  01BBFC  0E00               	movlw	0
 12417  01BBFE  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 12418  01BC00  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 12419  01BC02  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;stkvar	_delay @ sp[(0)+-4]
 12423  01BC04  0EFC               	movlw	-4
 12424  01BC06  006F FF8C  F001    	movff	plusw1,btemp
 12425  01BC0C  5178               	movf	wdtdelay@dcount& (0+255),w,b
 12426  01BC0E  5C01               	subwf	btemp^0,w,c
 12427  01BC10  0EFD               	movlw	-3
 12428  01BC12  006F FF8C  F001    	movff	plusw1,btemp
 12429  01BC18  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 12430  01BC1A  5801               	subwfb	btemp^0,w,c
 12431  01BC1C  0EFE               	movlw	-2
 12432  01BC1E  006F FF8C  F001    	movff	plusw1,btemp
 12433  01BC24  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 12434  01BC26  5801               	subwfb	btemp^0,w,c
 12435  01BC28  0EFF               	movlw	-1
 12436  01BC2A  006F FF8C  F001    	movff	plusw1,btemp
 12437  01BC30  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 12438  01BC32  5801               	subwfb	btemp^0,w,c
 12439  01BC34  B0D8               	btfsc	status,0,c
 12440  01BC36  D7DD               	goto	l1484
 12441                           
 12442                           ; BSR set to: 0
 12443                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 12444  01BC38  52E5               	movf	postdec1,f,c
 12445  01BC3A  52E5               	movf	postdec1,f,c
 12446  01BC3C  52E5               	movf	postdec1,f,c
 12447  01BC3E  52E5               	movf	postdec1,f,c
 12448  01BC40  0012               	return		;funcret
 12449  01BC42                     __end_of_wdtdelay:
 12450                           	opt callstack 0
 12451                           
 12452 ;; *************** function _send_lcd_data_dma *****************
 12453 ;; Defined at:
 12454 ;;		line 182 in file "eadog.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;  strPtr          1  [STACK] const unsigned char 
 12457 ;; Auto vars:     Size  Location     Type
 12458 ;;		None
 12459 ;; Return value:  Size  Location     Type
 12460 ;;                  1  [STACK] void 
 12461 ;; Registers used:
 12462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12463 ;; Tracked objects:
 12464 ;;		On entry : 0/0
 12465 ;;		On exit  : 3F/3B
 12466 ;;		Unchanged: 0/0
 12467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12472 ;;Total ram usage:        0 bytes
 12473 ;; Hardware stack levels used:    1
 12474 ;; Hardware stack levels required when called:   24
 12475 ;; This function calls:
 12476 ;;		_printf
 12477 ;;		_ringBufS_flush
 12478 ;;		_start_lcd
 12479 ;;		_wait_lcd_set
 12480 ;; This function is called by:
 12481 ;;		_send_lcd_cmd_dma
 12482 ;;		_eaDogM_WriteStringAtPos
 12483 ;; This function uses a reentrant model
 12484 ;;
 12485                           
 12486                           	psect	text47
 12487  01BD8E                     __ptext47:
 12488                           	opt callstack 0
 12489  01BD8E                     _send_lcd_data_dma:
 12490                           	opt callstack 4
 12491                           
 12492                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 12493                           
 12494                           ; BSR set to: 0
 12495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12496                           ;incstack = 0
 12497  01BD8E  ECC0  F0E5         	call	_wait_lcd_set	;wreg free
 12498                           
 12499                           ; BSR set to: 1
 12500                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 12501  01BD92  0E00               	movlw	0
 12502  01BD94  6EE6               	movwf	postinc1,c
 12503  01BD96  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12504  01BD9C  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12505  01BDA2  EC72  F0D9         	call	_ringBufS_flush	;wreg free
 12506  01BDA6  94BC               	bcf	188,2,c	;volatile
 12507                           
 12508                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 12509  01BDA8  013B               	movlb	59	; () banked
 12510  01BDAA  9FFC               	bcf	252,7,b	;volatile
 12511                           
 12512                           ; BSR set to: 59
 12513                           ;eadog.c: 189:  DMA1SSZ = 1;
 12514  01BDAC  0E00               	movlw	0
 12515  01BDAE  6FF8               	movwf	248,b	;volatile
 12516  01BDB0  0E01               	movlw	1
 12517  01BDB2  6FF7               	movwf	247,b	;volatile
 12518                           
 12519                           ; BSR set to: 59
 12520                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 12521  01BDB4  8FFC               	bsf	252,7,b	;volatile
 12522                           
 12523                           ; BSR set to: 59
 12524                           ;eadog.c: 191:  printf("%c", strPtr);
 12525                           ;stkvar	_strPtr @ sp[(0)+-1]
 12526  01BDB6  0EFF               	movlw	-1
 12527  01BDB8  50E3               	movf	plusw1,w,c
 12528  01BDBA  6EE6               	movwf	postinc1,c
 12529  01BDBC  0E00               	movlw	0
 12530  01BDBE  6EE6               	movwf	postinc1,c
 12531  01BDC0  0EF8               	movlw	low STR_58
 12532  01BDC2  6EE6               	movwf	postinc1,c
 12533  01BDC4  0EFF               	movlw	high STR_58
 12534  01BDC6  6EE6               	movwf	postinc1,c
 12535  01BDC8  0E04               	movlw	4
 12536  01BDCA  6EE6               	movwf	postinc1,c
 12537  01BDCC  EC35  F0DD         	call	_printf	;wreg free
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;eadog.c: 192:  start_lcd();
 12541  01BDD0  ECC3  F0E5         	call	_start_lcd	;wreg free
 12542                           
 12543                           ; BSR set to: 59
 12544                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12545  01BDD4  52E5               	movf	postdec1,f,c
 12546  01BDD6  0012               	return		;funcret
 12547  01BDD8                     __end_of_send_lcd_data_dma:
 12548                           	opt callstack 0
 12549                           
 12550 ;; *************** function _eaDogM_WriteString *****************
 12551 ;; Defined at:
 12552 ;;		line 151 in file "eadog.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;  strPtr          2  [STACK] PTR unsigned char 
 12555 ;;		 -> D.lcd(480), D(482), V(192), 
 12556 ;; Auto vars:     Size  Location     Type
 12557 ;;		None
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  1  [STACK] void 
 12560 ;; Registers used:
 12561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12562 ;; Tracked objects:
 12563 ;;		On entry : 3F/0
 12564 ;;		On exit  : 3F/3B
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12571 ;;Total ram usage:        0 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:   24
 12574 ;; This function calls:
 12575 ;;		_printf
 12576 ;;		_ringBufS_flush
 12577 ;;		_start_lcd
 12578 ;;		_strlen
 12579 ;;		_wait_lcd_set
 12580 ;; This function is called by:
 12581 ;;		_eaDogM_WriteStringAtPos
 12582 ;; This function uses a reentrant model
 12583 ;;
 12584                           
 12585                           	psect	text48
 12586  01B104                     __ptext48:
 12587                           	opt callstack 0
 12588  01B104                     _eaDogM_WriteString:
 12589                           	opt callstack 4
 12590                           
 12591                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 12592                           
 12593                           ; BSR set to: 59
 12594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12595                           ;incstack = 0
 12596  01B104  ECC0  F0E5         	call	_wait_lcd_set	;wreg free
 12597                           
 12598                           ; BSR set to: 1
 12599                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 12600  01B108  0E00               	movlw	0
 12601  01B10A  6EE6               	movwf	postinc1,c
 12602  01B10C  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12603  01B112  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12604  01B118  EC72  F0D9         	call	_ringBufS_flush	;wreg free
 12605  01B11C  94BC               	bcf	188,2,c	;volatile
 12606                           
 12607                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 12608                           ;stkvar	_strPtr @ sp[(0)+-2]
 12609  01B11E  0EFE               	movlw	-2
 12610  01B120  006F FF8F FFE6     	movff	plusw1,postinc1
 12611  01B126  006F FF8F FFE6     	movff	plusw1,postinc1
 12612  01B12C  ECD5  F0D8         	call	_strlen	;wreg free
 12613  01B130  5002               	movf	(btemp+1)^0,w,c
 12614  01B132  E104               	bnz	u12740
 12615  01B134  0E41               	movlw	65
 12616  01B136  5C01               	subwf	btemp^0,w,c
 12617  01B138  A0D8               	btfss	status,0,c
 12618  01B13A  D010               	goto	l13281
 12619  01B13C                     u12740:
 12620                           
 12621                           ;stkvar	_strPtr @ sp[(0)+-2]
 12622  01B13C  0EFE               	movlw	-2
 12623  01B13E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12624  01B144  0EFF               	movlw	-1
 12625  01B146  006F FF8C  F00C    	movff	plusw1,btemp+11
 12626  01B14C  0E40               	movlw	64
 12627  01B14E  240B               	addwf	(btemp+10)^0,w,c
 12628  01B150  6ED9               	movwf	fsr2l,c
 12629  01B152  0E00               	movlw	0
 12630  01B154  200C               	addwfc	(btemp+11)^0,w,c
 12631  01B156  6EDA               	movwf	fsr2h,c
 12632  01B158  0E00               	movlw	0
 12633  01B15A  6EDF               	movwf	indf2,c
 12634  01B15C                     l13281:
 12635                           
 12636                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 12637  01B15C  013B               	movlb	59	; () banked
 12638  01B15E  9FFC               	bcf	252,7,b	;volatile
 12639                           
 12640                           ; BSR set to: 59
 12641                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 12642                           ;stkvar	_strPtr @ sp[(0)+-2]
 12643  01B160  0EFE               	movlw	-2
 12644  01B162  006F FF8F FFE6     	movff	plusw1,postinc1
 12645  01B168  006F FF8F FFE6     	movff	plusw1,postinc1
 12646  01B16E  ECD5  F0D8         	call	_strlen	;wreg free
 12647  01B172  0060  F007  FBF7   	movff	btemp,15351	;volatile
 12648  01B178  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 12649                           
 12650                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 12651  01B17E  013B               	movlb	59	; () banked
 12652  01B180  8FFC               	bsf	252,7,b	;volatile
 12653                           
 12654                           ; BSR set to: 59
 12655                           ;eadog.c: 161:  printf("%s", strPtr);
 12656                           ;stkvar	_strPtr @ sp[(0)+-2]
 12657  01B182  0EFE               	movlw	-2
 12658  01B184  006F FF8F FFE6     	movff	plusw1,postinc1
 12659  01B18A  006F FF8F FFE6     	movff	plusw1,postinc1
 12660  01B190  0EFB               	movlw	low STR_57
 12661  01B192  6EE6               	movwf	postinc1,c
 12662  01B194  0EFF               	movlw	high STR_57
 12663  01B196  6EE6               	movwf	postinc1,c
 12664  01B198  0E04               	movlw	4
 12665  01B19A  6EE6               	movwf	postinc1,c
 12666  01B19C  EC35  F0DD         	call	_printf	;wreg free
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;eadog.c: 162:  start_lcd();
 12670  01B1A0  ECC3  F0E5         	call	_start_lcd	;wreg free
 12671                           
 12672                           ; BSR set to: 59
 12673                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 12674  01B1A4  52E5               	movf	postdec1,f,c
 12675  01B1A6  52E5               	movf	postdec1,f,c
 12676  01B1A8  0012               	return		;funcret
 12677  01B1AA                     __end_of_eaDogM_WriteString:
 12678                           	opt callstack 0
 12679                           
 12680 ;; *************** function _wait_lcd_set *****************
 12681 ;; Defined at:
 12682 ;;		line 434 in file "eadog.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;		None
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;		None
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1  [STACK] void 
 12689 ;; Registers used:
 12690 ;;		None
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 3F/1
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12700 ;;Total ram usage:        0 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:   15
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_eaDogM_WriteString
 12707 ;;		_send_lcd_data_dma
 12708 ;; This function uses a reentrant model
 12709 ;;
 12710                           
 12711                           	psect	text49
 12712  01CB80                     __ptext49:
 12713                           	opt callstack 0
 12714  01CB80                     _wait_lcd_set:
 12715                           	opt callstack 12
 12716                           
 12717                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 12718                           
 12719                           ; BSR set to: 59
 12720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12721                           ;incstack = 0
 12722  01CB80  0101               	movlb	1	; () banked
 12723  01CB82  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 12724                           
 12725                           ; BSR set to: 1
 12726                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 12727  01CB84  0012               	return		;funcret
 12728  01CB86                     __end_of_wait_lcd_set:
 12729                           	opt callstack 0
 12730                           
 12731 ;; *************** function _start_lcd *****************
 12732 ;; Defined at:
 12733 ;;		line 429 in file "eadog.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;		None
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;		None
 12738 ;; Return value:  Size  Location     Type
 12739 ;;                  1  [STACK] void 
 12740 ;; Registers used:
 12741 ;;		None
 12742 ;; Tracked objects:
 12743 ;;		On entry : 3F/0
 12744 ;;		On exit  : 3F/3B
 12745 ;;		Unchanged: 0/0
 12746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12751 ;;Total ram usage:        0 bytes
 12752 ;; Hardware stack levels used:    1
 12753 ;; Hardware stack levels required when called:   15
 12754 ;; This function calls:
 12755 ;;		Nothing
 12756 ;; This function is called by:
 12757 ;;		_eaDogM_WriteString
 12758 ;;		_send_lcd_data_dma
 12759 ;; This function uses a reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text50
 12763  01CB86                     __ptext50:
 12764                           	opt callstack 0
 12765  01CB86                     _start_lcd:
 12766                           	opt callstack 12
 12767                           
 12768                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 12769                           
 12770                           ; BSR set to: 1
 12771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12772                           ;incstack = 0
 12773  01CB86  013B               	movlb	59	; () banked
 12774  01CB88  8DFC               	bsf	252,6,b	;volatile
 12775                           
 12776                           ; BSR set to: 59
 12777                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 12778  01CB8A  0012               	return		;funcret
 12779  01CB8C                     __end_of_start_lcd:
 12780                           	opt callstack 0
 12781                           
 12782 ;; *************** function _ringBufS_flush *****************
 12783 ;; Defined at:
 12784 ;;		line 76 in file "ringbufs.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12787 ;;		 -> ring_buf1(67), 
 12788 ;;  clearBuffer     1  [STACK] const char 
 12789 ;; Auto vars:     Size  Location     Type
 12790 ;;		None
 12791 ;; Return value:  Size  Location     Type
 12792 ;;                  1  [STACK] void 
 12793 ;; Registers used:
 12794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12795 ;; Tracked objects:
 12796 ;;		On entry : 3F/1
 12797 ;;		On exit  : 0/0
 12798 ;;		Unchanged: 0/0
 12799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12804 ;;Total ram usage:        0 bytes
 12805 ;; Hardware stack levels used:    1
 12806 ;; Hardware stack levels required when called:   16
 12807 ;; This function calls:
 12808 ;;		_memset
 12809 ;; This function is called by:
 12810 ;;		_eaDogM_WriteString
 12811 ;;		_send_lcd_data_dma
 12812 ;; This function uses a reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text51
 12816  01B2E4                     __ptext51:
 12817                           	opt callstack 0
 12818  01B2E4                     _ringBufS_flush:
 12819                           	opt callstack 11
 12820                           
 12821                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 12822                           ;stkvar	__this @ sp[(0)+-2]
 12823                           
 12824                           ; BSR set to: 59
 12825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12826                           ;incstack = 0
 12827  01B2E4  0EFE               	movlw	-2
 12828  01B2E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 12829  01B2EC  0EFF               	movlw	-1
 12830  01B2EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 12831  01B2F4  0E42               	movlw	66
 12832  01B2F6  240B               	addwf	(btemp+10)^0,w,c
 12833  01B2F8  6ED9               	movwf	fsr2l,c
 12834  01B2FA  0E00               	movlw	0
 12835  01B2FC  200C               	addwfc	(btemp+11)^0,w,c
 12836  01B2FE  6EDA               	movwf	fsr2h,c
 12837  01B300  0E00               	movlw	0
 12838  01B302  6EDF               	movwf	indf2,c
 12839                           
 12840                           ;ringbufs.c: 79:  _this->head = 0;
 12841                           ;stkvar	__this @ sp[(0)+-2]
 12842  01B304  0EFE               	movlw	-2
 12843  01B306  006F FF8C  F00B    	movff	plusw1,btemp+10
 12844  01B30C  0EFF               	movlw	-1
 12845  01B30E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12846  01B314  0E40               	movlw	64
 12847  01B316  240B               	addwf	(btemp+10)^0,w,c
 12848  01B318  6ED9               	movwf	fsr2l,c
 12849  01B31A  0E00               	movlw	0
 12850  01B31C  200C               	addwfc	(btemp+11)^0,w,c
 12851  01B31E  6EDA               	movwf	fsr2h,c
 12852  01B320  0E00               	movlw	0
 12853  01B322  6EDF               	movwf	indf2,c
 12854                           
 12855                           ;ringbufs.c: 80:  _this->tail = 0;
 12856                           ;stkvar	__this @ sp[(0)+-2]
 12857  01B324  0EFE               	movlw	-2
 12858  01B326  006F FF8C  F00B    	movff	plusw1,btemp+10
 12859  01B32C  0EFF               	movlw	-1
 12860  01B32E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12861  01B334  0E41               	movlw	65
 12862  01B336  240B               	addwf	(btemp+10)^0,w,c
 12863  01B338  6ED9               	movwf	fsr2l,c
 12864  01B33A  0E00               	movlw	0
 12865  01B33C  200C               	addwfc	(btemp+11)^0,w,c
 12866  01B33E  6EDA               	movwf	fsr2h,c
 12867  01B340  0E00               	movlw	0
 12868  01B342  6EDF               	movwf	indf2,c
 12869                           
 12870                           ;ringbufs.c: 81:  if (clearBuffer) {
 12871                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 12872  01B344  0EFD               	movlw	-3
 12873  01B346  50E3               	movf	plusw1,w,c
 12874  01B348  B4D8               	btfsc	status,2,c
 12875  01B34A  D011               	goto	l1616
 12876                           
 12877                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 12878  01B34C  0E40               	movlw	64
 12879  01B34E  6EE6               	movwf	postinc1,c
 12880  01B350  0E00               	movlw	0
 12881  01B352  6EE6               	movwf	postinc1,c
 12882  01B354  0E00               	movlw	0
 12883  01B356  6EE6               	movwf	postinc1,c
 12884  01B358  0E00               	movlw	0
 12885  01B35A  6EE6               	movwf	postinc1,c
 12886                           
 12887                           ;stkvar	__this @ sp[(-4)+-2]
 12888  01B35C  0EFA               	movlw	-6
 12889  01B35E  006F FF8F FFE6     	movff	plusw1,postinc1
 12890  01B364  006F FF8F FFE6     	movff	plusw1,postinc1
 12891  01B36A  EC14  F0B9         	call	_memset	;wreg free
 12892  01B36E                     l1616:
 12893                           
 12894                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 12895  01B36E  52E5               	movf	postdec1,f,c
 12896  01B370  52E5               	movf	postdec1,f,c
 12897  01B372  52E5               	movf	postdec1,f,c
 12898  01B374  0012               	return		;funcret
 12899  01B376                     __end_of_ringBufS_flush:
 12900                           	opt callstack 0
 12901                           
 12902 ;; *************** function _memset *****************
 12903 ;; Defined at:
 12904 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;  dest            2  [STACK] PTR void 
 12907 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12908 ;;  c               2  [STACK] int 
 12909 ;;  n               2  [STACK] unsigned int 
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;  s               2  [STACK] PTR unsigned char 
 12912 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12913 ;;  k               2  [STACK] unsigned int 
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  2  [STACK] PTR void 
 12916 ;; Registers used:
 12917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/1
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12927 ;;Total ram usage:        0 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:   15
 12930 ;; This function calls:
 12931 ;;		Nothing
 12932 ;; This function is called by:
 12933 ;;		_ringBufS_init
 12934 ;;		_ringBufS_flush
 12935 ;; This function uses a reentrant model
 12936 ;;
 12937                           
 12938                           	psect	text52
 12939  017228                     __ptext52:
 12940                           	opt callstack 0
 12941  017228                     _memset:
 12942                           	opt callstack 0
 12943                           
 12944                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12945  017228  52E6               	movf	postinc1,f,c
 12946  01722A  52E6               	movf	postinc1,f,c
 12947  01722C  52E6               	movf	postinc1,f,c
 12948  01722E  52E6               	movf	postinc1,f,c
 12949                           
 12950                           ;stkvar	_dest @ sp[(-4)+-2]
 12951                           
 12952                           ;incstack = 0
 12953  017230  0EFA               	movlw	-6
 12954  017232  006F FF8C  F00B    	movff	plusw1,btemp+10
 12955  017238  0EFB               	movlw	-5
 12956  01723A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12957                           
 12958                           ;stkvar	_s @ sp[(-4)+0]
 12959  017240  0EFD               	movlw	-3
 12960  017242  0060  F033  FFE3   	movff	btemp+11,plusw1
 12961  017248  0EFC               	movlw	-4
 12962  01724A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12963                           
 12964                           ;stkvar	_n @ sp[(-4)+-6]
 12965  017250  0EF6               	movlw	-10
 12966  017252  006F FF8C  F001    	movff	plusw1,btemp
 12967  017258  0EF7               	movlw	-9
 12968  01725A  50E3               	movf	plusw1,w,c
 12969  01725C  1001               	iorwf	btemp^0,w,c
 12970  01725E  B4D8               	btfsc	status,2,c
 12971  017260  D154               	goto	u11290
 12972                           
 12973                           ;stkvar	_c @ sp[(-4)+-4]
 12974                           ;stkvar	_s @ sp[(-4)+0]
 12975  017262  0EFC               	movlw	-4
 12976  017264  006F FF8F FFD9     	movff	plusw1,fsr2l
 12977  01726A  0EFD               	movlw	-3
 12978  01726C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12979  017272  0EF8               	movlw	-8
 12980  017274  006F FF8F FFDF     	movff	plusw1,indf2
 12981                           
 12982                           ;stkvar	_c @ sp[(-4)+-4]
 12983                           ;stkvar	_n @ sp[(-4)+-6]
 12984                           ;stkvar	_s @ sp[(-4)+0]
 12985  01727A  0EFC               	movlw	-4
 12986  01727C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12987  017282  0EFD               	movlw	-3
 12988  017284  006F FF8C  F00C    	movff	plusw1,btemp+11
 12989  01728A  0EF6               	movlw	-10
 12990  01728C  50E3               	movf	plusw1,w,c
 12991  01728E  260B               	addwf	(btemp+10)^0,f,c
 12992  017290  0EF7               	movlw	-9
 12993  017292  50E3               	movf	plusw1,w,c
 12994  017294  220C               	addwfc	(btemp+11)^0,f,c
 12995  017296  0EFF               	movlw	255
 12996  017298  240B               	addwf	(btemp+10)^0,w,c
 12997  01729A  6ED9               	movwf	fsr2l,c
 12998  01729C  0EFF               	movlw	255
 12999  01729E  200C               	addwfc	(btemp+11)^0,w,c
 13000  0172A0  6EDA               	movwf	fsr2h,c
 13001  0172A2  0EF8               	movlw	-8
 13002  0172A4  006F FF8F FFDF     	movff	plusw1,indf2
 13003                           
 13004                           ;stkvar	_n @ sp[(-4)+-6]
 13005  0172AA  0EF7               	movlw	-9
 13006  0172AC  50E3               	movf	plusw1,w,c
 13007  0172AE  E108               	bnz	l12433
 13008  0172B0  0EF6               	movlw	-10
 13009  0172B2  006F FF8C  F001    	movff	plusw1,btemp
 13010  0172B8  0E03               	movlw	3
 13011  0172BA  5E01               	subwf	btemp^0,f,c
 13012  0172BC  A0D8               	btfss	status,0,c
 13013  0172BE  D125               	goto	u11290
 13014  0172C0                     l12433:
 13015                           
 13016                           ;stkvar	_c @ sp[(-4)+-4]
 13017                           ;stkvar	_s @ sp[(-4)+0]
 13018  0172C0  0EFC               	movlw	-4
 13019  0172C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13020  0172C8  0EFD               	movlw	-3
 13021  0172CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13022  0172D0  0E01               	movlw	1
 13023  0172D2  240B               	addwf	(btemp+10)^0,w,c
 13024  0172D4  6ED9               	movwf	fsr2l,c
 13025  0172D6  0E00               	movlw	0
 13026  0172D8  200C               	addwfc	(btemp+11)^0,w,c
 13027  0172DA  6EDA               	movwf	fsr2h,c
 13028  0172DC  0EF8               	movlw	-8
 13029  0172DE  006F FF8F FFDF     	movff	plusw1,indf2
 13030                           
 13031                           ;stkvar	_c @ sp[(-4)+-4]
 13032                           ;stkvar	_s @ sp[(-4)+0]
 13033  0172E4  0EFC               	movlw	-4
 13034  0172E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 13035  0172EC  0EFD               	movlw	-3
 13036  0172EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13037  0172F4  0E02               	movlw	2
 13038  0172F6  240B               	addwf	(btemp+10)^0,w,c
 13039  0172F8  6ED9               	movwf	fsr2l,c
 13040  0172FA  0E00               	movlw	0
 13041  0172FC  200C               	addwfc	(btemp+11)^0,w,c
 13042  0172FE  6EDA               	movwf	fsr2h,c
 13043  017300  0EF8               	movlw	-8
 13044  017302  006F FF8F FFDF     	movff	plusw1,indf2
 13045                           
 13046                           ;stkvar	_c @ sp[(-4)+-4]
 13047                           ;stkvar	_n @ sp[(-4)+-6]
 13048                           ;stkvar	_s @ sp[(-4)+0]
 13049  017308  0EFC               	movlw	-4
 13050  01730A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13051  017310  0EFD               	movlw	-3
 13052  017312  006F FF8C  F00C    	movff	plusw1,btemp+11
 13053  017318  0EF6               	movlw	-10
 13054  01731A  50E3               	movf	plusw1,w,c
 13055  01731C  260B               	addwf	(btemp+10)^0,f,c
 13056  01731E  0EF7               	movlw	-9
 13057  017320  50E3               	movf	plusw1,w,c
 13058  017322  220C               	addwfc	(btemp+11)^0,f,c
 13059  017324  0EFE               	movlw	254
 13060  017326  240B               	addwf	(btemp+10)^0,w,c
 13061  017328  6ED9               	movwf	fsr2l,c
 13062  01732A  0EFF               	movlw	255
 13063  01732C  200C               	addwfc	(btemp+11)^0,w,c
 13064  01732E  6EDA               	movwf	fsr2h,c
 13065  017330  0EF8               	movlw	-8
 13066  017332  006F FF8F FFDF     	movff	plusw1,indf2
 13067                           
 13068                           ;stkvar	_c @ sp[(-4)+-4]
 13069                           ;stkvar	_n @ sp[(-4)+-6]
 13070                           ;stkvar	_s @ sp[(-4)+0]
 13071  017338  0EFC               	movlw	-4
 13072  01733A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13073  017340  0EFD               	movlw	-3
 13074  017342  006F FF8C  F00C    	movff	plusw1,btemp+11
 13075  017348  0EF6               	movlw	-10
 13076  01734A  50E3               	movf	plusw1,w,c
 13077  01734C  260B               	addwf	(btemp+10)^0,f,c
 13078  01734E  0EF7               	movlw	-9
 13079  017350  50E3               	movf	plusw1,w,c
 13080  017352  220C               	addwfc	(btemp+11)^0,f,c
 13081  017354  0EFD               	movlw	253
 13082  017356  240B               	addwf	(btemp+10)^0,w,c
 13083  017358  6ED9               	movwf	fsr2l,c
 13084  01735A  0EFF               	movlw	255
 13085  01735C  200C               	addwfc	(btemp+11)^0,w,c
 13086  01735E  6EDA               	movwf	fsr2h,c
 13087  017360  0EF8               	movlw	-8
 13088  017362  006F FF8F FFDF     	movff	plusw1,indf2
 13089                           
 13090                           ;stkvar	_n @ sp[(-4)+-6]
 13091  017368  0EF7               	movlw	-9
 13092  01736A  50E3               	movf	plusw1,w,c
 13093  01736C  E108               	bnz	l12439
 13094  01736E  0EF6               	movlw	-10
 13095  017370  006F FF8C  F001    	movff	plusw1,btemp
 13096  017376  0E07               	movlw	7
 13097  017378  5E01               	subwf	btemp^0,f,c
 13098  01737A  A0D8               	btfss	status,0,c
 13099  01737C  D0C6               	goto	u11290
 13100  01737E                     l12439:
 13101                           
 13102                           ;stkvar	_c @ sp[(-4)+-4]
 13103                           ;stkvar	_s @ sp[(-4)+0]
 13104  01737E  0EFC               	movlw	-4
 13105  017380  006F FF8C  F00B    	movff	plusw1,btemp+10
 13106  017386  0EFD               	movlw	-3
 13107  017388  006F FF8C  F00C    	movff	plusw1,btemp+11
 13108  01738E  0E03               	movlw	3
 13109  017390  240B               	addwf	(btemp+10)^0,w,c
 13110  017392  6ED9               	movwf	fsr2l,c
 13111  017394  0E00               	movlw	0
 13112  017396  200C               	addwfc	(btemp+11)^0,w,c
 13113  017398  6EDA               	movwf	fsr2h,c
 13114  01739A  0EF8               	movlw	-8
 13115  01739C  006F FF8F FFDF     	movff	plusw1,indf2
 13116                           
 13117                           ;stkvar	_c @ sp[(-4)+-4]
 13118                           ;stkvar	_n @ sp[(-4)+-6]
 13119                           ;stkvar	_s @ sp[(-4)+0]
 13120  0173A2  0EFC               	movlw	-4
 13121  0173A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13122  0173AA  0EFD               	movlw	-3
 13123  0173AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13124  0173B2  0EF6               	movlw	-10
 13125  0173B4  50E3               	movf	plusw1,w,c
 13126  0173B6  260B               	addwf	(btemp+10)^0,f,c
 13127  0173B8  0EF7               	movlw	-9
 13128  0173BA  50E3               	movf	plusw1,w,c
 13129  0173BC  220C               	addwfc	(btemp+11)^0,f,c
 13130  0173BE  0EFC               	movlw	252
 13131  0173C0  240B               	addwf	(btemp+10)^0,w,c
 13132  0173C2  6ED9               	movwf	fsr2l,c
 13133  0173C4  0EFF               	movlw	255
 13134  0173C6  200C               	addwfc	(btemp+11)^0,w,c
 13135  0173C8  6EDA               	movwf	fsr2h,c
 13136  0173CA  0EF8               	movlw	-8
 13137  0173CC  006F FF8F FFDF     	movff	plusw1,indf2
 13138                           
 13139                           ;stkvar	_n @ sp[(-4)+-6]
 13140  0173D2  0EF7               	movlw	-9
 13141  0173D4  50E3               	movf	plusw1,w,c
 13142  0173D6  E108               	bnz	l12445
 13143  0173D8  0EF6               	movlw	-10
 13144  0173DA  006F FF8C  F001    	movff	plusw1,btemp
 13145  0173E0  0E09               	movlw	9
 13146  0173E2  5E01               	subwf	btemp^0,f,c
 13147  0173E4  A0D8               	btfss	status,0,c
 13148  0173E6  D091               	goto	u11290
 13149  0173E8                     l12445:
 13150                           
 13151                           ;stkvar	_s @ sp[(-4)+0]
 13152  0173E8  0EFC               	movlw	-4
 13153  0173EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 13154  0173F0  1E0B               	comf	(btemp+10)^0,f,c
 13155  0173F2  0EFD               	movlw	-3
 13156  0173F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13157  0173FA  1E0C               	comf	(btemp+11)^0,f,c
 13158  0173FC  2A0B               	incf	(btemp+10)^0,f,c
 13159  0173FE  B4D8               	btfsc	status,2,c
 13160  017400  2A0C               	incf	(btemp+11)^0,f,c
 13161  017402  0E03               	movlw	3
 13162  017404  160B               	andwf	(btemp+10)^0,f,c
 13163  017406  0E00               	movlw	0
 13164  017408  160C               	andwf	(btemp+11)^0,f,c
 13165                           
 13166                           ;stkvar	_k @ sp[(-4)+2]
 13167  01740A  0EFE               	movlw	-2
 13168  01740C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13169  017412  0EFF               	movlw	-1
 13170  017414  0060  F033  FFE3   	movff	btemp+11,plusw1
 13171                           
 13172                           ;stkvar	_k @ sp[(-4)+2]
 13173                           ;stkvar	_s @ sp[(-4)+0]
 13174  01741A  0EFC               	movlw	-4
 13175  01741C  50E3               	movf	plusw1,w,c
 13176  01741E  6E01               	movwf	btemp^0,c
 13177  017420  0EFE               	movlw	-2
 13178  017422  50E3               	movf	plusw1,w,c
 13179  017424  2601               	addwf	btemp^0,f,c
 13180  017426  0EFC               	movlw	-4
 13181  017428  0060  F007  FFE3   	movff	btemp,plusw1
 13182  01742E  0EFD               	movlw	-3
 13183  017430  50E3               	movf	plusw1,w,c
 13184  017432  6E01               	movwf	btemp^0,c
 13185  017434  0EFF               	movlw	-1
 13186  017436  50E3               	movf	plusw1,w,c
 13187  017438  2201               	addwfc	btemp^0,f,c
 13188  01743A  0EFD               	movlw	-3
 13189  01743C  0060  F007  FFE3   	movff	btemp,plusw1
 13190                           
 13191                           ;stkvar	_k @ sp[(-4)+2]
 13192                           ;stkvar	_n @ sp[(-4)+-6]
 13193  017442  0EF6               	movlw	-10
 13194  017444  50E3               	movf	plusw1,w,c
 13195  017446  6E01               	movwf	btemp^0,c
 13196  017448  0EFE               	movlw	-2
 13197  01744A  50E3               	movf	plusw1,w,c
 13198  01744C  5E01               	subwf	btemp^0,f,c
 13199  01744E  0EF6               	movlw	-10
 13200  017450  0060  F007  FFE3   	movff	btemp,plusw1
 13201  017456  0EF7               	movlw	-9
 13202  017458  50E3               	movf	plusw1,w,c
 13203  01745A  6E01               	movwf	btemp^0,c
 13204  01745C  0EFF               	movlw	-1
 13205  01745E  50E3               	movf	plusw1,w,c
 13206  017460  5A01               	subwfb	btemp^0,f,c
 13207  017462  0EF7               	movlw	-9
 13208  017464  0060  F007  FFE3   	movff	btemp,plusw1
 13209  01746A  0EFC               	movlw	252
 13210  01746C  6E0B               	movwf	(btemp+10)^0,c
 13211  01746E  0EFF               	movlw	255
 13212  017470  6E0C               	movwf	(btemp+11)^0,c
 13213                           
 13214                           ;stkvar	_n @ sp[(-4)+-6]
 13215  017472  0EF6               	movlw	-10
 13216  017474  006F FF8C  F001    	movff	plusw1,btemp
 13217  01747A  500B               	movf	(btemp+10)^0,w,c
 13218  01747C  1601               	andwf	btemp^0,f,c
 13219  01747E  0EF6               	movlw	-10
 13220  017480  0060  F007  FFE3   	movff	btemp,plusw1
 13221  017486  0EF7               	movlw	-9
 13222  017488  006F FF8C  F001    	movff	plusw1,btemp
 13223  01748E  500C               	movf	(btemp+11)^0,w,c
 13224  017490  1601               	andwf	btemp^0,f,c
 13225  017492  0EF7               	movlw	-9
 13226  017494  D02E               	goto	L12
 13227  017496                     l12453:
 13228                           
 13229                           ;stkvar	_c @ sp[(-4)+-4]
 13230                           ;stkvar	_s @ sp[(-4)+0]
 13231  017496  0EFC               	movlw	-4
 13232  017498  006F FF8F FFD9     	movff	plusw1,fsr2l
 13233  01749E  0EFD               	movlw	-3
 13234  0174A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13235  0174A6  0EF8               	movlw	-8
 13236  0174A8  006F FF8F FFDF     	movff	plusw1,indf2
 13237                           
 13238                           ;stkvar	_n @ sp[(-4)+-6]
 13239  0174AE  0EF6               	movlw	-10
 13240  0174B0  006F FF8C  F001    	movff	plusw1,btemp
 13241  0174B6  0E01               	movlw	1
 13242  0174B8  5E01               	subwf	btemp^0,f,c
 13243  0174BA  0EF6               	movlw	-10
 13244  0174BC  0060  F007  FFE3   	movff	btemp,plusw1
 13245  0174C2  0EF7               	movlw	-9
 13246  0174C4  006F FF8C  F001    	movff	plusw1,btemp
 13247  0174CA  0E00               	movlw	0
 13248  0174CC  5A01               	subwfb	btemp^0,f,c
 13249  0174CE  0EF7               	movlw	-9
 13250  0174D0  0060  F007  FFE3   	movff	btemp,plusw1
 13251                           
 13252                           ;stkvar	_s @ sp[(-4)+0]
 13253  0174D6  0EFC               	movlw	-4
 13254  0174D8  50E3               	movf	plusw1,w,c
 13255  0174DA  0F01               	addlw	1
 13256  0174DC  6E01               	movwf	btemp^0,c
 13257  0174DE  0EFC               	movlw	-4
 13258  0174E0  0060  F007  FFE3   	movff	btemp,plusw1
 13259  0174E6  6A01               	clrf	btemp^0,c
 13260  0174E8  0EFD               	movlw	-3
 13261  0174EA  50E3               	movf	plusw1,w,c
 13262  0174EC  2001               	addwfc	btemp^0,w,c
 13263  0174EE  6E01               	movwf	btemp^0,c
 13264  0174F0  0EFD               	movlw	-3
 13265  0174F2                     L12:
 13266  0174F2  0060  F007  FFE3   	movff	btemp,plusw1
 13267                           
 13268                           ;stkvar	_n @ sp[(-4)+-6]
 13269  0174F8  0EF6               	movlw	-10
 13270  0174FA  006F FF8C  F001    	movff	plusw1,btemp
 13271  017500  0EF7               	movlw	-9
 13272  017502  50E3               	movf	plusw1,w,c
 13273  017504  1001               	iorwf	btemp^0,w,c
 13274  017506  A4D8               	btfss	status,2,c
 13275  017508  D7C6               	goto	l12453
 13276  01750A                     u11290:
 13277                           
 13278                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 13279  01750A  0EF6               	movlw	246
 13280  01750C  26E1               	addwf	fsr1l,f,c
 13281  01750E  0EFF               	movlw	255
 13282  017510  22E2               	addwfc	fsr1h,f,c
 13283  017512  0012               	return		;funcret
 13284  017514                     __end_of_memset:
 13285                           	opt callstack 0
 13286                           
 13287 ;; *************** function _printf *****************
 13288 ;; Defined at:
 13289 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;  fmt             2  [STACK] PTR const unsigned char 
 13292 ;;		 -> STR_58(3), STR_57(3), 
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;  ap              2  [STACK] PTR void [1]
 13295 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13296 ;;  ret             2    0        int 
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  2  [STACK] int 
 13299 ;; Registers used:
 13300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13301 ;; Tracked objects:
 13302 ;;		On entry : 3F/3B
 13303 ;;		On exit  : 3F/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13310 ;;Total ram usage:        0 bytes
 13311 ;; Hardware stack levels used:    1
 13312 ;; Hardware stack levels required when called:   23
 13313 ;; This function calls:
 13314 ;;		_vfprintf
 13315 ;; This function is called by:
 13316 ;;		_eaDogM_WriteString
 13317 ;;		_send_lcd_data_dma
 13318 ;; This function uses a reentrant model
 13319 ;;
 13320                           
 13321                           	psect	text53
 13322  01BA6A                     __ptext53:
 13323                           	opt callstack 0
 13324  01BA6A                     _printf:
 13325                           	opt callstack 0
 13326                           
 13327                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13328  01BA6A  52E6               	movf	postinc1,f,c
 13329  01BA6C  52E6               	movf	postinc1,f,c
 13330                           
 13331                           ;stkvar	?_printf @ sp[(-2)+-3]
 13332                           
 13333                           ;incstack = 0
 13334  01BA6E  0EFB               	movlw	251
 13335  01BA70  24E1               	addwf	fsr1l,w,c
 13336  01BA72  6E0B               	movwf	(btemp+10)^0,c
 13337  01BA74  0EFF               	movlw	255
 13338  01BA76  20E2               	addwfc	fsr1h,w,c
 13339  01BA78  6E0C               	movwf	(btemp+11)^0,c
 13340                           
 13341                           ;stkvar	_ap @ sp[(-2)+0]
 13342  01BA7A  0EFF               	movlw	-1
 13343  01BA7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13344  01BA82  0EFE               	movlw	-2
 13345  01BA84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13346                           
 13347                           ;stkvar	_ap @ sp[(-2)+0]
 13348  01BA8A  0EFE               	movlw	254
 13349  01BA8C  24E1               	addwf	fsr1l,w,c
 13350  01BA8E  6E01               	movwf	btemp^0,c
 13351  01BA90  0EFF               	movlw	255
 13352  01BA92  20E2               	addwfc	fsr1h,w,c
 13353  01BA94  6E02               	movwf	(btemp+1)^0,c
 13354  01BA96  0060  F007  FFE6   	movff	btemp,postinc1
 13355  01BA9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13356                           
 13357                           ;stkvar	_fmt @ sp[(-4)+-3]
 13358  01BAA2  0EF9               	movlw	-7
 13359  01BAA4  006F FF8F FFE6     	movff	plusw1,postinc1
 13360  01BAAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13361  01BAB0  0E00               	movlw	0
 13362  01BAB2  6EE6               	movwf	postinc1,c
 13363  01BAB4  0E00               	movlw	0
 13364  01BAB6  6EE6               	movwf	postinc1,c
 13365  01BAB8  EC83  F0D7         	call	_vfprintf	;wreg free
 13366                           
 13367                           ; BSR set to: 0
 13368                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 13369  01BABC  52E5               	movf	postdec1,f,c
 13370  01BABE  52E5               	movf	postdec1,f,c
 13371  01BAC0  52E5               	movf	postdec1,f,c
 13372  01BAC2  50E7               	movf	indf1,w,c
 13373  01BAC4  5EE1               	subwf	fsr1l,f,c
 13374  01BAC6  0E00               	movlw	0
 13375  01BAC8  5AE2               	subwfb	fsr1h,f,c
 13376  01BACA  0012               	return		;funcret
 13377  01BACC                     __end_of_printf:
 13378                           	opt callstack 0
 13379                           
 13380 ;; *************** function _vfprintf *****************
 13381 ;; Defined at:
 13382 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13385 ;;		 -> f(6), NULL(0), 
 13386 ;;  fmt             2  [STACK] PTR const unsigned char 
 13387 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 13388 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 13389 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 13390 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 13391 ;;		 -> STR_61(19), STR_58(3), STR_57(3), STR_56(21), 
 13392 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 13393 ;;		 -> STR_51(21), STR_50(21), STR_49(21), STR_48(21), 
 13394 ;;		 -> STR_47(20), STR_46(20), STR_45(21), STR_44(21), 
 13395 ;;		 -> STR_43(21), STR_42(22), STR_41(22), STR_40(22), 
 13396 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 13397 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 13398 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 13399 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 13400 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 13401 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 13402 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 13403 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 13404 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 13405 ;;		 -> STR_2(21), STR_1(21), 
 13406 ;;  ap              2  [STACK] PTR PTR void 
 13407 ;;		 -> ap(2), ap(2), 
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;  cfmt            2  [STACK] PTR unsigned char 
 13410 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 13411 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 13412 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 13413 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 13414 ;;		 -> STR_61(19), STR_58(3), STR_57(3), STR_56(21), 
 13415 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 13416 ;;		 -> STR_51(21), STR_50(21), STR_49(21), STR_48(21), 
 13417 ;;		 -> STR_47(20), STR_46(20), STR_45(21), STR_44(21), 
 13418 ;;		 -> STR_43(21), STR_42(22), STR_41(22), STR_40(22), 
 13419 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 13420 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 13421 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 13422 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 13423 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 13424 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 13425 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 13426 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 13427 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 13428 ;;		 -> STR_2(21), STR_1(21), 
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  2  [STACK] int 
 13431 ;; Registers used:
 13432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/1
 13435 ;;		On exit  : 3F/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13442 ;;Total ram usage:        0 bytes
 13443 ;; Hardware stack levels used:    1
 13444 ;; Hardware stack levels required when called:   22
 13445 ;; This function calls:
 13446 ;;		_vfpfcnvrt
 13447 ;; This function is called by:
 13448 ;;		_sprintf
 13449 ;;		_printf
 13450 ;; This function uses a reentrant model
 13451 ;;
 13452                           
 13453                           	psect	text54
 13454  01AF06                     __ptext54:
 13455                           	opt callstack 0
 13456  01AF06                     _vfprintf:
 13457                           	opt callstack 0
 13458                           
 13459                           ; BSR set to: 0
 13460                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13461  01AF06  52E6               	movf	postinc1,f,c
 13462  01AF08  52E6               	movf	postinc1,f,c
 13463                           
 13464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 13465                           ;stkvar	_fmt @ sp[(-2)+-4]
 13466                           
 13467                           ;incstack = 0
 13468 ;; hardware stack exceeded
 13469  01AF0A  0EFA               	movlw	-6
 13470  01AF0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13471  01AF12  0EFB               	movlw	-5
 13472  01AF14  006F FF8C  F00C    	movff	plusw1,btemp+11
 13473                           
 13474                           ;stkvar	_cfmt @ sp[(-2)+0]
 13475  01AF1A  0EFF               	movlw	-1
 13476  01AF1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13477  01AF22  0EFE               	movlw	-2
 13478  01AF24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13479                           
 13480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 13481  01AF2A  0100               	movlb	0	; () banked
 13482  01AF2C  6B9A               	clrf	_nout& (0+255),b
 13483  01AF2E  6B9B               	clrf	(_nout+1)& (0+255),b
 13484                           
 13485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13486  01AF30  D021               	goto	l13303
 13487  01AF32                     l13301:
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 13491                           ;stkvar	_ap @ sp[(-2)+-6]
 13492  01AF32  0EF8               	movlw	-8
 13493  01AF34  006F FF8F FFE6     	movff	plusw1,postinc1
 13494  01AF3A  006F FF8F FFE6     	movff	plusw1,postinc1
 13495                           
 13496                           ;stkvar	_cfmt @ sp[(-4)+0]
 13497  01AF40  0EFC               	movlw	252
 13498  01AF42  24E1               	addwf	fsr1l,w,c
 13499  01AF44  6E01               	movwf	btemp^0,c
 13500  01AF46  0EFF               	movlw	255
 13501  01AF48  20E2               	addwfc	fsr1h,w,c
 13502  01AF4A  6E02               	movwf	(btemp+1)^0,c
 13503  01AF4C  0060  F007  FFE6   	movff	btemp,postinc1
 13504  01AF52  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13505                           
 13506                           ;stkvar	_fp @ sp[(-6)+-2]
 13507  01AF58  0EF8               	movlw	-8
 13508  01AF5A  006F FF8F FFE6     	movff	plusw1,postinc1
 13509  01AF60  006F FF8F FFE6     	movff	plusw1,postinc1
 13510  01AF66  EC13  F092         	call	_vfpfcnvrt	;wreg free
 13511  01AF6A  5001               	movf	btemp^0,w,c
 13512  01AF6C  0100               	movlb	0	; () banked
 13513  01AF6E  279A               	addwf	_nout& (0+255),f,b
 13514  01AF70  5002               	movf	(btemp+1)^0,w,c
 13515  01AF72  239B               	addwfc	(_nout+1)& (0+255),f,b
 13516  01AF74                     l13303:
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13520                           ;stkvar	_cfmt @ sp[(-2)+0]
 13521  01AF74  50E1               	movf	fsr1l,w,c
 13522  01AF76  0FFE               	addlw	-2
 13523  01AF78  6ED9               	movwf	fsr2l,c
 13524  01AF7A  50E2               	movf	fsr1h,w,c
 13525  01AF7C  6EDA               	movwf	fsr2h,c
 13526  01AF7E  0EFF               	movlw	255
 13527  01AF80  22DA               	addwfc	fsr2h,f,c
 13528  01AF82  006F FF7B FFF6     	movff	postinc2,tblptrl
 13529  01AF88  006F FF77 FFF7     	movff	postdec2,tblptrh
 13530  01AF8E                     	if	0	;tblptru may be non-zero
 13531  01AF8E                     	endif
 13532  01AF8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13533  01AF8E  0E00               	movlw	low (__mediumconst shr (0+16))
 13534  01AF90  6EF8               	movwf	tblptru,c
 13535  01AF92                     	endif
 13536  01AF92  0008               	tblrd		*
 13537  01AF94  50F5               	movf	tablat,w,c
 13538  01AF96  0900               	iorlw	0
 13539  01AF98  A4D8               	btfss	status,2,c
 13540  01AF9A  D7CB               	goto	l13301
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 13544  01AF9C  0060  F268  F001   	movff	_nout,btemp
 13545  01AFA2  0060  F26C  F002   	movff	_nout+1,btemp+1
 13546                           
 13547                           ; BSR set to: 0
 13548                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 13549  01AFA8  0EF8               	movlw	248
 13550  01AFAA  26E1               	addwf	fsr1l,f,c
 13551  01AFAC  0EFF               	movlw	255
 13552  01AFAE  22E2               	addwfc	fsr1h,f,c
 13553  01AFB0  0012               	return		;funcret
 13554  01AFB2                     __end_of_vfprintf:
 13555                           	opt callstack 0
 13556                           
 13557 ;; *************** function _vfpfcnvrt *****************
 13558 ;; Defined at:
 13559 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13562 ;;		 -> f(6), NULL(0), 
 13563 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 13564 ;;		 -> cfmt(2), 
 13565 ;;  ap              2  [STACK] PTR PTR void 
 13566 ;;		 -> ap(2), ap(2), 
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  llu             8  [STACK] unsigned long long 
 13569 ;;  ll              8  [STACK] long long 
 13570 ;;  f               4  [STACK] long long 
 13571 ;;  ct              3  [STACK] unsigned char [3]
 13572 ;;  vp              3    0        PTR void 
 13573 ;;  cp              2  [STACK] PTR unsigned char 
 13574 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_59(12), 
 13575 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 13576 ;;		 -> V(192), 
 13577 ;;  i               2    0        int 
 13578 ;;  done            2    0        int 
 13579 ;;  c               1  [STACK] unsigned char 
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  2  [STACK] int 
 13582 ;; Registers used:
 13583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13593 ;;Total ram usage:        0 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; Hardware stack levels required when called:   21
 13596 ;; This function calls:
 13597 ;;		_atoi
 13598 ;;		_ctoa
 13599 ;;		_dtoa
 13600 ;;		_efgtoa
 13601 ;;		_fputc
 13602 ;;		_isdigit
 13603 ;;		_isupper
 13604 ;;		_stoa
 13605 ;;		_strncmp
 13606 ;;		_tolower
 13607 ;;		_utoa
 13608 ;;		_xtoa
 13609 ;; This function is called by:
 13610 ;;		_vfprintf
 13611 ;; This function uses a reentrant model
 13612 ;;
 13613                           
 13614                           	psect	text55
 13615  012426                     __ptext55:
 13616                           	opt callstack 0
 13617  012426                     _vfpfcnvrt:
 13618                           	opt callstack 0
 13619                           
 13620                           ; BSR set to: 0
 13621                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13622  012426  0E20               	movlw	32
 13623  012428  26E1               	addwf	fsr1l,f,c
 13624  01242A  0E00               	movlw	0
 13625  01242C  22E2               	addwfc	fsr1h,f,c
 13626                           
 13627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 13628                           ;stkvar	_fmt @ sp[(-32)+-4]
 13629                           
 13630                           ;incstack = 0
 13631 ;; hardware stack exceeded
 13632  01242E  0EDC               	movlw	-36
 13633  012430  006F FF8F FFD9     	movff	plusw1,fsr2l
 13634  012436  0EDD               	movlw	-35
 13635  012438  006F FF8F FFDA     	movff	plusw1,fsr2h
 13636  01243E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13637  012444  006F FF77 FFF7     	movff	postdec2,tblptrh
 13638  01244A                     	if	0	;tblptru may be non-zero
 13639  01244A                     	endif
 13640  01244A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13641  01244A  0E00               	movlw	low (__mediumconst shr (0+16))
 13642  01244C  6EF8               	movwf	tblptru,c
 13643  01244E                     	endif
 13644  01244E  0008               	tblrd		*
 13645  012450  50F5               	movf	tablat,w,c
 13646  012452  0A25               	xorlw	37
 13647  012454  A4D8               	btfss	status,2,c
 13648  012456  EFBA  F099         	goto	l13263
 13649                           
 13650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 13651                           ;stkvar	_fmt @ sp[(-32)+-4]
 13652  01245A  0EDC               	movlw	-36
 13653  01245C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13654  012462  0EDD               	movlw	-35
 13655  012464  006F FF8F FFDA     	movff	plusw1,fsr2h
 13656  01246A  2ADE               	incf	postinc2,f,c
 13657  01246C  0E00               	movlw	0
 13658  01246E  22DD               	addwfc	postdec2,f,c
 13659                           
 13660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 13661  012470  6A3A               	clrf	_width^0,c
 13662  012472  6A3B               	clrf	(_width+1)^0,c
 13663  012474  6A3E               	clrf	_flags^0,c
 13664  012476  6A3F               	clrf	(_flags+1)^0,c
 13665                           
 13666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 13667  012478  683C               	setf	_prec^0,c
 13668  01247A  683D               	setf	(_prec+1)^0,c
 13669                           
 13670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 13671                           ;stkvar	_fmt @ sp[(-32)+-4]
 13672  01247C  0EDC               	movlw	-36
 13673  01247E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13674  012484  0EDD               	movlw	-35
 13675  012486  006F FF8F FFDA     	movff	plusw1,fsr2h
 13676  01248C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13677  012492  006F FF77 FFF7     	movff	postdec2,tblptrh
 13678  012498                     	if	0	;tblptru may be non-zero
 13679  012498                     	endif
 13680  012498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13681  012498  0E00               	movlw	low (__mediumconst shr (0+16))
 13682  01249A  6EF8               	movwf	tblptru,c
 13683  01249C                     	endif
 13684  01249C  0008               	tblrd		*
 13685  01249E  50F5               	movf	tablat,w,c
 13686  0124A0  0A2A               	xorlw	42
 13687  0124A2  A4D8               	btfss	status,2,c
 13688  0124A4  D031               	goto	l13081
 13689                           
 13690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 13691                           ;stkvar	_fmt @ sp[(-32)+-4]
 13692  0124A6  0EDC               	movlw	-36
 13693  0124A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13694  0124AE  0EDD               	movlw	-35
 13695  0124B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13696  0124B6  2ADE               	incf	postinc2,f,c
 13697  0124B8  0E00               	movlw	0
 13698  0124BA  22DD               	addwfc	postdec2,f,c
 13699                           
 13700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 13701                           ;stkvar	_ap @ sp[(-32)+-6]
 13702  0124BC  0EDA               	movlw	-38
 13703  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13704  0124C4  0EDB               	movlw	-37
 13705  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13706  0124CC  0E02               	movlw	2
 13707  0124CE  5EDE               	subwf	postinc2,f,c
 13708  0124D0  0E00               	movlw	0
 13709  0124D2  5ADD               	subwfb	postdec2,f,c
 13710  0124D4  006F FF78  F00B    	movff	postinc2,btemp+10
 13711  0124DA  006F FF74  F00C    	movff	postdec2,btemp+11
 13712  0124E0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13713  0124E6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13714  0124EC  006F FF78  F03A    	movff	postinc2,_width
 13715  0124F2  006F FF74  F03B    	movff	postdec2,_width+1
 13716                           
 13717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 13718  0124F8  AE3B               	btfss	(_width+1)^0,7,c
 13719  0124FA  D066               	goto	u12480
 13720                           
 13721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 13722  0124FC  803E               	bsf	_flags^0,0,c
 13723                           
 13724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 13725  0124FE  6C3A               	negf	_width^0,c
 13726  012500  1E3B               	comf	(_width+1)^0,f,c
 13727  012502  B0D8               	btfsc	status,0,c
 13728  012504  2A3B               	incf	(_width+1)^0,f,c
 13729  012506  D060               	goto	u12480
 13730  012508                     l13081:
 13731                           
 13732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 13733                           ;stkvar	_fmt @ sp[(-32)+-4]
 13734  012508  0EDC               	movlw	-36
 13735  01250A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13736  012510  0EDD               	movlw	-35
 13737  012512  006F FF8F FFDA     	movff	plusw1,fsr2h
 13738  012518  006F FF78  F00B    	movff	postinc2,btemp+10
 13739  01251E  006F FF74  F00C    	movff	postdec2,btemp+11
 13740  012524  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13741  01252A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13742  012530  EC95  F0BE         	call	_atoi	;wreg free
 13743  012534  0060  F004  F03A   	movff	btemp,_width
 13744  01253A  0060  F008  F03B   	movff	btemp+1,_width+1
 13745                           
 13746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13747  012540  D00B               	goto	l13085
 13748  012542                     l13083:
 13749                           
 13750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 13751                           ;stkvar	_fmt @ sp[(-32)+-4]
 13752  012542  0EDC               	movlw	-36
 13753  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 13754  01254A  0EDD               	movlw	-35
 13755  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13756  012552  2ADE               	incf	postinc2,f,c
 13757  012554  0E00               	movlw	0
 13758  012556  22DD               	addwfc	postdec2,f,c
 13759  012558                     l13085:
 13760  012558  0ED0               	movlw	208
 13761  01255A  6E0B               	movwf	(btemp+10)^0,c
 13762  01255C  0EFF               	movlw	255
 13763  01255E  6E0C               	movwf	(btemp+11)^0,c
 13764                           
 13765                           ;stkvar	_fmt @ sp[(-32)+-4]
 13766  012560  0EDC               	movlw	-36
 13767  012562  006F FF8F FFD9     	movff	plusw1,fsr2l
 13768  012568  0EDD               	movlw	-35
 13769  01256A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13770  012570  006F FF7B FFF6     	movff	postinc2,tblptrl
 13771  012576  006F FF77 FFF7     	movff	postdec2,tblptrh
 13772  01257C                     	if	0	;tblptru may be non-zero
 13773  01257C                     	endif
 13774  01257C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13775  01257C  0E00               	movlw	low (__mediumconst shr (0+16))
 13776  01257E  6EF8               	movwf	tblptru,c
 13777  012580                     	endif
 13778  012580  0008               	tblrd		*
 13779  012582  50F5               	movf	tablat,w,c
 13780  012584  6E09               	movwf	(btemp+8)^0,c
 13781  012586  6A0A               	clrf	(btemp+9)^0,c
 13782  012588  500B               	movf	(btemp+10)^0,w,c
 13783  01258A  2609               	addwf	(btemp+8)^0,f,c
 13784  01258C  500C               	movf	(btemp+11)^0,w,c
 13785  01258E  220A               	addwfc	(btemp+9)^0,f,c
 13786  012590  500A               	movf	(btemp+9)^0,w,c
 13787  012592  E106               	bnz	u12460
 13788  012594  0E0A               	movlw	10
 13789  012596  5C09               	subwf	(btemp+8)^0,w,c
 13790  012598  B0D8               	btfsc	status,0,c
 13791  01259A  D002               	goto	u12460
 13792  01259C  0E01               	movlw	1
 13793  01259E  D001               	goto	u12470
 13794  0125A0                     u12460:
 13795  0125A0  0E00               	movlw	0
 13796  0125A2                     u12470:
 13797  0125A2  6E0B               	movwf	(btemp+10)^0,c
 13798  0125A4  6A0C               	clrf	(btemp+11)^0,c
 13799                           
 13800                           ;stkvar	_vfpfcnvrt$5910 @ sp[(-32)+4]
 13801  0125A6  0EE4               	movlw	-28
 13802  0125A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13803  0125AE  0EE5               	movlw	-27
 13804  0125B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13805                           
 13806                           ;stkvar	_vfpfcnvrt$5910 @ sp[(-32)+4]
 13807  0125B6  0EE4               	movlw	-28
 13808  0125B8  006F FF8C  F001    	movff	plusw1,btemp
 13809  0125BE  0EE5               	movlw	-27
 13810  0125C0  50E3               	movf	plusw1,w,c
 13811  0125C2  1001               	iorwf	btemp^0,w,c
 13812  0125C4  A4D8               	btfss	status,2,c
 13813  0125C6  D7BD               	goto	l13083
 13814  0125C8                     u12480:
 13815                           
 13816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 13817                           ;stkvar	_fmt @ sp[(-32)+-4]
 13818  0125C8  0EDC               	movlw	-36
 13819  0125CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13820  0125D0  0EDD               	movlw	-35
 13821  0125D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13822  0125D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13823  0125DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13824  0125E4                     	if	0	;tblptru may be non-zero
 13825  0125E4                     	endif
 13826  0125E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13827  0125E4  0E00               	movlw	low (__mediumconst shr (0+16))
 13828  0125E6  6EF8               	movwf	tblptru,c
 13829  0125E8                     	endif
 13830  0125E8  0008               	tblrd		*
 13831  0125EA  50F5               	movf	tablat,w,c
 13832  0125EC  0A2E               	xorlw	46
 13833  0125EE  A4D8               	btfss	status,2,c
 13834  0125F0  D0AC               	goto	u12530
 13835                           
 13836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 13837  0125F2  6A3C               	clrf	_prec^0,c
 13838  0125F4  6A3D               	clrf	(_prec+1)^0,c
 13839                           
 13840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 13841                           ;stkvar	_fmt @ sp[(-32)+-4]
 13842  0125F6  0EDC               	movlw	-36
 13843  0125F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13844  0125FE  0EDD               	movlw	-35
 13845  012600  006F FF8F FFDA     	movff	plusw1,fsr2h
 13846  012606  2ADE               	incf	postinc2,f,c
 13847  012608  0E00               	movlw	0
 13848  01260A  22DD               	addwfc	postdec2,f,c
 13849                           
 13850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 13851                           ;stkvar	_fmt @ sp[(-32)+-4]
 13852  01260C  0EDC               	movlw	-36
 13853  01260E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13854  012614  0EDD               	movlw	-35
 13855  012616  006F FF8F FFDA     	movff	plusw1,fsr2h
 13856  01261C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13857  012622  006F FF77 FFF7     	movff	postdec2,tblptrh
 13858  012628                     	if	0	;tblptru may be non-zero
 13859  012628                     	endif
 13860  012628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13861  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 13862  01262A  6EF8               	movwf	tblptru,c
 13863  01262C                     	endif
 13864  01262C  0008               	tblrd		*
 13865  01262E  50F5               	movf	tablat,w,c
 13866  012630  0A2A               	xorlw	42
 13867  012632  A4D8               	btfss	status,2,c
 13868  012634  D02A               	goto	l13103
 13869                           
 13870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 13871                           ;stkvar	_fmt @ sp[(-32)+-4]
 13872  012636  0EDC               	movlw	-36
 13873  012638  006F FF8F FFD9     	movff	plusw1,fsr2l
 13874  01263E  0EDD               	movlw	-35
 13875  012640  006F FF8F FFDA     	movff	plusw1,fsr2h
 13876  012646  2ADE               	incf	postinc2,f,c
 13877  012648  0E00               	movlw	0
 13878  01264A  22DD               	addwfc	postdec2,f,c
 13879                           
 13880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 13881                           ;stkvar	_ap @ sp[(-32)+-6]
 13882  01264C  0EDA               	movlw	-38
 13883  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13884  012654  0EDB               	movlw	-37
 13885  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 13886  01265C  0E02               	movlw	2
 13887  01265E  5EDE               	subwf	postinc2,f,c
 13888  012660  0E00               	movlw	0
 13889  012662  5ADD               	subwfb	postdec2,f,c
 13890  012664  006F FF78  F00B    	movff	postinc2,btemp+10
 13891  01266A  006F FF74  F00C    	movff	postdec2,btemp+11
 13892  012670  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13893  012676  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13894  01267C  006F FF78  F03C    	movff	postinc2,_prec
 13895  012682  006F FF74  F03D    	movff	postdec2,_prec+1
 13896                           
 13897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 13898  012688  D060               	goto	u12530
 13899  01268A                     l13103:
 13900                           
 13901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 13902                           ;stkvar	_fmt @ sp[(-32)+-4]
 13903  01268A  0EDC               	movlw	-36
 13904  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13905  012692  0EDD               	movlw	-35
 13906  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 13907  01269A  006F FF78  F00B    	movff	postinc2,btemp+10
 13908  0126A0  006F FF74  F00C    	movff	postdec2,btemp+11
 13909  0126A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13910  0126AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 13911  0126B2  EC95  F0BE         	call	_atoi	;wreg free
 13912  0126B6  0060  F004  F03C   	movff	btemp,_prec
 13913  0126BC  0060  F008  F03D   	movff	btemp+1,_prec+1
 13914                           
 13915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13916  0126C2  D00B               	goto	l13107
 13917  0126C4                     l13105:
 13918                           
 13919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 13920                           ;stkvar	_fmt @ sp[(-32)+-4]
 13921  0126C4  0EDC               	movlw	-36
 13922  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13923  0126CC  0EDD               	movlw	-35
 13924  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13925  0126D4  2ADE               	incf	postinc2,f,c
 13926  0126D6  0E00               	movlw	0
 13927  0126D8  22DD               	addwfc	postdec2,f,c
 13928  0126DA                     l13107:
 13929  0126DA  0ED0               	movlw	208
 13930  0126DC  6E0B               	movwf	(btemp+10)^0,c
 13931  0126DE  0EFF               	movlw	255
 13932  0126E0  6E0C               	movwf	(btemp+11)^0,c
 13933                           
 13934                           ;stkvar	_fmt @ sp[(-32)+-4]
 13935  0126E2  0EDC               	movlw	-36
 13936  0126E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13937  0126EA  0EDD               	movlw	-35
 13938  0126EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13939  0126F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13940  0126F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13941  0126FE                     	if	0	;tblptru may be non-zero
 13942  0126FE                     	endif
 13943  0126FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13944  0126FE  0E00               	movlw	low (__mediumconst shr (0+16))
 13945  012700  6EF8               	movwf	tblptru,c
 13946  012702                     	endif
 13947  012702  0008               	tblrd		*
 13948  012704  50F5               	movf	tablat,w,c
 13949  012706  6E09               	movwf	(btemp+8)^0,c
 13950  012708  6A0A               	clrf	(btemp+9)^0,c
 13951  01270A  500B               	movf	(btemp+10)^0,w,c
 13952  01270C  2609               	addwf	(btemp+8)^0,f,c
 13953  01270E  500C               	movf	(btemp+11)^0,w,c
 13954  012710  220A               	addwfc	(btemp+9)^0,f,c
 13955  012712  500A               	movf	(btemp+9)^0,w,c
 13956  012714  E106               	bnz	u12510
 13957  012716  0E0A               	movlw	10
 13958  012718  5C09               	subwf	(btemp+8)^0,w,c
 13959  01271A  B0D8               	btfsc	status,0,c
 13960  01271C  D002               	goto	u12510
 13961  01271E  0E01               	movlw	1
 13962  012720  D001               	goto	u12520
 13963  012722                     u12510:
 13964  012722  0E00               	movlw	0
 13965  012724                     u12520:
 13966  012724  6E0B               	movwf	(btemp+10)^0,c
 13967  012726  6A0C               	clrf	(btemp+11)^0,c
 13968                           
 13969                           ;stkvar	_vfpfcnvrt$5911 @ sp[(-32)+0]
 13970  012728  0EE0               	movlw	-32
 13971  01272A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13972  012730  0EE1               	movlw	-31
 13973  012732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13974                           
 13975                           ;stkvar	_vfpfcnvrt$5911 @ sp[(-32)+0]
 13976  012738  0EE0               	movlw	-32
 13977  01273A  006F FF8C  F001    	movff	plusw1,btemp
 13978  012740  0EE1               	movlw	-31
 13979  012742  50E3               	movf	plusw1,w,c
 13980  012744  1001               	iorwf	btemp^0,w,c
 13981  012746  A4D8               	btfss	status,2,c
 13982  012748  D7BD               	goto	l13105
 13983  01274A                     u12530:
 13984                           
 13985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 13986                           ;stkvar	_fmt @ sp[(-32)+-4]
 13987  01274A  0EDC               	movlw	-36
 13988  01274C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13989  012752  0EDD               	movlw	-35
 13990  012754  006F FF8F FFDA     	movff	plusw1,fsr2h
 13991  01275A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13992  012760  006F FF77 FFF7     	movff	postdec2,tblptrh
 13993  012766                     	if	0	;tblptru may be non-zero
 13994  012766                     	endif
 13995  012766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13996  012766  0E00               	movlw	low (__mediumconst shr (0+16))
 13997  012768  6EF8               	movwf	tblptru,c
 13998  01276A                     	endif
 13999  01276A  0008               	tblrd		*
 14000  01276C  50F5               	movf	tablat,w,c
 14001  01276E  6EE6               	movwf	postinc1,c
 14002  012770  0E00               	movlw	0
 14003  012772  6EE6               	movwf	postinc1,c
 14004  012774  EC8A  F0DA         	call	_tolower	;wreg free
 14005                           
 14006                           ;stkvar	_ct @ sp[(-32)+26]
 14007  012778  0EFA               	movlw	-6
 14008  01277A  0060  F007  FFE3   	movff	btemp,plusw1
 14009                           
 14010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 14011                           ;stkvar	_ct @ sp[(-32)+26]
 14012  012780  0EFA               	movlw	-6
 14013  012782  50E3               	movf	plusw1,w,c
 14014  012784  B4D8               	btfsc	status,2,c
 14015  012786  D05B               	goto	l13123
 14016                           
 14017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 14018                           ;stkvar	_ct @ sp[(-32)+26]
 14019  012788  0EFB               	movlw	251
 14020  01278A  24E1               	addwf	fsr1l,w,c
 14021  01278C  6ED9               	movwf	fsr2l,c
 14022  01278E  0EFF               	movlw	255
 14023  012790  20E2               	addwfc	fsr1h,w,c
 14024  012792  6EDA               	movwf	fsr2h,c
 14025                           
 14026                           ;stkvar	_fmt @ sp[(-32)+-4]
 14027  012794  0EDC               	movlw	-36
 14028  012796  006F FF8F FFE9     	movff	plusw1,fsr0l
 14029  01279C  0EDD               	movlw	-35
 14030  01279E  006F FF8F FFEA     	movff	plusw1,fsr0h
 14031  0127A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 14032  0127AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 14033  0127B0  0E01               	movlw	1
 14034  0127B2  260B               	addwf	(btemp+10)^0,f,c
 14035  0127B4  0E00               	movlw	0
 14036  0127B6  220C               	addwfc	(btemp+11)^0,f,c
 14037  0127B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14038  0127BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14039  0127C4                     	if	0	;tblptru may be non-zero
 14040  0127C4                     	endif
 14041  0127C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14042  0127C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14043  0127C6  6EF8               	movwf	tblptru,c
 14044  0127C8                     	endif
 14045  0127C8  0008               	tblrd		*
 14046  0127CA  50F5               	movf	tablat,w,c
 14047  0127CC  6EE6               	movwf	postinc1,c
 14048  0127CE  0E00               	movlw	0
 14049  0127D0  6EE6               	movwf	postinc1,c
 14050  0127D2  EC8A  F0DA         	call	_tolower	;wreg free
 14051  0127D6  5001               	movf	btemp^0,w,c
 14052  0127D8  6EDF               	movwf	indf2,c
 14053                           
 14054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 14055                           ;stkvar	_ct @ sp[(-32)+26]
 14056  0127DA  0EFB               	movlw	251
 14057  0127DC  24E1               	addwf	fsr1l,w,c
 14058  0127DE  6ED9               	movwf	fsr2l,c
 14059  0127E0  0EFF               	movlw	255
 14060  0127E2  20E2               	addwfc	fsr1h,w,c
 14061  0127E4  6EDA               	movwf	fsr2h,c
 14062  0127E6  50DF               	movf	indf2,w,c
 14063  0127E8  B4D8               	btfsc	status,2,c
 14064  0127EA  D029               	goto	l13123
 14065                           
 14066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 14067                           ;stkvar	_ct @ sp[(-32)+26]
 14068  0127EC  0EFC               	movlw	252
 14069  0127EE  24E1               	addwf	fsr1l,w,c
 14070  0127F0  6ED9               	movwf	fsr2l,c
 14071  0127F2  0EFF               	movlw	255
 14072  0127F4  20E2               	addwfc	fsr1h,w,c
 14073  0127F6  6EDA               	movwf	fsr2h,c
 14074                           
 14075                           ;stkvar	_fmt @ sp[(-32)+-4]
 14076  0127F8  0EDC               	movlw	-36
 14077  0127FA  006F FF8F FFE9     	movff	plusw1,fsr0l
 14078  012800  0EDD               	movlw	-35
 14079  012802  006F FF8F FFEA     	movff	plusw1,fsr0h
 14080  012808  006F FFB8  F00B    	movff	postinc0,btemp+10
 14081  01280E  006F FFB4  F00C    	movff	postdec0,btemp+11
 14082  012814  0E02               	movlw	2
 14083  012816  260B               	addwf	(btemp+10)^0,f,c
 14084  012818  0E00               	movlw	0
 14085  01281A  220C               	addwfc	(btemp+11)^0,f,c
 14086  01281C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14087  012822  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14088  012828                     	if	0	;tblptru may be non-zero
 14089  012828                     	endif
 14090  012828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14091  012828  0E00               	movlw	low (__mediumconst shr (0+16))
 14092  01282A  6EF8               	movwf	tblptru,c
 14093  01282C                     	endif
 14094  01282C  0008               	tblrd		*
 14095  01282E  50F5               	movf	tablat,w,c
 14096  012830  6EE6               	movwf	postinc1,c
 14097  012832  0E00               	movlw	0
 14098  012834  6EE6               	movwf	postinc1,c
 14099  012836  EC8A  F0DA         	call	_tolower	;wreg free
 14100  01283A  5001               	movf	btemp^0,w,c
 14101  01283C  6EDF               	movwf	indf2,c
 14102  01283E                     l13123:
 14103                           
 14104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 14105                           ;stkvar	_fmt @ sp[(-32)+-4]
 14106  01283E  0EDC               	movlw	-36
 14107  012840  006F FF8F FFD9     	movff	plusw1,fsr2l
 14108  012846  0EDD               	movlw	-35
 14109  012848  006F FF8F FFDA     	movff	plusw1,fsr2h
 14110  01284E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14111  012854  006F FF77 FFF7     	movff	postdec2,tblptrh
 14112  01285A                     	if	0	;tblptru may be non-zero
 14113  01285A                     	endif
 14114  01285A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14115  01285A  0E00               	movlw	low (__mediumconst shr (0+16))
 14116  01285C  6EF8               	movwf	tblptru,c
 14117  01285E                     	endif
 14118  01285E  0008               	tblrd		*
 14119  012860  50F5               	movf	tablat,w,c
 14120  012862  0A63               	xorlw	99
 14121  012864  A4D8               	btfss	status,2,c
 14122  012866  D037               	goto	l13133
 14123                           
 14124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 14125                           ;stkvar	_fmt @ sp[(-32)+-4]
 14126  012868  0EDC               	movlw	-36
 14127  01286A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14128  012870  0EDD               	movlw	-35
 14129  012872  006F FF8F FFDA     	movff	plusw1,fsr2h
 14130  012878  2ADE               	incf	postinc2,f,c
 14131  01287A  0E00               	movlw	0
 14132  01287C  22DD               	addwfc	postdec2,f,c
 14133                           
 14134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14135                           ;stkvar	_ap @ sp[(-32)+-6]
 14136  01287E  0EDA               	movlw	-38
 14137  012880  006F FF8F FFD9     	movff	plusw1,fsr2l
 14138  012886  0EDB               	movlw	-37
 14139  012888  006F FF8F FFDA     	movff	plusw1,fsr2h
 14140  01288E  0E02               	movlw	2
 14141  012890  5EDE               	subwf	postinc2,f,c
 14142  012892  0E00               	movlw	0
 14143  012894  5ADD               	subwfb	postdec2,f,c
 14144  012896  006F FF78  F00B    	movff	postinc2,btemp+10
 14145  01289C  006F FF74  F00C    	movff	postdec2,btemp+11
 14146  0128A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14147  0128A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14148  0128AE  50DF               	movf	indf2,w,c
 14149  0128B0  6E0C               	movwf	(btemp+11)^0,c
 14150                           
 14151                           ;stkvar	_c @ sp[(-32)+31]
 14152  0128B2  0EFF               	movlw	-1
 14153  0128B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14154                           
 14155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 14156                           ;stkvar	_c @ sp[(-32)+31]
 14157  0128BA  0EFF               	movlw	-1
 14158  0128BC  50E3               	movf	plusw1,w,c
 14159  0128BE  6EE6               	movwf	postinc1,c
 14160                           
 14161                           ;stkvar	_fp @ sp[(-33)+-2]
 14162  0128C0  0EDD               	movlw	-35
 14163  0128C2  006F FF8F FFE6     	movff	plusw1,postinc1
 14164  0128C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14165  0128CE  EC04  F0DA         	call	_ctoa	;wreg free
 14166  0128D2  EFE4  F099         	goto	l2485
 14167  0128D6                     l13133:
 14168                           
 14169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 14170                           ;stkvar	_fmt @ sp[(-32)+-4]
 14171  0128D6  0EDC               	movlw	-36
 14172  0128D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14173  0128DE  0EDD               	movlw	-35
 14174  0128E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14175  0128E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14176  0128EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14177  0128F2                     	if	0	;tblptru may be non-zero
 14178  0128F2                     	endif
 14179  0128F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14180  0128F2  0E00               	movlw	low (__mediumconst shr (0+16))
 14181  0128F4  6EF8               	movwf	tblptru,c
 14182  0128F6                     	endif
 14183  0128F6  0008               	tblrd		*
 14184  0128F8  50F5               	movf	tablat,w,c
 14185  0128FA  0A64               	xorlw	100
 14186  0128FC  B4D8               	btfsc	status,2,c
 14187  0128FE  D015               	goto	u12580
 14188                           
 14189                           ;stkvar	_fmt @ sp[(-32)+-4]
 14190  012900  0EDC               	movlw	-36
 14191  012902  006F FF8F FFD9     	movff	plusw1,fsr2l
 14192  012908  0EDD               	movlw	-35
 14193  01290A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14194  012910  006F FF7B FFF6     	movff	postinc2,tblptrl
 14195  012916  006F FF77 FFF7     	movff	postdec2,tblptrh
 14196  01291C                     	if	0	;tblptru may be non-zero
 14197  01291C                     	endif
 14198  01291C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14199  01291C  0E00               	movlw	low (__mediumconst shr (0+16))
 14200  01291E  6EF8               	movwf	tblptru,c
 14201  012920                     	endif
 14202  012920  0008               	tblrd		*
 14203  012922  50F5               	movf	tablat,w,c
 14204  012924  0A69               	xorlw	105
 14205  012926  A4D8               	btfss	status,2,c
 14206  012928  D076               	goto	l13145
 14207  01292A                     u12580:
 14208                           
 14209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 14210                           ;stkvar	_fmt @ sp[(-32)+-4]
 14211  01292A  0EDC               	movlw	-36
 14212  01292C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14213  012932  0EDD               	movlw	-35
 14214  012934  006F FF8F FFDA     	movff	plusw1,fsr2h
 14215  01293A  2ADE               	incf	postinc2,f,c
 14216  01293C  0E00               	movlw	0
 14217  01293E  22DD               	addwfc	postdec2,f,c
 14218                           
 14219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 14220                           ;stkvar	_ap @ sp[(-32)+-6]
 14221  012940  0EDA               	movlw	-38
 14222  012942  006F FF8F FFD9     	movff	plusw1,fsr2l
 14223  012948  0EDB               	movlw	-37
 14224  01294A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14225  012950  0E02               	movlw	2
 14226  012952  5EDE               	subwf	postinc2,f,c
 14227  012954  0E00               	movlw	0
 14228  012956  5ADD               	subwfb	postdec2,f,c
 14229  012958  006F FF78  F00B    	movff	postinc2,btemp+10
 14230  01295E  006F FF74  F00C    	movff	postdec2,btemp+11
 14231  012964  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14232  01296A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14233  012970  006F FF78  F00B    	movff	postinc2,btemp+10
 14234  012976  006F FF74  F00C    	movff	postdec2,btemp+11
 14235                           
 14236                           ;stkvar	_ll @ sp[(-32)+14]
 14237  01297C  0EEE               	movlw	-18
 14238  01297E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14239  012984  0EEF               	movlw	-17
 14240  012986  0060  F033  FFE3   	movff	btemp+11,plusw1
 14241  01298C  6A01               	clrf	btemp^0,c
 14242  01298E  BEE3               	btfsc	plusw1,7,c
 14243  012990  6801               	setf	btemp^0,c
 14244  012992  0EF0               	movlw	-16
 14245  012994  0060  F007  FFE3   	movff	btemp,plusw1
 14246  01299A  0EF1               	movlw	-15
 14247  01299C  0060  F007  FFE3   	movff	btemp,plusw1
 14248  0129A2  0EF2               	movlw	-14
 14249  0129A4  0060  F007  FFE3   	movff	btemp,plusw1
 14250  0129AA  0EF3               	movlw	-13
 14251  0129AC  0060  F007  FFE3   	movff	btemp,plusw1
 14252  0129B2  0EF4               	movlw	-12
 14253  0129B4  0060  F007  FFE3   	movff	btemp,plusw1
 14254  0129BA  0EF5               	movlw	-11
 14255  0129BC  0060  F007  FFE3   	movff	btemp,plusw1
 14256  0129C2                     l13141:
 14257                           
 14258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 14259                           ;stkvar	_ll @ sp[(-32)+14]
 14260  0129C2  50E1               	movf	fsr1l,w,c
 14261  0129C4  0FEE               	addlw	-18
 14262  0129C6  6ED9               	movwf	fsr2l,c
 14263  0129C8  50E2               	movf	fsr1h,w,c
 14264  0129CA  6EDA               	movwf	fsr2h,c
 14265  0129CC  0EFF               	movlw	255
 14266  0129CE  22DA               	addwfc	fsr2h,f,c
 14267  0129D0  006F FF7B FFE6     	movff	postinc2,postinc1
 14268  0129D6  006F FF7B FFE6     	movff	postinc2,postinc1
 14269  0129DC  006F FF7B FFE6     	movff	postinc2,postinc1
 14270  0129E2  006F FF7B FFE6     	movff	postinc2,postinc1
 14271  0129E8  006F FF7B FFE6     	movff	postinc2,postinc1
 14272  0129EE  006F FF7B FFE6     	movff	postinc2,postinc1
 14273  0129F4  006F FF7B FFE6     	movff	postinc2,postinc1
 14274  0129FA  006F FF7B FFE6     	movff	postinc2,postinc1
 14275                           
 14276                           ;stkvar	_fp @ sp[(-40)+-2]
 14277  012A00  0ED6               	movlw	-42
 14278  012A02  006F FF8F FFE6     	movff	plusw1,postinc1
 14279  012A08  006F FF8F FFE6     	movff	plusw1,postinc1
 14280  012A0E  EC2E  F0AC         	call	_dtoa	;wreg free
 14281  012A12  EFE4  F099         	goto	l2485
 14282  012A16                     l13145:
 14283                           
 14284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 14285  012A16  0E02               	movlw	2
 14286  012A18  6EE6               	movwf	postinc1,c
 14287  012A1A  0E00               	movlw	0
 14288  012A1C  6EE6               	movwf	postinc1,c
 14289  012A1E  0EE9               	movlw	low STR_87
 14290  012A20  6EE6               	movwf	postinc1,c
 14291  012A22  0EFF               	movlw	high STR_87
 14292  012A24  6EE6               	movwf	postinc1,c
 14293                           
 14294                           ;stkvar	_fmt @ sp[(-36)+-4]
 14295  012A26  0ED8               	movlw	-40
 14296  012A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 14297  012A2E  0ED9               	movlw	-39
 14298  012A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 14299  012A36  006F FF78  F00B    	movff	postinc2,btemp+10
 14300  012A3C  006F FF74  F00C    	movff	postdec2,btemp+11
 14301  012A42  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14302  012A48  0060  F033  FFE6   	movff	btemp+11,postinc1
 14303  012A4E  EC12  F0C2         	call	_strncmp	;wreg free
 14304  012A52  5001               	movf	btemp^0,w,c
 14305  012A54  1002               	iorwf	(btemp+1)^0,w,c
 14306  012A56  B4D8               	btfsc	status,2,c
 14307  012A58  D022               	goto	u12600
 14308  012A5A  0E02               	movlw	2
 14309  012A5C  6EE6               	movwf	postinc1,c
 14310  012A5E  0E00               	movlw	0
 14311  012A60  6EE6               	movwf	postinc1,c
 14312  012A62  0EEF               	movlw	low STR_91
 14313  012A64  6EE6               	movwf	postinc1,c
 14314  012A66  0EFF               	movlw	high STR_91
 14315  012A68  6EE6               	movwf	postinc1,c
 14316                           
 14317                           ;stkvar	_fmt @ sp[(-36)+-4]
 14318  012A6A  0ED8               	movlw	-40
 14319  012A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14320  012A72  0ED9               	movlw	-39
 14321  012A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14322  012A7A  006F FF78  F00B    	movff	postinc2,btemp+10
 14323  012A80  006F FF74  F00C    	movff	postdec2,btemp+11
 14324  012A86  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14325  012A8C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14326  012A92  EC12  F0C2         	call	_strncmp	;wreg free
 14327  012A96  5001               	movf	btemp^0,w,c
 14328  012A98  1002               	iorwf	(btemp+1)^0,w,c
 14329  012A9A  A4D8               	btfss	status,2,c
 14330  012A9C  D069               	goto	l13157
 14331  012A9E                     u12600:
 14332                           
 14333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 14334                           ;stkvar	_fmt @ sp[(-32)+-4]
 14335  012A9E  0EDC               	movlw	-36
 14336  012AA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14337  012AA6  0EDD               	movlw	-35
 14338  012AA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14339  012AAE  0E02               	movlw	2
 14340  012AB0  26DE               	addwf	postinc2,f,c
 14341  012AB2  0E00               	movlw	0
 14342  012AB4  22DD               	addwfc	postdec2,f,c
 14343                           
 14344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 14345                           ;stkvar	_ap @ sp[(-32)+-6]
 14346  012AB6  0EDA               	movlw	-38
 14347  012AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14348  012ABE  0EDB               	movlw	-37
 14349  012AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14350  012AC6  0E04               	movlw	4
 14351  012AC8  5EDE               	subwf	postinc2,f,c
 14352  012ACA  0E00               	movlw	0
 14353  012ACC  5ADD               	subwfb	postdec2,f,c
 14354  012ACE  006F FF78  F00B    	movff	postinc2,btemp+10
 14355  012AD4  006F FF74  F00C    	movff	postdec2,btemp+11
 14356  012ADA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14357  012AE0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14358  012AE6  006F FF78  F009    	movff	postinc2,btemp+8
 14359  012AEC  006F FF78  F00A    	movff	postinc2,btemp+9
 14360  012AF2  006F FF78  F00B    	movff	postinc2,btemp+10
 14361  012AF8  006F FF78  F00C    	movff	postinc2,btemp+11
 14362  012AFE  0060  F024  F011   	movff	btemp+8,btemp+16
 14363  012B04  0060  F028  F012   	movff	btemp+9,btemp+17
 14364  012B0A  0060  F02C  F013   	movff	btemp+10,btemp+18
 14365  012B10  0060  F030  F014   	movff	btemp+11,btemp+19
 14366  012B16  6A15               	clrf	(btemp+20)^0,c
 14367  012B18  BE14               	btfsc	(btemp+19)^0,7,c
 14368  012B1A  6815               	setf	(btemp+20)^0,c
 14369  012B1C  0060  F054  F016   	movff	btemp+20,btemp+21
 14370  012B22  0060  F054  F017   	movff	btemp+20,btemp+22
 14371  012B28  0060  F054  F018   	movff	btemp+20,btemp+23
 14372                           
 14373                           ;stkvar	_ll @ sp[(-32)+14]
 14374  012B2E  0EEE               	movlw	-18
 14375  012B30  0060  F047  FFE3   	movff	btemp+16,plusw1
 14376  012B36  0EEF               	movlw	-17
 14377  012B38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14378  012B3E  0EF0               	movlw	-16
 14379  012B40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14380  012B46  0EF1               	movlw	-15
 14381  012B48  0060  F053  FFE3   	movff	btemp+19,plusw1
 14382  012B4E  0EF2               	movlw	-14
 14383  012B50  0060  F057  FFE3   	movff	btemp+20,plusw1
 14384  012B56  0EF3               	movlw	-13
 14385  012B58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14386  012B5E  0EF4               	movlw	-12
 14387  012B60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14388  012B66  0EF5               	movlw	-11
 14389  012B68  0060  F063  FFE3   	movff	btemp+23,plusw1
 14390  012B6E  D729               	goto	l13141
 14391  012B70                     l13157:
 14392                           
 14393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 14394                           ;stkvar	_ct @ sp[(-32)+26]
 14395  012B70  0EFA               	movlw	-6
 14396  012B72  006F FF8C  F001    	movff	plusw1,btemp
 14397  012B78  0E66               	movlw	102
 14398  012B7A  1801               	xorwf	btemp^0,w,c
 14399  012B7C  A4D8               	btfss	status,2,c
 14400  012B7E  D06E               	goto	l13169
 14401                           
 14402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 14403                           ;stkvar	_fmt @ sp[(-32)+-4]
 14404  012B80  0EDC               	movlw	-36
 14405  012B82  006F FF8F FFD9     	movff	plusw1,fsr2l
 14406  012B88  0EDD               	movlw	-35
 14407  012B8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14408  012B90  006F FF7B FFF6     	movff	postinc2,tblptrl
 14409  012B96  006F FF77 FFF7     	movff	postdec2,tblptrh
 14410  012B9C                     	if	0	;tblptru may be non-zero
 14411  012B9C                     	endif
 14412  012B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14413  012B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 14414  012B9E  6EF8               	movwf	tblptru,c
 14415  012BA0                     	endif
 14416                           
 14417                           ;stkvar	_c @ sp[(-32)+31]
 14418  012BA0  0008               	tblrd		*
 14419  012BA2  0EFF               	movlw	-1
 14420  012BA4  006F FFD7 FFE3     	movff	tablat,plusw1
 14421                           
 14422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 14423                           ;stkvar	_fmt @ sp[(-32)+-4]
 14424  012BAA  0EDC               	movlw	-36
 14425  012BAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14426  012BB2  0EDD               	movlw	-35
 14427  012BB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14428  012BBA  2ADE               	incf	postinc2,f,c
 14429  012BBC  0E00               	movlw	0
 14430  012BBE  22DD               	addwfc	postdec2,f,c
 14431                           
 14432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 14433                           ;stkvar	_ap @ sp[(-32)+-6]
 14434  012BC0  0EDA               	movlw	-38
 14435  012BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14436  012BC8  0EDB               	movlw	-37
 14437  012BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14438  012BD0  0E04               	movlw	4
 14439  012BD2  5EDE               	subwf	postinc2,f,c
 14440  012BD4  0E00               	movlw	0
 14441  012BD6  5ADD               	subwfb	postdec2,f,c
 14442  012BD8  006F FF78  F00B    	movff	postinc2,btemp+10
 14443  012BDE  006F FF74  F00C    	movff	postdec2,btemp+11
 14444  012BE4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14445  012BEA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14446  012BF0  006F FF78  F009    	movff	postinc2,btemp+8
 14447  012BF6  006F FF78  F00A    	movff	postinc2,btemp+9
 14448  012BFC  006F FF78  F00B    	movff	postinc2,btemp+10
 14449  012C02  006F FF78  F00C    	movff	postinc2,btemp+11
 14450                           
 14451                           ;stkvar	_f @ sp[(-32)+22]
 14452  012C08  0EF6               	movlw	-10
 14453  012C0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14454  012C10  0EF7               	movlw	-9
 14455  012C12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14456  012C18  0EF8               	movlw	-8
 14457  012C1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14458  012C20  0EF9               	movlw	-7
 14459  012C22  0060  F033  FFE3   	movff	btemp+11,plusw1
 14460  012C28                     l13165:
 14461                           
 14462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 14463                           ;stkvar	_c @ sp[(-32)+31]
 14464  012C28  0EFF               	movlw	-1
 14465  012C2A  50E3               	movf	plusw1,w,c
 14466  012C2C  6EE6               	movwf	postinc1,c
 14467                           
 14468                           ;stkvar	_f @ sp[(-33)+22]
 14469  012C2E  0EF5               	movlw	-11
 14470  012C30  006F FF8F FFE6     	movff	plusw1,postinc1
 14471  012C36  006F FF8F FFE6     	movff	plusw1,postinc1
 14472  012C3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14473  012C42  006F FF8F FFE6     	movff	plusw1,postinc1
 14474                           
 14475                           ;stkvar	_fp @ sp[(-37)+-2]
 14476  012C48  0ED9               	movlw	-39
 14477  012C4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14478  012C50  006F FF8F FFE6     	movff	plusw1,postinc1
 14479  012C56  EC00  F080         	call	_efgtoa	;wreg free
 14480  012C5A  D3B6               	goto	l2485
 14481  012C5C                     l13169:
 14482                           
 14483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 14484  012C5C  0E02               	movlw	2
 14485  012C5E  6EE6               	movwf	postinc1,c
 14486  012C60  0E00               	movlw	0
 14487  012C62  6EE6               	movwf	postinc1,c
 14488  012C64  0EEC               	movlw	low STR_96
 14489  012C66  6EE6               	movwf	postinc1,c
 14490  012C68  0EFF               	movlw	high STR_96
 14491  012C6A  6EE6               	movwf	postinc1,c
 14492                           
 14493                           ;stkvar	_ct @ sp[(-36)+26]
 14494  012C6C  0EF6               	movlw	246
 14495  012C6E  24E1               	addwf	fsr1l,w,c
 14496  012C70  6E01               	movwf	btemp^0,c
 14497  012C72  0EFF               	movlw	255
 14498  012C74  20E2               	addwfc	fsr1h,w,c
 14499  012C76  6E02               	movwf	(btemp+1)^0,c
 14500  012C78  0060  F007  FFE6   	movff	btemp,postinc1
 14501  012C7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14502  012C84  EC12  F0C2         	call	_strncmp	;wreg free
 14503  012C88  5001               	movf	btemp^0,w,c
 14504  012C8A  1002               	iorwf	(btemp+1)^0,w,c
 14505  012C8C  A4D8               	btfss	status,2,c
 14506  012C8E  D096               	goto	l13189
 14507                           
 14508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 14509                           ;stkvar	_fmt @ sp[(-32)+-4]
 14510  012C90  0EDC               	movlw	-36
 14511  012C92  006F FF8F FFD9     	movff	plusw1,fsr2l
 14512  012C98  0EDD               	movlw	-35
 14513  012C9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14514  012CA0  006F FF78  F00B    	movff	postinc2,btemp+10
 14515  012CA6  006F FF74  F00C    	movff	postdec2,btemp+11
 14516  012CAC  0E01               	movlw	1
 14517  012CAE  260B               	addwf	(btemp+10)^0,f,c
 14518  012CB0  0E00               	movlw	0
 14519  012CB2  220C               	addwfc	(btemp+11)^0,f,c
 14520  012CB4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14521  012CBA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14522  012CC0                     	if	0	;tblptru may be non-zero
 14523  012CC0                     	endif
 14524  012CC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14525  012CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 14526  012CC2  6EF8               	movwf	tblptru,c
 14527  012CC4                     	endif
 14528                           
 14529                           ;stkvar	_c @ sp[(-32)+31]
 14530  012CC4  0008               	tblrd		*
 14531  012CC6  0EFF               	movlw	-1
 14532  012CC8  006F FFD7 FFE3     	movff	tablat,plusw1
 14533  012CCE  0EBF               	movlw	191
 14534  012CD0  6E0B               	movwf	(btemp+10)^0,c
 14535  012CD2  0EFF               	movlw	255
 14536  012CD4  6E0C               	movwf	(btemp+11)^0,c
 14537                           
 14538                           ;stkvar	_fmt @ sp[(-32)+-4]
 14539  012CD6  0EDC               	movlw	-36
 14540  012CD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14541  012CDE  0EDD               	movlw	-35
 14542  012CE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14543  012CE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14544  012CEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14545  012CF2                     	if	0	;tblptru may be non-zero
 14546  012CF2                     	endif
 14547  012CF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14548  012CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 14549  012CF4  6EF8               	movwf	tblptru,c
 14550  012CF6                     	endif
 14551  012CF6  0008               	tblrd		*
 14552  012CF8  50F5               	movf	tablat,w,c
 14553  012CFA  6E09               	movwf	(btemp+8)^0,c
 14554  012CFC  6A0A               	clrf	(btemp+9)^0,c
 14555  012CFE  500B               	movf	(btemp+10)^0,w,c
 14556  012D00  2609               	addwf	(btemp+8)^0,f,c
 14557  012D02  500C               	movf	(btemp+11)^0,w,c
 14558  012D04  220A               	addwfc	(btemp+9)^0,f,c
 14559  012D06  500A               	movf	(btemp+9)^0,w,c
 14560  012D08  E106               	bnz	u12630
 14561  012D0A  0E1A               	movlw	26
 14562  012D0C  5C09               	subwf	(btemp+8)^0,w,c
 14563  012D0E  B0D8               	btfsc	status,0,c
 14564  012D10  D002               	goto	u12630
 14565  012D12  0E01               	movlw	1
 14566  012D14  D001               	goto	u12640
 14567  012D16                     u12630:
 14568  012D16  0E00               	movlw	0
 14569  012D18                     u12640:
 14570  012D18  6E0B               	movwf	(btemp+10)^0,c
 14571  012D1A  6A0C               	clrf	(btemp+11)^0,c
 14572                           
 14573                           ;stkvar	_vfpfcnvrt$5922 @ sp[(-32)+2]
 14574  012D1C  0EE2               	movlw	-30
 14575  012D1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14576  012D24  0EE3               	movlw	-29
 14577  012D26  0060  F033  FFE3   	movff	btemp+11,plusw1
 14578                           
 14579                           ;stkvar	_vfpfcnvrt$5922 @ sp[(-32)+2]
 14580  012D2C  0EE2               	movlw	-30
 14581  012D2E  006F FF8C  F001    	movff	plusw1,btemp
 14582  012D34  0EE3               	movlw	-29
 14583  012D36  50E3               	movf	plusw1,w,c
 14584  012D38  1001               	iorwf	btemp^0,w,c
 14585                           
 14586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14587                           ;stkvar	_ap @ sp[(-32)+-6]
 14588                           
 14589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 14590                           
 14591                           ;stkvar	_f @ sp[(-32)+22]
 14592                           
 14593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 14594                           ;stkvar	_ap @ sp[(-32)+-6]
 14595  012D3A  0EDA               	movlw	-38
 14596  012D3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14597  012D42  0EDB               	movlw	-37
 14598  012D44  006F FF8F FFDA     	movff	plusw1,fsr2h
 14599  012D4A  0E04               	movlw	4
 14600  012D4C  5EDE               	subwf	postinc2,f,c
 14601  012D4E  0E00               	movlw	0
 14602  012D50  5ADD               	subwfb	postdec2,f,c
 14603  012D52  006F FF78  F00B    	movff	postinc2,btemp+10
 14604  012D58  006F FF74  F00C    	movff	postdec2,btemp+11
 14605  012D5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14606  012D64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14607  012D6A  006F FF78  F009    	movff	postinc2,btemp+8
 14608  012D70  006F FF78  F00A    	movff	postinc2,btemp+9
 14609  012D76  006F FF78  F00B    	movff	postinc2,btemp+10
 14610  012D7C  006F FF78  F00C    	movff	postinc2,btemp+11
 14611                           
 14612                           ;stkvar	_f @ sp[(-32)+22]
 14613  012D82  0EF6               	movlw	-10
 14614  012D84  0060  F027  FFE3   	movff	btemp+8,plusw1
 14615  012D8A  0EF7               	movlw	-9
 14616  012D8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14617  012D92  0EF8               	movlw	-8
 14618  012D94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14619  012D9A  0EF9               	movlw	-7
 14620  012D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14621                           
 14622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 14623                           ;stkvar	_fmt @ sp[(-32)+-4]
 14624  012DA2  0EDC               	movlw	-36
 14625  012DA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14626  012DAA  0EDD               	movlw	-35
 14627  012DAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14628  012DB2  0E02               	movlw	2
 14629  012DB4  26DE               	addwf	postinc2,f,c
 14630  012DB6  0E00               	movlw	0
 14631  012DB8  22DD               	addwfc	postdec2,f,c
 14632  012DBA  D736               	goto	l13165
 14633  012DBC                     l13189:
 14634                           
 14635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 14636                           ;stkvar	_fmt @ sp[(-32)+-4]
 14637  012DBC  0EDC               	movlw	-36
 14638  012DBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14639  012DC4  0EDD               	movlw	-35
 14640  012DC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14641  012DCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 14642  012DD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 14643  012DD8                     	if	0	;tblptru may be non-zero
 14644  012DD8                     	endif
 14645  012DD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14646  012DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 14647  012DDA  6EF8               	movwf	tblptru,c
 14648  012DDC                     	endif
 14649  012DDC  0008               	tblrd		*
 14650  012DDE  50F5               	movf	tablat,w,c
 14651  012DE0  0A73               	xorlw	115
 14652  012DE2  A4D8               	btfss	status,2,c
 14653  012DE4  D042               	goto	l13199
 14654                           
 14655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 14656                           ;stkvar	_fmt @ sp[(-32)+-4]
 14657  012DE6  0EDC               	movlw	-36
 14658  012DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14659  012DEE  0EDD               	movlw	-35
 14660  012DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14661  012DF6  2ADE               	incf	postinc2,f,c
 14662  012DF8  0E00               	movlw	0
 14663  012DFA  22DD               	addwfc	postdec2,f,c
 14664                           
 14665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 14666                           ;stkvar	_ap @ sp[(-32)+-6]
 14667  012DFC  0EDA               	movlw	-38
 14668  012DFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14669  012E04  0EDB               	movlw	-37
 14670  012E06  006F FF8F FFDA     	movff	plusw1,fsr2h
 14671  012E0C  0E02               	movlw	2
 14672  012E0E  5EDE               	subwf	postinc2,f,c
 14673  012E10  0E00               	movlw	0
 14674  012E12  5ADD               	subwfb	postdec2,f,c
 14675  012E14  006F FF78  F00B    	movff	postinc2,btemp+10
 14676  012E1A  006F FF74  F00C    	movff	postdec2,btemp+11
 14677  012E20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14678  012E26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14679  012E2C  006F FF78  F00B    	movff	postinc2,btemp+10
 14680  012E32  006F FF74  F00C    	movff	postdec2,btemp+11
 14681                           
 14682                           ;stkvar	_cp @ sp[(-32)+29]
 14683  012E38  0EFE               	movlw	-2
 14684  012E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14685  012E40  0EFD               	movlw	-3
 14686  012E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14687                           
 14688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 14689                           ;stkvar	_cp @ sp[(-32)+29]
 14690  012E48  0EFD               	movlw	-3
 14691  012E4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14692  012E50  006F FF8F FFE6     	movff	plusw1,postinc1
 14693                           
 14694                           ;stkvar	_fp @ sp[(-34)+-2]
 14695  012E56  0EDC               	movlw	-36
 14696  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 14697  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14698  012E64  ECF6  F0BB         	call	_stoa	;wreg free
 14699  012E68  D2AF               	goto	l2485
 14700  012E6A                     l13199:
 14701                           
 14702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 14703                           ;stkvar	_fmt @ sp[(-32)+-4]
 14704  012E6A  0EDC               	movlw	-36
 14705  012E6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14706  012E72  0EDD               	movlw	-35
 14707  012E74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14708  012E7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 14709  012E80  006F FF77 FFF7     	movff	postdec2,tblptrh
 14710  012E86                     	if	0	;tblptru may be non-zero
 14711  012E86                     	endif
 14712  012E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14713  012E86  0E00               	movlw	low (__mediumconst shr (0+16))
 14714  012E88  6EF8               	movwf	tblptru,c
 14715  012E8A                     	endif
 14716  012E8A  0008               	tblrd		*
 14717  012E8C  50F5               	movf	tablat,w,c
 14718  012E8E  0A75               	xorlw	117
 14719  012E90  A4D8               	btfss	status,2,c
 14720  012E92  D07C               	goto	l13209
 14721                           
 14722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 14723                           ;stkvar	_fmt @ sp[(-32)+-4]
 14724  012E94  0EDC               	movlw	-36
 14725  012E96  006F FF8F FFD9     	movff	plusw1,fsr2l
 14726  012E9C  0EDD               	movlw	-35
 14727  012E9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14728  012EA4  2ADE               	incf	postinc2,f,c
 14729  012EA6  0E00               	movlw	0
 14730  012EA8  22DD               	addwfc	postdec2,f,c
 14731                           
 14732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14733                           ;stkvar	_ap @ sp[(-32)+-6]
 14734  012EAA  0EDA               	movlw	-38
 14735  012EAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14736  012EB2  0EDB               	movlw	-37
 14737  012EB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14738  012EBA  0E02               	movlw	2
 14739  012EBC  5EDE               	subwf	postinc2,f,c
 14740  012EBE  0E00               	movlw	0
 14741  012EC0  5ADD               	subwfb	postdec2,f,c
 14742  012EC2  006F FF78  F00B    	movff	postinc2,btemp+10
 14743  012EC8  006F FF74  F00C    	movff	postdec2,btemp+11
 14744  012ECE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14745  012ED4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14746  012EDA  006F FF78  F00B    	movff	postinc2,btemp+10
 14747  012EE0  006F FF74  F00C    	movff	postdec2,btemp+11
 14748  012EE6  500B               	movf	(btemp+10)^0,w,c
 14749  012EE8  6E11               	movwf	(btemp+16)^0,c
 14750  012EEA  500C               	movf	(btemp+11)^0,w,c
 14751  012EEC  6E12               	movwf	(btemp+17)^0,c
 14752  012EEE  6A13               	clrf	(btemp+18)^0,c
 14753  012EF0  6A14               	clrf	(btemp+19)^0,c
 14754  012EF2  6A15               	clrf	(btemp+20)^0,c
 14755  012EF4  6A16               	clrf	(btemp+21)^0,c
 14756  012EF6  6A17               	clrf	(btemp+22)^0,c
 14757  012EF8  6A18               	clrf	(btemp+23)^0,c
 14758                           
 14759                           ;stkvar	_llu @ sp[(-32)+6]
 14760  012EFA  0EE6               	movlw	-26
 14761  012EFC  0060  F047  FFE3   	movff	btemp+16,plusw1
 14762  012F02  0EE7               	movlw	-25
 14763  012F04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14764  012F0A  0EE8               	movlw	-24
 14765  012F0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14766  012F12  0EE9               	movlw	-23
 14767  012F14  0060  F053  FFE3   	movff	btemp+19,plusw1
 14768  012F1A  0EEA               	movlw	-22
 14769  012F1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 14770  012F22  0EEB               	movlw	-21
 14771  012F24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14772  012F2A  0EEC               	movlw	-20
 14773  012F2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14774  012F32  0EED               	movlw	-19
 14775  012F34  0060  F063  FFE3   	movff	btemp+23,plusw1
 14776                           
 14777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 14778                           ;stkvar	_llu @ sp[(-32)+6]
 14779  012F3A  50E1               	movf	fsr1l,w,c
 14780  012F3C  0FE6               	addlw	-26
 14781  012F3E  6ED9               	movwf	fsr2l,c
 14782  012F40  50E2               	movf	fsr1h,w,c
 14783  012F42  6EDA               	movwf	fsr2h,c
 14784  012F44  0EFF               	movlw	255
 14785  012F46  22DA               	addwfc	fsr2h,f,c
 14786  012F48  006F FF7B FFE6     	movff	postinc2,postinc1
 14787  012F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 14788  012F54  006F FF7B FFE6     	movff	postinc2,postinc1
 14789  012F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 14790  012F60  006F FF7B FFE6     	movff	postinc2,postinc1
 14791  012F66  006F FF7B FFE6     	movff	postinc2,postinc1
 14792  012F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 14793  012F72  006F FF7B FFE6     	movff	postinc2,postinc1
 14794                           
 14795                           ;stkvar	_fp @ sp[(-40)+-2]
 14796  012F78  0ED6               	movlw	-42
 14797  012F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 14798  012F80  006F FF8F FFE6     	movff	plusw1,postinc1
 14799  012F86  ECDE  F0B5         	call	_utoa	;wreg free
 14800  012F8A  D21E               	goto	l2485
 14801  012F8C                     l13209:
 14802                           
 14803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 14804  012F8C  0E02               	movlw	2
 14805  012F8E  6EE6               	movwf	postinc1,c
 14806  012F90  0E00               	movlw	0
 14807  012F92  6EE6               	movwf	postinc1,c
 14808  012F94  0EF2               	movlw	low STR_101
 14809  012F96  6EE6               	movwf	postinc1,c
 14810  012F98  0EFF               	movlw	high STR_101
 14811  012F9A  6EE6               	movwf	postinc1,c
 14812                           
 14813                           ;stkvar	_fmt @ sp[(-36)+-4]
 14814  012F9C  0ED8               	movlw	-40
 14815  012F9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14816  012FA4  0ED9               	movlw	-39
 14817  012FA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14818  012FAC  006F FF78  F00B    	movff	postinc2,btemp+10
 14819  012FB2  006F FF74  F00C    	movff	postdec2,btemp+11
 14820  012FB8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14821  012FBE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14822  012FC4  EC12  F0C2         	call	_strncmp	;wreg free
 14823  012FC8  5001               	movf	btemp^0,w,c
 14824  012FCA  1002               	iorwf	(btemp+1)^0,w,c
 14825  012FCC  A4D8               	btfss	status,2,c
 14826  012FCE  D039               	goto	l13219
 14827                           
 14828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 14829                           ;stkvar	_fmt @ sp[(-32)+-4]
 14830  012FD0  0EDC               	movlw	-36
 14831  012FD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14832  012FD8  0EDD               	movlw	-35
 14833  012FDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14834  012FE0  0E02               	movlw	2
 14835  012FE2  26DE               	addwf	postinc2,f,c
 14836  012FE4  0E00               	movlw	0
 14837  012FE6  22DD               	addwfc	postdec2,f,c
 14838                           
 14839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14840                           ;stkvar	_ap @ sp[(-32)+-6]
 14841  012FE8  0EDA               	movlw	-38
 14842  012FEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14843  012FF0  0EDB               	movlw	-37
 14844  012FF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14845  012FF8  0E04               	movlw	4
 14846  012FFA  5EDE               	subwf	postinc2,f,c
 14847  012FFC  0E00               	movlw	0
 14848  012FFE  5ADD               	subwfb	postdec2,f,c
 14849  013000  006F FF78  F00B    	movff	postinc2,btemp+10
 14850  013006  006F FF74  F00C    	movff	postdec2,btemp+11
 14851  01300C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14852  013012  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14853  013018  006F FF78  F009    	movff	postinc2,btemp+8
 14854  01301E  006F FF78  F00A    	movff	postinc2,btemp+9
 14855  013024  006F FF78  F00B    	movff	postinc2,btemp+10
 14856  01302A  006F FF78  F00C    	movff	postinc2,btemp+11
 14857  013030  5009               	movf	(btemp+8)^0,w,c
 14858  013032  6E11               	movwf	(btemp+16)^0,c
 14859  013034  500A               	movf	(btemp+9)^0,w,c
 14860  013036  6E12               	movwf	(btemp+17)^0,c
 14861  013038  500B               	movf	(btemp+10)^0,w,c
 14862  01303A  6E13               	movwf	(btemp+18)^0,c
 14863  01303C  500C               	movf	(btemp+11)^0,w,c
 14864  01303E  6E14               	movwf	(btemp+19)^0,c
 14865  013040  D758               	goto	L13
 14866  013042                     l13219:
 14867                           
 14868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 14869                           ;stkvar	_fmt @ sp[(-32)+-4]
 14870  013042  0EDC               	movlw	-36
 14871  013044  006F FF8F FFD9     	movff	plusw1,fsr2l
 14872  01304A  0EDD               	movlw	-35
 14873  01304C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14874  013052  006F FF7B FFF6     	movff	postinc2,tblptrl
 14875  013058  006F FF77 FFF7     	movff	postdec2,tblptrh
 14876  01305E                     	if	0	;tblptru may be non-zero
 14877  01305E                     	endif
 14878  01305E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14879  01305E  0E00               	movlw	low (__mediumconst shr (0+16))
 14880  013060  6EF8               	movwf	tblptru,c
 14881  013062                     	endif
 14882  013062  0008               	tblrd		*
 14883  013064  50F5               	movf	tablat,w,c
 14884  013066  0A78               	xorlw	120
 14885  013068  B4D8               	btfsc	status,2,c
 14886  01306A  D015               	goto	u12700
 14887                           
 14888                           ;stkvar	_fmt @ sp[(-32)+-4]
 14889  01306C  0EDC               	movlw	-36
 14890  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14891  013074  0EDD               	movlw	-35
 14892  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 14893  01307C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14894  013082  006F FF77 FFF7     	movff	postdec2,tblptrh
 14895  013088                     	if	0	;tblptru may be non-zero
 14896  013088                     	endif
 14897  013088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14898  013088  0E00               	movlw	low (__mediumconst shr (0+16))
 14899  01308A  6EF8               	movwf	tblptru,c
 14900  01308C                     	endif
 14901  01308C  0008               	tblrd		*
 14902  01308E  50F5               	movf	tablat,w,c
 14903  013090  0A58               	xorlw	88
 14904  013092  A4D8               	btfss	status,2,c
 14905  013094  D094               	goto	l13233
 14906  013096                     u12700:
 14907                           
 14908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 14909                           ;stkvar	_fmt @ sp[(-32)+-4]
 14910  013096  0EDC               	movlw	-36
 14911  013098  006F FF8F FFD9     	movff	plusw1,fsr2l
 14912  01309E  0EDD               	movlw	-35
 14913  0130A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14914  0130A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14915  0130AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14916  0130B2                     	if	0	;tblptru may be non-zero
 14917  0130B2                     	endif
 14918  0130B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14919  0130B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14920  0130B4  6EF8               	movwf	tblptru,c
 14921  0130B6                     	endif
 14922                           
 14923                           ;stkvar	_c @ sp[(-32)+31]
 14924  0130B6  0008               	tblrd		*
 14925  0130B8  0EFF               	movlw	-1
 14926  0130BA  006F FFD7 FFE3     	movff	tablat,plusw1
 14927                           
 14928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 14929                           ;stkvar	_fmt @ sp[(-32)+-4]
 14930  0130C0  0EDC               	movlw	-36
 14931  0130C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14932  0130C8  0EDD               	movlw	-35
 14933  0130CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14934  0130D0  2ADE               	incf	postinc2,f,c
 14935  0130D2  0E00               	movlw	0
 14936  0130D4  22DD               	addwfc	postdec2,f,c
 14937                           
 14938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14939                           ;stkvar	_ap @ sp[(-32)+-6]
 14940  0130D6  0EDA               	movlw	-38
 14941  0130D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14942  0130DE  0EDB               	movlw	-37
 14943  0130E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14944  0130E6  0E02               	movlw	2
 14945  0130E8  5EDE               	subwf	postinc2,f,c
 14946  0130EA  0E00               	movlw	0
 14947  0130EC  5ADD               	subwfb	postdec2,f,c
 14948  0130EE  006F FF78  F00B    	movff	postinc2,btemp+10
 14949  0130F4  006F FF74  F00C    	movff	postdec2,btemp+11
 14950  0130FA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14951  013100  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14952  013106  006F FF78  F00B    	movff	postinc2,btemp+10
 14953  01310C  006F FF74  F00C    	movff	postdec2,btemp+11
 14954  013112  500B               	movf	(btemp+10)^0,w,c
 14955  013114  6E11               	movwf	(btemp+16)^0,c
 14956  013116  500C               	movf	(btemp+11)^0,w,c
 14957  013118  6E12               	movwf	(btemp+17)^0,c
 14958  01311A  6A13               	clrf	(btemp+18)^0,c
 14959  01311C  6A14               	clrf	(btemp+19)^0,c
 14960  01311E  6A15               	clrf	(btemp+20)^0,c
 14961  013120  6A16               	clrf	(btemp+21)^0,c
 14962  013122  6A17               	clrf	(btemp+22)^0,c
 14963  013124  6A18               	clrf	(btemp+23)^0,c
 14964                           
 14965                           ;stkvar	_llu @ sp[(-32)+6]
 14966  013126  0EE6               	movlw	-26
 14967  013128  0060  F047  FFE3   	movff	btemp+16,plusw1
 14968  01312E  0EE7               	movlw	-25
 14969  013130  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14970  013136  0EE8               	movlw	-24
 14971  013138  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14972  01313E  0EE9               	movlw	-23
 14973  013140  0060  F053  FFE3   	movff	btemp+19,plusw1
 14974  013146  0EEA               	movlw	-22
 14975  013148  0060  F057  FFE3   	movff	btemp+20,plusw1
 14976  01314E  0EEB               	movlw	-21
 14977  013150  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14978  013156  0EEC               	movlw	-20
 14979  013158  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14980  01315E  0EED               	movlw	-19
 14981  013160  0060  F063  FFE3   	movff	btemp+23,plusw1
 14982                           
 14983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 14984                           ;stkvar	_c @ sp[(-32)+31]
 14985  013166  0EFF               	movlw	-1
 14986  013168  50E3               	movf	plusw1,w,c
 14987  01316A  6EE6               	movwf	postinc1,c
 14988                           
 14989                           ;stkvar	_llu @ sp[(-33)+6]
 14990  01316C  50E1               	movf	fsr1l,w,c
 14991  01316E  0FE5               	addlw	-27
 14992  013170  6ED9               	movwf	fsr2l,c
 14993  013172  50E2               	movf	fsr1h,w,c
 14994  013174  6EDA               	movwf	fsr2h,c
 14995  013176  0EFF               	movlw	255
 14996  013178  22DA               	addwfc	fsr2h,f,c
 14997  01317A  006F FF7B FFE6     	movff	postinc2,postinc1
 14998  013180  006F FF7B FFE6     	movff	postinc2,postinc1
 14999  013186  006F FF7B FFE6     	movff	postinc2,postinc1
 15000  01318C  006F FF7B FFE6     	movff	postinc2,postinc1
 15001  013192  006F FF7B FFE6     	movff	postinc2,postinc1
 15002  013198  006F FF7B FFE6     	movff	postinc2,postinc1
 15003  01319E  006F FF7B FFE6     	movff	postinc2,postinc1
 15004  0131A4  006F FF7B FFE6     	movff	postinc2,postinc1
 15005                           
 15006                           ;stkvar	_fp @ sp[(-41)+-2]
 15007  0131AA  0ED5               	movlw	-43
 15008  0131AC  006F FF8F FFE6     	movff	plusw1,postinc1
 15009  0131B2  006F FF8F FFE6     	movff	plusw1,postinc1
 15010  0131B8  EC94  F0B0         	call	_xtoa	;wreg free
 15011  0131BC  D105               	goto	l2485
 15012  0131BE                     l13233:
 15013                           
 15014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 15015  0131BE  0E02               	movlw	2
 15016  0131C0  6EE6               	movwf	postinc1,c
 15017  0131C2  0E00               	movlw	0
 15018  0131C4  6EE6               	movwf	postinc1,c
 15019  0131C6  0EF5               	movlw	low STR_106
 15020  0131C8  6EE6               	movwf	postinc1,c
 15021  0131CA  0EFF               	movlw	high STR_106
 15022  0131CC  6EE6               	movwf	postinc1,c
 15023                           
 15024                           ;stkvar	_fmt @ sp[(-36)+-4]
 15025  0131CE  0ED8               	movlw	-40
 15026  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15027  0131D6  0ED9               	movlw	-39
 15028  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15029  0131DE  006F FF78  F00B    	movff	postinc2,btemp+10
 15030  0131E4  006F FF74  F00C    	movff	postdec2,btemp+11
 15031  0131EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15032  0131F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15033  0131F6  EC12  F0C2         	call	_strncmp	;wreg free
 15034  0131FA  5001               	movf	btemp^0,w,c
 15035  0131FC  1002               	iorwf	(btemp+1)^0,w,c
 15036  0131FE  B4D8               	btfsc	status,2,c
 15037  013200  D022               	goto	u12720
 15038  013202  0E02               	movlw	2
 15039  013204  6EE6               	movwf	postinc1,c
 15040  013206  0E00               	movlw	0
 15041  013208  6EE6               	movwf	postinc1,c
 15042  01320A  0EE6               	movlw	low STR_110
 15043  01320C  6EE6               	movwf	postinc1,c
 15044  01320E  0EFF               	movlw	high STR_110
 15045  013210  6EE6               	movwf	postinc1,c
 15046                           
 15047                           ;stkvar	_fmt @ sp[(-36)+-4]
 15048  013212  0ED8               	movlw	-40
 15049  013214  006F FF8F FFD9     	movff	plusw1,fsr2l
 15050  01321A  0ED9               	movlw	-39
 15051  01321C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15052  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 15053  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 15054  01322E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15055  013234  0060  F033  FFE6   	movff	btemp+11,postinc1
 15056  01323A  EC12  F0C2         	call	_strncmp	;wreg free
 15057  01323E  5001               	movf	btemp^0,w,c
 15058  013240  1002               	iorwf	(btemp+1)^0,w,c
 15059  013242  A4D8               	btfss	status,2,c
 15060  013244  D058               	goto	l13247
 15061  013246                     u12720:
 15062                           
 15063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 15064                           ;stkvar	_fmt @ sp[(-32)+-4]
 15065  013246  0EDC               	movlw	-36
 15066  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 15067  01324E  0EDD               	movlw	-35
 15068  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 15069  013256  006F FF78  F00B    	movff	postinc2,btemp+10
 15070  01325C  006F FF74  F00C    	movff	postdec2,btemp+11
 15071  013262  0E01               	movlw	1
 15072  013264  260B               	addwf	(btemp+10)^0,f,c
 15073  013266  0E00               	movlw	0
 15074  013268  220C               	addwfc	(btemp+11)^0,f,c
 15075  01326A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15076  013270  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15077  013276                     	if	0	;tblptru may be non-zero
 15078  013276                     	endif
 15079  013276                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15080  013276  0E00               	movlw	low (__mediumconst shr (0+16))
 15081  013278  6EF8               	movwf	tblptru,c
 15082  01327A                     	endif
 15083                           
 15084                           ;stkvar	_c @ sp[(-32)+31]
 15085  01327A  0008               	tblrd		*
 15086  01327C  0EFF               	movlw	-1
 15087  01327E  006F FFD7 FFE3     	movff	tablat,plusw1
 15088                           
 15089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 15090                           ;stkvar	_fmt @ sp[(-32)+-4]
 15091  013284  0EDC               	movlw	-36
 15092  013286  006F FF8F FFD9     	movff	plusw1,fsr2l
 15093  01328C  0EDD               	movlw	-35
 15094  01328E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15095  013294  0E02               	movlw	2
 15096  013296  26DE               	addwf	postinc2,f,c
 15097  013298  0E00               	movlw	0
 15098  01329A  22DD               	addwfc	postdec2,f,c
 15099                           
 15100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 15101                           ;stkvar	_ap @ sp[(-32)+-6]
 15102  01329C  0EDA               	movlw	-38
 15103  01329E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15104  0132A4  0EDB               	movlw	-37
 15105  0132A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15106  0132AC  0E04               	movlw	4
 15107  0132AE  5EDE               	subwf	postinc2,f,c
 15108  0132B0  0E00               	movlw	0
 15109  0132B2  5ADD               	subwfb	postdec2,f,c
 15110  0132B4  006F FF78  F00B    	movff	postinc2,btemp+10
 15111  0132BA  006F FF74  F00C    	movff	postdec2,btemp+11
 15112  0132C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15113  0132C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15114  0132CC  006F FF78  F009    	movff	postinc2,btemp+8
 15115  0132D2  006F FF78  F00A    	movff	postinc2,btemp+9
 15116  0132D8  006F FF78  F00B    	movff	postinc2,btemp+10
 15117  0132DE  006F FF78  F00C    	movff	postinc2,btemp+11
 15118  0132E4  5009               	movf	(btemp+8)^0,w,c
 15119  0132E6  6E11               	movwf	(btemp+16)^0,c
 15120  0132E8  500A               	movf	(btemp+9)^0,w,c
 15121  0132EA  6E12               	movwf	(btemp+17)^0,c
 15122  0132EC  500B               	movf	(btemp+10)^0,w,c
 15123  0132EE  6E13               	movwf	(btemp+18)^0,c
 15124  0132F0  500C               	movf	(btemp+11)^0,w,c
 15125  0132F2  6E14               	movwf	(btemp+19)^0,c
 15126  0132F4  D714               	goto	L14
 15127  0132F6                     l13247:
 15128                           
 15129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 15130                           ;stkvar	_fmt @ sp[(-32)+-4]
 15131  0132F6  0EDC               	movlw	-36
 15132  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15133  0132FE  0EDD               	movlw	-35
 15134  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 15135  013306  006F FF7B FFF6     	movff	postinc2,tblptrl
 15136  01330C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15137  013312                     	if	0	;tblptru may be non-zero
 15138  013312                     	endif
 15139  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15140  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 15141  013314  6EF8               	movwf	tblptru,c
 15142  013316                     	endif
 15143  013316  0008               	tblrd		*
 15144  013318  50F5               	movf	tablat,w,c
 15145  01331A  0A25               	xorlw	37
 15146  01331C  A4D8               	btfss	status,2,c
 15147  01331E  D01A               	goto	l13257
 15148                           
 15149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 15150                           ;stkvar	_fmt @ sp[(-32)+-4]
 15151  013320  0EDC               	movlw	-36
 15152  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 15153  013328  0EDD               	movlw	-35
 15154  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15155  013330  2ADE               	incf	postinc2,f,c
 15156  013332  0E00               	movlw	0
 15157  013334  22DD               	addwfc	postdec2,f,c
 15158                           
 15159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 15160                           ;stkvar	_fp @ sp[(-32)+-2]
 15161  013336  0EDE               	movlw	-34
 15162  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 15163  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 15164  013344  0E25               	movlw	37
 15165  013346  6EE6               	movwf	postinc1,c
 15166  013348  0E00               	movlw	0
 15167  01334A  6EE6               	movwf	postinc1,c
 15168  01334C  EC6E  F0CF         	call	_fputc	;wreg free
 15169  013350                     l13253:
 15170                           
 15171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 15172  013350  0E01               	movlw	1
 15173  013352  D00C               	goto	L15
 15174  013354                     l13257:
 15175                           
 15176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 15177                           ;stkvar	_fmt @ sp[(-32)+-4]
 15178  013354  0EDC               	movlw	-36
 15179  013356  006F FF8F FFD9     	movff	plusw1,fsr2l
 15180  01335C  0EDD               	movlw	-35
 15181  01335E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15182  013364  2ADE               	incf	postinc2,f,c
 15183  013366  0E00               	movlw	0
 15184  013368  22DD               	addwfc	postdec2,f,c
 15185                           
 15186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 15187  01336A  0E00               	movlw	0
 15188  01336C                     L15:
 15189  01336C  6E01               	movwf	btemp^0,c
 15190  01336E  0E00               	movlw	0
 15191  013370  6E02               	movwf	(btemp+1)^0,c
 15192  013372  D02A               	goto	l2485
 15193  013374                     l13263:
 15194                           
 15195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 15196                           ;stkvar	_fp @ sp[(-32)+-2]
 15197  013374  0EDE               	movlw	-34
 15198  013376  006F FF8F FFE6     	movff	plusw1,postinc1
 15199  01337C  006F FF8F FFE6     	movff	plusw1,postinc1
 15200                           
 15201                           ;stkvar	_fmt @ sp[(-34)+-4]
 15202  013382  0EDA               	movlw	-38
 15203  013384  006F FF8F FFD9     	movff	plusw1,fsr2l
 15204  01338A  0EDB               	movlw	-37
 15205  01338C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15206  013392  006F FF7B FFF6     	movff	postinc2,tblptrl
 15207  013398  006F FF77 FFF7     	movff	postdec2,tblptrh
 15208  01339E                     	if	0	;tblptru may be non-zero
 15209  01339E                     	endif
 15210  01339E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15211  01339E  0E00               	movlw	low (__mediumconst shr (0+16))
 15212  0133A0  6EF8               	movwf	tblptru,c
 15213  0133A2                     	endif
 15214  0133A2  0008               	tblrd		*
 15215  0133A4  50F5               	movf	tablat,w,c
 15216  0133A6  6EE6               	movwf	postinc1,c
 15217  0133A8  0E00               	movlw	0
 15218  0133AA  6EE6               	movwf	postinc1,c
 15219  0133AC  EC6E  F0CF         	call	_fputc	;wreg free
 15220                           
 15221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 15222                           ;stkvar	_fmt @ sp[(-32)+-4]
 15223  0133B0  0EDC               	movlw	-36
 15224  0133B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15225  0133B8  0EDD               	movlw	-35
 15226  0133BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15227  0133C0  2ADE               	incf	postinc2,f,c
 15228  0133C2  0E00               	movlw	0
 15229  0133C4  22DD               	addwfc	postdec2,f,c
 15230  0133C6  D7C4               	goto	l13253
 15231  0133C8                     l2485:
 15232                           
 15233                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 15234  0133C8  0EDA               	movlw	218
 15235  0133CA  26E1               	addwf	fsr1l,f,c
 15236  0133CC  0EFF               	movlw	255
 15237  0133CE  22E2               	addwfc	fsr1h,f,c
 15238  0133D0  0012               	return		;funcret
 15239  0133D2                     __end_of_vfpfcnvrt:
 15240                           	opt callstack 0
 15241                           
 15242 ;; *************** function _xtoa *****************
 15243 ;; Defined at:
 15244 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15245 ;; Parameters:    Size  Location     Type
 15246 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15247 ;;		 -> f(6), NULL(0), 
 15248 ;;  d               8  [STACK] unsigned long long 
 15249 ;;  x               1  [STACK] unsigned char 
 15250 ;; Auto vars:     Size  Location     Type
 15251 ;;  n               8  [STACK] unsigned long long 
 15252 ;;  c               2  [STACK] int 
 15253 ;;  i               2  [STACK] int 
 15254 ;;  w               2  [STACK] int 
 15255 ;;  p               2  [STACK] int 
 15256 ;; Return value:  Size  Location     Type
 15257 ;;                  2  [STACK] int 
 15258 ;; Registers used:
 15259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15260 ;; Tracked objects:
 15261 ;;		On entry : 0/0
 15262 ;;		On exit  : 0/0
 15263 ;;		Unchanged: 0/0
 15264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15269 ;;Total ram usage:        0 bytes
 15270 ;; Hardware stack levels used:    1
 15271 ;; Hardware stack levels required when called:   20
 15272 ;; This function calls:
 15273 ;;		_isalpha
 15274 ;;		_isupper
 15275 ;;		_pad
 15276 ;;		_toupper
 15277 ;; This function is called by:
 15278 ;;		_vfpfcnvrt
 15279 ;; This function uses a reentrant model
 15280 ;;
 15281                           
 15282                           	psect	text56
 15283  016128                     __ptext56:
 15284                           	opt callstack 0
 15285  016128                     _xtoa:
 15286                           	opt callstack 0
 15287                           
 15288                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15289  016128  0E14               	movlw	20
 15290  01612A  26E1               	addwf	fsr1l,f,c
 15291  01612C  0E00               	movlw	0
 15292  01612E  22E2               	addwfc	fsr1h,f,c
 15293                           
 15294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 15295                           
 15296                           ;incstack = 0
 15297 ;; hardware stack exceeded
 15298  016130  AE3D               	btfss	(_prec+1)^0,7,c
 15299                           
 15300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 15301  016132  923E               	bcf	_flags^0,1,c
 15302                           
 15303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 15304  016134  BE3D               	btfsc	(_prec+1)^0,7,c
 15305  016136  D005               	goto	u12260
 15306  016138  503D               	movf	(_prec+1)^0,w,c
 15307  01613A  E110               	bnz	l12983
 15308  01613C  043C               	decf	_prec^0,w,c
 15309  01613E  B0D8               	btfsc	status,0,c
 15310  016140  D00D               	goto	l12983
 15311  016142                     u12260:
 15312  016142  0E01               	movlw	1
 15313  016144  6E0B               	movwf	(btemp+10)^0,c
 15314  016146  0E00               	movlw	0
 15315  016148  6E0C               	movwf	(btemp+11)^0,c
 15316                           
 15317                           ;stkvar	_p @ sp[(-20)+18]
 15318  01614A  0EFE               	movlw	-2
 15319  01614C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15320  016152  0EFF               	movlw	-1
 15321  016154  0060  F033  FFE3   	movff	btemp+11,plusw1
 15322  01615A  D008               	goto	l2435
 15323  01615C                     l12983:
 15324                           
 15325                           ;stkvar	_p @ sp[(-20)+18]
 15326  01615C  0EFE               	movlw	-2
 15327  01615E  0060  F0F3  FFE3   	movff	_prec,plusw1
 15328  016164  0EFF               	movlw	-1
 15329  016166  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15330  01616C                     l2435:
 15331                           
 15332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 15333                           ;stkvar	_w @ sp[(-20)+16]
 15334  01616C  0EFC               	movlw	-4
 15335  01616E  0060  F0EB  FFE3   	movff	_width,plusw1
 15336  016174  0EFD               	movlw	-3
 15337  016176  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15338                           
 15339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 15340  01617C  A83E               	btfss	_flags^0,4,c
 15341  01617E  D00B               	goto	l12989
 15342                           
 15343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 15344                           ;stkvar	_w @ sp[(-20)+16]
 15345  016180  50E1               	movf	fsr1l,w,c
 15346  016182  0FFC               	addlw	-4
 15347  016184  6ED9               	movwf	fsr2l,c
 15348  016186  50E2               	movf	fsr1h,w,c
 15349  016188  6EDA               	movwf	fsr2h,c
 15350  01618A  0EFF               	movlw	255
 15351  01618C  22DA               	addwfc	fsr2h,f,c
 15352  01618E  0EFE               	movlw	254
 15353  016190  26DE               	addwf	postinc2,f,c
 15354  016192  0EFF               	movlw	255
 15355  016194  22DD               	addwfc	postdec2,f,c
 15356  016196                     l12989:
 15357                           
 15358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 15359                           ;stkvar	_d @ sp[(-20)+-10]
 15360  016196  0EE2               	movlw	226
 15361  016198  24E1               	addwf	fsr1l,w,c
 15362  01619A  6ED9               	movwf	fsr2l,c
 15363  01619C  0EFF               	movlw	255
 15364  01619E  20E2               	addwfc	fsr1h,w,c
 15365  0161A0  6EDA               	movwf	fsr2h,c
 15366                           
 15367                           ;stkvar	_n @ sp[(-20)+4]
 15368  0161A2  0E08               	movlw	8
 15369  0161A4  6E01               	movwf	btemp^0,c
 15370  0161A6  0EF0               	movlw	-16
 15371  0161A8                     us1228999:
 15372  0161A8  006F FF7B FFE3     	movff	postinc2,plusw1
 15373  0161AE  28E8               	incf	wreg,w,c
 15374  0161B0  2E01               	decfsz	btemp^0,f,c
 15375  0161B2  D7FA               	bra	us1228999
 15376                           
 15377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 15378  0161B4  0E4F               	movlw	79
 15379  0161B6  6E0B               	movwf	(btemp+10)^0,c
 15380  0161B8  0E00               	movlw	0
 15381  0161BA  6E0C               	movwf	(btemp+11)^0,c
 15382                           
 15383                           ;stkvar	_i @ sp[(-20)+14]
 15384  0161BC  0EFA               	movlw	-6
 15385  0161BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15386  0161C4  0EFB               	movlw	-5
 15387  0161C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15388                           
 15389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 15390  0161CC  0102               	movlb	2	; () banked
 15391  0161CE  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15392                           
 15393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15394  0161D0  D0EE               	goto	l13027
 15395  0161D2                     l12995:
 15396                           
 15397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 15398                           ;stkvar	_i @ sp[(-20)+14]
 15399  0161D2  50E1               	movf	fsr1l,w,c
 15400  0161D4  0FFA               	addlw	-6
 15401  0161D6  6ED9               	movwf	fsr2l,c
 15402  0161D8  50E2               	movf	fsr1h,w,c
 15403  0161DA  6EDA               	movwf	fsr2h,c
 15404  0161DC  0EFF               	movlw	255
 15405  0161DE  22DA               	addwfc	fsr2h,f,c
 15406  0161E0  06DE               	decf	postinc2,f,c
 15407  0161E2  0E00               	movlw	0
 15408  0161E4  5ADD               	subwfb	postdec2,f,c
 15409                           
 15410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 15411                           ;stkvar	_n @ sp[(-20)+4]
 15412  0161E6  0EF0               	movlw	-16
 15413  0161E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15414  0161EE  0EF1               	movlw	-15
 15415  0161F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15416  0161F6  0E0F               	movlw	15
 15417  0161F8  160B               	andwf	(btemp+10)^0,f,c
 15418  0161FA  0E00               	movlw	0
 15419  0161FC  160C               	andwf	(btemp+11)^0,f,c
 15420                           
 15421                           ;stkvar	_c @ sp[(-20)+12]
 15422  0161FE  0EF8               	movlw	-8
 15423  016200  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15424  016206  0EF9               	movlw	-7
 15425  016208  0060  F033  FFE3   	movff	btemp+11,plusw1
 15426                           
 15427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 15428                           ;stkvar	_c @ sp[(-20)+12]
 15429  01620E  0EF9               	movlw	-7
 15430  016210  BEE3               	btfsc	plusw1,7,c
 15431  016212  D00F               	goto	l13003
 15432  016214  0EF9               	movlw	-7
 15433  016216  50E3               	movf	plusw1,w,c
 15434  016218  E108               	bnz	u12290
 15435  01621A  0EF8               	movlw	-8
 15436  01621C  006F FF8C  F001    	movff	plusw1,btemp
 15437  016222  0E0A               	movlw	10
 15438  016224  5E01               	subwf	btemp^0,f,c
 15439  016226  A0D8               	btfss	status,0,c
 15440  016228  D004               	goto	l13003
 15441  01622A                     u12290:
 15442                           
 15443                           ;stkvar	_c @ sp[(-20)+12]
 15444  01622A  0EF8               	movlw	-8
 15445  01622C  50E3               	movf	plusw1,w,c
 15446  01622E  0F57               	addlw	87
 15447  016230  D003               	goto	L16
 15448  016232                     l13003:
 15449                           
 15450                           ;stkvar	_c @ sp[(-20)+12]
 15451  016232  0EF8               	movlw	-8
 15452  016234  50E3               	movf	plusw1,w,c
 15453  016236  0F30               	addlw	48
 15454  016238                     L16:
 15455  016238  6E0B               	movwf	(btemp+10)^0,c
 15456  01623A  0EF9               	movlw	-7
 15457  01623C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15458  016242  0E00               	movlw	0
 15459  016244  220C               	addwfc	(btemp+11)^0,f,c
 15460                           
 15461                           ;stkvar	_c @ sp[(-20)+12]
 15462  016246  0EF8               	movlw	-8
 15463  016248  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15464  01624E  0EF9               	movlw	-7
 15465  016250  0060  F033  FFE3   	movff	btemp+11,plusw1
 15466  016256  0EBF               	movlw	191
 15467  016258  6E0B               	movwf	(btemp+10)^0,c
 15468  01625A  0EFF               	movlw	255
 15469  01625C  6E0C               	movwf	(btemp+11)^0,c
 15470                           
 15471                           ;stkvar	_x @ sp[(-20)+-11]
 15472  01625E  0EE1               	movlw	-31
 15473  016260  50E3               	movf	plusw1,w,c
 15474  016262  6E09               	movwf	(btemp+8)^0,c
 15475  016264  6A0A               	clrf	(btemp+9)^0,c
 15476  016266  500B               	movf	(btemp+10)^0,w,c
 15477  016268  2609               	addwf	(btemp+8)^0,f,c
 15478  01626A  500C               	movf	(btemp+11)^0,w,c
 15479  01626C  220A               	addwfc	(btemp+9)^0,f,c
 15480  01626E  500A               	movf	(btemp+9)^0,w,c
 15481  016270  E106               	bnz	u12300
 15482  016272  0E1A               	movlw	26
 15483  016274  5C09               	subwf	(btemp+8)^0,w,c
 15484  016276  B0D8               	btfsc	status,0,c
 15485  016278  D002               	goto	u12300
 15486  01627A  0E01               	movlw	1
 15487  01627C  D001               	goto	u12310
 15488  01627E                     u12300:
 15489  01627E  0E00               	movlw	0
 15490  016280                     u12310:
 15491  016280  6E0B               	movwf	(btemp+10)^0,c
 15492  016282  6A0C               	clrf	(btemp+11)^0,c
 15493                           
 15494                           ;stkvar	_xtoa$5895 @ sp[(-20)+2]
 15495  016284  0EEE               	movlw	-18
 15496  016286  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15497  01628C  0EEF               	movlw	-17
 15498  01628E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15499                           
 15500                           ;stkvar	_xtoa$5895 @ sp[(-20)+2]
 15501  016294  0EEE               	movlw	-18
 15502  016296  006F FF8C  F001    	movff	plusw1,btemp
 15503  01629C  0EEF               	movlw	-17
 15504  01629E  50E3               	movf	plusw1,w,c
 15505  0162A0  1001               	iorwf	btemp^0,w,c
 15506  0162A2  B4D8               	btfsc	status,2,c
 15507  0162A4  D041               	goto	l13019
 15508  0162A6  0E9F               	movlw	159
 15509  0162A8  6E0B               	movwf	(btemp+10)^0,c
 15510  0162AA  0EFF               	movlw	255
 15511  0162AC  6E0C               	movwf	(btemp+11)^0,c
 15512                           
 15513                           ;stkvar	_c @ sp[(-20)+12]
 15514  0162AE  0EF8               	movlw	-8
 15515  0162B0  006F FF8C  F009    	movff	plusw1,btemp+8
 15516  0162B6  0EF9               	movlw	-7
 15517  0162B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 15518  0162BE  0E20               	movlw	32
 15519  0162C0  1209               	iorwf	(btemp+8)^0,f,c
 15520  0162C2  0E00               	movlw	0
 15521  0162C4  120A               	iorwf	(btemp+9)^0,f,c
 15522  0162C6  500B               	movf	(btemp+10)^0,w,c
 15523  0162C8  2609               	addwf	(btemp+8)^0,f,c
 15524  0162CA  500C               	movf	(btemp+11)^0,w,c
 15525  0162CC  220A               	addwfc	(btemp+9)^0,f,c
 15526  0162CE  500A               	movf	(btemp+9)^0,w,c
 15527  0162D0  E106               	bnz	u12330
 15528  0162D2  0E1A               	movlw	26
 15529  0162D4  5C09               	subwf	(btemp+8)^0,w,c
 15530  0162D6  B0D8               	btfsc	status,0,c
 15531  0162D8  D002               	goto	u12330
 15532  0162DA  0E01               	movlw	1
 15533  0162DC  D001               	goto	u12340
 15534  0162DE                     u12330:
 15535  0162DE  0E00               	movlw	0
 15536  0162E0                     u12340:
 15537  0162E0  6E0B               	movwf	(btemp+10)^0,c
 15538  0162E2  6A0C               	clrf	(btemp+11)^0,c
 15539                           
 15540                           ;stkvar	_xtoa$5896 @ sp[(-20)+0]
 15541  0162E4  0EEC               	movlw	-20
 15542  0162E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15543  0162EC  0EED               	movlw	-19
 15544  0162EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15545                           
 15546                           ;stkvar	_xtoa$5896 @ sp[(-20)+0]
 15547  0162F4  0EEC               	movlw	-20
 15548  0162F6  006F FF8C  F001    	movff	plusw1,btemp
 15549  0162FC  0EED               	movlw	-19
 15550  0162FE  50E3               	movf	plusw1,w,c
 15551  016300  1001               	iorwf	btemp^0,w,c
 15552  016302  B4D8               	btfsc	status,2,c
 15553  016304  D011               	goto	l13019
 15554                           
 15555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 15556                           ;stkvar	_c @ sp[(-20)+12]
 15557  016306  0EF8               	movlw	-8
 15558  016308  006F FF8F FFE6     	movff	plusw1,postinc1
 15559  01630E  006F FF8F FFE6     	movff	plusw1,postinc1
 15560  016314  EC48  F0DA         	call	_toupper	;wreg free
 15561                           
 15562                           ;stkvar	_c @ sp[(-20)+12]
 15563  016318  0EF8               	movlw	-8
 15564  01631A  0060  F007  FFE3   	movff	btemp,plusw1
 15565  016320  0EF9               	movlw	-7
 15566  016322  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15567  016328                     l13019:
 15568                           
 15569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 15570                           ;stkvar	_c @ sp[(-20)+12]
 15571                           ;stkvar	_i @ sp[(-20)+14]
 15572  016328  0EFA               	movlw	-6
 15573  01632A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15574  016330  0EFB               	movlw	-5
 15575  016332  006F FF8C  F00C    	movff	plusw1,btemp+11
 15576  016338  0E97               	movlw	low _dbuf
 15577  01633A  240B               	addwf	(btemp+10)^0,w,c
 15578  01633C  6ED9               	movwf	fsr2l,c
 15579  01633E  0E02               	movlw	high _dbuf
 15580  016340  200C               	addwfc	(btemp+11)^0,w,c
 15581  016342  6EDA               	movwf	fsr2h,c
 15582  016344  0EF8               	movlw	-8
 15583  016346  006F FF8F FFDF     	movff	plusw1,indf2
 15584                           
 15585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 15586                           ;stkvar	_p @ sp[(-20)+18]
 15587  01634C  50E1               	movf	fsr1l,w,c
 15588  01634E  0FFE               	addlw	-2
 15589  016350  6ED9               	movwf	fsr2l,c
 15590  016352  50E2               	movf	fsr1h,w,c
 15591  016354  6EDA               	movwf	fsr2h,c
 15592  016356  0EFF               	movlw	255
 15593  016358  22DA               	addwfc	fsr2h,f,c
 15594  01635A  06DE               	decf	postinc2,f,c
 15595  01635C  0E00               	movlw	0
 15596  01635E  5ADD               	subwfb	postdec2,f,c
 15597                           
 15598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 15599                           ;stkvar	_w @ sp[(-20)+16]
 15600  016360  50E1               	movf	fsr1l,w,c
 15601  016362  0FFC               	addlw	-4
 15602  016364  6ED9               	movwf	fsr2l,c
 15603  016366  50E2               	movf	fsr1h,w,c
 15604  016368  6EDA               	movwf	fsr2h,c
 15605  01636A  0EFF               	movlw	255
 15606  01636C  22DA               	addwfc	fsr2h,f,c
 15607  01636E  06DE               	decf	postinc2,f,c
 15608  016370  0E00               	movlw	0
 15609  016372  5ADD               	subwfb	postdec2,f,c
 15610                           
 15611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 15612  016374  0E04               	movlw	4
 15613  016376  6E0C               	movwf	(btemp+11)^0,c
 15614                           
 15615                           ;stkvar	_n @ sp[(-20)+4]
 15616  016378  50E1               	movf	fsr1l,w,c
 15617  01637A  0FF0               	addlw	-16
 15618  01637C  6ED9               	movwf	fsr2l,c
 15619  01637E  50E2               	movf	fsr1h,w,c
 15620  016380  6EDA               	movwf	fsr2h,c
 15621  016382  0EFF               	movlw	255
 15622  016384  22DA               	addwfc	fsr2h,f,c
 15623  016386  280C               	incf	(btemp+11)^0,w,c
 15624  016388  52DE               	movf	postinc2,f,c
 15625  01638A  D00F               	goto	u12360
 15626  01638C                     u12365:
 15627  01638C  52DE               	movf	postinc2,f,c
 15628  01638E  52DE               	movf	postinc2,f,c
 15629  016390  52DE               	movf	postinc2,f,c
 15630  016392  52DE               	movf	postinc2,f,c
 15631  016394  52DE               	movf	postinc2,f,c
 15632  016396  52DE               	movf	postinc2,f,c
 15633  016398  90D8               	bcf	status,0,c
 15634  01639A  32DD               	rrcf	postdec2,f,c
 15635  01639C  32DD               	rrcf	postdec2,f,c
 15636  01639E  32DD               	rrcf	postdec2,f,c
 15637  0163A0  32DD               	rrcf	postdec2,f,c
 15638  0163A2  32DD               	rrcf	postdec2,f,c
 15639  0163A4  32DD               	rrcf	postdec2,f,c
 15640  0163A6  32DD               	rrcf	postdec2,f,c
 15641  0163A8  32DE               	rrcf	postinc2,f,c
 15642  0163AA                     u12360:
 15643  0163AA  2EE8               	decfsz	wreg,f,c
 15644  0163AC  D7EF               	goto	u12365
 15645  0163AE                     l13027:
 15646                           
 15647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15648                           ;stkvar	_i @ sp[(-20)+14]
 15649  0163AE  0EFB               	movlw	-5
 15650  0163B0  BEE3               	btfsc	plusw1,7,c
 15651  0163B2  D03A               	goto	u12410
 15652  0163B4  0EFB               	movlw	-5
 15653  0163B6  50E3               	movf	plusw1,w,c
 15654  0163B8  E108               	bnz	u12370
 15655  0163BA  0EFA               	movlw	-6
 15656  0163BC  006F FF8C  F001    	movff	plusw1,btemp
 15657  0163C2  0E02               	movlw	2
 15658  0163C4  5E01               	subwf	btemp^0,f,c
 15659  0163C6  A0D8               	btfss	status,0,c
 15660  0163C8  D02F               	goto	u12410
 15661  0163CA                     u12370:
 15662                           
 15663                           ;stkvar	_n @ sp[(-20)+4]
 15664  0163CA  0EF0               	movlw	-16
 15665  0163CC  50E3               	movf	plusw1,w,c
 15666  0163CE  E115               	bnz	u12381
 15667  0163D0  0EF1               	movlw	-15
 15668  0163D2  50E3               	movf	plusw1,w,c
 15669  0163D4  E112               	bnz	u12381
 15670  0163D6  0EF2               	movlw	-14
 15671  0163D8  50E3               	movf	plusw1,w,c
 15672  0163DA  E10F               	bnz	u12381
 15673  0163DC  0EF3               	movlw	-13
 15674  0163DE  50E3               	movf	plusw1,w,c
 15675  0163E0  E10C               	bnz	u12381
 15676  0163E2  0EF4               	movlw	-12
 15677  0163E4  50E3               	movf	plusw1,w,c
 15678  0163E6  E109               	bnz	u12381
 15679  0163E8  0EF5               	movlw	-11
 15680  0163EA  50E3               	movf	plusw1,w,c
 15681  0163EC  E106               	bnz	u12381
 15682  0163EE  0EF6               	movlw	-10
 15683  0163F0  50E3               	movf	plusw1,w,c
 15684  0163F2  E103               	bnz	u12381
 15685  0163F4  0EF7               	movlw	-9
 15686  0163F6  50E3               	movf	plusw1,w,c
 15687  0163F8  A4D8               	btfss	status,2,c
 15688  0163FA                     u12381:
 15689  0163FA  D6EB               	goto	l12995
 15690                           
 15691                           ;stkvar	_p @ sp[(-20)+18]
 15692  0163FC  0EFF               	movlw	-1
 15693  0163FE  BEE3               	btfsc	plusw1,7,c
 15694  016400  D007               	goto	u12390
 15695  016402  0EFF               	movlw	-1
 15696  016404  50E3               	movf	plusw1,w,c
 15697  016406  E103               	bnz	u12391
 15698  016408  0EFE               	movlw	-2
 15699  01640A  04E3               	decf	plusw1,w,c
 15700  01640C  B0D8               	btfsc	status,0,c
 15701  01640E                     u12391:
 15702  01640E  D6E1               	goto	l12995
 15703  016410                     u12390:
 15704                           
 15705                           ;stkvar	_w @ sp[(-20)+16]
 15706  016410  0EFD               	movlw	-3
 15707  016412  BEE3               	btfsc	plusw1,7,c
 15708  016414  D009               	goto	u12410
 15709  016416  0EFD               	movlw	-3
 15710  016418  50E3               	movf	plusw1,w,c
 15711  01641A  E104               	bnz	u12400
 15712  01641C  0EFC               	movlw	-4
 15713  01641E  04E3               	decf	plusw1,w,c
 15714  016420  A0D8               	btfss	status,0,c
 15715  016422  D002               	goto	u12410
 15716  016424                     u12400:
 15717  016424  B23E               	btfsc	_flags^0,1,c
 15718  016426  D6D5               	goto	l12995
 15719  016428                     u12410:
 15720                           
 15721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 15722  016428  A83E               	btfss	_flags^0,4,c
 15723  01642A  D036               	goto	l13043
 15724                           
 15725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 15726                           ;stkvar	_i @ sp[(-20)+14]
 15727  01642C  50E1               	movf	fsr1l,w,c
 15728  01642E  0FFA               	addlw	-6
 15729  016430  6ED9               	movwf	fsr2l,c
 15730  016432  50E2               	movf	fsr1h,w,c
 15731  016434  6EDA               	movwf	fsr2h,c
 15732  016436  0EFF               	movlw	255
 15733  016438  22DA               	addwfc	fsr2h,f,c
 15734  01643A  06DE               	decf	postinc2,f,c
 15735  01643C  0E00               	movlw	0
 15736  01643E  5ADD               	subwfb	postdec2,f,c
 15737                           
 15738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 15739                           ;stkvar	_x @ sp[(-20)+-11]
 15740                           ;stkvar	_i @ sp[(-20)+14]
 15741  016440  0EFA               	movlw	-6
 15742  016442  006F FF8C  F00B    	movff	plusw1,btemp+10
 15743  016448  0EFB               	movlw	-5
 15744  01644A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15745  016450  0E97               	movlw	low _dbuf
 15746  016452  240B               	addwf	(btemp+10)^0,w,c
 15747  016454  6ED9               	movwf	fsr2l,c
 15748  016456  0E02               	movlw	high _dbuf
 15749  016458  200C               	addwfc	(btemp+11)^0,w,c
 15750  01645A  6EDA               	movwf	fsr2h,c
 15751  01645C  0EE1               	movlw	-31
 15752  01645E  006F FF8F FFDF     	movff	plusw1,indf2
 15753                           
 15754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 15755                           ;stkvar	_i @ sp[(-20)+14]
 15756  016464  50E1               	movf	fsr1l,w,c
 15757  016466  0FFA               	addlw	-6
 15758  016468  6ED9               	movwf	fsr2l,c
 15759  01646A  50E2               	movf	fsr1h,w,c
 15760  01646C  6EDA               	movwf	fsr2h,c
 15761  01646E  0EFF               	movlw	255
 15762  016470  22DA               	addwfc	fsr2h,f,c
 15763  016472  06DE               	decf	postinc2,f,c
 15764  016474  0E00               	movlw	0
 15765  016476  5ADD               	subwfb	postdec2,f,c
 15766                           
 15767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 15768                           ;stkvar	_i @ sp[(-20)+14]
 15769  016478  0EFA               	movlw	-6
 15770  01647A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15771  016480  0EFB               	movlw	-5
 15772  016482  006F FF8C  F00C    	movff	plusw1,btemp+11
 15773  016488  0E97               	movlw	low _dbuf
 15774  01648A  240B               	addwf	(btemp+10)^0,w,c
 15775  01648C  6ED9               	movwf	fsr2l,c
 15776  01648E  0E02               	movlw	high _dbuf
 15777  016490  200C               	addwfc	(btemp+11)^0,w,c
 15778  016492  6EDA               	movwf	fsr2h,c
 15779  016494  0E30               	movlw	48
 15780  016496  6EDF               	movwf	indf2,c
 15781  016498                     l13043:
 15782                           
 15783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 15784                           ;stkvar	_w @ sp[(-20)+16]
 15785  016498  0EFC               	movlw	-4
 15786  01649A  006F FF8F FFE6     	movff	plusw1,postinc1
 15787  0164A0  006F FF8F FFE6     	movff	plusw1,postinc1
 15788                           
 15789                           ;stkvar	_i @ sp[(-22)+14]
 15790  0164A6  0E97               	movlw	low _dbuf
 15791  0164A8  6E0B               	movwf	(btemp+10)^0,c
 15792  0164AA  0E02               	movlw	high _dbuf
 15793  0164AC  6E0C               	movwf	(btemp+11)^0,c
 15794  0164AE  0EF8               	movlw	-8
 15795  0164B0  50E3               	movf	plusw1,w,c
 15796  0164B2  260B               	addwf	(btemp+10)^0,f,c
 15797  0164B4  0EF9               	movlw	-7
 15798  0164B6  50E3               	movf	plusw1,w,c
 15799  0164B8  220C               	addwfc	(btemp+11)^0,f,c
 15800  0164BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15801  0164C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15802                           
 15803                           ;stkvar	_fp @ sp[(-24)+-2]
 15804  0164C6  0EE6               	movlw	-26
 15805  0164C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15806  0164CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15807  0164D4  EC18  F0D1         	call	_pad	;wreg free
 15808                           
 15809                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 15810  0164D8  0EE1               	movlw	225
 15811  0164DA  26E1               	addwf	fsr1l,f,c
 15812  0164DC  0EFF               	movlw	255
 15813  0164DE  22E2               	addwfc	fsr1h,f,c
 15814  0164E0  0012               	return		;funcret
 15815  0164E2                     __end_of_xtoa:
 15816                           	opt callstack 0
 15817                           
 15818 ;; *************** function _toupper *****************
 15819 ;; Defined at:
 15820 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 15821 ;; Parameters:    Size  Location     Type
 15822 ;;  c               2  [STACK] int 
 15823 ;; Auto vars:     Size  Location     Type
 15824 ;;		None
 15825 ;; Return value:  Size  Location     Type
 15826 ;;                  2  [STACK] int 
 15827 ;; Registers used:
 15828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 15829 ;; Tracked objects:
 15830 ;;		On entry : 0/2
 15831 ;;		On exit  : 0/0
 15832 ;;		Unchanged: 0/0
 15833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15838 ;;Total ram usage:        0 bytes
 15839 ;; Hardware stack levels used:    1
 15840 ;; Hardware stack levels required when called:   16
 15841 ;; This function calls:
 15842 ;;		_islower
 15843 ;; This function is called by:
 15844 ;;		_xtoa
 15845 ;; This function uses a reentrant model
 15846 ;;
 15847                           
 15848                           	psect	text57
 15849  01B490                     __ptext57:
 15850                           	opt callstack 0
 15851  01B490                     _toupper:
 15852                           	opt callstack 0
 15853                           
 15854                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15855  01B490  52E6               	movf	postinc1,f,c
 15856  01B492  52E6               	movf	postinc1,f,c
 15857                           
 15858                           ;stkvar	_c @ sp[(-2)+-2]
 15859                           
 15860                           ;incstack = 0
 15861 ;; hardware stack exceeded
 15862  01B494  0EFC               	movlw	-4
 15863  01B496  50E3               	movf	plusw1,w,c
 15864  01B498  0F9F               	addlw	159
 15865  01B49A  6E0B               	movwf	(btemp+10)^0,c
 15866  01B49C  0EFD               	movlw	-3
 15867  01B49E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15868  01B4A4  0EFF               	movlw	255
 15869  01B4A6  220C               	addwfc	(btemp+11)^0,f,c
 15870  01B4A8  500C               	movf	(btemp+11)^0,w,c
 15871  01B4AA  E106               	bnz	u6480
 15872  01B4AC  0E1A               	movlw	26
 15873  01B4AE  5C0B               	subwf	(btemp+10)^0,w,c
 15874  01B4B0  B0D8               	btfsc	status,0,c
 15875  01B4B2  D002               	goto	u6480
 15876  01B4B4  0E01               	movlw	1
 15877  01B4B6  D001               	goto	u6490
 15878  01B4B8                     u6480:
 15879  01B4B8  0E00               	movlw	0
 15880  01B4BA                     u6490:
 15881  01B4BA  6E0B               	movwf	(btemp+10)^0,c
 15882  01B4BC  6A0C               	clrf	(btemp+11)^0,c
 15883                           
 15884                           ;stkvar	_toupper$6702 @ sp[(-2)+0]
 15885  01B4BE  0EFE               	movlw	-2
 15886  01B4C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15887  01B4C6  0EFF               	movlw	-1
 15888  01B4C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 15889                           
 15890                           ;stkvar	_toupper$6702 @ sp[(-2)+0]
 15891  01B4CE  0EFE               	movlw	-2
 15892  01B4D0  006F FF8C  F001    	movff	plusw1,btemp
 15893  01B4D6  0EFF               	movlw	-1
 15894  01B4D8  50E3               	movf	plusw1,w,c
 15895  01B4DA  1001               	iorwf	btemp^0,w,c
 15896  01B4DC  B4D8               	btfsc	status,2,c
 15897  01B4DE  D00D               	goto	l8455
 15898                           
 15899                           ;stkvar	_c @ sp[(-2)+-2]
 15900  01B4E0  0EFC               	movlw	-4
 15901  01B4E2  006F FF8C  F001    	movff	plusw1,btemp
 15902  01B4E8  0EFD               	movlw	-3
 15903  01B4EA  006F FF8C  F002    	movff	plusw1,btemp+1
 15904  01B4F0  0E5F               	movlw	95
 15905  01B4F2  1601               	andwf	btemp^0,f,c
 15906  01B4F4  0E00               	movlw	0
 15907  01B4F6  1602               	andwf	(btemp+1)^0,f,c
 15908  01B4F8  D008               	goto	l3602
 15909  01B4FA                     l8455:
 15910                           
 15911                           ;stkvar	_c @ sp[(-2)+-2]
 15912  01B4FA  0EFC               	movlw	-4
 15913  01B4FC  006F FF8C  F001    	movff	plusw1,btemp
 15914  01B502  0EFD               	movlw	-3
 15915  01B504  006F FF8C  F002    	movff	plusw1,btemp+1
 15916  01B50A                     l3602:
 15917                           
 15918                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15919  01B50A  52E5               	movf	postdec1,f,c
 15920  01B50C  52E5               	movf	postdec1,f,c
 15921  01B50E  52E5               	movf	postdec1,f,c
 15922  01B510  52E5               	movf	postdec1,f,c
 15923  01B512  0012               	return		;funcret
 15924  01B514                     __end_of_toupper:
 15925                           	opt callstack 0
 15926                           
 15927 ;; *************** function _islower *****************
 15928 ;; Defined at:
 15929 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;  c               2  [STACK] int 
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;		None
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  2  [STACK] int 
 15936 ;; Registers used:
 15937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/0
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15947 ;;Total ram usage:        0 bytes
 15948 ;; Hardware stack levels used:    1
 15949 ;; Hardware stack levels required when called:   15
 15950 ;; This function calls:
 15951 ;;		Nothing
 15952 ;; This function is called by:
 15953 ;;		_toupper
 15954 ;; This function uses a reentrant model
 15955 ;;
 15956                           
 15957                           	psect	text58
 15958  01C3E8                     __ptext58:
 15959                           	opt callstack 0
 15960  01C3E8                     _islower:
 15961                           	opt callstack 0
 15962                           
 15963                           ;stkvar	_c @ sp[(0)+-2]
 15964                           
 15965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15966                           ;incstack = 0
 15967 ;; hardware stack exceeded
 15968  01C3E8  0EFE               	movlw	-2
 15969  01C3EA  50E3               	movf	plusw1,w,c
 15970  01C3EC  0F9F               	addlw	159
 15971  01C3EE  6E0B               	movwf	(btemp+10)^0,c
 15972  01C3F0  0EFF               	movlw	-1
 15973  01C3F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 15974  01C3F8  0EFF               	movlw	255
 15975  01C3FA  220C               	addwfc	(btemp+11)^0,f,c
 15976  01C3FC  500C               	movf	(btemp+11)^0,w,c
 15977  01C3FE  E106               	bnz	u6120
 15978  01C400  0E1A               	movlw	26
 15979  01C402  5C0B               	subwf	(btemp+10)^0,w,c
 15980  01C404  B0D8               	btfsc	status,0,c
 15981  01C406  D002               	goto	u6120
 15982  01C408  0E01               	movlw	1
 15983  01C40A  D001               	goto	u6130
 15984  01C40C                     u6120:
 15985  01C40C  0E00               	movlw	0
 15986  01C40E                     u6130:
 15987  01C40E  6E01               	movwf	btemp^0,c
 15988  01C410  6A02               	clrf	(btemp+1)^0,c
 15989                           
 15990                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15991  01C412  52E5               	movf	postdec1,f,c
 15992  01C414  52E5               	movf	postdec1,f,c
 15993  01C416  0012               	return		;funcret
 15994  01C418                     __end_of_islower:
 15995                           	opt callstack 0
 15996                           
 15997 ;; *************** function _isalpha *****************
 15998 ;; Defined at:
 15999 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 16000 ;; Parameters:    Size  Location     Type
 16001 ;;  c               2  [STACK] int 
 16002 ;; Auto vars:     Size  Location     Type
 16003 ;;		None
 16004 ;; Return value:  Size  Location     Type
 16005 ;;                  2  [STACK] int 
 16006 ;; Registers used:
 16007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 16008 ;; Tracked objects:
 16009 ;;		On entry : 0/0
 16010 ;;		On exit  : 0/0
 16011 ;;		Unchanged: 0/0
 16012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16017 ;;Total ram usage:        0 bytes
 16018 ;; Hardware stack levels used:    1
 16019 ;; Hardware stack levels required when called:   15
 16020 ;; This function calls:
 16021 ;;		Nothing
 16022 ;; This function is called by:
 16023 ;;		_xtoa
 16024 ;; This function uses a reentrant model
 16025 ;;
 16026                           
 16027                           	psect	text59
 16028  01BFCE                     __ptext59:
 16029                           	opt callstack 0
 16030  01BFCE                     _isalpha:
 16031                           	opt callstack 0
 16032                           
 16033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16034                           ;incstack = 0
 16035 ;; hardware stack exceeded
 16036  01BFCE  0E9F               	movlw	159
 16037  01BFD0  6E0B               	movwf	(btemp+10)^0,c
 16038  01BFD2  0EFF               	movlw	255
 16039  01BFD4  6E0C               	movwf	(btemp+11)^0,c
 16040                           
 16041                           ;stkvar	_c @ sp[(0)+-2]
 16042  01BFD6  0EFE               	movlw	-2
 16043  01BFD8  006F FF8C  F009    	movff	plusw1,btemp+8
 16044  01BFDE  0EFF               	movlw	-1
 16045  01BFE0  006F FF8C  F00A    	movff	plusw1,btemp+9
 16046  01BFE6  0E20               	movlw	32
 16047  01BFE8  1209               	iorwf	(btemp+8)^0,f,c
 16048  01BFEA  0E00               	movlw	0
 16049  01BFEC  120A               	iorwf	(btemp+9)^0,f,c
 16050  01BFEE  500B               	movf	(btemp+10)^0,w,c
 16051  01BFF0  2609               	addwf	(btemp+8)^0,f,c
 16052  01BFF2  500C               	movf	(btemp+11)^0,w,c
 16053  01BFF4  220A               	addwfc	(btemp+9)^0,f,c
 16054  01BFF6  500A               	movf	(btemp+9)^0,w,c
 16055  01BFF8  E106               	bnz	u6460
 16056  01BFFA  0E1A               	movlw	26
 16057  01BFFC  5C09               	subwf	(btemp+8)^0,w,c
 16058  01BFFE  B0D8               	btfsc	status,0,c
 16059  01C000  D002               	goto	u6460
 16060  01C002  0E01               	movlw	1
 16061  01C004  D001               	goto	u6470
 16062  01C006                     u6460:
 16063  01C006  0E00               	movlw	0
 16064  01C008                     u6470:
 16065  01C008  6E01               	movwf	btemp^0,c
 16066  01C00A  6A02               	clrf	(btemp+1)^0,c
 16067                           
 16068                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16069  01C00C  52E5               	movf	postdec1,f,c
 16070  01C00E  52E5               	movf	postdec1,f,c
 16071  01C010  0012               	return		;funcret
 16072  01C012                     __end_of_isalpha:
 16073                           	opt callstack 0
 16074                           
 16075 ;; *************** function _utoa *****************
 16076 ;; Defined at:
 16077 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16078 ;; Parameters:    Size  Location     Type
 16079 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16080 ;;		 -> f(6), NULL(0), 
 16081 ;;  d               8  [STACK] unsigned long long 
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;  n               8  [STACK] unsigned long long 
 16084 ;;  i               2  [STACK] int 
 16085 ;;  w               2  [STACK] int 
 16086 ;;  p               2  [STACK] int 
 16087 ;; Return value:  Size  Location     Type
 16088 ;;                  2  [STACK] int 
 16089 ;; Registers used:
 16090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16091 ;; Tracked objects:
 16092 ;;		On entry : 0/0
 16093 ;;		On exit  : 0/0
 16094 ;;		Unchanged: 0/0
 16095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16100 ;;Total ram usage:        0 bytes
 16101 ;; Hardware stack levels used:    1
 16102 ;; Hardware stack levels required when called:   20
 16103 ;; This function calls:
 16104 ;;		___lodiv
 16105 ;;		___lomod
 16106 ;;		_pad
 16107 ;; This function is called by:
 16108 ;;		_vfpfcnvrt
 16109 ;; This function uses a reentrant model
 16110 ;;
 16111                           
 16112                           	psect	text60
 16113  016BBC                     __ptext60:
 16114                           	opt callstack 0
 16115  016BBC                     _utoa:
 16116                           	opt callstack 0
 16117                           
 16118                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16119  016BBC  0E0E               	movlw	14
 16120  016BBE  26E1               	addwf	fsr1l,f,c
 16121  016BC0  0E00               	movlw	0
 16122  016BC2  22E2               	addwfc	fsr1h,f,c
 16123                           
 16124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 16125                           
 16126                           ;incstack = 0
 16127 ;; hardware stack exceeded
 16128  016BC4  AE3D               	btfss	(_prec+1)^0,7,c
 16129                           
 16130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 16131  016BC6  923E               	bcf	_flags^0,1,c
 16132                           
 16133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 16134  016BC8  BE3D               	btfsc	(_prec+1)^0,7,c
 16135  016BCA  D005               	goto	u12180
 16136  016BCC  503D               	movf	(_prec+1)^0,w,c
 16137  016BCE  E110               	bnz	l12943
 16138  016BD0  043C               	decf	_prec^0,w,c
 16139  016BD2  B0D8               	btfsc	status,0,c
 16140  016BD4  D00D               	goto	l12943
 16141  016BD6                     u12180:
 16142  016BD6  0E01               	movlw	1
 16143  016BD8  6E0B               	movwf	(btemp+10)^0,c
 16144  016BDA  0E00               	movlw	0
 16145  016BDC  6E0C               	movwf	(btemp+11)^0,c
 16146                           
 16147                           ;stkvar	_p @ sp[(-14)+12]
 16148  016BDE  0EFE               	movlw	-2
 16149  016BE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16150  016BE6  0EFF               	movlw	-1
 16151  016BE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16152  016BEE  D008               	goto	l2420
 16153  016BF0                     l12943:
 16154                           
 16155                           ;stkvar	_p @ sp[(-14)+12]
 16156  016BF0  0EFE               	movlw	-2
 16157  016BF2  0060  F0F3  FFE3   	movff	_prec,plusw1
 16158  016BF8  0EFF               	movlw	-1
 16159  016BFA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16160  016C00                     l2420:
 16161                           
 16162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 16163                           ;stkvar	_w @ sp[(-14)+10]
 16164  016C00  0EFC               	movlw	-4
 16165  016C02  0060  F0EB  FFE3   	movff	_width,plusw1
 16166  016C08  0EFD               	movlw	-3
 16167  016C0A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16168                           
 16169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 16170                           ;stkvar	_d @ sp[(-14)+-10]
 16171  016C10  0EE8               	movlw	232
 16172  016C12  24E1               	addwf	fsr1l,w,c
 16173  016C14  6ED9               	movwf	fsr2l,c
 16174  016C16  0EFF               	movlw	255
 16175  016C18  20E2               	addwfc	fsr1h,w,c
 16176  016C1A  6EDA               	movwf	fsr2h,c
 16177                           
 16178                           ;stkvar	_n @ sp[(-14)+0]
 16179  016C1C  0E08               	movlw	8
 16180  016C1E  6E01               	movwf	btemp^0,c
 16181  016C20  0EF2               	movlw	-14
 16182  016C22                     us1219999:
 16183  016C22  006F FF7B FFE3     	movff	postinc2,plusw1
 16184  016C28  28E8               	incf	wreg,w,c
 16185  016C2A  2E01               	decfsz	btemp^0,f,c
 16186  016C2C  D7FA               	bra	us1219999
 16187                           
 16188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 16189  016C2E  0E4F               	movlw	79
 16190  016C30  6E0B               	movwf	(btemp+10)^0,c
 16191  016C32  0E00               	movlw	0
 16192  016C34  6E0C               	movwf	(btemp+11)^0,c
 16193                           
 16194                           ;stkvar	_i @ sp[(-14)+8]
 16195  016C36  0EFA               	movlw	-6
 16196  016C38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16197  016C3E  0EFB               	movlw	-5
 16198  016C40  0060  F033  FFE3   	movff	btemp+11,plusw1
 16199                           
 16200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 16201  016C46  0102               	movlb	2	; () banked
 16202  016C48  6BE6               	clrf	(_dbuf+79)& (0+255),b
 16203                           
 16204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16205  016C4A  D0FB               	goto	l12961
 16206  016C4C                     l12951:
 16207                           
 16208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 16209                           ;stkvar	_i @ sp[(-14)+8]
 16210  016C4C  50E1               	movf	fsr1l,w,c
 16211  016C4E  0FFA               	addlw	-6
 16212  016C50  6ED9               	movwf	fsr2l,c
 16213  016C52  50E2               	movf	fsr1h,w,c
 16214  016C54  6EDA               	movwf	fsr2h,c
 16215  016C56  0EFF               	movlw	255
 16216  016C58  22DA               	addwfc	fsr2h,f,c
 16217  016C5A  06DE               	decf	postinc2,f,c
 16218  016C5C  0E00               	movlw	0
 16219  016C5E  5ADD               	subwfb	postdec2,f,c
 16220                           
 16221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 16222  016C60  0E0A               	movlw	10
 16223  016C62  6EE6               	movwf	postinc1,c
 16224  016C64  0E00               	movlw	0
 16225  016C66  6EE6               	movwf	postinc1,c
 16226  016C68  0E00               	movlw	0
 16227  016C6A  6EE6               	movwf	postinc1,c
 16228  016C6C  0E00               	movlw	0
 16229  016C6E  6EE6               	movwf	postinc1,c
 16230  016C70  0E00               	movlw	0
 16231  016C72  6EE6               	movwf	postinc1,c
 16232  016C74  0E00               	movlw	0
 16233  016C76  6EE6               	movwf	postinc1,c
 16234  016C78  0E00               	movlw	0
 16235  016C7A  6EE6               	movwf	postinc1,c
 16236  016C7C  0E00               	movlw	0
 16237  016C7E  6EE6               	movwf	postinc1,c
 16238                           
 16239                           ;stkvar	_n @ sp[(-22)+0]
 16240  016C80  50E1               	movf	fsr1l,w,c
 16241  016C82  0FEA               	addlw	-22
 16242  016C84  6ED9               	movwf	fsr2l,c
 16243  016C86  50E2               	movf	fsr1h,w,c
 16244  016C88  6EDA               	movwf	fsr2h,c
 16245  016C8A  0EFF               	movlw	255
 16246  016C8C  22DA               	addwfc	fsr2h,f,c
 16247  016C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 16248  016C94  006F FF7B FFE6     	movff	postinc2,postinc1
 16249  016C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 16250  016CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 16251  016CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 16252  016CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 16253  016CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 16254  016CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 16255  016CBE  EC9B  F0CD         	call	___lomod	;wreg free
 16256  016CC2  52E5               	movf	postdec1,f,c
 16257  016CC4  006F FF9C  F018    	movff	indf1,btemp+23
 16258  016CCA  52E5               	movf	postdec1,f,c
 16259  016CCC  006F FF9C  F017    	movff	indf1,btemp+22
 16260  016CD2  52E5               	movf	postdec1,f,c
 16261  016CD4  006F FF9C  F016    	movff	indf1,btemp+21
 16262  016CDA  52E5               	movf	postdec1,f,c
 16263  016CDC  006F FF9C  F015    	movff	indf1,btemp+20
 16264  016CE2  52E5               	movf	postdec1,f,c
 16265  016CE4  006F FF9C  F014    	movff	indf1,btemp+19
 16266  016CEA  52E5               	movf	postdec1,f,c
 16267  016CEC  006F FF9C  F013    	movff	indf1,btemp+18
 16268  016CF2  52E5               	movf	postdec1,f,c
 16269  016CF4  006F FF9C  F012    	movff	indf1,btemp+17
 16270  016CFA  52E5               	movf	postdec1,f,c
 16271  016CFC  006F FF9C  F011    	movff	indf1,btemp+16
 16272  016D02  0EF8               	movlw	248
 16273  016D04  26E1               	addwf	fsr1l,f,c
 16274  016D06  0EFF               	movlw	255
 16275  016D08  22E2               	addwfc	fsr1h,f,c
 16276  016D0A  0E30               	movlw	48
 16277  016D0C  2611               	addwf	(btemp+16)^0,f,c
 16278                           
 16279                           ;stkvar	_i @ sp[(-14)+8]
 16280  016D0E  0EFA               	movlw	-6
 16281  016D10  006F FF8C  F00B    	movff	plusw1,btemp+10
 16282  016D16  0EFB               	movlw	-5
 16283  016D18  006F FF8C  F00C    	movff	plusw1,btemp+11
 16284  016D1E  0E97               	movlw	low _dbuf
 16285  016D20  240B               	addwf	(btemp+10)^0,w,c
 16286  016D22  6ED9               	movwf	fsr2l,c
 16287  016D24  0E02               	movlw	high _dbuf
 16288  016D26  200C               	addwfc	(btemp+11)^0,w,c
 16289  016D28  6EDA               	movwf	fsr2h,c
 16290  016D2A  0060  F047  FFDF   	movff	btemp+16,indf2
 16291                           
 16292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 16293                           ;stkvar	_p @ sp[(-14)+12]
 16294  016D30  50E1               	movf	fsr1l,w,c
 16295  016D32  0FFE               	addlw	-2
 16296  016D34  6ED9               	movwf	fsr2l,c
 16297  016D36  50E2               	movf	fsr1h,w,c
 16298  016D38  6EDA               	movwf	fsr2h,c
 16299  016D3A  0EFF               	movlw	255
 16300  016D3C  22DA               	addwfc	fsr2h,f,c
 16301  016D3E  06DE               	decf	postinc2,f,c
 16302  016D40  0E00               	movlw	0
 16303  016D42  5ADD               	subwfb	postdec2,f,c
 16304                           
 16305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 16306                           ;stkvar	_w @ sp[(-14)+10]
 16307  016D44  50E1               	movf	fsr1l,w,c
 16308  016D46  0FFC               	addlw	-4
 16309  016D48  6ED9               	movwf	fsr2l,c
 16310  016D4A  50E2               	movf	fsr1h,w,c
 16311  016D4C  6EDA               	movwf	fsr2h,c
 16312  016D4E  0EFF               	movlw	255
 16313  016D50  22DA               	addwfc	fsr2h,f,c
 16314  016D52  06DE               	decf	postinc2,f,c
 16315  016D54  0E00               	movlw	0
 16316  016D56  5ADD               	subwfb	postdec2,f,c
 16317                           
 16318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 16319  016D58  0E0A               	movlw	10
 16320  016D5A  6EE6               	movwf	postinc1,c
 16321  016D5C  0E00               	movlw	0
 16322  016D5E  6EE6               	movwf	postinc1,c
 16323  016D60  0E00               	movlw	0
 16324  016D62  6EE6               	movwf	postinc1,c
 16325  016D64  0E00               	movlw	0
 16326  016D66  6EE6               	movwf	postinc1,c
 16327  016D68  0E00               	movlw	0
 16328  016D6A  6EE6               	movwf	postinc1,c
 16329  016D6C  0E00               	movlw	0
 16330  016D6E  6EE6               	movwf	postinc1,c
 16331  016D70  0E00               	movlw	0
 16332  016D72  6EE6               	movwf	postinc1,c
 16333  016D74  0E00               	movlw	0
 16334  016D76  6EE6               	movwf	postinc1,c
 16335                           
 16336                           ;stkvar	_n @ sp[(-22)+0]
 16337  016D78  50E1               	movf	fsr1l,w,c
 16338  016D7A  0FEA               	addlw	-22
 16339  016D7C  6ED9               	movwf	fsr2l,c
 16340  016D7E  50E2               	movf	fsr1h,w,c
 16341  016D80  6EDA               	movwf	fsr2h,c
 16342  016D82  0EFF               	movlw	255
 16343  016D84  22DA               	addwfc	fsr2h,f,c
 16344  016D86  006F FF7B FFE6     	movff	postinc2,postinc1
 16345  016D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 16346  016D92  006F FF7B FFE6     	movff	postinc2,postinc1
 16347  016D98  006F FF7B FFE6     	movff	postinc2,postinc1
 16348  016D9E  006F FF7B FFE6     	movff	postinc2,postinc1
 16349  016DA4  006F FF7B FFE6     	movff	postinc2,postinc1
 16350  016DAA  006F FF7B FFE6     	movff	postinc2,postinc1
 16351  016DB0  006F FF7B FFE6     	movff	postinc2,postinc1
 16352  016DB6  EC77  F0C9         	call	___lodiv	;wreg free
 16353  016DBA  52E5               	movf	postdec1,f,c
 16354  016DBC  006F FF9C  F018    	movff	indf1,btemp+23
 16355  016DC2  52E5               	movf	postdec1,f,c
 16356  016DC4  006F FF9C  F017    	movff	indf1,btemp+22
 16357  016DCA  52E5               	movf	postdec1,f,c
 16358  016DCC  006F FF9C  F016    	movff	indf1,btemp+21
 16359  016DD2  52E5               	movf	postdec1,f,c
 16360  016DD4  006F FF9C  F015    	movff	indf1,btemp+20
 16361  016DDA  52E5               	movf	postdec1,f,c
 16362  016DDC  006F FF9C  F014    	movff	indf1,btemp+19
 16363  016DE2  52E5               	movf	postdec1,f,c
 16364  016DE4  006F FF9C  F013    	movff	indf1,btemp+18
 16365  016DEA  52E5               	movf	postdec1,f,c
 16366  016DEC  006F FF9C  F012    	movff	indf1,btemp+17
 16367  016DF2  52E5               	movf	postdec1,f,c
 16368  016DF4  006F FF9C  F011    	movff	indf1,btemp+16
 16369  016DFA  0EF8               	movlw	248
 16370  016DFC  26E1               	addwf	fsr1l,f,c
 16371  016DFE  0EFF               	movlw	255
 16372  016E00  22E2               	addwfc	fsr1h,f,c
 16373                           
 16374                           ;stkvar	_n @ sp[(-14)+0]
 16375  016E02  0EF2               	movlw	-14
 16376  016E04  0060  F047  FFE3   	movff	btemp+16,plusw1
 16377  016E0A  0EF3               	movlw	-13
 16378  016E0C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16379  016E12  0EF4               	movlw	-12
 16380  016E14  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16381  016E1A  0EF5               	movlw	-11
 16382  016E1C  0060  F053  FFE3   	movff	btemp+19,plusw1
 16383  016E22  0EF6               	movlw	-10
 16384  016E24  0060  F057  FFE3   	movff	btemp+20,plusw1
 16385  016E2A  0EF7               	movlw	-9
 16386  016E2C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16387  016E32  0EF8               	movlw	-8
 16388  016E34  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16389  016E3A  0EF9               	movlw	-7
 16390  016E3C  0060  F063  FFE3   	movff	btemp+23,plusw1
 16391  016E42                     l12961:
 16392                           
 16393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16394                           ;stkvar	_i @ sp[(-14)+8]
 16395  016E42  0EFA               	movlw	-6
 16396  016E44  006F FF8C  F001    	movff	plusw1,btemp
 16397  016E4A  0EFB               	movlw	-5
 16398  016E4C  50E3               	movf	plusw1,w,c
 16399  016E4E  1001               	iorwf	btemp^0,w,c
 16400  016E50  B4D8               	btfsc	status,2,c
 16401  016E52  D02F               	goto	u12240
 16402                           
 16403                           ;stkvar	_n @ sp[(-14)+0]
 16404  016E54  0EF2               	movlw	-14
 16405  016E56  50E3               	movf	plusw1,w,c
 16406  016E58  E115               	bnz	u12211
 16407  016E5A  0EF3               	movlw	-13
 16408  016E5C  50E3               	movf	plusw1,w,c
 16409  016E5E  E112               	bnz	u12211
 16410  016E60  0EF4               	movlw	-12
 16411  016E62  50E3               	movf	plusw1,w,c
 16412  016E64  E10F               	bnz	u12211
 16413  016E66  0EF5               	movlw	-11
 16414  016E68  50E3               	movf	plusw1,w,c
 16415  016E6A  E10C               	bnz	u12211
 16416  016E6C  0EF6               	movlw	-10
 16417  016E6E  50E3               	movf	plusw1,w,c
 16418  016E70  E109               	bnz	u12211
 16419  016E72  0EF7               	movlw	-9
 16420  016E74  50E3               	movf	plusw1,w,c
 16421  016E76  E106               	bnz	u12211
 16422  016E78  0EF8               	movlw	-8
 16423  016E7A  50E3               	movf	plusw1,w,c
 16424  016E7C  E103               	bnz	u12211
 16425  016E7E  0EF9               	movlw	-7
 16426  016E80  50E3               	movf	plusw1,w,c
 16427  016E82  A4D8               	btfss	status,2,c
 16428  016E84                     u12211:
 16429  016E84  D6E3               	goto	l12951
 16430                           
 16431                           ;stkvar	_p @ sp[(-14)+12]
 16432  016E86  0EFF               	movlw	-1
 16433  016E88  BEE3               	btfsc	plusw1,7,c
 16434  016E8A  D007               	goto	u12220
 16435  016E8C  0EFF               	movlw	-1
 16436  016E8E  50E3               	movf	plusw1,w,c
 16437  016E90  E103               	bnz	u12221
 16438  016E92  0EFE               	movlw	-2
 16439  016E94  04E3               	decf	plusw1,w,c
 16440  016E96  B0D8               	btfsc	status,0,c
 16441  016E98                     u12221:
 16442  016E98  D6D9               	goto	l12951
 16443  016E9A                     u12220:
 16444                           
 16445                           ;stkvar	_w @ sp[(-14)+10]
 16446  016E9A  0EFD               	movlw	-3
 16447  016E9C  BEE3               	btfsc	plusw1,7,c
 16448  016E9E  D009               	goto	u12240
 16449  016EA0  0EFD               	movlw	-3
 16450  016EA2  50E3               	movf	plusw1,w,c
 16451  016EA4  E104               	bnz	u12230
 16452  016EA6  0EFC               	movlw	-4
 16453  016EA8  04E3               	decf	plusw1,w,c
 16454  016EAA  A0D8               	btfss	status,0,c
 16455  016EAC  D002               	goto	u12240
 16456  016EAE                     u12230:
 16457  016EAE  B23E               	btfsc	_flags^0,1,c
 16458  016EB0  D6CD               	goto	l12951
 16459  016EB2                     u12240:
 16460                           
 16461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 16462                           ;stkvar	_w @ sp[(-14)+10]
 16463  016EB2  0EFC               	movlw	-4
 16464  016EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 16465  016EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 16466                           
 16467                           ;stkvar	_i @ sp[(-16)+8]
 16468  016EC0  0E97               	movlw	low _dbuf
 16469  016EC2  6E0B               	movwf	(btemp+10)^0,c
 16470  016EC4  0E02               	movlw	high _dbuf
 16471  016EC6  6E0C               	movwf	(btemp+11)^0,c
 16472  016EC8  0EF8               	movlw	-8
 16473  016ECA  50E3               	movf	plusw1,w,c
 16474  016ECC  260B               	addwf	(btemp+10)^0,f,c
 16475  016ECE  0EF9               	movlw	-7
 16476  016ED0  50E3               	movf	plusw1,w,c
 16477  016ED2  220C               	addwfc	(btemp+11)^0,f,c
 16478  016ED4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16479  016EDA  0060  F033  FFE6   	movff	btemp+11,postinc1
 16480                           
 16481                           ;stkvar	_fp @ sp[(-18)+-2]
 16482  016EE0  0EEC               	movlw	-20
 16483  016EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16484  016EE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16485  016EEE  EC18  F0D1         	call	_pad	;wreg free
 16486                           
 16487                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16488  016EF2  0EE8               	movlw	232
 16489  016EF4  26E1               	addwf	fsr1l,f,c
 16490  016EF6  0EFF               	movlw	255
 16491  016EF8  22E2               	addwfc	fsr1h,f,c
 16492  016EFA  0012               	return		;funcret
 16493  016EFC                     __end_of_utoa:
 16494                           	opt callstack 0
 16495                           
 16496 ;; *************** function ___lomod *****************
 16497 ;; Defined at:
 16498 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 16499 ;; Parameters:    Size  Location     Type
 16500 ;;  dividend        8  [STACK] unsigned long long 
 16501 ;;  divisor         8  [STACK] unsigned long long 
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;  counter         1  [STACK] unsigned char 
 16504 ;; Return value:  Size  Location     Type
 16505 ;;                  8  [STACK] unsigned long long 
 16506 ;; Registers used:
 16507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16508 ;; Tracked objects:
 16509 ;;		On entry : 0/2
 16510 ;;		On exit  : 0/0
 16511 ;;		Unchanged: 0/0
 16512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16517 ;;Total ram usage:        0 bytes
 16518 ;; Hardware stack levels used:    1
 16519 ;; Hardware stack levels required when called:   15
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_utoa
 16524 ;; This function uses a reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text61
 16528  019B36                     __ptext61:
 16529                           	opt callstack 0
 16530  019B36                     ___lomod:
 16531                           	opt callstack 0
 16532                           
 16533                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16534  019B36  52E6               	movf	postinc1,f,c
 16535                           
 16536                           ;stkvar	_divisor @ sp[(-1)+-16]
 16537                           
 16538                           ;incstack = 0
 16539 ;; hardware stack exceeded
 16540  019B38  0EEF               	movlw	-17
 16541  019B3A  50E3               	movf	plusw1,w,c
 16542  019B3C  E116               	bnz	u7610
 16543  019B3E  0EF0               	movlw	-16
 16544  019B40  50E3               	movf	plusw1,w,c
 16545  019B42  E113               	bnz	u7610
 16546  019B44  0EF1               	movlw	-15
 16547  019B46  50E3               	movf	plusw1,w,c
 16548  019B48  E110               	bnz	u7610
 16549  019B4A  0EF2               	movlw	-14
 16550  019B4C  50E3               	movf	plusw1,w,c
 16551  019B4E  E10D               	bnz	u7610
 16552  019B50  0EF3               	movlw	-13
 16553  019B52  50E3               	movf	plusw1,w,c
 16554  019B54  E10A               	bnz	u7610
 16555  019B56  0EF4               	movlw	-12
 16556  019B58  50E3               	movf	plusw1,w,c
 16557  019B5A  E107               	bnz	u7610
 16558  019B5C  0EF5               	movlw	-11
 16559  019B5E  50E3               	movf	plusw1,w,c
 16560  019B60  E104               	bnz	u7610
 16561  019B62  0EF6               	movlw	-10
 16562  019B64  50E3               	movf	plusw1,w,c
 16563  019B66  B4D8               	btfsc	status,2,c
 16564  019B68  D075               	goto	u7640
 16565  019B6A                     u7610:
 16566                           
 16567                           ;stkvar	_counter @ sp[(-1)+0]
 16568  019B6A  0EFF               	movlw	-1
 16569  019B6C  6AE3               	clrf	plusw1,c
 16570  019B6E  D012               	goto	L17
 16571  019B70                     l9065:
 16572                           
 16573                           ;stkvar	_divisor @ sp[(-1)+-16]
 16574  019B70  90D8               	bcf	status,0,c
 16575  019B72  0EEF               	movlw	-17
 16576  019B74  36E3               	rlcf	plusw1,f,c
 16577  019B76  0EF0               	movlw	-16
 16578  019B78  36E3               	rlcf	plusw1,f,c
 16579  019B7A  0EF1               	movlw	-15
 16580  019B7C  36E3               	rlcf	plusw1,f,c
 16581  019B7E  0EF2               	movlw	-14
 16582  019B80  36E3               	rlcf	plusw1,f,c
 16583  019B82  0EF3               	movlw	-13
 16584  019B84  36E3               	rlcf	plusw1,f,c
 16585  019B86  0EF4               	movlw	-12
 16586  019B88  36E3               	rlcf	plusw1,f,c
 16587  019B8A  0EF5               	movlw	-11
 16588  019B8C  36E3               	rlcf	plusw1,f,c
 16589  019B8E  0EF6               	movlw	-10
 16590  019B90  36E3               	rlcf	plusw1,f,c
 16591                           
 16592                           ;stkvar	_counter @ sp[(-1)+0]
 16593  019B92  0EFF               	movlw	-1
 16594  019B94                     L17:
 16595  019B94  2AE3               	incf	plusw1,f,c
 16596                           
 16597                           ;stkvar	_divisor @ sp[(-1)+-16]
 16598  019B96  0EF6               	movlw	-10
 16599  019B98  AEE3               	btfss	plusw1,7,c
 16600  019B9A  D7EA               	goto	l9065
 16601  019B9C                     u7620:
 16602                           
 16603                           ;stkvar	_divisor @ sp[(-1)+-16]
 16604                           ;stkvar	_dividend @ sp[(-1)+-8]
 16605  019B9C  50E1               	movf	fsr1l,w,c
 16606  019B9E  0FF7               	addlw	-9
 16607  019BA0  6ED9               	movwf	fsr2l,c
 16608  019BA2  50E2               	movf	fsr1h,w,c
 16609  019BA4  6EDA               	movwf	fsr2h,c
 16610  019BA6  0EFF               	movlw	255
 16611  019BA8  22DA               	addwfc	fsr2h,f,c
 16612  019BAA  0EEF               	movlw	-17
 16613  019BAC  50E3               	movf	plusw1,w,c
 16614  019BAE  5CDE               	subwf	postinc2,w,c
 16615  019BB0  0EF0               	movlw	-16
 16616  019BB2  50E3               	movf	plusw1,w,c
 16617  019BB4  58DE               	subwfb	postinc2,w,c
 16618  019BB6  0EF1               	movlw	-15
 16619  019BB8  50E3               	movf	plusw1,w,c
 16620  019BBA  58DE               	subwfb	postinc2,w,c
 16621  019BBC  0EF2               	movlw	-14
 16622  019BBE  50E3               	movf	plusw1,w,c
 16623  019BC0  58DE               	subwfb	postinc2,w,c
 16624  019BC2  0EF3               	movlw	-13
 16625  019BC4  50E3               	movf	plusw1,w,c
 16626  019BC6  58DE               	subwfb	postinc2,w,c
 16627  019BC8  0EF4               	movlw	-12
 16628  019BCA  50E3               	movf	plusw1,w,c
 16629  019BCC  58DE               	subwfb	postinc2,w,c
 16630  019BCE  0EF5               	movlw	-11
 16631  019BD0  50E3               	movf	plusw1,w,c
 16632  019BD2  58DE               	subwfb	postinc2,w,c
 16633  019BD4  0EF6               	movlw	-10
 16634  019BD6  50E3               	movf	plusw1,w,c
 16635  019BD8  58DE               	subwfb	postinc2,w,c
 16636  019BDA  A0D8               	btfss	status,0,c
 16637  019BDC  D01F               	goto	l9073
 16638                           
 16639                           ;stkvar	_divisor @ sp[(-1)+-16]
 16640                           ;stkvar	_dividend @ sp[(-1)+-8]
 16641  019BDE  50E1               	movf	fsr1l,w,c
 16642  019BE0  0FF7               	addlw	-9
 16643  019BE2  6ED9               	movwf	fsr2l,c
 16644  019BE4  50E2               	movf	fsr1h,w,c
 16645  019BE6  6EDA               	movwf	fsr2h,c
 16646  019BE8  0EFF               	movlw	255
 16647  019BEA  22DA               	addwfc	fsr2h,f,c
 16648  019BEC  0EEF               	movlw	-17
 16649  019BEE  50E3               	movf	plusw1,w,c
 16650  019BF0  5EDE               	subwf	postinc2,f,c
 16651  019BF2  0EF0               	movlw	-16
 16652  019BF4  50E3               	movf	plusw1,w,c
 16653  019BF6  5ADE               	subwfb	postinc2,f,c
 16654  019BF8  0EF1               	movlw	-15
 16655  019BFA  50E3               	movf	plusw1,w,c
 16656  019BFC  5ADE               	subwfb	postinc2,f,c
 16657  019BFE  0EF2               	movlw	-14
 16658  019C00  50E3               	movf	plusw1,w,c
 16659  019C02  5ADE               	subwfb	postinc2,f,c
 16660  019C04  0EF3               	movlw	-13
 16661  019C06  50E3               	movf	plusw1,w,c
 16662  019C08  5ADE               	subwfb	postinc2,f,c
 16663  019C0A  0EF4               	movlw	-12
 16664  019C0C  50E3               	movf	plusw1,w,c
 16665  019C0E  5ADE               	subwfb	postinc2,f,c
 16666  019C10  0EF5               	movlw	-11
 16667  019C12  50E3               	movf	plusw1,w,c
 16668  019C14  5ADE               	subwfb	postinc2,f,c
 16669  019C16  0EF6               	movlw	-10
 16670  019C18  50E3               	movf	plusw1,w,c
 16671  019C1A  5ADE               	subwfb	postinc2,f,c
 16672  019C1C                     l9073:
 16673                           
 16674                           ;stkvar	_divisor @ sp[(-1)+-16]
 16675  019C1C  90D8               	bcf	status,0,c
 16676  019C1E  0EF6               	movlw	-10
 16677  019C20  32E3               	rrcf	plusw1,f,c
 16678  019C22  0EF5               	movlw	-11
 16679  019C24  32E3               	rrcf	plusw1,f,c
 16680  019C26  0EF4               	movlw	-12
 16681  019C28  32E3               	rrcf	plusw1,f,c
 16682  019C2A  0EF3               	movlw	-13
 16683  019C2C  32E3               	rrcf	plusw1,f,c
 16684  019C2E  0EF2               	movlw	-14
 16685  019C30  32E3               	rrcf	plusw1,f,c
 16686  019C32  0EF1               	movlw	-15
 16687  019C34  32E3               	rrcf	plusw1,f,c
 16688  019C36  0EF0               	movlw	-16
 16689  019C38  32E3               	rrcf	plusw1,f,c
 16690  019C3A  0EEF               	movlw	-17
 16691  019C3C  32E3               	rrcf	plusw1,f,c
 16692                           
 16693                           ;stkvar	_counter @ sp[(-1)+0]
 16694  019C3E  0EFF               	movlw	-1
 16695  019C40  50E3               	movf	plusw1,w,c
 16696  019C42  6E01               	movwf	btemp^0,c
 16697  019C44  0E01               	movlw	1
 16698  019C46  5E01               	subwf	btemp^0,f,c
 16699  019C48  0EFF               	movlw	-1
 16700  019C4A  0060  F007  FFE3   	movff	btemp,plusw1
 16701  019C50  A4D8               	btfss	status,2,c
 16702  019C52  D7A4               	goto	u7620
 16703  019C54                     u7640:
 16704                           
 16705                           ;stkvar	_dividend @ sp[(-1)+-8]
 16706  019C54  0EF7               	movlw	247
 16707  019C56  24E1               	addwf	fsr1l,w,c
 16708  019C58  6ED9               	movwf	fsr2l,c
 16709  019C5A  0EFF               	movlw	255
 16710  019C5C  20E2               	addwfc	fsr1h,w,c
 16711  019C5E  6EDA               	movwf	fsr2h,c
 16712                           
 16713                           ;stkvar	?___lomod @ sp[(-1)+-8]
 16714  019C60  0E08               	movlw	8
 16715  019C62  6E01               	movwf	btemp^0,c
 16716  019C64  0EF7               	movlw	-9
 16717  019C66                     us765999:
 16718  019C66  006F FF7B FFE3     	movff	postinc2,plusw1
 16719  019C6C  28E8               	incf	wreg,w,c
 16720  019C6E  2E01               	decfsz	btemp^0,f,c
 16721  019C70  D7FA               	bra	us765999
 16722                           
 16723                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16724  019C72  52E5               	movf	postdec1,f,c
 16725  019C74  0012               	return		;funcret
 16726  019C76                     __end_of___lomod:
 16727                           	opt callstack 0
 16728                           
 16729 ;; *************** function ___lodiv *****************
 16730 ;; Defined at:
 16731 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;  dividend        8  [STACK] unsigned long long 
 16734 ;;  divisor         8  [STACK] unsigned long long 
 16735 ;; Auto vars:     Size  Location     Type
 16736 ;;  quotient        8  [STACK] unsigned long long 
 16737 ;;  counter         1  [STACK] unsigned char 
 16738 ;; Return value:  Size  Location     Type
 16739 ;;                  8  [STACK] unsigned long long 
 16740 ;; Registers used:
 16741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/2
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16751 ;;Total ram usage:        0 bytes
 16752 ;; Hardware stack levels used:    1
 16753 ;; Hardware stack levels required when called:   15
 16754 ;; This function calls:
 16755 ;;		Nothing
 16756 ;; This function is called by:
 16757 ;;		_utoa
 16758 ;; This function uses a reentrant model
 16759 ;;
 16760                           
 16761                           	psect	text62
 16762  0192EE                     __ptext62:
 16763                           	opt callstack 0
 16764  0192EE                     ___lodiv:
 16765                           	opt callstack 0
 16766                           
 16767                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16768  0192EE  0E09               	movlw	9
 16769  0192F0  26E1               	addwf	fsr1l,f,c
 16770  0192F2  0E00               	movlw	0
 16771  0192F4  22E2               	addwfc	fsr1h,f,c
 16772                           
 16773                           ;stkvar	_quotient @ sp[(-9)+0]
 16774                           
 16775                           ;incstack = 0
 16776 ;; hardware stack exceeded
 16777  0192F6  0E07               	movlw	7
 16778  0192F8  6E01               	movwf	btemp^0,c
 16779  0192FA  0EF7               	movlw	-9
 16780  0192FC                     u7551:
 16781  0192FC  6AE3               	clrf	plusw1,c
 16782  0192FE  2AE8               	incf	wreg,f,c
 16783  019300  0601               	decf	btemp^0,f,c
 16784  019302  E2FC               	bc	u7551
 16785                           
 16786                           ;stkvar	_divisor @ sp[(-9)+-16]
 16787  019304  0EE7               	movlw	-25
 16788  019306  50E3               	movf	plusw1,w,c
 16789  019308  E116               	bnz	u7560
 16790  01930A  0EE8               	movlw	-24
 16791  01930C  50E3               	movf	plusw1,w,c
 16792  01930E  E113               	bnz	u7560
 16793  019310  0EE9               	movlw	-23
 16794  019312  50E3               	movf	plusw1,w,c
 16795  019314  E110               	bnz	u7560
 16796  019316  0EEA               	movlw	-22
 16797  019318  50E3               	movf	plusw1,w,c
 16798  01931A  E10D               	bnz	u7560
 16799  01931C  0EEB               	movlw	-21
 16800  01931E  50E3               	movf	plusw1,w,c
 16801  019320  E10A               	bnz	u7560
 16802  019322  0EEC               	movlw	-20
 16803  019324  50E3               	movf	plusw1,w,c
 16804  019326  E107               	bnz	u7560
 16805  019328  0EED               	movlw	-19
 16806  01932A  50E3               	movf	plusw1,w,c
 16807  01932C  E104               	bnz	u7560
 16808  01932E  0EEE               	movlw	-18
 16809  019330  50E3               	movf	plusw1,w,c
 16810  019332  B4D8               	btfsc	status,2,c
 16811  019334  D088               	goto	u7590
 16812  019336                     u7560:
 16813                           
 16814                           ;stkvar	_counter @ sp[(-9)+8]
 16815  019336  0EFF               	movlw	-1
 16816  019338  6AE3               	clrf	plusw1,c
 16817  01933A  D012               	goto	L18
 16818  01933C                     l9041:
 16819                           
 16820                           ;stkvar	_divisor @ sp[(-9)+-16]
 16821  01933C  90D8               	bcf	status,0,c
 16822  01933E  0EE7               	movlw	-25
 16823  019340  36E3               	rlcf	plusw1,f,c
 16824  019342  0EE8               	movlw	-24
 16825  019344  36E3               	rlcf	plusw1,f,c
 16826  019346  0EE9               	movlw	-23
 16827  019348  36E3               	rlcf	plusw1,f,c
 16828  01934A  0EEA               	movlw	-22
 16829  01934C  36E3               	rlcf	plusw1,f,c
 16830  01934E  0EEB               	movlw	-21
 16831  019350  36E3               	rlcf	plusw1,f,c
 16832  019352  0EEC               	movlw	-20
 16833  019354  36E3               	rlcf	plusw1,f,c
 16834  019356  0EED               	movlw	-19
 16835  019358  36E3               	rlcf	plusw1,f,c
 16836  01935A  0EEE               	movlw	-18
 16837  01935C  36E3               	rlcf	plusw1,f,c
 16838                           
 16839                           ;stkvar	_counter @ sp[(-9)+8]
 16840  01935E  0EFF               	movlw	-1
 16841  019360                     L18:
 16842  019360  2AE3               	incf	plusw1,f,c
 16843                           
 16844                           ;stkvar	_divisor @ sp[(-9)+-16]
 16845  019362  0EEE               	movlw	-18
 16846  019364  AEE3               	btfss	plusw1,7,c
 16847  019366  D7EA               	goto	l9041
 16848  019368                     u7570:
 16849                           
 16850                           ;stkvar	_quotient @ sp[(-9)+0]
 16851  019368  90D8               	bcf	status,0,c
 16852  01936A  0EF7               	movlw	-9
 16853  01936C  36E3               	rlcf	plusw1,f,c
 16854  01936E  0EF8               	movlw	-8
 16855  019370  36E3               	rlcf	plusw1,f,c
 16856  019372  0EF9               	movlw	-7
 16857  019374  36E3               	rlcf	plusw1,f,c
 16858  019376  0EFA               	movlw	-6
 16859  019378  36E3               	rlcf	plusw1,f,c
 16860  01937A  0EFB               	movlw	-5
 16861  01937C  36E3               	rlcf	plusw1,f,c
 16862  01937E  0EFC               	movlw	-4
 16863  019380  36E3               	rlcf	plusw1,f,c
 16864  019382  0EFD               	movlw	-3
 16865  019384  36E3               	rlcf	plusw1,f,c
 16866  019386  0EFE               	movlw	-2
 16867  019388  36E3               	rlcf	plusw1,f,c
 16868                           
 16869                           ;stkvar	_divisor @ sp[(-9)+-16]
 16870                           ;stkvar	_dividend @ sp[(-9)+-8]
 16871  01938A  50E1               	movf	fsr1l,w,c
 16872  01938C  0FEF               	addlw	-17
 16873  01938E  6ED9               	movwf	fsr2l,c
 16874  019390  50E2               	movf	fsr1h,w,c
 16875  019392  6EDA               	movwf	fsr2h,c
 16876  019394  0EFF               	movlw	255
 16877  019396  22DA               	addwfc	fsr2h,f,c
 16878  019398  0EE7               	movlw	-25
 16879  01939A  50E3               	movf	plusw1,w,c
 16880  01939C  5CDE               	subwf	postinc2,w,c
 16881  01939E  0EE8               	movlw	-24
 16882  0193A0  50E3               	movf	plusw1,w,c
 16883  0193A2  58DE               	subwfb	postinc2,w,c
 16884  0193A4  0EE9               	movlw	-23
 16885  0193A6  50E3               	movf	plusw1,w,c
 16886  0193A8  58DE               	subwfb	postinc2,w,c
 16887  0193AA  0EEA               	movlw	-22
 16888  0193AC  50E3               	movf	plusw1,w,c
 16889  0193AE  58DE               	subwfb	postinc2,w,c
 16890  0193B0  0EEB               	movlw	-21
 16891  0193B2  50E3               	movf	plusw1,w,c
 16892  0193B4  58DE               	subwfb	postinc2,w,c
 16893  0193B6  0EEC               	movlw	-20
 16894  0193B8  50E3               	movf	plusw1,w,c
 16895  0193BA  58DE               	subwfb	postinc2,w,c
 16896  0193BC  0EED               	movlw	-19
 16897  0193BE  50E3               	movf	plusw1,w,c
 16898  0193C0  58DE               	subwfb	postinc2,w,c
 16899  0193C2  0EEE               	movlw	-18
 16900  0193C4  50E3               	movf	plusw1,w,c
 16901  0193C6  58DE               	subwfb	postinc2,w,c
 16902  0193C8  A0D8               	btfss	status,0,c
 16903  0193CA  D021               	goto	l9053
 16904                           
 16905                           ;stkvar	_divisor @ sp[(-9)+-16]
 16906                           ;stkvar	_dividend @ sp[(-9)+-8]
 16907  0193CC  50E1               	movf	fsr1l,w,c
 16908  0193CE  0FEF               	addlw	-17
 16909  0193D0  6ED9               	movwf	fsr2l,c
 16910  0193D2  50E2               	movf	fsr1h,w,c
 16911  0193D4  6EDA               	movwf	fsr2h,c
 16912  0193D6  0EFF               	movlw	255
 16913  0193D8  22DA               	addwfc	fsr2h,f,c
 16914  0193DA  0EE7               	movlw	-25
 16915  0193DC  50E3               	movf	plusw1,w,c
 16916  0193DE  5EDE               	subwf	postinc2,f,c
 16917  0193E0  0EE8               	movlw	-24
 16918  0193E2  50E3               	movf	plusw1,w,c
 16919  0193E4  5ADE               	subwfb	postinc2,f,c
 16920  0193E6  0EE9               	movlw	-23
 16921  0193E8  50E3               	movf	plusw1,w,c
 16922  0193EA  5ADE               	subwfb	postinc2,f,c
 16923  0193EC  0EEA               	movlw	-22
 16924  0193EE  50E3               	movf	plusw1,w,c
 16925  0193F0  5ADE               	subwfb	postinc2,f,c
 16926  0193F2  0EEB               	movlw	-21
 16927  0193F4  50E3               	movf	plusw1,w,c
 16928  0193F6  5ADE               	subwfb	postinc2,f,c
 16929  0193F8  0EEC               	movlw	-20
 16930  0193FA  50E3               	movf	plusw1,w,c
 16931  0193FC  5ADE               	subwfb	postinc2,f,c
 16932  0193FE  0EED               	movlw	-19
 16933  019400  50E3               	movf	plusw1,w,c
 16934  019402  5ADE               	subwfb	postinc2,f,c
 16935  019404  0EEE               	movlw	-18
 16936  019406  50E3               	movf	plusw1,w,c
 16937  019408  5ADE               	subwfb	postinc2,f,c
 16938                           
 16939                           ;stkvar	_quotient @ sp[(-9)+0]
 16940  01940A  0EF7               	movlw	-9
 16941  01940C  80E3               	bsf	plusw1,0,c
 16942  01940E                     l9053:
 16943                           
 16944                           ;stkvar	_divisor @ sp[(-9)+-16]
 16945  01940E  90D8               	bcf	status,0,c
 16946  019410  0EEE               	movlw	-18
 16947  019412  32E3               	rrcf	plusw1,f,c
 16948  019414  0EED               	movlw	-19
 16949  019416  32E3               	rrcf	plusw1,f,c
 16950  019418  0EEC               	movlw	-20
 16951  01941A  32E3               	rrcf	plusw1,f,c
 16952  01941C  0EEB               	movlw	-21
 16953  01941E  32E3               	rrcf	plusw1,f,c
 16954  019420  0EEA               	movlw	-22
 16955  019422  32E3               	rrcf	plusw1,f,c
 16956  019424  0EE9               	movlw	-23
 16957  019426  32E3               	rrcf	plusw1,f,c
 16958  019428  0EE8               	movlw	-24
 16959  01942A  32E3               	rrcf	plusw1,f,c
 16960  01942C  0EE7               	movlw	-25
 16961  01942E  32E3               	rrcf	plusw1,f,c
 16962                           
 16963                           ;stkvar	_counter @ sp[(-9)+8]
 16964  019430  0EFF               	movlw	-1
 16965  019432  50E3               	movf	plusw1,w,c
 16966  019434  6E01               	movwf	btemp^0,c
 16967  019436  0E01               	movlw	1
 16968  019438  5E01               	subwf	btemp^0,f,c
 16969  01943A  0EFF               	movlw	-1
 16970  01943C  0060  F007  FFE3   	movff	btemp,plusw1
 16971  019442  A4D8               	btfss	status,2,c
 16972  019444  D791               	goto	u7570
 16973  019446                     u7590:
 16974                           
 16975                           ;stkvar	_quotient @ sp[(-9)+0]
 16976  019446  0EF7               	movlw	247
 16977  019448  24E1               	addwf	fsr1l,w,c
 16978  01944A  6ED9               	movwf	fsr2l,c
 16979  01944C  0EFF               	movlw	255
 16980  01944E  20E2               	addwfc	fsr1h,w,c
 16981  019450  6EDA               	movwf	fsr2h,c
 16982                           
 16983                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 16984  019452  0E08               	movlw	8
 16985  019454  6E01               	movwf	btemp^0,c
 16986  019456  0EEF               	movlw	-17
 16987  019458                     us760999:
 16988  019458  006F FF7B FFE3     	movff	postinc2,plusw1
 16989  01945E  28E8               	incf	wreg,w,c
 16990  019460  2E01               	decfsz	btemp^0,f,c
 16991  019462  D7FA               	bra	us760999
 16992                           
 16993                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16994  019464  0EF7               	movlw	247
 16995  019466  26E1               	addwf	fsr1l,f,c
 16996  019468  0EFF               	movlw	255
 16997  01946A  22E2               	addwfc	fsr1h,f,c
 16998  01946C  0012               	return		;funcret
 16999  01946E                     __end_of___lodiv:
 17000                           	opt callstack 0
 17001                           
 17002 ;; *************** function _strncmp *****************
 17003 ;; Defined at:
 17004 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 17005 ;; Parameters:    Size  Location     Type
 17006 ;;  _l              2  [STACK] PTR const unsigned char 
 17007 ;;		 -> ct(3), STR_78(127), STR_76(3), STR_75(3), 
 17008 ;;		 -> STR_74(19), STR_73(19), STR_72(19), STR_71(19), 
 17009 ;;		 -> STR_70(19), STR_69(19), STR_68(24), STR_67(15), 
 17010 ;;		 -> STR_66(15), STR_65(15), STR_64(10), STR_63(10), 
 17011 ;;		 -> STR_62(19), STR_61(19), STR_58(3), STR_57(3), 
 17012 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 17013 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 17014 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 17015 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 17016 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 17017 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 17018 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 17019 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 17020 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 17021 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 17022 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 17023 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 17024 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 17025 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 17026 ;;  _r              2  [STACK] PTR const unsigned char 
 17027 ;;		 -> STR_112(3), STR_108(3), STR_103(3), STR_98(3), 
 17028 ;;		 -> STR_93(3), STR_89(3), 
 17029 ;;  n               2  [STACK] unsigned int 
 17030 ;; Auto vars:     Size  Location     Type
 17031 ;;  r               2  [STACK] PTR const unsigned char 
 17032 ;;		 -> STR_112(3), STR_108(3), STR_103(3), STR_98(3), 
 17033 ;;		 -> STR_93(3), STR_89(3), 
 17034 ;;  l               2  [STACK] PTR const unsigned char 
 17035 ;;		 -> ct(3), STR_78(127), STR_76(3), STR_75(3), 
 17036 ;;		 -> STR_74(19), STR_73(19), STR_72(19), STR_71(19), 
 17037 ;;		 -> STR_70(19), STR_69(19), STR_68(24), STR_67(15), 
 17038 ;;		 -> STR_66(15), STR_65(15), STR_64(10), STR_63(10), 
 17039 ;;		 -> STR_62(19), STR_61(19), STR_58(3), STR_57(3), 
 17040 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 17041 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 17042 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 17043 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 17044 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 17045 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 17046 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 17047 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 17048 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 17049 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 17050 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 17051 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 17052 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 17053 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 17054 ;; Return value:  Size  Location     Type
 17055 ;;                  2  [STACK] int 
 17056 ;; Registers used:
 17057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 17058 ;; Tracked objects:
 17059 ;;		On entry : 0/0
 17060 ;;		On exit  : 0/0
 17061 ;;		Unchanged: 0/0
 17062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17067 ;;Total ram usage:        0 bytes
 17068 ;; Hardware stack levels used:    1
 17069 ;; Hardware stack levels required when called:   15
 17070 ;; This function calls:
 17071 ;;		Nothing
 17072 ;; This function is called by:
 17073 ;;		_vfpfcnvrt
 17074 ;; This function uses a reentrant model
 17075 ;;
 17076                           
 17077                           	psect	text63
 17078  018424                     __ptext63:
 17079                           	opt callstack 0
 17080  018424                     _strncmp:
 17081                           	opt callstack 0
 17082                           
 17083                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17084  018424  52E6               	movf	postinc1,f,c
 17085  018426  52E6               	movf	postinc1,f,c
 17086  018428  52E6               	movf	postinc1,f,c
 17087  01842A  52E6               	movf	postinc1,f,c
 17088                           
 17089                           ;stkvar	__l @ sp[(-4)+-2]
 17090                           
 17091                           ;incstack = 0
 17092 ;; hardware stack exceeded
 17093  01842C  0EFA               	movlw	-6
 17094  01842E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17095  018434  0EFB               	movlw	-5
 17096  018436  006F FF8C  F00C    	movff	plusw1,btemp+11
 17097                           
 17098                           ;stkvar	_l @ sp[(-4)+2]
 17099  01843C  0EFF               	movlw	-1
 17100  01843E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17101  018444  0EFE               	movlw	-2
 17102  018446  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17103                           
 17104                           ;stkvar	__r @ sp[(-4)+-4]
 17105  01844C  0EF8               	movlw	-8
 17106  01844E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17107  018454  0EF9               	movlw	-7
 17108  018456  006F FF8C  F00C    	movff	plusw1,btemp+11
 17109                           
 17110                           ;stkvar	_r @ sp[(-4)+0]
 17111  01845C  0EFD               	movlw	-3
 17112  01845E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17113  018464  0EFC               	movlw	-4
 17114  018466  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17115                           
 17116                           ;stkvar	_n @ sp[(-4)+-6]
 17117  01846C  0EF6               	movlw	-10
 17118  01846E  006F FF8C  F001    	movff	plusw1,btemp
 17119  018474  0E01               	movlw	1
 17120  018476  5E01               	subwf	btemp^0,f,c
 17121  018478  0EF6               	movlw	-10
 17122  01847A  0060  F007  FFE3   	movff	btemp,plusw1
 17123  018480  0EF7               	movlw	-9
 17124  018482  006F FF8C  F001    	movff	plusw1,btemp
 17125  018488  0E00               	movlw	0
 17126  01848A  5A01               	subwfb	btemp^0,f,c
 17127  01848C  0EF7               	movlw	-9
 17128  01848E  0060  F007  FFE3   	movff	btemp,plusw1
 17129  018494  0EF6               	movlw	-10
 17130  018496  28E3               	incf	plusw1,w,c
 17131  018498  E13F               	bnz	l9723
 17132  01849A  0EF7               	movlw	-9
 17133  01849C  28E3               	incf	plusw1,w,c
 17134  01849E  A4D8               	btfss	status,2,c
 17135  0184A0  D03B               	goto	l9723
 17136  0184A2  0E00               	movlw	0
 17137  0184A4  6E01               	movwf	btemp^0,c
 17138  0184A6  0E00               	movlw	0
 17139  0184A8  6E02               	movwf	(btemp+1)^0,c
 17140  0184AA  D0C7               	goto	l3574
 17141  0184AC                     l9721:
 17142                           
 17143                           ;stkvar	_l @ sp[(-4)+2]
 17144  0184AC  0EFE               	movlw	-2
 17145  0184AE  50E3               	movf	plusw1,w,c
 17146  0184B0  0F01               	addlw	1
 17147  0184B2  6E01               	movwf	btemp^0,c
 17148  0184B4  0EFE               	movlw	-2
 17149  0184B6  0060  F007  FFE3   	movff	btemp,plusw1
 17150  0184BC  6A01               	clrf	btemp^0,c
 17151  0184BE  0EFF               	movlw	-1
 17152  0184C0  50E3               	movf	plusw1,w,c
 17153  0184C2  2001               	addwfc	btemp^0,w,c
 17154  0184C4  6E01               	movwf	btemp^0,c
 17155  0184C6  0EFF               	movlw	-1
 17156  0184C8  0060  F007  FFE3   	movff	btemp,plusw1
 17157                           
 17158                           ;stkvar	_r @ sp[(-4)+0]
 17159  0184CE  0EFC               	movlw	-4
 17160  0184D0  50E3               	movf	plusw1,w,c
 17161  0184D2  0F01               	addlw	1
 17162  0184D4  6E01               	movwf	btemp^0,c
 17163  0184D6  0EFC               	movlw	-4
 17164  0184D8  0060  F007  FFE3   	movff	btemp,plusw1
 17165  0184DE  6A01               	clrf	btemp^0,c
 17166  0184E0  0EFD               	movlw	-3
 17167  0184E2  50E3               	movf	plusw1,w,c
 17168  0184E4  2001               	addwfc	btemp^0,w,c
 17169  0184E6  6E01               	movwf	btemp^0,c
 17170  0184E8  0EFD               	movlw	-3
 17171  0184EA  0060  F007  FFE3   	movff	btemp,plusw1
 17172                           
 17173                           ;stkvar	_n @ sp[(-4)+-6]
 17174  0184F0  0EF6               	movlw	-10
 17175  0184F2  006F FF8C  F001    	movff	plusw1,btemp
 17176  0184F8  0E01               	movlw	1
 17177  0184FA  5E01               	subwf	btemp^0,f,c
 17178  0184FC  0EF6               	movlw	-10
 17179  0184FE  0060  F007  FFE3   	movff	btemp,plusw1
 17180  018504  0EF7               	movlw	-9
 17181  018506  006F FF8C  F001    	movff	plusw1,btemp
 17182  01850C  0E00               	movlw	0
 17183  01850E  5A01               	subwfb	btemp^0,f,c
 17184  018510  0EF7               	movlw	-9
 17185  018512  0060  F007  FFE3   	movff	btemp,plusw1
 17186  018518                     l9723:
 17187                           
 17188                           ;stkvar	_l @ sp[(-4)+2]
 17189  018518  0EFE               	movlw	-2
 17190  01851A  006F FF8F FFF6     	movff	plusw1,tblptrl
 17191  018520  0EFF               	movlw	-1
 17192  018522  006F FF8F FFF7     	movff	plusw1,tblptrh
 17193  018528  0E00               	movlw	low (__mediumconst shr (0+16))
 17194  01852A  6EF8               	movwf	tblptru,c
 17195  01852C  0E1F               	movlw	(high __ramtop+-1)
 17196  01852E  64F7               	cpfsgt	tblptrh,c
 17197  018530  D003               	bra	u8847
 17198  018532  0008               	tblrd		*
 17199  018534  50F5               	movf	tablat,w,c
 17200  018536  D007               	bra	u8840
 17201  018538                     u8847:
 17202  018538  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17203  01853E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17204  018544  50EF               	movf	indf0,w,c
 17205  018546                     u8840:
 17206  018546  0900               	iorlw	0
 17207  018548  B4D8               	btfsc	status,2,c
 17208  01854A  D04A               	goto	u8880
 17209                           
 17210                           ;stkvar	_r @ sp[(-4)+0]
 17211  01854C  50E1               	movf	fsr1l,w,c
 17212  01854E  0FFC               	addlw	-4
 17213  018550  6ED9               	movwf	fsr2l,c
 17214  018552  50E2               	movf	fsr1h,w,c
 17215  018554  6EDA               	movwf	fsr2h,c
 17216  018556  0EFF               	movlw	255
 17217  018558  22DA               	addwfc	fsr2h,f,c
 17218  01855A  006F FF7B FFF6     	movff	postinc2,tblptrl
 17219  018560  006F FF77 FFF7     	movff	postdec2,tblptrh
 17220  018566                     	if	0	;tblptru may be non-zero
 17221  018566                     	endif
 17222  018566                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17223  018566  0E00               	movlw	low (__mediumconst shr (0+16))
 17224  018568  6EF8               	movwf	tblptru,c
 17225  01856A                     	endif
 17226  01856A  0008               	tblrd		*
 17227  01856C  50F5               	movf	tablat,w,c
 17228  01856E  0900               	iorlw	0
 17229  018570  B4D8               	btfsc	status,2,c
 17230  018572  D036               	goto	u8880
 17231                           
 17232                           ;stkvar	_n @ sp[(-4)+-6]
 17233  018574  0EF6               	movlw	-10
 17234  018576  006F FF8C  F001    	movff	plusw1,btemp
 17235  01857C  0EF7               	movlw	-9
 17236  01857E  50E3               	movf	plusw1,w,c
 17237  018580  1001               	iorwf	btemp^0,w,c
 17238  018582  B4D8               	btfsc	status,2,c
 17239  018584  D02D               	goto	u8880
 17240                           
 17241                           ;stkvar	_r @ sp[(-4)+0]
 17242  018586  50E1               	movf	fsr1l,w,c
 17243  018588  0FFC               	addlw	-4
 17244  01858A  6ED9               	movwf	fsr2l,c
 17245  01858C  50E2               	movf	fsr1h,w,c
 17246  01858E  6EDA               	movwf	fsr2h,c
 17247  018590  0EFF               	movlw	255
 17248  018592  22DA               	addwfc	fsr2h,f,c
 17249  018594  006F FF7B FFF6     	movff	postinc2,tblptrl
 17250  01859A  006F FF77 FFF7     	movff	postdec2,tblptrh
 17251  0185A0                     	if	0	;tblptru may be non-zero
 17252  0185A0                     	endif
 17253  0185A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17254  0185A0  0E00               	movlw	low (__mediumconst shr (0+16))
 17255  0185A2  6EF8               	movwf	tblptru,c
 17256  0185A4                     	endif
 17257  0185A4  0008               	tblrd		*
 17258  0185A6  006F FFD4  F00C    	movff	tablat,btemp+11
 17259                           
 17260                           ;stkvar	_l @ sp[(-4)+2]
 17261  0185AC  0EFE               	movlw	-2
 17262  0185AE  006F FF8F FFF6     	movff	plusw1,tblptrl
 17263  0185B4  0EFF               	movlw	-1
 17264  0185B6  006F FF8F FFF7     	movff	plusw1,tblptrh
 17265  0185BC  0E00               	movlw	low (__mediumconst shr (0+16))
 17266  0185BE  6EF8               	movwf	tblptru,c
 17267  0185C0  0E1F               	movlw	(high __ramtop+-1)
 17268  0185C2  64F7               	cpfsgt	tblptrh,c
 17269  0185C4  D003               	bra	u8887
 17270  0185C6  0008               	tblrd		*
 17271  0185C8  50F5               	movf	tablat,w,c
 17272  0185CA  D007               	bra	u8885
 17273  0185CC                     u8887:
 17274  0185CC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17275  0185D2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17276  0185D8  50EF               	movf	indf0,w,c
 17277  0185DA                     u8885:
 17278  0185DA  180C               	xorwf	(btemp+11)^0,w,c
 17279  0185DC  B4D8               	btfsc	status,2,c
 17280  0185DE  D766               	goto	l9721
 17281  0185E0                     u8880:
 17282                           
 17283                           ;stkvar	_l @ sp[(-4)+2]
 17284  0185E0  0EFE               	movlw	-2
 17285  0185E2  006F FF8F FFF6     	movff	plusw1,tblptrl
 17286  0185E8  0EFF               	movlw	-1
 17287  0185EA  006F FF8F FFF7     	movff	plusw1,tblptrh
 17288  0185F0  0E00               	movlw	low (__mediumconst shr (0+16))
 17289  0185F2  6EF8               	movwf	tblptru,c
 17290  0185F4  0E1F               	movlw	(high __ramtop+-1)
 17291  0185F6  64F7               	cpfsgt	tblptrh,c
 17292  0185F8  D003               	bra	u8897
 17293  0185FA  0008               	tblrd		*
 17294  0185FC  50F5               	movf	tablat,w,c
 17295  0185FE  D007               	bra	u8890
 17296  018600                     u8897:
 17297  018600  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17298  018606  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17299  01860C  50EF               	movf	indf0,w,c
 17300  01860E                     u8890:
 17301  01860E  6E01               	movwf	btemp^0,c
 17302  018610  6A02               	clrf	(btemp+1)^0,c
 17303                           
 17304                           ;stkvar	_r @ sp[(-4)+0]
 17305  018612  50E1               	movf	fsr1l,w,c
 17306  018614  0FFC               	addlw	-4
 17307  018616  6ED9               	movwf	fsr2l,c
 17308  018618  50E2               	movf	fsr1h,w,c
 17309  01861A  6EDA               	movwf	fsr2h,c
 17310  01861C  0EFF               	movlw	255
 17311  01861E  22DA               	addwfc	fsr2h,f,c
 17312  018620  006F FF7B FFF6     	movff	postinc2,tblptrl
 17313  018626  006F FF77 FFF7     	movff	postdec2,tblptrh
 17314  01862C                     	if	0	;tblptru may be non-zero
 17315  01862C                     	endif
 17316  01862C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17317  01862C  0E00               	movlw	low (__mediumconst shr (0+16))
 17318  01862E  6EF8               	movwf	tblptru,c
 17319  018630                     	endif
 17320  018630  0008               	tblrd		*
 17321  018632  50F5               	movf	tablat,w,c
 17322  018634  5E01               	subwf	btemp^0,f,c
 17323  018636  0E00               	movlw	0
 17324  018638  5A02               	subwfb	(btemp+1)^0,f,c
 17325  01863A                     l3574:
 17326                           
 17327                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 17328  01863A  0EF6               	movlw	246
 17329  01863C  26E1               	addwf	fsr1l,f,c
 17330  01863E  0EFF               	movlw	255
 17331  018640  22E2               	addwfc	fsr1h,f,c
 17332  018642  0012               	return		;funcret
 17333  018644                     __end_of_strncmp:
 17334                           	opt callstack 0
 17335                           
 17336 ;; *************** function _stoa *****************
 17337 ;; Defined at:
 17338 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17339 ;; Parameters:    Size  Location     Type
 17340 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17341 ;;		 -> f(6), NULL(0), 
 17342 ;;  s               2  [STACK] PTR unsigned char 
 17343 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_59(12), 
 17344 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 17345 ;;		 -> V(192), 
 17346 ;; Auto vars:     Size  Location     Type
 17347 ;;  nuls            7  [STACK] unsigned char [7]
 17348 ;;  l               2  [STACK] int 
 17349 ;;  p               2  [STACK] int 
 17350 ;;  cp              2  [STACK] PTR unsigned char 
 17351 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_60(9), 
 17352 ;;		 -> STR_59(12), D.lcd(480), D(482), T(144), 
 17353 ;;		 -> STR_3(5), V(192), 
 17354 ;;  w               2  [STACK] int 
 17355 ;;  i               2  [STACK] int 
 17356 ;; Return value:  Size  Location     Type
 17357 ;;                  2  [STACK] int 
 17358 ;; Registers used:
 17359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17360 ;; Tracked objects:
 17361 ;;		On entry : 0/0
 17362 ;;		On exit  : 0/0
 17363 ;;		Unchanged: 0/0
 17364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17369 ;;Total ram usage:        0 bytes
 17370 ;; Hardware stack levels used:    1
 17371 ;; Hardware stack levels required when called:   18
 17372 ;; This function calls:
 17373 ;;		_fputc
 17374 ;;		_strlen
 17375 ;; This function is called by:
 17376 ;;		_vfpfcnvrt
 17377 ;; This function uses a reentrant model
 17378 ;;
 17379                           
 17380                           	psect	text64
 17381  0177EC                     __ptext64:
 17382                           	opt callstack 0
 17383  0177EC                     _stoa:
 17384                           	opt callstack 0
 17385                           
 17386                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17387  0177EC  0E11               	movlw	17
 17388  0177EE  26E1               	addwf	fsr1l,f,c
 17389  0177F0  0E00               	movlw	0
 17390  0177F2  22E2               	addwfc	fsr1h,f,c
 17391                           
 17392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 17393                           
 17394                           ;incstack = 0
 17395 ;; hardware stack exceeded
 17396  0177F4  EE20  F100         	lfsr	2,stoa@F1166
 17397                           
 17398                           ;stkvar	_nuls @ sp[(-17)+0]
 17399  0177F8  0E07               	movlw	7
 17400  0177FA  6E01               	movwf	btemp^0,c
 17401  0177FC  0EEF               	movlw	-17
 17402  0177FE                     us1207999:
 17403  0177FE  006F FF7B FFE3     	movff	postinc2,plusw1
 17404  017804  28E8               	incf	wreg,w,c
 17405  017806  2E01               	decfsz	btemp^0,f,c
 17406  017808  D7FA               	bra	us1207999
 17407                           
 17408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 17409                           ;stkvar	_s @ sp[(-17)+-4]
 17410  01780A  0EEB               	movlw	-21
 17411  01780C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17412  017812  0EEC               	movlw	-20
 17413  017814  006F FF8C  F00C    	movff	plusw1,btemp+11
 17414                           
 17415                           ;stkvar	_cp @ sp[(-17)+11]
 17416  01781A  0EFB               	movlw	-5
 17417  01781C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17418  017822  0EFA               	movlw	-6
 17419  017824  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17420                           
 17421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 17422                           ;stkvar	_cp @ sp[(-17)+11]
 17423  01782A  0EFA               	movlw	-6
 17424  01782C  006F FF8C  F001    	movff	plusw1,btemp
 17425  017832  0EFB               	movlw	-5
 17426  017834  50E3               	movf	plusw1,w,c
 17427  017836  1001               	iorwf	btemp^0,w,c
 17428  017838  A4D8               	btfss	status,2,c
 17429  01783A  D00E               	goto	l12891
 17430                           
 17431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 17432                           ;stkvar	_nuls @ sp[(-17)+0]
 17433  01783C  0EEF               	movlw	239
 17434  01783E  24E1               	addwf	fsr1l,w,c
 17435  017840  6E0B               	movwf	(btemp+10)^0,c
 17436  017842  0EFF               	movlw	255
 17437  017844  20E2               	addwfc	fsr1h,w,c
 17438  017846  6E0C               	movwf	(btemp+11)^0,c
 17439                           
 17440                           ;stkvar	_cp @ sp[(-17)+11]
 17441  017848  0EFB               	movlw	-5
 17442  01784A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17443  017850  0EFA               	movlw	-6
 17444  017852  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17445  017858                     l12891:
 17446                           
 17447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 17448                           ;stkvar	_cp @ sp[(-17)+11]
 17449  017858  0EFA               	movlw	-6
 17450  01785A  006F FF8F FFE6     	movff	plusw1,postinc1
 17451  017860  006F FF8F FFE6     	movff	plusw1,postinc1
 17452  017866  ECD5  F0D8         	call	_strlen	;wreg free
 17453                           
 17454                           ;stkvar	_l @ sp[(-17)+7]
 17455  01786A  0EF6               	movlw	-10
 17456  01786C  0060  F007  FFE3   	movff	btemp,plusw1
 17457  017872  0EF7               	movlw	-9
 17458  017874  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17459                           
 17460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 17461                           ;stkvar	_p @ sp[(-17)+9]
 17462  01787A  0EF8               	movlw	-8
 17463  01787C  0060  F0F3  FFE3   	movff	_prec,plusw1
 17464  017882  0EF9               	movlw	-7
 17465  017884  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17466                           
 17467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 17468                           ;stkvar	_p @ sp[(-17)+9]
 17469  01788A  0EF9               	movlw	-7
 17470  01788C  BEE3               	btfsc	plusw1,7,c
 17471  01788E  D023               	goto	l2399
 17472                           
 17473                           ;stkvar	_l @ sp[(-17)+7]
 17474                           ;stkvar	_p @ sp[(-17)+9]
 17475  017890  50E1               	movf	fsr1l,w,c
 17476  017892  0FF8               	addlw	-8
 17477  017894  6ED9               	movwf	fsr2l,c
 17478  017896  50E2               	movf	fsr1h,w,c
 17479  017898  6EDA               	movwf	fsr2h,c
 17480  01789A  0EFF               	movlw	255
 17481  01789C  22DA               	addwfc	fsr2h,f,c
 17482  01789E  0EF6               	movlw	-10
 17483  0178A0  50E3               	movf	plusw1,w,c
 17484  0178A2  5CDE               	subwf	postinc2,w,c
 17485  0178A4  50DE               	movf	postinc2,w,c
 17486  0178A6  0A80               	xorlw	128
 17487  0178A8  6E01               	movwf	btemp^0,c
 17488  0178AA  0EF7               	movlw	-9
 17489  0178AC  50E3               	movf	plusw1,w,c
 17490  0178AE  0A80               	xorlw	128
 17491  0178B0  5801               	subwfb	btemp^0,w,c
 17492  0178B2  B0D8               	btfsc	status,0,c
 17493  0178B4  D010               	goto	l2399
 17494                           
 17495                           ;stkvar	_p @ sp[(-17)+9]
 17496                           ;stkvar	_l @ sp[(-17)+7]
 17497  0178B6  0EF8               	movlw	-8
 17498  0178B8  006F FF8C  F001    	movff	plusw1,btemp
 17499  0178BE  0EF6               	movlw	-10
 17500  0178C0  0060  F007  FFE3   	movff	btemp,plusw1
 17501  0178C6  0EF9               	movlw	-7
 17502  0178C8  006F FF8C  F001    	movff	plusw1,btemp
 17503  0178CE  0EF7               	movlw	-9
 17504  0178D0  0060  F007  FFE3   	movff	btemp,plusw1
 17505  0178D6                     l2399:
 17506                           
 17507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 17508                           ;stkvar	_l @ sp[(-17)+7]
 17509                           ;stkvar	_p @ sp[(-17)+9]
 17510  0178D6  0EF6               	movlw	-10
 17511  0178D8  006F FF8C  F001    	movff	plusw1,btemp
 17512  0178DE  0EF8               	movlw	-8
 17513  0178E0  0060  F007  FFE3   	movff	btemp,plusw1
 17514  0178E6  0EF7               	movlw	-9
 17515  0178E8  006F FF8C  F001    	movff	plusw1,btemp
 17516  0178EE  0EF9               	movlw	-7
 17517  0178F0  0060  F007  FFE3   	movff	btemp,plusw1
 17518                           
 17519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 17520                           ;stkvar	_w @ sp[(-17)+13]
 17521  0178F6  0EFC               	movlw	-4
 17522  0178F8  0060  F0EB  FFE3   	movff	_width,plusw1
 17523  0178FE  0EFD               	movlw	-3
 17524  017900  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17525                           
 17526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 17527  017906  A03E               	btfss	_flags^0,0,c
 17528  017908  D01F               	goto	l12911
 17529  01790A  D031               	goto	u12120
 17530  01790C                     l12907:
 17531                           
 17532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 17533                           ;stkvar	_fp @ sp[(-17)+-2]
 17534  01790C  0EED               	movlw	-19
 17535  01790E  006F FF8F FFE6     	movff	plusw1,postinc1
 17536  017914  006F FF8F FFE6     	movff	plusw1,postinc1
 17537  01791A  0E20               	movlw	32
 17538  01791C  6EE6               	movwf	postinc1,c
 17539  01791E  0E00               	movlw	0
 17540  017920  6EE6               	movwf	postinc1,c
 17541  017922  EC6E  F0CF         	call	_fputc	;wreg free
 17542                           
 17543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 17544                           ;stkvar	_l @ sp[(-17)+7]
 17545  017926  0EF6               	movlw	-10
 17546  017928  50E3               	movf	plusw1,w,c
 17547  01792A  0F01               	addlw	1
 17548  01792C  6E01               	movwf	btemp^0,c
 17549  01792E  0EF6               	movlw	-10
 17550  017930  0060  F007  FFE3   	movff	btemp,plusw1
 17551  017936  6A01               	clrf	btemp^0,c
 17552  017938  0EF7               	movlw	-9
 17553  01793A  50E3               	movf	plusw1,w,c
 17554  01793C  2001               	addwfc	btemp^0,w,c
 17555  01793E  6E01               	movwf	btemp^0,c
 17556  017940  0EF7               	movlw	-9
 17557  017942  0060  F007  FFE3   	movff	btemp,plusw1
 17558  017948                     l12911:
 17559                           
 17560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 17561                           ;stkvar	_w @ sp[(-17)+13]
 17562                           ;stkvar	_l @ sp[(-17)+7]
 17563  017948  50E1               	movf	fsr1l,w,c
 17564  01794A  0FF6               	addlw	-10
 17565  01794C  6ED9               	movwf	fsr2l,c
 17566  01794E  50E2               	movf	fsr1h,w,c
 17567  017950  6EDA               	movwf	fsr2h,c
 17568  017952  0EFF               	movlw	255
 17569  017954  22DA               	addwfc	fsr2h,f,c
 17570  017956  0EFC               	movlw	-4
 17571  017958  50E3               	movf	plusw1,w,c
 17572  01795A  5CDE               	subwf	postinc2,w,c
 17573  01795C  50DE               	movf	postinc2,w,c
 17574  01795E  0A80               	xorlw	128
 17575  017960  6E01               	movwf	btemp^0,c
 17576  017962  0EFD               	movlw	-3
 17577  017964  50E3               	movf	plusw1,w,c
 17578  017966  0A80               	xorlw	128
 17579  017968  5801               	subwfb	btemp^0,w,c
 17580  01796A  A0D8               	btfss	status,0,c
 17581  01796C  D7CF               	goto	l12907
 17582  01796E                     u12120:
 17583                           
 17584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 17585                           ;stkvar	_i @ sp[(-17)+15]
 17586  01796E  0EFE               	movlw	-2
 17587  017970  6AE3               	clrf	plusw1,c
 17588  017972  0EFF               	movlw	-1
 17589  017974  6AE3               	clrf	plusw1,c
 17590                           
 17591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17592  017976  D045               	goto	l12921
 17593  017978                     l12915:
 17594                           
 17595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 17596                           ;stkvar	_fp @ sp[(-17)+-2]
 17597  017978  0EED               	movlw	-19
 17598  01797A  006F FF8F FFE6     	movff	plusw1,postinc1
 17599  017980  006F FF8F FFE6     	movff	plusw1,postinc1
 17600                           
 17601                           ;stkvar	_cp @ sp[(-19)+11]
 17602  017986  0EF8               	movlw	-8
 17603  017988  006F FF8F FFF6     	movff	plusw1,tblptrl
 17604  01798E  0EF9               	movlw	-7
 17605  017990  006F FF8F FFF7     	movff	plusw1,tblptrh
 17606  017996  0E00               	movlw	low (__mediumconst shr (0+16))
 17607  017998  6EF8               	movwf	tblptru,c
 17608  01799A  0E1F               	movlw	(high __ramtop+-1)
 17609  01799C  64F7               	cpfsgt	tblptrh,c
 17610  01799E  D003               	bra	u12137
 17611  0179A0  0008               	tblrd		*
 17612  0179A2  50F5               	movf	tablat,w,c
 17613  0179A4  D007               	bra	u12130
 17614  0179A6                     u12137:
 17615  0179A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17616  0179AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17617  0179B2  50EF               	movf	indf0,w,c
 17618  0179B4                     u12130:
 17619  0179B4  6EE6               	movwf	postinc1,c
 17620  0179B6  0E00               	movlw	0
 17621  0179B8  6EE6               	movwf	postinc1,c
 17622  0179BA  EC6E  F0CF         	call	_fputc	;wreg free
 17623                           
 17624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 17625                           ;stkvar	_cp @ sp[(-17)+11]
 17626  0179BE  0EFA               	movlw	-6
 17627  0179C0  50E3               	movf	plusw1,w,c
 17628  0179C2  0F01               	addlw	1
 17629  0179C4  6E01               	movwf	btemp^0,c
 17630  0179C6  0EFA               	movlw	-6
 17631  0179C8  0060  F007  FFE3   	movff	btemp,plusw1
 17632  0179CE  6A01               	clrf	btemp^0,c
 17633  0179D0  0EFB               	movlw	-5
 17634  0179D2  50E3               	movf	plusw1,w,c
 17635  0179D4  2001               	addwfc	btemp^0,w,c
 17636  0179D6  6E01               	movwf	btemp^0,c
 17637  0179D8  0EFB               	movlw	-5
 17638  0179DA  0060  F007  FFE3   	movff	btemp,plusw1
 17639                           
 17640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 17641                           ;stkvar	_i @ sp[(-17)+15]
 17642  0179E0  0EFE               	movlw	-2
 17643  0179E2  50E3               	movf	plusw1,w,c
 17644  0179E4  0F01               	addlw	1
 17645  0179E6  6E01               	movwf	btemp^0,c
 17646  0179E8  0EFE               	movlw	-2
 17647  0179EA  0060  F007  FFE3   	movff	btemp,plusw1
 17648  0179F0  6A01               	clrf	btemp^0,c
 17649  0179F2  0EFF               	movlw	-1
 17650  0179F4  50E3               	movf	plusw1,w,c
 17651  0179F6  2001               	addwfc	btemp^0,w,c
 17652  0179F8  6E01               	movwf	btemp^0,c
 17653  0179FA  0EFF               	movlw	-1
 17654  0179FC  0060  F007  FFE3   	movff	btemp,plusw1
 17655  017A02                     l12921:
 17656                           
 17657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17658                           ;stkvar	_p @ sp[(-17)+9]
 17659                           ;stkvar	_i @ sp[(-17)+15]
 17660  017A02  50E1               	movf	fsr1l,w,c
 17661  017A04  0FFE               	addlw	-2
 17662  017A06  6ED9               	movwf	fsr2l,c
 17663  017A08  50E2               	movf	fsr1h,w,c
 17664  017A0A  6EDA               	movwf	fsr2h,c
 17665  017A0C  0EFF               	movlw	255
 17666  017A0E  22DA               	addwfc	fsr2h,f,c
 17667  017A10  0EF8               	movlw	-8
 17668  017A12  50E3               	movf	plusw1,w,c
 17669  017A14  5CDE               	subwf	postinc2,w,c
 17670  017A16  50DE               	movf	postinc2,w,c
 17671  017A18  0A80               	xorlw	128
 17672  017A1A  6E01               	movwf	btemp^0,c
 17673  017A1C  0EF9               	movlw	-7
 17674  017A1E  50E3               	movf	plusw1,w,c
 17675  017A20  0A80               	xorlw	128
 17676  017A22  5801               	subwfb	btemp^0,w,c
 17677  017A24  A0D8               	btfss	status,0,c
 17678  017A26  D7A8               	goto	l12915
 17679                           
 17680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 17681  017A28  B03E               	btfsc	_flags^0,0,c
 17682  017A2A  D01F               	goto	l12929
 17683  017A2C  D031               	goto	u12160
 17684  017A2E                     l12925:
 17685                           
 17686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 17687                           ;stkvar	_fp @ sp[(-17)+-2]
 17688  017A2E  0EED               	movlw	-19
 17689  017A30  006F FF8F FFE6     	movff	plusw1,postinc1
 17690  017A36  006F FF8F FFE6     	movff	plusw1,postinc1
 17691  017A3C  0E20               	movlw	32
 17692  017A3E  6EE6               	movwf	postinc1,c
 17693  017A40  0E00               	movlw	0
 17694  017A42  6EE6               	movwf	postinc1,c
 17695  017A44  EC6E  F0CF         	call	_fputc	;wreg free
 17696                           
 17697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 17698                           ;stkvar	_l @ sp[(-17)+7]
 17699  017A48  0EF6               	movlw	-10
 17700  017A4A  50E3               	movf	plusw1,w,c
 17701  017A4C  0F01               	addlw	1
 17702  017A4E  6E01               	movwf	btemp^0,c
 17703  017A50  0EF6               	movlw	-10
 17704  017A52  0060  F007  FFE3   	movff	btemp,plusw1
 17705  017A58  6A01               	clrf	btemp^0,c
 17706  017A5A  0EF7               	movlw	-9
 17707  017A5C  50E3               	movf	plusw1,w,c
 17708  017A5E  2001               	addwfc	btemp^0,w,c
 17709  017A60  6E01               	movwf	btemp^0,c
 17710  017A62  0EF7               	movlw	-9
 17711  017A64  0060  F007  FFE3   	movff	btemp,plusw1
 17712  017A6A                     l12929:
 17713                           
 17714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 17715                           ;stkvar	_w @ sp[(-17)+13]
 17716                           ;stkvar	_l @ sp[(-17)+7]
 17717  017A6A  50E1               	movf	fsr1l,w,c
 17718  017A6C  0FF6               	addlw	-10
 17719  017A6E  6ED9               	movwf	fsr2l,c
 17720  017A70  50E2               	movf	fsr1h,w,c
 17721  017A72  6EDA               	movwf	fsr2h,c
 17722  017A74  0EFF               	movlw	255
 17723  017A76  22DA               	addwfc	fsr2h,f,c
 17724  017A78  0EFC               	movlw	-4
 17725  017A7A  50E3               	movf	plusw1,w,c
 17726  017A7C  5CDE               	subwf	postinc2,w,c
 17727  017A7E  50DE               	movf	postinc2,w,c
 17728  017A80  0A80               	xorlw	128
 17729  017A82  6E01               	movwf	btemp^0,c
 17730  017A84  0EFD               	movlw	-3
 17731  017A86  50E3               	movf	plusw1,w,c
 17732  017A88  0A80               	xorlw	128
 17733  017A8A  5801               	subwfb	btemp^0,w,c
 17734  017A8C  A0D8               	btfss	status,0,c
 17735  017A8E  D7CF               	goto	l12925
 17736  017A90                     u12160:
 17737                           
 17738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 17739                           ;stkvar	_l @ sp[(-17)+7]
 17740  017A90  0EF6               	movlw	-10
 17741  017A92  006F FF8C  F001    	movff	plusw1,btemp
 17742  017A98  0EF7               	movlw	-9
 17743  017A9A  006F FF8C  F002    	movff	plusw1,btemp+1
 17744                           
 17745                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17746  017AA0  0EEB               	movlw	235
 17747  017AA2  26E1               	addwf	fsr1l,f,c
 17748  017AA4  0EFF               	movlw	255
 17749  017AA6  22E2               	addwfc	fsr1h,f,c
 17750  017AA8  0012               	return		;funcret
 17751  017AAA                     __end_of_stoa:
 17752                           	opt callstack 0
 17753                           
 17754 ;; *************** function _efgtoa *****************
 17755 ;; Defined at:
 17756 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17759 ;;		 -> f(6), NULL(0), 
 17760 ;;  f               4  [STACK] PTR struct _IO_FILE
 17761 ;;  c               1  [STACK] unsigned char 
 17762 ;; Auto vars:     Size  Location     Type
 17763 ;;  u               4  [STACK] unsigned char 
 17764 ;;  g               4  [STACK] unsigned char 
 17765 ;;  l               4  [STACK] unsigned char 
 17766 ;;  h               4  [STACK] unsigned char 
 17767 ;;  ou              4  [STACK] unsigned char 
 17768 ;;  n               2  [STACK] int 
 17769 ;;  e               2  [STACK] int 
 17770 ;;  i               2  [STACK] int 
 17771 ;;  w               2  [STACK] int 
 17772 ;;  p               2  [STACK] int 
 17773 ;;  sign            2  [STACK] int 
 17774 ;;  d               2  [STACK] int 
 17775 ;;  ne              2  [STACK] int 
 17776 ;;  m               2  [STACK] int 
 17777 ;;  pp              2  [STACK] int 
 17778 ;;  t               2  [STACK] int 
 17779 ;;  mode            1  [STACK] unsigned char 
 17780 ;;  nmode           1  [STACK] unsigned char 
 17781 ;; Return value:  Size  Location     Type
 17782 ;;                  2  [STACK] int 
 17783 ;; Registers used:
 17784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17785 ;; Tracked objects:
 17786 ;;		On entry : 0/0
 17787 ;;		On exit  : 0/0
 17788 ;;		Unchanged: 0/0
 17789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17794 ;;Total ram usage:        0 bytes
 17795 ;; Hardware stack levels used:    1
 17796 ;; Hardware stack levels required when called:   20
 17797 ;; This function calls:
 17798 ;;		___awdiv
 17799 ;;		___awmod
 17800 ;;		___fladd
 17801 ;;		___fldiv
 17802 ;;		___fleq
 17803 ;;		___flge
 17804 ;;		___flmul
 17805 ;;		___flneg
 17806 ;;		___flsub
 17807 ;;		___fltol
 17808 ;;		___fpclassifyf
 17809 ;;		_floorf
 17810 ;;		_isupper
 17811 ;;		_pad
 17812 ;;		_strcpy
 17813 ;;		_tolower
 17814 ;; This function is called by:
 17815 ;;		_vfpfcnvrt
 17816 ;; This function uses a reentrant model
 17817 ;;
 17818                           
 17819                           	psect	text65
 17820  010000                     __ptext65:
 17821                           	opt callstack 0
 17822  010000                     _efgtoa:
 17823                           	opt callstack 0
 17824                           
 17825                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17826  010000  0E38               	movlw	56
 17827  010002  26E1               	addwf	fsr1l,f,c
 17828  010004  0E00               	movlw	0
 17829  010006  22E2               	addwfc	fsr1h,f,c
 17830                           
 17831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 17832                           ;stkvar	_sign @ sp[(-56)+42]
 17833                           
 17834                           ;incstack = 0
 17835 ;; hardware stack exceeded
 17836  010008  0EF2               	movlw	-14
 17837  01000A  6AE3               	clrf	plusw1,c
 17838  01000C  0EF3               	movlw	-13
 17839  01000E  6AE3               	clrf	plusw1,c
 17840                           
 17841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 17842                           ;stkvar	_f @ sp[(-56)+-6]
 17843  010010  0EC2               	movlw	-62
 17844  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 17845  010018  0EC3               	movlw	-61
 17846  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17847  010020  0EC4               	movlw	-60
 17848  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 17849  010028  0EC5               	movlw	-59
 17850  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17851                           
 17852                           ;stkvar	_g @ sp[(-56)+16]
 17853  010030  0ED8               	movlw	-40
 17854  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 17855  010038  0ED9               	movlw	-39
 17856  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17857  010040  0EDA               	movlw	-38
 17858  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17859  010048  0EDB               	movlw	-37
 17860  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17861                           
 17862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 17863                           ;stkvar	_g @ sp[(-56)+16]
 17864  010050  0EDB               	movlw	-37
 17865  010052  AEE3               	btfss	plusw1,7,c
 17866  010054  D02B               	goto	l12589
 17867                           
 17868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 17869  010056  0E01               	movlw	1
 17870  010058  6E0B               	movwf	(btemp+10)^0,c
 17871  01005A  0E00               	movlw	0
 17872  01005C  6E0C               	movwf	(btemp+11)^0,c
 17873                           
 17874                           ;stkvar	_sign @ sp[(-56)+42]
 17875  01005E  0EF2               	movlw	-14
 17876  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17877  010066  0EF3               	movlw	-13
 17878  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 17879                           
 17880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 17881                           ;stkvar	_g @ sp[(-56)+16]
 17882  01006E  0ED8               	movlw	-40
 17883  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 17884  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 17885  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 17886  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 17887  010088  EC11  F0DF         	call	___flneg	;wreg free
 17888                           
 17889                           ;stkvar	_g @ sp[(-56)+16]
 17890  01008C  0ED8               	movlw	-40
 17891  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 17892  010094  0ED9               	movlw	-39
 17893  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17894  01009C  0EDA               	movlw	-38
 17895  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17896  0100A4  0EDB               	movlw	-37
 17897  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 17898  0100AC                     l12589:
 17899                           
 17900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 17901                           ;stkvar	_n @ sp[(-56)+32]
 17902  0100AC  0EE8               	movlw	-24
 17903  0100AE  6AE3               	clrf	plusw1,c
 17904  0100B0  0EE9               	movlw	-23
 17905  0100B2  6AE3               	clrf	plusw1,c
 17906                           
 17907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 17908                           ;stkvar	_w @ sp[(-56)+38]
 17909  0100B4  0EEE               	movlw	-18
 17910  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 17911  0100BC  0EEF               	movlw	-17
 17912  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17913                           
 17914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 17915                           ;stkvar	_sign @ sp[(-56)+42]
 17916  0100C4  0EF2               	movlw	-14
 17917  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 17918  0100CC  0EF3               	movlw	-13
 17919  0100CE  50E3               	movf	plusw1,w,c
 17920  0100D0  1001               	iorwf	btemp^0,w,c
 17921  0100D2  A4D8               	btfss	status,2,c
 17922  0100D4  D002               	goto	u11570
 17923  0100D6  A43E               	btfss	_flags^0,2,c
 17924  0100D8  D036               	goto	l12609
 17925  0100DA                     u11570:
 17926                           
 17927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 17928                           ;stkvar	_sign @ sp[(-56)+42]
 17929  0100DA  0EF2               	movlw	-14
 17930  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 17931  0100E2  0EF3               	movlw	-13
 17932  0100E4  50E3               	movf	plusw1,w,c
 17933  0100E6  1001               	iorwf	btemp^0,w,c
 17934  0100E8  A4D8               	btfss	status,2,c
 17935  0100EA  D002               	goto	l12601
 17936  0100EC  0E2B               	movlw	43
 17937  0100EE  D001               	goto	L19
 17938  0100F0                     l12601:
 17939  0100F0  0E2D               	movlw	45
 17940  0100F2                     L19:
 17941  0100F2  6E0B               	movwf	(btemp+10)^0,c
 17942  0100F4  0E00               	movlw	0
 17943  0100F6  6E0C               	movwf	(btemp+11)^0,c
 17944                           
 17945                           ;stkvar	_efgtoa$5857 @ sp[(-56)+10]
 17946  0100F8  0ED2               	movlw	-46
 17947  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17948  010100  0ED3               	movlw	-45
 17949  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 17950                           
 17951                           ;stkvar	_efgtoa$5857 @ sp[(-56)+10]
 17952  010108  0ED2               	movlw	-46
 17953  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 17954                           
 17955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 17956                           ;stkvar	_n @ sp[(-56)+32]
 17957  010110  0EE8               	movlw	-24
 17958  010112  50E3               	movf	plusw1,w,c
 17959  010114  0F01               	addlw	1
 17960  010116  6E01               	movwf	btemp^0,c
 17961  010118  0EE8               	movlw	-24
 17962  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 17963  010120  6A01               	clrf	btemp^0,c
 17964  010122  0EE9               	movlw	-23
 17965  010124  50E3               	movf	plusw1,w,c
 17966  010126  2001               	addwfc	btemp^0,w,c
 17967  010128  6E01               	movwf	btemp^0,c
 17968  01012A  0EE9               	movlw	-23
 17969  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 17970                           
 17971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 17972                           ;stkvar	_w @ sp[(-56)+38]
 17973  010132  50E1               	movf	fsr1l,w,c
 17974  010134  0FEE               	addlw	-18
 17975  010136  6ED9               	movwf	fsr2l,c
 17976  010138  50E2               	movf	fsr1h,w,c
 17977  01013A  6EDA               	movwf	fsr2h,c
 17978  01013C  0EFF               	movlw	255
 17979  01013E  22DA               	addwfc	fsr2h,f,c
 17980  010140  06DE               	decf	postinc2,f,c
 17981  010142  0E00               	movlw	0
 17982  010144  5ADD               	subwfb	postdec2,f,c
 17983  010146                     l12609:
 17984                           
 17985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17986                           ;stkvar	_g @ sp[(-56)+16]
 17987  010146  0ED8               	movlw	-40
 17988  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 17989  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 17990  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 17991  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 17992  010160  ECE9  F0C7         	call	___fpclassifyf	;wreg free
 17993  010164  0401               	decf	btemp^0,w,c
 17994  010166  1002               	iorwf	(btemp+1)^0,w,c
 17995  010168  A4D8               	btfss	status,2,c
 17996  01016A  D076               	goto	l12627
 17997  01016C  0EBF               	movlw	191
 17998  01016E  6E0B               	movwf	(btemp+10)^0,c
 17999  010170  0EFF               	movlw	255
 18000  010172  6E0C               	movwf	(btemp+11)^0,c
 18001                           
 18002                           ;stkvar	_c @ sp[(-56)+-7]
 18003  010174  0EC1               	movlw	-63
 18004  010176  50E3               	movf	plusw1,w,c
 18005  010178  6E09               	movwf	(btemp+8)^0,c
 18006  01017A  6A0A               	clrf	(btemp+9)^0,c
 18007  01017C  500B               	movf	(btemp+10)^0,w,c
 18008  01017E  2609               	addwf	(btemp+8)^0,f,c
 18009  010180  500C               	movf	(btemp+11)^0,w,c
 18010  010182  220A               	addwfc	(btemp+9)^0,f,c
 18011  010184  500A               	movf	(btemp+9)^0,w,c
 18012  010186  E106               	bnz	u11600
 18013  010188  0E1A               	movlw	26
 18014  01018A  5C09               	subwf	(btemp+8)^0,w,c
 18015  01018C  B0D8               	btfsc	status,0,c
 18016  01018E  D002               	goto	u11600
 18017  010190  0E01               	movlw	1
 18018  010192  D001               	goto	u11610
 18019  010194                     u11600:
 18020  010194  0E00               	movlw	0
 18021  010196                     u11610:
 18022  010196  6E0B               	movwf	(btemp+10)^0,c
 18023  010198  6A0C               	clrf	(btemp+11)^0,c
 18024                           
 18025                           ;stkvar	_efgtoa$5858 @ sp[(-56)+8]
 18026  01019A  0ED0               	movlw	-48
 18027  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18028  0101A2  0ED1               	movlw	-47
 18029  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18030                           
 18031                           ;stkvar	_efgtoa$5858 @ sp[(-56)+8]
 18032  0101AA  0ED0               	movlw	-48
 18033  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 18034  0101B2  0ED1               	movlw	-47
 18035  0101B4  50E3               	movf	plusw1,w,c
 18036  0101B6  1001               	iorwf	btemp^0,w,c
 18037  0101B8  B4D8               	btfsc	status,2,c
 18038  0101BA  D017               	goto	l12619
 18039                           
 18040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 18041  0101BC  0ED6               	movlw	low STR_79
 18042  0101BE  6EE6               	movwf	postinc1,c
 18043  0101C0  0EFF               	movlw	high STR_79
 18044  0101C2  6EE6               	movwf	postinc1,c
 18045                           
 18046                           ;stkvar	_n @ sp[(-58)+32]
 18047  0101C4  0E97               	movlw	low _dbuf
 18048  0101C6  6E0B               	movwf	(btemp+10)^0,c
 18049  0101C8  0E02               	movlw	high _dbuf
 18050  0101CA  6E0C               	movwf	(btemp+11)^0,c
 18051  0101CC  0EE6               	movlw	-26
 18052  0101CE  50E3               	movf	plusw1,w,c
 18053  0101D0  260B               	addwf	(btemp+10)^0,f,c
 18054  0101D2  0EE7               	movlw	-25
 18055  0101D4  50E3               	movf	plusw1,w,c
 18056  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 18057  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18058  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 18059  0101E4  EC81  F0D4         	call	_strcpy	;wreg free
 18060                           
 18061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 18062  0101E8  D016               	goto	l12621
 18063  0101EA                     l12619:
 18064                           
 18065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 18066  0101EA  0EDE               	movlw	low STR_80
 18067  0101EC  6EE6               	movwf	postinc1,c
 18068  0101EE  0EFF               	movlw	high STR_80
 18069  0101F0  6EE6               	movwf	postinc1,c
 18070                           
 18071                           ;stkvar	_n @ sp[(-58)+32]
 18072  0101F2  0E97               	movlw	low _dbuf
 18073  0101F4  6E0B               	movwf	(btemp+10)^0,c
 18074  0101F6  0E02               	movlw	high _dbuf
 18075  0101F8  6E0C               	movwf	(btemp+11)^0,c
 18076  0101FA  0EE6               	movlw	-26
 18077  0101FC  50E3               	movf	plusw1,w,c
 18078  0101FE  260B               	addwf	(btemp+10)^0,f,c
 18079  010200  0EE7               	movlw	-25
 18080  010202  50E3               	movf	plusw1,w,c
 18081  010204  220C               	addwfc	(btemp+11)^0,f,c
 18082  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18083  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18084  010212  EC81  F0D4         	call	_strcpy	;wreg free
 18085  010216                     l12621:
 18086                           
 18087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 18088                           ;stkvar	_w @ sp[(-56)+38]
 18089  010216  50E1               	movf	fsr1l,w,c
 18090  010218  0FEE               	addlw	-18
 18091  01021A  6ED9               	movwf	fsr2l,c
 18092  01021C  50E2               	movf	fsr1h,w,c
 18093  01021E  6EDA               	movwf	fsr2h,c
 18094  010220  0EFF               	movlw	255
 18095  010222  22DA               	addwfc	fsr2h,f,c
 18096  010224  0EFD               	movlw	253
 18097  010226  26DE               	addwf	postinc2,f,c
 18098  010228  0EFF               	movlw	255
 18099  01022A  22DD               	addwfc	postdec2,f,c
 18100  01022C                     l12623:
 18101                           
 18102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 18103                           ;stkvar	_w @ sp[(-56)+38]
 18104  01022C  0EEE               	movlw	-18
 18105  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 18106  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 18107  01023A  0E97               	movlw	low _dbuf
 18108  01023C  6EE6               	movwf	postinc1,c
 18109  01023E  0E02               	movlw	high _dbuf
 18110  010240  6EE6               	movwf	postinc1,c
 18111                           
 18112                           ;stkvar	_fp @ sp[(-60)+-2]
 18113  010242  0EC2               	movlw	-62
 18114  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 18115  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 18116  010250  EC18  F0D1         	call	_pad	;wreg free
 18117  010254  EF1D  F089         	goto	l2317
 18118  010258                     l12627:
 18119                           
 18120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 18121                           ;stkvar	_g @ sp[(-56)+16]
 18122  010258  0ED8               	movlw	-40
 18123  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 18124  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 18125  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 18126  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 18127  010272  ECE9  F0C7         	call	___fpclassifyf	;wreg free
 18128  010276  5001               	movf	btemp^0,w,c
 18129  010278  1002               	iorwf	(btemp+1)^0,w,c
 18130  01027A  A4D8               	btfss	status,2,c
 18131  01027C  D056               	goto	l12645
 18132  01027E  0EBF               	movlw	191
 18133  010280  6E0B               	movwf	(btemp+10)^0,c
 18134  010282  0EFF               	movlw	255
 18135  010284  6E0C               	movwf	(btemp+11)^0,c
 18136                           
 18137                           ;stkvar	_c @ sp[(-56)+-7]
 18138  010286  0EC1               	movlw	-63
 18139  010288  50E3               	movf	plusw1,w,c
 18140  01028A  6E09               	movwf	(btemp+8)^0,c
 18141  01028C  6A0A               	clrf	(btemp+9)^0,c
 18142  01028E  500B               	movf	(btemp+10)^0,w,c
 18143  010290  2609               	addwf	(btemp+8)^0,f,c
 18144  010292  500C               	movf	(btemp+11)^0,w,c
 18145  010294  220A               	addwfc	(btemp+9)^0,f,c
 18146  010296  500A               	movf	(btemp+9)^0,w,c
 18147  010298  E106               	bnz	u11640
 18148  01029A  0E1A               	movlw	26
 18149  01029C  5C09               	subwf	(btemp+8)^0,w,c
 18150  01029E  B0D8               	btfsc	status,0,c
 18151  0102A0  D002               	goto	u11640
 18152  0102A2  0E01               	movlw	1
 18153  0102A4  D001               	goto	u11650
 18154  0102A6                     u11640:
 18155  0102A6  0E00               	movlw	0
 18156  0102A8                     u11650:
 18157  0102A8  6E0B               	movwf	(btemp+10)^0,c
 18158  0102AA  6A0C               	clrf	(btemp+11)^0,c
 18159                           
 18160                           ;stkvar	_efgtoa$5862 @ sp[(-56)+6]
 18161  0102AC  0ECE               	movlw	-50
 18162  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18163  0102B4  0ECF               	movlw	-49
 18164  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18165                           
 18166                           ;stkvar	_efgtoa$5862 @ sp[(-56)+6]
 18167  0102BC  0ECE               	movlw	-50
 18168  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 18169  0102C4  0ECF               	movlw	-49
 18170  0102C6  50E3               	movf	plusw1,w,c
 18171  0102C8  1001               	iorwf	btemp^0,w,c
 18172  0102CA  B4D8               	btfsc	status,2,c
 18173  0102CC  D017               	goto	l12637
 18174                           
 18175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 18176  0102CE  0EDA               	movlw	low STR_83
 18177  0102D0  6EE6               	movwf	postinc1,c
 18178  0102D2  0EFF               	movlw	high STR_83
 18179  0102D4  6EE6               	movwf	postinc1,c
 18180                           
 18181                           ;stkvar	_n @ sp[(-58)+32]
 18182  0102D6  0E97               	movlw	low _dbuf
 18183  0102D8  6E0B               	movwf	(btemp+10)^0,c
 18184  0102DA  0E02               	movlw	high _dbuf
 18185  0102DC  6E0C               	movwf	(btemp+11)^0,c
 18186  0102DE  0EE6               	movlw	-26
 18187  0102E0  50E3               	movf	plusw1,w,c
 18188  0102E2  260B               	addwf	(btemp+10)^0,f,c
 18189  0102E4  0EE7               	movlw	-25
 18190  0102E6  50E3               	movf	plusw1,w,c
 18191  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 18192  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18193  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18194  0102F6  EC81  F0D4         	call	_strcpy	;wreg free
 18195                           
 18196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 18197  0102FA  D78D               	goto	l12621
 18198  0102FC                     l12637:
 18199                           
 18200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 18201  0102FC  0EE2               	movlw	low STR_84
 18202  0102FE  6EE6               	movwf	postinc1,c
 18203  010300  0EFF               	movlw	high STR_84
 18204  010302  6EE6               	movwf	postinc1,c
 18205                           
 18206                           ;stkvar	_n @ sp[(-58)+32]
 18207  010304  0E97               	movlw	low _dbuf
 18208  010306  6E0B               	movwf	(btemp+10)^0,c
 18209  010308  0E02               	movlw	high _dbuf
 18210  01030A  6E0C               	movwf	(btemp+11)^0,c
 18211  01030C  0EE6               	movlw	-26
 18212  01030E  50E3               	movf	plusw1,w,c
 18213  010310  260B               	addwf	(btemp+10)^0,f,c
 18214  010312  0EE7               	movlw	-25
 18215  010314  50E3               	movf	plusw1,w,c
 18216  010316  220C               	addwfc	(btemp+11)^0,f,c
 18217  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18218  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18219  010324  EC81  F0D4         	call	_strcpy	;wreg free
 18220  010328  D776               	goto	l12621
 18221  01032A                     l12645:
 18222                           
 18223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 18224  01032A  0E00               	movlw	0
 18225  01032C  6E09               	movwf	(btemp+8)^0,c
 18226  01032E  0E00               	movlw	0
 18227  010330  6E0A               	movwf	(btemp+9)^0,c
 18228  010332  0E80               	movlw	128
 18229  010334  6E0B               	movwf	(btemp+10)^0,c
 18230  010336  0E3F               	movlw	63
 18231  010338  6E0C               	movwf	(btemp+11)^0,c
 18232                           
 18233                           ;stkvar	_u @ sp[(-56)+12]
 18234  01033A  0ED4               	movlw	-44
 18235  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18236  010342  0ED5               	movlw	-43
 18237  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18238  01034A  0ED6               	movlw	-42
 18239  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18240  010352  0ED7               	movlw	-41
 18241  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 18242                           
 18243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 18244                           ;stkvar	_e @ sp[(-56)+34]
 18245  01035A  0EEA               	movlw	-22
 18246  01035C  6AE3               	clrf	plusw1,c
 18247  01035E  0EEB               	movlw	-21
 18248  010360  6AE3               	clrf	plusw1,c
 18249                           
 18250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 18251  010362  0E00               	movlw	0
 18252  010364  6EE6               	movwf	postinc1,c
 18253  010366  0E00               	movlw	0
 18254  010368  6EE6               	movwf	postinc1,c
 18255  01036A  0E00               	movlw	0
 18256  01036C  6EE6               	movwf	postinc1,c
 18257  01036E  0E00               	movlw	0
 18258  010370  6EE6               	movwf	postinc1,c
 18259                           
 18260                           ;stkvar	_g @ sp[(-60)+16]
 18261  010372  0ED4               	movlw	-44
 18262  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 18263  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 18264  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 18265  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 18266  01038C  ECB6  F0D5         	call	___fleq	;wreg free
 18267  010390  A001               	btfss	btemp& (0+255),0,c
 18268  010392  D039               	goto	l12657
 18269  010394  D0BC               	goto	u11690
 18270  010396                     l12653:
 18271                           
 18272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 18273  010396  0E00               	movlw	0
 18274  010398  6EE6               	movwf	postinc1,c
 18275  01039A  0E00               	movlw	0
 18276  01039C  6EE6               	movwf	postinc1,c
 18277  01039E  0E20               	movlw	32
 18278  0103A0  6EE6               	movwf	postinc1,c
 18279  0103A2  0E41               	movlw	65
 18280  0103A4  6EE6               	movwf	postinc1,c
 18281                           
 18282                           ;stkvar	_u @ sp[(-60)+12]
 18283  0103A6  0ED0               	movlw	-48
 18284  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18285  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18286  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18287  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 18288  0103C0  EC20  F09F         	call	___flmul	;wreg free
 18289                           
 18290                           ;stkvar	_u @ sp[(-56)+12]
 18291  0103C4  0ED4               	movlw	-44
 18292  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 18293  0103CC  0ED5               	movlw	-43
 18294  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18295  0103D4  0ED6               	movlw	-42
 18296  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18297  0103DC  0ED7               	movlw	-41
 18298  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18299                           
 18300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 18301                           ;stkvar	_e @ sp[(-56)+34]
 18302  0103E4  0EEA               	movlw	-22
 18303  0103E6  50E3               	movf	plusw1,w,c
 18304  0103E8  0F01               	addlw	1
 18305  0103EA  6E01               	movwf	btemp^0,c
 18306  0103EC  0EEA               	movlw	-22
 18307  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 18308  0103F4  6A01               	clrf	btemp^0,c
 18309  0103F6  0EEB               	movlw	-21
 18310  0103F8  50E3               	movf	plusw1,w,c
 18311  0103FA  2001               	addwfc	btemp^0,w,c
 18312  0103FC  6E01               	movwf	btemp^0,c
 18313  0103FE  0EEB               	movlw	-21
 18314  010400  0060  F007  FFE3   	movff	btemp,plusw1
 18315  010406                     l12657:
 18316                           
 18317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 18318  010406  0E00               	movlw	0
 18319  010408  6EE6               	movwf	postinc1,c
 18320  01040A  0E00               	movlw	0
 18321  01040C  6EE6               	movwf	postinc1,c
 18322  01040E  0E20               	movlw	32
 18323  010410  6EE6               	movwf	postinc1,c
 18324  010412  0E41               	movlw	65
 18325  010414  6EE6               	movwf	postinc1,c
 18326                           
 18327                           ;stkvar	_u @ sp[(-60)+12]
 18328  010416  0ED0               	movlw	-48
 18329  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 18330  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 18331  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 18332  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 18333  010430  EC20  F09F         	call	___flmul	;wreg free
 18334  010434  0060  F007  FFE6   	movff	btemp,postinc1
 18335  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18336  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18337  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 18338                           
 18339                           ;stkvar	_g @ sp[(-60)+16]
 18340  01044C  0ED4               	movlw	-44
 18341  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 18342  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 18343  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 18344  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 18345  010466  ECF0  F0CA         	call	___flge	;wreg free
 18346  01046A  A001               	btfss	btemp& (0+255),0,c
 18347  01046C  D032               	goto	l12663
 18348  01046E  D793               	goto	l12653
 18349  010470                     l12659:
 18350                           
 18351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 18352  010470  0E00               	movlw	0
 18353  010472  6EE6               	movwf	postinc1,c
 18354  010474  0E00               	movlw	0
 18355  010476  6EE6               	movwf	postinc1,c
 18356  010478  0E20               	movlw	32
 18357  01047A  6EE6               	movwf	postinc1,c
 18358  01047C  0E41               	movlw	65
 18359  01047E  6EE6               	movwf	postinc1,c
 18360                           
 18361                           ;stkvar	_u @ sp[(-60)+12]
 18362  010480  0ED0               	movlw	-48
 18363  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 18364  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 18365  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 18366  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 18367  01049A  EC13  F0A7         	call	___fldiv	;wreg free
 18368                           
 18369                           ;stkvar	_u @ sp[(-56)+12]
 18370  01049E  0ED4               	movlw	-44
 18371  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 18372  0104A6  0ED5               	movlw	-43
 18373  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18374  0104AE  0ED6               	movlw	-42
 18375  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18376  0104B6  0ED7               	movlw	-41
 18377  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18378                           
 18379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 18380                           ;stkvar	_e @ sp[(-56)+34]
 18381  0104BE  50E1               	movf	fsr1l,w,c
 18382  0104C0  0FEA               	addlw	-22
 18383  0104C2  6ED9               	movwf	fsr2l,c
 18384  0104C4  50E2               	movf	fsr1h,w,c
 18385  0104C6  6EDA               	movwf	fsr2h,c
 18386  0104C8  0EFF               	movlw	255
 18387  0104CA  22DA               	addwfc	fsr2h,f,c
 18388  0104CC  06DE               	decf	postinc2,f,c
 18389  0104CE  0E00               	movlw	0
 18390  0104D0  5ADD               	subwfb	postdec2,f,c
 18391  0104D2                     l12663:
 18392                           
 18393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 18394                           ;stkvar	_u @ sp[(-56)+12]
 18395  0104D2  0ED4               	movlw	-44
 18396  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18397  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18398  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18399  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18400                           
 18401                           ;stkvar	_g @ sp[(-60)+16]
 18402  0104EC  0ED4               	movlw	-44
 18403  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18404  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18405  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18406  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 18407  010506  ECF0  F0CA         	call	___flge	;wreg free
 18408  01050A  A001               	btfss	btemp& (0+255),0,c
 18409  01050C  D7B1               	goto	l12659
 18410  01050E                     u11690:
 18411                           
 18412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 18413                           ;stkvar	_c @ sp[(-56)+-7]
 18414  01050E  0EC1               	movlw	-63
 18415  010510  50E3               	movf	plusw1,w,c
 18416  010512  6EE6               	movwf	postinc1,c
 18417  010514  0E00               	movlw	0
 18418  010516  6EE6               	movwf	postinc1,c
 18419  010518  EC8A  F0DA         	call	_tolower	;wreg free
 18420                           
 18421                           ;stkvar	_mode @ sp[(-56)+54]
 18422  01051C  0EFE               	movlw	-2
 18423  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 18424                           
 18425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 18426                           ;stkvar	_mode @ sp[(-56)+54]
 18427                           ;stkvar	_nmode @ sp[(-56)+55]
 18428  010524  0EFE               	movlw	-2
 18429  010526  006F FF8C  F001    	movff	plusw1,btemp
 18430  01052C  0EFF               	movlw	-1
 18431  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 18432                           
 18433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 18434                           ;stkvar	_mode @ sp[(-56)+54]
 18435  010534  0EFE               	movlw	-2
 18436  010536  006F FF8C  F001    	movff	plusw1,btemp
 18437  01053C  0E67               	movlw	103
 18438  01053E  1801               	xorwf	btemp^0,w,c
 18439  010540  A4D8               	btfss	status,2,c
 18440  010542  D025               	goto	l12681
 18441                           
 18442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 18443  010544  503C               	movf	_prec^0,w,c
 18444  010546  103D               	iorwf	(_prec+1)^0,w,c
 18445  010548  A4D8               	btfss	status,2,c
 18446  01054A  D004               	goto	l12675
 18447                           
 18448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 18449  01054C  0E00               	movlw	0
 18450  01054E  6E3D               	movwf	(_prec+1)^0,c
 18451  010550  0E01               	movlw	1
 18452  010552  6E3C               	movwf	_prec^0,c
 18453  010554                     l12675:
 18454                           
 18455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 18456  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 18457  010556  D005               	goto	u11720
 18458  010558  503D               	movf	(_prec+1)^0,w,c
 18459  01055A  E110               	bnz	l12679
 18460  01055C  043C               	decf	_prec^0,w,c
 18461  01055E  B0D8               	btfsc	status,0,c
 18462  010560  D00D               	goto	l12679
 18463  010562                     u11720:
 18464  010562  0E06               	movlw	6
 18465  010564  6E0B               	movwf	(btemp+10)^0,c
 18466  010566  0E00               	movlw	0
 18467  010568  6E0C               	movwf	(btemp+11)^0,c
 18468                           
 18469                           ;stkvar	_p @ sp[(-56)+40]
 18470  01056A  0EF0               	movlw	-16
 18471  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18472  010572  0EF1               	movlw	-15
 18473  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 18474  01057A  D00C               	goto	l12687
 18475  01057C                     l12679:
 18476                           
 18477                           ;stkvar	_p @ sp[(-56)+40]
 18478  01057C  0EF0               	movlw	-16
 18479  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 18480  010584  0EF1               	movlw	-15
 18481  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18482  01058C  D003               	goto	l12687
 18483  01058E                     l12681:
 18484                           
 18485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 18486  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 18487  010590  D7F5               	goto	l12679
 18488  010592  D7E7               	goto	u11720
 18489  010594                     l12687:
 18490                           
 18491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 18492                           ;stkvar	_mode @ sp[(-56)+54]
 18493  010594  0EFE               	movlw	-2
 18494  010596  006F FF8C  F001    	movff	plusw1,btemp
 18495  01059C  0E67               	movlw	103
 18496  01059E  1801               	xorwf	btemp^0,w,c
 18497  0105A0  A4D8               	btfss	status,2,c
 18498  0105A2  D02F               	goto	l12697
 18499                           
 18500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 18501                           ;stkvar	_e @ sp[(-56)+34]
 18502  0105A4  0EEB               	movlw	-21
 18503  0105A6  AEE3               	btfss	plusw1,7,c
 18504  0105A8  D00E               	goto	u11750
 18505  0105AA  0EEA               	movlw	-22
 18506  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 18507  0105B2  0EFC               	movlw	252
 18508  0105B4  5E01               	subwf	btemp^0,f,c
 18509  0105B6  0EEB               	movlw	-21
 18510  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 18511  0105BE  0EFF               	movlw	255
 18512  0105C0  5A01               	subwfb	btemp^0,f,c
 18513  0105C2  A0D8               	btfss	status,0,c
 18514  0105C4  D018               	goto	l12695
 18515  0105C6                     u11750:
 18516                           
 18517                           ;stkvar	_e @ sp[(-56)+34]
 18518                           ;stkvar	_p @ sp[(-56)+40]
 18519  0105C6  0EF0               	movlw	-16
 18520  0105C8  50E3               	movf	plusw1,w,c
 18521  0105CA  0FFF               	addlw	255
 18522  0105CC  6E0B               	movwf	(btemp+10)^0,c
 18523  0105CE  0EF1               	movlw	-15
 18524  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18525  0105D6  0EFF               	movlw	255
 18526  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 18527  0105DA  0EEA               	movlw	-22
 18528  0105DC  50E3               	movf	plusw1,w,c
 18529  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 18530  0105E0  500C               	movf	(btemp+11)^0,w,c
 18531  0105E2  0A80               	xorlw	128
 18532  0105E4  6E01               	movwf	btemp^0,c
 18533  0105E6  0EEB               	movlw	-21
 18534  0105E8  50E3               	movf	plusw1,w,c
 18535  0105EA  0A80               	xorlw	128
 18536  0105EC  5801               	subwfb	btemp^0,w,c
 18537  0105EE  A0D8               	btfss	status,0,c
 18538  0105F0  D002               	goto	l12695
 18539                           
 18540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 18541  0105F2  0E66               	movlw	102
 18542  0105F4  D001               	goto	L20
 18543  0105F6                     l12695:
 18544                           
 18545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 18546  0105F6  0E65               	movlw	101
 18547  0105F8                     L20:
 18548  0105F8  6E0C               	movwf	(btemp+11)^0,c
 18549                           
 18550                           ;stkvar	_nmode @ sp[(-56)+55]
 18551  0105FA  0EFF               	movlw	-1
 18552  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18553  010602                     l12697:
 18554                           
 18555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 18556                           ;stkvar	_p @ sp[(-56)+40]
 18557                           ;stkvar	_m @ sp[(-56)+48]
 18558  010602  0EF0               	movlw	-16
 18559  010604  006F FF8C  F001    	movff	plusw1,btemp
 18560  01060A  0EF8               	movlw	-8
 18561  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 18562  010612  0EF1               	movlw	-15
 18563  010614  006F FF8C  F001    	movff	plusw1,btemp
 18564  01061A  0EF9               	movlw	-7
 18565  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 18566                           
 18567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 18568                           ;stkvar	_mode @ sp[(-56)+54]
 18569  010622  0EFE               	movlw	-2
 18570  010624  006F FF8C  F001    	movff	plusw1,btemp
 18571  01062A  0E67               	movlw	103
 18572  01062C  1801               	xorwf	btemp^0,w,c
 18573  01062E  A4D8               	btfss	status,2,c
 18574  010630  D00B               	goto	u11790
 18575                           
 18576                           ;stkvar	_nmode @ sp[(-56)+55]
 18577  010632  0EFF               	movlw	-1
 18578  010634  006F FF8C  F001    	movff	plusw1,btemp
 18579  01063A  0E66               	movlw	102
 18580  01063C  1801               	xorwf	btemp^0,w,c
 18581  01063E  A4D8               	btfss	status,2,c
 18582  010640  D014               	goto	l2346
 18583                           
 18584                           ;stkvar	_e @ sp[(-56)+34]
 18585  010642  0EEB               	movlw	-21
 18586  010644  AEE3               	btfss	plusw1,7,c
 18587  010646  D011               	goto	l2346
 18588  010648                     u11790:
 18589                           
 18590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 18591                           ;stkvar	_m @ sp[(-56)+48]
 18592  010648  0EF8               	movlw	-8
 18593  01064A  50E3               	movf	plusw1,w,c
 18594  01064C  0F01               	addlw	1
 18595  01064E  6E01               	movwf	btemp^0,c
 18596  010650  0EF8               	movlw	-8
 18597  010652  0060  F007  FFE3   	movff	btemp,plusw1
 18598  010658  6A01               	clrf	btemp^0,c
 18599  01065A  0EF9               	movlw	-7
 18600  01065C  50E3               	movf	plusw1,w,c
 18601  01065E  2001               	addwfc	btemp^0,w,c
 18602  010660  6E01               	movwf	btemp^0,c
 18603  010662  0EF9               	movlw	-7
 18604  010664  0060  F007  FFE3   	movff	btemp,plusw1
 18605  01066A                     l2346:
 18606                           
 18607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 18608                           ;stkvar	_nmode @ sp[(-56)+55]
 18609  01066A  0EFF               	movlw	-1
 18610  01066C  006F FF8C  F001    	movff	plusw1,btemp
 18611  010672  0E66               	movlw	102
 18612  010674  1801               	xorwf	btemp^0,w,c
 18613  010676  A4D8               	btfss	status,2,c
 18614  010678  D03B               	goto	l12717
 18615                           
 18616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 18617                           ;stkvar	_e @ sp[(-56)+34]
 18618  01067A  0EEB               	movlw	-21
 18619  01067C  AEE3               	btfss	plusw1,7,c
 18620  01067E  D01C               	goto	l12713
 18621                           
 18622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 18623  010680  0E00               	movlw	0
 18624  010682  6E09               	movwf	(btemp+8)^0,c
 18625  010684  0E00               	movlw	0
 18626  010686  6E0A               	movwf	(btemp+9)^0,c
 18627  010688  0E80               	movlw	128
 18628  01068A  6E0B               	movwf	(btemp+10)^0,c
 18629  01068C  0E3F               	movlw	63
 18630  01068E  6E0C               	movwf	(btemp+11)^0,c
 18631                           
 18632                           ;stkvar	_u @ sp[(-56)+12]
 18633  010690  0ED4               	movlw	-44
 18634  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 18635  010698  0ED5               	movlw	-43
 18636  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18637  0106A0  0ED6               	movlw	-42
 18638  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18639  0106A8  0ED7               	movlw	-41
 18640  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18641                           
 18642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 18643                           ;stkvar	_e @ sp[(-56)+34]
 18644  0106B0  0EEA               	movlw	-22
 18645  0106B2  6AE3               	clrf	plusw1,c
 18646  0106B4  0EEB               	movlw	-21
 18647  0106B6  6AE3               	clrf	plusw1,c
 18648  0106B8                     l12713:
 18649                           
 18650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 18651                           ;stkvar	_mode @ sp[(-56)+54]
 18652  0106B8  0EFE               	movlw	-2
 18653  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 18654  0106C0  0E67               	movlw	103
 18655  0106C2  1801               	xorwf	btemp^0,w,c
 18656  0106C4  B4D8               	btfsc	status,2,c
 18657  0106C6  D014               	goto	l12717
 18658                           
 18659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 18660                           ;stkvar	_e @ sp[(-56)+34]
 18661                           ;stkvar	_m @ sp[(-56)+48]
 18662  0106C8  0EF8               	movlw	-8
 18663  0106CA  50E3               	movf	plusw1,w,c
 18664  0106CC  6E01               	movwf	btemp^0,c
 18665  0106CE  0EEA               	movlw	-22
 18666  0106D0  50E3               	movf	plusw1,w,c
 18667  0106D2  2601               	addwf	btemp^0,f,c
 18668  0106D4  0EF8               	movlw	-8
 18669  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 18670  0106DC  0EF9               	movlw	-7
 18671  0106DE  50E3               	movf	plusw1,w,c
 18672  0106E0  6E01               	movwf	btemp^0,c
 18673  0106E2  0EEB               	movlw	-21
 18674  0106E4  50E3               	movf	plusw1,w,c
 18675  0106E6  2201               	addwfc	btemp^0,f,c
 18676  0106E8  0EF9               	movlw	-7
 18677  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 18678  0106F0                     l12717:
 18679                           
 18680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 18681                           ;stkvar	_i @ sp[(-56)+36]
 18682  0106F0  0EEC               	movlw	-20
 18683  0106F2  6AE3               	clrf	plusw1,c
 18684  0106F4  0EED               	movlw	-19
 18685  0106F6  6AE3               	clrf	plusw1,c
 18686                           
 18687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 18688                           ;stkvar	_g @ sp[(-56)+16]
 18689  0106F8  0ED8               	movlw	-40
 18690  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 18691  010700  0ED9               	movlw	-39
 18692  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 18693  010708  0EDA               	movlw	-38
 18694  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18695  010710  0EDB               	movlw	-37
 18696  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 18697                           
 18698                           ;stkvar	_h @ sp[(-56)+24]
 18699  010718  0EE0               	movlw	-32
 18700  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18701  010720  0EE1               	movlw	-31
 18702  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18703  010728  0EE2               	movlw	-30
 18704  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18705  010730  0EE3               	movlw	-29
 18706  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 18707                           
 18708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 18709                           ;stkvar	_u @ sp[(-56)+12]
 18710  010738  0ED4               	movlw	-44
 18711  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 18712  010740  0ED5               	movlw	-43
 18713  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 18714  010748  0ED6               	movlw	-42
 18715  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18716  010750  0ED7               	movlw	-41
 18717  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 18718                           
 18719                           ;stkvar	_ou @ sp[(-56)+28]
 18720  010758  0EE4               	movlw	-28
 18721  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18722  010760  0EE5               	movlw	-27
 18723  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18724  010768  0EE6               	movlw	-26
 18725  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18726  010770  0EE7               	movlw	-25
 18727  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 18728                           
 18729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18730  010778  D0D6               	goto	l12733
 18731  01077A                     l12723:
 18732                           
 18733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 18734                           ;stkvar	_u @ sp[(-56)+12]
 18735  01077A  0ED4               	movlw	-44
 18736  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 18737  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 18738  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 18739  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 18740                           
 18741                           ;stkvar	_h @ sp[(-60)+24]
 18742  010794  0EDC               	movlw	-36
 18743  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 18744  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 18745  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18746  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18747  0107AE  EC13  F0A7         	call	___fldiv	;wreg free
 18748  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 18749  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18750  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18751  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 18752  0107CA  EC28  F0B4         	call	_floorf	;wreg free
 18753                           
 18754                           ;stkvar	_l @ sp[(-56)+20]
 18755  0107CE  0EDC               	movlw	-36
 18756  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 18757  0107D6  0EDD               	movlw	-35
 18758  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18759  0107DE  0EDE               	movlw	-34
 18760  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18761  0107E6  0EDF               	movlw	-33
 18762  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18763                           
 18764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 18765                           ;stkvar	_l @ sp[(-56)+20]
 18766  0107EE  0EDC               	movlw	-36
 18767  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18768  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 18769  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 18770  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 18771  010808  EC37  F0CA         	call	___fltol	;wreg free
 18772  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 18773  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 18774                           
 18775                           ;stkvar	_d @ sp[(-56)+44]
 18776  010818  0EF4               	movlw	-12
 18777  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18778  010820  0EF5               	movlw	-11
 18779  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 18780                           
 18781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 18782                           ;stkvar	_u @ sp[(-56)+12]
 18783  010828  0ED4               	movlw	-44
 18784  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 18785  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 18786  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 18787  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 18788                           
 18789                           ;stkvar	_l @ sp[(-60)+20]
 18790  010842  0ED8               	movlw	-40
 18791  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 18792  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 18793  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 18794  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 18795  01085C  EC20  F09F         	call	___flmul	;wreg free
 18796  010860  0060  F007  FFE6   	movff	btemp,postinc1
 18797  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18798  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18799  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 18800                           
 18801                           ;stkvar	_h @ sp[(-60)+24]
 18802  010878  0EDC               	movlw	-36
 18803  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 18804  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 18805  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 18806  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 18807  010892  ECC4  F0DF         	call	___flsub	;wreg free
 18808                           
 18809                           ;stkvar	_h @ sp[(-56)+24]
 18810  010896  0EE0               	movlw	-32
 18811  010898  0060  F007  FFE3   	movff	btemp,plusw1
 18812  01089E  0EE1               	movlw	-31
 18813  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18814  0108A6  0EE2               	movlw	-30
 18815  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18816  0108AE  0EE3               	movlw	-29
 18817  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 18818                           
 18819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 18820  0108B6  0E00               	movlw	0
 18821  0108B8  6EE6               	movwf	postinc1,c
 18822  0108BA  0E00               	movlw	0
 18823  0108BC  6EE6               	movwf	postinc1,c
 18824  0108BE  0E20               	movlw	32
 18825  0108C0  6EE6               	movwf	postinc1,c
 18826  0108C2  0E41               	movlw	65
 18827  0108C4  6EE6               	movwf	postinc1,c
 18828                           
 18829                           ;stkvar	_u @ sp[(-60)+12]
 18830  0108C6  0ED0               	movlw	-48
 18831  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18832  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18833  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18834  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18835  0108E0  EC13  F0A7         	call	___fldiv	;wreg free
 18836                           
 18837                           ;stkvar	_u @ sp[(-56)+12]
 18838  0108E4  0ED4               	movlw	-44
 18839  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 18840  0108EC  0ED5               	movlw	-43
 18841  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18842  0108F4  0ED6               	movlw	-42
 18843  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18844  0108FC  0ED7               	movlw	-41
 18845  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18846                           
 18847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 18848                           ;stkvar	_i @ sp[(-56)+36]
 18849  010904  0EEC               	movlw	-20
 18850  010906  50E3               	movf	plusw1,w,c
 18851  010908  0F01               	addlw	1
 18852  01090A  6E01               	movwf	btemp^0,c
 18853  01090C  0EEC               	movlw	-20
 18854  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 18855  010914  6A01               	clrf	btemp^0,c
 18856  010916  0EED               	movlw	-19
 18857  010918  50E3               	movf	plusw1,w,c
 18858  01091A  2001               	addwfc	btemp^0,w,c
 18859  01091C  6E01               	movwf	btemp^0,c
 18860  01091E  0EED               	movlw	-19
 18861  010920  0060  F007  FFE3   	movff	btemp,plusw1
 18862  010926                     l12733:
 18863                           
 18864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18865                           ;stkvar	_m @ sp[(-56)+48]
 18866                           ;stkvar	_i @ sp[(-56)+36]
 18867  010926  50E1               	movf	fsr1l,w,c
 18868  010928  0FEC               	addlw	-20
 18869  01092A  6ED9               	movwf	fsr2l,c
 18870  01092C  50E2               	movf	fsr1h,w,c
 18871  01092E  6EDA               	movwf	fsr2h,c
 18872  010930  0EFF               	movlw	255
 18873  010932  22DA               	addwfc	fsr2h,f,c
 18874  010934  0EF8               	movlw	-8
 18875  010936  50E3               	movf	plusw1,w,c
 18876  010938  5CDE               	subwf	postinc2,w,c
 18877  01093A  50DE               	movf	postinc2,w,c
 18878  01093C  0A80               	xorlw	128
 18879  01093E  6E01               	movwf	btemp^0,c
 18880  010940  0EF9               	movlw	-7
 18881  010942  50E3               	movf	plusw1,w,c
 18882  010944  0A80               	xorlw	128
 18883  010946  5801               	subwfb	btemp^0,w,c
 18884  010948  A0D8               	btfss	status,0,c
 18885  01094A  D717               	goto	l12723
 18886                           
 18887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 18888  01094C  0E00               	movlw	0
 18889  01094E  6EE6               	movwf	postinc1,c
 18890  010950  0E00               	movlw	0
 18891  010952  6EE6               	movwf	postinc1,c
 18892  010954  0EA0               	movlw	160
 18893  010956  6EE6               	movwf	postinc1,c
 18894  010958  0E40               	movlw	64
 18895  01095A  6EE6               	movwf	postinc1,c
 18896                           
 18897                           ;stkvar	_u @ sp[(-60)+12]
 18898  01095C  0ED0               	movlw	-48
 18899  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 18900  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 18901  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 18902  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 18903  010976  EC20  F09F         	call	___flmul	;wreg free
 18904                           
 18905                           ;stkvar	_l @ sp[(-56)+20]
 18906  01097A  0EDC               	movlw	-36
 18907  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 18908  010982  0EDD               	movlw	-35
 18909  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18910  01098A  0EDE               	movlw	-34
 18911  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18912  010992  0EDF               	movlw	-33
 18913  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 18914                           
 18915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 18916                           ;stkvar	_l @ sp[(-56)+20]
 18917  01099A  0EDC               	movlw	-36
 18918  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 18919  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18920  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18921  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18922                           
 18923                           ;stkvar	_h @ sp[(-60)+24]
 18924  0109B4  0EDC               	movlw	-36
 18925  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18926  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18927  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18928  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18929  0109CE  ECF0  F0CA         	call	___flge	;wreg free
 18930  0109D2  A001               	btfss	btemp& (0+255),0,c
 18931  0109D4  D021               	goto	u11860
 18932                           
 18933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 18934                           ;stkvar	_l @ sp[(-56)+20]
 18935                           
 18936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 18937                           
 18938                           ;stkvar	_l @ sp[(-56)+20]
 18939                           
 18940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 18941  0109D6  0EDC               	movlw	-36
 18942  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18943  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18944  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18945  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18946                           
 18947                           ;stkvar	_h @ sp[(-60)+24]
 18948  0109F0  0EDC               	movlw	-36
 18949  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 18950  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 18951  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 18952  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 18953  010A0A  ECB6  F0D5         	call	___fleq	;wreg free
 18954  010A0E  A001               	btfss	btemp& (0+255),0,c
 18955  010A10  D01B               	goto	l12747
 18956                           
 18957                           ;stkvar	_d @ sp[(-56)+44]
 18958  010A12  0EF4               	movlw	-12
 18959  010A14  B0E3               	btfsc	plusw1,0,c
 18960  010A16  D018               	goto	l12747
 18961  010A18                     u11860:
 18962                           
 18963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 18964  010A18  0E00               	movlw	0
 18965  010A1A  6E09               	movwf	(btemp+8)^0,c
 18966  010A1C  0E00               	movlw	0
 18967  010A1E  6E0A               	movwf	(btemp+9)^0,c
 18968  010A20  0E00               	movlw	0
 18969  010A22  6E0B               	movwf	(btemp+10)^0,c
 18970  010A24  0E00               	movlw	0
 18971  010A26  6E0C               	movwf	(btemp+11)^0,c
 18972                           
 18973                           ;stkvar	_l @ sp[(-56)+20]
 18974  010A28  0EDC               	movlw	-36
 18975  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18976  010A30  0EDD               	movlw	-35
 18977  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18978  010A38  0EDE               	movlw	-34
 18979  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18980  010A40  0EDF               	movlw	-33
 18981  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 18982  010A48                     l12747:
 18983                           
 18984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 18985                           ;stkvar	_l @ sp[(-56)+20]
 18986  010A48  0EDC               	movlw	-36
 18987  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 18988  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 18989  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 18990  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18991                           
 18992                           ;stkvar	_g @ sp[(-60)+16]
 18993  010A62  0ED4               	movlw	-44
 18994  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 18995  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 18996  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 18997  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 18998  010A7C  EC35  F0A3         	call	___fladd	;wreg free
 18999                           
 19000                           ;stkvar	_h @ sp[(-56)+24]
 19001  010A80  0EE0               	movlw	-32
 19002  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 19003  010A88  0EE1               	movlw	-31
 19004  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19005  010A90  0EE2               	movlw	-30
 19006  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19007  010A98  0EE3               	movlw	-29
 19008  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 19009                           
 19010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 19011                           ;stkvar	_ou @ sp[(-56)+28]
 19012  010AA0  0EE4               	movlw	-28
 19013  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 19014  010AA8  0EE5               	movlw	-27
 19015  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 19016  010AB0  0EE6               	movlw	-26
 19017  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19018  010AB8  0EE7               	movlw	-25
 19019  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19020                           
 19021                           ;stkvar	_u @ sp[(-56)+12]
 19022  010AC0  0ED4               	movlw	-44
 19023  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 19024  010AC8  0ED5               	movlw	-43
 19025  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19026  010AD0  0ED6               	movlw	-42
 19027  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19028  010AD8  0ED7               	movlw	-41
 19029  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 19030                           
 19031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 19032                           ;stkvar	_nmode @ sp[(-56)+55]
 19033  010AE0  0EFF               	movlw	-1
 19034  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 19035  010AE8  0E65               	movlw	101
 19036  010AEA  1801               	xorwf	btemp^0,w,c
 19037  010AEC  B4D8               	btfsc	status,2,c
 19038  010AEE  D011               	goto	l12755
 19039                           
 19040                           ;stkvar	_e @ sp[(-56)+34]
 19041                           ;stkvar	_ne @ sp[(-56)+46]
 19042  010AF0  0EEA               	movlw	-22
 19043  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 19044  010AF8  0EF6               	movlw	-10
 19045  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 19046  010B00  0EEB               	movlw	-21
 19047  010B02  006F FF8C  F001    	movff	plusw1,btemp
 19048  010B08  0EF7               	movlw	-9
 19049  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 19050  010B10  D004               	goto	l2361
 19051  010B12                     l12755:
 19052                           
 19053                           ;stkvar	_ne @ sp[(-56)+46]
 19054  010B12  0EF6               	movlw	-10
 19055  010B14  6AE3               	clrf	plusw1,c
 19056  010B16  0EF7               	movlw	-9
 19057  010B18  6AE3               	clrf	plusw1,c
 19058  010B1A                     l2361:
 19059                           
 19060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 19061                           ;stkvar	_pp @ sp[(-56)+50]
 19062  010B1A  0EFA               	movlw	-6
 19063  010B1C  6AE3               	clrf	plusw1,c
 19064  010B1E  0EFB               	movlw	-5
 19065  010B20  6AE3               	clrf	plusw1,c
 19066                           
 19067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 19068                           ;stkvar	_t @ sp[(-56)+52]
 19069  010B22  0EFC               	movlw	-4
 19070  010B24  6AE3               	clrf	plusw1,c
 19071  010B26  0EFD               	movlw	-3
 19072  010B28  6AE3               	clrf	plusw1,c
 19073                           
 19074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 19075                           ;stkvar	_i @ sp[(-56)+36]
 19076  010B2A  0EEC               	movlw	-20
 19077  010B2C  6AE3               	clrf	plusw1,c
 19078  010B2E  0EED               	movlw	-19
 19079  010B30  6AE3               	clrf	plusw1,c
 19080                           
 19081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19082  010B32  D1B7               	goto	l12807
 19083  010B34                     l12757:
 19084                           
 19085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 19086                           ;stkvar	_u @ sp[(-56)+12]
 19087  010B34  0ED4               	movlw	-44
 19088  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 19089  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 19090  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 19091  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 19092                           
 19093                           ;stkvar	_h @ sp[(-60)+24]
 19094  010B4E  0EDC               	movlw	-36
 19095  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 19096  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 19097  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 19098  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 19099  010B68  EC13  F0A7         	call	___fldiv	;wreg free
 19100  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 19101  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19102  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19103  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 19104  010B84  EC28  F0B4         	call	_floorf	;wreg free
 19105                           
 19106                           ;stkvar	_l @ sp[(-56)+20]
 19107  010B88  0EDC               	movlw	-36
 19108  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 19109  010B90  0EDD               	movlw	-35
 19110  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19111  010B98  0EDE               	movlw	-34
 19112  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19113  010BA0  0EDF               	movlw	-33
 19114  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 19115                           
 19116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 19117                           ;stkvar	_l @ sp[(-56)+20]
 19118  010BA8  0EDC               	movlw	-36
 19119  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 19120  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 19121  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 19122  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 19123  010BC2  EC37  F0CA         	call	___fltol	;wreg free
 19124  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 19125  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 19126                           
 19127                           ;stkvar	_d @ sp[(-56)+44]
 19128  010BD2  0EF4               	movlw	-12
 19129  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19130  010BDA  0EF5               	movlw	-11
 19131  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19132                           
 19133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 19134  010BE2  B83E               	btfsc	_flags^0,4,c
 19135  010BE4  D026               	goto	l12771
 19136                           
 19137                           ;stkvar	_d @ sp[(-56)+44]
 19138  010BE6  0EF4               	movlw	-12
 19139  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 19140  010BEE  0EF5               	movlw	-11
 19141  010BF0  50E3               	movf	plusw1,w,c
 19142  010BF2  1001               	iorwf	btemp^0,w,c
 19143  010BF4  A4D8               	btfss	status,2,c
 19144  010BF6  D01D               	goto	l12771
 19145                           
 19146                           ;stkvar	_mode @ sp[(-56)+54]
 19147  010BF8  0EFE               	movlw	-2
 19148  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 19149  010C00  0E67               	movlw	103
 19150  010C02  1801               	xorwf	btemp^0,w,c
 19151  010C04  A4D8               	btfss	status,2,c
 19152  010C06  D015               	goto	l12771
 19153                           
 19154                           ;stkvar	_ne @ sp[(-56)+46]
 19155  010C08  0EF7               	movlw	-9
 19156  010C0A  AEE3               	btfss	plusw1,7,c
 19157  010C0C  D012               	goto	l12771
 19158                           
 19159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 19160                           ;stkvar	_t @ sp[(-56)+52]
 19161  010C0E  0EFC               	movlw	-4
 19162  010C10  50E3               	movf	plusw1,w,c
 19163  010C12  0F01               	addlw	1
 19164  010C14  6E01               	movwf	btemp^0,c
 19165  010C16  0EFC               	movlw	-4
 19166  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 19167  010C1E  6A01               	clrf	btemp^0,c
 19168  010C20  0EFD               	movlw	-3
 19169  010C22  50E3               	movf	plusw1,w,c
 19170  010C24  2001               	addwfc	btemp^0,w,c
 19171  010C26  6E01               	movwf	btemp^0,c
 19172  010C28  0EFD               	movlw	-3
 19173  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 19174                           
 19175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 19176  010C30  D0AF               	goto	l12799
 19177  010C32                     l12771:
 19178                           
 19179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 19180                           ;stkvar	_pp @ sp[(-56)+50]
 19181  010C32  0EFA               	movlw	-6
 19182  010C34  006F FF8C  F001    	movff	plusw1,btemp
 19183  010C3A  0EFB               	movlw	-5
 19184  010C3C  50E3               	movf	plusw1,w,c
 19185  010C3E  1001               	iorwf	btemp^0,w,c
 19186  010C40  A4D8               	btfss	status,2,c
 19187  010C42  D070               	goto	l12791
 19188                           
 19189                           ;stkvar	_ne @ sp[(-56)+46]
 19190  010C44  0EF7               	movlw	-9
 19191  010C46  AEE3               	btfss	plusw1,7,c
 19192  010C48  D06D               	goto	l12791
 19193                           
 19194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 19195                           ;stkvar	_n @ sp[(-56)+32]
 19196  010C4A  0EE8               	movlw	-24
 19197  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19198  010C52  0EE9               	movlw	-23
 19199  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 19200  010C5A  0E97               	movlw	low _dbuf
 19201  010C5C  240B               	addwf	(btemp+10)^0,w,c
 19202  010C5E  6ED9               	movwf	fsr2l,c
 19203  010C60  0E02               	movlw	high _dbuf
 19204  010C62  200C               	addwfc	(btemp+11)^0,w,c
 19205  010C64  6EDA               	movwf	fsr2h,c
 19206  010C66  0E2E               	movlw	46
 19207  010C68  6EDF               	movwf	indf2,c
 19208                           
 19209                           ;stkvar	_n @ sp[(-56)+32]
 19210  010C6A  0EE8               	movlw	-24
 19211  010C6C  50E3               	movf	plusw1,w,c
 19212  010C6E  0F01               	addlw	1
 19213  010C70  6E01               	movwf	btemp^0,c
 19214  010C72  0EE8               	movlw	-24
 19215  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 19216  010C7A  6A01               	clrf	btemp^0,c
 19217  010C7C  0EE9               	movlw	-23
 19218  010C7E  50E3               	movf	plusw1,w,c
 19219  010C80  2001               	addwfc	btemp^0,w,c
 19220  010C82  6E01               	movwf	btemp^0,c
 19221  010C84  0EE9               	movlw	-23
 19222  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 19223                           
 19224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 19225                           ;stkvar	_w @ sp[(-56)+38]
 19226  010C8C  50E1               	movf	fsr1l,w,c
 19227  010C8E  0FEE               	addlw	-18
 19228  010C90  6ED9               	movwf	fsr2l,c
 19229  010C92  50E2               	movf	fsr1h,w,c
 19230  010C94  6EDA               	movwf	fsr2h,c
 19231  010C96  0EFF               	movlw	255
 19232  010C98  22DA               	addwfc	fsr2h,f,c
 19233  010C9A  06DE               	decf	postinc2,f,c
 19234  010C9C  0E00               	movlw	0
 19235  010C9E  5ADD               	subwfb	postdec2,f,c
 19236                           
 19237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 19238  010CA0  0E01               	movlw	1
 19239  010CA2  6E0B               	movwf	(btemp+10)^0,c
 19240  010CA4  0E00               	movlw	0
 19241  010CA6  6E0C               	movwf	(btemp+11)^0,c
 19242                           
 19243                           ;stkvar	_pp @ sp[(-56)+50]
 19244  010CA8  0EFA               	movlw	-6
 19245  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19246  010CB0  0EFB               	movlw	-5
 19247  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19248  010CB8  D035               	goto	l12791
 19249  010CBA                     l12783:
 19250                           
 19251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 19252                           ;stkvar	_n @ sp[(-56)+32]
 19253  010CBA  0EE8               	movlw	-24
 19254  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19255  010CC2  0EE9               	movlw	-23
 19256  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19257  010CCA  0E97               	movlw	low _dbuf
 19258  010CCC  240B               	addwf	(btemp+10)^0,w,c
 19259  010CCE  6ED9               	movwf	fsr2l,c
 19260  010CD0  0E02               	movlw	high _dbuf
 19261  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 19262  010CD4  6EDA               	movwf	fsr2h,c
 19263  010CD6  0E30               	movlw	48
 19264  010CD8  6EDF               	movwf	indf2,c
 19265                           
 19266                           ;stkvar	_n @ sp[(-56)+32]
 19267  010CDA  0EE8               	movlw	-24
 19268  010CDC  50E3               	movf	plusw1,w,c
 19269  010CDE  0F01               	addlw	1
 19270  010CE0  6E01               	movwf	btemp^0,c
 19271  010CE2  0EE8               	movlw	-24
 19272  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 19273  010CEA  6A01               	clrf	btemp^0,c
 19274  010CEC  0EE9               	movlw	-23
 19275  010CEE  50E3               	movf	plusw1,w,c
 19276  010CF0  2001               	addwfc	btemp^0,w,c
 19277  010CF2  6E01               	movwf	btemp^0,c
 19278  010CF4  0EE9               	movlw	-23
 19279  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 19280                           
 19281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 19282                           ;stkvar	_w @ sp[(-56)+38]
 19283  010CFC  50E1               	movf	fsr1l,w,c
 19284  010CFE  0FEE               	addlw	-18
 19285  010D00  6ED9               	movwf	fsr2l,c
 19286  010D02  50E2               	movf	fsr1h,w,c
 19287  010D04  6EDA               	movwf	fsr2h,c
 19288  010D06  0EFF               	movlw	255
 19289  010D08  22DA               	addwfc	fsr2h,f,c
 19290  010D0A  06DE               	decf	postinc2,f,c
 19291  010D0C  0E00               	movlw	0
 19292  010D0E  5ADD               	subwfb	postdec2,f,c
 19293                           
 19294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 19295                           ;stkvar	_t @ sp[(-56)+52]
 19296  010D10  50E1               	movf	fsr1l,w,c
 19297  010D12  0FFC               	addlw	-4
 19298  010D14  6ED9               	movwf	fsr2l,c
 19299  010D16  50E2               	movf	fsr1h,w,c
 19300  010D18  6EDA               	movwf	fsr2h,c
 19301  010D1A  0EFF               	movlw	255
 19302  010D1C  22DA               	addwfc	fsr2h,f,c
 19303  010D1E  06DE               	decf	postinc2,f,c
 19304  010D20  0E00               	movlw	0
 19305  010D22  5ADD               	subwfb	postdec2,f,c
 19306  010D24                     l12791:
 19307                           
 19308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 19309                           ;stkvar	_t @ sp[(-56)+52]
 19310  010D24  0EFC               	movlw	-4
 19311  010D26  006F FF8C  F001    	movff	plusw1,btemp
 19312  010D2C  0EFD               	movlw	-3
 19313  010D2E  50E3               	movf	plusw1,w,c
 19314  010D30  1001               	iorwf	btemp^0,w,c
 19315  010D32  A4D8               	btfss	status,2,c
 19316  010D34  D7C2               	goto	l12783
 19317                           
 19318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 19319                           ;stkvar	_n @ sp[(-56)+32]
 19320  010D36  0EE8               	movlw	-24
 19321  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 19322  010D3E  0EE9               	movlw	-23
 19323  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 19324  010D46  0E97               	movlw	low _dbuf
 19325  010D48  240B               	addwf	(btemp+10)^0,w,c
 19326  010D4A  6ED9               	movwf	fsr2l,c
 19327  010D4C  0E02               	movlw	high _dbuf
 19328  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 19329  010D50  6EDA               	movwf	fsr2h,c
 19330                           
 19331                           ;stkvar	_d @ sp[(-56)+44]
 19332  010D52  0EF4               	movlw	-12
 19333  010D54  50E3               	movf	plusw1,w,c
 19334  010D56  0F30               	addlw	48
 19335  010D58  6EDF               	movwf	indf2,c
 19336                           
 19337                           ;stkvar	_n @ sp[(-56)+32]
 19338  010D5A  0EE8               	movlw	-24
 19339  010D5C  50E3               	movf	plusw1,w,c
 19340  010D5E  0F01               	addlw	1
 19341  010D60  6E01               	movwf	btemp^0,c
 19342  010D62  0EE8               	movlw	-24
 19343  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 19344  010D6A  6A01               	clrf	btemp^0,c
 19345  010D6C  0EE9               	movlw	-23
 19346  010D6E  50E3               	movf	plusw1,w,c
 19347  010D70  2001               	addwfc	btemp^0,w,c
 19348  010D72  6E01               	movwf	btemp^0,c
 19349  010D74  0EE9               	movlw	-23
 19350  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 19351                           
 19352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 19353                           ;stkvar	_w @ sp[(-56)+38]
 19354  010D7C  50E1               	movf	fsr1l,w,c
 19355  010D7E  0FEE               	addlw	-18
 19356  010D80  6ED9               	movwf	fsr2l,c
 19357  010D82  50E2               	movf	fsr1h,w,c
 19358  010D84  6EDA               	movwf	fsr2h,c
 19359  010D86  0EFF               	movlw	255
 19360  010D88  22DA               	addwfc	fsr2h,f,c
 19361  010D8A  06DE               	decf	postinc2,f,c
 19362  010D8C  0E00               	movlw	0
 19363  010D8E  5ADD               	subwfb	postdec2,f,c
 19364  010D90                     l12799:
 19365                           
 19366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 19367                           ;stkvar	_u @ sp[(-56)+12]
 19368  010D90  0ED4               	movlw	-44
 19369  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 19370  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 19371  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 19372  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 19373                           
 19374                           ;stkvar	_l @ sp[(-60)+20]
 19375  010DAA  0ED8               	movlw	-40
 19376  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 19377  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 19378  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 19379  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 19380  010DC4  EC20  F09F         	call	___flmul	;wreg free
 19381  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 19382  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19383  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19384  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 19385                           
 19386                           ;stkvar	_h @ sp[(-60)+24]
 19387  010DE0  0EDC               	movlw	-36
 19388  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19389  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19390  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19391  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19392  010DFA  ECC4  F0DF         	call	___flsub	;wreg free
 19393                           
 19394                           ;stkvar	_h @ sp[(-56)+24]
 19395  010DFE  0EE0               	movlw	-32
 19396  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 19397  010E06  0EE1               	movlw	-31
 19398  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19399  010E0E  0EE2               	movlw	-30
 19400  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19401  010E16  0EE3               	movlw	-29
 19402  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 19403                           
 19404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 19405  010E1E  0E00               	movlw	0
 19406  010E20  6EE6               	movwf	postinc1,c
 19407  010E22  0E00               	movlw	0
 19408  010E24  6EE6               	movwf	postinc1,c
 19409  010E26  0E20               	movlw	32
 19410  010E28  6EE6               	movwf	postinc1,c
 19411  010E2A  0E41               	movlw	65
 19412  010E2C  6EE6               	movwf	postinc1,c
 19413                           
 19414                           ;stkvar	_u @ sp[(-60)+12]
 19415  010E2E  0ED0               	movlw	-48
 19416  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 19417  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 19418  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 19419  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 19420  010E48  EC13  F0A7         	call	___fldiv	;wreg free
 19421                           
 19422                           ;stkvar	_u @ sp[(-56)+12]
 19423  010E4C  0ED4               	movlw	-44
 19424  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 19425  010E54  0ED5               	movlw	-43
 19426  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19427  010E5C  0ED6               	movlw	-42
 19428  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19429  010E64  0ED7               	movlw	-41
 19430  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 19431                           
 19432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 19433                           ;stkvar	_ne @ sp[(-56)+46]
 19434  010E6C  50E1               	movf	fsr1l,w,c
 19435  010E6E  0FF6               	addlw	-10
 19436  010E70  6ED9               	movwf	fsr2l,c
 19437  010E72  50E2               	movf	fsr1h,w,c
 19438  010E74  6EDA               	movwf	fsr2h,c
 19439  010E76  0EFF               	movlw	255
 19440  010E78  22DA               	addwfc	fsr2h,f,c
 19441  010E7A  06DE               	decf	postinc2,f,c
 19442  010E7C  0E00               	movlw	0
 19443  010E7E  5ADD               	subwfb	postdec2,f,c
 19444                           
 19445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 19446                           ;stkvar	_i @ sp[(-56)+36]
 19447  010E80  0EEC               	movlw	-20
 19448  010E82  50E3               	movf	plusw1,w,c
 19449  010E84  0F01               	addlw	1
 19450  010E86  6E01               	movwf	btemp^0,c
 19451  010E88  0EEC               	movlw	-20
 19452  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 19453  010E90  6A01               	clrf	btemp^0,c
 19454  010E92  0EED               	movlw	-19
 19455  010E94  50E3               	movf	plusw1,w,c
 19456  010E96  2001               	addwfc	btemp^0,w,c
 19457  010E98  6E01               	movwf	btemp^0,c
 19458  010E9A  0EED               	movlw	-19
 19459  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 19460  010EA2                     l12807:
 19461                           
 19462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19463                           ;stkvar	_m @ sp[(-56)+48]
 19464                           ;stkvar	_i @ sp[(-56)+36]
 19465  010EA2  50E1               	movf	fsr1l,w,c
 19466  010EA4  0FEC               	addlw	-20
 19467  010EA6  6ED9               	movwf	fsr2l,c
 19468  010EA8  50E2               	movf	fsr1h,w,c
 19469  010EAA  6EDA               	movwf	fsr2h,c
 19470  010EAC  0EFF               	movlw	255
 19471  010EAE  22DA               	addwfc	fsr2h,f,c
 19472  010EB0  0EF8               	movlw	-8
 19473  010EB2  50E3               	movf	plusw1,w,c
 19474  010EB4  5CDE               	subwf	postinc2,w,c
 19475  010EB6  50DE               	movf	postinc2,w,c
 19476  010EB8  0A80               	xorlw	128
 19477  010EBA  6E01               	movwf	btemp^0,c
 19478  010EBC  0EF9               	movlw	-7
 19479  010EBE  50E3               	movf	plusw1,w,c
 19480  010EC0  0A80               	xorlw	128
 19481  010EC2  5801               	subwfb	btemp^0,w,c
 19482  010EC4  B0D8               	btfsc	status,0,c
 19483  010EC6  D00E               	goto	u11960
 19484                           
 19485                           ;stkvar	_n @ sp[(-56)+32]
 19486  010EC8  0EE9               	movlw	-23
 19487  010ECA  BEE3               	btfsc	plusw1,7,c
 19488  010ECC  D633               	goto	l12757
 19489  010ECE  0EE9               	movlw	-23
 19490  010ED0  50E3               	movf	plusw1,w,c
 19491  010ED2  E108               	bnz	u11960
 19492  010ED4  0EE8               	movlw	-24
 19493  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 19494  010EDC  0E4B               	movlw	75
 19495  010EDE  5E01               	subwf	btemp^0,f,c
 19496  010EE0  A0D8               	btfss	status,0,c
 19497  010EE2  D628               	goto	l12757
 19498  010EE4                     u11960:
 19499                           
 19500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 19501                           ;stkvar	_pp @ sp[(-56)+50]
 19502  010EE4  0EFA               	movlw	-6
 19503  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 19504  010EEC  0EFB               	movlw	-5
 19505  010EEE  50E3               	movf	plusw1,w,c
 19506  010EF0  1001               	iorwf	btemp^0,w,c
 19507  010EF2  B4D8               	btfsc	status,2,c
 19508  010EF4  A83E               	btfss	_flags^0,4,c
 19509  010EF6  D021               	goto	l12819
 19510                           
 19511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 19512                           ;stkvar	_n @ sp[(-56)+32]
 19513  010EF8  0EE8               	movlw	-24
 19514  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19515  010F00  0EE9               	movlw	-23
 19516  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 19517  010F08  0E97               	movlw	low _dbuf
 19518  010F0A  240B               	addwf	(btemp+10)^0,w,c
 19519  010F0C  6ED9               	movwf	fsr2l,c
 19520  010F0E  0E02               	movlw	high _dbuf
 19521  010F10  200C               	addwfc	(btemp+11)^0,w,c
 19522  010F12  6EDA               	movwf	fsr2h,c
 19523  010F14  0E2E               	movlw	46
 19524  010F16  6EDF               	movwf	indf2,c
 19525                           
 19526                           ;stkvar	_n @ sp[(-56)+32]
 19527  010F18  0EE8               	movlw	-24
 19528  010F1A  50E3               	movf	plusw1,w,c
 19529  010F1C  0F01               	addlw	1
 19530  010F1E  6E01               	movwf	btemp^0,c
 19531  010F20  0EE8               	movlw	-24
 19532  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 19533  010F28  6A01               	clrf	btemp^0,c
 19534  010F2A  0EE9               	movlw	-23
 19535  010F2C  50E3               	movf	plusw1,w,c
 19536  010F2E  2001               	addwfc	btemp^0,w,c
 19537  010F30  6E01               	movwf	btemp^0,c
 19538  010F32  0EE9               	movlw	-23
 19539  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 19540  010F3A                     l12819:
 19541                           
 19542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 19543                           ;stkvar	_n @ sp[(-56)+32]
 19544  010F3A  0EE8               	movlw	-24
 19545  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19546  010F42  0EE9               	movlw	-23
 19547  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 19548  010F4A  0E97               	movlw	low _dbuf
 19549  010F4C  240B               	addwf	(btemp+10)^0,w,c
 19550  010F4E  6ED9               	movwf	fsr2l,c
 19551  010F50  0E02               	movlw	high _dbuf
 19552  010F52  200C               	addwfc	(btemp+11)^0,w,c
 19553  010F54  6EDA               	movwf	fsr2h,c
 19554  010F56  0E00               	movlw	0
 19555  010F58  6EDF               	movwf	indf2,c
 19556                           
 19557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 19558                           ;stkvar	_nmode @ sp[(-56)+55]
 19559  010F5A  0EFF               	movlw	-1
 19560  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 19561  010F62  0E65               	movlw	101
 19562  010F64  1801               	xorwf	btemp^0,w,c
 19563  010F66  A4D8               	btfss	status,2,c
 19564  010F68  EF16  F081         	goto	l12623
 19565                           
 19566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 19567  010F6C  0E4F               	movlw	79
 19568  010F6E  6E0B               	movwf	(btemp+10)^0,c
 19569  010F70  0E00               	movlw	0
 19570  010F72  6E0C               	movwf	(btemp+11)^0,c
 19571                           
 19572                           ;stkvar	_i @ sp[(-56)+36]
 19573  010F74  0EEC               	movlw	-20
 19574  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19575  010F7C  0EED               	movlw	-19
 19576  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19577                           
 19578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 19579                           ;stkvar	_i @ sp[(-56)+36]
 19580  010F84  0EEC               	movlw	-20
 19581  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 19582  010F8C  0EED               	movlw	-19
 19583  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19584  010F94  0E97               	movlw	low _dbuf
 19585  010F96  240B               	addwf	(btemp+10)^0,w,c
 19586  010F98  6ED9               	movwf	fsr2l,c
 19587  010F9A  0E02               	movlw	high _dbuf
 19588  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 19589  010F9E  6EDA               	movwf	fsr2h,c
 19590  010FA0  0E00               	movlw	0
 19591  010FA2  6EDF               	movwf	indf2,c
 19592                           
 19593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 19594                           ;stkvar	_sign @ sp[(-56)+42]
 19595  010FA4  0EF2               	movlw	-14
 19596  010FA6  6AE3               	clrf	plusw1,c
 19597  010FA8  0EF3               	movlw	-13
 19598  010FAA  6AE3               	clrf	plusw1,c
 19599                           
 19600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 19601                           ;stkvar	_e @ sp[(-56)+34]
 19602  010FAC  0EEB               	movlw	-21
 19603  010FAE  AEE3               	btfss	plusw1,7,c
 19604  010FB0  D012               	goto	l12833
 19605                           
 19606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 19607  010FB2  0E01               	movlw	1
 19608  010FB4  6E0B               	movwf	(btemp+10)^0,c
 19609  010FB6  0E00               	movlw	0
 19610  010FB8  6E0C               	movwf	(btemp+11)^0,c
 19611                           
 19612                           ;stkvar	_sign @ sp[(-56)+42]
 19613  010FBA  0EF2               	movlw	-14
 19614  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19615  010FC2  0EF3               	movlw	-13
 19616  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19617                           
 19618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 19619                           ;stkvar	_e @ sp[(-56)+34]
 19620                           ;stkvar	_e @ sp[(-56)+34]
 19621  010FCA  0EEA               	movlw	-22
 19622  010FCC  6CE3               	negf	plusw1,c
 19623  010FCE  0EEB               	movlw	-21
 19624  010FD0  1EE3               	comf	plusw1,f,c
 19625  010FD2  B0D8               	btfsc	status,0,c
 19626  010FD4  2AE3               	incf	plusw1,f,c
 19627  010FD6                     l12833:
 19628                           
 19629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 19630  010FD6  0E02               	movlw	2
 19631  010FD8  6E0B               	movwf	(btemp+10)^0,c
 19632  010FDA  0E00               	movlw	0
 19633  010FDC  6E0C               	movwf	(btemp+11)^0,c
 19634                           
 19635                           ;stkvar	_p @ sp[(-56)+40]
 19636  010FDE  0EF0               	movlw	-16
 19637  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19638  010FE6  0EF1               	movlw	-15
 19639  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19640                           
 19641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19642  010FEE  D051               	goto	l12845
 19643  010FF0                     l12835:
 19644                           
 19645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 19646                           ;stkvar	_i @ sp[(-56)+36]
 19647  010FF0  50E1               	movf	fsr1l,w,c
 19648  010FF2  0FEC               	addlw	-20
 19649  010FF4  6ED9               	movwf	fsr2l,c
 19650  010FF6  50E2               	movf	fsr1h,w,c
 19651  010FF8  6EDA               	movwf	fsr2h,c
 19652  010FFA  0EFF               	movlw	255
 19653  010FFC  22DA               	addwfc	fsr2h,f,c
 19654  010FFE  06DE               	decf	postinc2,f,c
 19655  011000  0E00               	movlw	0
 19656  011002  5ADD               	subwfb	postdec2,f,c
 19657                           
 19658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 19659                           ;stkvar	_i @ sp[(-56)+36]
 19660  011004  0EEC               	movlw	-20
 19661  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 19662  01100C  0EED               	movlw	-19
 19663  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19664  011014  0E97               	movlw	low _dbuf
 19665  011016  240B               	addwf	(btemp+10)^0,w,c
 19666  011018  6ED9               	movwf	fsr2l,c
 19667  01101A  0E02               	movlw	high _dbuf
 19668  01101C  200C               	addwfc	(btemp+11)^0,w,c
 19669  01101E  6EDA               	movwf	fsr2h,c
 19670  011020  0E0A               	movlw	10
 19671  011022  6EE6               	movwf	postinc1,c
 19672  011024  0E00               	movlw	0
 19673  011026  6EE6               	movwf	postinc1,c
 19674                           
 19675                           ;stkvar	_e @ sp[(-58)+34]
 19676  011028  0EE8               	movlw	-24
 19677  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 19678  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 19679  011036  EC8C  F0D0         	call	___awmod	;wreg free
 19680  01103A  5001               	movf	btemp^0,w,c
 19681  01103C  0F30               	addlw	48
 19682  01103E  6EDF               	movwf	indf2,c
 19683                           
 19684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 19685  011040  0E0A               	movlw	10
 19686  011042  6EE6               	movwf	postinc1,c
 19687  011044  0E00               	movlw	0
 19688  011046  6EE6               	movwf	postinc1,c
 19689                           
 19690                           ;stkvar	_e @ sp[(-58)+34]
 19691  011048  0EE8               	movlw	-24
 19692  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 19693  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 19694  011056  EC53  F0CC         	call	___awdiv	;wreg free
 19695                           
 19696                           ;stkvar	_e @ sp[(-56)+34]
 19697  01105A  0EEA               	movlw	-22
 19698  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 19699  011062  0EEB               	movlw	-21
 19700  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19701                           
 19702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 19703                           ;stkvar	_p @ sp[(-56)+40]
 19704  01106A  50E1               	movf	fsr1l,w,c
 19705  01106C  0FF0               	addlw	-16
 19706  01106E  6ED9               	movwf	fsr2l,c
 19707  011070  50E2               	movf	fsr1h,w,c
 19708  011072  6EDA               	movwf	fsr2h,c
 19709  011074  0EFF               	movlw	255
 19710  011076  22DA               	addwfc	fsr2h,f,c
 19711  011078  06DE               	decf	postinc2,f,c
 19712  01107A  0E00               	movlw	0
 19713  01107C  5ADD               	subwfb	postdec2,f,c
 19714                           
 19715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 19716                           ;stkvar	_w @ sp[(-56)+38]
 19717  01107E  50E1               	movf	fsr1l,w,c
 19718  011080  0FEE               	addlw	-18
 19719  011082  6ED9               	movwf	fsr2l,c
 19720  011084  50E2               	movf	fsr1h,w,c
 19721  011086  6EDA               	movwf	fsr2h,c
 19722  011088  0EFF               	movlw	255
 19723  01108A  22DA               	addwfc	fsr2h,f,c
 19724  01108C  06DE               	decf	postinc2,f,c
 19725  01108E  0E00               	movlw	0
 19726  011090  5ADD               	subwfb	postdec2,f,c
 19727  011092                     l12845:
 19728                           
 19729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19730                           ;stkvar	_e @ sp[(-56)+34]
 19731  011092  0EEA               	movlw	-22
 19732  011094  006F FF8C  F001    	movff	plusw1,btemp
 19733  01109A  0EEB               	movlw	-21
 19734  01109C  50E3               	movf	plusw1,w,c
 19735  01109E  1001               	iorwf	btemp^0,w,c
 19736  0110A0  A4D8               	btfss	status,2,c
 19737  0110A2  D7A6               	goto	l12835
 19738                           
 19739                           ;stkvar	_p @ sp[(-56)+40]
 19740  0110A4  0EF1               	movlw	-15
 19741  0110A6  BEE3               	btfsc	plusw1,7,c
 19742  0110A8  D007               	goto	u12020
 19743  0110AA  0EF1               	movlw	-15
 19744  0110AC  50E3               	movf	plusw1,w,c
 19745  0110AE  E1A0               	bnz	l12835
 19746  0110B0  0EF0               	movlw	-16
 19747  0110B2  04E3               	decf	plusw1,w,c
 19748  0110B4  B0D8               	btfsc	status,0,c
 19749  0110B6  D79C               	goto	l12835
 19750  0110B8                     u12020:
 19751                           
 19752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 19753                           ;stkvar	_i @ sp[(-56)+36]
 19754  0110B8  50E1               	movf	fsr1l,w,c
 19755  0110BA  0FEC               	addlw	-20
 19756  0110BC  6ED9               	movwf	fsr2l,c
 19757  0110BE  50E2               	movf	fsr1h,w,c
 19758  0110C0  6EDA               	movwf	fsr2h,c
 19759  0110C2  0EFF               	movlw	255
 19760  0110C4  22DA               	addwfc	fsr2h,f,c
 19761  0110C6  06DE               	decf	postinc2,f,c
 19762  0110C8  0E00               	movlw	0
 19763  0110CA  5ADD               	subwfb	postdec2,f,c
 19764                           
 19765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 19766                           ;stkvar	_sign @ sp[(-56)+42]
 19767  0110CC  0EF2               	movlw	-14
 19768  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 19769  0110D4  0EF3               	movlw	-13
 19770  0110D6  50E3               	movf	plusw1,w,c
 19771  0110D8  1001               	iorwf	btemp^0,w,c
 19772  0110DA  A4D8               	btfss	status,2,c
 19773  0110DC  D002               	goto	l12855
 19774  0110DE  0E2B               	movlw	43
 19775  0110E0  D001               	goto	L21
 19776  0110E2                     l12855:
 19777  0110E2  0E2D               	movlw	45
 19778  0110E4                     L21:
 19779  0110E4  6E0B               	movwf	(btemp+10)^0,c
 19780  0110E6  0E00               	movlw	0
 19781  0110E8  6E0C               	movwf	(btemp+11)^0,c
 19782                           
 19783                           ;stkvar	_efgtoa$5866 @ sp[(-56)+4]
 19784  0110EA  0ECC               	movlw	-52
 19785  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19786  0110F2  0ECD               	movlw	-51
 19787  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19788                           
 19789                           ;stkvar	_efgtoa$5866 @ sp[(-56)+4]
 19790                           ;stkvar	_i @ sp[(-56)+36]
 19791  0110FA  0EEC               	movlw	-20
 19792  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19793  011102  0EED               	movlw	-19
 19794  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 19795  01110A  0E97               	movlw	low _dbuf
 19796  01110C  240B               	addwf	(btemp+10)^0,w,c
 19797  01110E  6ED9               	movwf	fsr2l,c
 19798  011110  0E02               	movlw	high _dbuf
 19799  011112  200C               	addwfc	(btemp+11)^0,w,c
 19800  011114  6EDA               	movwf	fsr2h,c
 19801  011116  0ECC               	movlw	-52
 19802  011118  006F FF8F FFDF     	movff	plusw1,indf2
 19803                           
 19804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 19805                           ;stkvar	_w @ sp[(-56)+38]
 19806  01111E  50E1               	movf	fsr1l,w,c
 19807  011120  0FEE               	addlw	-18
 19808  011122  6ED9               	movwf	fsr2l,c
 19809  011124  50E2               	movf	fsr1h,w,c
 19810  011126  6EDA               	movwf	fsr2h,c
 19811  011128  0EFF               	movlw	255
 19812  01112A  22DA               	addwfc	fsr2h,f,c
 19813  01112C  06DE               	decf	postinc2,f,c
 19814  01112E  0E00               	movlw	0
 19815  011130  5ADD               	subwfb	postdec2,f,c
 19816                           
 19817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 19818                           ;stkvar	_i @ sp[(-56)+36]
 19819  011132  50E1               	movf	fsr1l,w,c
 19820  011134  0FEC               	addlw	-20
 19821  011136  6ED9               	movwf	fsr2l,c
 19822  011138  50E2               	movf	fsr1h,w,c
 19823  01113A  6EDA               	movwf	fsr2h,c
 19824  01113C  0EFF               	movlw	255
 19825  01113E  22DA               	addwfc	fsr2h,f,c
 19826  011140  06DE               	decf	postinc2,f,c
 19827  011142  0E00               	movlw	0
 19828  011144  5ADD               	subwfb	postdec2,f,c
 19829  011146  0EBF               	movlw	191
 19830  011148  6E0B               	movwf	(btemp+10)^0,c
 19831  01114A  0EFF               	movlw	255
 19832  01114C  6E0C               	movwf	(btemp+11)^0,c
 19833                           
 19834                           ;stkvar	_c @ sp[(-56)+-7]
 19835  01114E  0EC1               	movlw	-63
 19836  011150  50E3               	movf	plusw1,w,c
 19837  011152  6E09               	movwf	(btemp+8)^0,c
 19838  011154  6A0A               	clrf	(btemp+9)^0,c
 19839  011156  500B               	movf	(btemp+10)^0,w,c
 19840  011158  2609               	addwf	(btemp+8)^0,f,c
 19841  01115A  500C               	movf	(btemp+11)^0,w,c
 19842  01115C  220A               	addwfc	(btemp+9)^0,f,c
 19843  01115E  500A               	movf	(btemp+9)^0,w,c
 19844  011160  E106               	bnz	u12040
 19845  011162  0E1A               	movlw	26
 19846  011164  5C09               	subwf	(btemp+8)^0,w,c
 19847  011166  B0D8               	btfsc	status,0,c
 19848  011168  D002               	goto	u12040
 19849  01116A  0E01               	movlw	1
 19850  01116C  D001               	goto	u12050
 19851  01116E                     u12040:
 19852  01116E  0E00               	movlw	0
 19853  011170                     u12050:
 19854  011170  6E0B               	movwf	(btemp+10)^0,c
 19855  011172  6A0C               	clrf	(btemp+11)^0,c
 19856                           
 19857                           ;stkvar	_efgtoa$5868 @ sp[(-56)+0]
 19858  011174  0EC8               	movlw	-56
 19859  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19860  01117C  0EC9               	movlw	-55
 19861  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19862                           
 19863                           ;stkvar	_efgtoa$5868 @ sp[(-56)+0]
 19864  011184  0EC8               	movlw	-56
 19865  011186  006F FF8C  F001    	movff	plusw1,btemp
 19866  01118C  0EC9               	movlw	-55
 19867  01118E  50E3               	movf	plusw1,w,c
 19868  011190  1001               	iorwf	btemp^0,w,c
 19869  011192  A4D8               	btfss	status,2,c
 19870  011194  D002               	goto	l12871
 19871  011196  0E65               	movlw	101
 19872  011198  D001               	goto	L22
 19873  01119A                     l12871:
 19874  01119A  0E45               	movlw	69
 19875  01119C                     L22:
 19876  01119C  6E0B               	movwf	(btemp+10)^0,c
 19877  01119E  0E00               	movlw	0
 19878  0111A0  6E0C               	movwf	(btemp+11)^0,c
 19879                           
 19880                           ;stkvar	_efgtoa$5867 @ sp[(-56)+2]
 19881  0111A2  0ECA               	movlw	-54
 19882  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19883  0111AA  0ECB               	movlw	-53
 19884  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19885                           
 19886                           ;stkvar	_efgtoa$5867 @ sp[(-56)+2]
 19887                           ;stkvar	_i @ sp[(-56)+36]
 19888  0111B2  0EEC               	movlw	-20
 19889  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19890  0111BA  0EED               	movlw	-19
 19891  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19892  0111C2  0E97               	movlw	low _dbuf
 19893  0111C4  240B               	addwf	(btemp+10)^0,w,c
 19894  0111C6  6ED9               	movwf	fsr2l,c
 19895  0111C8  0E02               	movlw	high _dbuf
 19896  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 19897  0111CC  6EDA               	movwf	fsr2h,c
 19898  0111CE  0ECA               	movlw	-54
 19899  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 19900                           
 19901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 19902                           ;stkvar	_w @ sp[(-56)+38]
 19903  0111D6  50E1               	movf	fsr1l,w,c
 19904  0111D8  0FEE               	addlw	-18
 19905  0111DA  6ED9               	movwf	fsr2l,c
 19906  0111DC  50E2               	movf	fsr1h,w,c
 19907  0111DE  6EDA               	movwf	fsr2h,c
 19908  0111E0  0EFF               	movlw	255
 19909  0111E2  22DA               	addwfc	fsr2h,f,c
 19910  0111E4  06DE               	decf	postinc2,f,c
 19911  0111E6  0E00               	movlw	0
 19912  0111E8  5ADD               	subwfb	postdec2,f,c
 19913                           
 19914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 19915                           ;stkvar	_i @ sp[(-56)+36]
 19916  0111EA  0EEC               	movlw	-20
 19917  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19918  0111F2  0EED               	movlw	-19
 19919  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19920  0111FA  0E97               	movlw	low _dbuf
 19921  0111FC  240B               	addwf	(btemp+10)^0,w,c
 19922  0111FE  6E09               	movwf	(btemp+8)^0,c
 19923  011200  0E02               	movlw	high _dbuf
 19924  011202  200C               	addwfc	(btemp+11)^0,w,c
 19925  011204  6E0A               	movwf	(btemp+9)^0,c
 19926  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 19927  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 19928                           
 19929                           ;stkvar	_n @ sp[(-58)+32]
 19930  011212  0E97               	movlw	low _dbuf
 19931  011214  6E0B               	movwf	(btemp+10)^0,c
 19932  011216  0E02               	movlw	high _dbuf
 19933  011218  6E0C               	movwf	(btemp+11)^0,c
 19934  01121A  0EE6               	movlw	-26
 19935  01121C  50E3               	movf	plusw1,w,c
 19936  01121E  260B               	addwf	(btemp+10)^0,f,c
 19937  011220  0EE7               	movlw	-25
 19938  011222  50E3               	movf	plusw1,w,c
 19939  011224  220C               	addwfc	(btemp+11)^0,f,c
 19940  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19941  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19942  011232  EC81  F0D4         	call	_strcpy	;wreg free
 19943  011236  EF16  F081         	goto	l12623
 19944  01123A                     l2317:
 19945                           
 19946                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 19947  01123A  0EC1               	movlw	193
 19948  01123C  26E1               	addwf	fsr1l,f,c
 19949  01123E  0EFF               	movlw	255
 19950  011240  22E2               	addwfc	fsr1h,f,c
 19951  011242  0012               	return		;funcret
 19952  011244                     __end_of_efgtoa:
 19953                           	opt callstack 0
 19954                           
 19955 ;; *************** function _tolower *****************
 19956 ;; Defined at:
 19957 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 19958 ;; Parameters:    Size  Location     Type
 19959 ;;  c               2  [STACK] int 
 19960 ;; Auto vars:     Size  Location     Type
 19961 ;;		None
 19962 ;; Return value:  Size  Location     Type
 19963 ;;                  2  [STACK] int 
 19964 ;; Registers used:
 19965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 19966 ;; Tracked objects:
 19967 ;;		On entry : 0/0
 19968 ;;		On exit  : 0/0
 19969 ;;		Unchanged: 0/0
 19970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19975 ;;Total ram usage:        0 bytes
 19976 ;; Hardware stack levels used:    1
 19977 ;; Hardware stack levels required when called:   16
 19978 ;; This function calls:
 19979 ;;		_isupper
 19980 ;; This function is called by:
 19981 ;;		_efgtoa
 19982 ;;		_vfpfcnvrt
 19983 ;; This function uses a reentrant model
 19984 ;;
 19985                           
 19986                           	psect	text66
 19987  01B514                     __ptext66:
 19988                           	opt callstack 0
 19989  01B514                     _tolower:
 19990                           	opt callstack 0
 19991                           
 19992                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19993  01B514  52E6               	movf	postinc1,f,c
 19994  01B516  52E6               	movf	postinc1,f,c
 19995                           
 19996                           ;stkvar	_c @ sp[(-2)+-2]
 19997                           
 19998                           ;incstack = 0
 19999 ;; hardware stack exceeded
 20000  01B518  0EFC               	movlw	-4
 20001  01B51A  50E3               	movf	plusw1,w,c
 20002  01B51C  0FBF               	addlw	191
 20003  01B51E  6E0B               	movwf	(btemp+10)^0,c
 20004  01B520  0EFD               	movlw	-3
 20005  01B522  006F FF8C  F00C    	movff	plusw1,btemp+11
 20006  01B528  0EFF               	movlw	255
 20007  01B52A  220C               	addwfc	(btemp+11)^0,f,c
 20008  01B52C  500C               	movf	(btemp+11)^0,w,c
 20009  01B52E  E106               	bnz	u6330
 20010  01B530  0E1A               	movlw	26
 20011  01B532  5C0B               	subwf	(btemp+10)^0,w,c
 20012  01B534  B0D8               	btfsc	status,0,c
 20013  01B536  D002               	goto	u6330
 20014  01B538  0E01               	movlw	1
 20015  01B53A  D001               	goto	u6340
 20016  01B53C                     u6330:
 20017  01B53C  0E00               	movlw	0
 20018  01B53E                     u6340:
 20019  01B53E  6E0B               	movwf	(btemp+10)^0,c
 20020  01B540  6A0C               	clrf	(btemp+11)^0,c
 20021                           
 20022                           ;stkvar	_tolower$6687 @ sp[(-2)+0]
 20023  01B542  0EFE               	movlw	-2
 20024  01B544  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20025  01B54A  0EFF               	movlw	-1
 20026  01B54C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20027                           
 20028                           ;stkvar	_tolower$6687 @ sp[(-2)+0]
 20029  01B552  0EFE               	movlw	-2
 20030  01B554  006F FF8C  F001    	movff	plusw1,btemp
 20031  01B55A  0EFF               	movlw	-1
 20032  01B55C  50E3               	movf	plusw1,w,c
 20033  01B55E  1001               	iorwf	btemp^0,w,c
 20034  01B560  B4D8               	btfsc	status,2,c
 20035  01B562  D00D               	goto	l8399
 20036                           
 20037                           ;stkvar	_c @ sp[(-2)+-2]
 20038  01B564  0EFC               	movlw	-4
 20039  01B566  006F FF8C  F001    	movff	plusw1,btemp
 20040  01B56C  0EFD               	movlw	-3
 20041  01B56E  006F FF8C  F002    	movff	plusw1,btemp+1
 20042  01B574  0E20               	movlw	32
 20043  01B576  1201               	iorwf	btemp^0,f,c
 20044  01B578  0E00               	movlw	0
 20045  01B57A  1202               	iorwf	(btemp+1)^0,f,c
 20046  01B57C  D008               	goto	l3589
 20047  01B57E                     l8399:
 20048                           
 20049                           ;stkvar	_c @ sp[(-2)+-2]
 20050  01B57E  0EFC               	movlw	-4
 20051  01B580  006F FF8C  F001    	movff	plusw1,btemp
 20052  01B586  0EFD               	movlw	-3
 20053  01B588  006F FF8C  F002    	movff	plusw1,btemp+1
 20054  01B58E                     l3589:
 20055                           
 20056                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20057  01B58E  52E5               	movf	postdec1,f,c
 20058  01B590  52E5               	movf	postdec1,f,c
 20059  01B592  52E5               	movf	postdec1,f,c
 20060  01B594  52E5               	movf	postdec1,f,c
 20061  01B596  0012               	return		;funcret
 20062  01B598                     __end_of_tolower:
 20063                           	opt callstack 0
 20064                           
 20065 ;; *************** function _isupper *****************
 20066 ;; Defined at:
 20067 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;  c               2  [STACK] int 
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;		None
 20072 ;; Return value:  Size  Location     Type
 20073 ;;                  2  [STACK] int 
 20074 ;; Registers used:
 20075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20076 ;; Tracked objects:
 20077 ;;		On entry : 0/0
 20078 ;;		On exit  : 0/0
 20079 ;;		Unchanged: 0/0
 20080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20085 ;;Total ram usage:        0 bytes
 20086 ;; Hardware stack levels used:    1
 20087 ;; Hardware stack levels required when called:   15
 20088 ;; This function calls:
 20089 ;;		Nothing
 20090 ;; This function is called by:
 20091 ;;		_efgtoa
 20092 ;;		_xtoa
 20093 ;;		_vfpfcnvrt
 20094 ;;		_tolower
 20095 ;; This function uses a reentrant model
 20096 ;;
 20097                           
 20098                           	psect	text67
 20099  01C418                     __ptext67:
 20100                           	opt callstack 0
 20101  01C418                     _isupper:
 20102                           	opt callstack 0
 20103                           
 20104                           ;stkvar	_c @ sp[(0)+-2]
 20105                           
 20106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20107                           ;incstack = 0
 20108 ;; hardware stack exceeded
 20109  01C418  0EFE               	movlw	-2
 20110  01C41A  50E3               	movf	plusw1,w,c
 20111  01C41C  0FBF               	addlw	191
 20112  01C41E  6E0B               	movwf	(btemp+10)^0,c
 20113  01C420  0EFF               	movlw	-1
 20114  01C422  006F FF8C  F00C    	movff	plusw1,btemp+11
 20115  01C428  0EFF               	movlw	255
 20116  01C42A  220C               	addwfc	(btemp+11)^0,f,c
 20117  01C42C  500C               	movf	(btemp+11)^0,w,c
 20118  01C42E  E106               	bnz	u5680
 20119  01C430  0E1A               	movlw	26
 20120  01C432  5C0B               	subwf	(btemp+10)^0,w,c
 20121  01C434  B0D8               	btfsc	status,0,c
 20122  01C436  D002               	goto	u5680
 20123  01C438  0E01               	movlw	1
 20124  01C43A  D001               	goto	u5690
 20125  01C43C                     u5680:
 20126  01C43C  0E00               	movlw	0
 20127  01C43E                     u5690:
 20128  01C43E  6E01               	movwf	btemp^0,c
 20129  01C440  6A02               	clrf	(btemp+1)^0,c
 20130                           
 20131                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20132  01C442  52E5               	movf	postdec1,f,c
 20133  01C444  52E5               	movf	postdec1,f,c
 20134  01C446  0012               	return		;funcret
 20135  01C448                     __end_of_isupper:
 20136                           	opt callstack 0
 20137                           
 20138 ;; *************** function _strcpy *****************
 20139 ;; Defined at:
 20140 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  dest            2  [STACK] PTR unsigned char 
 20143 ;;		 -> dbuf(80), 
 20144 ;;  src             2  [STACK] PTR const unsigned char 
 20145 ;;		 -> STR_84(4), STR_83(4), STR_80(4), STR_79(4), 
 20146 ;;		 -> dbuf(80), 
 20147 ;; Auto vars:     Size  Location     Type
 20148 ;;  d               2  [STACK] PTR unsigned char 
 20149 ;;		 -> dbuf(80), 
 20150 ;;  s               2  [STACK] PTR const unsigned char 
 20151 ;;		 -> STR_84(4), STR_83(4), STR_80(4), STR_79(4), 
 20152 ;;		 -> dbuf(80), 
 20153 ;; Return value:  Size  Location     Type
 20154 ;;                  2  [STACK] PTR unsigned char 
 20155 ;; Registers used:
 20156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 20157 ;; Tracked objects:
 20158 ;;		On entry : 0/0
 20159 ;;		On exit  : 0/0
 20160 ;;		Unchanged: 0/0
 20161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20166 ;;Total ram usage:        0 bytes
 20167 ;; Hardware stack levels used:    1
 20168 ;; Hardware stack levels required when called:   15
 20169 ;; This function calls:
 20170 ;;		Nothing
 20171 ;; This function is called by:
 20172 ;;		_efgtoa
 20173 ;; This function uses a reentrant model
 20174 ;;
 20175                           
 20176                           	psect	text68
 20177  01A902                     __ptext68:
 20178                           	opt callstack 0
 20179  01A902                     _strcpy:
 20180                           	opt callstack 0
 20181                           
 20182                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20183  01A902  52E6               	movf	postinc1,f,c
 20184  01A904  52E6               	movf	postinc1,f,c
 20185  01A906  52E6               	movf	postinc1,f,c
 20186  01A908  52E6               	movf	postinc1,f,c
 20187                           
 20188                           ;stkvar	_src @ sp[(-4)+-4]
 20189                           
 20190                           ;incstack = 0
 20191 ;; hardware stack exceeded
 20192  01A90A  0EF8               	movlw	-8
 20193  01A90C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20194  01A912  0EF9               	movlw	-7
 20195  01A914  006F FF8C  F00C    	movff	plusw1,btemp+11
 20196                           
 20197                           ;stkvar	_s @ sp[(-4)+2]
 20198  01A91A  0EFF               	movlw	-1
 20199  01A91C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20200  01A922  0EFE               	movlw	-2
 20201  01A924  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20202                           
 20203                           ;stkvar	_dest @ sp[(-4)+-2]
 20204  01A92A  0EFA               	movlw	-6
 20205  01A92C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20206  01A932  0EFB               	movlw	-5
 20207  01A934  006F FF8C  F00C    	movff	plusw1,btemp+11
 20208                           
 20209                           ;stkvar	_d @ sp[(-4)+0]
 20210  01A93A  0EFD               	movlw	-3
 20211  01A93C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20212  01A942  0EFC               	movlw	-4
 20213  01A944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20214  01A94A                     l12485:
 20215                           
 20216                           ;stkvar	_s @ sp[(-4)+2]
 20217  01A94A  50E1               	movf	fsr1l,w,c
 20218  01A94C  0FFE               	addlw	-2
 20219  01A94E  6ED9               	movwf	fsr2l,c
 20220  01A950  50E2               	movf	fsr1h,w,c
 20221  01A952  6EDA               	movwf	fsr2h,c
 20222  01A954  0EFF               	movlw	255
 20223  01A956  22DA               	addwfc	fsr2h,f,c
 20224  01A958  006F FF7C  F00B    	movff	indf2,btemp+10
 20225  01A95E  0E01               	movlw	1
 20226  01A960  26DE               	addwf	postinc2,f,c
 20227  01A962  006F FF7C  F00C    	movff	indf2,btemp+11
 20228  01A968  0E00               	movlw	0
 20229  01A96A  22DD               	addwfc	postdec2,f,c
 20230  01A96C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 20231  01A972  0060  F033  FFF7   	movff	btemp+11,tblptrh
 20232  01A978  0E00               	movlw	low (__mediumconst shr (0+16))
 20233  01A97A  6EF8               	movwf	tblptru,c
 20234                           
 20235                           ;stkvar	_d @ sp[(-4)+0]
 20236  01A97C  50E1               	movf	fsr1l,w,c
 20237  01A97E  0FFC               	addlw	-4
 20238  01A980  6ED9               	movwf	fsr2l,c
 20239  01A982  50E2               	movf	fsr1h,w,c
 20240  01A984  6EDA               	movwf	fsr2h,c
 20241  01A986  0EFF               	movlw	255
 20242  01A988  22DA               	addwfc	fsr2h,f,c
 20243  01A98A  006F FF7C  F00B    	movff	indf2,btemp+10
 20244  01A990  0E01               	movlw	1
 20245  01A992  26DE               	addwf	postinc2,f,c
 20246  01A994  006F FF7C  F00C    	movff	indf2,btemp+11
 20247  01A99A  0E00               	movlw	0
 20248  01A99C  22DD               	addwfc	postdec2,f,c
 20249  01A99E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 20250  01A9A4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 20251  01A9AA  0E1F               	movlw	(high __ramtop+-1)
 20252  01A9AC  64F7               	cpfsgt	tblptrh,c
 20253  01A9AE  D003               	bra	u11347
 20254  01A9B0  0008               	tblrd		*
 20255  01A9B2  50F5               	movf	tablat,w,c
 20256  01A9B4  D007               	bra	u11340
 20257  01A9B6                     u11347:
 20258  01A9B6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20259  01A9BC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20260  01A9C2  50EF               	movf	indf0,w,c
 20261  01A9C4                     u11340:
 20262  01A9C4  6EDF               	movwf	indf2,c
 20263  01A9C6  50DF               	movf	indf2,w,c
 20264  01A9C8  A4D8               	btfss	status,2,c
 20265  01A9CA  D7BF               	goto	l12485
 20266                           
 20267                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 20268  01A9CC  0EF8               	movlw	248
 20269  01A9CE  26E1               	addwf	fsr1l,f,c
 20270  01A9D0  0EFF               	movlw	255
 20271  01A9D2  22E2               	addwfc	fsr1h,f,c
 20272  01A9D4  0012               	return		;funcret
 20273  01A9D6                     __end_of_strcpy:
 20274                           	opt callstack 0
 20275                           
 20276 ;; *************** function _floorf *****************
 20277 ;; Defined at:
 20278 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 20279 ;; Parameters:    Size  Location     Type
 20280 ;;  x               4  [STACK] float 
 20281 ;; Auto vars:     Size  Location     Type
 20282 ;;  u               4  [STACK] struct .
 20283 ;;  m               4  [STACK] unsigned long 
 20284 ;;  e               2  [STACK] int 
 20285 ;; Return value:  Size  Location     Type
 20286 ;;                  4  [STACK] float 
 20287 ;; Registers used:
 20288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20289 ;; Tracked objects:
 20290 ;;		On entry : 0/0
 20291 ;;		On exit  : 0/0
 20292 ;;		Unchanged: 0/0
 20293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20298 ;;Total ram usage:        0 bytes
 20299 ;; Hardware stack levels used:    1
 20300 ;; Hardware stack levels required when called:   15
 20301 ;; This function calls:
 20302 ;;		Nothing
 20303 ;; This function is called by:
 20304 ;;		_efgtoa
 20305 ;; This function uses a reentrant model
 20306 ;;
 20307                           
 20308                           	psect	text69
 20309  016850                     __ptext69:
 20310                           	opt callstack 0
 20311  016850                     _floorf:
 20312                           	opt callstack 0
 20313                           
 20314                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20315  016850  0E0A               	movlw	10
 20316  016852  26E1               	addwf	fsr1l,f,c
 20317  016854  0E00               	movlw	0
 20318  016856  22E2               	addwfc	fsr1h,f,c
 20319                           
 20320                           ;incstack = 0
 20321 ;; hardware stack exceeded
 20322  016858  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 20323  01685E  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 20324  016864  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 20325  01686A  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 20326                           
 20327                           ;stkvar	_u @ sp[(-10)+0]
 20328  016870  0EF6               	movlw	-10
 20329  016872  0060  F027  FFE3   	movff	btemp+8,plusw1
 20330  016878  0EF7               	movlw	-9
 20331  01687A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20332  016880  0EF8               	movlw	-8
 20333  016882  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20334  016888  0EF9               	movlw	-7
 20335  01688A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20336                           
 20337                           ;stkvar	_x @ sp[(-10)+-4]
 20338  016890  0EF2               	movlw	-14
 20339  016892  006F FF8C  F009    	movff	plusw1,btemp+8
 20340  016898  0EF3               	movlw	-13
 20341  01689A  006F FF8C  F00A    	movff	plusw1,btemp+9
 20342  0168A0  0EF4               	movlw	-12
 20343  0168A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20344  0168A8  0EF5               	movlw	-11
 20345  0168AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20346                           
 20347                           ;stkvar	_u @ sp[(-10)+0]
 20348  0168B0  0EF6               	movlw	-10
 20349  0168B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 20350  0168B8  0EF7               	movlw	-9
 20351  0168BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20352  0168C0  0EF8               	movlw	-8
 20353  0168C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20354  0168C8  0EF9               	movlw	-7
 20355  0168CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 20356  0168D0  0E81               	movlw	129
 20357  0168D2  6E0B               	movwf	(btemp+10)^0,c
 20358  0168D4  0EFF               	movlw	255
 20359  0168D6  6E0C               	movwf	(btemp+11)^0,c
 20360                           
 20361                           ;stkvar	_u @ sp[(-10)+0]
 20362  0168D8  0EF6               	movlw	-10
 20363  0168DA  006F FF8C  F005    	movff	plusw1,btemp+4
 20364  0168E0  0EF7               	movlw	-9
 20365  0168E2  006F FF8C  F006    	movff	plusw1,btemp+5
 20366  0168E8  0EF8               	movlw	-8
 20367  0168EA  006F FF8C  F007    	movff	plusw1,btemp+6
 20368  0168F0  0EF9               	movlw	-7
 20369  0168F2  006F FF8C  F008    	movff	plusw1,btemp+7
 20370  0168F8  0E18               	movlw	24
 20371  0168FA  D005               	goto	u6360
 20372  0168FC                     u6365:
 20373  0168FC  90D8               	bcf	status,0,c
 20374  0168FE  3208               	rrcf	(btemp+7)^0,f,c
 20375  016900  3207               	rrcf	(btemp+6)^0,f,c
 20376  016902  3206               	rrcf	(btemp+5)^0,f,c
 20377  016904  3205               	rrcf	(btemp+4)^0,f,c
 20378  016906                     u6360:
 20379  016906  2EE8               	decfsz	wreg,f,c
 20380  016908  D7F9               	goto	u6365
 20381  01690A  0060  F014  F009   	movff	btemp+4,btemp+8
 20382  016910  0060  F018  F00A   	movff	btemp+5,btemp+9
 20383  016916  0EFF               	movlw	255
 20384  016918  1609               	andwf	(btemp+8)^0,f,c
 20385  01691A  0E00               	movlw	0
 20386  01691C  160A               	andwf	(btemp+9)^0,f,c
 20387  01691E  500B               	movf	(btemp+10)^0,w,c
 20388  016920  2609               	addwf	(btemp+8)^0,f,c
 20389  016922  500C               	movf	(btemp+11)^0,w,c
 20390  016924  220A               	addwfc	(btemp+9)^0,f,c
 20391                           
 20392                           ;stkvar	_e @ sp[(-10)+8]
 20393  016926  0EFE               	movlw	-2
 20394  016928  0060  F027  FFE3   	movff	btemp+8,plusw1
 20395  01692E  0EFF               	movlw	-1
 20396  016930  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20397                           
 20398                           ;stkvar	_e @ sp[(-10)+8]
 20399  016936  0EFF               	movlw	-1
 20400  016938  BEE3               	btfsc	plusw1,7,c
 20401  01693A  D019               	goto	l8413
 20402  01693C  0EFF               	movlw	-1
 20403  01693E  50E3               	movf	plusw1,w,c
 20404  016940  E108               	bnz	u6370
 20405  016942  0EFE               	movlw	-2
 20406  016944  006F FF8C  F001    	movff	plusw1,btemp
 20407  01694A  0E17               	movlw	23
 20408  01694C  5E01               	subwf	btemp^0,f,c
 20409  01694E  A0D8               	btfss	status,0,c
 20410  016950  D00E               	goto	l8413
 20411  016952                     u6370:
 20412                           
 20413                           ;stkvar	_x @ sp[(-10)+-4]
 20414  016952  0EF2               	movlw	-14
 20415  016954  006F FF8C  F001    	movff	plusw1,btemp
 20416  01695A  0EF3               	movlw	-13
 20417  01695C  006F FF8C  F002    	movff	plusw1,btemp+1
 20418  016962  0EF4               	movlw	-12
 20419  016964  006F FF8C  F003    	movff	plusw1,btemp+2
 20420  01696A  0EF5               	movlw	-11
 20421  01696C  D11F               	goto	L23
 20422  01696E                     l8413:
 20423                           
 20424                           ;stkvar	_e @ sp[(-10)+8]
 20425  01696E  0EFF               	movlw	-1
 20426  016970  BEE3               	btfsc	plusw1,7,c
 20427  016972  D0B4               	goto	l8429
 20428                           
 20429                           ;stkvar	_e @ sp[(-10)+8]
 20430  016974  0EFE               	movlw	-2
 20431  016976  006F FF8C  F00C    	movff	plusw1,btemp+11
 20432  01697C  0EFF               	movlw	255
 20433  01697E  6E05               	movwf	(btemp+4)^0,c
 20434  016980  0EFF               	movlw	255
 20435  016982  6E06               	movwf	(btemp+5)^0,c
 20436  016984  0E7F               	movlw	127
 20437  016986  6E07               	movwf	(btemp+6)^0,c
 20438  016988  0E00               	movlw	0
 20439  01698A  6E08               	movwf	(btemp+7)^0,c
 20440  01698C                     u6395:
 20441  01698C  660C               	tstfsz	(btemp+11)^0,c
 20442  01698E  D001               	goto	u6396
 20443  016990  D007               	goto	u6397
 20444  016992                     u6396:
 20445  016992  3408               	rlcf	(btemp+7)^0,w,c
 20446  016994  3208               	rrcf	(btemp+7)^0,f,c
 20447  016996  3207               	rrcf	(btemp+6)^0,f,c
 20448  016998  3206               	rrcf	(btemp+5)^0,f,c
 20449  01699A  3205               	rrcf	(btemp+4)^0,f,c
 20450  01699C  2E0C               	decfsz	(btemp+11)^0,f,c
 20451  01699E  D7F6               	goto	u6395
 20452  0169A0                     u6397:
 20453                           
 20454                           ;stkvar	_m @ sp[(-10)+4]
 20455  0169A0  0EFA               	movlw	-6
 20456  0169A2  0060  F017  FFE3   	movff	btemp+4,plusw1
 20457  0169A8  0EFB               	movlw	-5
 20458  0169AA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 20459  0169B0  0EFC               	movlw	-4
 20460  0169B2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20461  0169B8  0EFD               	movlw	-3
 20462  0169BA  0060  F023  FFE3   	movff	btemp+7,plusw1
 20463                           
 20464                           ;stkvar	_m @ sp[(-10)+4]
 20465                           ;stkvar	_u @ sp[(-10)+0]
 20466  0169C0  0EF6               	movlw	-10
 20467  0169C2  006F FF8C  F009    	movff	plusw1,btemp+8
 20468  0169C8  0EF7               	movlw	-9
 20469  0169CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 20470  0169D0  0EF8               	movlw	-8
 20471  0169D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20472  0169D8  0EF9               	movlw	-7
 20473  0169DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20474  0169E0  0EFA               	movlw	-6
 20475  0169E2  50E3               	movf	plusw1,w,c
 20476  0169E4  1609               	andwf	(btemp+8)^0,f,c
 20477  0169E6  0EFB               	movlw	-5
 20478  0169E8  50E3               	movf	plusw1,w,c
 20479  0169EA  160A               	andwf	(btemp+9)^0,f,c
 20480  0169EC  0EFC               	movlw	-4
 20481  0169EE  50E3               	movf	plusw1,w,c
 20482  0169F0  160B               	andwf	(btemp+10)^0,f,c
 20483  0169F2  0EFD               	movlw	-3
 20484  0169F4  50E3               	movf	plusw1,w,c
 20485  0169F6  160C               	andwf	(btemp+11)^0,f,c
 20486  0169F8  5009               	movf	(btemp+8)^0,w,c
 20487  0169FA  100A               	iorwf	(btemp+9)^0,w,c
 20488  0169FC  100B               	iorwf	(btemp+10)^0,w,c
 20489  0169FE  100C               	iorwf	(btemp+11)^0,w,c
 20490  016A00  B4D8               	btfsc	status,2,c
 20491  016A02  D7A7               	goto	u6370
 20492                           
 20493                           ;stkvar	_u @ sp[(-10)+0]
 20494  016A04  0EF6               	movlw	-10
 20495  016A06  006F FF8C  F009    	movff	plusw1,btemp+8
 20496  016A0C  0EF7               	movlw	-9
 20497  016A0E  006F FF8C  F00A    	movff	plusw1,btemp+9
 20498  016A14  0EF8               	movlw	-8
 20499  016A16  006F FF8C  F00B    	movff	plusw1,btemp+10
 20500  016A1C  0EF9               	movlw	-7
 20501  016A1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20502  016A24  0E20               	movlw	32
 20503  016A26  D005               	goto	u6410
 20504  016A28                     u6415:
 20505  016A28  90D8               	bcf	status,0,c
 20506  016A2A  320C               	rrcf	(btemp+11)^0,f,c
 20507  016A2C  320B               	rrcf	(btemp+10)^0,f,c
 20508  016A2E  320A               	rrcf	(btemp+9)^0,f,c
 20509  016A30  3209               	rrcf	(btemp+8)^0,f,c
 20510  016A32                     u6410:
 20511  016A32  2EE8               	decfsz	wreg,f,c
 20512  016A34  D7F9               	goto	u6415
 20513  016A36  5009               	movf	(btemp+8)^0,w,c
 20514  016A38  B4D8               	btfsc	status,2,c
 20515  016A3A  D028               	goto	l8427
 20516                           
 20517                           ;stkvar	_m @ sp[(-10)+4]
 20518                           ;stkvar	_u @ sp[(-10)+0]
 20519  016A3C  0EF6               	movlw	-10
 20520  016A3E  50E3               	movf	plusw1,w,c
 20521  016A40  6E01               	movwf	btemp^0,c
 20522  016A42  0EFA               	movlw	-6
 20523  016A44  50E3               	movf	plusw1,w,c
 20524  016A46  2601               	addwf	btemp^0,f,c
 20525  016A48  0EF6               	movlw	-10
 20526  016A4A  0060  F007  FFE3   	movff	btemp,plusw1
 20527  016A50  0EF7               	movlw	-9
 20528  016A52  50E3               	movf	plusw1,w,c
 20529  016A54  6E01               	movwf	btemp^0,c
 20530  016A56  0EFB               	movlw	-5
 20531  016A58  50E3               	movf	plusw1,w,c
 20532  016A5A  2201               	addwfc	btemp^0,f,c
 20533  016A5C  0EF7               	movlw	-9
 20534  016A5E  0060  F007  FFE3   	movff	btemp,plusw1
 20535  016A64  0EF8               	movlw	-8
 20536  016A66  50E3               	movf	plusw1,w,c
 20537  016A68  6E01               	movwf	btemp^0,c
 20538  016A6A  0EFC               	movlw	-4
 20539  016A6C  50E3               	movf	plusw1,w,c
 20540  016A6E  2201               	addwfc	btemp^0,f,c
 20541  016A70  0EF8               	movlw	-8
 20542  016A72  0060  F007  FFE3   	movff	btemp,plusw1
 20543  016A78  0EF9               	movlw	-7
 20544  016A7A  50E3               	movf	plusw1,w,c
 20545  016A7C  6E01               	movwf	btemp^0,c
 20546  016A7E  0EFD               	movlw	-3
 20547  016A80  50E3               	movf	plusw1,w,c
 20548  016A82  2201               	addwfc	btemp^0,f,c
 20549  016A84  0EF9               	movlw	-7
 20550  016A86  0060  F007  FFE3   	movff	btemp,plusw1
 20551  016A8C                     l8427:
 20552                           
 20553                           ;stkvar	_m @ sp[(-10)+4]
 20554  016A8C  0EFA               	movlw	-6
 20555  016A8E  006F FF8C  F009    	movff	plusw1,btemp+8
 20556  016A94  0EFB               	movlw	-5
 20557  016A96  006F FF8C  F00A    	movff	plusw1,btemp+9
 20558  016A9C  0EFC               	movlw	-4
 20559  016A9E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20560  016AA4  0EFD               	movlw	-3
 20561  016AA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 20562  016AAC  1C09               	comf	(btemp+8)^0,w,c
 20563  016AAE  6E05               	movwf	(btemp+4)^0,c
 20564  016AB0  1C0A               	comf	(btemp+9)^0,w,c
 20565  016AB2  6E06               	movwf	(btemp+5)^0,c
 20566  016AB4  1C0B               	comf	(btemp+10)^0,w,c
 20567  016AB6  6E07               	movwf	(btemp+6)^0,c
 20568  016AB8  1C0C               	comf	(btemp+11)^0,w,c
 20569  016ABA  6E08               	movwf	(btemp+7)^0,c
 20570                           
 20571                           ;stkvar	_u @ sp[(-10)+0]
 20572  016ABC  50E1               	movf	fsr1l,w,c
 20573  016ABE  0FF6               	addlw	-10
 20574  016AC0  6ED9               	movwf	fsr2l,c
 20575  016AC2  50E2               	movf	fsr1h,w,c
 20576  016AC4  6EDA               	movwf	fsr2h,c
 20577  016AC6  0EFF               	movlw	255
 20578  016AC8  22DA               	addwfc	fsr2h,f,c
 20579  016ACA  5005               	movf	(btemp+4)^0,w,c
 20580  016ACC  16DE               	andwf	postinc2,f,c
 20581  016ACE  5006               	movf	(btemp+5)^0,w,c
 20582  016AD0  16DE               	andwf	postinc2,f,c
 20583  016AD2  5007               	movf	(btemp+6)^0,w,c
 20584  016AD4  16DE               	andwf	postinc2,f,c
 20585  016AD6  5008               	movf	(btemp+7)^0,w,c
 20586  016AD8  16DE               	andwf	postinc2,f,c
 20587  016ADA  D05B               	goto	l8437
 20588  016ADC                     l8429:
 20589                           
 20590                           ;stkvar	_u @ sp[(-10)+0]
 20591  016ADC  0EF6               	movlw	-10
 20592  016ADE  006F FF8C  F009    	movff	plusw1,btemp+8
 20593  016AE4  0EF7               	movlw	-9
 20594  016AE6  006F FF8C  F00A    	movff	plusw1,btemp+9
 20595  016AEC  0EF8               	movlw	-8
 20596  016AEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 20597  016AF4  0EF9               	movlw	-7
 20598  016AF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 20599  016AFC  0E20               	movlw	32
 20600  016AFE  D005               	goto	u6430
 20601  016B00                     u6435:
 20602  016B00  90D8               	bcf	status,0,c
 20603  016B02  320C               	rrcf	(btemp+11)^0,f,c
 20604  016B04  320B               	rrcf	(btemp+10)^0,f,c
 20605  016B06  320A               	rrcf	(btemp+9)^0,f,c
 20606  016B08  3209               	rrcf	(btemp+8)^0,f,c
 20607  016B0A                     u6430:
 20608  016B0A  2EE8               	decfsz	wreg,f,c
 20609  016B0C  D7F9               	goto	u6435
 20610  016B0E  6609               	tstfsz	(btemp+8)^0,c
 20611  016B10  D009               	goto	l8433
 20612                           
 20613                           ;stkvar	_u @ sp[(-10)+0]
 20614  016B12  0EF6               	movlw	-10
 20615  016B14  6AE3               	clrf	plusw1,c
 20616  016B16  0EF7               	movlw	-9
 20617  016B18  6AE3               	clrf	plusw1,c
 20618  016B1A  0EF8               	movlw	-8
 20619  016B1C  6AE3               	clrf	plusw1,c
 20620  016B1E  0EF9               	movlw	-7
 20621  016B20  6AE3               	clrf	plusw1,c
 20622  016B22  D037               	goto	l8437
 20623  016B24                     l8433:
 20624                           
 20625                           ;stkvar	_u @ sp[(-10)+0]
 20626  016B24  0EF6               	movlw	-10
 20627  016B26  006F FF8C  F009    	movff	plusw1,btemp+8
 20628  016B2C  0EF7               	movlw	-9
 20629  016B2E  006F FF8C  F00A    	movff	plusw1,btemp+9
 20630  016B34  0EF8               	movlw	-8
 20631  016B36  006F FF8C  F00B    	movff	plusw1,btemp+10
 20632  016B3C  0EF9               	movlw	-7
 20633  016B3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20634  016B44  90D8               	bcf	status,0,c
 20635  016B46  3409               	rlcf	(btemp+8)^0,w,c
 20636  016B48  6E05               	movwf	(btemp+4)^0,c
 20637  016B4A  340A               	rlcf	(btemp+9)^0,w,c
 20638  016B4C  6E06               	movwf	(btemp+5)^0,c
 20639  016B4E  340B               	rlcf	(btemp+10)^0,w,c
 20640  016B50  6E07               	movwf	(btemp+6)^0,c
 20641  016B52  340C               	rlcf	(btemp+11)^0,w,c
 20642  016B54  6E08               	movwf	(btemp+7)^0,c
 20643  016B56  5005               	movf	(btemp+4)^0,w,c
 20644  016B58  1006               	iorwf	(btemp+5)^0,w,c
 20645  016B5A  1007               	iorwf	(btemp+6)^0,w,c
 20646  016B5C  1008               	iorwf	(btemp+7)^0,w,c
 20647  016B5E  B4D8               	btfsc	status,2,c
 20648  016B60  D018               	goto	l8437
 20649  016B62  0E00               	movlw	0
 20650  016B64  6E09               	movwf	(btemp+8)^0,c
 20651  016B66  0E00               	movlw	0
 20652  016B68  6E0A               	movwf	(btemp+9)^0,c
 20653  016B6A  0E80               	movlw	128
 20654  016B6C  6E0B               	movwf	(btemp+10)^0,c
 20655  016B6E  0EBF               	movlw	191
 20656  016B70  6E0C               	movwf	(btemp+11)^0,c
 20657                           
 20658                           ;stkvar	_u @ sp[(-10)+0]
 20659  016B72  0EF6               	movlw	-10
 20660  016B74  0060  F027  FFE3   	movff	btemp+8,plusw1
 20661  016B7A  0EF7               	movlw	-9
 20662  016B7C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20663  016B82  0EF8               	movlw	-8
 20664  016B84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20665  016B8A  0EF9               	movlw	-7
 20666  016B8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20667  016B92                     l8437:
 20668                           
 20669                           ;stkvar	_u @ sp[(-10)+0]
 20670  016B92  0EF6               	movlw	-10
 20671  016B94  006F FF8C  F001    	movff	plusw1,btemp
 20672  016B9A  0EF7               	movlw	-9
 20673  016B9C  006F FF8C  F002    	movff	plusw1,btemp+1
 20674  016BA2  0EF8               	movlw	-8
 20675  016BA4  006F FF8C  F003    	movff	plusw1,btemp+2
 20676  016BAA  0EF9               	movlw	-7
 20677  016BAC                     L23:
 20678  016BAC  006F FF8C  F004    	movff	plusw1,btemp+3
 20679                           
 20680                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20681  016BB2  0EF2               	movlw	242
 20682  016BB4  26E1               	addwf	fsr1l,f,c
 20683  016BB6  0EFF               	movlw	255
 20684  016BB8  22E2               	addwfc	fsr1h,f,c
 20685  016BBA  0012               	return		;funcret
 20686  016BBC                     __end_of_floorf:
 20687                           	opt callstack 0
 20688                           
 20689 ;; *************** function ___fpclassifyf *****************
 20690 ;; Defined at:
 20691 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;  x               4  [STACK] float 
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;  u               4  [STACK] struct .
 20696 ;;  e               2  [STACK] int 
 20697 ;; Return value:  Size  Location     Type
 20698 ;;                  2  [STACK] int 
 20699 ;; Registers used:
 20700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 20701 ;; Tracked objects:
 20702 ;;		On entry : 0/0
 20703 ;;		On exit  : 0/0
 20704 ;;		Unchanged: 0/0
 20705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20710 ;;Total ram usage:        0 bytes
 20711 ;; Hardware stack levels used:    1
 20712 ;; Hardware stack levels required when called:   15
 20713 ;; This function calls:
 20714 ;;		Nothing
 20715 ;; This function is called by:
 20716 ;;		_efgtoa
 20717 ;; This function uses a reentrant model
 20718 ;;
 20719                           
 20720                           	psect	text70
 20721  018FD2                     __ptext70:
 20722                           	opt callstack 0
 20723  018FD2                     ___fpclassifyf:
 20724                           	opt callstack 0
 20725                           
 20726                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20727  018FD2  0E06               	movlw	6
 20728  018FD4  26E1               	addwf	fsr1l,f,c
 20729  018FD6  0E00               	movlw	0
 20730  018FD8  22E2               	addwfc	fsr1h,f,c
 20731                           
 20732                           ;incstack = 0
 20733 ;; hardware stack exceeded
 20734  018FDA  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 20735  018FE0  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 20736  018FE6  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 20737  018FEC  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 20738                           
 20739                           ;stkvar	_u @ sp[(-6)+0]
 20740  018FF2  0EFA               	movlw	-6
 20741  018FF4  0060  F027  FFE3   	movff	btemp+8,plusw1
 20742  018FFA  0EFB               	movlw	-5
 20743  018FFC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20744  019002  0EFC               	movlw	-4
 20745  019004  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20746  01900A  0EFD               	movlw	-3
 20747  01900C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20748                           
 20749                           ;stkvar	_x @ sp[(-6)+-4]
 20750  019012  0EF6               	movlw	-10
 20751  019014  006F FF8C  F009    	movff	plusw1,btemp+8
 20752  01901A  0EF7               	movlw	-9
 20753  01901C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20754  019022  0EF8               	movlw	-8
 20755  019024  006F FF8C  F00B    	movff	plusw1,btemp+10
 20756  01902A  0EF9               	movlw	-7
 20757  01902C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20758                           
 20759                           ;stkvar	_u @ sp[(-6)+0]
 20760  019032  0EFA               	movlw	-6
 20761  019034  0060  F027  FFE3   	movff	btemp+8,plusw1
 20762  01903A  0EFB               	movlw	-5
 20763  01903C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20764  019042  0EFC               	movlw	-4
 20765  019044  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20766  01904A  0EFD               	movlw	-3
 20767  01904C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20768                           
 20769                           ;stkvar	_u @ sp[(-6)+0]
 20770  019052  0EFA               	movlw	-6
 20771  019054  006F FF8C  F009    	movff	plusw1,btemp+8
 20772  01905A  0EFB               	movlw	-5
 20773  01905C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20774  019062  0EFC               	movlw	-4
 20775  019064  006F FF8C  F00B    	movff	plusw1,btemp+10
 20776  01906A  0EFD               	movlw	-3
 20777  01906C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20778  019072  0E18               	movlw	24
 20779  019074  D005               	goto	u6240
 20780  019076                     u6245:
 20781  019076  90D8               	bcf	status,0,c
 20782  019078  320C               	rrcf	(btemp+11)^0,f,c
 20783  01907A  320B               	rrcf	(btemp+10)^0,f,c
 20784  01907C  320A               	rrcf	(btemp+9)^0,f,c
 20785  01907E  3209               	rrcf	(btemp+8)^0,f,c
 20786  019080                     u6240:
 20787  019080  2EE8               	decfsz	wreg,f,c
 20788  019082  D7F9               	goto	u6245
 20789  019084  0060  F024  F007   	movff	btemp+8,btemp+6
 20790  01908A  0060  F028  F008   	movff	btemp+9,btemp+7
 20791  019090  0EFF               	movlw	255
 20792  019092  1607               	andwf	(btemp+6)^0,f,c
 20793  019094  0E00               	movlw	0
 20794  019096  1608               	andwf	(btemp+7)^0,f,c
 20795                           
 20796                           ;stkvar	_e @ sp[(-6)+4]
 20797  019098  0EFE               	movlw	-2
 20798  01909A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20799  0190A0  0EFF               	movlw	-1
 20800  0190A2  0060  F023  FFE3   	movff	btemp+7,plusw1
 20801                           
 20802                           ;stkvar	_e @ sp[(-6)+4]
 20803  0190A8  0EFE               	movlw	-2
 20804  0190AA  006F FF8C  F001    	movff	plusw1,btemp
 20805  0190B0  0EFF               	movlw	-1
 20806  0190B2  50E3               	movf	plusw1,w,c
 20807  0190B4  1001               	iorwf	btemp^0,w,c
 20808  0190B6  A4D8               	btfss	status,2,c
 20809  0190B8  D023               	goto	l8375
 20810                           
 20811                           ;stkvar	_u @ sp[(-6)+0]
 20812  0190BA  0EFA               	movlw	-6
 20813  0190BC  006F FF8C  F009    	movff	plusw1,btemp+8
 20814  0190C2  0EFB               	movlw	-5
 20815  0190C4  006F FF8C  F00A    	movff	plusw1,btemp+9
 20816  0190CA  0EFC               	movlw	-4
 20817  0190CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20818  0190D2  0EFD               	movlw	-3
 20819  0190D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20820  0190DA  90D8               	bcf	status,0,c
 20821  0190DC  3409               	rlcf	(btemp+8)^0,w,c
 20822  0190DE  6E05               	movwf	(btemp+4)^0,c
 20823  0190E0  340A               	rlcf	(btemp+9)^0,w,c
 20824  0190E2  6E06               	movwf	(btemp+5)^0,c
 20825  0190E4  340B               	rlcf	(btemp+10)^0,w,c
 20826  0190E6  6E07               	movwf	(btemp+6)^0,c
 20827  0190E8  340C               	rlcf	(btemp+11)^0,w,c
 20828  0190EA  6E08               	movwf	(btemp+7)^0,c
 20829  0190EC  5005               	movf	(btemp+4)^0,w,c
 20830  0190EE  1006               	iorwf	(btemp+5)^0,w,c
 20831  0190F0  1007               	iorwf	(btemp+6)^0,w,c
 20832  0190F2  1008               	iorwf	(btemp+7)^0,w,c
 20833  0190F4  A4D8               	btfss	status,2,c
 20834  0190F6  D002               	goto	l8371
 20835  0190F8  0E02               	movlw	2
 20836  0190FA  D02E               	goto	L24
 20837  0190FC                     l8371:
 20838  0190FC  0E03               	movlw	3
 20839  0190FE  D02C               	goto	L24
 20840  019100                     l8375:
 20841                           
 20842                           ;stkvar	_e @ sp[(-6)+4]
 20843  019100  0EFE               	movlw	-2
 20844  019102  28E3               	incf	plusw1,w,c
 20845  019104  E128               	bnz	l8381
 20846  019106  0EFF               	movlw	-1
 20847  019108  50E3               	movf	plusw1,w,c
 20848  01910A  A4D8               	btfss	status,2,c
 20849  01910C  D024               	goto	l8381
 20850                           
 20851                           ;stkvar	_u @ sp[(-6)+0]
 20852  01910E  0EFA               	movlw	-6
 20853  019110  006F FF8C  F009    	movff	plusw1,btemp+8
 20854  019116  0EFB               	movlw	-5
 20855  019118  006F FF8C  F00A    	movff	plusw1,btemp+9
 20856  01911E  0EFC               	movlw	-4
 20857  019120  006F FF8C  F00B    	movff	plusw1,btemp+10
 20858  019126  0EFD               	movlw	-3
 20859  019128  006F FF8C  F00C    	movff	plusw1,btemp+11
 20860  01912E  0E09               	movlw	9
 20861  019130                     u6285:
 20862  019130  90D8               	bcf	status,0,c
 20863  019132  3609               	rlcf	(btemp+8)^0,f,c
 20864  019134  360A               	rlcf	(btemp+9)^0,f,c
 20865  019136  360B               	rlcf	(btemp+10)^0,f,c
 20866  019138  360C               	rlcf	(btemp+11)^0,f,c
 20867  01913A  2EE8               	decfsz	wreg,f,c
 20868  01913C  D7F9               	goto	u6285
 20869  01913E  5009               	movf	(btemp+8)^0,w,c
 20870  019140  100A               	iorwf	(btemp+9)^0,w,c
 20871  019142  100B               	iorwf	(btemp+10)^0,w,c
 20872  019144  100C               	iorwf	(btemp+11)^0,w,c
 20873  019146  A4D8               	btfss	status,2,c
 20874  019148  D002               	goto	u6290
 20875  01914A  0E01               	movlw	1
 20876  01914C  D001               	goto	u6300
 20877  01914E                     u6290:
 20878  01914E  0E00               	movlw	0
 20879  019150                     u6300:
 20880  019150  6E01               	movwf	btemp^0,c
 20881  019152  6A02               	clrf	(btemp+1)^0,c
 20882  019154  D004               	goto	l3199
 20883  019156                     l8381:
 20884  019156  0E04               	movlw	4
 20885  019158                     L24:
 20886  019158  6E01               	movwf	btemp^0,c
 20887  01915A  0E00               	movlw	0
 20888  01915C  6E02               	movwf	(btemp+1)^0,c
 20889  01915E                     l3199:
 20890                           
 20891                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 20892  01915E  0EF6               	movlw	246
 20893  019160  26E1               	addwf	fsr1l,f,c
 20894  019162  0EFF               	movlw	255
 20895  019164  22E2               	addwfc	fsr1h,f,c
 20896  019166  0012               	return		;funcret
 20897  019168                     __end_of___fpclassifyf:
 20898                           	opt callstack 0
 20899                           
 20900 ;; *************** function ___fltol *****************
 20901 ;; Defined at:
 20902 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 20903 ;; Parameters:    Size  Location     Type
 20904 ;;  f1              4  [STACK] int 
 20905 ;; Auto vars:     Size  Location     Type
 20906 ;;  exp1            1  [STACK] unsigned char 
 20907 ;;  sign1           1  [STACK] unsigned char 
 20908 ;; Return value:  Size  Location     Type
 20909 ;;                  4  [STACK] long 
 20910 ;; Registers used:
 20911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 20912 ;; Tracked objects:
 20913 ;;		On entry : 0/0
 20914 ;;		On exit  : 0/0
 20915 ;;		Unchanged: 0/0
 20916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20921 ;;Total ram usage:        0 bytes
 20922 ;; Hardware stack levels used:    1
 20923 ;; Hardware stack levels required when called:   15
 20924 ;; This function calls:
 20925 ;;		Nothing
 20926 ;; This function is called by:
 20927 ;;		_main
 20928 ;;		_convert_dac_raw
 20929 ;;		_calc_bsoc
 20930 ;;		_init_bsoc
 20931 ;;		_efgtoa
 20932 ;; This function uses a reentrant model
 20933 ;;
 20934                           
 20935                           	psect	text71
 20936  01946E                     __ptext71:
 20937                           	opt callstack 0
 20938  01946E                     ___fltol:
 20939                           	opt callstack 0
 20940                           
 20941                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20942  01946E  52E6               	movf	postinc1,f,c
 20943  019470  52E6               	movf	postinc1,f,c
 20944                           
 20945                           ;stkvar	_f1 @ sp[(-2)+-4]
 20946                           
 20947                           ;incstack = 0
 20948 ;; hardware stack exceeded
 20949  019472  0EFA               	movlw	-6
 20950  019474  006F FF8C  F009    	movff	plusw1,btemp+8
 20951  01947A  0EFB               	movlw	-5
 20952  01947C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20953  019482  0EFC               	movlw	-4
 20954  019484  006F FF8C  F00B    	movff	plusw1,btemp+10
 20955  01948A  0EFD               	movlw	-3
 20956  01948C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20957  019492  0E18               	movlw	24
 20958  019494  D005               	goto	u7450
 20959  019496                     u7455:
 20960  019496  90D8               	bcf	status,0,c
 20961  019498  320C               	rrcf	(btemp+11)^0,f,c
 20962  01949A  320B               	rrcf	(btemp+10)^0,f,c
 20963  01949C  320A               	rrcf	(btemp+9)^0,f,c
 20964  01949E  3209               	rrcf	(btemp+8)^0,f,c
 20965  0194A0                     u7450:
 20966  0194A0  2EE8               	decfsz	wreg,f,c
 20967  0194A2  D7F9               	goto	u7455
 20968                           
 20969                           ;stkvar	_exp1 @ sp[(-2)+0]
 20970  0194A4  0EFE               	movlw	-2
 20971  0194A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 20972  0194AC  0EFE               	movlw	-2
 20973  0194AE  50E3               	movf	plusw1,w,c
 20974  0194B0  A4D8               	btfss	status,2,c
 20975  0194B2  D006               	goto	l9001
 20976  0194B4                     u7460:
 20977  0194B4  0E00               	movlw	0
 20978  0194B6  6E01               	movwf	btemp^0,c
 20979  0194B8  6A02               	clrf	(btemp+1)^0,c
 20980  0194BA  6A03               	clrf	(btemp+2)^0,c
 20981  0194BC  6A04               	clrf	(btemp+3)^0,c
 20982  0194BE  D08B               	goto	l2815
 20983  0194C0                     l9001:
 20984                           
 20985                           ;stkvar	_f1 @ sp[(-2)+-4]
 20986  0194C0  0EFA               	movlw	-6
 20987  0194C2  006F FF8C  F009    	movff	plusw1,btemp+8
 20988  0194C8  0EFB               	movlw	-5
 20989  0194CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 20990  0194D0  0EFC               	movlw	-4
 20991  0194D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20992  0194D8  0EFD               	movlw	-3
 20993  0194DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20994  0194E0  0E20               	movlw	32
 20995  0194E2  D005               	goto	u7470
 20996  0194E4                     u7475:
 20997  0194E4  90D8               	bcf	status,0,c
 20998  0194E6  320C               	rrcf	(btemp+11)^0,f,c
 20999  0194E8  320B               	rrcf	(btemp+10)^0,f,c
 21000  0194EA  320A               	rrcf	(btemp+9)^0,f,c
 21001  0194EC  3209               	rrcf	(btemp+8)^0,f,c
 21002  0194EE                     u7470:
 21003  0194EE  2EE8               	decfsz	wreg,f,c
 21004  0194F0  D7F9               	goto	u7475
 21005                           
 21006                           ;stkvar	_sign1 @ sp[(-2)+1]
 21007  0194F2  0EFF               	movlw	-1
 21008  0194F4  0060  F027  FFE3   	movff	btemp+8,plusw1
 21009                           
 21010                           ;stkvar	_f1 @ sp[(-2)+-4]
 21011  0194FA  0EFC               	movlw	-4
 21012  0194FC  8EE3               	bsf	plusw1,7,c
 21013                           
 21014                           ;stkvar	_f1 @ sp[(-2)+-4]
 21015  0194FE  50E1               	movf	fsr1l,w,c
 21016  019500  0FFA               	addlw	-6
 21017  019502  6ED9               	movwf	fsr2l,c
 21018  019504  50E2               	movf	fsr1h,w,c
 21019  019506  6EDA               	movwf	fsr2h,c
 21020  019508  0EFF               	movlw	255
 21021  01950A  22DA               	addwfc	fsr2h,f,c
 21022  01950C  0EFF               	movlw	255
 21023  01950E  16DE               	andwf	postinc2,f,c
 21024  019510  0EFF               	movlw	255
 21025  019512  16DE               	andwf	postinc2,f,c
 21026  019514  0EFF               	movlw	255
 21027  019516  16DE               	andwf	postinc2,f,c
 21028  019518  0E00               	movlw	0
 21029  01951A  16DE               	andwf	postinc2,f,c
 21030                           
 21031                           ;stkvar	_exp1 @ sp[(-2)+0]
 21032  01951C  0EFE               	movlw	-2
 21033  01951E  006F FF8C  F001    	movff	plusw1,btemp
 21034  019524  0E96               	movlw	150
 21035  019526  5E01               	subwf	btemp^0,f,c
 21036  019528  0EFE               	movlw	-2
 21037  01952A  0060  F007  FFE3   	movff	btemp,plusw1
 21038                           
 21039                           ;stkvar	_exp1 @ sp[(-2)+0]
 21040  019530  0EFE               	movlw	-2
 21041  019532  AEE3               	btfss	plusw1,7,c
 21042  019534  D014               	goto	l9019
 21043                           
 21044                           ;stkvar	_exp1 @ sp[(-2)+0]
 21045  019536  0EFE               	movlw	-2
 21046  019538  50E3               	movf	plusw1,w,c
 21047  01953A  0A80               	xorlw	128
 21048  01953C  0F97               	addlw	151
 21049  01953E  A0D8               	btfss	status,0,c
 21050  019540  D7B9               	goto	u7460
 21051  019542                     l9017:
 21052                           
 21053                           ;stkvar	_f1 @ sp[(-2)+-4]
 21054  019542  90D8               	bcf	status,0,c
 21055  019544  0EFD               	movlw	-3
 21056  019546  32E3               	rrcf	plusw1,f,c
 21057  019548  0EFC               	movlw	-4
 21058  01954A  32E3               	rrcf	plusw1,f,c
 21059  01954C  0EFB               	movlw	-5
 21060  01954E  32E3               	rrcf	plusw1,f,c
 21061  019550  0EFA               	movlw	-6
 21062  019552  32E3               	rrcf	plusw1,f,c
 21063                           
 21064                           ;stkvar	_exp1 @ sp[(-2)+0]
 21065  019554  0EFE               	movlw	-2
 21066  019556  2AE3               	incf	plusw1,f,c
 21067  019558  B4D8               	btfsc	status,2,c
 21068  01955A  D018               	goto	u7520
 21069  01955C  D7F2               	goto	l9017
 21070  01955E                     l9019:
 21071                           
 21072                           ;stkvar	_exp1 @ sp[(-2)+0]
 21073  01955E  0EFE               	movlw	-2
 21074  019560  006F FF8C  F001    	movff	plusw1,btemp
 21075  019566  0E1F               	movlw	31
 21076  019568  6401               	cpfsgt	btemp^0,c
 21077  01956A  D00C               	goto	l9027
 21078  01956C  D7A3               	goto	u7460
 21079  01956E                     l9025:
 21080                           
 21081                           ;stkvar	_f1 @ sp[(-2)+-4]
 21082  01956E  90D8               	bcf	status,0,c
 21083  019570  0EFA               	movlw	-6
 21084  019572  36E3               	rlcf	plusw1,f,c
 21085  019574  0EFB               	movlw	-5
 21086  019576  36E3               	rlcf	plusw1,f,c
 21087  019578  0EFC               	movlw	-4
 21088  01957A  36E3               	rlcf	plusw1,f,c
 21089  01957C  0EFD               	movlw	-3
 21090  01957E  36E3               	rlcf	plusw1,f,c
 21091                           
 21092                           ;stkvar	_exp1 @ sp[(-2)+0]
 21093  019580  0EFE               	movlw	-2
 21094  019582  06E3               	decf	plusw1,f,c
 21095  019584                     l9027:
 21096                           
 21097                           ;stkvar	_exp1 @ sp[(-2)+0]
 21098  019584  0EFE               	movlw	-2
 21099  019586  50E3               	movf	plusw1,w,c
 21100  019588  A4D8               	btfss	status,2,c
 21101  01958A  D7F1               	goto	l9025
 21102  01958C                     u7520:
 21103                           
 21104                           ;stkvar	_sign1 @ sp[(-2)+1]
 21105  01958C  0EFF               	movlw	-1
 21106  01958E  50E3               	movf	plusw1,w,c
 21107  019590  B4D8               	btfsc	status,2,c
 21108  019592  D011               	goto	u7540
 21109                           
 21110                           ;stkvar	_f1 @ sp[(-2)+-4]
 21111                           ;stkvar	_f1 @ sp[(-2)+-4]
 21112  019594  0EFA               	movlw	-6
 21113  019596  6CE3               	negf	plusw1,c
 21114  019598  0EFB               	movlw	-5
 21115  01959A  1EE3               	comf	plusw1,f,c
 21116  01959C  0EFC               	movlw	-4
 21117  01959E  1EE3               	comf	plusw1,f,c
 21118  0195A0  0EFD               	movlw	-3
 21119  0195A2  1EE3               	comf	plusw1,f,c
 21120  0195A4  E308               	bnc	u7540
 21121  0195A6  0EFB               	movlw	-5
 21122  0195A8  2AE3               	incf	plusw1,f,c
 21123  0195AA  E305               	bnc	u7540
 21124  0195AC  0EFC               	movlw	-4
 21125  0195AE  2AE3               	incf	plusw1,f,c
 21126  0195B0  E302               	bnc	u7540
 21127  0195B2  0EFD               	movlw	-3
 21128  0195B4  2AE3               	incf	plusw1,f,c
 21129  0195B6                     u7540:
 21130                           
 21131                           ;stkvar	_f1 @ sp[(-2)+-4]
 21132  0195B6  0EFA               	movlw	-6
 21133  0195B8  006F FF8C  F001    	movff	plusw1,btemp
 21134  0195BE  0EFB               	movlw	-5
 21135  0195C0  006F FF8C  F002    	movff	plusw1,btemp+1
 21136  0195C6  0EFC               	movlw	-4
 21137  0195C8  006F FF8C  F003    	movff	plusw1,btemp+2
 21138  0195CE  0EFD               	movlw	-3
 21139  0195D0  006F FF8C  F004    	movff	plusw1,btemp+3
 21140  0195D6                     l2815:
 21141                           
 21142                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21143  0195D6  0EFA               	movlw	250
 21144  0195D8  26E1               	addwf	fsr1l,f,c
 21145  0195DA  0EFF               	movlw	255
 21146  0195DC  22E2               	addwfc	fsr1h,f,c
 21147  0195DE  0012               	return		;funcret
 21148  0195E0                     __end_of___fltol:
 21149                           	opt callstack 0
 21150                           
 21151 ;; *************** function ___flneg *****************
 21152 ;; Defined at:
 21153 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 21154 ;; Parameters:    Size  Location     Type
 21155 ;;  f1              4  [STACK] long 
 21156 ;; Auto vars:     Size  Location     Type
 21157 ;;		None
 21158 ;; Return value:  Size  Location     Type
 21159 ;;                  4  [STACK] long 
 21160 ;; Registers used:
 21161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 21162 ;; Tracked objects:
 21163 ;;		On entry : 0/0
 21164 ;;		On exit  : 0/0
 21165 ;;		Unchanged: 0/0
 21166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21171 ;;Total ram usage:        0 bytes
 21172 ;; Hardware stack levels used:    1
 21173 ;; Hardware stack levels required when called:   15
 21174 ;; This function calls:
 21175 ;;		Nothing
 21176 ;; This function is called by:
 21177 ;;		_calc_bsoc
 21178 ;;		_efgtoa
 21179 ;; This function uses a reentrant model
 21180 ;;
 21181                           
 21182                           	psect	text72
 21183  01BE22                     __ptext72:
 21184                           	opt callstack 0
 21185  01BE22                     ___flneg:
 21186                           	opt callstack 0
 21187                           
 21188                           ;stkvar	_f1 @ sp[(0)+-4]
 21189                           
 21190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21191                           ;incstack = 0
 21192 ;; hardware stack exceeded
 21193  01BE22  0EFC               	movlw	-4
 21194  01BE24  50E3               	movf	plusw1,w,c
 21195  01BE26  E10A               	bnz	u7440
 21196  01BE28  0EFD               	movlw	-3
 21197  01BE2A  50E3               	movf	plusw1,w,c
 21198  01BE2C  E107               	bnz	u7440
 21199  01BE2E  0EFE               	movlw	-2
 21200  01BE30  50E3               	movf	plusw1,w,c
 21201  01BE32  E104               	bnz	u7440
 21202  01BE34  0EFF               	movlw	-1
 21203  01BE36  50E3               	movf	plusw1,w,c
 21204  01BE38  B4D8               	btfsc	status,2,c
 21205  01BE3A  D002               	goto	l8991
 21206  01BE3C                     u7440:
 21207                           
 21208                           ;stkvar	_f1 @ sp[(0)+-4]
 21209  01BE3C  0EFF               	movlw	-1
 21210  01BE3E  7EE3               	btg	plusw1,7,c
 21211  01BE40                     l8991:
 21212                           
 21213                           ;stkvar	_f1 @ sp[(0)+-4]
 21214  01BE40  0EFC               	movlw	-4
 21215  01BE42  006F FF8C  F001    	movff	plusw1,btemp
 21216  01BE48  0EFD               	movlw	-3
 21217  01BE4A  006F FF8C  F002    	movff	plusw1,btemp+1
 21218  01BE50  0EFE               	movlw	-2
 21219  01BE52  006F FF8C  F003    	movff	plusw1,btemp+2
 21220  01BE58  0EFF               	movlw	-1
 21221  01BE5A  006F FF8C  F004    	movff	plusw1,btemp+3
 21222                           
 21223                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21224  01BE60  52E5               	movf	postdec1,f,c
 21225  01BE62  52E5               	movf	postdec1,f,c
 21226  01BE64  52E5               	movf	postdec1,f,c
 21227  01BE66  52E5               	movf	postdec1,f,c
 21228  01BE68  0012               	return		;funcret
 21229  01BE6A                     __end_of___flneg:
 21230                           	opt callstack 0
 21231                           
 21232 ;; *************** function ___fleq *****************
 21233 ;; Defined at:
 21234 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 21235 ;; Parameters:    Size  Location     Type
 21236 ;;  ff1             4  [STACK] long 
 21237 ;;  ff2             4  [STACK] long 
 21238 ;; Auto vars:     Size  Location     Type
 21239 ;;		None
 21240 ;; Return value:  Size  Location     Type
 21241 ;;		None               void
 21242 ;; Registers used:
 21243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21244 ;; Tracked objects:
 21245 ;;		On entry : 0/0
 21246 ;;		On exit  : 0/0
 21247 ;;		Unchanged: 0/0
 21248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21253 ;;Total ram usage:        0 bytes
 21254 ;; Hardware stack levels used:    1
 21255 ;; Hardware stack levels required when called:   15
 21256 ;; This function calls:
 21257 ;;		Nothing
 21258 ;; This function is called by:
 21259 ;;		_efgtoa
 21260 ;; This function uses a reentrant model
 21261 ;;
 21262                           
 21263                           	psect	text73
 21264  01AB6C                     __ptext73:
 21265                           	opt callstack 0
 21266  01AB6C                     ___fleq:
 21267                           	opt callstack 0
 21268                           
 21269                           ;stkvar	_ff1 @ sp[(0)+-4]
 21270                           
 21271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21272                           ;incstack = 0
 21273 ;; hardware stack exceeded
 21274  01AB6C  50E1               	movf	fsr1l,w,c
 21275  01AB6E  0FFC               	addlw	-4
 21276  01AB70  6ED9               	movwf	fsr2l,c
 21277  01AB72  50E2               	movf	fsr1h,w,c
 21278  01AB74  6EDA               	movwf	fsr2h,c
 21279  01AB76  0EFF               	movlw	255
 21280  01AB78  22DA               	addwfc	fsr2h,f,c
 21281  01AB7A  0E00               	movlw	0
 21282  01AB7C  14DE               	andwf	postinc2,w,c
 21283  01AB7E  6E09               	movwf	(btemp+8)^0,c
 21284  01AB80  0E00               	movlw	0
 21285  01AB82  14DE               	andwf	postinc2,w,c
 21286  01AB84  6E0A               	movwf	(btemp+9)^0,c
 21287  01AB86  0E80               	movlw	128
 21288  01AB88  14DE               	andwf	postinc2,w,c
 21289  01AB8A  6E0B               	movwf	(btemp+10)^0,c
 21290  01AB8C  0E7F               	movlw	127
 21291  01AB8E  14DE               	andwf	postinc2,w,c
 21292  01AB90  6E0C               	movwf	(btemp+11)^0,c
 21293  01AB92  5009               	movf	(btemp+8)^0,w,c
 21294  01AB94  100A               	iorwf	(btemp+9)^0,w,c
 21295  01AB96  100B               	iorwf	(btemp+10)^0,w,c
 21296  01AB98  100C               	iorwf	(btemp+11)^0,w,c
 21297  01AB9A  A4D8               	btfss	status,2,c
 21298  01AB9C  D008               	goto	l8949
 21299                           
 21300                           ;stkvar	_ff1 @ sp[(0)+-4]
 21301  01AB9E  0EFC               	movlw	-4
 21302  01ABA0  6AE3               	clrf	plusw1,c
 21303  01ABA2  0EFD               	movlw	-3
 21304  01ABA4  6AE3               	clrf	plusw1,c
 21305  01ABA6  0EFE               	movlw	-2
 21306  01ABA8  6AE3               	clrf	plusw1,c
 21307  01ABAA  0EFF               	movlw	-1
 21308  01ABAC  6AE3               	clrf	plusw1,c
 21309  01ABAE                     l8949:
 21310                           
 21311                           ;stkvar	_ff2 @ sp[(0)+-8]
 21312  01ABAE  50E1               	movf	fsr1l,w,c
 21313  01ABB0  0FF8               	addlw	-8
 21314  01ABB2  6ED9               	movwf	fsr2l,c
 21315  01ABB4  50E2               	movf	fsr1h,w,c
 21316  01ABB6  6EDA               	movwf	fsr2h,c
 21317  01ABB8  0EFF               	movlw	255
 21318  01ABBA  22DA               	addwfc	fsr2h,f,c
 21319  01ABBC  0E00               	movlw	0
 21320  01ABBE  14DE               	andwf	postinc2,w,c
 21321  01ABC0  6E09               	movwf	(btemp+8)^0,c
 21322  01ABC2  0E00               	movlw	0
 21323  01ABC4  14DE               	andwf	postinc2,w,c
 21324  01ABC6  6E0A               	movwf	(btemp+9)^0,c
 21325  01ABC8  0E80               	movlw	128
 21326  01ABCA  14DE               	andwf	postinc2,w,c
 21327  01ABCC  6E0B               	movwf	(btemp+10)^0,c
 21328  01ABCE  0E7F               	movlw	127
 21329  01ABD0  14DE               	andwf	postinc2,w,c
 21330  01ABD2  6E0C               	movwf	(btemp+11)^0,c
 21331  01ABD4  5009               	movf	(btemp+8)^0,w,c
 21332  01ABD6  100A               	iorwf	(btemp+9)^0,w,c
 21333  01ABD8  100B               	iorwf	(btemp+10)^0,w,c
 21334  01ABDA  100C               	iorwf	(btemp+11)^0,w,c
 21335  01ABDC  A4D8               	btfss	status,2,c
 21336  01ABDE  D008               	goto	l8953
 21337                           
 21338                           ;stkvar	_ff2 @ sp[(0)+-8]
 21339  01ABE0  0EF8               	movlw	-8
 21340  01ABE2  6AE3               	clrf	plusw1,c
 21341  01ABE4  0EF9               	movlw	-7
 21342  01ABE6  6AE3               	clrf	plusw1,c
 21343  01ABE8  0EFA               	movlw	-6
 21344  01ABEA  6AE3               	clrf	plusw1,c
 21345  01ABEC  0EFB               	movlw	-5
 21346  01ABEE  6AE3               	clrf	plusw1,c
 21347  01ABF0                     l8953:
 21348                           
 21349                           ;stkvar	_ff2 @ sp[(0)+-8]
 21350                           ;stkvar	_ff1 @ sp[(0)+-4]
 21351  01ABF0  50E1               	movf	fsr1l,w,c
 21352  01ABF2  0FFC               	addlw	-4
 21353  01ABF4  6ED9               	movwf	fsr2l,c
 21354  01ABF6  50E2               	movf	fsr1h,w,c
 21355  01ABF8  6EDA               	movwf	fsr2h,c
 21356  01ABFA  0EFF               	movlw	255
 21357  01ABFC  22DA               	addwfc	fsr2h,f,c
 21358  01ABFE  0EF8               	movlw	-8
 21359  01AC00  50E3               	movf	plusw1,w,c
 21360  01AC02  18DE               	xorwf	postinc2,w,c
 21361  01AC04  E10D               	bnz	u7380
 21362  01AC06  0EF9               	movlw	-7
 21363  01AC08  50E3               	movf	plusw1,w,c
 21364  01AC0A  18DE               	xorwf	postinc2,w,c
 21365  01AC0C  E109               	bnz	u7380
 21366  01AC0E  0EFA               	movlw	-6
 21367  01AC10  50E3               	movf	plusw1,w,c
 21368  01AC12  18DE               	xorwf	postinc2,w,c
 21369  01AC14  E105               	bnz	u7380
 21370  01AC16  0EFB               	movlw	-5
 21371  01AC18  50E3               	movf	plusw1,w,c
 21372  01AC1A  18DE               	xorwf	postinc2,w,c
 21373  01AC1C  B4D8               	btfsc	status,2,c
 21374  01AC1E  D002               	goto	l8957
 21375  01AC20                     u7380:
 21376  01AC20  9001               	bcf	btemp& (0+255),0,c
 21377  01AC22  D001               	goto	l2777
 21378  01AC24                     l8957:
 21379  01AC24  8001               	bsf	btemp& (0+255),0,c
 21380  01AC26                     l2777:
 21381                           
 21382                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 21383  01AC26  0EF8               	movlw	248
 21384  01AC28  26E1               	addwf	fsr1l,f,c
 21385  01AC2A  0EFF               	movlw	255
 21386  01AC2C  22E2               	addwfc	fsr1h,f,c
 21387  01AC2E  0012               	return		;funcret
 21388  01AC30                     __end_of___fleq:
 21389                           	opt callstack 0
 21390                           
 21391 ;; *************** function ___awmod *****************
 21392 ;; Defined at:
 21393 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 21394 ;; Parameters:    Size  Location     Type
 21395 ;;  dividend        2  [STACK] int 
 21396 ;;  divisor         2  [STACK] int 
 21397 ;; Auto vars:     Size  Location     Type
 21398 ;;  sign            1  [STACK] unsigned char 
 21399 ;;  counter         1  [STACK] unsigned char 
 21400 ;; Return value:  Size  Location     Type
 21401 ;;                  2  [STACK] int 
 21402 ;; Registers used:
 21403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21404 ;; Tracked objects:
 21405 ;;		On entry : 0/0
 21406 ;;		On exit  : 0/0
 21407 ;;		Unchanged: 0/0
 21408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21413 ;;Total ram usage:        0 bytes
 21414 ;; Hardware stack levels used:    1
 21415 ;; Hardware stack levels required when called:   15
 21416 ;; This function calls:
 21417 ;;		Nothing
 21418 ;; This function is called by:
 21419 ;;		_efgtoa
 21420 ;; This function uses a reentrant model
 21421 ;;
 21422                           
 21423                           	psect	text74
 21424  01A118                     __ptext74:
 21425                           	opt callstack 0
 21426  01A118                     ___awmod:
 21427                           	opt callstack 0
 21428                           
 21429                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21430  01A118  52E6               	movf	postinc1,f,c
 21431  01A11A  52E6               	movf	postinc1,f,c
 21432                           
 21433                           ;stkvar	_sign @ sp[(-2)+0]
 21434                           
 21435                           ;incstack = 0
 21436 ;; hardware stack exceeded
 21437  01A11C  0EFE               	movlw	-2
 21438  01A11E  6AE3               	clrf	plusw1,c
 21439                           
 21440                           ;stkvar	_dividend @ sp[(-2)+-2]
 21441  01A120  0EFD               	movlw	-3
 21442  01A122  AEE3               	btfss	plusw1,7,c
 21443  01A124  D009               	goto	l8915
 21444                           
 21445                           ;stkvar	_dividend @ sp[(-2)+-2]
 21446                           ;stkvar	_dividend @ sp[(-2)+-2]
 21447  01A126  0EFC               	movlw	-4
 21448  01A128  6CE3               	negf	plusw1,c
 21449  01A12A  0EFD               	movlw	-3
 21450  01A12C  1EE3               	comf	plusw1,f,c
 21451  01A12E  B0D8               	btfsc	status,0,c
 21452  01A130  2AE3               	incf	plusw1,f,c
 21453                           
 21454                           ;stkvar	_sign @ sp[(-2)+0]
 21455  01A132  0EFE               	movlw	-2
 21456  01A134  6AE3               	clrf	plusw1,c
 21457  01A136  2AE3               	incf	plusw1,f,c
 21458  01A138                     l8915:
 21459                           
 21460                           ;stkvar	_divisor @ sp[(-2)+-4]
 21461  01A138  0EFB               	movlw	-5
 21462  01A13A  AEE3               	btfss	plusw1,7,c
 21463  01A13C  D006               	goto	l8919
 21464                           
 21465                           ;stkvar	_divisor @ sp[(-2)+-4]
 21466                           ;stkvar	_divisor @ sp[(-2)+-4]
 21467  01A13E  0EFA               	movlw	-6
 21468  01A140  6CE3               	negf	plusw1,c
 21469  01A142  0EFB               	movlw	-5
 21470  01A144  1EE3               	comf	plusw1,f,c
 21471  01A146  B0D8               	btfsc	status,0,c
 21472  01A148  2AE3               	incf	plusw1,f,c
 21473  01A14A                     l8919:
 21474                           
 21475                           ;stkvar	_divisor @ sp[(-2)+-4]
 21476  01A14A  0EFA               	movlw	-6
 21477  01A14C  006F FF8C  F001    	movff	plusw1,btemp
 21478  01A152  0EFB               	movlw	-5
 21479  01A154  50E3               	movf	plusw1,w,c
 21480  01A156  1001               	iorwf	btemp^0,w,c
 21481  01A158  B4D8               	btfsc	status,2,c
 21482  01A15A  D053               	goto	u7340
 21483                           
 21484                           ;stkvar	_counter @ sp[(-2)+1]
 21485  01A15C  0EFF               	movlw	-1
 21486  01A15E  6AE3               	clrf	plusw1,c
 21487  01A160  D012               	goto	L25
 21488  01A162                     l8923:
 21489                           
 21490                           ;stkvar	_divisor @ sp[(-2)+-4]
 21491  01A162  0EFA               	movlw	-6
 21492  01A164  50E3               	movf	plusw1,w,c
 21493  01A166  90D8               	bcf	status,0,c
 21494  01A168  34E8               	rlcf	wreg,w,c
 21495  01A16A  6E01               	movwf	btemp^0,c
 21496  01A16C  0EFA               	movlw	-6
 21497  01A16E  0060  F007  FFE3   	movff	btemp,plusw1
 21498  01A174  0EFB               	movlw	-5
 21499  01A176  50E3               	movf	plusw1,w,c
 21500  01A178  34E8               	rlcf	wreg,w,c
 21501  01A17A  6E01               	movwf	btemp^0,c
 21502  01A17C  0EFB               	movlw	-5
 21503  01A17E  0060  F007  FFE3   	movff	btemp,plusw1
 21504                           
 21505                           ;stkvar	_counter @ sp[(-2)+1]
 21506  01A184  0EFF               	movlw	-1
 21507  01A186                     L25:
 21508  01A186  2AE3               	incf	plusw1,f,c
 21509                           
 21510                           ;stkvar	_divisor @ sp[(-2)+-4]
 21511  01A188  0EFB               	movlw	-5
 21512  01A18A  AEE3               	btfss	plusw1,7,c
 21513  01A18C  D7EA               	goto	l8923
 21514  01A18E                     u7320:
 21515                           
 21516                           ;stkvar	_divisor @ sp[(-2)+-4]
 21517  01A18E  0EFA               	movlw	-6
 21518  01A190  006F FF8C  F00B    	movff	plusw1,btemp+10
 21519  01A196  0EFB               	movlw	-5
 21520  01A198  006F FF8C  F00C    	movff	plusw1,btemp+11
 21521                           
 21522                           ;stkvar	_dividend @ sp[(-2)+-2]
 21523  01A19E  0EFC               	movlw	-4
 21524  01A1A0  006F FF8C  F009    	movff	plusw1,btemp+8
 21525  01A1A6  0EFD               	movlw	-3
 21526  01A1A8  006F FF8C  F00A    	movff	plusw1,btemp+9
 21527  01A1AE  500B               	movf	(btemp+10)^0,w,c
 21528  01A1B0  5C09               	subwf	(btemp+8)^0,w,c
 21529  01A1B2  500C               	movf	(btemp+11)^0,w,c
 21530  01A1B4  580A               	subwfb	(btemp+9)^0,w,c
 21531  01A1B6  A0D8               	btfss	status,0,c
 21532  01A1B8  D014               	goto	l8933
 21533                           
 21534                           ;stkvar	_divisor @ sp[(-2)+-4]
 21535                           ;stkvar	_dividend @ sp[(-2)+-2]
 21536  01A1BA  0EFC               	movlw	-4
 21537  01A1BC  50E3               	movf	plusw1,w,c
 21538  01A1BE  6E01               	movwf	btemp^0,c
 21539  01A1C0  0EFA               	movlw	-6
 21540  01A1C2  50E3               	movf	plusw1,w,c
 21541  01A1C4  5E01               	subwf	btemp^0,f,c
 21542  01A1C6  0EFC               	movlw	-4
 21543  01A1C8  0060  F007  FFE3   	movff	btemp,plusw1
 21544  01A1CE  0EFD               	movlw	-3
 21545  01A1D0  50E3               	movf	plusw1,w,c
 21546  01A1D2  6E01               	movwf	btemp^0,c
 21547  01A1D4  0EFB               	movlw	-5
 21548  01A1D6  50E3               	movf	plusw1,w,c
 21549  01A1D8  5A01               	subwfb	btemp^0,f,c
 21550  01A1DA  0EFD               	movlw	-3
 21551  01A1DC  0060  F007  FFE3   	movff	btemp,plusw1
 21552  01A1E2                     l8933:
 21553                           
 21554                           ;stkvar	_divisor @ sp[(-2)+-4]
 21555  01A1E2  90D8               	bcf	status,0,c
 21556  01A1E4  0EFB               	movlw	-5
 21557  01A1E6  32E3               	rrcf	plusw1,f,c
 21558  01A1E8  0EFA               	movlw	-6
 21559  01A1EA  32E3               	rrcf	plusw1,f,c
 21560                           
 21561                           ;stkvar	_counter @ sp[(-2)+1]
 21562  01A1EC  0EFF               	movlw	-1
 21563  01A1EE  50E3               	movf	plusw1,w,c
 21564  01A1F0  6E01               	movwf	btemp^0,c
 21565  01A1F2  0E01               	movlw	1
 21566  01A1F4  5E01               	subwf	btemp^0,f,c
 21567  01A1F6  0EFF               	movlw	-1
 21568  01A1F8  0060  F007  FFE3   	movff	btemp,plusw1
 21569  01A1FE  A4D8               	btfss	status,2,c
 21570  01A200  D7C6               	goto	u7320
 21571  01A202                     u7340:
 21572                           
 21573                           ;stkvar	_sign @ sp[(-2)+0]
 21574  01A202  0EFE               	movlw	-2
 21575  01A204  50E3               	movf	plusw1,w,c
 21576  01A206  B4D8               	btfsc	status,2,c
 21577  01A208  D006               	goto	l8941
 21578                           
 21579                           ;stkvar	_dividend @ sp[(-2)+-2]
 21580                           ;stkvar	_dividend @ sp[(-2)+-2]
 21581  01A20A  0EFC               	movlw	-4
 21582  01A20C  6CE3               	negf	plusw1,c
 21583  01A20E  0EFD               	movlw	-3
 21584  01A210  1EE3               	comf	plusw1,f,c
 21585  01A212  B0D8               	btfsc	status,0,c
 21586  01A214  2AE3               	incf	plusw1,f,c
 21587  01A216                     l8941:
 21588                           
 21589                           ;stkvar	_dividend @ sp[(-2)+-2]
 21590  01A216  0EFC               	movlw	-4
 21591  01A218  006F FF8C  F001    	movff	plusw1,btemp
 21592  01A21E  0EFD               	movlw	-3
 21593  01A220  006F FF8C  F002    	movff	plusw1,btemp+1
 21594                           
 21595                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21596  01A226  0EFA               	movlw	250
 21597  01A228  26E1               	addwf	fsr1l,f,c
 21598  01A22A  0EFF               	movlw	255
 21599  01A22C  22E2               	addwfc	fsr1h,f,c
 21600  01A22E  0012               	return		;funcret
 21601  01A230                     __end_of___awmod:
 21602                           	opt callstack 0
 21603                           
 21604 ;; *************** function ___awdiv *****************
 21605 ;; Defined at:
 21606 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 21607 ;; Parameters:    Size  Location     Type
 21608 ;;  dividend        2  [STACK] int 
 21609 ;;  divisor         2  [STACK] int 
 21610 ;; Auto vars:     Size  Location     Type
 21611 ;;  quotient        2  [STACK] int 
 21612 ;;  sign            1  [STACK] unsigned char 
 21613 ;;  counter         1  [STACK] unsigned char 
 21614 ;; Return value:  Size  Location     Type
 21615 ;;                  2  [STACK] int 
 21616 ;; Registers used:
 21617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21618 ;; Tracked objects:
 21619 ;;		On entry : 0/0
 21620 ;;		On exit  : 0/0
 21621 ;;		Unchanged: 0/0
 21622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21627 ;;Total ram usage:        0 bytes
 21628 ;; Hardware stack levels used:    1
 21629 ;; Hardware stack levels required when called:   15
 21630 ;; This function calls:
 21631 ;;		Nothing
 21632 ;; This function is called by:
 21633 ;;		_efgtoa
 21634 ;; This function uses a reentrant model
 21635 ;;
 21636                           
 21637                           	psect	text75
 21638  0198A6                     __ptext75:
 21639                           	opt callstack 0
 21640  0198A6                     ___awdiv:
 21641                           	opt callstack 0
 21642                           
 21643                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21644  0198A6  52E6               	movf	postinc1,f,c
 21645  0198A8  52E6               	movf	postinc1,f,c
 21646  0198AA  52E6               	movf	postinc1,f,c
 21647  0198AC  52E6               	movf	postinc1,f,c
 21648                           
 21649                           ;stkvar	_sign @ sp[(-4)+2]
 21650                           
 21651                           ;incstack = 0
 21652 ;; hardware stack exceeded
 21653  0198AE  0EFE               	movlw	-2
 21654  0198B0  6AE3               	clrf	plusw1,c
 21655                           
 21656                           ;stkvar	_divisor @ sp[(-4)+-4]
 21657  0198B2  0EF9               	movlw	-7
 21658  0198B4  AEE3               	btfss	plusw1,7,c
 21659  0198B6  D009               	goto	l8869
 21660                           
 21661                           ;stkvar	_divisor @ sp[(-4)+-4]
 21662                           ;stkvar	_divisor @ sp[(-4)+-4]
 21663  0198B8  0EF8               	movlw	-8
 21664  0198BA  6CE3               	negf	plusw1,c
 21665  0198BC  0EF9               	movlw	-7
 21666  0198BE  1EE3               	comf	plusw1,f,c
 21667  0198C0  B0D8               	btfsc	status,0,c
 21668  0198C2  2AE3               	incf	plusw1,f,c
 21669                           
 21670                           ;stkvar	_sign @ sp[(-4)+2]
 21671  0198C4  0EFE               	movlw	-2
 21672  0198C6  6AE3               	clrf	plusw1,c
 21673  0198C8  2AE3               	incf	plusw1,f,c
 21674  0198CA                     l8869:
 21675                           
 21676                           ;stkvar	_dividend @ sp[(-4)+-2]
 21677  0198CA  0EFB               	movlw	-5
 21678  0198CC  AEE3               	btfss	plusw1,7,c
 21679  0198CE  D008               	goto	l8875
 21680                           
 21681                           ;stkvar	_dividend @ sp[(-4)+-2]
 21682                           ;stkvar	_dividend @ sp[(-4)+-2]
 21683  0198D0  0EFA               	movlw	-6
 21684  0198D2  6CE3               	negf	plusw1,c
 21685  0198D4  0EFB               	movlw	-5
 21686  0198D6  1EE3               	comf	plusw1,f,c
 21687  0198D8  B0D8               	btfsc	status,0,c
 21688  0198DA  2AE3               	incf	plusw1,f,c
 21689                           
 21690                           ;stkvar	_sign @ sp[(-4)+2]
 21691  0198DC  0EFE               	movlw	-2
 21692  0198DE  70E3               	btg	plusw1,0,c
 21693  0198E0                     l8875:
 21694                           
 21695                           ;stkvar	_quotient @ sp[(-4)+0]
 21696  0198E0  0EFC               	movlw	-4
 21697  0198E2  6AE3               	clrf	plusw1,c
 21698  0198E4  0EFD               	movlw	-3
 21699  0198E6  6AE3               	clrf	plusw1,c
 21700                           
 21701                           ;stkvar	_divisor @ sp[(-4)+-4]
 21702  0198E8  0EF8               	movlw	-8
 21703  0198EA  006F FF8C  F001    	movff	plusw1,btemp
 21704  0198F0  0EF9               	movlw	-7
 21705  0198F2  50E3               	movf	plusw1,w,c
 21706  0198F4  1001               	iorwf	btemp^0,w,c
 21707  0198F6  B4D8               	btfsc	status,2,c
 21708  0198F8  D066               	goto	u7270
 21709                           
 21710                           ;stkvar	_counter @ sp[(-4)+3]
 21711  0198FA  0EFF               	movlw	-1
 21712  0198FC  6AE3               	clrf	plusw1,c
 21713  0198FE  D012               	goto	L26
 21714  019900                     l8881:
 21715                           
 21716                           ;stkvar	_divisor @ sp[(-4)+-4]
 21717  019900  0EF8               	movlw	-8
 21718  019902  50E3               	movf	plusw1,w,c
 21719  019904  90D8               	bcf	status,0,c
 21720  019906  34E8               	rlcf	wreg,w,c
 21721  019908  6E01               	movwf	btemp^0,c
 21722  01990A  0EF8               	movlw	-8
 21723  01990C  0060  F007  FFE3   	movff	btemp,plusw1
 21724  019912  0EF9               	movlw	-7
 21725  019914  50E3               	movf	plusw1,w,c
 21726  019916  34E8               	rlcf	wreg,w,c
 21727  019918  6E01               	movwf	btemp^0,c
 21728  01991A  0EF9               	movlw	-7
 21729  01991C  0060  F007  FFE3   	movff	btemp,plusw1
 21730                           
 21731                           ;stkvar	_counter @ sp[(-4)+3]
 21732  019922  0EFF               	movlw	-1
 21733  019924                     L26:
 21734  019924  2AE3               	incf	plusw1,f,c
 21735                           
 21736                           ;stkvar	_divisor @ sp[(-4)+-4]
 21737  019926  0EF9               	movlw	-7
 21738  019928  AEE3               	btfss	plusw1,7,c
 21739  01992A  D7EA               	goto	l8881
 21740  01992C                     u7250:
 21741                           
 21742                           ;stkvar	_quotient @ sp[(-4)+0]
 21743  01992C  0EFC               	movlw	-4
 21744  01992E  50E3               	movf	plusw1,w,c
 21745  019930  90D8               	bcf	status,0,c
 21746  019932  34E8               	rlcf	wreg,w,c
 21747  019934  6E01               	movwf	btemp^0,c
 21748  019936  0EFC               	movlw	-4
 21749  019938  0060  F007  FFE3   	movff	btemp,plusw1
 21750  01993E  0EFD               	movlw	-3
 21751  019940  50E3               	movf	plusw1,w,c
 21752  019942  34E8               	rlcf	wreg,w,c
 21753  019944  6E01               	movwf	btemp^0,c
 21754  019946  0EFD               	movlw	-3
 21755  019948  0060  F007  FFE3   	movff	btemp,plusw1
 21756                           
 21757                           ;stkvar	_divisor @ sp[(-4)+-4]
 21758  01994E  0EF8               	movlw	-8
 21759  019950  006F FF8C  F00B    	movff	plusw1,btemp+10
 21760  019956  0EF9               	movlw	-7
 21761  019958  006F FF8C  F00C    	movff	plusw1,btemp+11
 21762                           
 21763                           ;stkvar	_dividend @ sp[(-4)+-2]
 21764  01995E  0EFA               	movlw	-6
 21765  019960  006F FF8C  F009    	movff	plusw1,btemp+8
 21766  019966  0EFB               	movlw	-5
 21767  019968  006F FF8C  F00A    	movff	plusw1,btemp+9
 21768  01996E  500B               	movf	(btemp+10)^0,w,c
 21769  019970  5C09               	subwf	(btemp+8)^0,w,c
 21770  019972  500C               	movf	(btemp+11)^0,w,c
 21771  019974  580A               	subwfb	(btemp+9)^0,w,c
 21772  019976  A0D8               	btfss	status,0,c
 21773  019978  D016               	goto	l8895
 21774                           
 21775                           ;stkvar	_divisor @ sp[(-4)+-4]
 21776                           ;stkvar	_dividend @ sp[(-4)+-2]
 21777  01997A  0EFA               	movlw	-6
 21778  01997C  50E3               	movf	plusw1,w,c
 21779  01997E  6E01               	movwf	btemp^0,c
 21780  019980  0EF8               	movlw	-8
 21781  019982  50E3               	movf	plusw1,w,c
 21782  019984  5E01               	subwf	btemp^0,f,c
 21783  019986  0EFA               	movlw	-6
 21784  019988  0060  F007  FFE3   	movff	btemp,plusw1
 21785  01998E  0EFB               	movlw	-5
 21786  019990  50E3               	movf	plusw1,w,c
 21787  019992  6E01               	movwf	btemp^0,c
 21788  019994  0EF9               	movlw	-7
 21789  019996  50E3               	movf	plusw1,w,c
 21790  019998  5A01               	subwfb	btemp^0,f,c
 21791  01999A  0EFB               	movlw	-5
 21792  01999C  0060  F007  FFE3   	movff	btemp,plusw1
 21793                           
 21794                           ;stkvar	_quotient @ sp[(-4)+0]
 21795  0199A2  0EFC               	movlw	-4
 21796  0199A4  80E3               	bsf	plusw1,0,c
 21797  0199A6                     l8895:
 21798                           
 21799                           ;stkvar	_divisor @ sp[(-4)+-4]
 21800  0199A6  90D8               	bcf	status,0,c
 21801  0199A8  0EF9               	movlw	-7
 21802  0199AA  32E3               	rrcf	plusw1,f,c
 21803  0199AC  0EF8               	movlw	-8
 21804  0199AE  32E3               	rrcf	plusw1,f,c
 21805                           
 21806                           ;stkvar	_counter @ sp[(-4)+3]
 21807  0199B0  0EFF               	movlw	-1
 21808  0199B2  50E3               	movf	plusw1,w,c
 21809  0199B4  6E01               	movwf	btemp^0,c
 21810  0199B6  0E01               	movlw	1
 21811  0199B8  5E01               	subwf	btemp^0,f,c
 21812  0199BA  0EFF               	movlw	-1
 21813  0199BC  0060  F007  FFE3   	movff	btemp,plusw1
 21814  0199C2  A4D8               	btfss	status,2,c
 21815  0199C4  D7B3               	goto	u7250
 21816  0199C6                     u7270:
 21817                           
 21818                           ;stkvar	_sign @ sp[(-4)+2]
 21819  0199C6  0EFE               	movlw	-2
 21820  0199C8  50E3               	movf	plusw1,w,c
 21821  0199CA  B4D8               	btfsc	status,2,c
 21822  0199CC  D006               	goto	l8903
 21823                           
 21824                           ;stkvar	_quotient @ sp[(-4)+0]
 21825                           ;stkvar	_quotient @ sp[(-4)+0]
 21826  0199CE  0EFC               	movlw	-4
 21827  0199D0  6CE3               	negf	plusw1,c
 21828  0199D2  0EFD               	movlw	-3
 21829  0199D4  1EE3               	comf	plusw1,f,c
 21830  0199D6  B0D8               	btfsc	status,0,c
 21831  0199D8  2AE3               	incf	plusw1,f,c
 21832  0199DA                     l8903:
 21833                           
 21834                           ;stkvar	_quotient @ sp[(-4)+0]
 21835  0199DA  0EFC               	movlw	-4
 21836  0199DC  006F FF8C  F001    	movff	plusw1,btemp
 21837  0199E2  0EFD               	movlw	-3
 21838  0199E4  006F FF8C  F002    	movff	plusw1,btemp+1
 21839                           
 21840                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21841  0199EA  0EF8               	movlw	248
 21842  0199EC  26E1               	addwf	fsr1l,f,c
 21843  0199EE  0EFF               	movlw	255
 21844  0199F0  22E2               	addwfc	fsr1h,f,c
 21845  0199F2  0012               	return		;funcret
 21846  0199F4                     __end_of___awdiv:
 21847                           	opt callstack 0
 21848                           
 21849 ;; *************** function _dtoa *****************
 21850 ;; Defined at:
 21851 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21852 ;; Parameters:    Size  Location     Type
 21853 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21854 ;;		 -> f(6), NULL(0), 
 21855 ;;  d               8  [STACK] long long 
 21856 ;; Auto vars:     Size  Location     Type
 21857 ;;  n               8  [STACK] long long 
 21858 ;;  i               2  [STACK] int 
 21859 ;;  s               2  [STACK] int 
 21860 ;;  w               2  [STACK] int 
 21861 ;;  p               2  [STACK] int 
 21862 ;; Return value:  Size  Location     Type
 21863 ;;                  2  [STACK] int 
 21864 ;; Registers used:
 21865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 21866 ;; Tracked objects:
 21867 ;;		On entry : 0/0
 21868 ;;		On exit  : 0/0
 21869 ;;		Unchanged: 0/0
 21870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21875 ;;Total ram usage:        0 bytes
 21876 ;; Hardware stack levels used:    1
 21877 ;; Hardware stack levels required when called:   20
 21878 ;; This function calls:
 21879 ;;		___aodiv
 21880 ;;		___aomod
 21881 ;;		_abs
 21882 ;;		_pad
 21883 ;; This function is called by:
 21884 ;;		_vfpfcnvrt
 21885 ;; This function uses a reentrant model
 21886 ;;
 21887                           
 21888                           	psect	text76
 21889  01585C                     __ptext76:
 21890                           	opt callstack 0
 21891  01585C                     _dtoa:
 21892                           	opt callstack 0
 21893                           
 21894                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 21895  01585C  0E12               	movlw	18
 21896  01585E  26E1               	addwf	fsr1l,f,c
 21897  015860  0E00               	movlw	0
 21898  015862  22E2               	addwfc	fsr1h,f,c
 21899                           
 21900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 21901                           ;stkvar	_d @ sp[(-18)+-10]
 21902                           
 21903                           ;incstack = 0
 21904 ;; hardware stack exceeded
 21905  015864  0EE4               	movlw	228
 21906  015866  24E1               	addwf	fsr1l,w,c
 21907  015868  6ED9               	movwf	fsr2l,c
 21908  01586A  0EFF               	movlw	255
 21909  01586C  20E2               	addwfc	fsr1h,w,c
 21910  01586E  6EDA               	movwf	fsr2h,c
 21911                           
 21912                           ;stkvar	_n @ sp[(-18)+2]
 21913  015870  0E08               	movlw	8
 21914  015872  6E01               	movwf	btemp^0,c
 21915  015874  0EF0               	movlw	-16
 21916  015876                     us1138999:
 21917  015876  006F FF7B FFE3     	movff	postinc2,plusw1
 21918  01587C  28E8               	incf	wreg,w,c
 21919  01587E  2E01               	decfsz	btemp^0,f,c
 21920  015880  D7FA               	bra	us1138999
 21921                           
 21922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 21923                           ;stkvar	_n @ sp[(-18)+2]
 21924  015882  0EF7               	movlw	-9
 21925  015884  AEE3               	btfss	plusw1,7,c
 21926  015886  D002               	goto	u11390
 21927  015888  0E01               	movlw	1
 21928  01588A  D001               	goto	u11400
 21929  01588C                     u11390:
 21930  01588C  0E00               	movlw	0
 21931  01588E                     u11400:
 21932  01588E  6E0B               	movwf	(btemp+10)^0,c
 21933  015890  6A0C               	clrf	(btemp+11)^0,c
 21934                           
 21935                           ;stkvar	_s @ sp[(-18)+12]
 21936  015892  0EFA               	movlw	-6
 21937  015894  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21938  01589A  0EFB               	movlw	-5
 21939  01589C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21940                           
 21941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 21942                           ;stkvar	_s @ sp[(-18)+12]
 21943  0158A2  0EFA               	movlw	-6
 21944  0158A4  006F FF8C  F001    	movff	plusw1,btemp
 21945  0158AA  0EFB               	movlw	-5
 21946  0158AC  50E3               	movf	plusw1,w,c
 21947  0158AE  1001               	iorwf	btemp^0,w,c
 21948  0158B0  B4D8               	btfsc	status,2,c
 21949  0158B2  D025               	goto	u11420
 21950                           
 21951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 21952                           ;stkvar	_n @ sp[(-18)+2]
 21953                           ;stkvar	_n @ sp[(-18)+2]
 21954  0158B4  0EF0               	movlw	-16
 21955  0158B6  6CE3               	negf	plusw1,c
 21956  0158B8  0EF1               	movlw	-15
 21957  0158BA  1EE3               	comf	plusw1,f,c
 21958  0158BC  0EF2               	movlw	-14
 21959  0158BE  1EE3               	comf	plusw1,f,c
 21960  0158C0  0EF3               	movlw	-13
 21961  0158C2  1EE3               	comf	plusw1,f,c
 21962  0158C4  0EF4               	movlw	-12
 21963  0158C6  1EE3               	comf	plusw1,f,c
 21964  0158C8  0EF5               	movlw	-11
 21965  0158CA  1EE3               	comf	plusw1,f,c
 21966  0158CC  0EF6               	movlw	-10
 21967  0158CE  1EE3               	comf	plusw1,f,c
 21968  0158D0  0EF7               	movlw	-9
 21969  0158D2  1EE3               	comf	plusw1,f,c
 21970  0158D4  E314               	bnc	u11420
 21971  0158D6  0EF1               	movlw	-15
 21972  0158D8  2AE3               	incf	plusw1,f,c
 21973  0158DA  E311               	bnc	u11420
 21974  0158DC  0EF2               	movlw	-14
 21975  0158DE  2AE3               	incf	plusw1,f,c
 21976  0158E0  E30E               	bnc	u11420
 21977  0158E2  0EF3               	movlw	-13
 21978  0158E4  2AE3               	incf	plusw1,f,c
 21979  0158E6  E30B               	bnc	u11420
 21980  0158E8  0EF4               	movlw	-12
 21981  0158EA  2AE3               	incf	plusw1,f,c
 21982  0158EC  E308               	bnc	u11420
 21983  0158EE  0EF5               	movlw	-11
 21984  0158F0  2AE3               	incf	plusw1,f,c
 21985  0158F2  E305               	bnc	u11420
 21986  0158F4  0EF6               	movlw	-10
 21987  0158F6  2AE3               	incf	plusw1,f,c
 21988  0158F8  E302               	bnc	u11420
 21989  0158FA  0EF7               	movlw	-9
 21990  0158FC  2AE3               	incf	plusw1,f,c
 21991  0158FE                     u11420:
 21992                           
 21993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 21994  0158FE  AE3D               	btfss	(_prec+1)^0,7,c
 21995                           
 21996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 21997  015900  923E               	bcf	_flags^0,1,c
 21998                           
 21999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 22000  015902  BE3D               	btfsc	(_prec+1)^0,7,c
 22001  015904  D005               	goto	u11440
 22002  015906  503D               	movf	(_prec+1)^0,w,c
 22003  015908  E110               	bnz	l12529
 22004  01590A  043C               	decf	_prec^0,w,c
 22005  01590C  B0D8               	btfsc	status,0,c
 22006  01590E  D00D               	goto	l12529
 22007  015910                     u11440:
 22008  015910  0E01               	movlw	1
 22009  015912  6E0B               	movwf	(btemp+10)^0,c
 22010  015914  0E00               	movlw	0
 22011  015916  6E0C               	movwf	(btemp+11)^0,c
 22012                           
 22013                           ;stkvar	_p @ sp[(-18)+16]
 22014  015918  0EFE               	movlw	-2
 22015  01591A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22016  015920  0EFF               	movlw	-1
 22017  015922  0060  F033  FFE3   	movff	btemp+11,plusw1
 22018  015928  D008               	goto	l2281
 22019  01592A                     l12529:
 22020                           
 22021                           ;stkvar	_p @ sp[(-18)+16]
 22022  01592A  0EFE               	movlw	-2
 22023  01592C  0060  F0F3  FFE3   	movff	_prec,plusw1
 22024  015932  0EFF               	movlw	-1
 22025  015934  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 22026  01593A                     l2281:
 22027                           
 22028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22029                           ;stkvar	_w @ sp[(-18)+14]
 22030  01593A  0EFC               	movlw	-4
 22031  01593C  0060  F0EB  FFE3   	movff	_width,plusw1
 22032  015942  0EFD               	movlw	-3
 22033  015944  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22034                           
 22035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 22036                           ;stkvar	_s @ sp[(-18)+12]
 22037  01594A  0EFA               	movlw	-6
 22038  01594C  006F FF8C  F001    	movff	plusw1,btemp
 22039  015952  0EFB               	movlw	-5
 22040  015954  50E3               	movf	plusw1,w,c
 22041  015956  1001               	iorwf	btemp^0,w,c
 22042  015958  A4D8               	btfss	status,2,c
 22043  01595A  D002               	goto	u11460
 22044  01595C  A43E               	btfss	_flags^0,2,c
 22045  01595E  D00A               	goto	l12537
 22046  015960                     u11460:
 22047                           
 22048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 22049                           ;stkvar	_w @ sp[(-18)+14]
 22050  015960  50E1               	movf	fsr1l,w,c
 22051  015962  0FFC               	addlw	-4
 22052  015964  6ED9               	movwf	fsr2l,c
 22053  015966  50E2               	movf	fsr1h,w,c
 22054  015968  6EDA               	movwf	fsr2h,c
 22055  01596A  0EFF               	movlw	255
 22056  01596C  22DA               	addwfc	fsr2h,f,c
 22057  01596E  06DE               	decf	postinc2,f,c
 22058  015970  0E00               	movlw	0
 22059  015972  5ADD               	subwfb	postdec2,f,c
 22060  015974                     l12537:
 22061                           
 22062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 22063  015974  0E4F               	movlw	79
 22064  015976  6E0B               	movwf	(btemp+10)^0,c
 22065  015978  0E00               	movlw	0
 22066  01597A  6E0C               	movwf	(btemp+11)^0,c
 22067                           
 22068                           ;stkvar	_i @ sp[(-18)+10]
 22069  01597C  0EF8               	movlw	-8
 22070  01597E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22071  015984  0EF9               	movlw	-7
 22072  015986  0060  F033  FFE3   	movff	btemp+11,plusw1
 22073                           
 22074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 22075  01598C  0102               	movlb	2	; () banked
 22076  01598E  6BE6               	clrf	(_dbuf+79)& (0+255),b
 22077                           
 22078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22079  015990  D109               	goto	l12551
 22080  015992                     l12541:
 22081                           
 22082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 22083                           ;stkvar	_i @ sp[(-18)+10]
 22084  015992  50E1               	movf	fsr1l,w,c
 22085  015994  0FF8               	addlw	-8
 22086  015996  6ED9               	movwf	fsr2l,c
 22087  015998  50E2               	movf	fsr1h,w,c
 22088  01599A  6EDA               	movwf	fsr2h,c
 22089  01599C  0EFF               	movlw	255
 22090  01599E  22DA               	addwfc	fsr2h,f,c
 22091  0159A0  06DE               	decf	postinc2,f,c
 22092  0159A2  0E00               	movlw	0
 22093  0159A4  5ADD               	subwfb	postdec2,f,c
 22094                           
 22095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 22096  0159A6  0E0A               	movlw	10
 22097  0159A8  6EE6               	movwf	postinc1,c
 22098  0159AA  0E00               	movlw	0
 22099  0159AC  6EE6               	movwf	postinc1,c
 22100  0159AE  0E00               	movlw	0
 22101  0159B0  6EE6               	movwf	postinc1,c
 22102  0159B2  0E00               	movlw	0
 22103  0159B4  6EE6               	movwf	postinc1,c
 22104  0159B6  0E00               	movlw	0
 22105  0159B8  6EE6               	movwf	postinc1,c
 22106  0159BA  0E00               	movlw	0
 22107  0159BC  6EE6               	movwf	postinc1,c
 22108  0159BE  0E00               	movlw	0
 22109  0159C0  6EE6               	movwf	postinc1,c
 22110  0159C2  0E00               	movlw	0
 22111  0159C4  6EE6               	movwf	postinc1,c
 22112                           
 22113                           ;stkvar	_n @ sp[(-26)+2]
 22114  0159C6  50E1               	movf	fsr1l,w,c
 22115  0159C8  0FE8               	addlw	-24
 22116  0159CA  6ED9               	movwf	fsr2l,c
 22117  0159CC  50E2               	movf	fsr1h,w,c
 22118  0159CE  6EDA               	movwf	fsr2h,c
 22119  0159D0  0EFF               	movlw	255
 22120  0159D2  22DA               	addwfc	fsr2h,f,c
 22121  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 22122  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 22123  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 22124  0159E6  006F FF7B FFE6     	movff	postinc2,postinc1
 22125  0159EC  006F FF7B FFE6     	movff	postinc2,postinc1
 22126  0159F2  006F FF7B FFE6     	movff	postinc2,postinc1
 22127  0159F8  006F FF7B FFE6     	movff	postinc2,postinc1
 22128  0159FE  006F FF7B FFE6     	movff	postinc2,postinc1
 22129  015A04  ECF2  F0C0         	call	___aomod	;wreg free
 22130  015A08  52E5               	movf	postdec1,f,c
 22131  015A0A  006F FF9C  F018    	movff	indf1,btemp+23
 22132  015A10  52E5               	movf	postdec1,f,c
 22133  015A12  006F FF9C  F017    	movff	indf1,btemp+22
 22134  015A18  52E5               	movf	postdec1,f,c
 22135  015A1A  006F FF9C  F016    	movff	indf1,btemp+21
 22136  015A20  52E5               	movf	postdec1,f,c
 22137  015A22  006F FF9C  F015    	movff	indf1,btemp+20
 22138  015A28  52E5               	movf	postdec1,f,c
 22139  015A2A  006F FF9C  F014    	movff	indf1,btemp+19
 22140  015A30  52E5               	movf	postdec1,f,c
 22141  015A32  006F FF9C  F013    	movff	indf1,btemp+18
 22142  015A38  52E5               	movf	postdec1,f,c
 22143  015A3A  006F FF9C  F012    	movff	indf1,btemp+17
 22144  015A40  52E5               	movf	postdec1,f,c
 22145  015A42  006F FF9C  F011    	movff	indf1,btemp+16
 22146  015A48  0EF8               	movlw	248
 22147  015A4A  26E1               	addwf	fsr1l,f,c
 22148  015A4C  0EFF               	movlw	255
 22149  015A4E  22E2               	addwfc	fsr1h,f,c
 22150  015A50  0060  F044  F00B   	movff	btemp+16,btemp+10
 22151  015A56  0060  F048  F00C   	movff	btemp+17,btemp+11
 22152  015A5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22153  015A62  0060  F033  FFE6   	movff	btemp+11,postinc1
 22154  015A68  ECA1  F0DF         	call	_abs	;wreg free
 22155  015A6C  0E30               	movlw	48
 22156  015A6E  2601               	addwf	btemp^0,f,c
 22157                           
 22158                           ;stkvar	_i @ sp[(-18)+10]
 22159  015A70  0EF8               	movlw	-8
 22160  015A72  006F FF8C  F00B    	movff	plusw1,btemp+10
 22161  015A78  0EF9               	movlw	-7
 22162  015A7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22163  015A80  0E97               	movlw	low _dbuf
 22164  015A82  240B               	addwf	(btemp+10)^0,w,c
 22165  015A84  6ED9               	movwf	fsr2l,c
 22166  015A86  0E02               	movlw	high _dbuf
 22167  015A88  200C               	addwfc	(btemp+11)^0,w,c
 22168  015A8A  6EDA               	movwf	fsr2h,c
 22169  015A8C  0060  F007  FFDF   	movff	btemp,indf2
 22170                           
 22171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 22172                           ;stkvar	_p @ sp[(-18)+16]
 22173  015A92  50E1               	movf	fsr1l,w,c
 22174  015A94  0FFE               	addlw	-2
 22175  015A96  6ED9               	movwf	fsr2l,c
 22176  015A98  50E2               	movf	fsr1h,w,c
 22177  015A9A  6EDA               	movwf	fsr2h,c
 22178  015A9C  0EFF               	movlw	255
 22179  015A9E  22DA               	addwfc	fsr2h,f,c
 22180  015AA0  06DE               	decf	postinc2,f,c
 22181  015AA2  0E00               	movlw	0
 22182  015AA4  5ADD               	subwfb	postdec2,f,c
 22183                           
 22184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22185                           ;stkvar	_w @ sp[(-18)+14]
 22186  015AA6  50E1               	movf	fsr1l,w,c
 22187  015AA8  0FFC               	addlw	-4
 22188  015AAA  6ED9               	movwf	fsr2l,c
 22189  015AAC  50E2               	movf	fsr1h,w,c
 22190  015AAE  6EDA               	movwf	fsr2h,c
 22191  015AB0  0EFF               	movlw	255
 22192  015AB2  22DA               	addwfc	fsr2h,f,c
 22193  015AB4  06DE               	decf	postinc2,f,c
 22194  015AB6  0E00               	movlw	0
 22195  015AB8  5ADD               	subwfb	postdec2,f,c
 22196                           
 22197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 22198  015ABA  0E0A               	movlw	10
 22199  015ABC  6EE6               	movwf	postinc1,c
 22200  015ABE  0E00               	movlw	0
 22201  015AC0  6EE6               	movwf	postinc1,c
 22202  015AC2  0E00               	movlw	0
 22203  015AC4  6EE6               	movwf	postinc1,c
 22204  015AC6  0E00               	movlw	0
 22205  015AC8  6EE6               	movwf	postinc1,c
 22206  015ACA  0E00               	movlw	0
 22207  015ACC  6EE6               	movwf	postinc1,c
 22208  015ACE  0E00               	movlw	0
 22209  015AD0  6EE6               	movwf	postinc1,c
 22210  015AD2  0E00               	movlw	0
 22211  015AD4  6EE6               	movwf	postinc1,c
 22212  015AD6  0E00               	movlw	0
 22213  015AD8  6EE6               	movwf	postinc1,c
 22214                           
 22215                           ;stkvar	_n @ sp[(-26)+2]
 22216  015ADA  50E1               	movf	fsr1l,w,c
 22217  015ADC  0FE8               	addlw	-24
 22218  015ADE  6ED9               	movwf	fsr2l,c
 22219  015AE0  50E2               	movf	fsr1h,w,c
 22220  015AE2  6EDA               	movwf	fsr2h,c
 22221  015AE4  0EFF               	movlw	255
 22222  015AE6  22DA               	addwfc	fsr2h,f,c
 22223  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 22224  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 22225  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 22226  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 22227  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 22228  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 22229  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 22230  015B12  006F FF7B FFE6     	movff	postinc2,postinc1
 22231  015B18  EC55  F0BD         	call	___aodiv	;wreg free
 22232  015B1C  52E5               	movf	postdec1,f,c
 22233  015B1E  006F FF9C  F018    	movff	indf1,btemp+23
 22234  015B24  52E5               	movf	postdec1,f,c
 22235  015B26  006F FF9C  F017    	movff	indf1,btemp+22
 22236  015B2C  52E5               	movf	postdec1,f,c
 22237  015B2E  006F FF9C  F016    	movff	indf1,btemp+21
 22238  015B34  52E5               	movf	postdec1,f,c
 22239  015B36  006F FF9C  F015    	movff	indf1,btemp+20
 22240  015B3C  52E5               	movf	postdec1,f,c
 22241  015B3E  006F FF9C  F014    	movff	indf1,btemp+19
 22242  015B44  52E5               	movf	postdec1,f,c
 22243  015B46  006F FF9C  F013    	movff	indf1,btemp+18
 22244  015B4C  52E5               	movf	postdec1,f,c
 22245  015B4E  006F FF9C  F012    	movff	indf1,btemp+17
 22246  015B54  52E5               	movf	postdec1,f,c
 22247  015B56  006F FF9C  F011    	movff	indf1,btemp+16
 22248  015B5C  0EF8               	movlw	248
 22249  015B5E  26E1               	addwf	fsr1l,f,c
 22250  015B60  0EFF               	movlw	255
 22251  015B62  22E2               	addwfc	fsr1h,f,c
 22252                           
 22253                           ;stkvar	_n @ sp[(-18)+2]
 22254  015B64  0EF0               	movlw	-16
 22255  015B66  0060  F047  FFE3   	movff	btemp+16,plusw1
 22256  015B6C  0EF1               	movlw	-15
 22257  015B6E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 22258  015B74  0EF2               	movlw	-14
 22259  015B76  0060  F04F  FFE3   	movff	btemp+18,plusw1
 22260  015B7C  0EF3               	movlw	-13
 22261  015B7E  0060  F053  FFE3   	movff	btemp+19,plusw1
 22262  015B84  0EF4               	movlw	-12
 22263  015B86  0060  F057  FFE3   	movff	btemp+20,plusw1
 22264  015B8C  0EF5               	movlw	-11
 22265  015B8E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 22266  015B94  0EF6               	movlw	-10
 22267  015B96  0060  F05F  FFE3   	movff	btemp+22,plusw1
 22268  015B9C  0EF7               	movlw	-9
 22269  015B9E  0060  F063  FFE3   	movff	btemp+23,plusw1
 22270  015BA4                     l12551:
 22271                           
 22272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22273                           ;stkvar	_i @ sp[(-18)+10]
 22274  015BA4  0EF9               	movlw	-7
 22275  015BA6  BEE3               	btfsc	plusw1,7,c
 22276  015BA8  D036               	goto	u11510
 22277  015BAA  0EF9               	movlw	-7
 22278  015BAC  50E3               	movf	plusw1,w,c
 22279  015BAE  E104               	bnz	u11470
 22280  015BB0  0EF8               	movlw	-8
 22281  015BB2  04E3               	decf	plusw1,w,c
 22282  015BB4  A0D8               	btfss	status,0,c
 22283  015BB6  D02F               	goto	u11510
 22284  015BB8                     u11470:
 22285                           
 22286                           ;stkvar	_n @ sp[(-18)+2]
 22287  015BB8  0EF0               	movlw	-16
 22288  015BBA  50E3               	movf	plusw1,w,c
 22289  015BBC  E115               	bnz	u11481
 22290  015BBE  0EF1               	movlw	-15
 22291  015BC0  50E3               	movf	plusw1,w,c
 22292  015BC2  E112               	bnz	u11481
 22293  015BC4  0EF2               	movlw	-14
 22294  015BC6  50E3               	movf	plusw1,w,c
 22295  015BC8  E10F               	bnz	u11481
 22296  015BCA  0EF3               	movlw	-13
 22297  015BCC  50E3               	movf	plusw1,w,c
 22298  015BCE  E10C               	bnz	u11481
 22299  015BD0  0EF4               	movlw	-12
 22300  015BD2  50E3               	movf	plusw1,w,c
 22301  015BD4  E109               	bnz	u11481
 22302  015BD6  0EF5               	movlw	-11
 22303  015BD8  50E3               	movf	plusw1,w,c
 22304  015BDA  E106               	bnz	u11481
 22305  015BDC  0EF6               	movlw	-10
 22306  015BDE  50E3               	movf	plusw1,w,c
 22307  015BE0  E103               	bnz	u11481
 22308  015BE2  0EF7               	movlw	-9
 22309  015BE4  50E3               	movf	plusw1,w,c
 22310  015BE6  A4D8               	btfss	status,2,c
 22311  015BE8                     u11481:
 22312  015BE8  D6D4               	goto	l12541
 22313                           
 22314                           ;stkvar	_p @ sp[(-18)+16]
 22315  015BEA  0EFF               	movlw	-1
 22316  015BEC  BEE3               	btfsc	plusw1,7,c
 22317  015BEE  D007               	goto	u11490
 22318  015BF0  0EFF               	movlw	-1
 22319  015BF2  50E3               	movf	plusw1,w,c
 22320  015BF4  E103               	bnz	u11491
 22321  015BF6  0EFE               	movlw	-2
 22322  015BF8  04E3               	decf	plusw1,w,c
 22323  015BFA  B0D8               	btfsc	status,0,c
 22324  015BFC                     u11491:
 22325  015BFC  D6CA               	goto	l12541
 22326  015BFE                     u11490:
 22327                           
 22328                           ;stkvar	_w @ sp[(-18)+14]
 22329  015BFE  0EFD               	movlw	-3
 22330  015C00  BEE3               	btfsc	plusw1,7,c
 22331  015C02  D009               	goto	u11510
 22332  015C04  0EFD               	movlw	-3
 22333  015C06  50E3               	movf	plusw1,w,c
 22334  015C08  E104               	bnz	u11500
 22335  015C0A  0EFC               	movlw	-4
 22336  015C0C  04E3               	decf	plusw1,w,c
 22337  015C0E  A0D8               	btfss	status,0,c
 22338  015C10  D002               	goto	u11510
 22339  015C12                     u11500:
 22340  015C12  B23E               	btfsc	_flags^0,1,c
 22341  015C14  D6BE               	goto	l12541
 22342  015C16                     u11510:
 22343                           
 22344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 22345                           ;stkvar	_s @ sp[(-18)+12]
 22346  015C16  0EFA               	movlw	-6
 22347  015C18  006F FF8C  F001    	movff	plusw1,btemp
 22348  015C1E  0EFB               	movlw	-5
 22349  015C20  50E3               	movf	plusw1,w,c
 22350  015C22  1001               	iorwf	btemp^0,w,c
 22351  015C24  A4D8               	btfss	status,2,c
 22352  015C26  D002               	goto	u11530
 22353  015C28  A43E               	btfss	_flags^0,2,c
 22354  015C2A  D033               	goto	l12575
 22355  015C2C                     u11530:
 22356                           
 22357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 22358                           ;stkvar	_i @ sp[(-18)+10]
 22359  015C2C  50E1               	movf	fsr1l,w,c
 22360  015C2E  0FF8               	addlw	-8
 22361  015C30  6ED9               	movwf	fsr2l,c
 22362  015C32  50E2               	movf	fsr1h,w,c
 22363  015C34  6EDA               	movwf	fsr2h,c
 22364  015C36  0EFF               	movlw	255
 22365  015C38  22DA               	addwfc	fsr2h,f,c
 22366  015C3A  06DE               	decf	postinc2,f,c
 22367  015C3C  0E00               	movlw	0
 22368  015C3E  5ADD               	subwfb	postdec2,f,c
 22369                           
 22370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 22371                           ;stkvar	_s @ sp[(-18)+12]
 22372  015C40  0EFA               	movlw	-6
 22373  015C42  006F FF8C  F001    	movff	plusw1,btemp
 22374  015C48  0EFB               	movlw	-5
 22375  015C4A  50E3               	movf	plusw1,w,c
 22376  015C4C  1001               	iorwf	btemp^0,w,c
 22377  015C4E  A4D8               	btfss	status,2,c
 22378  015C50  D002               	goto	l12571
 22379  015C52  0E2B               	movlw	43
 22380  015C54  D001               	goto	L27
 22381  015C56                     l12571:
 22382  015C56  0E2D               	movlw	45
 22383  015C58                     L27:
 22384  015C58  6E0B               	movwf	(btemp+10)^0,c
 22385  015C5A  0E00               	movlw	0
 22386  015C5C  6E0C               	movwf	(btemp+11)^0,c
 22387                           
 22388                           ;stkvar	_dtoa$5834 @ sp[(-18)+0]
 22389  015C5E  0EEE               	movlw	-18
 22390  015C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22391  015C66  0EEF               	movlw	-17
 22392  015C68  0060  F033  FFE3   	movff	btemp+11,plusw1
 22393                           
 22394                           ;stkvar	_dtoa$5834 @ sp[(-18)+0]
 22395                           ;stkvar	_i @ sp[(-18)+10]
 22396  015C6E  0EF8               	movlw	-8
 22397  015C70  006F FF8C  F00B    	movff	plusw1,btemp+10
 22398  015C76  0EF9               	movlw	-7
 22399  015C78  006F FF8C  F00C    	movff	plusw1,btemp+11
 22400  015C7E  0E97               	movlw	low _dbuf
 22401  015C80  240B               	addwf	(btemp+10)^0,w,c
 22402  015C82  6ED9               	movwf	fsr2l,c
 22403  015C84  0E02               	movlw	high _dbuf
 22404  015C86  200C               	addwfc	(btemp+11)^0,w,c
 22405  015C88  6EDA               	movwf	fsr2h,c
 22406  015C8A  0EEE               	movlw	-18
 22407  015C8C  006F FF8F FFDF     	movff	plusw1,indf2
 22408  015C92                     l12575:
 22409                           
 22410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 22411                           ;stkvar	_w @ sp[(-18)+14]
 22412  015C92  0EFC               	movlw	-4
 22413  015C94  006F FF8F FFE6     	movff	plusw1,postinc1
 22414  015C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 22415                           
 22416                           ;stkvar	_i @ sp[(-20)+10]
 22417  015CA0  0E97               	movlw	low _dbuf
 22418  015CA2  6E0B               	movwf	(btemp+10)^0,c
 22419  015CA4  0E02               	movlw	high _dbuf
 22420  015CA6  6E0C               	movwf	(btemp+11)^0,c
 22421  015CA8  0EF6               	movlw	-10
 22422  015CAA  50E3               	movf	plusw1,w,c
 22423  015CAC  260B               	addwf	(btemp+10)^0,f,c
 22424  015CAE  0EF7               	movlw	-9
 22425  015CB0  50E3               	movf	plusw1,w,c
 22426  015CB2  220C               	addwfc	(btemp+11)^0,f,c
 22427  015CB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22428  015CBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 22429                           
 22430                           ;stkvar	_fp @ sp[(-22)+-2]
 22431  015CC0  0EE8               	movlw	-24
 22432  015CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 22433  015CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 22434  015CCE  EC18  F0D1         	call	_pad	;wreg free
 22435                           
 22436                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 22437  015CD2  0EE4               	movlw	228
 22438  015CD4  26E1               	addwf	fsr1l,f,c
 22439  015CD6  0EFF               	movlw	255
 22440  015CD8  22E2               	addwfc	fsr1h,f,c
 22441  015CDA  0012               	return		;funcret
 22442  015CDC                     __end_of_dtoa:
 22443                           	opt callstack 0
 22444                           
 22445 ;; *************** function _abs *****************
 22446 ;; Defined at:
 22447 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 22448 ;; Parameters:    Size  Location     Type
 22449 ;;  a               2  [STACK] int 
 22450 ;; Auto vars:     Size  Location     Type
 22451 ;;		None
 22452 ;; Return value:  Size  Location     Type
 22453 ;;                  2  [STACK] int 
 22454 ;; Registers used:
 22455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 22456 ;; Tracked objects:
 22457 ;;		On entry : 0/2
 22458 ;;		On exit  : 0/0
 22459 ;;		Unchanged: 0/0
 22460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22465 ;;Total ram usage:        0 bytes
 22466 ;; Hardware stack levels used:    1
 22467 ;; Hardware stack levels required when called:   15
 22468 ;; This function calls:
 22469 ;;		Nothing
 22470 ;; This function is called by:
 22471 ;;		_dtoa
 22472 ;; This function uses a reentrant model
 22473 ;;
 22474                           
 22475                           	psect	text77
 22476  01BF42                     __ptext77:
 22477                           	opt callstack 0
 22478  01BF42                     _abs:
 22479                           	opt callstack 0
 22480                           
 22481                           ;stkvar	_a @ sp[(0)+-2]
 22482                           
 22483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22484                           ;incstack = 0
 22485 ;; hardware stack exceeded
 22486  01BF42  0EFF               	movlw	-1
 22487  01BF44  BEE3               	btfsc	plusw1,7,c
 22488  01BF46  D007               	goto	u6230
 22489  01BF48  0EFF               	movlw	-1
 22490  01BF4A  50E3               	movf	plusw1,w,c
 22491  01BF4C  E112               	bnz	l8357
 22492  01BF4E  0EFE               	movlw	-2
 22493  01BF50  04E3               	decf	plusw1,w,c
 22494  01BF52  B0D8               	btfsc	status,0,c
 22495  01BF54  D00E               	goto	l8357
 22496  01BF56                     u6230:
 22497                           
 22498                           ;stkvar	_a @ sp[(0)+-2]
 22499  01BF56  0EFE               	movlw	-2
 22500  01BF58  006F FF8C  F001    	movff	plusw1,btemp
 22501  01BF5E  1E01               	comf	btemp^0,f,c
 22502  01BF60  0EFF               	movlw	-1
 22503  01BF62  006F FF8C  F002    	movff	plusw1,btemp+1
 22504  01BF68  1E02               	comf	(btemp+1)^0,f,c
 22505  01BF6A  2A01               	incf	btemp^0,f,c
 22506  01BF6C  B4D8               	btfsc	status,2,c
 22507  01BF6E  2A02               	incf	(btemp+1)^0,f,c
 22508  01BF70  D008               	goto	l3207
 22509  01BF72                     l8357:
 22510                           
 22511                           ;stkvar	_a @ sp[(0)+-2]
 22512  01BF72  0EFE               	movlw	-2
 22513  01BF74  006F FF8C  F001    	movff	plusw1,btemp
 22514  01BF7A  0EFF               	movlw	-1
 22515  01BF7C  006F FF8C  F002    	movff	plusw1,btemp+1
 22516  01BF82                     l3207:
 22517                           
 22518                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 22519  01BF82  52E5               	movf	postdec1,f,c
 22520  01BF84  52E5               	movf	postdec1,f,c
 22521  01BF86  0012               	return		;funcret
 22522  01BF88                     __end_of_abs:
 22523                           	opt callstack 0
 22524                           
 22525 ;; *************** function ___aomod *****************
 22526 ;; Defined at:
 22527 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 22528 ;; Parameters:    Size  Location     Type
 22529 ;;  dividend        8  [STACK] long long 
 22530 ;;  divisor         8  [STACK] long long 
 22531 ;; Auto vars:     Size  Location     Type
 22532 ;;  sign            1  [STACK] unsigned char 
 22533 ;;  counter         1  [STACK] unsigned char 
 22534 ;; Return value:  Size  Location     Type
 22535 ;;                  8  [STACK] long long 
 22536 ;; Registers used:
 22537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22538 ;; Tracked objects:
 22539 ;;		On entry : 0/2
 22540 ;;		On exit  : 0/0
 22541 ;;		Unchanged: 0/0
 22542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22547 ;;Total ram usage:        0 bytes
 22548 ;; Hardware stack levels used:    1
 22549 ;; Hardware stack levels required when called:   15
 22550 ;; This function calls:
 22551 ;;		Nothing
 22552 ;; This function is called by:
 22553 ;;		_dtoa
 22554 ;; This function uses a reentrant model
 22555 ;;
 22556                           
 22557                           	psect	text78
 22558  0181E4                     __ptext78:
 22559                           	opt callstack 0
 22560  0181E4                     ___aomod:
 22561                           	opt callstack 0
 22562                           
 22563                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 22564  0181E4  52E6               	movf	postinc1,f,c
 22565  0181E6  52E6               	movf	postinc1,f,c
 22566                           
 22567                           ;stkvar	_sign @ sp[(-2)+0]
 22568                           
 22569                           ;incstack = 0
 22570 ;; hardware stack exceeded
 22571  0181E8  0EFE               	movlw	-2
 22572  0181EA  6AE3               	clrf	plusw1,c
 22573                           
 22574                           ;stkvar	_dividend @ sp[(-2)+-8]
 22575  0181EC  0EFD               	movlw	-3
 22576  0181EE  AEE3               	btfss	plusw1,7,c
 22577  0181F0  D028               	goto	l8515
 22578                           
 22579                           ;stkvar	_dividend @ sp[(-2)+-8]
 22580                           ;stkvar	_dividend @ sp[(-2)+-8]
 22581  0181F2  0EF6               	movlw	-10
 22582  0181F4  6CE3               	negf	plusw1,c
 22583  0181F6  0EF7               	movlw	-9
 22584  0181F8  1EE3               	comf	plusw1,f,c
 22585  0181FA  0EF8               	movlw	-8
 22586  0181FC  1EE3               	comf	plusw1,f,c
 22587  0181FE  0EF9               	movlw	-7
 22588  018200  1EE3               	comf	plusw1,f,c
 22589  018202  0EFA               	movlw	-6
 22590  018204  1EE3               	comf	plusw1,f,c
 22591  018206  0EFB               	movlw	-5
 22592  018208  1EE3               	comf	plusw1,f,c
 22593  01820A  0EFC               	movlw	-4
 22594  01820C  1EE3               	comf	plusw1,f,c
 22595  01820E  0EFD               	movlw	-3
 22596  018210  1EE3               	comf	plusw1,f,c
 22597  018212  E314               	bnc	u6660
 22598  018214  0EF7               	movlw	-9
 22599  018216  2AE3               	incf	plusw1,f,c
 22600  018218  E311               	bnc	u6660
 22601  01821A  0EF8               	movlw	-8
 22602  01821C  2AE3               	incf	plusw1,f,c
 22603  01821E  E30E               	bnc	u6660
 22604  018220  0EF9               	movlw	-7
 22605  018222  2AE3               	incf	plusw1,f,c
 22606  018224  E30B               	bnc	u6660
 22607  018226  0EFA               	movlw	-6
 22608  018228  2AE3               	incf	plusw1,f,c
 22609  01822A  E308               	bnc	u6660
 22610  01822C  0EFB               	movlw	-5
 22611  01822E  2AE3               	incf	plusw1,f,c
 22612  018230  E305               	bnc	u6660
 22613  018232  0EFC               	movlw	-4
 22614  018234  2AE3               	incf	plusw1,f,c
 22615  018236  E302               	bnc	u6660
 22616  018238  0EFD               	movlw	-3
 22617  01823A  2AE3               	incf	plusw1,f,c
 22618  01823C                     u6660:
 22619                           
 22620                           ;stkvar	_sign @ sp[(-2)+0]
 22621  01823C  0EFE               	movlw	-2
 22622  01823E  6AE3               	clrf	plusw1,c
 22623  018240  2AE3               	incf	plusw1,f,c
 22624  018242                     l8515:
 22625                           
 22626                           ;stkvar	_divisor @ sp[(-2)+-16]
 22627  018242  0EF5               	movlw	-11
 22628  018244  AEE3               	btfss	plusw1,7,c
 22629  018246  D025               	goto	u6680
 22630                           
 22631                           ;stkvar	_divisor @ sp[(-2)+-16]
 22632                           ;stkvar	_divisor @ sp[(-2)+-16]
 22633  018248  0EEE               	movlw	-18
 22634  01824A  6CE3               	negf	plusw1,c
 22635  01824C  0EEF               	movlw	-17
 22636  01824E  1EE3               	comf	plusw1,f,c
 22637  018250  0EF0               	movlw	-16
 22638  018252  1EE3               	comf	plusw1,f,c
 22639  018254  0EF1               	movlw	-15
 22640  018256  1EE3               	comf	plusw1,f,c
 22641  018258  0EF2               	movlw	-14
 22642  01825A  1EE3               	comf	plusw1,f,c
 22643  01825C  0EF3               	movlw	-13
 22644  01825E  1EE3               	comf	plusw1,f,c
 22645  018260  0EF4               	movlw	-12
 22646  018262  1EE3               	comf	plusw1,f,c
 22647  018264  0EF5               	movlw	-11
 22648  018266  1EE3               	comf	plusw1,f,c
 22649  018268  E314               	bnc	u6680
 22650  01826A  0EEF               	movlw	-17
 22651  01826C  2AE3               	incf	plusw1,f,c
 22652  01826E  E311               	bnc	u6680
 22653  018270  0EF0               	movlw	-16
 22654  018272  2AE3               	incf	plusw1,f,c
 22655  018274  E30E               	bnc	u6680
 22656  018276  0EF1               	movlw	-15
 22657  018278  2AE3               	incf	plusw1,f,c
 22658  01827A  E30B               	bnc	u6680
 22659  01827C  0EF2               	movlw	-14
 22660  01827E  2AE3               	incf	plusw1,f,c
 22661  018280  E308               	bnc	u6680
 22662  018282  0EF3               	movlw	-13
 22663  018284  2AE3               	incf	plusw1,f,c
 22664  018286  E305               	bnc	u6680
 22665  018288  0EF4               	movlw	-12
 22666  01828A  2AE3               	incf	plusw1,f,c
 22667  01828C  E302               	bnc	u6680
 22668  01828E  0EF5               	movlw	-11
 22669  018290  2AE3               	incf	plusw1,f,c
 22670  018292                     u6680:
 22671                           
 22672                           ;stkvar	_divisor @ sp[(-2)+-16]
 22673  018292  0EEE               	movlw	-18
 22674  018294  50E3               	movf	plusw1,w,c
 22675  018296  E116               	bnz	u6690
 22676  018298  0EEF               	movlw	-17
 22677  01829A  50E3               	movf	plusw1,w,c
 22678  01829C  E113               	bnz	u6690
 22679  01829E  0EF0               	movlw	-16
 22680  0182A0  50E3               	movf	plusw1,w,c
 22681  0182A2  E110               	bnz	u6690
 22682  0182A4  0EF1               	movlw	-15
 22683  0182A6  50E3               	movf	plusw1,w,c
 22684  0182A8  E10D               	bnz	u6690
 22685  0182AA  0EF2               	movlw	-14
 22686  0182AC  50E3               	movf	plusw1,w,c
 22687  0182AE  E10A               	bnz	u6690
 22688  0182B0  0EF3               	movlw	-13
 22689  0182B2  50E3               	movf	plusw1,w,c
 22690  0182B4  E107               	bnz	u6690
 22691  0182B6  0EF4               	movlw	-12
 22692  0182B8  50E3               	movf	plusw1,w,c
 22693  0182BA  E104               	bnz	u6690
 22694  0182BC  0EF5               	movlw	-11
 22695  0182BE  50E3               	movf	plusw1,w,c
 22696  0182C0  B4D8               	btfsc	status,2,c
 22697  0182C2  D075               	goto	u6720
 22698  0182C4                     u6690:
 22699                           
 22700                           ;stkvar	_counter @ sp[(-2)+1]
 22701  0182C4  0EFF               	movlw	-1
 22702  0182C6  6AE3               	clrf	plusw1,c
 22703  0182C8  D012               	goto	L28
 22704  0182CA                     l8523:
 22705                           
 22706                           ;stkvar	_divisor @ sp[(-2)+-16]
 22707  0182CA  90D8               	bcf	status,0,c
 22708  0182CC  0EEE               	movlw	-18
 22709  0182CE  36E3               	rlcf	plusw1,f,c
 22710  0182D0  0EEF               	movlw	-17
 22711  0182D2  36E3               	rlcf	plusw1,f,c
 22712  0182D4  0EF0               	movlw	-16
 22713  0182D6  36E3               	rlcf	plusw1,f,c
 22714  0182D8  0EF1               	movlw	-15
 22715  0182DA  36E3               	rlcf	plusw1,f,c
 22716  0182DC  0EF2               	movlw	-14
 22717  0182DE  36E3               	rlcf	plusw1,f,c
 22718  0182E0  0EF3               	movlw	-13
 22719  0182E2  36E3               	rlcf	plusw1,f,c
 22720  0182E4  0EF4               	movlw	-12
 22721  0182E6  36E3               	rlcf	plusw1,f,c
 22722  0182E8  0EF5               	movlw	-11
 22723  0182EA  36E3               	rlcf	plusw1,f,c
 22724                           
 22725                           ;stkvar	_counter @ sp[(-2)+1]
 22726  0182EC  0EFF               	movlw	-1
 22727  0182EE                     L28:
 22728  0182EE  2AE3               	incf	plusw1,f,c
 22729                           
 22730                           ;stkvar	_divisor @ sp[(-2)+-16]
 22731  0182F0  0EF5               	movlw	-11
 22732  0182F2  AEE3               	btfss	plusw1,7,c
 22733  0182F4  D7EA               	goto	l8523
 22734  0182F6                     u6700:
 22735                           
 22736                           ;stkvar	_divisor @ sp[(-2)+-16]
 22737                           ;stkvar	_dividend @ sp[(-2)+-8]
 22738  0182F6  50E1               	movf	fsr1l,w,c
 22739  0182F8  0FF6               	addlw	-10
 22740  0182FA  6ED9               	movwf	fsr2l,c
 22741  0182FC  50E2               	movf	fsr1h,w,c
 22742  0182FE  6EDA               	movwf	fsr2h,c
 22743  018300  0EFF               	movlw	255
 22744  018302  22DA               	addwfc	fsr2h,f,c
 22745  018304  0EEE               	movlw	-18
 22746  018306  50E3               	movf	plusw1,w,c
 22747  018308  5CDE               	subwf	postinc2,w,c
 22748  01830A  0EEF               	movlw	-17
 22749  01830C  50E3               	movf	plusw1,w,c
 22750  01830E  58DE               	subwfb	postinc2,w,c
 22751  018310  0EF0               	movlw	-16
 22752  018312  50E3               	movf	plusw1,w,c
 22753  018314  58DE               	subwfb	postinc2,w,c
 22754  018316  0EF1               	movlw	-15
 22755  018318  50E3               	movf	plusw1,w,c
 22756  01831A  58DE               	subwfb	postinc2,w,c
 22757  01831C  0EF2               	movlw	-14
 22758  01831E  50E3               	movf	plusw1,w,c
 22759  018320  58DE               	subwfb	postinc2,w,c
 22760  018322  0EF3               	movlw	-13
 22761  018324  50E3               	movf	plusw1,w,c
 22762  018326  58DE               	subwfb	postinc2,w,c
 22763  018328  0EF4               	movlw	-12
 22764  01832A  50E3               	movf	plusw1,w,c
 22765  01832C  58DE               	subwfb	postinc2,w,c
 22766  01832E  0EF5               	movlw	-11
 22767  018330  50E3               	movf	plusw1,w,c
 22768  018332  58DE               	subwfb	postinc2,w,c
 22769  018334  A0D8               	btfss	status,0,c
 22770  018336  D01F               	goto	l8531
 22771                           
 22772                           ;stkvar	_divisor @ sp[(-2)+-16]
 22773                           ;stkvar	_dividend @ sp[(-2)+-8]
 22774  018338  50E1               	movf	fsr1l,w,c
 22775  01833A  0FF6               	addlw	-10
 22776  01833C  6ED9               	movwf	fsr2l,c
 22777  01833E  50E2               	movf	fsr1h,w,c
 22778  018340  6EDA               	movwf	fsr2h,c
 22779  018342  0EFF               	movlw	255
 22780  018344  22DA               	addwfc	fsr2h,f,c
 22781  018346  0EEE               	movlw	-18
 22782  018348  50E3               	movf	plusw1,w,c
 22783  01834A  5EDE               	subwf	postinc2,f,c
 22784  01834C  0EEF               	movlw	-17
 22785  01834E  50E3               	movf	plusw1,w,c
 22786  018350  5ADE               	subwfb	postinc2,f,c
 22787  018352  0EF0               	movlw	-16
 22788  018354  50E3               	movf	plusw1,w,c
 22789  018356  5ADE               	subwfb	postinc2,f,c
 22790  018358  0EF1               	movlw	-15
 22791  01835A  50E3               	movf	plusw1,w,c
 22792  01835C  5ADE               	subwfb	postinc2,f,c
 22793  01835E  0EF2               	movlw	-14
 22794  018360  50E3               	movf	plusw1,w,c
 22795  018362  5ADE               	subwfb	postinc2,f,c
 22796  018364  0EF3               	movlw	-13
 22797  018366  50E3               	movf	plusw1,w,c
 22798  018368  5ADE               	subwfb	postinc2,f,c
 22799  01836A  0EF4               	movlw	-12
 22800  01836C  50E3               	movf	plusw1,w,c
 22801  01836E  5ADE               	subwfb	postinc2,f,c
 22802  018370  0EF5               	movlw	-11
 22803  018372  50E3               	movf	plusw1,w,c
 22804  018374  5ADE               	subwfb	postinc2,f,c
 22805  018376                     l8531:
 22806                           
 22807                           ;stkvar	_divisor @ sp[(-2)+-16]
 22808  018376  90D8               	bcf	status,0,c
 22809  018378  0EF5               	movlw	-11
 22810  01837A  32E3               	rrcf	plusw1,f,c
 22811  01837C  0EF4               	movlw	-12
 22812  01837E  32E3               	rrcf	plusw1,f,c
 22813  018380  0EF3               	movlw	-13
 22814  018382  32E3               	rrcf	plusw1,f,c
 22815  018384  0EF2               	movlw	-14
 22816  018386  32E3               	rrcf	plusw1,f,c
 22817  018388  0EF1               	movlw	-15
 22818  01838A  32E3               	rrcf	plusw1,f,c
 22819  01838C  0EF0               	movlw	-16
 22820  01838E  32E3               	rrcf	plusw1,f,c
 22821  018390  0EEF               	movlw	-17
 22822  018392  32E3               	rrcf	plusw1,f,c
 22823  018394  0EEE               	movlw	-18
 22824  018396  32E3               	rrcf	plusw1,f,c
 22825                           
 22826                           ;stkvar	_counter @ sp[(-2)+1]
 22827  018398  0EFF               	movlw	-1
 22828  01839A  50E3               	movf	plusw1,w,c
 22829  01839C  6E01               	movwf	btemp^0,c
 22830  01839E  0E01               	movlw	1
 22831  0183A0  5E01               	subwf	btemp^0,f,c
 22832  0183A2  0EFF               	movlw	-1
 22833  0183A4  0060  F007  FFE3   	movff	btemp,plusw1
 22834  0183AA  A4D8               	btfss	status,2,c
 22835  0183AC  D7A4               	goto	u6700
 22836  0183AE                     u6720:
 22837                           
 22838                           ;stkvar	_sign @ sp[(-2)+0]
 22839  0183AE  0EFE               	movlw	-2
 22840  0183B0  50E3               	movf	plusw1,w,c
 22841  0183B2  B4D8               	btfsc	status,2,c
 22842  0183B4  D025               	goto	u6740
 22843                           
 22844                           ;stkvar	_dividend @ sp[(-2)+-8]
 22845                           ;stkvar	_dividend @ sp[(-2)+-8]
 22846  0183B6  0EF6               	movlw	-10
 22847  0183B8  6CE3               	negf	plusw1,c
 22848  0183BA  0EF7               	movlw	-9
 22849  0183BC  1EE3               	comf	plusw1,f,c
 22850  0183BE  0EF8               	movlw	-8
 22851  0183C0  1EE3               	comf	plusw1,f,c
 22852  0183C2  0EF9               	movlw	-7
 22853  0183C4  1EE3               	comf	plusw1,f,c
 22854  0183C6  0EFA               	movlw	-6
 22855  0183C8  1EE3               	comf	plusw1,f,c
 22856  0183CA  0EFB               	movlw	-5
 22857  0183CC  1EE3               	comf	plusw1,f,c
 22858  0183CE  0EFC               	movlw	-4
 22859  0183D0  1EE3               	comf	plusw1,f,c
 22860  0183D2  0EFD               	movlw	-3
 22861  0183D4  1EE3               	comf	plusw1,f,c
 22862  0183D6  E314               	bnc	u6740
 22863  0183D8  0EF7               	movlw	-9
 22864  0183DA  2AE3               	incf	plusw1,f,c
 22865  0183DC  E311               	bnc	u6740
 22866  0183DE  0EF8               	movlw	-8
 22867  0183E0  2AE3               	incf	plusw1,f,c
 22868  0183E2  E30E               	bnc	u6740
 22869  0183E4  0EF9               	movlw	-7
 22870  0183E6  2AE3               	incf	plusw1,f,c
 22871  0183E8  E30B               	bnc	u6740
 22872  0183EA  0EFA               	movlw	-6
 22873  0183EC  2AE3               	incf	plusw1,f,c
 22874  0183EE  E308               	bnc	u6740
 22875  0183F0  0EFB               	movlw	-5
 22876  0183F2  2AE3               	incf	plusw1,f,c
 22877  0183F4  E305               	bnc	u6740
 22878  0183F6  0EFC               	movlw	-4
 22879  0183F8  2AE3               	incf	plusw1,f,c
 22880  0183FA  E302               	bnc	u6740
 22881  0183FC  0EFD               	movlw	-3
 22882  0183FE  2AE3               	incf	plusw1,f,c
 22883  018400                     u6740:
 22884                           
 22885                           ;stkvar	_dividend @ sp[(-2)+-8]
 22886  018400  0EF6               	movlw	246
 22887  018402  24E1               	addwf	fsr1l,w,c
 22888  018404  6ED9               	movwf	fsr2l,c
 22889  018406  0EFF               	movlw	255
 22890  018408  20E2               	addwfc	fsr1h,w,c
 22891  01840A  6EDA               	movwf	fsr2h,c
 22892                           
 22893                           ;stkvar	?___aomod @ sp[(-2)+-8]
 22894  01840C  0E08               	movlw	8
 22895  01840E  6E01               	movwf	btemp^0,c
 22896  018410  0EF6               	movlw	-10
 22897  018412                     us675999:
 22898  018412  006F FF7B FFE3     	movff	postinc2,plusw1
 22899  018418  28E8               	incf	wreg,w,c
 22900  01841A  2E01               	decfsz	btemp^0,f,c
 22901  01841C  D7FA               	bra	us675999
 22902                           
 22903                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 22904  01841E  52E5               	movf	postdec1,f,c
 22905  018420  52E5               	movf	postdec1,f,c
 22906  018422  0012               	return		;funcret
 22907  018424                     __end_of___aomod:
 22908                           	opt callstack 0
 22909                           
 22910 ;; *************** function ___aodiv *****************
 22911 ;; Defined at:
 22912 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 22913 ;; Parameters:    Size  Location     Type
 22914 ;;  dividend        8  [STACK] long long 
 22915 ;;  divisor         8  [STACK] long long 
 22916 ;; Auto vars:     Size  Location     Type
 22917 ;;  quotient        8  [STACK] long long 
 22918 ;;  sign            1  [STACK] unsigned char 
 22919 ;;  counter         1  [STACK] unsigned char 
 22920 ;; Return value:  Size  Location     Type
 22921 ;;                  8  [STACK] long long 
 22922 ;; Registers used:
 22923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22924 ;; Tracked objects:
 22925 ;;		On entry : 0/2
 22926 ;;		On exit  : 0/0
 22927 ;;		Unchanged: 0/0
 22928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22933 ;;Total ram usage:        0 bytes
 22934 ;; Hardware stack levels used:    1
 22935 ;; Hardware stack levels required when called:   15
 22936 ;; This function calls:
 22937 ;;		Nothing
 22938 ;; This function is called by:
 22939 ;;		_dtoa
 22940 ;; This function uses a reentrant model
 22941 ;;
 22942                           
 22943                           	psect	text79
 22944  017AAA                     __ptext79:
 22945                           	opt callstack 0
 22946  017AAA                     ___aodiv:
 22947                           	opt callstack 0
 22948                           
 22949                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 22950  017AAA  0E0A               	movlw	10
 22951  017AAC  26E1               	addwf	fsr1l,f,c
 22952  017AAE  0E00               	movlw	0
 22953  017AB0  22E2               	addwfc	fsr1h,f,c
 22954                           
 22955                           ;stkvar	_sign @ sp[(-10)+8]
 22956                           
 22957                           ;incstack = 0
 22958 ;; hardware stack exceeded
 22959  017AB2  0EFE               	movlw	-2
 22960  017AB4  6AE3               	clrf	plusw1,c
 22961                           
 22962                           ;stkvar	_divisor @ sp[(-10)+-16]
 22963  017AB6  0EED               	movlw	-19
 22964  017AB8  AEE3               	btfss	plusw1,7,c
 22965  017ABA  D028               	goto	l8471
 22966                           
 22967                           ;stkvar	_divisor @ sp[(-10)+-16]
 22968                           ;stkvar	_divisor @ sp[(-10)+-16]
 22969  017ABC  0EE6               	movlw	-26
 22970  017ABE  6CE3               	negf	plusw1,c
 22971  017AC0  0EE7               	movlw	-25
 22972  017AC2  1EE3               	comf	plusw1,f,c
 22973  017AC4  0EE8               	movlw	-24
 22974  017AC6  1EE3               	comf	plusw1,f,c
 22975  017AC8  0EE9               	movlw	-23
 22976  017ACA  1EE3               	comf	plusw1,f,c
 22977  017ACC  0EEA               	movlw	-22
 22978  017ACE  1EE3               	comf	plusw1,f,c
 22979  017AD0  0EEB               	movlw	-21
 22980  017AD2  1EE3               	comf	plusw1,f,c
 22981  017AD4  0EEC               	movlw	-20
 22982  017AD6  1EE3               	comf	plusw1,f,c
 22983  017AD8  0EED               	movlw	-19
 22984  017ADA  1EE3               	comf	plusw1,f,c
 22985  017ADC  E314               	bnc	u6540
 22986  017ADE  0EE7               	movlw	-25
 22987  017AE0  2AE3               	incf	plusw1,f,c
 22988  017AE2  E311               	bnc	u6540
 22989  017AE4  0EE8               	movlw	-24
 22990  017AE6  2AE3               	incf	plusw1,f,c
 22991  017AE8  E30E               	bnc	u6540
 22992  017AEA  0EE9               	movlw	-23
 22993  017AEC  2AE3               	incf	plusw1,f,c
 22994  017AEE  E30B               	bnc	u6540
 22995  017AF0  0EEA               	movlw	-22
 22996  017AF2  2AE3               	incf	plusw1,f,c
 22997  017AF4  E308               	bnc	u6540
 22998  017AF6  0EEB               	movlw	-21
 22999  017AF8  2AE3               	incf	plusw1,f,c
 23000  017AFA  E305               	bnc	u6540
 23001  017AFC  0EEC               	movlw	-20
 23002  017AFE  2AE3               	incf	plusw1,f,c
 23003  017B00  E302               	bnc	u6540
 23004  017B02  0EED               	movlw	-19
 23005  017B04  2AE3               	incf	plusw1,f,c
 23006  017B06                     u6540:
 23007                           
 23008                           ;stkvar	_sign @ sp[(-10)+8]
 23009  017B06  0EFE               	movlw	-2
 23010  017B08  6AE3               	clrf	plusw1,c
 23011  017B0A  2AE3               	incf	plusw1,f,c
 23012  017B0C                     l8471:
 23013                           
 23014                           ;stkvar	_dividend @ sp[(-10)+-8]
 23015  017B0C  0EF5               	movlw	-11
 23016  017B0E  AEE3               	btfss	plusw1,7,c
 23017  017B10  D027               	goto	l8477
 23018                           
 23019                           ;stkvar	_dividend @ sp[(-10)+-8]
 23020                           ;stkvar	_dividend @ sp[(-10)+-8]
 23021  017B12  0EEE               	movlw	-18
 23022  017B14  6CE3               	negf	plusw1,c
 23023  017B16  0EEF               	movlw	-17
 23024  017B18  1EE3               	comf	plusw1,f,c
 23025  017B1A  0EF0               	movlw	-16
 23026  017B1C  1EE3               	comf	plusw1,f,c
 23027  017B1E  0EF1               	movlw	-15
 23028  017B20  1EE3               	comf	plusw1,f,c
 23029  017B22  0EF2               	movlw	-14
 23030  017B24  1EE3               	comf	plusw1,f,c
 23031  017B26  0EF3               	movlw	-13
 23032  017B28  1EE3               	comf	plusw1,f,c
 23033  017B2A  0EF4               	movlw	-12
 23034  017B2C  1EE3               	comf	plusw1,f,c
 23035  017B2E  0EF5               	movlw	-11
 23036  017B30  1EE3               	comf	plusw1,f,c
 23037  017B32  E314               	bnc	u6560
 23038  017B34  0EEF               	movlw	-17
 23039  017B36  2AE3               	incf	plusw1,f,c
 23040  017B38  E311               	bnc	u6560
 23041  017B3A  0EF0               	movlw	-16
 23042  017B3C  2AE3               	incf	plusw1,f,c
 23043  017B3E  E30E               	bnc	u6560
 23044  017B40  0EF1               	movlw	-15
 23045  017B42  2AE3               	incf	plusw1,f,c
 23046  017B44  E30B               	bnc	u6560
 23047  017B46  0EF2               	movlw	-14
 23048  017B48  2AE3               	incf	plusw1,f,c
 23049  017B4A  E308               	bnc	u6560
 23050  017B4C  0EF3               	movlw	-13
 23051  017B4E  2AE3               	incf	plusw1,f,c
 23052  017B50  E305               	bnc	u6560
 23053  017B52  0EF4               	movlw	-12
 23054  017B54  2AE3               	incf	plusw1,f,c
 23055  017B56  E302               	bnc	u6560
 23056  017B58  0EF5               	movlw	-11
 23057  017B5A  2AE3               	incf	plusw1,f,c
 23058  017B5C                     u6560:
 23059                           
 23060                           ;stkvar	_sign @ sp[(-10)+8]
 23061  017B5C  0EFE               	movlw	-2
 23062  017B5E  70E3               	btg	plusw1,0,c
 23063  017B60                     l8477:
 23064                           
 23065                           ;stkvar	_quotient @ sp[(-10)+0]
 23066  017B60  0E07               	movlw	7
 23067  017B62  6E01               	movwf	btemp^0,c
 23068  017B64  0EF6               	movlw	-10
 23069  017B66                     u6571:
 23070  017B66  6AE3               	clrf	plusw1,c
 23071  017B68  2AE8               	incf	wreg,f,c
 23072  017B6A  0601               	decf	btemp^0,f,c
 23073  017B6C  E2FC               	bc	u6571
 23074                           
 23075                           ;stkvar	_divisor @ sp[(-10)+-16]
 23076  017B6E  0EE6               	movlw	-26
 23077  017B70  50E3               	movf	plusw1,w,c
 23078  017B72  E116               	bnz	u6580
 23079  017B74  0EE7               	movlw	-25
 23080  017B76  50E3               	movf	plusw1,w,c
 23081  017B78  E113               	bnz	u6580
 23082  017B7A  0EE8               	movlw	-24
 23083  017B7C  50E3               	movf	plusw1,w,c
 23084  017B7E  E110               	bnz	u6580
 23085  017B80  0EE9               	movlw	-23
 23086  017B82  50E3               	movf	plusw1,w,c
 23087  017B84  E10D               	bnz	u6580
 23088  017B86  0EEA               	movlw	-22
 23089  017B88  50E3               	movf	plusw1,w,c
 23090  017B8A  E10A               	bnz	u6580
 23091  017B8C  0EEB               	movlw	-21
 23092  017B8E  50E3               	movf	plusw1,w,c
 23093  017B90  E107               	bnz	u6580
 23094  017B92  0EEC               	movlw	-20
 23095  017B94  50E3               	movf	plusw1,w,c
 23096  017B96  E104               	bnz	u6580
 23097  017B98  0EED               	movlw	-19
 23098  017B9A  50E3               	movf	plusw1,w,c
 23099  017B9C  B4D8               	btfsc	status,2,c
 23100  017B9E  D088               	goto	u6610
 23101  017BA0                     u6580:
 23102                           
 23103                           ;stkvar	_counter @ sp[(-10)+9]
 23104  017BA0  0EFF               	movlw	-1
 23105  017BA2  6AE3               	clrf	plusw1,c
 23106  017BA4  D012               	goto	L29
 23107  017BA6                     l8483:
 23108                           
 23109                           ;stkvar	_divisor @ sp[(-10)+-16]
 23110  017BA6  90D8               	bcf	status,0,c
 23111  017BA8  0EE6               	movlw	-26
 23112  017BAA  36E3               	rlcf	plusw1,f,c
 23113  017BAC  0EE7               	movlw	-25
 23114  017BAE  36E3               	rlcf	plusw1,f,c
 23115  017BB0  0EE8               	movlw	-24
 23116  017BB2  36E3               	rlcf	plusw1,f,c
 23117  017BB4  0EE9               	movlw	-23
 23118  017BB6  36E3               	rlcf	plusw1,f,c
 23119  017BB8  0EEA               	movlw	-22
 23120  017BBA  36E3               	rlcf	plusw1,f,c
 23121  017BBC  0EEB               	movlw	-21
 23122  017BBE  36E3               	rlcf	plusw1,f,c
 23123  017BC0  0EEC               	movlw	-20
 23124  017BC2  36E3               	rlcf	plusw1,f,c
 23125  017BC4  0EED               	movlw	-19
 23126  017BC6  36E3               	rlcf	plusw1,f,c
 23127                           
 23128                           ;stkvar	_counter @ sp[(-10)+9]
 23129  017BC8  0EFF               	movlw	-1
 23130  017BCA                     L29:
 23131  017BCA  2AE3               	incf	plusw1,f,c
 23132                           
 23133                           ;stkvar	_divisor @ sp[(-10)+-16]
 23134  017BCC  0EED               	movlw	-19
 23135  017BCE  AEE3               	btfss	plusw1,7,c
 23136  017BD0  D7EA               	goto	l8483
 23137  017BD2                     u6590:
 23138                           
 23139                           ;stkvar	_quotient @ sp[(-10)+0]
 23140  017BD2  90D8               	bcf	status,0,c
 23141  017BD4  0EF6               	movlw	-10
 23142  017BD6  36E3               	rlcf	plusw1,f,c
 23143  017BD8  0EF7               	movlw	-9
 23144  017BDA  36E3               	rlcf	plusw1,f,c
 23145  017BDC  0EF8               	movlw	-8
 23146  017BDE  36E3               	rlcf	plusw1,f,c
 23147  017BE0  0EF9               	movlw	-7
 23148  017BE2  36E3               	rlcf	plusw1,f,c
 23149  017BE4  0EFA               	movlw	-6
 23150  017BE6  36E3               	rlcf	plusw1,f,c
 23151  017BE8  0EFB               	movlw	-5
 23152  017BEA  36E3               	rlcf	plusw1,f,c
 23153  017BEC  0EFC               	movlw	-4
 23154  017BEE  36E3               	rlcf	plusw1,f,c
 23155  017BF0  0EFD               	movlw	-3
 23156  017BF2  36E3               	rlcf	plusw1,f,c
 23157                           
 23158                           ;stkvar	_divisor @ sp[(-10)+-16]
 23159                           ;stkvar	_dividend @ sp[(-10)+-8]
 23160  017BF4  50E1               	movf	fsr1l,w,c
 23161  017BF6  0FEE               	addlw	-18
 23162  017BF8  6ED9               	movwf	fsr2l,c
 23163  017BFA  50E2               	movf	fsr1h,w,c
 23164  017BFC  6EDA               	movwf	fsr2h,c
 23165  017BFE  0EFF               	movlw	255
 23166  017C00  22DA               	addwfc	fsr2h,f,c
 23167  017C02  0EE6               	movlw	-26
 23168  017C04  50E3               	movf	plusw1,w,c
 23169  017C06  5CDE               	subwf	postinc2,w,c
 23170  017C08  0EE7               	movlw	-25
 23171  017C0A  50E3               	movf	plusw1,w,c
 23172  017C0C  58DE               	subwfb	postinc2,w,c
 23173  017C0E  0EE8               	movlw	-24
 23174  017C10  50E3               	movf	plusw1,w,c
 23175  017C12  58DE               	subwfb	postinc2,w,c
 23176  017C14  0EE9               	movlw	-23
 23177  017C16  50E3               	movf	plusw1,w,c
 23178  017C18  58DE               	subwfb	postinc2,w,c
 23179  017C1A  0EEA               	movlw	-22
 23180  017C1C  50E3               	movf	plusw1,w,c
 23181  017C1E  58DE               	subwfb	postinc2,w,c
 23182  017C20  0EEB               	movlw	-21
 23183  017C22  50E3               	movf	plusw1,w,c
 23184  017C24  58DE               	subwfb	postinc2,w,c
 23185  017C26  0EEC               	movlw	-20
 23186  017C28  50E3               	movf	plusw1,w,c
 23187  017C2A  58DE               	subwfb	postinc2,w,c
 23188  017C2C  0EED               	movlw	-19
 23189  017C2E  50E3               	movf	plusw1,w,c
 23190  017C30  58DE               	subwfb	postinc2,w,c
 23191  017C32  A0D8               	btfss	status,0,c
 23192  017C34  D021               	goto	l8495
 23193                           
 23194                           ;stkvar	_divisor @ sp[(-10)+-16]
 23195                           ;stkvar	_dividend @ sp[(-10)+-8]
 23196  017C36  50E1               	movf	fsr1l,w,c
 23197  017C38  0FEE               	addlw	-18
 23198  017C3A  6ED9               	movwf	fsr2l,c
 23199  017C3C  50E2               	movf	fsr1h,w,c
 23200  017C3E  6EDA               	movwf	fsr2h,c
 23201  017C40  0EFF               	movlw	255
 23202  017C42  22DA               	addwfc	fsr2h,f,c
 23203  017C44  0EE6               	movlw	-26
 23204  017C46  50E3               	movf	plusw1,w,c
 23205  017C48  5EDE               	subwf	postinc2,f,c
 23206  017C4A  0EE7               	movlw	-25
 23207  017C4C  50E3               	movf	plusw1,w,c
 23208  017C4E  5ADE               	subwfb	postinc2,f,c
 23209  017C50  0EE8               	movlw	-24
 23210  017C52  50E3               	movf	plusw1,w,c
 23211  017C54  5ADE               	subwfb	postinc2,f,c
 23212  017C56  0EE9               	movlw	-23
 23213  017C58  50E3               	movf	plusw1,w,c
 23214  017C5A  5ADE               	subwfb	postinc2,f,c
 23215  017C5C  0EEA               	movlw	-22
 23216  017C5E  50E3               	movf	plusw1,w,c
 23217  017C60  5ADE               	subwfb	postinc2,f,c
 23218  017C62  0EEB               	movlw	-21
 23219  017C64  50E3               	movf	plusw1,w,c
 23220  017C66  5ADE               	subwfb	postinc2,f,c
 23221  017C68  0EEC               	movlw	-20
 23222  017C6A  50E3               	movf	plusw1,w,c
 23223  017C6C  5ADE               	subwfb	postinc2,f,c
 23224  017C6E  0EED               	movlw	-19
 23225  017C70  50E3               	movf	plusw1,w,c
 23226  017C72  5ADE               	subwfb	postinc2,f,c
 23227                           
 23228                           ;stkvar	_quotient @ sp[(-10)+0]
 23229  017C74  0EF6               	movlw	-10
 23230  017C76  80E3               	bsf	plusw1,0,c
 23231  017C78                     l8495:
 23232                           
 23233                           ;stkvar	_divisor @ sp[(-10)+-16]
 23234  017C78  90D8               	bcf	status,0,c
 23235  017C7A  0EED               	movlw	-19
 23236  017C7C  32E3               	rrcf	plusw1,f,c
 23237  017C7E  0EEC               	movlw	-20
 23238  017C80  32E3               	rrcf	plusw1,f,c
 23239  017C82  0EEB               	movlw	-21
 23240  017C84  32E3               	rrcf	plusw1,f,c
 23241  017C86  0EEA               	movlw	-22
 23242  017C88  32E3               	rrcf	plusw1,f,c
 23243  017C8A  0EE9               	movlw	-23
 23244  017C8C  32E3               	rrcf	plusw1,f,c
 23245  017C8E  0EE8               	movlw	-24
 23246  017C90  32E3               	rrcf	plusw1,f,c
 23247  017C92  0EE7               	movlw	-25
 23248  017C94  32E3               	rrcf	plusw1,f,c
 23249  017C96  0EE6               	movlw	-26
 23250  017C98  32E3               	rrcf	plusw1,f,c
 23251                           
 23252                           ;stkvar	_counter @ sp[(-10)+9]
 23253  017C9A  0EFF               	movlw	-1
 23254  017C9C  50E3               	movf	plusw1,w,c
 23255  017C9E  6E01               	movwf	btemp^0,c
 23256  017CA0  0E01               	movlw	1
 23257  017CA2  5E01               	subwf	btemp^0,f,c
 23258  017CA4  0EFF               	movlw	-1
 23259  017CA6  0060  F007  FFE3   	movff	btemp,plusw1
 23260  017CAC  A4D8               	btfss	status,2,c
 23261  017CAE  D791               	goto	u6590
 23262  017CB0                     u6610:
 23263                           
 23264                           ;stkvar	_sign @ sp[(-10)+8]
 23265  017CB0  0EFE               	movlw	-2
 23266  017CB2  50E3               	movf	plusw1,w,c
 23267  017CB4  B4D8               	btfsc	status,2,c
 23268  017CB6  D025               	goto	u6630
 23269                           
 23270                           ;stkvar	_quotient @ sp[(-10)+0]
 23271                           ;stkvar	_quotient @ sp[(-10)+0]
 23272  017CB8  0EF6               	movlw	-10
 23273  017CBA  6CE3               	negf	plusw1,c
 23274  017CBC  0EF7               	movlw	-9
 23275  017CBE  1EE3               	comf	plusw1,f,c
 23276  017CC0  0EF8               	movlw	-8
 23277  017CC2  1EE3               	comf	plusw1,f,c
 23278  017CC4  0EF9               	movlw	-7
 23279  017CC6  1EE3               	comf	plusw1,f,c
 23280  017CC8  0EFA               	movlw	-6
 23281  017CCA  1EE3               	comf	plusw1,f,c
 23282  017CCC  0EFB               	movlw	-5
 23283  017CCE  1EE3               	comf	plusw1,f,c
 23284  017CD0  0EFC               	movlw	-4
 23285  017CD2  1EE3               	comf	plusw1,f,c
 23286  017CD4  0EFD               	movlw	-3
 23287  017CD6  1EE3               	comf	plusw1,f,c
 23288  017CD8  E314               	bnc	u6630
 23289  017CDA  0EF7               	movlw	-9
 23290  017CDC  2AE3               	incf	plusw1,f,c
 23291  017CDE  E311               	bnc	u6630
 23292  017CE0  0EF8               	movlw	-8
 23293  017CE2  2AE3               	incf	plusw1,f,c
 23294  017CE4  E30E               	bnc	u6630
 23295  017CE6  0EF9               	movlw	-7
 23296  017CE8  2AE3               	incf	plusw1,f,c
 23297  017CEA  E30B               	bnc	u6630
 23298  017CEC  0EFA               	movlw	-6
 23299  017CEE  2AE3               	incf	plusw1,f,c
 23300  017CF0  E308               	bnc	u6630
 23301  017CF2  0EFB               	movlw	-5
 23302  017CF4  2AE3               	incf	plusw1,f,c
 23303  017CF6  E305               	bnc	u6630
 23304  017CF8  0EFC               	movlw	-4
 23305  017CFA  2AE3               	incf	plusw1,f,c
 23306  017CFC  E302               	bnc	u6630
 23307  017CFE  0EFD               	movlw	-3
 23308  017D00  2AE3               	incf	plusw1,f,c
 23309  017D02                     u6630:
 23310                           
 23311                           ;stkvar	_quotient @ sp[(-10)+0]
 23312  017D02  0EF6               	movlw	246
 23313  017D04  24E1               	addwf	fsr1l,w,c
 23314  017D06  6ED9               	movwf	fsr2l,c
 23315  017D08  0EFF               	movlw	255
 23316  017D0A  20E2               	addwfc	fsr1h,w,c
 23317  017D0C  6EDA               	movwf	fsr2h,c
 23318                           
 23319                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 23320  017D0E  0E08               	movlw	8
 23321  017D10  6E01               	movwf	btemp^0,c
 23322  017D12  0EEE               	movlw	-18
 23323  017D14                     us664999:
 23324  017D14  006F FF7B FFE3     	movff	postinc2,plusw1
 23325  017D1A  28E8               	incf	wreg,w,c
 23326  017D1C  2E01               	decfsz	btemp^0,f,c
 23327  017D1E  D7FA               	bra	us664999
 23328                           
 23329                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 23330  017D20  0EF6               	movlw	246
 23331  017D22  26E1               	addwf	fsr1l,f,c
 23332  017D24  0EFF               	movlw	255
 23333  017D26  22E2               	addwfc	fsr1h,f,c
 23334  017D28  0012               	return		;funcret
 23335  017D2A                     __end_of___aodiv:
 23336                           	opt callstack 0
 23337                           
 23338 ;; *************** function _ctoa *****************
 23339 ;; Defined at:
 23340 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23341 ;; Parameters:    Size  Location     Type
 23342 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23343 ;;		 -> f(6), NULL(0), 
 23344 ;;  c               1  [STACK] unsigned char 
 23345 ;; Auto vars:     Size  Location     Type
 23346 ;;  w               2  [STACK] int 
 23347 ;;  l               2    0        int 
 23348 ;; Return value:  Size  Location     Type
 23349 ;;                  2  [STACK] int 
 23350 ;; Registers used:
 23351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23352 ;; Tracked objects:
 23353 ;;		On entry : 0/0
 23354 ;;		On exit  : 0/0
 23355 ;;		Unchanged: 0/0
 23356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;Total ram usage:        0 bytes
 23362 ;; Hardware stack levels used:    1
 23363 ;; Hardware stack levels required when called:   20
 23364 ;; This function calls:
 23365 ;;		_pad
 23366 ;; This function is called by:
 23367 ;;		_vfpfcnvrt
 23368 ;; This function uses a reentrant model
 23369 ;;
 23370                           
 23371                           	psect	text80
 23372  01B408                     __ptext80:
 23373                           	opt callstack 0
 23374  01B408                     _ctoa:
 23375                           	opt callstack 0
 23376                           
 23377                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23378  01B408  52E6               	movf	postinc1,f,c
 23379  01B40A  52E6               	movf	postinc1,f,c
 23380                           
 23381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 23382                           
 23383                           ;incstack = 0
 23384 ;; hardware stack exceeded
 23385  01B40C  503A               	movf	_width^0,w,c
 23386  01B40E  103B               	iorwf	(_width+1)^0,w,c
 23387  01B410  A4D8               	btfss	status,2,c
 23388  01B412  D009               	goto	l12503
 23389                           
 23390                           ;stkvar	_w @ sp[(-2)+0]
 23391  01B414  0EFE               	movlw	-2
 23392  01B416  0060  F0EB  FFE3   	movff	_width,plusw1
 23393  01B41C  0EFF               	movlw	-1
 23394  01B41E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23395  01B424  D016               	goto	l12505
 23396  01B426                     l12503:
 23397  01B426  0EFF               	movlw	255
 23398  01B428  6E0B               	movwf	(btemp+10)^0,c
 23399  01B42A  0EFF               	movlw	255
 23400  01B42C  6E0C               	movwf	(btemp+11)^0,c
 23401  01B42E  0060  F0E8  F009   	movff	_width,btemp+8
 23402  01B434  0060  F0EC  F00A   	movff	_width+1,btemp+9
 23403  01B43A  500B               	movf	(btemp+10)^0,w,c
 23404  01B43C  2609               	addwf	(btemp+8)^0,f,c
 23405  01B43E  500C               	movf	(btemp+11)^0,w,c
 23406  01B440  220A               	addwfc	(btemp+9)^0,f,c
 23407                           
 23408                           ;stkvar	_w @ sp[(-2)+0]
 23409  01B442  0EFE               	movlw	-2
 23410  01B444  0060  F027  FFE3   	movff	btemp+8,plusw1
 23411  01B44A  0EFF               	movlw	-1
 23412  01B44C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23413  01B452                     l12505:
 23414                           
 23415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 23416                           ;stkvar	_c @ sp[(-2)+-3]
 23417  01B452  0EFB               	movlw	-5
 23418  01B454  006F FF8C  F297    	movff	plusw1,_dbuf
 23419                           
 23420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 23421  01B45A  0102               	movlb	2	; () banked
 23422  01B45C  6B98               	clrf	(_dbuf+1)& (0+255),b
 23423                           
 23424                           ; BSR set to: 2
 23425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 23426                           ;stkvar	_w @ sp[(-2)+0]
 23427  01B45E  0EFE               	movlw	-2
 23428  01B460  006F FF8F FFE6     	movff	plusw1,postinc1
 23429  01B466  006F FF8F FFE6     	movff	plusw1,postinc1
 23430  01B46C  0E97               	movlw	low _dbuf
 23431  01B46E  6EE6               	movwf	postinc1,c
 23432  01B470  0E02               	movlw	high _dbuf
 23433  01B472  6EE6               	movwf	postinc1,c
 23434                           
 23435                           ;stkvar	_fp @ sp[(-6)+-2]
 23436  01B474  0EF8               	movlw	-8
 23437  01B476  006F FF8F FFE6     	movff	plusw1,postinc1
 23438  01B47C  006F FF8F FFE6     	movff	plusw1,postinc1
 23439  01B482  EC18  F0D1         	call	_pad	;wreg free
 23440                           
 23441                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 23442  01B486  0EFB               	movlw	251
 23443  01B488  26E1               	addwf	fsr1l,f,c
 23444  01B48A  0EFF               	movlw	255
 23445  01B48C  22E2               	addwfc	fsr1h,f,c
 23446  01B48E  0012               	return		;funcret
 23447  01B490                     __end_of_ctoa:
 23448                           	opt callstack 0
 23449                           
 23450 ;; *************** function _pad *****************
 23451 ;; Defined at:
 23452 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23453 ;; Parameters:    Size  Location     Type
 23454 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23455 ;;		 -> f(6), NULL(0), 
 23456 ;;  buf             2  [STACK] PTR unsigned char 
 23457 ;;		 -> dbuf(80), 
 23458 ;;  p               2  [STACK] int 
 23459 ;; Auto vars:     Size  Location     Type
 23460 ;;  w               2  [STACK] int 
 23461 ;;  i               2  [STACK] int 
 23462 ;; Return value:  Size  Location     Type
 23463 ;;                  2  [STACK] int 
 23464 ;; Registers used:
 23465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23466 ;; Tracked objects:
 23467 ;;		On entry : 0/2
 23468 ;;		On exit  : 0/0
 23469 ;;		Unchanged: 0/0
 23470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23475 ;;Total ram usage:        0 bytes
 23476 ;; Hardware stack levels used:    1
 23477 ;; Hardware stack levels required when called:   19
 23478 ;; This function calls:
 23479 ;;		_fputc
 23480 ;;		_fputs
 23481 ;;		_strlen
 23482 ;; This function is called by:
 23483 ;;		_ctoa
 23484 ;;		_dtoa
 23485 ;;		_efgtoa
 23486 ;;		_utoa
 23487 ;;		_xtoa
 23488 ;; This function uses a reentrant model
 23489 ;;
 23490                           
 23491                           	psect	text81
 23492  01A230                     __ptext81:
 23493                           	opt callstack 0
 23494  01A230                     _pad:
 23495                           	opt callstack 0
 23496                           
 23497                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23498  01A230  52E6               	movf	postinc1,f,c
 23499  01A232  52E6               	movf	postinc1,f,c
 23500  01A234  52E6               	movf	postinc1,f,c
 23501  01A236  52E6               	movf	postinc1,f,c
 23502                           
 23503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 23504                           
 23505                           ;incstack = 0
 23506 ;; hardware stack exceeded
 23507  01A238  A03E               	btfss	_flags^0,0,c
 23508  01A23A  D010               	goto	l12465
 23509                           
 23510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 23511                           ;stkvar	_fp @ sp[(-4)+-2]
 23512  01A23C  0EFA               	movlw	-6
 23513  01A23E  006F FF8F FFE6     	movff	plusw1,postinc1
 23514  01A244  006F FF8F FFE6     	movff	plusw1,postinc1
 23515                           
 23516                           ;stkvar	_buf @ sp[(-6)+-4]
 23517  01A24A  0EF6               	movlw	-10
 23518  01A24C  006F FF8F FFE6     	movff	plusw1,postinc1
 23519  01A252  006F FF8F FFE6     	movff	plusw1,postinc1
 23520  01A258  EC26  F0D9         	call	_fputs	;wreg free
 23521  01A25C                     l12465:
 23522                           
 23523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 23524                           ;stkvar	_p @ sp[(-4)+-6]
 23525  01A25C  0EF7               	movlw	-9
 23526  01A25E  BEE3               	btfsc	plusw1,7,c
 23527  01A260  D011               	goto	l12469
 23528                           
 23529                           ;stkvar	_p @ sp[(-4)+-6]
 23530                           ;stkvar	_w @ sp[(-4)+0]
 23531  01A262  0EF6               	movlw	-10
 23532  01A264  006F FF8C  F001    	movff	plusw1,btemp
 23533  01A26A  0EFC               	movlw	-4
 23534  01A26C  0060  F007  FFE3   	movff	btemp,plusw1
 23535  01A272  0EF7               	movlw	-9
 23536  01A274  006F FF8C  F001    	movff	plusw1,btemp
 23537  01A27A  0EFD               	movlw	-3
 23538  01A27C  0060  F007  FFE3   	movff	btemp,plusw1
 23539  01A282  D004               	goto	l2261
 23540  01A284                     l12469:
 23541                           
 23542                           ;stkvar	_w @ sp[(-4)+0]
 23543  01A284  0EFC               	movlw	-4
 23544  01A286  6AE3               	clrf	plusw1,c
 23545  01A288  0EFD               	movlw	-3
 23546  01A28A  6AE3               	clrf	plusw1,c
 23547  01A28C                     l2261:
 23548                           
 23549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23550                           ;stkvar	_i @ sp[(-4)+2]
 23551  01A28C  0EFE               	movlw	-2
 23552  01A28E  6AE3               	clrf	plusw1,c
 23553  01A290  0EFF               	movlw	-1
 23554  01A292  6AE3               	clrf	plusw1,c
 23555                           
 23556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23557  01A294  D01E               	goto	l12475
 23558  01A296                     l12471:
 23559                           
 23560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 23561                           ;stkvar	_fp @ sp[(-4)+-2]
 23562  01A296  0EFA               	movlw	-6
 23563  01A298  006F FF8F FFE6     	movff	plusw1,postinc1
 23564  01A29E  006F FF8F FFE6     	movff	plusw1,postinc1
 23565  01A2A4  0E20               	movlw	32
 23566  01A2A6  6EE6               	movwf	postinc1,c
 23567  01A2A8  0E00               	movlw	0
 23568  01A2AA  6EE6               	movwf	postinc1,c
 23569  01A2AC  EC6E  F0CF         	call	_fputc	;wreg free
 23570                           
 23571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23572                           ;stkvar	_i @ sp[(-4)+2]
 23573  01A2B0  0EFE               	movlw	-2
 23574  01A2B2  50E3               	movf	plusw1,w,c
 23575  01A2B4  0F01               	addlw	1
 23576  01A2B6  6E01               	movwf	btemp^0,c
 23577  01A2B8  0EFE               	movlw	-2
 23578  01A2BA  0060  F007  FFE3   	movff	btemp,plusw1
 23579  01A2C0  6A01               	clrf	btemp^0,c
 23580  01A2C2  0EFF               	movlw	-1
 23581  01A2C4  50E3               	movf	plusw1,w,c
 23582  01A2C6  2001               	addwfc	btemp^0,w,c
 23583  01A2C8  6E01               	movwf	btemp^0,c
 23584  01A2CA  0EFF               	movlw	-1
 23585  01A2CC  0060  F007  FFE3   	movff	btemp,plusw1
 23586  01A2D2                     l12475:
 23587                           
 23588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23589                           ;stkvar	_w @ sp[(-4)+0]
 23590                           ;stkvar	_i @ sp[(-4)+2]
 23591  01A2D2  50E1               	movf	fsr1l,w,c
 23592  01A2D4  0FFE               	addlw	-2
 23593  01A2D6  6ED9               	movwf	fsr2l,c
 23594  01A2D8  50E2               	movf	fsr1h,w,c
 23595  01A2DA  6EDA               	movwf	fsr2h,c
 23596  01A2DC  0EFF               	movlw	255
 23597  01A2DE  22DA               	addwfc	fsr2h,f,c
 23598  01A2E0  0EFC               	movlw	-4
 23599  01A2E2  50E3               	movf	plusw1,w,c
 23600  01A2E4  5CDE               	subwf	postinc2,w,c
 23601  01A2E6  50DE               	movf	postinc2,w,c
 23602  01A2E8  0A80               	xorlw	128
 23603  01A2EA  6E01               	movwf	btemp^0,c
 23604  01A2EC  0EFD               	movlw	-3
 23605  01A2EE  50E3               	movf	plusw1,w,c
 23606  01A2F0  0A80               	xorlw	128
 23607  01A2F2  5801               	subwfb	btemp^0,w,c
 23608  01A2F4  A0D8               	btfss	status,0,c
 23609  01A2F6  D7CF               	goto	l12471
 23610                           
 23611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 23612  01A2F8  B03E               	btfsc	_flags^0,0,c
 23613  01A2FA  D010               	goto	l12479
 23614                           
 23615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 23616                           ;stkvar	_fp @ sp[(-4)+-2]
 23617  01A2FC  0EFA               	movlw	-6
 23618  01A2FE  006F FF8F FFE6     	movff	plusw1,postinc1
 23619  01A304  006F FF8F FFE6     	movff	plusw1,postinc1
 23620                           
 23621                           ;stkvar	_buf @ sp[(-6)+-4]
 23622  01A30A  0EF6               	movlw	-10
 23623  01A30C  006F FF8F FFE6     	movff	plusw1,postinc1
 23624  01A312  006F FF8F FFE6     	movff	plusw1,postinc1
 23625  01A318  EC26  F0D9         	call	_fputs	;wreg free
 23626  01A31C                     l12479:
 23627                           
 23628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 23629                           ;stkvar	_w @ sp[(-4)+0]
 23630                           ;stkvar	_buf @ sp[(-4)+-4]
 23631  01A31C  0EF8               	movlw	-8
 23632  01A31E  006F FF8F FFE6     	movff	plusw1,postinc1
 23633  01A324  006F FF8F FFE6     	movff	plusw1,postinc1
 23634  01A32A  ECD5  F0D8         	call	_strlen	;wreg free
 23635  01A32E  0EFC               	movlw	-4
 23636  01A330  50E3               	movf	plusw1,w,c
 23637  01A332  2601               	addwf	btemp^0,f,c
 23638  01A334  0EFD               	movlw	-3
 23639  01A336  50E3               	movf	plusw1,w,c
 23640  01A338  2202               	addwfc	(btemp+1)^0,f,c
 23641                           
 23642                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 23643  01A33A  0EF6               	movlw	246
 23644  01A33C  26E1               	addwf	fsr1l,f,c
 23645  01A33E  0EFF               	movlw	255
 23646  01A340  22E2               	addwfc	fsr1h,f,c
 23647  01A342  0012               	return		;funcret
 23648  01A344                     __end_of_pad:
 23649                           	opt callstack 0
 23650                           
 23651 ;; *************** function _strlen *****************
 23652 ;; Defined at:
 23653 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 23654 ;; Parameters:    Size  Location     Type
 23655 ;;  s               2  [STACK] PTR const unsigned char 
 23656 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23657 ;;		 -> spin(120), STR_60(9), STR_59(12), D.lcd(480), 
 23658 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23659 ;;		 -> V(192), 
 23660 ;; Auto vars:     Size  Location     Type
 23661 ;;  a               2  [STACK] PTR const unsigned char 
 23662 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23663 ;;		 -> spin(120), STR_60(9), STR_59(12), D.lcd(480), 
 23664 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23665 ;;		 -> V(192), 
 23666 ;; Return value:  Size  Location     Type
 23667 ;;                  2  [STACK] unsigned int 
 23668 ;; Registers used:
 23669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 23670 ;; Tracked objects:
 23671 ;;		On entry : 0/0
 23672 ;;		On exit  : 0/0
 23673 ;;		Unchanged: 0/0
 23674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23679 ;;Total ram usage:        0 bytes
 23680 ;; Hardware stack levels used:    1
 23681 ;; Hardware stack levels required when called:   15
 23682 ;; This function calls:
 23683 ;;		Nothing
 23684 ;; This function is called by:
 23685 ;;		_eaDogM_WriteString
 23686 ;;		_spinners
 23687 ;;		_calc_bsoc
 23688 ;;		_pad
 23689 ;;		_stoa
 23690 ;; This function uses a reentrant model
 23691 ;;
 23692                           
 23693                           	psect	text82
 23694  01B1AA                     __ptext82:
 23695                           	opt callstack 0
 23696  01B1AA                     _strlen:
 23697                           	opt callstack 0
 23698                           
 23699                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23700  01B1AA  52E6               	movf	postinc1,f,c
 23701  01B1AC  52E6               	movf	postinc1,f,c
 23702                           
 23703                           ;stkvar	_s @ sp[(-2)+-2]
 23704                           
 23705                           ;incstack = 0
 23706 ;; hardware stack exceeded
 23707  01B1AE  0EFC               	movlw	-4
 23708  01B1B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23709  01B1B6  0EFD               	movlw	-3
 23710  01B1B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23711                           
 23712                           ;stkvar	_a @ sp[(-2)+0]
 23713  01B1BE  0EFF               	movlw	-1
 23714  01B1C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23715  01B1C6  0EFE               	movlw	-2
 23716  01B1C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23717  01B1CE  D011               	goto	l8047
 23718  01B1D0                     l8045:
 23719                           
 23720                           ;stkvar	_s @ sp[(-2)+-2]
 23721  01B1D0  0EFC               	movlw	-4
 23722  01B1D2  50E3               	movf	plusw1,w,c
 23723  01B1D4  0F01               	addlw	1
 23724  01B1D6  6E01               	movwf	btemp^0,c
 23725  01B1D8  0EFC               	movlw	-4
 23726  01B1DA  0060  F007  FFE3   	movff	btemp,plusw1
 23727  01B1E0  6A01               	clrf	btemp^0,c
 23728  01B1E2  0EFD               	movlw	-3
 23729  01B1E4  50E3               	movf	plusw1,w,c
 23730  01B1E6  2001               	addwfc	btemp^0,w,c
 23731  01B1E8  6E01               	movwf	btemp^0,c
 23732  01B1EA  0EFD               	movlw	-3
 23733  01B1EC  0060  F007  FFE3   	movff	btemp,plusw1
 23734  01B1F2                     l8047:
 23735                           
 23736                           ;stkvar	_s @ sp[(-2)+-2]
 23737  01B1F2  0EFC               	movlw	-4
 23738  01B1F4  006F FF8F FFF6     	movff	plusw1,tblptrl
 23739  01B1FA  0EFD               	movlw	-3
 23740  01B1FC  006F FF8F FFF7     	movff	plusw1,tblptrh
 23741  01B202  0E00               	movlw	low (__mediumconst shr (0+16))
 23742  01B204  6EF8               	movwf	tblptru,c
 23743  01B206  0E1F               	movlw	(high __ramtop+-1)
 23744  01B208  64F7               	cpfsgt	tblptrh,c
 23745  01B20A  D003               	bra	u5657
 23746  01B20C  0008               	tblrd		*
 23747  01B20E  50F5               	movf	tablat,w,c
 23748  01B210  D007               	bra	u5650
 23749  01B212                     u5657:
 23750  01B212  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23751  01B218  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23752  01B21E  50EF               	movf	indf0,w,c
 23753  01B220                     u5650:
 23754  01B220  0900               	iorlw	0
 23755  01B222  A4D8               	btfss	status,2,c
 23756  01B224  D7D5               	goto	l8045
 23757                           
 23758                           ;stkvar	_a @ sp[(-2)+0]
 23759                           ;stkvar	_s @ sp[(-2)+-2]
 23760  01B226  0EFC               	movlw	-4
 23761  01B228  006F FF8C  F001    	movff	plusw1,btemp
 23762  01B22E  0EFD               	movlw	-3
 23763  01B230  006F FF8C  F002    	movff	plusw1,btemp+1
 23764  01B236  0EFE               	movlw	-2
 23765  01B238  50E3               	movf	plusw1,w,c
 23766  01B23A  5E01               	subwf	btemp^0,f,c
 23767  01B23C  0EFF               	movlw	-1
 23768  01B23E  50E3               	movf	plusw1,w,c
 23769  01B240  5A02               	subwfb	(btemp+1)^0,f,c
 23770                           
 23771                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23772  01B242  52E5               	movf	postdec1,f,c
 23773  01B244  52E5               	movf	postdec1,f,c
 23774  01B246  52E5               	movf	postdec1,f,c
 23775  01B248  52E5               	movf	postdec1,f,c
 23776  01B24A  0012               	return		;funcret
 23777  01B24C                     __end_of_strlen:
 23778                           	opt callstack 0
 23779                           
 23780 ;; *************** function _fputs *****************
 23781 ;; Defined at:
 23782 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 23783 ;; Parameters:    Size  Location     Type
 23784 ;;  s               2  [STACK] PTR const unsigned char 
 23785 ;;		 -> dbuf(80), 
 23786 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23787 ;;		 -> f(6), NULL(0), 
 23788 ;; Auto vars:     Size  Location     Type
 23789 ;;  i               2  [STACK] int 
 23790 ;;  c               1  [STACK] unsigned char 
 23791 ;; Return value:  Size  Location     Type
 23792 ;;                  2  [STACK] int 
 23793 ;; Registers used:
 23794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23795 ;; Tracked objects:
 23796 ;;		On entry : 0/2
 23797 ;;		On exit  : 0/0
 23798 ;;		Unchanged: 0/0
 23799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23804 ;;Total ram usage:        0 bytes
 23805 ;; Hardware stack levels used:    1
 23806 ;; Hardware stack levels required when called:   18
 23807 ;; This function calls:
 23808 ;;		_fputc
 23809 ;; This function is called by:
 23810 ;;		_pad
 23811 ;; This function uses a reentrant model
 23812 ;;
 23813                           
 23814                           	psect	text83
 23815  01B24C                     __ptext83:
 23816                           	opt callstack 0
 23817  01B24C                     _fputs:
 23818                           	opt callstack 0
 23819                           
 23820                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23821  01B24C  52E6               	movf	postinc1,f,c
 23822  01B24E  52E6               	movf	postinc1,f,c
 23823  01B250  52E6               	movf	postinc1,f,c
 23824                           
 23825                           ;stkvar	_i @ sp[(-3)+0]
 23826                           
 23827                           ;incstack = 0
 23828 ;; hardware stack exceeded
 23829  01B252  0EFD               	movlw	-3
 23830  01B254  6AE3               	clrf	plusw1,c
 23831  01B256  0EFE               	movlw	-2
 23832  01B258  6AE3               	clrf	plusw1,c
 23833  01B25A  D01F               	goto	l12417
 23834  01B25C                     l12413:
 23835                           
 23836                           ;stkvar	_fp @ sp[(-3)+-4]
 23837  01B25C  0EF9               	movlw	-7
 23838  01B25E  006F FF8F FFE6     	movff	plusw1,postinc1
 23839  01B264  006F FF8F FFE6     	movff	plusw1,postinc1
 23840                           
 23841                           ;stkvar	_c @ sp[(-5)+2]
 23842  01B26A  0EFD               	movlw	-3
 23843  01B26C  50E3               	movf	plusw1,w,c
 23844  01B26E  6EE6               	movwf	postinc1,c
 23845  01B270  0E00               	movlw	0
 23846  01B272  6EE6               	movwf	postinc1,c
 23847  01B274  EC6E  F0CF         	call	_fputc	;wreg free
 23848                           
 23849                           ;stkvar	_i @ sp[(-3)+0]
 23850  01B278  0EFD               	movlw	-3
 23851  01B27A  50E3               	movf	plusw1,w,c
 23852  01B27C  0F01               	addlw	1
 23853  01B27E  6E01               	movwf	btemp^0,c
 23854  01B280  0EFD               	movlw	-3
 23855  01B282  0060  F007  FFE3   	movff	btemp,plusw1
 23856  01B288  6A01               	clrf	btemp^0,c
 23857  01B28A  0EFE               	movlw	-2
 23858  01B28C  50E3               	movf	plusw1,w,c
 23859  01B28E  2001               	addwfc	btemp^0,w,c
 23860  01B290  6E01               	movwf	btemp^0,c
 23861  01B292  0EFE               	movlw	-2
 23862  01B294  0060  F007  FFE3   	movff	btemp,plusw1
 23863  01B29A                     l12417:
 23864                           
 23865                           ;stkvar	_i @ sp[(-3)+0]
 23866  01B29A  0EFD               	movlw	-3
 23867  01B29C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23868  01B2A2  0EFE               	movlw	-2
 23869  01B2A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23870                           
 23871                           ;stkvar	_s @ sp[(-3)+-2]
 23872  01B2AA  0EFB               	movlw	-5
 23873  01B2AC  006F FF8C  F009    	movff	plusw1,btemp+8
 23874  01B2B2  0EFC               	movlw	-4
 23875  01B2B4  006F FF8C  F00A    	movff	plusw1,btemp+9
 23876  01B2BA  500B               	movf	(btemp+10)^0,w,c
 23877  01B2BC  2409               	addwf	(btemp+8)^0,w,c
 23878  01B2BE  6ED9               	movwf	fsr2l,c
 23879  01B2C0  500C               	movf	(btemp+11)^0,w,c
 23880  01B2C2  200A               	addwfc	(btemp+9)^0,w,c
 23881  01B2C4  6EDA               	movwf	fsr2h,c
 23882  01B2C6  50DF               	movf	indf2,w,c
 23883  01B2C8  6E0C               	movwf	(btemp+11)^0,c
 23884                           
 23885                           ;stkvar	_c @ sp[(-3)+2]
 23886  01B2CA  0EFF               	movlw	-1
 23887  01B2CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23888  01B2D2  0EFF               	movlw	-1
 23889  01B2D4  50E3               	movf	plusw1,w,c
 23890  01B2D6  A4D8               	btfss	status,2,c
 23891  01B2D8  D7C1               	goto	l12413
 23892                           
 23893                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23894  01B2DA  0EF9               	movlw	249
 23895  01B2DC  26E1               	addwf	fsr1l,f,c
 23896  01B2DE  0EFF               	movlw	255
 23897  01B2E0  22E2               	addwfc	fsr1h,f,c
 23898  01B2E2  0012               	return		;funcret
 23899  01B2E4                     __end_of_fputs:
 23900                           	opt callstack 0
 23901                           
 23902 ;; *************** function _fputc *****************
 23903 ;; Defined at:
 23904 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 23905 ;; Parameters:    Size  Location     Type
 23906 ;;  c               2  [STACK] int 
 23907 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23908 ;;		 -> f(6), NULL(0), 
 23909 ;; Auto vars:     Size  Location     Type
 23910 ;;		None
 23911 ;; Return value:  Size  Location     Type
 23912 ;;                  2  [STACK] int 
 23913 ;; Registers used:
 23914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23915 ;; Tracked objects:
 23916 ;;		On entry : 0/0
 23917 ;;		On exit  : 0/0
 23918 ;;		Unchanged: 0/0
 23919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;Total ram usage:        0 bytes
 23925 ;; Hardware stack levels used:    1
 23926 ;; Hardware stack levels required when called:   17
 23927 ;; This function calls:
 23928 ;;		_putch
 23929 ;; This function is called by:
 23930 ;;		_pad
 23931 ;;		_stoa
 23932 ;;		_vfpfcnvrt
 23933 ;;		_fputs
 23934 ;; This function uses a reentrant model
 23935 ;;
 23936                           
 23937                           	psect	text84
 23938  019EDC                     __ptext84:
 23939                           	opt callstack 0
 23940  019EDC                     _fputc:
 23941                           	opt callstack 0
 23942                           
 23943                           ;stkvar	_fp @ sp[(0)+-4]
 23944                           
 23945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23946                           ;incstack = 0
 23947 ;; hardware stack exceeded
 23948  019EDC  0EFC               	movlw	-4
 23949  019EDE  006F FF8C  F001    	movff	plusw1,btemp
 23950  019EE4  0EFD               	movlw	-3
 23951  019EE6  50E3               	movf	plusw1,w,c
 23952  019EE8  1001               	iorwf	btemp^0,w,c
 23953  019EEA  B4D8               	btfsc	status,2,c
 23954  019EEC  D009               	goto	u11210
 23955                           
 23956                           ;stkvar	_fp @ sp[(0)+-4]
 23957  019EEE  0EFC               	movlw	-4
 23958  019EF0  006F FF8C  F001    	movff	plusw1,btemp
 23959  019EF6  0EFD               	movlw	-3
 23960  019EF8  50E3               	movf	plusw1,w,c
 23961  019EFA  1001               	iorwf	btemp^0,w,c
 23962  019EFC  A4D8               	btfss	status,2,c
 23963  019EFE  D006               	goto	l12401
 23964  019F00                     u11210:
 23965                           
 23966                           ;stkvar	_c @ sp[(0)+-2]
 23967  019F00  0EFE               	movlw	-2
 23968  019F02  50E3               	movf	plusw1,w,c
 23969  019F04  6EE6               	movwf	postinc1,c
 23970  019F06  ECE2  F0E4         	call	_putch	;wreg free
 23971  019F0A  D075               	goto	l3307
 23972  019F0C                     l12401:
 23973                           
 23974                           ;stkvar	_fp @ sp[(0)+-4]
 23975  019F0C  0EFC               	movlw	-4
 23976  019F0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23977  019F14  0EFD               	movlw	-3
 23978  019F16  006F FF8C  F00C    	movff	plusw1,btemp+11
 23979  019F1C  0E04               	movlw	4
 23980  019F1E  240B               	addwf	(btemp+10)^0,w,c
 23981  019F20  6ED9               	movwf	fsr2l,c
 23982  019F22  0E00               	movlw	0
 23983  019F24  200C               	addwfc	(btemp+11)^0,w,c
 23984  019F26  6EDA               	movwf	fsr2h,c
 23985  019F28  50DE               	movf	postinc2,w,c
 23986  019F2A  10DE               	iorwf	postinc2,w,c
 23987  019F2C  B4D8               	btfsc	status,2,c
 23988  019F2E  D026               	goto	u11230
 23989                           
 23990                           ;stkvar	_fp @ sp[(0)+-4]
 23991  019F30  0EFC               	movlw	-4
 23992  019F32  006F FF8C  F00B    	movff	plusw1,btemp+10
 23993  019F38  0EFD               	movlw	-3
 23994  019F3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23995  019F40  0E04               	movlw	4
 23996  019F42  240B               	addwf	(btemp+10)^0,w,c
 23997  019F44  6ED9               	movwf	fsr2l,c
 23998  019F46  0E00               	movlw	0
 23999  019F48  200C               	addwfc	(btemp+11)^0,w,c
 24000  019F4A  6EDA               	movwf	fsr2h,c
 24001                           
 24002                           ;stkvar	_fp @ sp[(0)+-4]
 24003  019F4C  0EFC               	movlw	-4
 24004  019F4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24005  019F54  0EFD               	movlw	-3
 24006  019F56  006F FF8C  F00C    	movff	plusw1,btemp+11
 24007  019F5C  0E02               	movlw	2
 24008  019F5E  240B               	addwf	(btemp+10)^0,w,c
 24009  019F60  6EE9               	movwf	fsr0l,c
 24010  019F62  0E00               	movlw	0
 24011  019F64  200C               	addwfc	(btemp+11)^0,w,c
 24012  019F66  6EEA               	movwf	fsr0h,c
 24013  019F68  50DE               	movf	postinc2,w,c
 24014  019F6A  5CEE               	subwf	postinc0,w,c
 24015  019F6C  50EE               	movf	postinc0,w,c
 24016  019F6E  0A80               	xorlw	128
 24017  019F70  6E01               	movwf	btemp^0,c
 24018  019F72  50DE               	movf	postinc2,w,c
 24019  019F74  0A80               	xorlw	128
 24020  019F76  5801               	subwfb	btemp^0,w,c
 24021  019F78  B0D8               	btfsc	status,0,c
 24022  019F7A  D03D               	goto	l3307
 24023  019F7C                     u11230:
 24024                           
 24025                           ;stkvar	_c @ sp[(0)+-2]
 24026                           ;stkvar	_fp @ sp[(0)+-4]
 24027  019F7C  0EFC               	movlw	-4
 24028  019F7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24029  019F84  0EFD               	movlw	-3
 24030  019F86  006F FF8C  F00C    	movff	plusw1,btemp+11
 24031  019F8C  0E02               	movlw	2
 24032  019F8E  240B               	addwf	(btemp+10)^0,w,c
 24033  019F90  6ED9               	movwf	fsr2l,c
 24034  019F92  0E00               	movlw	0
 24035  019F94  200C               	addwfc	(btemp+11)^0,w,c
 24036  019F96  6EDA               	movwf	fsr2h,c
 24037  019F98  006F FF78  F00B    	movff	postinc2,btemp+10
 24038  019F9E  006F FF74  F00C    	movff	postdec2,btemp+11
 24039                           
 24040                           ;stkvar	_fp @ sp[(0)+-4]
 24041  019FA4  0EFC               	movlw	-4
 24042  019FA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 24043  019FAC  0EFD               	movlw	-3
 24044  019FAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 24045  019FB4  006F FF78  F009    	movff	postinc2,btemp+8
 24046  019FBA  006F FF74  F00A    	movff	postdec2,btemp+9
 24047  019FC0  500B               	movf	(btemp+10)^0,w,c
 24048  019FC2  2409               	addwf	(btemp+8)^0,w,c
 24049  019FC4  6ED9               	movwf	fsr2l,c
 24050  019FC6  500C               	movf	(btemp+11)^0,w,c
 24051  019FC8  200A               	addwfc	(btemp+9)^0,w,c
 24052  019FCA  6EDA               	movwf	fsr2h,c
 24053  019FCC  0EFE               	movlw	-2
 24054  019FCE  006F FF8F FFDF     	movff	plusw1,indf2
 24055                           
 24056                           ;stkvar	_fp @ sp[(0)+-4]
 24057  019FD4  0EFC               	movlw	-4
 24058  019FD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24059  019FDC  0EFD               	movlw	-3
 24060  019FDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24061  019FE4  0E02               	movlw	2
 24062  019FE6  240B               	addwf	(btemp+10)^0,w,c
 24063  019FE8  6ED9               	movwf	fsr2l,c
 24064  019FEA  0E00               	movlw	0
 24065  019FEC  200C               	addwfc	(btemp+11)^0,w,c
 24066  019FEE  6EDA               	movwf	fsr2h,c
 24067  019FF0  2ADE               	incf	postinc2,f,c
 24068  019FF2  0E00               	movlw	0
 24069  019FF4  22DD               	addwfc	postdec2,f,c
 24070  019FF6                     l3307:
 24071                           
 24072                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24073  019FF6  52E5               	movf	postdec1,f,c
 24074  019FF8  52E5               	movf	postdec1,f,c
 24075  019FFA  52E5               	movf	postdec1,f,c
 24076  019FFC  52E5               	movf	postdec1,f,c
 24077  019FFE  0012               	return		;funcret
 24078  01A000                     __end_of_fputc:
 24079                           	opt callstack 0
 24080                           
 24081 ;; *************** function _putch *****************
 24082 ;; Defined at:
 24083 ;;		line 421 in file "eadog.c"
 24084 ;; Parameters:    Size  Location     Type
 24085 ;;  c               1  [STACK] unsigned char 
 24086 ;; Auto vars:     Size  Location     Type
 24087 ;;		None
 24088 ;; Return value:  Size  Location     Type
 24089 ;;                  1  [STACK] void 
 24090 ;; Registers used:
 24091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24092 ;; Tracked objects:
 24093 ;;		On entry : 0/0
 24094 ;;		On exit  : 0/0
 24095 ;;		Unchanged: 0/0
 24096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;Total ram usage:        0 bytes
 24102 ;; Hardware stack levels used:    1
 24103 ;; Hardware stack levels required when called:   16
 24104 ;; This function calls:
 24105 ;;		_ringBufS_put_dma
 24106 ;; This function is called by:
 24107 ;;		_fputc
 24108 ;; This function uses a reentrant model
 24109 ;;
 24110                           
 24111                           	psect	text85
 24112  01C9C4                     __ptext85:
 24113                           	opt callstack 0
 24114  01C9C4                     _putch:
 24115                           	opt callstack 0
 24116                           
 24117                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 24118                           ;stkvar	_c @ sp[(0)+-1]
 24119                           
 24120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24121                           ;incstack = 0
 24122 ;; hardware stack exceeded
 24123  01C9C4  0EFF               	movlw	-1
 24124  01C9C6  50E3               	movf	plusw1,w,c
 24125  01C9C8  6EE6               	movwf	postinc1,c
 24126  01C9CA  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 24127  01C9D0  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 24128  01C9D6  ECD9  F0D7         	call	_ringBufS_put_dma	;wreg free
 24129                           
 24130                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 24131  01C9DA  52E5               	movf	postdec1,f,c
 24132  01C9DC  0012               	return		;funcret
 24133  01C9DE                     __end_of_putch:
 24134                           	opt callstack 0
 24135                           
 24136 ;; *************** function _ringBufS_put_dma *****************
 24137 ;; Defined at:
 24138 ;;		line 67 in file "ringbufs.c"
 24139 ;; Parameters:    Size  Location     Type
 24140 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24141 ;;		 -> ring_buf1(67), 
 24142 ;;  c               1  [STACK] const unsigned char 
 24143 ;; Auto vars:     Size  Location     Type
 24144 ;;		None
 24145 ;; Return value:  Size  Location     Type
 24146 ;;                  1  [STACK] void 
 24147 ;; Registers used:
 24148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24149 ;; Tracked objects:
 24150 ;;		On entry : 0/0
 24151 ;;		On exit  : 0/0
 24152 ;;		Unchanged: 0/0
 24153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24158 ;;Total ram usage:        0 bytes
 24159 ;; Hardware stack levels used:    1
 24160 ;; Hardware stack levels required when called:   15
 24161 ;; This function calls:
 24162 ;;		Nothing
 24163 ;; This function is called by:
 24164 ;;		_putch
 24165 ;; This function uses a reentrant model
 24166 ;;
 24167                           
 24168                           	psect	text86
 24169  01AFB2                     __ptext86:
 24170                           	opt callstack 0
 24171  01AFB2                     _ringBufS_put_dma:
 24172                           	opt callstack 0
 24173                           
 24174                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 24175                           ;stkvar	__this @ sp[(0)+-2]
 24176                           
 24177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24178                           ;incstack = 0
 24179 ;; hardware stack exceeded
 24180  01AFB2  0EFE               	movlw	-2
 24181  01AFB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24182  01AFBA  0EFF               	movlw	-1
 24183  01AFBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24184  01AFC2  0E42               	movlw	66
 24185  01AFC4  240B               	addwf	(btemp+10)^0,w,c
 24186  01AFC6  6ED9               	movwf	fsr2l,c
 24187  01AFC8  0E00               	movlw	0
 24188  01AFCA  200C               	addwfc	(btemp+11)^0,w,c
 24189  01AFCC  6EDA               	movwf	fsr2h,c
 24190  01AFCE  0E40               	movlw	64
 24191  01AFD0  60DF               	cpfslt	indf2,c
 24192  01AFD2  D040               	goto	l1612
 24193                           
 24194                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 24195                           ;stkvar	_c @ sp[(0)+-3]
 24196                           ;stkvar	__this @ sp[(0)+-2]
 24197  01AFD4  0EFE               	movlw	-2
 24198  01AFD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24199  01AFDC  0EFF               	movlw	-1
 24200  01AFDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24201  01AFE4  0E40               	movlw	64
 24202  01AFE6  240B               	addwf	(btemp+10)^0,w,c
 24203  01AFE8  6ED9               	movwf	fsr2l,c
 24204  01AFEA  0E00               	movlw	0
 24205  01AFEC  200C               	addwfc	(btemp+11)^0,w,c
 24206  01AFEE  6EDA               	movwf	fsr2h,c
 24207  01AFF0  50DF               	movf	indf2,w,c
 24208  01AFF2  6E0C               	movwf	(btemp+11)^0,c
 24209                           
 24210                           ;stkvar	__this @ sp[(0)+-2]
 24211  01AFF4  0EFE               	movlw	-2
 24212  01AFF6  006F FF8C  F009    	movff	plusw1,btemp+8
 24213  01AFFC  0EFF               	movlw	-1
 24214  01AFFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 24215  01B004  500C               	movf	(btemp+11)^0,w,c
 24216  01B006  2409               	addwf	(btemp+8)^0,w,c
 24217  01B008  6ED9               	movwf	fsr2l,c
 24218  01B00A  0E00               	movlw	0
 24219  01B00C  200A               	addwfc	(btemp+9)^0,w,c
 24220  01B00E  6EDA               	movwf	fsr2h,c
 24221  01B010  0EFD               	movlw	-3
 24222  01B012  006F FF8F FFDF     	movff	plusw1,indf2
 24223                           
 24224                           ;ringbufs.c: 71:   ++_this->head;
 24225                           ;stkvar	__this @ sp[(0)+-2]
 24226  01B018  0EFE               	movlw	-2
 24227  01B01A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24228  01B020  0EFF               	movlw	-1
 24229  01B022  006F FF8C  F00C    	movff	plusw1,btemp+11
 24230  01B028  0E40               	movlw	64
 24231  01B02A  240B               	addwf	(btemp+10)^0,w,c
 24232  01B02C  6ED9               	movwf	fsr2l,c
 24233  01B02E  0E00               	movlw	0
 24234  01B030  200C               	addwfc	(btemp+11)^0,w,c
 24235  01B032  6EDA               	movwf	fsr2h,c
 24236  01B034  2ADF               	incf	indf2,f,c
 24237                           
 24238                           ;ringbufs.c: 72:   ++_this->count;
 24239                           ;stkvar	__this @ sp[(0)+-2]
 24240  01B036  0EFE               	movlw	-2
 24241  01B038  006F FF8C  F00B    	movff	plusw1,btemp+10
 24242  01B03E  0EFF               	movlw	-1
 24243  01B040  006F FF8C  F00C    	movff	plusw1,btemp+11
 24244  01B046  0E42               	movlw	66
 24245  01B048  240B               	addwf	(btemp+10)^0,w,c
 24246  01B04A  6ED9               	movwf	fsr2l,c
 24247  01B04C  0E00               	movlw	0
 24248  01B04E  200C               	addwfc	(btemp+11)^0,w,c
 24249  01B050  6EDA               	movwf	fsr2h,c
 24250  01B052  2ADF               	incf	indf2,f,c
 24251  01B054                     l1612:
 24252                           
 24253                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 24254  01B054  52E5               	movf	postdec1,f,c
 24255  01B056  52E5               	movf	postdec1,f,c
 24256  01B058  52E5               	movf	postdec1,f,c
 24257  01B05A  0012               	return		;funcret
 24258  01B05C                     __end_of_ringBufS_put_dma:
 24259                           	opt callstack 0
 24260                           
 24261 ;; *************** function _atoi *****************
 24262 ;; Defined at:
 24263 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24264 ;; Parameters:    Size  Location     Type
 24265 ;;  s               2  [STACK] PTR const unsigned char 
 24266 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 24267 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 24268 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 24269 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 24270 ;;		 -> STR_61(19), STR_58(3), STR_57(3), STR_56(21), 
 24271 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 24272 ;;		 -> STR_51(21), STR_50(21), STR_49(21), STR_48(21), 
 24273 ;;		 -> STR_47(20), STR_46(20), STR_45(21), STR_44(21), 
 24274 ;;		 -> STR_43(21), STR_42(22), STR_41(22), STR_40(22), 
 24275 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 24276 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 24277 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 24278 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 24279 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 24280 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 24281 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 24282 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 24283 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24284 ;;		 -> STR_2(21), STR_1(21), 
 24285 ;; Auto vars:     Size  Location     Type
 24286 ;;  n               2  [STACK] int 
 24287 ;;  neg             2  [STACK] int 
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  2  [STACK] int 
 24290 ;; Registers used:
 24291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/0
 24294 ;;		On exit  : 0/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24301 ;;Total ram usage:        0 bytes
 24302 ;; Hardware stack levels used:    1
 24303 ;; Hardware stack levels required when called:   16
 24304 ;; This function calls:
 24305 ;;		_isdigit
 24306 ;;		_isspace
 24307 ;; This function is called by:
 24308 ;;		_vfpfcnvrt
 24309 ;; This function uses a reentrant model
 24310 ;;
 24311                           
 24312                           	psect	text87
 24313  017D2A                     __ptext87:
 24314                           	opt callstack 0
 24315  017D2A                     _atoi:
 24316                           	opt callstack 0
 24317                           
 24318                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24319  017D2A  0E09               	movlw	9
 24320  017D2C  26E1               	addwf	fsr1l,f,c
 24321  017D2E  0E00               	movlw	0
 24322  017D30  22E2               	addwfc	fsr1h,f,c
 24323                           
 24324                           ;stkvar	_n @ sp[(-9)+5]
 24325                           
 24326                           ;incstack = 0
 24327 ;; hardware stack exceeded
 24328  017D32  0EFC               	movlw	-4
 24329  017D34  6AE3               	clrf	plusw1,c
 24330  017D36  0EFD               	movlw	-3
 24331  017D38  6AE3               	clrf	plusw1,c
 24332                           
 24333                           ;stkvar	_neg @ sp[(-9)+7]
 24334  017D3A  0EFE               	movlw	-2
 24335  017D3C  6AE3               	clrf	plusw1,c
 24336  017D3E  0EFF               	movlw	-1
 24337  017D40  6AE3               	clrf	plusw1,c
 24338  017D42  D011               	goto	l9671
 24339  017D44                     l9669:
 24340                           
 24341                           ;stkvar	_s @ sp[(-9)+-2]
 24342  017D44  0EF5               	movlw	-11
 24343  017D46  50E3               	movf	plusw1,w,c
 24344  017D48  0F01               	addlw	1
 24345  017D4A  6E01               	movwf	btemp^0,c
 24346  017D4C  0EF5               	movlw	-11
 24347  017D4E  0060  F007  FFE3   	movff	btemp,plusw1
 24348  017D54  6A01               	clrf	btemp^0,c
 24349  017D56  0EF6               	movlw	-10
 24350  017D58  50E3               	movf	plusw1,w,c
 24351  017D5A  2001               	addwfc	btemp^0,w,c
 24352  017D5C  6E01               	movwf	btemp^0,c
 24353  017D5E  0EF6               	movlw	-10
 24354  017D60  0060  F007  FFE3   	movff	btemp,plusw1
 24355  017D66                     l9671:
 24356                           
 24357                           ;stkvar	_atoi$6417 @ sp[(-9)+4]
 24358  017D66  0EFB               	movlw	-5
 24359  017D68  6AE3               	clrf	plusw1,c
 24360  017D6A  2AE3               	incf	plusw1,f,c
 24361                           
 24362                           ;stkvar	_s @ sp[(-9)+-2]
 24363  017D6C  50E1               	movf	fsr1l,w,c
 24364  017D6E  0FF5               	addlw	-11
 24365  017D70  6ED9               	movwf	fsr2l,c
 24366  017D72  50E2               	movf	fsr1h,w,c
 24367  017D74  6EDA               	movwf	fsr2h,c
 24368  017D76  0EFF               	movlw	255
 24369  017D78  22DA               	addwfc	fsr2h,f,c
 24370  017D7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 24371  017D80  006F FF77 FFF7     	movff	postdec2,tblptrh
 24372  017D86                     	if	0	;tblptru may be non-zero
 24373  017D86                     	endif
 24374  017D86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24375  017D86  0E00               	movlw	low (__mediumconst shr (0+16))
 24376  017D88  6EF8               	movwf	tblptru,c
 24377  017D8A                     	endif
 24378  017D8A  0008               	tblrd		*
 24379  017D8C  50F5               	movf	tablat,w,c
 24380  017D8E  0A20               	xorlw	32
 24381  017D90  B4D8               	btfsc	status,2,c
 24382  017D92  D023               	goto	l9679
 24383  017D94  0EF7               	movlw	247
 24384  017D96  6E0B               	movwf	(btemp+10)^0,c
 24385  017D98  0EFF               	movlw	255
 24386  017D9A  6E0C               	movwf	(btemp+11)^0,c
 24387                           
 24388                           ;stkvar	_s @ sp[(-9)+-2]
 24389  017D9C  50E1               	movf	fsr1l,w,c
 24390  017D9E  0FF5               	addlw	-11
 24391  017DA0  6ED9               	movwf	fsr2l,c
 24392  017DA2  50E2               	movf	fsr1h,w,c
 24393  017DA4  6EDA               	movwf	fsr2h,c
 24394  017DA6  0EFF               	movlw	255
 24395  017DA8  22DA               	addwfc	fsr2h,f,c
 24396  017DAA  006F FF7B FFF6     	movff	postinc2,tblptrl
 24397  017DB0  006F FF77 FFF7     	movff	postdec2,tblptrh
 24398  017DB6                     	if	0	;tblptru may be non-zero
 24399  017DB6                     	endif
 24400  017DB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24401  017DB6  0E00               	movlw	low (__mediumconst shr (0+16))
 24402  017DB8  6EF8               	movwf	tblptru,c
 24403  017DBA                     	endif
 24404  017DBA  0008               	tblrd		*
 24405  017DBC  50F5               	movf	tablat,w,c
 24406  017DBE  6E09               	movwf	(btemp+8)^0,c
 24407  017DC0  6A0A               	clrf	(btemp+9)^0,c
 24408  017DC2  500B               	movf	(btemp+10)^0,w,c
 24409  017DC4  2609               	addwf	(btemp+8)^0,f,c
 24410  017DC6  500C               	movf	(btemp+11)^0,w,c
 24411  017DC8  220A               	addwfc	(btemp+9)^0,f,c
 24412  017DCA  500A               	movf	(btemp+9)^0,w,c
 24413  017DCC  E104               	bnz	u8770
 24414  017DCE  0E05               	movlw	5
 24415  017DD0  5C09               	subwf	(btemp+8)^0,w,c
 24416  017DD2  A0D8               	btfss	status,0,c
 24417  017DD4  D002               	goto	l9679
 24418  017DD6                     u8770:
 24419                           
 24420                           ;stkvar	_atoi$6417 @ sp[(-9)+4]
 24421  017DD6  0EFB               	movlw	-5
 24422  017DD8  6AE3               	clrf	plusw1,c
 24423  017DDA                     l9679:
 24424                           
 24425                           ;stkvar	_atoi$6417 @ sp[(-9)+4]
 24426  017DDA  0EFB               	movlw	-5
 24427  017DDC  50E3               	movf	plusw1,w,c
 24428  017DDE  6E0B               	movwf	(btemp+10)^0,c
 24429  017DE0  6A0C               	clrf	(btemp+11)^0,c
 24430                           
 24431                           ;stkvar	_atoi$6416 @ sp[(-9)+2]
 24432  017DE2  0EF9               	movlw	-7
 24433  017DE4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24434  017DEA  0EFA               	movlw	-6
 24435  017DEC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24436                           
 24437                           ;stkvar	_atoi$6416 @ sp[(-9)+2]
 24438  017DF2  0EF9               	movlw	-7
 24439  017DF4  006F FF8C  F001    	movff	plusw1,btemp
 24440  017DFA  0EFA               	movlw	-6
 24441  017DFC  50E3               	movf	plusw1,w,c
 24442  017DFE  1001               	iorwf	btemp^0,w,c
 24443  017E00  B4D8               	btfsc	status,2,c
 24444  017E02  D01F               	goto	l9689
 24445  017E04  D79F               	goto	l9669
 24446  017E06                     l9685:
 24447  017E06  0E01               	movlw	1
 24448  017E08  6E0B               	movwf	(btemp+10)^0,c
 24449  017E0A  0E00               	movlw	0
 24450  017E0C  6E0C               	movwf	(btemp+11)^0,c
 24451                           
 24452                           ;stkvar	_neg @ sp[(-9)+7]
 24453  017E0E  0EFE               	movlw	-2
 24454  017E10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24455  017E16  0EFF               	movlw	-1
 24456  017E18  0060  F033  FFE3   	movff	btemp+11,plusw1
 24457  017E1E                     l9687:
 24458                           
 24459                           ;stkvar	_s @ sp[(-9)+-2]
 24460  017E1E  0EF5               	movlw	-11
 24461  017E20  50E3               	movf	plusw1,w,c
 24462  017E22  0F01               	addlw	1
 24463  017E24  6E01               	movwf	btemp^0,c
 24464  017E26  0EF5               	movlw	-11
 24465  017E28  0060  F007  FFE3   	movff	btemp,plusw1
 24466  017E2E  6A01               	clrf	btemp^0,c
 24467  017E30  0EF6               	movlw	-10
 24468  017E32  50E3               	movf	plusw1,w,c
 24469  017E34  2001               	addwfc	btemp^0,w,c
 24470  017E36  6E01               	movwf	btemp^0,c
 24471  017E38  0EF6               	movlw	-10
 24472  017E3A  0060  F007  FFE3   	movff	btemp,plusw1
 24473  017E40  D053               	goto	l9695
 24474  017E42                     l9689:
 24475                           
 24476                           ;stkvar	_s @ sp[(-9)+-2]
 24477  017E42  50E1               	movf	fsr1l,w,c
 24478  017E44  0FF5               	addlw	-11
 24479  017E46  6ED9               	movwf	fsr2l,c
 24480  017E48  50E2               	movf	fsr1h,w,c
 24481  017E4A  6EDA               	movwf	fsr2h,c
 24482  017E4C  0EFF               	movlw	255
 24483  017E4E  22DA               	addwfc	fsr2h,f,c
 24484  017E50  006F FF7B FFF6     	movff	postinc2,tblptrl
 24485  017E56  006F FF77 FFF7     	movff	postdec2,tblptrh
 24486  017E5C                     	if	0	;tblptru may be non-zero
 24487  017E5C                     	endif
 24488  017E5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24489  017E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 24490  017E5E  6EF8               	movwf	tblptru,c
 24491  017E60                     	endif
 24492  017E60  0008               	tblrd		*
 24493  017E62  50F5               	movf	tablat,w,c
 24494  017E64  6E0B               	movwf	(btemp+10)^0,c
 24495  017E66  6A0C               	clrf	(btemp+11)^0,c
 24496                           
 24497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24498                           ; Switch size 1, requested type "simple"
 24499                           ; Number of cases is 1, Range of values is 0 to 0
 24500                           ; switch strategies available:
 24501                           ; Name         Instructions Cycles
 24502                           ; simple_byte            4     3 (average)
 24503                           ;	Chosen strategy is simple_byte
 24504  017E68  500C               	movf	(btemp+11)^0,w,c
 24505  017E6A  0A00               	xorlw	0	; case 0
 24506  017E6C  A4D8               	btfss	status,2,c
 24507  017E6E  D03C               	goto	l9695
 24508                           
 24509                           ; Switch size 1, requested type "simple"
 24510                           ; Number of cases is 2, Range of values is 43 to 45
 24511                           ; switch strategies available:
 24512                           ; Name         Instructions Cycles
 24513                           ; simple_byte            7     4 (average)
 24514                           ;	Chosen strategy is simple_byte
 24515  017E70  500B               	movf	(btemp+10)^0,w,c
 24516  017E72  0A2B               	xorlw	43	; case 43
 24517  017E74  B4D8               	btfsc	status,2,c
 24518  017E76  D7D3               	goto	l9687
 24519  017E78  0A06               	xorlw	6	; case 45
 24520  017E7A  B4D8               	btfsc	status,2,c
 24521  017E7C  D7C4               	goto	l9685
 24522  017E7E  D034               	goto	l9695
 24523  017E80                     l9691:
 24524                           
 24525                           ;stkvar	_n @ sp[(-9)+5]
 24526  017E80  0EFC               	movlw	-4
 24527  017E82  006F FF8C  F00B    	movff	plusw1,btemp+10
 24528  017E88  0EFD               	movlw	-3
 24529  017E8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24530  017E90  0E0A               	movlw	10
 24531  017E92  020B               	mulwf	(btemp+10)^0,c
 24532  017E94  006F FFCC  F009    	movff	prodl,btemp+8
 24533  017E9A  006F FFD0  F00A    	movff	prodh,btemp+9
 24534  017EA0  020C               	mulwf	(btemp+11)^0,c
 24535  017EA2  50F3               	movf	prodl,w,c
 24536  017EA4  260A               	addwf	(btemp+9)^0,f,c
 24537                           
 24538                           ;stkvar	_s @ sp[(-9)+-2]
 24539  017EA6  50E1               	movf	fsr1l,w,c
 24540  017EA8  0FF5               	addlw	-11
 24541  017EAA  6ED9               	movwf	fsr2l,c
 24542  017EAC  50E2               	movf	fsr1h,w,c
 24543  017EAE  6EDA               	movwf	fsr2h,c
 24544  017EB0  0EFF               	movlw	255
 24545  017EB2  22DA               	addwfc	fsr2h,f,c
 24546  017EB4  006F FF7B FFF6     	movff	postinc2,tblptrl
 24547  017EBA  006F FF77 FFF7     	movff	postdec2,tblptrh
 24548  017EC0                     	if	0	;tblptru may be non-zero
 24549  017EC0                     	endif
 24550  017EC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24551  017EC0  0E00               	movlw	low (__mediumconst shr (0+16))
 24552  017EC2  6EF8               	movwf	tblptru,c
 24553  017EC4                     	endif
 24554  017EC4  0008               	tblrd		*
 24555  017EC6  50F5               	movf	tablat,w,c
 24556  017EC8  5E09               	subwf	(btemp+8)^0,f,c
 24557  017ECA  0E00               	movlw	0
 24558  017ECC  5A0A               	subwfb	(btemp+9)^0,f,c
 24559  017ECE  0E30               	movlw	48
 24560  017ED0  2609               	addwf	(btemp+8)^0,f,c
 24561  017ED2  0E00               	movlw	0
 24562  017ED4  220A               	addwfc	(btemp+9)^0,f,c
 24563                           
 24564                           ;stkvar	_n @ sp[(-9)+5]
 24565  017ED6  0EFC               	movlw	-4
 24566  017ED8  0060  F027  FFE3   	movff	btemp+8,plusw1
 24567  017EDE  0EFD               	movlw	-3
 24568  017EE0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24569  017EE6  D79B               	goto	l9687
 24570  017EE8                     l9695:
 24571  017EE8  0ED0               	movlw	208
 24572  017EEA  6E0B               	movwf	(btemp+10)^0,c
 24573  017EEC  0EFF               	movlw	255
 24574  017EEE  6E0C               	movwf	(btemp+11)^0,c
 24575                           
 24576                           ;stkvar	_s @ sp[(-9)+-2]
 24577  017EF0  50E1               	movf	fsr1l,w,c
 24578  017EF2  0FF5               	addlw	-11
 24579  017EF4  6ED9               	movwf	fsr2l,c
 24580  017EF6  50E2               	movf	fsr1h,w,c
 24581  017EF8  6EDA               	movwf	fsr2h,c
 24582  017EFA  0EFF               	movlw	255
 24583  017EFC  22DA               	addwfc	fsr2h,f,c
 24584  017EFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 24585  017F04  006F FF77 FFF7     	movff	postdec2,tblptrh
 24586  017F0A                     	if	0	;tblptru may be non-zero
 24587  017F0A                     	endif
 24588  017F0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24589  017F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 24590  017F0C  6EF8               	movwf	tblptru,c
 24591  017F0E                     	endif
 24592  017F0E  0008               	tblrd		*
 24593  017F10  50F5               	movf	tablat,w,c
 24594  017F12  6E09               	movwf	(btemp+8)^0,c
 24595  017F14  6A0A               	clrf	(btemp+9)^0,c
 24596  017F16  500B               	movf	(btemp+10)^0,w,c
 24597  017F18  2609               	addwf	(btemp+8)^0,f,c
 24598  017F1A  500C               	movf	(btemp+11)^0,w,c
 24599  017F1C  220A               	addwfc	(btemp+9)^0,f,c
 24600  017F1E  500A               	movf	(btemp+9)^0,w,c
 24601  017F20  E106               	bnz	u8790
 24602  017F22  0E0A               	movlw	10
 24603  017F24  5C09               	subwf	(btemp+8)^0,w,c
 24604  017F26  B0D8               	btfsc	status,0,c
 24605  017F28  D002               	goto	u8790
 24606  017F2A  0E01               	movlw	1
 24607  017F2C  D001               	goto	u8800
 24608  017F2E                     u8790:
 24609  017F2E  0E00               	movlw	0
 24610  017F30                     u8800:
 24611  017F30  6E0B               	movwf	(btemp+10)^0,c
 24612  017F32  6A0C               	clrf	(btemp+11)^0,c
 24613                           
 24614                           ;stkvar	_atoi$6418 @ sp[(-9)+0]
 24615  017F34  0EF7               	movlw	-9
 24616  017F36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24617  017F3C  0EF8               	movlw	-8
 24618  017F3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24619                           
 24620                           ;stkvar	_atoi$6418 @ sp[(-9)+0]
 24621  017F44  0EF7               	movlw	-9
 24622  017F46  006F FF8C  F001    	movff	plusw1,btemp
 24623  017F4C  0EF8               	movlw	-8
 24624  017F4E  50E3               	movf	plusw1,w,c
 24625  017F50  1001               	iorwf	btemp^0,w,c
 24626  017F52  A4D8               	btfss	status,2,c
 24627  017F54  D795               	goto	l9691
 24628                           
 24629                           ;stkvar	_neg @ sp[(-9)+7]
 24630  017F56  0EFE               	movlw	-2
 24631  017F58  006F FF8C  F001    	movff	plusw1,btemp
 24632  017F5E  0EFF               	movlw	-1
 24633  017F60  50E3               	movf	plusw1,w,c
 24634  017F62  1001               	iorwf	btemp^0,w,c
 24635  017F64  A4D8               	btfss	status,2,c
 24636  017F66  D00E               	goto	l9705
 24637                           
 24638                           ;stkvar	_n @ sp[(-9)+5]
 24639  017F68  0EFC               	movlw	-4
 24640  017F6A  006F FF8C  F001    	movff	plusw1,btemp
 24641  017F70  1E01               	comf	btemp^0,f,c
 24642  017F72  0EFD               	movlw	-3
 24643  017F74  006F FF8C  F002    	movff	plusw1,btemp+1
 24644  017F7A  1E02               	comf	(btemp+1)^0,f,c
 24645  017F7C  2A01               	incf	btemp^0,f,c
 24646  017F7E  B4D8               	btfsc	status,2,c
 24647  017F80  2A02               	incf	(btemp+1)^0,f,c
 24648  017F82  D008               	goto	l3238
 24649  017F84                     l9705:
 24650                           
 24651                           ;stkvar	_n @ sp[(-9)+5]
 24652  017F84  0EFC               	movlw	-4
 24653  017F86  006F FF8C  F001    	movff	plusw1,btemp
 24654  017F8C  0EFD               	movlw	-3
 24655  017F8E  006F FF8C  F002    	movff	plusw1,btemp+1
 24656  017F94                     l3238:
 24657                           
 24658                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24659  017F94  0EF5               	movlw	245
 24660  017F96  26E1               	addwf	fsr1l,f,c
 24661  017F98  0EFF               	movlw	255
 24662  017F9A  22E2               	addwfc	fsr1h,f,c
 24663  017F9C  0012               	return		;funcret
 24664  017F9E                     __end_of_atoi:
 24665                           	opt callstack 0
 24666                           
 24667 ;; *************** function _isspace *****************
 24668 ;; Defined at:
 24669 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24670 ;; Parameters:    Size  Location     Type
 24671 ;;  c               2  [STACK] int 
 24672 ;; Auto vars:     Size  Location     Type
 24673 ;;		None
 24674 ;; Return value:  Size  Location     Type
 24675 ;;                  2  [STACK] int 
 24676 ;; Registers used:
 24677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24678 ;; Tracked objects:
 24679 ;;		On entry : 0/0
 24680 ;;		On exit  : 0/0
 24681 ;;		Unchanged: 0/0
 24682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24687 ;;Total ram usage:        0 bytes
 24688 ;; Hardware stack levels used:    1
 24689 ;; Hardware stack levels required when called:   15
 24690 ;; This function calls:
 24691 ;;		Nothing
 24692 ;; This function is called by:
 24693 ;;		_atoi
 24694 ;; This function uses a reentrant model
 24695 ;;
 24696                           
 24697                           	psect	text88
 24698  01BC9C                     __ptext88:
 24699                           	opt callstack 0
 24700  01BC9C                     _isspace:
 24701                           	opt callstack 0
 24702                           
 24703                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24704  01BC9C  52E6               	movf	postinc1,f,c
 24705                           
 24706                           ;stkvar	_isspace$6467 @ sp[(-1)+0]
 24707                           
 24708                           ;incstack = 0
 24709 ;; hardware stack exceeded
 24710  01BC9E  0EFF               	movlw	-1
 24711  01BCA0  6AE3               	clrf	plusw1,c
 24712  01BCA2  2AE3               	incf	plusw1,f,c
 24713                           
 24714                           ;stkvar	_c @ sp[(-1)+-2]
 24715  01BCA4  0EFD               	movlw	-3
 24716  01BCA6  006F FF8C  F001    	movff	plusw1,btemp
 24717  01BCAC  0E20               	movlw	32
 24718  01BCAE  1801               	xorwf	btemp^0,w,c
 24719  01BCB0  E104               	bnz	u7660
 24720  01BCB2  0EFE               	movlw	-2
 24721  01BCB4  50E3               	movf	plusw1,w,c
 24722  01BCB6  B4D8               	btfsc	status,2,c
 24723  01BCB8  D012               	goto	l9089
 24724  01BCBA                     u7660:
 24725                           
 24726                           ;stkvar	_c @ sp[(-1)+-2]
 24727  01BCBA  0EFD               	movlw	-3
 24728  01BCBC  50E3               	movf	plusw1,w,c
 24729  01BCBE  0FF7               	addlw	247
 24730  01BCC0  6E0B               	movwf	(btemp+10)^0,c
 24731  01BCC2  0EFE               	movlw	-2
 24732  01BCC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24733  01BCCA  0EFF               	movlw	255
 24734  01BCCC  220C               	addwfc	(btemp+11)^0,f,c
 24735  01BCCE  500C               	movf	(btemp+11)^0,w,c
 24736  01BCD0  E104               	bnz	u7670
 24737  01BCD2  0E05               	movlw	5
 24738  01BCD4  5C0B               	subwf	(btemp+10)^0,w,c
 24739  01BCD6  A0D8               	btfss	status,0,c
 24740  01BCD8  D002               	goto	l9089
 24741  01BCDA                     u7670:
 24742                           
 24743                           ;stkvar	_isspace$6467 @ sp[(-1)+0]
 24744  01BCDA  0EFF               	movlw	-1
 24745  01BCDC  6AE3               	clrf	plusw1,c
 24746  01BCDE                     l9089:
 24747                           
 24748                           ;stkvar	_isspace$6467 @ sp[(-1)+0]
 24749  01BCDE  0EFF               	movlw	-1
 24750  01BCE0  50E3               	movf	plusw1,w,c
 24751  01BCE2  6E01               	movwf	btemp^0,c
 24752  01BCE4  6A02               	clrf	(btemp+1)^0,c
 24753                           
 24754                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24755  01BCE6  52E5               	movf	postdec1,f,c
 24756  01BCE8  52E5               	movf	postdec1,f,c
 24757  01BCEA  52E5               	movf	postdec1,f,c
 24758  01BCEC  0012               	return		;funcret
 24759  01BCEE                     __end_of_isspace:
 24760                           	opt callstack 0
 24761                           
 24762 ;; *************** function _isdigit *****************
 24763 ;; Defined at:
 24764 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24765 ;; Parameters:    Size  Location     Type
 24766 ;;  c               2  [STACK] int 
 24767 ;; Auto vars:     Size  Location     Type
 24768 ;;		None
 24769 ;; Return value:  Size  Location     Type
 24770 ;;                  2  [STACK] int 
 24771 ;; Registers used:
 24772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24773 ;; Tracked objects:
 24774 ;;		On entry : 0/0
 24775 ;;		On exit  : 0/0
 24776 ;;		Unchanged: 0/0
 24777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24782 ;;Total ram usage:        0 bytes
 24783 ;; Hardware stack levels used:    1
 24784 ;; Hardware stack levels required when called:   15
 24785 ;; This function calls:
 24786 ;;		Nothing
 24787 ;; This function is called by:
 24788 ;;		_vfpfcnvrt
 24789 ;;		_atoi
 24790 ;; This function uses a reentrant model
 24791 ;;
 24792                           
 24793                           	psect	text89
 24794  01C448                     __ptext89:
 24795                           	opt callstack 0
 24796  01C448                     _isdigit:
 24797                           	opt callstack 0
 24798                           
 24799                           ;stkvar	_c @ sp[(0)+-2]
 24800                           
 24801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24802                           ;incstack = 0
 24803 ;; hardware stack exceeded
 24804  01C448  0EFE               	movlw	-2
 24805  01C44A  50E3               	movf	plusw1,w,c
 24806  01C44C  0FD0               	addlw	208
 24807  01C44E  6E0B               	movwf	(btemp+10)^0,c
 24808  01C450  0EFF               	movlw	-1
 24809  01C452  006F FF8C  F00C    	movff	plusw1,btemp+11
 24810  01C458  0EFF               	movlw	255
 24811  01C45A  220C               	addwfc	(btemp+11)^0,f,c
 24812  01C45C  500C               	movf	(btemp+11)^0,w,c
 24813  01C45E  E106               	bnz	u6510
 24814  01C460  0E0A               	movlw	10
 24815  01C462  5C0B               	subwf	(btemp+10)^0,w,c
 24816  01C464  B0D8               	btfsc	status,0,c
 24817  01C466  D002               	goto	u6510
 24818  01C468  0E01               	movlw	1
 24819  01C46A  D001               	goto	u6520
 24820  01C46C                     u6510:
 24821  01C46C  0E00               	movlw	0
 24822  01C46E                     u6520:
 24823  01C46E  6E01               	movwf	btemp^0,c
 24824  01C470  6A02               	clrf	(btemp+1)^0,c
 24825                           
 24826                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24827  01C472  52E5               	movf	postdec1,f,c
 24828  01C474  52E5               	movf	postdec1,f,c
 24829  01C476  0012               	return		;funcret
 24830  01C478                     __end_of_isdigit:
 24831                           	opt callstack 0
 24832                           
 24833 ;; *************** function _set_vterm *****************
 24834 ;; Defined at:
 24835 ;;		line 107 in file "mconfig.c"
 24836 ;; Parameters:    Size  Location     Type
 24837 ;;  vterm           1  [STACK] const unsigned char 
 24838 ;; Auto vars:     Size  Location     Type
 24839 ;;		None
 24840 ;; Return value:  Size  Location     Type
 24841 ;;                  1  [STACK] unsigned char 
 24842 ;; Registers used:
 24843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 24844 ;; Tracked objects:
 24845 ;;		On entry : 0/1
 24846 ;;		On exit  : 0/0
 24847 ;;		Unchanged: 0/0
 24848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24853 ;;Total ram usage:        0 bytes
 24854 ;; Hardware stack levels used:    1
 24855 ;; Hardware stack levels required when called:   15
 24856 ;; This function calls:
 24857 ;;		Nothing
 24858 ;; This function is called by:
 24859 ;;		_main
 24860 ;;		_check_help
 24861 ;; This function uses a reentrant model
 24862 ;;
 24863                           
 24864                           	psect	text90
 24865  01C96A                     __ptext90:
 24866                           	opt callstack 0
 24867  01C96A                     _set_vterm:
 24868                           	opt callstack 15
 24869                           
 24870                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 24871                           ;stkvar	_vterm @ sp[(0)+-1]
 24872                           
 24873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24874                           ;incstack = 0
 24875  01C96A  0EFF               	movlw	-1
 24876  01C96C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24877  01C972  0E03               	movlw	3
 24878  01C974  160C               	andwf	(btemp+11)^0,f,c
 24879  01C976  EE22  F20A         	lfsr	2,_D+480
 24880  01C97A  50DF               	movf	223,w,c
 24881  01C97C  180C               	xorwf	(btemp+11)^0,w,c
 24882  01C97E  0BFE               	andlw	-2
 24883  01C980  180C               	xorwf	(btemp+11)^0,w,c
 24884  01C982  6EDF               	movwf	223,c
 24885                           
 24886                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24887  01C984  52E5               	movf	postdec1,f,c
 24888  01C986  0012               	return		;funcret
 24889  01C988                     __end_of_set_vterm:
 24890                           	opt callstack 0
 24891                           
 24892 ;; *************** function _set_temp_display_help *****************
 24893 ;; Defined at:
 24894 ;;		line 211 in file "mconfig.c"
 24895 ;; Parameters:    Size  Location     Type
 24896 ;;  new_response    1  [STACK] const enum E16509
 24897 ;; Auto vars:     Size  Location     Type
 24898 ;;		None
 24899 ;; Return value:  Size  Location     Type
 24900 ;;                  1  [STACK] enum E16509
 24901 ;; Registers used:
 24902 ;;		wreg, fsr1l, fsr1h
 24903 ;; Tracked objects:
 24904 ;;		On entry : 0/1
 24905 ;;		On exit  : 3F/1
 24906 ;;		Unchanged: 0/0
 24907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24912 ;;Total ram usage:        0 bytes
 24913 ;; Hardware stack levels used:    1
 24914 ;; Hardware stack levels required when called:   15
 24915 ;; This function calls:
 24916 ;;		Nothing
 24917 ;; This function is called by:
 24918 ;;		_check_help
 24919 ;; This function uses a reentrant model
 24920 ;;
 24921                           
 24922                           	psect	text91
 24923  01CAB2                     __ptext91:
 24924                           	opt callstack 0
 24925  01CAB2                     _set_temp_display_help:
 24926                           	opt callstack 14
 24927                           
 24928                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 24929                           
 24930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24931                           ;incstack = 0
 24932  01CAB2  0101               	movlb	1	; () banked
 24933  01CAB4  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 24934                           
 24935                           ; BSR set to: 1
 24936                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 24937                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24938  01CAB6  0EFF               	movlw	-1
 24939  01CAB8  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 24940                           
 24941                           ; BSR set to: 1
 24942                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 24943  01CABE  52E5               	movf	postdec1,f,c
 24944  01CAC0  0012               	return		;funcret
 24945  01CAC2                     __end_of_set_temp_display_help:
 24946                           	opt callstack 0
 24947                           
 24948 ;; *************** function _set_display_info *****************
 24949 ;; Defined at:
 24950 ;;		line 200 in file "mconfig.c"
 24951 ;; Parameters:    Size  Location     Type
 24952 ;;  new_response    1  [STACK] const enum E16509
 24953 ;; Auto vars:     Size  Location     Type
 24954 ;;		None
 24955 ;; Return value:  Size  Location     Type
 24956 ;;                  1  [STACK] enum E16994
 24957 ;; Registers used:
 24958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24959 ;; Tracked objects:
 24960 ;;		On entry : 0/1
 24961 ;;		On exit  : 0/0
 24962 ;;		Unchanged: 0/0
 24963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24968 ;;Total ram usage:        0 bytes
 24969 ;; Hardware stack levels used:    1
 24970 ;; Hardware stack levels required when called:   16
 24971 ;; This function calls:
 24972 ;;		_TimerDone
 24973 ;; This function is called by:
 24974 ;;		_main
 24975 ;;		_check_help
 24976 ;; This function uses a reentrant model
 24977 ;;
 24978                           
 24979                           	psect	text92
 24980  01C988                     __ptext92:
 24981                           	opt callstack 0
 24982  01C988                     _set_display_info:
 24983                           	opt callstack 14
 24984                           
 24985                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 24986                           
 24987                           ; BSR set to: 1
 24988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24989                           ;incstack = 0
 24990  01C988  0E07               	movlw	7
 24991  01C98A  6EE6               	movwf	postinc1,c
 24992  01C98C  ECBF  F0E2         	call	_TimerDone	;wreg free
 24993  01C990  5001               	movf	btemp^0,w,c
 24994  01C992  B4D8               	btfsc	status,2,c
 24995  01C994  D006               	goto	l1747
 24996                           
 24997                           ;mconfig.c: 205:   old_info = V.response.info;
 24998  01C996  0101               	movlb	1	; () banked
 24999  01C998  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 25000                           
 25001                           ; BSR set to: 1
 25002                           ;mconfig.c: 206:   V.response.info = new_response_info;
 25003                           ;stkvar	_new_response_info @ sp[(0)+-1]
 25004  01C99A  0EFF               	movlw	-1
 25005  01C99C  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 25006  01C9A2                     l1747:
 25007                           
 25008                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25009  01C9A2  52E5               	movf	postdec1,f,c
 25010  01C9A4  0012               	return		;funcret
 25011  01C9A6                     __end_of_set_display_info:
 25012                           	opt callstack 0
 25013                           
 25014 ;; *************** function _mode_lamp_dim *****************
 25015 ;; Defined at:
 25016 ;;		line 13 in file "mconfig.c"
 25017 ;; Parameters:    Size  Location     Type
 25018 ;;  level           2  [STACK] const unsigned short 
 25019 ;; Auto vars:     Size  Location     Type
 25020 ;;		None
 25021 ;; Return value:  Size  Location     Type
 25022 ;;                  1  [STACK] void 
 25023 ;; Registers used:
 25024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25025 ;; Tracked objects:
 25026 ;;		On entry : 0/1
 25027 ;;		On exit  : 0/0
 25028 ;;		Unchanged: 0/0
 25029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25034 ;;Total ram usage:        0 bytes
 25035 ;; Hardware stack levels used:    1
 25036 ;; Hardware stack levels required when called:   16
 25037 ;; This function calls:
 25038 ;;		_PWM8_LoadDutyValue
 25039 ;; This function is called by:
 25040 ;;		_main
 25041 ;;		_check_help
 25042 ;; This function uses a reentrant model
 25043 ;;
 25044                           
 25045                           	psect	text93
 25046  01C9FA                     __ptext93:
 25047                           	opt callstack 0
 25048  01C9FA                     _mode_lamp_dim:
 25049                           	opt callstack 14
 25050                           
 25051                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 25052                           ;stkvar	_level @ sp[(0)+-2]
 25053                           
 25054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25055                           ;incstack = 0
 25056  01C9FA  0EFE               	movlw	-2
 25057  01C9FC  006F FF8F FFE6     	movff	plusw1,postinc1
 25058  01CA02  006F FF8F FFE6     	movff	plusw1,postinc1
 25059  01CA08  EC09  F0E0         	call	_PWM8_LoadDutyValue	;wreg free
 25060                           
 25061                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 25062  01CA0C  52E5               	movf	postdec1,f,c
 25063  01CA0E  52E5               	movf	postdec1,f,c
 25064  01CA10  0012               	return		;funcret
 25065  01CA12                     __end_of_mode_lamp_dim:
 25066                           	opt callstack 0
 25067                           
 25068 ;; *************** function _mode_lamp_bright *****************
 25069 ;; Defined at:
 25070 ;;		line 18 in file "mconfig.c"
 25071 ;; Parameters:    Size  Location     Type
 25072 ;;		None
 25073 ;; Auto vars:     Size  Location     Type
 25074 ;;		None
 25075 ;; Return value:  Size  Location     Type
 25076 ;;                  1  [STACK] void 
 25077 ;; Registers used:
 25078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25079 ;; Tracked objects:
 25080 ;;		On entry : 0/0
 25081 ;;		On exit  : 0/0
 25082 ;;		Unchanged: 0/0
 25083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25088 ;;Total ram usage:        0 bytes
 25089 ;; Hardware stack levels used:    1
 25090 ;; Hardware stack levels required when called:   16
 25091 ;; This function calls:
 25092 ;;		_PWM8_LoadDutyValue
 25093 ;; This function is called by:
 25094 ;;		_check_help
 25095 ;; This function uses a reentrant model
 25096 ;;
 25097                           
 25098                           	psect	text94
 25099  01CAE0                     __ptext94:
 25100                           	opt callstack 0
 25101  01CAE0                     _mode_lamp_bright:
 25102                           	opt callstack 13
 25103                           
 25104                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 25105                           
 25106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25107                           ;incstack = 0
 25108  01CAE0  0E2C               	movlw	44
 25109  01CAE2  6EE6               	movwf	postinc1,c
 25110  01CAE4  0E01               	movlw	1
 25111  01CAE6  6EE6               	movwf	postinc1,c
 25112  01CAE8  EC09  F0E0         	call	_PWM8_LoadDutyValue	;wreg free
 25113                           
 25114                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 25115  01CAEC  0012               	return		;funcret
 25116  01CAEE                     __end_of_mode_lamp_bright:
 25117                           	opt callstack 0
 25118                           
 25119 ;; *************** function _PWM8_LoadDutyValue *****************
 25120 ;; Defined at:
 25121 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 25122 ;; Parameters:    Size  Location     Type
 25123 ;;  dutyValue       2  [STACK] unsigned short 
 25124 ;; Auto vars:     Size  Location     Type
 25125 ;;		None
 25126 ;; Return value:  Size  Location     Type
 25127 ;;                  1  [STACK] void 
 25128 ;; Registers used:
 25129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25130 ;; Tracked objects:
 25131 ;;		On entry : 0/1
 25132 ;;		On exit  : 0/0
 25133 ;;		Unchanged: 0/0
 25134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25139 ;;Total ram usage:        0 bytes
 25140 ;; Hardware stack levels used:    1
 25141 ;; Hardware stack levels required when called:   15
 25142 ;; This function calls:
 25143 ;;		Nothing
 25144 ;; This function is called by:
 25145 ;;		_mode_lamp_dim
 25146 ;;		_mode_lamp_bright
 25147 ;; This function uses a reentrant model
 25148 ;;
 25149                           
 25150                           	psect	text95
 25151  01C012                     __ptext95:
 25152                           	opt callstack 0
 25153  01C012                     _PWM8_LoadDutyValue:
 25154                           	opt callstack 14
 25155                           
 25156                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 25157                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25158                           
 25159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25160                           ;incstack = 0
 25161  01C012  0EFE               	movlw	-2
 25162  01C014  006F FF8C  F00B    	movff	plusw1,btemp+10
 25163  01C01A  0EFF               	movlw	-1
 25164  01C01C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25165  01C022  90D8               	bcf	status,0,c
 25166  01C024  320C               	rrcf	(btemp+11)^0,f,c
 25167  01C026  320B               	rrcf	(btemp+10)^0,f,c
 25168  01C028  90D8               	bcf	status,0,c
 25169  01C02A  320C               	rrcf	(btemp+11)^0,f,c
 25170  01C02C  320B               	rrcf	(btemp+10)^0,f,c
 25171  01C02E  500B               	movf	(btemp+10)^0,w,c
 25172  01C030  6E61               	movwf	97,c	;volatile
 25173                           
 25174                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 25175                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25176  01C032  0EFE               	movlw	-2
 25177  01C034  006F FF8C  F00C    	movff	plusw1,btemp+11
 25178  01C03A  0E03               	movlw	3
 25179  01C03C  160C               	andwf	(btemp+11)^0,f,c
 25180  01C03E  0E06               	movlw	6
 25181  01C040  6E01               	movwf	btemp^0,c
 25182  01C042                     u9615:
 25183  01C042  90D8               	bcf	status,0,c
 25184  01C044  360C               	rlcf	(btemp+11)^0,f,c
 25185  01C046  2E01               	decfsz	btemp^0,f,c
 25186  01C048  D7FC               	goto	u9615
 25187  01C04A  500C               	movf	(btemp+11)^0,w,c
 25188  01C04C  6E60               	movwf	96,c	;volatile
 25189                           
 25190                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25191  01C04E  52E5               	movf	postdec1,f,c
 25192  01C050  52E5               	movf	postdec1,f,c
 25193  01C052  0012               	return		;funcret
 25194  01C054                     __end_of_PWM8_LoadDutyValue:
 25195                           	opt callstack 0
 25196                           
 25197 ;; *************** function _help_button *****************
 25198 ;; Defined at:
 25199 ;;		line 26 in file "mconfig.c"
 25200 ;; Parameters:    Size  Location     Type
 25201 ;;		None
 25202 ;; Auto vars:     Size  Location     Type
 25203 ;;		None
 25204 ;; Return value:  Size  Location     Type
 25205 ;;                  1  [STACK] _Bool 
 25206 ;; Registers used:
 25207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25208 ;; Tracked objects:
 25209 ;;		On entry : 0/1
 25210 ;;		On exit  : 0/0
 25211 ;;		Unchanged: 0/0
 25212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;Total ram usage:        0 bytes
 25218 ;; Hardware stack levels used:    1
 25219 ;; Hardware stack levels required when called:   16
 25220 ;; This function calls:
 25221 ;;		_StartTimer
 25222 ;;		_TimerDone
 25223 ;; This function is called by:
 25224 ;;		_check_help
 25225 ;; This function uses a reentrant model
 25226 ;;
 25227                           
 25228                           	psect	text96
 25229  01C20C                     __ptext96:
 25230                           	opt callstack 0
 25231  01C20C                     _help_button:
 25232                           	opt callstack 13
 25233                           
 25234                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 25235                           
 25236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25237                           ;incstack = 0
 25238  01C20C  B0CB               	btfsc	203,0,c	;volatile
 25239  01C20E  D00C               	goto	l1690
 25240                           
 25241                           ;mconfig.c: 29:   V.help = 1;
 25242  01C210  0101               	movlb	1	; () banked
 25243  01C212  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 25244                           
 25245                           ; BSR set to: 1
 25246                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 25247  01C214  0E08               	movlw	8
 25248  01C216  6EE6               	movwf	postinc1,c
 25249  01C218  ECBF  F0E2         	call	_TimerDone	;wreg free
 25250  01C21C  5001               	movf	btemp^0,w,c
 25251  01C21E  B4D8               	btfsc	status,2,c
 25252  01C220  D003               	goto	l1690
 25253                           
 25254                           ;mconfig.c: 31:    return 1;
 25255  01C222  0E01               	movlw	1
 25256  01C224  6E01               	movwf	btemp^0,c
 25257  01C226  0012               	return	
 25258  01C228                     l1690:
 25259                           
 25260                           ;mconfig.c: 34:  if (!V.help)
 25261  01C228  0101               	movlb	1	; () banked
 25262  01C22A  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 25263  01C22C  D008               	goto	l10877
 25264                           
 25265                           ; BSR set to: 1
 25266                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 25267  01C22E  0E2C               	movlw	44
 25268  01C230  6EE6               	movwf	postinc1,c
 25269  01C232  0E01               	movlw	1
 25270  01C234  6EE6               	movwf	postinc1,c
 25271  01C236  0E08               	movlw	8
 25272  01C238  6EE6               	movwf	postinc1,c
 25273  01C23A  EC6A  F0E0         	call	_StartTimer	;wreg free
 25274  01C23E                     l10877:
 25275                           
 25276                           ;mconfig.c: 37:  return 0;
 25277  01C23E  0E00               	movlw	0
 25278  01C240  6E01               	movwf	btemp^0,c
 25279                           
 25280                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 25281  01C242  0012               	return		;funcret
 25282  01C244                     __end_of_help_button:
 25283                           	opt callstack 0
 25284                           
 25285 ;; *************** function _TimerDone *****************
 25286 ;; Defined at:
 25287 ;;		line 20 in file "timers.c"
 25288 ;; Parameters:    Size  Location     Type
 25289 ;;  timer           1  [STACK] const unsigned char 
 25290 ;; Auto vars:     Size  Location     Type
 25291 ;;		None
 25292 ;; Return value:  Size  Location     Type
 25293 ;;                  1  [STACK] _Bool 
 25294 ;; Registers used:
 25295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25296 ;; Tracked objects:
 25297 ;;		On entry : 0/1
 25298 ;;		On exit  : 0/0
 25299 ;;		Unchanged: 0/0
 25300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25305 ;;Total ram usage:        0 bytes
 25306 ;; Hardware stack levels used:    1
 25307 ;; Hardware stack levels required when called:   15
 25308 ;; This function calls:
 25309 ;;		Nothing
 25310 ;; This function is called by:
 25311 ;;		_main
 25312 ;;		_WaitMs
 25313 ;;		_help_button
 25314 ;;		_check_help
 25315 ;;		_set_display_info
 25316 ;;		_update_adc_result
 25317 ;;		_esr_check
 25318 ;; This function uses a reentrant model
 25319 ;;
 25320                           
 25321                           	psect	text97
 25322  01C57E                     __ptext97:
 25323                           	opt callstack 0
 25324  01C57E                     _TimerDone:
 25325                           	opt callstack 14
 25326                           
 25327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25328                           ;incstack = 0
 25329  01C57E  0004               	clrwdt		;# 
 25330                           
 25331                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 25332                           ;stkvar	_timer @ sp[(0)+-1]
 25333  01C580  0EFF               	movlw	-1
 25334  01C582  50E3               	movf	plusw1,w,c
 25335  01C584  0D02               	mullw	2
 25336  01C586  0E7D               	movlw	low _tickCount
 25337  01C588  24F3               	addwf	243,w,c
 25338  01C58A  6ED9               	movwf	fsr2l,c
 25339  01C58C  0E02               	movlw	high _tickCount
 25340  01C58E  20F4               	addwfc	prodh,w,c
 25341  01C590  6EDA               	movwf	fsr2h,c
 25342  01C592  50DE               	movf	postinc2,w,c
 25343  01C594  10DE               	iorwf	postinc2,w,c
 25344  01C596  A4D8               	btfss	status,2,c
 25345  01C598  D002               	goto	l10103
 25346                           
 25347                           ;timers.c: 24:   return 1;
 25348  01C59A  0E01               	movlw	1
 25349  01C59C  D001               	goto	L30
 25350  01C59E                     l10103:
 25351                           
 25352                           ;timers.c: 26:  return 0;
 25353  01C59E  0E00               	movlw	0
 25354  01C5A0                     L30:
 25355  01C5A0  6E01               	movwf	btemp^0,c
 25356                           
 25357                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 25358  01C5A2  52E5               	movf	postdec1,f,c
 25359  01C5A4  0012               	return		;funcret
 25360  01C5A6                     __end_of_TimerDone:
 25361                           	opt callstack 0
 25362                           
 25363 ;; *************** function _StartTimer *****************
 25364 ;; Defined at:
 25365 ;;		line 12 in file "timers.c"
 25366 ;; Parameters:    Size  Location     Type
 25367 ;;  timer           1  [STACK] const unsigned char 
 25368 ;;  count           2  [STACK] const unsigned short 
 25369 ;; Auto vars:     Size  Location     Type
 25370 ;;		None
 25371 ;; Return value:  Size  Location     Type
 25372 ;;                  1  [STACK] void 
 25373 ;; Registers used:
 25374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25375 ;; Tracked objects:
 25376 ;;		On entry : 0/0
 25377 ;;		On exit  : 0/0
 25378 ;;		Unchanged: 0/0
 25379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;Total ram usage:        0 bytes
 25385 ;; Hardware stack levels used:    1
 25386 ;; Hardware stack levels required when called:   15
 25387 ;; This function calls:
 25388 ;;		Nothing
 25389 ;; This function is called by:
 25390 ;;		_main
 25391 ;;		_WaitMs
 25392 ;;		_help_button
 25393 ;;		_check_help
 25394 ;;		_update_adc_result
 25395 ;;		_calc_bsoc
 25396 ;;		_esr_check
 25397 ;; This function uses a reentrant model
 25398 ;;
 25399                           
 25400                           	psect	text98
 25401  01C0D4                     __ptext98:
 25402                           	opt callstack 0
 25403  01C0D4                     _StartTimer:
 25404                           	opt callstack 0
 25405                           
 25406                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 25407                           ;stkvar	_count @ sp[(0)+-3]
 25408                           
 25409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25410                           ;incstack = 0
 25411 ;; hardware stack exceeded
 25412  01C0D4  0EFD               	movlw	-3
 25413  01C0D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25414  01C0DC  0EFE               	movlw	-2
 25415  01C0DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25416  01C0E4  90D8               	bcf	status,0,c
 25417  01C0E6  340B               	rlcf	(btemp+10)^0,w,c
 25418  01C0E8  6E09               	movwf	(btemp+8)^0,c
 25419  01C0EA  340C               	rlcf	(btemp+11)^0,w,c
 25420  01C0EC  6E0A               	movwf	(btemp+9)^0,c
 25421                           
 25422                           ;stkvar	_timer @ sp[(0)+-1]
 25423  01C0EE  0EFF               	movlw	-1
 25424  01C0F0  50E3               	movf	plusw1,w,c
 25425  01C0F2  0D02               	mullw	2
 25426  01C0F4  0E7D               	movlw	low _tickCount
 25427  01C0F6  24F3               	addwf	243,w,c
 25428  01C0F8  6ED9               	movwf	fsr2l,c
 25429  01C0FA  0E02               	movlw	high _tickCount
 25430  01C0FC  20F4               	addwfc	prodh,w,c
 25431  01C0FE  6EDA               	movwf	fsr2h,c
 25432  01C100  0060  F027  FFDE   	movff	btemp+8,postinc2
 25433  01C106  0060  F02B  FFDD   	movff	btemp+9,postdec2
 25434                           
 25435                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 25436  01C10C  52E5               	movf	postdec1,f,c
 25437  01C10E  52E5               	movf	postdec1,f,c
 25438  01C110  52E5               	movf	postdec1,f,c
 25439  01C112  0012               	return		;funcret
 25440  01C114                     __end_of_StartTimer:
 25441                           	opt callstack 0
 25442                           
 25443 ;; *************** function _display_info *****************
 25444 ;; Defined at:
 25445 ;;		line 190 in file "mconfig.c"
 25446 ;; Parameters:    Size  Location     Type
 25447 ;;		None
 25448 ;; Auto vars:     Size  Location     Type
 25449 ;;		None
 25450 ;; Return value:  Size  Location     Type
 25451 ;;                  1  [STACK] enum E16509
 25452 ;; Registers used:
 25453 ;;		btemp
 25454 ;; Tracked objects:
 25455 ;;		On entry : 0/1
 25456 ;;		On exit  : 0/0
 25457 ;;		Unchanged: 0/0
 25458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25463 ;;Total ram usage:        0 bytes
 25464 ;; Hardware stack levels used:    1
 25465 ;; Hardware stack levels required when called:   15
 25466 ;; This function calls:
 25467 ;;		Nothing
 25468 ;; This function is called by:
 25469 ;;		_check_help
 25470 ;; This function uses a reentrant model
 25471 ;;
 25472                           
 25473                           	psect	text99
 25474  01CB62                     __ptext99:
 25475                           	opt callstack 0
 25476  01CB62                     _display_info:
 25477                           	opt callstack 14
 25478                           
 25479                           ;mconfig.c: 192:  return V.response.info;
 25480                           
 25481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25482                           ;incstack = 0
 25483  01CB62  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 25484                           
 25485                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25486  01CB68  0012               	return		;funcret
 25487  01CB6A                     __end_of_display_info:
 25488                           	opt callstack 0
 25489                           
 25490 ;; *************** function _display_help *****************
 25491 ;; Defined at:
 25492 ;;		line 195 in file "mconfig.c"
 25493 ;; Parameters:    Size  Location     Type
 25494 ;;		None
 25495 ;; Auto vars:     Size  Location     Type
 25496 ;;		None
 25497 ;; Return value:  Size  Location     Type
 25498 ;;                  1  [STACK] enum E16509
 25499 ;; Registers used:
 25500 ;;		btemp
 25501 ;; Tracked objects:
 25502 ;;		On entry : 3F/1
 25503 ;;		On exit  : 0/0
 25504 ;;		Unchanged: 0/0
 25505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;Total ram usage:        0 bytes
 25511 ;; Hardware stack levels used:    1
 25512 ;; Hardware stack levels required when called:   15
 25513 ;; This function calls:
 25514 ;;		Nothing
 25515 ;; This function is called by:
 25516 ;;		_check_help
 25517 ;; This function uses a reentrant model
 25518 ;;
 25519                           
 25520                           	psect	text100
 25521  01CB6A                     __ptext100:
 25522                           	opt callstack 0
 25523  01CB6A                     _display_help:
 25524                           	opt callstack 14
 25525                           
 25526                           ;mconfig.c: 197:  return V.response.help_temp;
 25527                           
 25528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25529                           ;incstack = 0
 25530  01CB6A  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 25531                           
 25532                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25533  01CB70  0012               	return		;funcret
 25534  01CB72                     __end_of_display_help:
 25535                           	opt callstack 0
 25536                           
 25537 ;; *************** function _check_enter_button *****************
 25538 ;; Defined at:
 25539 ;;		line 49 in file "hid.c"
 25540 ;; Parameters:    Size  Location     Type
 25541 ;;  h               2  [STACK] PTR struct H_data
 25542 ;;		 -> H(9), 
 25543 ;; Auto vars:     Size  Location     Type
 25544 ;;		None
 25545 ;; Return value:  Size  Location     Type
 25546 ;;                  1  [STACK] _Bool 
 25547 ;; Registers used:
 25548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 25549 ;; Tracked objects:
 25550 ;;		On entry : 0/0
 25551 ;;		On exit  : 0/0
 25552 ;;		Unchanged: 0/0
 25553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25558 ;;Total ram usage:        0 bytes
 25559 ;; Hardware stack levels used:    1
 25560 ;; Hardware stack levels required when called:   15
 25561 ;; This function calls:
 25562 ;;		Nothing
 25563 ;; This function is called by:
 25564 ;;		_main
 25565 ;; This function uses a reentrant model
 25566 ;;
 25567                           
 25568                           	psect	text101
 25569  01B788                     __ptext101:
 25570                           	opt callstack 0
 25571  01B788                     _check_enter_button:
 25572                           	opt callstack 15
 25573                           
 25574                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 25575                           ;stkvar	_h @ sp[(0)+-2]
 25576                           
 25577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25578                           ;incstack = 0
 25579  01B788  0EFE               	movlw	-2
 25580  01B78A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25581  01B790  0EFF               	movlw	-1
 25582  01B792  006F FF8C  F00C    	movff	plusw1,btemp+11
 25583  01B798  0E04               	movlw	4
 25584  01B79A  240B               	addwf	(btemp+10)^0,w,c
 25585  01B79C  6ED9               	movwf	fsr2l,c
 25586  01B79E  0E00               	movlw	0
 25587  01B7A0  200C               	addwfc	(btemp+11)^0,w,c
 25588  01B7A2  6EDA               	movwf	fsr2h,c
 25589  01B7A4  50DF               	movf	indf2,w,c
 25590  01B7A6  A4D8               	btfss	status,2,c
 25591  01B7A8  D023               	goto	l13671
 25592                           
 25593                           ;stkvar	_h @ sp[(0)+-2]
 25594  01B7AA  0EFE               	movlw	-2
 25595  01B7AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 25596  01B7B2  0EFF               	movlw	-1
 25597  01B7B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25598  01B7BA  0E05               	movlw	5
 25599  01B7BC  240B               	addwf	(btemp+10)^0,w,c
 25600  01B7BE  6ED9               	movwf	fsr2l,c
 25601  01B7C0  0E00               	movlw	0
 25602  01B7C2  200C               	addwfc	(btemp+11)^0,w,c
 25603  01B7C4  6EDA               	movwf	fsr2h,c
 25604  01B7C6  50DF               	movf	indf2,w,c
 25605  01B7C8  A4D8               	btfss	status,2,c
 25606  01B7CA  D012               	goto	l13671
 25607                           
 25608                           ;hid.c: 52:   h->wait_enter = 1;
 25609                           ;stkvar	_h @ sp[(0)+-2]
 25610  01B7CC  0EFE               	movlw	-2
 25611  01B7CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25612  01B7D4  0EFF               	movlw	-1
 25613  01B7D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25614  01B7DC  0E04               	movlw	4
 25615  01B7DE  240B               	addwf	(btemp+10)^0,w,c
 25616  01B7E0  6ED9               	movwf	fsr2l,c
 25617  01B7E2  0E00               	movlw	0
 25618  01B7E4  200C               	addwfc	(btemp+11)^0,w,c
 25619  01B7E6  6EDA               	movwf	fsr2h,c
 25620  01B7E8  0E01               	movlw	1
 25621  01B7EA  6EDF               	movwf	indf2,c
 25622                           
 25623                           ;hid.c: 53:   return 1;
 25624  01B7EC  0E01               	movlw	1
 25625  01B7EE  D001               	goto	L31
 25626  01B7F0                     l13671:
 25627                           
 25628                           ;hid.c: 55:  return 0;
 25629  01B7F0  0E00               	movlw	0
 25630  01B7F2                     L31:
 25631  01B7F2  6E01               	movwf	btemp^0,c
 25632                           
 25633                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25634  01B7F4  52E5               	movf	postdec1,f,c
 25635  01B7F6  52E5               	movf	postdec1,f,c
 25636  01B7F8  0012               	return		;funcret
 25637  01B7FA                     __end_of_check_enter_button:
 25638                           	opt callstack 0
 25639                           
 25640 ;; *************** function _calc_ror_data *****************
 25641 ;; Defined at:
 25642 ;;		line 102 in file "mbmc.c"
 25643 ;; Parameters:    Size  Location     Type
 25644 ;;		None
 25645 ;; Auto vars:     Size  Location     Type
 25646 ;;		None
 25647 ;; Return value:  Size  Location     Type
 25648 ;;                  1  [STACK] void 
 25649 ;; Registers used:
 25650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25651 ;; Tracked objects:
 25652 ;;		On entry : 0/39
 25653 ;;		On exit  : 0/0
 25654 ;;		Unchanged: 0/0
 25655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;Total ram usage:        0 bytes
 25661 ;; Hardware stack levels used:    1
 25662 ;; Hardware stack levels required when called:   18
 25663 ;; This function calls:
 25664 ;;		___flge
 25665 ;;		___flsub
 25666 ;;		_conv_raw_result
 25667 ;;		_fabsf
 25668 ;; This function is called by:
 25669 ;;		_main
 25670 ;; This function uses a reentrant model
 25671 ;;
 25672                           
 25673                           	psect	text102
 25674  019168                     __ptext102:
 25675                           	opt callstack 0
 25676  019168                     _calc_ror_data:
 25677                           	opt callstack 12
 25678                           
 25679                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 25680                           
 25681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25682                           ;incstack = 0
 25683  019168  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 25684  01916E  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 25685  019174  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 25686  01917A  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 25687  019180  0E00               	movlw	0
 25688  019182  6EE6               	movwf	postinc1,c
 25689  019184  0E00               	movlw	0
 25690  019186  6EE6               	movwf	postinc1,c
 25691  019188  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25692  01918C  0060  F007  FFE6   	movff	btemp,postinc1
 25693  019192  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25694  019198  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25695  01919E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25696  0191A4  ECC4  F0DF         	call	___flsub	;wreg free
 25697  0191A8  0060  F007  FFE6   	movff	btemp,postinc1
 25698  0191AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25699  0191B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25700  0191BA  0060  F013  FFE6   	movff	btemp+3,postinc1
 25701  0191C0  EC2C  F0D7         	call	_fabsf	;wreg free
 25702  0191C4  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25703  0191CA  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25704  0191D0  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25705  0191D6  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25706                           
 25707                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 25708  0191DC  0E00               	movlw	0
 25709  0191DE  6EE6               	movwf	postinc1,c
 25710  0191E0  0E00               	movlw	0
 25711  0191E2  6EE6               	movwf	postinc1,c
 25712  0191E4  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25713  0191E8  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 25714  0191EE  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 25715  0191F4  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 25716  0191FA  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 25717                           
 25718                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 25719  019200  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 25720  019206  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 25721  01920C  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 25722  019212  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 25723  019218  0E00               	movlw	0
 25724  01921A  6EE6               	movwf	postinc1,c
 25725  01921C  0E04               	movlw	4
 25726  01921E  6EE6               	movwf	postinc1,c
 25727  019220  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25728  019224  0060  F007  FFE6   	movff	btemp,postinc1
 25729  01922A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25730  019230  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25731  019236  0060  F013  FFE6   	movff	btemp+3,postinc1
 25732  01923C  ECC4  F0DF         	call	___flsub	;wreg free
 25733  019240  0060  F007  FFE6   	movff	btemp,postinc1
 25734  019246  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25735  01924C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25736  019252  0060  F013  FFE6   	movff	btemp+3,postinc1
 25737  019258  EC2C  F0D7         	call	_fabsf	;wreg free
 25738  01925C  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25739  019262  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25740  019268  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25741  01926E  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25742                           
 25743                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 25744  019274  0EE7               	movlw	231
 25745  019276  6EE6               	movwf	postinc1,c
 25746  019278  0E1D               	movlw	29
 25747  01927A  6EE6               	movwf	postinc1,c
 25748  01927C  0EA7               	movlw	167
 25749  01927E  6EE6               	movwf	postinc1,c
 25750  019280  0E3B               	movlw	59
 25751  019282  6EE6               	movwf	postinc1,c
 25752  019284  EE21  F36B         	lfsr	2,_C+108	;volatile
 25753  019288  006F FF7B FFE6     	movff	postinc2,postinc1
 25754  01928E  006F FF7B FFE6     	movff	postinc2,postinc1
 25755  019294  006F FF7B FFE6     	movff	postinc2,postinc1
 25756  01929A  006F FF7B FFE6     	movff	postinc2,postinc1
 25757  0192A0  ECF0  F0CA         	call	___flge	;wreg free
 25758  0192A4  B001               	btfsc	btemp& (0+255),0,c
 25759  0192A6  D010               	goto	l11383
 25760                           
 25761                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 25762  0192A8  0EB0               	movlw	176
 25763  0192AA  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 25764  0192B0  0E03               	movlw	3
 25765  0192B2  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 25766  0192B8  0E67               	movlw	103
 25767  0192BA  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 25768  0192C0  0E3C               	movlw	60
 25769  0192C2  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 25770  0192C8                     l11383:
 25771                           
 25772                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 25773  0192C8  0E00               	movlw	0
 25774  0192CA  6EE6               	movwf	postinc1,c
 25775  0192CC  0E04               	movlw	4
 25776  0192CE  6EE6               	movwf	postinc1,c
 25777  0192D0  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25778  0192D4  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 25779  0192DA  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 25780  0192E0  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 25781  0192E6  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 25782                           
 25783                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 25784  0192EC  0012               	return		;funcret
 25785  0192EE                     __end_of_calc_ror_data:
 25786                           	opt callstack 0
 25787                           
 25788 ;; *************** function _fabsf *****************
 25789 ;; Defined at:
 25790 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 25791 ;; Parameters:    Size  Location     Type
 25792 ;;  x               4  [STACK] float 
 25793 ;; Auto vars:     Size  Location     Type
 25794 ;;  u               4  [STACK] struct .
 25795 ;; Return value:  Size  Location     Type
 25796 ;;                  4  [STACK] float 
 25797 ;; Registers used:
 25798 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25799 ;; Tracked objects:
 25800 ;;		On entry : 0/0
 25801 ;;		On exit  : 0/0
 25802 ;;		Unchanged: 0/0
 25803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25808 ;;Total ram usage:        0 bytes
 25809 ;; Hardware stack levels used:    1
 25810 ;; Hardware stack levels required when called:   15
 25811 ;; This function calls:
 25812 ;;		Nothing
 25813 ;; This function is called by:
 25814 ;;		_main
 25815 ;;		_calc_ror_data
 25816 ;;		_calc_bsoc
 25817 ;;		_esr_check
 25818 ;; This function uses a reentrant model
 25819 ;;
 25820                           
 25821                           	psect	text103
 25822  01AE58                     __ptext103:
 25823                           	opt callstack 0
 25824  01AE58                     _fabsf:
 25825                           	opt callstack 0
 25826                           
 25827                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25828  01AE58  52E6               	movf	postinc1,f,c
 25829  01AE5A  52E6               	movf	postinc1,f,c
 25830  01AE5C  52E6               	movf	postinc1,f,c
 25831  01AE5E  52E6               	movf	postinc1,f,c
 25832                           
 25833                           ;incstack = 0
 25834 ;; hardware stack exceeded
 25835  01AE60  0060  F180  F009   	movff	fabsf@F463,btemp+8
 25836  01AE66  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 25837  01AE6C  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 25838  01AE72  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 25839                           
 25840                           ;stkvar	_u @ sp[(-4)+0]
 25841  01AE78  0EFC               	movlw	-4
 25842  01AE7A  0060  F027  FFE3   	movff	btemp+8,plusw1
 25843  01AE80  0EFD               	movlw	-3
 25844  01AE82  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25845  01AE88  0EFE               	movlw	-2
 25846  01AE8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25847  01AE90  0EFF               	movlw	-1
 25848  01AE92  0060  F033  FFE3   	movff	btemp+11,plusw1
 25849                           
 25850                           ;stkvar	_x @ sp[(-4)+-4]
 25851  01AE98  0EF8               	movlw	-8
 25852  01AE9A  006F FF8C  F009    	movff	plusw1,btemp+8
 25853  01AEA0  0EF9               	movlw	-7
 25854  01AEA2  006F FF8C  F00A    	movff	plusw1,btemp+9
 25855  01AEA8  0EFA               	movlw	-6
 25856  01AEAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 25857  01AEB0  0EFB               	movlw	-5
 25858  01AEB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25859                           
 25860                           ;stkvar	_u @ sp[(-4)+0]
 25861  01AEB8  0EFC               	movlw	-4
 25862  01AEBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 25863  01AEC0  0EFD               	movlw	-3
 25864  01AEC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25865  01AEC8  0EFE               	movlw	-2
 25866  01AECA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25867  01AED0  0EFF               	movlw	-1
 25868  01AED2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25869                           
 25870                           ;stkvar	_u @ sp[(-4)+0]
 25871  01AED8  0EFF               	movlw	-1
 25872  01AEDA  9EE3               	bcf	plusw1,7,c
 25873                           
 25874                           ;stkvar	_u @ sp[(-4)+0]
 25875  01AEDC  0EFC               	movlw	-4
 25876  01AEDE  006F FF8C  F001    	movff	plusw1,btemp
 25877  01AEE4  0EFD               	movlw	-3
 25878  01AEE6  006F FF8C  F002    	movff	plusw1,btemp+1
 25879  01AEEC  0EFE               	movlw	-2
 25880  01AEEE  006F FF8C  F003    	movff	plusw1,btemp+2
 25881  01AEF4  0EFF               	movlw	-1
 25882  01AEF6  006F FF8C  F004    	movff	plusw1,btemp+3
 25883                           
 25884                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25885  01AEFC  0EF8               	movlw	248
 25886  01AEFE  26E1               	addwf	fsr1l,f,c
 25887  01AF00  0EFF               	movlw	255
 25888  01AF02  22E2               	addwfc	fsr1h,f,c
 25889  01AF04  0012               	return		;funcret
 25890  01AF06                     __end_of_fabsf:
 25891                           	opt callstack 0
 25892                           
 25893 ;; *************** function _conv_raw_result *****************
 25894 ;; Defined at:
 25895 ;;		line 123 in file "daq.c"
 25896 ;; Parameters:    Size  Location     Type
 25897 ;;  chan            1  [STACK] const enum E16590
 25898 ;;  to_what         1  [STACK] const enum E16652
 25899 ;; Auto vars:     Size  Location     Type
 25900 ;;		None
 25901 ;; Return value:  Size  Location     Type
 25902 ;;                  4  [STACK] float 
 25903 ;; Registers used:
 25904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25905 ;; Tracked objects:
 25906 ;;		On entry : 0/39
 25907 ;;		On exit  : 0/0
 25908 ;;		Unchanged: 0/0
 25909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25914 ;;Total ram usage:        0 bytes
 25915 ;; Hardware stack levels used:    1
 25916 ;; Hardware stack levels required when called:   17
 25917 ;; This function calls:
 25918 ;;		___fldiv
 25919 ;;		___flmul
 25920 ;;		___flsub
 25921 ;;		___xxtofl
 25922 ;;		_get_raw_result
 25923 ;;		_nanf
 25924 ;; This function is called by:
 25925 ;;		_main
 25926 ;;		_convert_adc_data
 25927 ;;		_calc_ror_data
 25928 ;;		_check_day_time
 25929 ;;		_init_bsoc
 25930 ;;		_esr_check
 25931 ;; This function uses a reentrant model
 25932 ;;
 25933                           
 25934                           	psect	text104
 25935  0153A0                     __ptext104:
 25936                           	opt callstack 0
 25937  0153A0                     _conv_raw_result:
 25938                           	opt callstack 0
 25939                           
 25940                           ;daq.c: 123: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 124: {;daq.c: 126:  switch (to_what) {
 25941                           
 25942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25943                           ;incstack = 0
 25944 ;; hardware stack exceeded
 25945  0153A0  D24A               	goto	l10085
 25946  0153A2                     l10031:
 25947                           
 25948                           ;daq.c: 128:   if (!(0b0011110001110111 >> chan & 0x1))
 25949                           ;stkvar	_chan @ sp[(0)+-1]
 25950  0153A2  0EFF               	movlw	-1
 25951  0153A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25952  0153AA  0E77               	movlw	119
 25953  0153AC  6E09               	movwf	(btemp+8)^0,c
 25954  0153AE  0E3C               	movlw	60
 25955  0153B0  6E0A               	movwf	(btemp+9)^0,c
 25956  0153B2  2A0C               	incf	(btemp+11)^0,f,c
 25957  0153B4  D003               	goto	u9334
 25958  0153B6                     u9335:
 25959  0153B6  340A               	rlcf	(btemp+9)^0,w,c
 25960  0153B8  320A               	rrcf	(btemp+9)^0,f,c
 25961  0153BA  3209               	rrcf	(btemp+8)^0,f,c
 25962  0153BC                     u9334:
 25963  0153BC  2E0C               	decfsz	(btemp+11)^0,f,c
 25964  0153BE  D7FB               	goto	u9335
 25965  0153C0  B009               	btfsc	(btemp+8)^0,0,c
 25966  0153C2  D007               	goto	l10037
 25967                           
 25968                           ;daq.c: 129:    return nanf("");
 25969  0153C4  0E77               	movlw	low (STR_78+126)
 25970  0153C6  6EE6               	movwf	postinc1,c
 25971  0153C8  0EFB               	movlw	high (STR_78+126)
 25972  0153CA  6EE6               	movwf	postinc1,c
 25973  0153CC  EC66  F0DD         	call	_nanf	;wreg free
 25974  0153D0  D242               	goto	l1831
 25975  0153D2                     l10037:
 25976                           
 25977                           ;daq.c: 131:   if (0b0000000000000011 >> chan & 0x1) {
 25978                           ;stkvar	_chan @ sp[(0)+-1]
 25979  0153D2  0EFF               	movlw	-1
 25980  0153D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25981  0153DA  0E03               	movlw	3
 25982  0153DC  6E09               	movwf	(btemp+8)^0,c
 25983  0153DE  0E00               	movlw	0
 25984  0153E0  6E0A               	movwf	(btemp+9)^0,c
 25985  0153E2  2A0C               	incf	(btemp+11)^0,f,c
 25986  0153E4  D003               	goto	u9354
 25987  0153E6                     u9355:
 25988  0153E6  340A               	rlcf	(btemp+9)^0,w,c
 25989  0153E8  320A               	rrcf	(btemp+9)^0,f,c
 25990  0153EA  3209               	rrcf	(btemp+8)^0,f,c
 25991  0153EC                     u9354:
 25992  0153EC  2E0C               	decfsz	(btemp+11)^0,f,c
 25993  0153EE  D7FB               	goto	u9355
 25994  0153F0  A009               	btfss	(btemp+8)^0,0,c
 25995  0153F2  D0F3               	goto	l10051
 25996                           
 25997                           ;daq.c: 132:    if (0b0000000000000001 >> chan & 0x1) {
 25998                           ;stkvar	_chan @ sp[(0)+-1]
 25999  0153F4  0EFF               	movlw	-1
 26000  0153F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26001  0153FC  0E01               	movlw	1
 26002  0153FE  6E09               	movwf	(btemp+8)^0,c
 26003  015400  0E00               	movlw	0
 26004  015402  6E0A               	movwf	(btemp+9)^0,c
 26005  015404  2A0C               	incf	(btemp+11)^0,f,c
 26006  015406  D003               	goto	u9374
 26007  015408                     u9375:
 26008  015408  340A               	rlcf	(btemp+9)^0,w,c
 26009  01540A  320A               	rrcf	(btemp+9)^0,f,c
 26010  01540C  3209               	rrcf	(btemp+8)^0,f,c
 26011  01540E                     u9374:
 26012  01540E  2E0C               	decfsz	(btemp+11)^0,f,c
 26013  015410  D7FB               	goto	u9375
 26014  015412  A009               	btfss	(btemp+8)^0,0,c
 26015  015414  D071               	goto	l10047
 26016                           
 26017                           ;daq.c: 133:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 26018  015416  0060  F367  FFE6   	movff	_R+42,postinc1
 26019  01541C  0060  F36B  FFE6   	movff	_R+43,postinc1
 26020  015422  0060  F36F  FFE6   	movff	_R+44,postinc1
 26021  015428  0060  F373  FFE6   	movff	_R+45,postinc1
 26022  01542E  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 26023  015434  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 26024  01543A  0E00               	movlw	0
 26025  01543C  BE0A               	btfsc	(btemp+9)^0,7,c
 26026  01543E  0EFF               	movlw	255
 26027  015440  6E0B               	movwf	(btemp+10)^0,c
 26028  015442  6E0C               	movwf	(btemp+11)^0,c
 26029  015444  0060  F027  FFE6   	movff	btemp+8,postinc1
 26030  01544A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26031  015450  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26032  015456  0060  F033  FFE6   	movff	btemp+11,postinc1
 26033  01545C  0E01               	movlw	1
 26034  01545E  6EE6               	movwf	postinc1,c
 26035  015460  EC39  F0C5         	call	___xxtofl	;wreg free
 26036  015464  0060  F007  FFE6   	movff	btemp,postinc1
 26037  01546A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26038  015470  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26039  015476  0060  F013  FFE6   	movff	btemp+3,postinc1
 26040                           
 26041                           ;stkvar	_chan @ sp[(-8)+-1]
 26042  01547C  0EF7               	movlw	-9
 26043  01547E  50E3               	movf	plusw1,w,c
 26044  015480  6EE6               	movwf	postinc1,c
 26045  015482  ECD3  F0E4         	call	_get_raw_result	;wreg free
 26046  015486  0060  F004  F00B   	movff	btemp,btemp+10
 26047  01548C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26048  015492  500B               	movf	(btemp+10)^0,w,c
 26049  015494  6E05               	movwf	(btemp+4)^0,c
 26050  015496  500C               	movf	(btemp+11)^0,w,c
 26051  015498  6E06               	movwf	(btemp+5)^0,c
 26052  01549A  6A07               	clrf	(btemp+6)^0,c
 26053  01549C  6A08               	clrf	(btemp+7)^0,c
 26054  01549E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26055  0154A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26056  0154AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26057  0154B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 26058  0154B6  0E00               	movlw	0
 26059  0154B8  6EE6               	movwf	postinc1,c
 26060  0154BA  EC39  F0C5         	call	___xxtofl	;wreg free
 26061  0154BE  0060  F007  FFE6   	movff	btemp,postinc1
 26062  0154C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26063  0154CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26064  0154D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26065  0154D6  ECC4  F0DF         	call	___flsub	;wreg free
 26066  0154DA  0060  F007  FFE6   	movff	btemp,postinc1
 26067  0154E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26068  0154E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26069  0154EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26070  0154F2  EC20  F09F         	call	___flmul	;wreg free
 26071  0154F6  D1AF               	goto	l1831
 26072  0154F8                     l10047:
 26073                           
 26074                           ;daq.c: 135:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 26075  0154F8  0060  F377  FFE6   	movff	_R+46,postinc1
 26076  0154FE  0060  F37B  FFE6   	movff	_R+47,postinc1
 26077  015504  0060  F37F  FFE6   	movff	_R+48,postinc1
 26078  01550A  0060  F383  FFE6   	movff	_R+49,postinc1
 26079  015510  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 26080  015516  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 26081  01551C  0E00               	movlw	0
 26082  01551E  BE0A               	btfsc	(btemp+9)^0,7,c
 26083  015520  0EFF               	movlw	255
 26084  015522  6E0B               	movwf	(btemp+10)^0,c
 26085  015524  6E0C               	movwf	(btemp+11)^0,c
 26086  015526  0060  F027  FFE6   	movff	btemp+8,postinc1
 26087  01552C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26088  015532  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26089  015538  0060  F033  FFE6   	movff	btemp+11,postinc1
 26090  01553E  0E01               	movlw	1
 26091  015540  6EE6               	movwf	postinc1,c
 26092  015542  EC39  F0C5         	call	___xxtofl	;wreg free
 26093  015546  0060  F007  FFE6   	movff	btemp,postinc1
 26094  01554C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26095  015552  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26096  015558  0060  F013  FFE6   	movff	btemp+3,postinc1
 26097                           
 26098                           ;stkvar	_chan @ sp[(-8)+-1]
 26099  01555E  0EF7               	movlw	-9
 26100  015560  50E3               	movf	plusw1,w,c
 26101  015562  6EE6               	movwf	postinc1,c
 26102  015564  ECD3  F0E4         	call	_get_raw_result	;wreg free
 26103  015568  0060  F004  F00B   	movff	btemp,btemp+10
 26104  01556E  0060  F008  F00C   	movff	btemp+1,btemp+11
 26105  015574  500B               	movf	(btemp+10)^0,w,c
 26106  015576  6E05               	movwf	(btemp+4)^0,c
 26107  015578  500C               	movf	(btemp+11)^0,w,c
 26108  01557A  6E06               	movwf	(btemp+5)^0,c
 26109  01557C  6A07               	clrf	(btemp+6)^0,c
 26110  01557E  6A08               	clrf	(btemp+7)^0,c
 26111  015580  0060  F017  FFE6   	movff	btemp+4,postinc1
 26112  015586  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26113  01558C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26114  015592  0060  F023  FFE6   	movff	btemp+7,postinc1
 26115  015598  0E00               	movlw	0
 26116  01559A  6EE6               	movwf	postinc1,c
 26117  01559C  EC39  F0C5         	call	___xxtofl	;wreg free
 26118  0155A0  0060  F007  FFE6   	movff	btemp,postinc1
 26119  0155A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26120  0155AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26121  0155B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 26122  0155B8  ECC4  F0DF         	call	___flsub	;wreg free
 26123  0155BC  0060  F007  FFE6   	movff	btemp,postinc1
 26124  0155C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26125  0155C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26126  0155CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 26127  0155D4  EC20  F09F         	call	___flmul	;wreg free
 26128  0155D8  D13E               	goto	l1831
 26129  0155DA                     l10051:
 26130                           
 26131                           ;daq.c: 138:    if (0b0000100000000000 >> chan & 0x1) {
 26132                           ;stkvar	_chan @ sp[(0)+-1]
 26133  0155DA  0EFF               	movlw	-1
 26134  0155DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26135  0155E2  0E00               	movlw	0
 26136  0155E4  6E09               	movwf	(btemp+8)^0,c
 26137  0155E6  0E08               	movlw	8
 26138  0155E8  6E0A               	movwf	(btemp+9)^0,c
 26139  0155EA  2A0C               	incf	(btemp+11)^0,f,c
 26140  0155EC  D003               	goto	u9394
 26141  0155EE                     u9395:
 26142  0155EE  340A               	rlcf	(btemp+9)^0,w,c
 26143  0155F0  320A               	rrcf	(btemp+9)^0,f,c
 26144  0155F2  3209               	rrcf	(btemp+8)^0,f,c
 26145  0155F4                     u9394:
 26146  0155F4  2E0C               	decfsz	(btemp+11)^0,f,c
 26147  0155F6  D7FB               	goto	u9395
 26148  0155F8  A009               	btfss	(btemp+8)^0,0,c
 26149  0155FA  D008               	goto	l10059
 26150                           
 26151                           ;daq.c: 139:     return 25.0;
 26152  0155FC  0E00               	movlw	0
 26153  0155FE  6E01               	movwf	btemp^0,c
 26154  015600  0E00               	movlw	0
 26155  015602  6E02               	movwf	(btemp+1)^0,c
 26156  015604  0EC8               	movlw	200
 26157  015606  6E03               	movwf	(btemp+2)^0,c
 26158  015608  0E41               	movlw	65
 26159  01560A  D113               	goto	L32
 26160  01560C                     l10059:
 26161                           
 26162                           ;daq.c: 141:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26163  01560C  0E00               	movlw	0
 26164  01560E  6EE6               	movwf	postinc1,c
 26165  015610  0E00               	movlw	0
 26166  015612  6EE6               	movwf	postinc1,c
 26167  015614  0E7A               	movlw	122
 26168  015616  6EE6               	movwf	postinc1,c
 26169  015618  0E44               	movlw	68
 26170  01561A  6EE6               	movwf	postinc1,c
 26171  01561C  0E61               	movlw	97
 26172  01561E  6EE6               	movwf	postinc1,c
 26173  015620  0E03               	movlw	3
 26174  015622  6EE6               	movwf	postinc1,c
 26175  015624  0E84               	movlw	132
 26176  015626  6EE6               	movwf	postinc1,c
 26177  015628  0E40               	movlw	64
 26178  01562A  6EE6               	movwf	postinc1,c
 26179                           
 26180                           ;stkvar	_chan @ sp[(-8)+-1]
 26181  01562C  0EF7               	movlw	-9
 26182  01562E  50E3               	movf	plusw1,w,c
 26183  015630  6EE6               	movwf	postinc1,c
 26184  015632  ECD3  F0E4         	call	_get_raw_result	;wreg free
 26185  015636  0060  F004  F00B   	movff	btemp,btemp+10
 26186  01563C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26187  015642  500B               	movf	(btemp+10)^0,w,c
 26188  015644  6E05               	movwf	(btemp+4)^0,c
 26189  015646  500C               	movf	(btemp+11)^0,w,c
 26190  015648  6E06               	movwf	(btemp+5)^0,c
 26191  01564A  6A07               	clrf	(btemp+6)^0,c
 26192  01564C  6A08               	clrf	(btemp+7)^0,c
 26193  01564E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26194  015654  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26195  01565A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26196  015660  0060  F023  FFE6   	movff	btemp+7,postinc1
 26197  015666  0E00               	movlw	0
 26198  015668  6EE6               	movwf	postinc1,c
 26199  01566A  EC39  F0C5         	call	___xxtofl	;wreg free
 26200  01566E  0060  F007  FFE6   	movff	btemp,postinc1
 26201  015674  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26202  01567A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26203  015680  0060  F013  FFE6   	movff	btemp+3,postinc1
 26204  015686  EC20  F09F         	call	___flmul	;wreg free
 26205  01568A  0060  F007  FFE6   	movff	btemp,postinc1
 26206  015690  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26207  015696  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26208  01569C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26209  0156A2  EC13  F0A7         	call	___fldiv	;wreg free
 26210  0156A6  D0D7               	goto	l1831
 26211  0156A8                     l10063:
 26212                           
 26213                           ;daq.c: 146:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 26214                           ;stkvar	_chan @ sp[(0)+-1]
 26215  0156A8  0EFF               	movlw	-1
 26216  0156AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26217  0156B0  0E03               	movlw	3
 26218  0156B2  6E09               	movwf	(btemp+8)^0,c
 26219  0156B4  0E00               	movlw	0
 26220  0156B6  6E0A               	movwf	(btemp+9)^0,c
 26221  0156B8  2A0C               	incf	(btemp+11)^0,f,c
 26222  0156BA  D003               	goto	u9414
 26223  0156BC                     u9415:
 26224  0156BC  340A               	rlcf	(btemp+9)^0,w,c
 26225  0156BE  320A               	rrcf	(btemp+9)^0,f,c
 26226  0156C0  3209               	rrcf	(btemp+8)^0,f,c
 26227  0156C2                     u9414:
 26228  0156C2  2E0C               	decfsz	(btemp+11)^0,f,c
 26229  0156C4  D7FB               	goto	u9415
 26230  0156C6  B009               	btfsc	(btemp+8)^0,0,c
 26231  0156C8  D011               	goto	u9440
 26232                           
 26233                           ;stkvar	_chan @ sp[(0)+-1]
 26234  0156CA  0EFF               	movlw	-1
 26235  0156CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26236  0156D2  0E00               	movlw	0
 26237  0156D4  6E09               	movwf	(btemp+8)^0,c
 26238  0156D6  0E08               	movlw	8
 26239  0156D8  6E0A               	movwf	(btemp+9)^0,c
 26240  0156DA  2A0C               	incf	(btemp+11)^0,f,c
 26241  0156DC  D003               	goto	u9434
 26242  0156DE                     u9435:
 26243  0156DE  340A               	rlcf	(btemp+9)^0,w,c
 26244  0156E0  320A               	rrcf	(btemp+9)^0,f,c
 26245  0156E2  3209               	rrcf	(btemp+8)^0,f,c
 26246  0156E4                     u9434:
 26247  0156E4  2E0C               	decfsz	(btemp+11)^0,f,c
 26248  0156E6  D7FB               	goto	u9435
 26249  0156E8  A009               	btfss	(btemp+8)^0,0,c
 26250  0156EA  D04E               	goto	l10071
 26251  0156EC                     u9440:
 26252                           
 26253                           ;daq.c: 147:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 26254  0156EC  0E00               	movlw	0
 26255  0156EE  6EE6               	movwf	postinc1,c
 26256  0156F0  0E00               	movlw	0
 26257  0156F2  6EE6               	movwf	postinc1,c
 26258  0156F4  0E7A               	movlw	122
 26259  0156F6  6EE6               	movwf	postinc1,c
 26260  0156F8  0E44               	movlw	68
 26261  0156FA  6EE6               	movwf	postinc1,c
 26262  0156FC  0E00               	movlw	0
 26263  0156FE  6EE6               	movwf	postinc1,c
 26264  015700  0E00               	movlw	0
 26265  015702  6EE6               	movwf	postinc1,c
 26266  015704  0E20               	movlw	32
 26267  015706  6EE6               	movwf	postinc1,c
 26268  015708  0E3F               	movlw	63
 26269  01570A  6EE6               	movwf	postinc1,c
 26270                           
 26271                           ;stkvar	_chan @ sp[(-8)+-1]
 26272  01570C  0EF7               	movlw	-9
 26273  01570E  50E3               	movf	plusw1,w,c
 26274  015710  6EE6               	movwf	postinc1,c
 26275  015712  ECD3  F0E4         	call	_get_raw_result	;wreg free
 26276  015716  0060  F004  F00B   	movff	btemp,btemp+10
 26277  01571C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26278  015722  500B               	movf	(btemp+10)^0,w,c
 26279  015724  6E05               	movwf	(btemp+4)^0,c
 26280  015726  500C               	movf	(btemp+11)^0,w,c
 26281  015728  6E06               	movwf	(btemp+5)^0,c
 26282  01572A  6A07               	clrf	(btemp+6)^0,c
 26283  01572C  6A08               	clrf	(btemp+7)^0,c
 26284  01572E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26285  015734  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26286  01573A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26287  015740  0060  F023  FFE6   	movff	btemp+7,postinc1
 26288  015746  0E00               	movlw	0
 26289  015748  6EE6               	movwf	postinc1,c
 26290  01574A  EC39  F0C5         	call	___xxtofl	;wreg free
 26291  01574E  0060  F007  FFE6   	movff	btemp,postinc1
 26292  015754  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26293  01575A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26294  015760  0060  F013  FFE6   	movff	btemp+3,postinc1
 26295  015766  EC20  F09F         	call	___flmul	;wreg free
 26296  01576A  0060  F007  FFE6   	movff	btemp,postinc1
 26297  015770  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26298  015776  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26299  01577C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26300  015782  EC13  F0A7         	call	___fldiv	;wreg free
 26301  015786  D067               	goto	l1831
 26302  015788                     l10071:
 26303                           
 26304                           ;daq.c: 149:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26305  015788  0E00               	movlw	0
 26306  01578A  6EE6               	movwf	postinc1,c
 26307  01578C  0E00               	movlw	0
 26308  01578E  6EE6               	movwf	postinc1,c
 26309  015790  0E7A               	movlw	122
 26310  015792  6EE6               	movwf	postinc1,c
 26311  015794  0E44               	movlw	68
 26312  015796  6EE6               	movwf	postinc1,c
 26313  015798  0E61               	movlw	97
 26314  01579A  6EE6               	movwf	postinc1,c
 26315  01579C  0E03               	movlw	3
 26316  01579E  6EE6               	movwf	postinc1,c
 26317  0157A0  0E84               	movlw	132
 26318  0157A2  6EE6               	movwf	postinc1,c
 26319  0157A4  0E40               	movlw	64
 26320  0157A6  6EE6               	movwf	postinc1,c
 26321                           
 26322                           ;stkvar	_chan @ sp[(-8)+-1]
 26323  0157A8  0EF7               	movlw	-9
 26324  0157AA  50E3               	movf	plusw1,w,c
 26325  0157AC  6EE6               	movwf	postinc1,c
 26326  0157AE  ECD3  F0E4         	call	_get_raw_result	;wreg free
 26327  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 26328  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 26329  0157BE  500B               	movf	(btemp+10)^0,w,c
 26330  0157C0  6E05               	movwf	(btemp+4)^0,c
 26331  0157C2  500C               	movf	(btemp+11)^0,w,c
 26332  0157C4  6E06               	movwf	(btemp+5)^0,c
 26333  0157C6  6A07               	clrf	(btemp+6)^0,c
 26334  0157C8  6A08               	clrf	(btemp+7)^0,c
 26335  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 26336  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26337  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26338  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 26339  0157E2  0E00               	movlw	0
 26340  0157E4  6EE6               	movwf	postinc1,c
 26341  0157E6  EC39  F0C5         	call	___xxtofl	;wreg free
 26342  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 26343  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26344  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26345  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26346  015802  EC20  F09F         	call	___flmul	;wreg free
 26347  015806  0060  F007  FFE6   	movff	btemp,postinc1
 26348  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26349  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26350  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 26351  01581E  EC13  F0A7         	call	___fldiv	;wreg free
 26352  015822  D019               	goto	l1831
 26353  015824                     l10077:
 26354                           
 26355                           ;daq.c: 152:   return 0.0;
 26356  015824  0E00               	movlw	0
 26357  015826  6E01               	movwf	btemp^0,c
 26358  015828  0E00               	movlw	0
 26359  01582A  6E02               	movwf	(btemp+1)^0,c
 26360  01582C  0E00               	movlw	0
 26361  01582E  6E03               	movwf	(btemp+2)^0,c
 26362  015830  0E00               	movlw	0
 26363  015832                     L32:
 26364  015832  6E04               	movwf	(btemp+3)^0,c
 26365  015834  D010               	goto	l1831
 26366  015836                     l10085:
 26367                           
 26368                           ;stkvar	_to_what @ sp[(0)+-2]
 26369  015836  0EFE               	movlw	-2
 26370  015838  50E3               	movf	plusw1,w,c
 26371  01583A  6E0B               	movwf	(btemp+10)^0,c
 26372  01583C  6A0C               	clrf	(btemp+11)^0,c
 26373                           
 26374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26375                           ; Switch size 1, requested type "simple"
 26376                           ; Number of cases is 1, Range of values is 0 to 0
 26377                           ; switch strategies available:
 26378                           ; Name         Instructions Cycles
 26379                           ; simple_byte            4     3 (average)
 26380                           ;	Chosen strategy is simple_byte
 26381  01583E  500C               	movf	(btemp+11)^0,w,c
 26382  015840  0A00               	xorlw	0	; case 0
 26383  015842  A4D8               	btfss	status,2,c
 26384  015844  D7EF               	goto	l10077
 26385                           
 26386                           ; Switch size 1, requested type "simple"
 26387                           ; Number of cases is 2, Range of values is 0 to 1
 26388                           ; switch strategies available:
 26389                           ; Name         Instructions Cycles
 26390                           ; simple_byte            7     4 (average)
 26391                           ;	Chosen strategy is simple_byte
 26392  015846  500B               	movf	(btemp+10)^0,w,c
 26393  015848  0A00               	xorlw	0	; case 0
 26394  01584A  B4D8               	btfsc	status,2,c
 26395  01584C  D5AA               	goto	l10031
 26396  01584E  0A01               	xorlw	1	; case 1
 26397  015850  B4D8               	btfsc	status,2,c
 26398  015852  D72A               	goto	l10063
 26399  015854  D7E7               	goto	l10077
 26400  015856                     l1831:
 26401                           
 26402                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26403  015856  52E5               	movf	postdec1,f,c
 26404  015858  52E5               	movf	postdec1,f,c
 26405  01585A  0012               	return		;funcret
 26406  01585C                     __end_of_conv_raw_result:
 26407                           	opt callstack 0
 26408                           
 26409 ;; *************** function _nanf *****************
 26410 ;; Defined at:
 26411 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 26412 ;; Parameters:    Size  Location     Type
 26413 ;;  s               2  [STACK] PTR const unsigned char 
 26414 ;;		 -> STR_115(1), STR_77(1), 
 26415 ;; Auto vars:     Size  Location     Type
 26416 ;;  u               4  [STACK] struct .
 26417 ;; Return value:  Size  Location     Type
 26418 ;;                  4  [STACK] float 
 26419 ;; Registers used:
 26420 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 26421 ;; Tracked objects:
 26422 ;;		On entry : 0/39
 26423 ;;		On exit  : 0/0
 26424 ;;		Unchanged: 0/0
 26425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26430 ;;Total ram usage:        0 bytes
 26431 ;; Hardware stack levels used:    1
 26432 ;; Hardware stack levels required when called:   15
 26433 ;; This function calls:
 26434 ;;		Nothing
 26435 ;; This function is called by:
 26436 ;;		_conv_raw_result
 26437 ;; This function uses a reentrant model
 26438 ;;
 26439                           
 26440                           	psect	text105
 26441  01BACC                     __ptext105:
 26442                           	opt callstack 0
 26443  01BACC                     _nanf:
 26444                           	opt callstack 0
 26445                           
 26446                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26447  01BACC  52E6               	movf	postinc1,f,c
 26448  01BACE  52E6               	movf	postinc1,f,c
 26449  01BAD0  52E6               	movf	postinc1,f,c
 26450  01BAD2  52E6               	movf	postinc1,f,c
 26451                           
 26452                           ;incstack = 0
 26453 ;; hardware stack exceeded
 26454  01BAD4  0EFF               	movlw	255
 26455  01BAD6  6E09               	movwf	(btemp+8)^0,c
 26456  01BAD8  0EFF               	movlw	255
 26457  01BADA  6E0A               	movwf	(btemp+9)^0,c
 26458  01BADC  0EFF               	movlw	255
 26459  01BADE  6E0B               	movwf	(btemp+10)^0,c
 26460  01BAE0  0E7F               	movlw	127
 26461  01BAE2  6E0C               	movwf	(btemp+11)^0,c
 26462                           
 26463                           ;stkvar	_u @ sp[(-4)+0]
 26464  01BAE4  0EFC               	movlw	-4
 26465  01BAE6  0060  F027  FFE3   	movff	btemp+8,plusw1
 26466  01BAEC  0EFD               	movlw	-3
 26467  01BAEE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26468  01BAF4  0EFE               	movlw	-2
 26469  01BAF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26470  01BAFC  0EFF               	movlw	-1
 26471  01BAFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26472                           
 26473                           ;stkvar	_u @ sp[(-4)+0]
 26474  01BB04  0EFC               	movlw	-4
 26475  01BB06  006F FF8C  F001    	movff	plusw1,btemp
 26476  01BB0C  0EFD               	movlw	-3
 26477  01BB0E  006F FF8C  F002    	movff	plusw1,btemp+1
 26478  01BB14  0EFE               	movlw	-2
 26479  01BB16  006F FF8C  F003    	movff	plusw1,btemp+2
 26480  01BB1C  0EFF               	movlw	-1
 26481  01BB1E  006F FF8C  F004    	movff	plusw1,btemp+3
 26482                           
 26483                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26484  01BB24  0EFA               	movlw	250
 26485  01BB26  26E1               	addwf	fsr1l,f,c
 26486  01BB28  0EFF               	movlw	255
 26487  01BB2A  22E2               	addwfc	fsr1h,f,c
 26488  01BB2C  0012               	return		;funcret
 26489  01BB2E                     __end_of_nanf:
 26490                           	opt callstack 0
 26491                           
 26492 ;; *************** function _get_raw_result *****************
 26493 ;; Defined at:
 26494 ;;		line 115 in file "daq.c"
 26495 ;; Parameters:    Size  Location     Type
 26496 ;;  index           1  [STACK] const enum E16590
 26497 ;; Auto vars:     Size  Location     Type
 26498 ;;		None
 26499 ;; Return value:  Size  Location     Type
 26500 ;;                  2  [STACK] unsigned short 
 26501 ;; Registers used:
 26502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 26503 ;; Tracked objects:
 26504 ;;		On entry : 0/1
 26505 ;;		On exit  : 0/0
 26506 ;;		Unchanged: 0/0
 26507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26512 ;;Total ram usage:        0 bytes
 26513 ;; Hardware stack levels used:    1
 26514 ;; Hardware stack levels required when called:   15
 26515 ;; This function calls:
 26516 ;;		Nothing
 26517 ;; This function is called by:
 26518 ;;		_main
 26519 ;;		_current_sensor_cal
 26520 ;;		_conv_raw_result
 26521 ;;		_cal_current_zero
 26522 ;; This function uses a reentrant model
 26523 ;;
 26524                           
 26525                           	psect	text106
 26526  01C9A6                     __ptext106:
 26527                           	opt callstack 0
 26528  01C9A6                     _get_raw_result:
 26529                           	opt callstack 0
 26530                           
 26531                           ;daq.c: 115: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 116: {;daq.c
      +                          : 117:  return R.raw_adc[index];
 26532                           ;stkvar	_index @ sp[(0)+-1]
 26533                           
 26534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26535                           ;incstack = 0
 26536 ;; hardware stack exceeded
 26537  01C9A6  0EFF               	movlw	-1
 26538  01C9A8  50E3               	movf	plusw1,w,c
 26539  01C9AA  0D02               	mullw	2
 26540  01C9AC  50F3               	movf	243,w,c
 26541  01C9AE  0FAF               	addlw	low _R
 26542  01C9B0  6ED9               	movwf	fsr2l,c
 26543  01C9B2  6ADA               	clrf	fsr2h,c
 26544  01C9B4  006F FF78  F001    	movff	postinc2,btemp
 26545  01C9BA  006F FF74  F002    	movff	postdec2,btemp+1
 26546                           
 26547                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 26548  01C9C0  52E5               	movf	postdec1,f,c
 26549  01C9C2  0012               	return		;funcret
 26550  01C9C4                     __end_of_get_raw_result:
 26551                           	opt callstack 0
 26552                           
 26553 ;; *************** function ___xxtofl *****************
 26554 ;; Defined at:
 26555 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 26556 ;; Parameters:    Size  Location     Type
 26557 ;;  sign            1  [STACK] unsigned char 
 26558 ;;  val             4  [STACK] long 
 26559 ;; Auto vars:     Size  Location     Type
 26560 ;;  arg             4  [STACK] unsigned long 
 26561 ;;  exp             1  [STACK] unsigned char 
 26562 ;; Return value:  Size  Location     Type
 26563 ;;                  4  [STACK] unsigned char 
 26564 ;; Registers used:
 26565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26566 ;; Tracked objects:
 26567 ;;		On entry : 0/0
 26568 ;;		On exit  : 0/0
 26569 ;;		Unchanged: 0/0
 26570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26575 ;;Total ram usage:        0 bytes
 26576 ;; Hardware stack levels used:    1
 26577 ;; Hardware stack levels required when called:   15
 26578 ;; This function calls:
 26579 ;;		Nothing
 26580 ;; This function is called by:
 26581 ;;		_conv_raw_result
 26582 ;;		_init_bsoc
 26583 ;; This function uses a reentrant model
 26584 ;;
 26585                           
 26586                           	psect	text107
 26587  018A72                     __ptext107:
 26588                           	opt callstack 0
 26589  018A72                     ___xxtofl:
 26590                           	opt callstack 0
 26591                           
 26592                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26593  018A72  0E05               	movlw	5
 26594  018A74  26E1               	addwf	fsr1l,f,c
 26595  018A76  0E00               	movlw	0
 26596  018A78  22E2               	addwfc	fsr1h,f,c
 26597                           
 26598                           ;stkvar	_sign @ sp[(-5)+-1]
 26599                           
 26600                           ;incstack = 0
 26601 ;; hardware stack exceeded
 26602  018A7A  0EFA               	movlw	-6
 26603  018A7C  50E3               	movf	plusw1,w,c
 26604  018A7E  B4D8               	btfsc	status,2,c
 26605  018A80  D01D               	goto	l9979
 26606                           
 26607                           ;stkvar	_val @ sp[(-5)+-5]
 26608  018A82  0EF9               	movlw	-7
 26609  018A84  AEE3               	btfss	plusw1,7,c
 26610  018A86  D01A               	goto	l9979
 26611                           
 26612                           ;stkvar	_val @ sp[(-5)+-5]
 26613  018A88  0EF6               	movlw	-10
 26614  018A8A  006F FF8C  F009    	movff	plusw1,btemp+8
 26615  018A90  0EF7               	movlw	-9
 26616  018A92  006F FF8C  F00A    	movff	plusw1,btemp+9
 26617  018A98  0EF8               	movlw	-8
 26618  018A9A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26619  018AA0  0EF9               	movlw	-7
 26620  018AA2  006F FF8C  F00C    	movff	plusw1,btemp+11
 26621  018AA8  1E09               	comf	(btemp+8)^0,f,c
 26622  018AAA  1E0A               	comf	(btemp+9)^0,f,c
 26623  018AAC  1E0B               	comf	(btemp+10)^0,f,c
 26624  018AAE  1E0C               	comf	(btemp+11)^0,f,c
 26625  018AB0  2A09               	incf	(btemp+8)^0,f,c
 26626  018AB2  0E00               	movlw	0
 26627  018AB4  220A               	addwfc	(btemp+9)^0,f,c
 26628  018AB6  220B               	addwfc	(btemp+10)^0,f,c
 26629  018AB8  220C               	addwfc	(btemp+11)^0,f,c
 26630  018ABA  D010               	goto	L33
 26631  018ABC                     l9979:
 26632                           
 26633                           ;stkvar	_val @ sp[(-5)+-5]
 26634  018ABC  0EF6               	movlw	-10
 26635  018ABE  006F FF8C  F009    	movff	plusw1,btemp+8
 26636  018AC4  0EF7               	movlw	-9
 26637  018AC6  006F FF8C  F00A    	movff	plusw1,btemp+9
 26638  018ACC  0EF8               	movlw	-8
 26639  018ACE  006F FF8C  F00B    	movff	plusw1,btemp+10
 26640  018AD4  0EF9               	movlw	-7
 26641  018AD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26642  018ADC                     L33:
 26643                           
 26644                           ;stkvar	_arg @ sp[(-5)+0]
 26645  018ADC  0EFB               	movlw	-5
 26646  018ADE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26647  018AE4  0EFC               	movlw	-4
 26648  018AE6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26649  018AEC  0EFD               	movlw	-3
 26650  018AEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26651  018AF4  0EFE               	movlw	-2
 26652  018AF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26653                           
 26654                           ;stkvar	_val @ sp[(-5)+-5]
 26655  018AFC  0EF6               	movlw	-10
 26656  018AFE  50E3               	movf	plusw1,w,c
 26657  018B00  E113               	bnz	l9987
 26658  018B02  0EF7               	movlw	-9
 26659  018B04  50E3               	movf	plusw1,w,c
 26660  018B06  E110               	bnz	l9987
 26661  018B08  0EF8               	movlw	-8
 26662  018B0A  50E3               	movf	plusw1,w,c
 26663  018B0C  E10D               	bnz	l9987
 26664  018B0E  0EF9               	movlw	-7
 26665  018B10  50E3               	movf	plusw1,w,c
 26666  018B12  A4D8               	btfss	status,2,c
 26667  018B14  D009               	goto	l9987
 26668  018B16  0E00               	movlw	0
 26669  018B18  6E01               	movwf	btemp^0,c
 26670  018B1A  0E00               	movlw	0
 26671  018B1C  6E02               	movwf	(btemp+1)^0,c
 26672  018B1E  0E00               	movlw	0
 26673  018B20  6E03               	movwf	(btemp+2)^0,c
 26674  018B22  0E00               	movlw	0
 26675  018B24  6E04               	movwf	(btemp+3)^0,c
 26676  018B26  D0A2               	goto	l3176
 26677  018B28                     l9987:
 26678  018B28  0E96               	movlw	150
 26679  018B2A  6E0C               	movwf	(btemp+11)^0,c
 26680                           
 26681                           ;stkvar	_exp @ sp[(-5)+4]
 26682  018B2C  0EFF               	movlw	-1
 26683  018B2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26684  018B34  D00B               	goto	l9991
 26685  018B36                     l9989:
 26686                           
 26687                           ;stkvar	_exp @ sp[(-5)+4]
 26688  018B36  0EFF               	movlw	-1
 26689  018B38  2AE3               	incf	plusw1,f,c
 26690                           
 26691                           ;stkvar	_arg @ sp[(-5)+0]
 26692  018B3A  90D8               	bcf	status,0,c
 26693  018B3C  0EFE               	movlw	-2
 26694  018B3E  32E3               	rrcf	plusw1,f,c
 26695  018B40  0EFD               	movlw	-3
 26696  018B42  32E3               	rrcf	plusw1,f,c
 26697  018B44  0EFC               	movlw	-4
 26698  018B46  32E3               	rrcf	plusw1,f,c
 26699  018B48  0EFB               	movlw	-5
 26700  018B4A  32E3               	rrcf	plusw1,f,c
 26701  018B4C                     l9991:
 26702                           
 26703                           ;stkvar	_arg @ sp[(-5)+0]
 26704  018B4C  50E1               	movf	fsr1l,w,c
 26705  018B4E  0FFB               	addlw	-5
 26706  018B50  6ED9               	movwf	fsr2l,c
 26707  018B52  50E2               	movf	fsr1h,w,c
 26708  018B54  6EDA               	movwf	fsr2h,c
 26709  018B56  0EFF               	movlw	255
 26710  018B58  22DA               	addwfc	fsr2h,f,c
 26711  018B5A  52DE               	movf	postinc2,f,c
 26712  018B5C  52DE               	movf	postinc2,f,c
 26713  018B5E  52DE               	movf	postinc2,f,c
 26714  018B60  0EFE               	movlw	254
 26715  018B62  14DD               	andwf	postdec2,w,c
 26716  018B64  B4D8               	btfsc	status,2,c
 26717  018B66  D018               	goto	l9999
 26718  018B68  D7E6               	goto	l9989
 26719  018B6A                     l9993:
 26720                           
 26721                           ;stkvar	_exp @ sp[(-5)+4]
 26722  018B6A  0EFF               	movlw	-1
 26723  018B6C  2AE3               	incf	plusw1,f,c
 26724                           
 26725                           ;stkvar	_arg @ sp[(-5)+0]
 26726  018B6E  50E1               	movf	fsr1l,w,c
 26727  018B70  0FFB               	addlw	-5
 26728  018B72  6ED9               	movwf	fsr2l,c
 26729  018B74  50E2               	movf	fsr1h,w,c
 26730  018B76  6EDA               	movwf	fsr2h,c
 26731  018B78  0EFF               	movlw	255
 26732  018B7A  22DA               	addwfc	fsr2h,f,c
 26733  018B7C  2ADE               	incf	postinc2,f,c
 26734  018B7E  0E00               	movlw	0
 26735  018B80  22DE               	addwfc	postinc2,f,c
 26736  018B82  22DE               	addwfc	postinc2,f,c
 26737  018B84  22DE               	addwfc	postinc2,f,c
 26738                           
 26739                           ;stkvar	_arg @ sp[(-5)+0]
 26740  018B86  90D8               	bcf	status,0,c
 26741  018B88  0EFE               	movlw	-2
 26742  018B8A  32E3               	rrcf	plusw1,f,c
 26743  018B8C  0EFD               	movlw	-3
 26744  018B8E  32E3               	rrcf	plusw1,f,c
 26745  018B90  0EFC               	movlw	-4
 26746  018B92  32E3               	rrcf	plusw1,f,c
 26747  018B94  0EFB               	movlw	-5
 26748  018B96  32E3               	rrcf	plusw1,f,c
 26749  018B98                     l9999:
 26750                           
 26751                           ;stkvar	_arg @ sp[(-5)+0]
 26752  018B98  50E1               	movf	fsr1l,w,c
 26753  018B9A  0FFB               	addlw	-5
 26754  018B9C  6ED9               	movwf	fsr2l,c
 26755  018B9E  50E2               	movf	fsr1h,w,c
 26756  018BA0  6EDA               	movwf	fsr2h,c
 26757  018BA2  0EFF               	movlw	255
 26758  018BA4  22DA               	addwfc	fsr2h,f,c
 26759  018BA6  52DE               	movf	postinc2,f,c
 26760  018BA8  52DE               	movf	postinc2,f,c
 26761  018BAA  52DE               	movf	postinc2,f,c
 26762  018BAC  0EFF               	movlw	255
 26763  018BAE  14DD               	andwf	postdec2,w,c
 26764  018BB0  B4D8               	btfsc	status,2,c
 26765  018BB2  D00C               	goto	l10003
 26766  018BB4  D7DA               	goto	l9993
 26767  018BB6                     l10001:
 26768                           
 26769                           ;stkvar	_exp @ sp[(-5)+4]
 26770  018BB6  0EFF               	movlw	-1
 26771  018BB8  06E3               	decf	plusw1,f,c
 26772                           
 26773                           ;stkvar	_arg @ sp[(-5)+0]
 26774  018BBA  90D8               	bcf	status,0,c
 26775  018BBC  0EFB               	movlw	-5
 26776  018BBE  36E3               	rlcf	plusw1,f,c
 26777  018BC0  0EFC               	movlw	-4
 26778  018BC2  36E3               	rlcf	plusw1,f,c
 26779  018BC4  0EFD               	movlw	-3
 26780  018BC6  36E3               	rlcf	plusw1,f,c
 26781  018BC8  0EFE               	movlw	-2
 26782  018BCA  36E3               	rlcf	plusw1,f,c
 26783  018BCC                     l10003:
 26784                           
 26785                           ;stkvar	_arg @ sp[(-5)+0]
 26786  018BCC  0EFD               	movlw	-3
 26787  018BCE  BEE3               	btfsc	plusw1,7,c
 26788  018BD0  D007               	goto	u9290
 26789                           
 26790                           ;stkvar	_exp @ sp[(-5)+4]
 26791  018BD2  0EFF               	movlw	-1
 26792  018BD4  006F FF8C  F001    	movff	plusw1,btemp
 26793  018BDA  0E02               	movlw	2
 26794  018BDC  6001               	cpfslt	btemp^0,c
 26795  018BDE  D7EB               	goto	l10001
 26796  018BE0                     u9290:
 26797                           
 26798                           ;stkvar	_exp @ sp[(-5)+4]
 26799  018BE0  0EFF               	movlw	-1
 26800  018BE2  B0E3               	btfsc	plusw1,0,c
 26801  018BE4  D002               	goto	l10011
 26802                           
 26803                           ;stkvar	_arg @ sp[(-5)+0]
 26804  018BE6  0EFD               	movlw	-3
 26805  018BE8  9EE3               	bcf	plusw1,7,c
 26806  018BEA                     l10011:
 26807                           
 26808                           ;stkvar	_exp @ sp[(-5)+4]
 26809  018BEA  50E1               	movf	fsr1l,w,c
 26810  018BEC  0FFF               	addlw	-1
 26811  018BEE  6ED9               	movwf	fsr2l,c
 26812  018BF0  50E2               	movf	fsr1h,w,c
 26813  018BF2  6EDA               	movwf	fsr2h,c
 26814  018BF4  0EFF               	movlw	255
 26815  018BF6  22DA               	addwfc	fsr2h,f,c
 26816  018BF8  90D8               	bcf	status,0,c
 26817  018BFA  32DF               	rrcf	indf2,f,c
 26818                           
 26819                           ;stkvar	_exp @ sp[(-5)+4]
 26820  018BFC  0EFF               	movlw	-1
 26821  018BFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26822  018C04  0060  F030  F005   	movff	btemp+11,btemp+4
 26823  018C0A  6A06               	clrf	(btemp+5)^0,c
 26824  018C0C  6A07               	clrf	(btemp+6)^0,c
 26825  018C0E  6A08               	clrf	(btemp+7)^0,c
 26826  018C10  0060  F014  F008   	movff	btemp+4,btemp+7
 26827  018C16  6A07               	clrf	(btemp+6)^0,c
 26828  018C18  6A06               	clrf	(btemp+5)^0,c
 26829  018C1A  6A05               	clrf	(btemp+4)^0,c
 26830                           
 26831                           ;stkvar	_arg @ sp[(-5)+0]
 26832  018C1C  50E1               	movf	fsr1l,w,c
 26833  018C1E  0FFB               	addlw	-5
 26834  018C20  6ED9               	movwf	fsr2l,c
 26835  018C22  50E2               	movf	fsr1h,w,c
 26836  018C24  6EDA               	movwf	fsr2h,c
 26837  018C26  0EFF               	movlw	255
 26838  018C28  22DA               	addwfc	fsr2h,f,c
 26839  018C2A  5005               	movf	(btemp+4)^0,w,c
 26840  018C2C  12DE               	iorwf	postinc2,f,c
 26841  018C2E  5006               	movf	(btemp+5)^0,w,c
 26842  018C30  12DE               	iorwf	postinc2,f,c
 26843  018C32  5007               	movf	(btemp+6)^0,w,c
 26844  018C34  12DE               	iorwf	postinc2,f,c
 26845  018C36  5008               	movf	(btemp+7)^0,w,c
 26846  018C38  12DE               	iorwf	postinc2,f,c
 26847                           
 26848                           ;stkvar	_sign @ sp[(-5)+-1]
 26849  018C3A  0EFA               	movlw	-6
 26850  018C3C  50E3               	movf	plusw1,w,c
 26851  018C3E  B4D8               	btfsc	status,2,c
 26852  018C40  D005               	goto	l10021
 26853                           
 26854                           ;stkvar	_val @ sp[(-5)+-5]
 26855  018C42  0EF9               	movlw	-7
 26856  018C44  AEE3               	btfss	plusw1,7,c
 26857  018C46  D002               	goto	l10021
 26858                           
 26859                           ;stkvar	_arg @ sp[(-5)+0]
 26860  018C48  0EFE               	movlw	-2
 26861  018C4A  8EE3               	bsf	plusw1,7,c
 26862  018C4C                     l10021:
 26863                           
 26864                           ;stkvar	_arg @ sp[(-5)+0]
 26865  018C4C  0EFB               	movlw	-5
 26866  018C4E  006F FF8C  F001    	movff	plusw1,btemp
 26867  018C54  0EFC               	movlw	-4
 26868  018C56  006F FF8C  F002    	movff	plusw1,btemp+1
 26869  018C5C  0EFD               	movlw	-3
 26870  018C5E  006F FF8C  F003    	movff	plusw1,btemp+2
 26871  018C64  0EFE               	movlw	-2
 26872  018C66  006F FF8C  F004    	movff	plusw1,btemp+3
 26873  018C6C                     l3176:
 26874                           
 26875                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 26876  018C6C  0EF6               	movlw	246
 26877  018C6E  26E1               	addwf	fsr1l,f,c
 26878  018C70  0EFF               	movlw	255
 26879  018C72  22E2               	addwfc	fsr1h,f,c
 26880  018C74  0012               	return		;funcret
 26881  018C76                     __end_of___xxtofl:
 26882                           	opt callstack 0
 26883                           
 26884 ;; *************** function ___fldiv *****************
 26885 ;; Defined at:
 26886 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 26887 ;; Parameters:    Size  Location     Type
 26888 ;;  b               4  [STACK] unsigned char 
 26889 ;;  a               4  [STACK] unsigned char 
 26890 ;; Auto vars:     Size  Location     Type
 26891 ;;  grs             4  [STACK] unsigned long 
 26892 ;;  rem             4  [STACK] unsigned long 
 26893 ;;  new_exp         2  [STACK] short 
 26894 ;;  aexp            1  [STACK] unsigned char 
 26895 ;;  bexp            1  [STACK] unsigned char 
 26896 ;;  sign            1  [STACK] unsigned char 
 26897 ;; Return value:  Size  Location     Type
 26898 ;;                  4  [STACK] unsigned char 
 26899 ;; Registers used:
 26900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 26901 ;; Tracked objects:
 26902 ;;		On entry : 0/0
 26903 ;;		On exit  : 0/0
 26904 ;;		Unchanged: 0/0
 26905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26910 ;;Total ram usage:        0 bytes
 26911 ;; Hardware stack levels used:    1
 26912 ;; Hardware stack levels required when called:   15
 26913 ;; This function calls:
 26914 ;;		Nothing
 26915 ;; This function is called by:
 26916 ;;		_conv_raw_result
 26917 ;;		_convert_dac_raw
 26918 ;;		_calc_bsoc
 26919 ;;		_init_bsoc
 26920 ;;		_esr_check
 26921 ;;		_efgtoa
 26922 ;; This function uses a reentrant model
 26923 ;;
 26924                           
 26925                           	psect	text108
 26926  014E26                     __ptext108:
 26927                           	opt callstack 0
 26928  014E26                     ___fldiv:
 26929                           	opt callstack 0
 26930                           
 26931                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26932  014E26  0E0D               	movlw	13
 26933  014E28  26E1               	addwf	fsr1l,f,c
 26934  014E2A  0E00               	movlw	0
 26935  014E2C  22E2               	addwfc	fsr1h,f,c
 26936                           
 26937                           ;stkvar	_b @ sp[(-13)+-4]
 26938                           
 26939                           ;incstack = 0
 26940 ;; hardware stack exceeded
 26941  014E2E  0EF2               	movlw	242
 26942  014E30  24E1               	addwf	fsr1l,w,c
 26943  014E32  6ED9               	movwf	fsr2l,c
 26944  014E34  0EFF               	movlw	255
 26945  014E36  20E2               	addwfc	fsr1h,w,c
 26946  014E38  6EDA               	movwf	fsr2h,c
 26947  014E3A  50DF               	movf	indf2,w,c
 26948  014E3C  6E0C               	movwf	(btemp+11)^0,c
 26949  014E3E  0E80               	movlw	128
 26950  014E40  160C               	andwf	(btemp+11)^0,f,c
 26951                           
 26952                           ;stkvar	_sign @ sp[(-13)+12]
 26953  014E42  0EFF               	movlw	-1
 26954  014E44  0060  F033  FFE3   	movff	btemp+11,plusw1
 26955                           
 26956                           ;stkvar	_b @ sp[(-13)+-4]
 26957  014E4A  0EF2               	movlw	242
 26958  014E4C  24E1               	addwf	fsr1l,w,c
 26959  014E4E  6ED9               	movwf	fsr2l,c
 26960  014E50  0EFF               	movlw	255
 26961  014E52  20E2               	addwfc	fsr1h,w,c
 26962  014E54  6EDA               	movwf	fsr2h,c
 26963  014E56  50DF               	movf	indf2,w,c
 26964  014E58  6E0C               	movwf	(btemp+11)^0,c
 26965  014E5A  90D8               	bcf	status,0,c
 26966  014E5C  340C               	rlcf	(btemp+11)^0,w,c
 26967  014E5E  6E0B               	movwf	(btemp+10)^0,c
 26968                           
 26969                           ;stkvar	_bexp @ sp[(-13)+11]
 26970  014E60  0EFE               	movlw	-2
 26971  014E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26972                           
 26973                           ;stkvar	_b @ sp[(-13)+-4]
 26974  014E68  0EF1               	movlw	241
 26975  014E6A  24E1               	addwf	fsr1l,w,c
 26976  014E6C  6ED9               	movwf	fsr2l,c
 26977  014E6E  0EFF               	movlw	255
 26978  014E70  20E2               	addwfc	fsr1h,w,c
 26979  014E72  6EDA               	movwf	fsr2h,c
 26980  014E74  AEDF               	btfss	indf2,7,c
 26981  014E76  D002               	goto	l8551
 26982                           
 26983                           ;stkvar	_bexp @ sp[(-13)+11]
 26984  014E78  0EFE               	movlw	-2
 26985  014E7A  80E3               	bsf	plusw1,0,c
 26986  014E7C                     l8551:
 26987                           
 26988                           ;stkvar	_bexp @ sp[(-13)+11]
 26989  014E7C  0EFE               	movlw	-2
 26990  014E7E  50E3               	movf	plusw1,w,c
 26991  014E80  B4D8               	btfsc	status,2,c
 26992  014E82  D027               	goto	l8561
 26993                           
 26994                           ;stkvar	_bexp @ sp[(-13)+11]
 26995  014E84  0EFE               	movlw	-2
 26996  014E86  28E3               	incf	plusw1,w,c
 26997  014E88  A4D8               	btfss	status,2,c
 26998  014E8A  D018               	goto	l8557
 26999  014E8C  0E00               	movlw	0
 27000  014E8E  6E09               	movwf	(btemp+8)^0,c
 27001  014E90  0E00               	movlw	0
 27002  014E92  6E0A               	movwf	(btemp+9)^0,c
 27003  014E94  0E00               	movlw	0
 27004  014E96  6E0B               	movwf	(btemp+10)^0,c
 27005  014E98  0E00               	movlw	0
 27006  014E9A  6E0C               	movwf	(btemp+11)^0,c
 27007                           
 27008                           ;stkvar	_b @ sp[(-13)+-4]
 27009  014E9C  0EEF               	movlw	-17
 27010  014E9E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27011  014EA4  0EF0               	movlw	-16
 27012  014EA6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27013  014EAC  0EF1               	movlw	-15
 27014  014EAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27015  014EB4  0EF2               	movlw	-14
 27016  014EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27017  014EBC                     l8557:
 27018                           
 27019                           ;stkvar	_b @ sp[(-13)+-4]
 27020  014EBC  0EF1               	movlw	-15
 27021  014EBE  8EE3               	bsf	plusw1,7,c
 27022                           
 27023                           ;stkvar	_b @ sp[(-13)+-4]
 27024  014EC0  0EF2               	movlw	242
 27025  014EC2  24E1               	addwf	fsr1l,w,c
 27026  014EC4  6ED9               	movwf	fsr2l,c
 27027  014EC6  0EFF               	movlw	255
 27028  014EC8  20E2               	addwfc	fsr1h,w,c
 27029  014ECA  6EDA               	movwf	fsr2h,c
 27030  014ECC  0E00               	movlw	0
 27031  014ECE  6EDF               	movwf	indf2,c
 27032  014ED0  D018               	goto	l8563
 27033  014ED2                     l8561:
 27034  014ED2  0E00               	movlw	0
 27035  014ED4  6E09               	movwf	(btemp+8)^0,c
 27036  014ED6  0E00               	movlw	0
 27037  014ED8  6E0A               	movwf	(btemp+9)^0,c
 27038  014EDA  0E00               	movlw	0
 27039  014EDC  6E0B               	movwf	(btemp+10)^0,c
 27040  014EDE  0E00               	movlw	0
 27041  014EE0  6E0C               	movwf	(btemp+11)^0,c
 27042                           
 27043                           ;stkvar	_b @ sp[(-13)+-4]
 27044  014EE2  0EEF               	movlw	-17
 27045  014EE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 27046  014EEA  0EF0               	movlw	-16
 27047  014EEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27048  014EF2  0EF1               	movlw	-15
 27049  014EF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27050  014EFA  0EF2               	movlw	-14
 27051  014EFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27052  014F02                     l8563:
 27053                           
 27054                           ;stkvar	_a @ sp[(-13)+-8]
 27055  014F02  0EEE               	movlw	238
 27056  014F04  24E1               	addwf	fsr1l,w,c
 27057  014F06  6ED9               	movwf	fsr2l,c
 27058  014F08  0EFF               	movlw	255
 27059  014F0A  20E2               	addwfc	fsr1h,w,c
 27060  014F0C  6EDA               	movwf	fsr2h,c
 27061  014F0E  50DF               	movf	indf2,w,c
 27062  014F10  6E0C               	movwf	(btemp+11)^0,c
 27063  014F12  0E80               	movlw	128
 27064  014F14  160C               	andwf	(btemp+11)^0,f,c
 27065                           
 27066                           ;stkvar	_sign @ sp[(-13)+12]
 27067  014F16  50E1               	movf	fsr1l,w,c
 27068  014F18  0FFF               	addlw	-1
 27069  014F1A  6ED9               	movwf	fsr2l,c
 27070  014F1C  50E2               	movf	fsr1h,w,c
 27071  014F1E  6EDA               	movwf	fsr2h,c
 27072  014F20  0EFF               	movlw	255
 27073  014F22  22DA               	addwfc	fsr2h,f,c
 27074  014F24  500C               	movf	(btemp+11)^0,w,c
 27075  014F26  1ADF               	xorwf	indf2,f,c
 27076                           
 27077                           ;stkvar	_a @ sp[(-13)+-8]
 27078  014F28  0EEE               	movlw	238
 27079  014F2A  24E1               	addwf	fsr1l,w,c
 27080  014F2C  6ED9               	movwf	fsr2l,c
 27081  014F2E  0EFF               	movlw	255
 27082  014F30  20E2               	addwfc	fsr1h,w,c
 27083  014F32  6EDA               	movwf	fsr2h,c
 27084  014F34  50DF               	movf	indf2,w,c
 27085  014F36  6E0C               	movwf	(btemp+11)^0,c
 27086  014F38  90D8               	bcf	status,0,c
 27087  014F3A  340C               	rlcf	(btemp+11)^0,w,c
 27088  014F3C  6E0B               	movwf	(btemp+10)^0,c
 27089                           
 27090                           ;stkvar	_aexp @ sp[(-13)+10]
 27091  014F3E  0EFD               	movlw	-3
 27092  014F40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27093                           
 27094                           ;stkvar	_a @ sp[(-13)+-8]
 27095  014F46  0EED               	movlw	237
 27096  014F48  24E1               	addwf	fsr1l,w,c
 27097  014F4A  6ED9               	movwf	fsr2l,c
 27098  014F4C  0EFF               	movlw	255
 27099  014F4E  20E2               	addwfc	fsr1h,w,c
 27100  014F50  6EDA               	movwf	fsr2h,c
 27101  014F52  AEDF               	btfss	indf2,7,c
 27102  014F54  D002               	goto	l8571
 27103                           
 27104                           ;stkvar	_aexp @ sp[(-13)+10]
 27105  014F56  0EFD               	movlw	-3
 27106  014F58  80E3               	bsf	plusw1,0,c
 27107  014F5A                     l8571:
 27108                           
 27109                           ;stkvar	_aexp @ sp[(-13)+10]
 27110  014F5A  0EFD               	movlw	-3
 27111  014F5C  50E3               	movf	plusw1,w,c
 27112  014F5E  B4D8               	btfsc	status,2,c
 27113  014F60  D027               	goto	l8581
 27114                           
 27115                           ;stkvar	_aexp @ sp[(-13)+10]
 27116  014F62  0EFD               	movlw	-3
 27117  014F64  28E3               	incf	plusw1,w,c
 27118  014F66  A4D8               	btfss	status,2,c
 27119  014F68  D018               	goto	l8577
 27120  014F6A  0E00               	movlw	0
 27121  014F6C  6E09               	movwf	(btemp+8)^0,c
 27122  014F6E  0E00               	movlw	0
 27123  014F70  6E0A               	movwf	(btemp+9)^0,c
 27124  014F72  0E00               	movlw	0
 27125  014F74  6E0B               	movwf	(btemp+10)^0,c
 27126  014F76  0E00               	movlw	0
 27127  014F78  6E0C               	movwf	(btemp+11)^0,c
 27128                           
 27129                           ;stkvar	_a @ sp[(-13)+-8]
 27130  014F7A  0EEB               	movlw	-21
 27131  014F7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27132  014F82  0EEC               	movlw	-20
 27133  014F84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27134  014F8A  0EED               	movlw	-19
 27135  014F8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27136  014F92  0EEE               	movlw	-18
 27137  014F94  0060  F033  FFE3   	movff	btemp+11,plusw1
 27138  014F9A                     l8577:
 27139                           
 27140                           ;stkvar	_a @ sp[(-13)+-8]
 27141  014F9A  0EED               	movlw	-19
 27142  014F9C  8EE3               	bsf	plusw1,7,c
 27143                           
 27144                           ;stkvar	_a @ sp[(-13)+-8]
 27145  014F9E  0EEE               	movlw	238
 27146  014FA0  24E1               	addwf	fsr1l,w,c
 27147  014FA2  6ED9               	movwf	fsr2l,c
 27148  014FA4  0EFF               	movlw	255
 27149  014FA6  20E2               	addwfc	fsr1h,w,c
 27150  014FA8  6EDA               	movwf	fsr2h,c
 27151  014FAA  0E00               	movlw	0
 27152  014FAC  6EDF               	movwf	indf2,c
 27153  014FAE  D018               	goto	l8583
 27154  014FB0                     l8581:
 27155  014FB0  0E00               	movlw	0
 27156  014FB2  6E09               	movwf	(btemp+8)^0,c
 27157  014FB4  0E00               	movlw	0
 27158  014FB6  6E0A               	movwf	(btemp+9)^0,c
 27159  014FB8  0E00               	movlw	0
 27160  014FBA  6E0B               	movwf	(btemp+10)^0,c
 27161  014FBC  0E00               	movlw	0
 27162  014FBE  6E0C               	movwf	(btemp+11)^0,c
 27163                           
 27164                           ;stkvar	_a @ sp[(-13)+-8]
 27165  014FC0  0EEB               	movlw	-21
 27166  014FC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27167  014FC8  0EEC               	movlw	-20
 27168  014FCA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27169  014FD0  0EED               	movlw	-19
 27170  014FD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27171  014FD8  0EEE               	movlw	-18
 27172  014FDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27173  014FE0                     l8583:
 27174                           
 27175                           ;stkvar	_a @ sp[(-13)+-8]
 27176  014FE0  0EEB               	movlw	-21
 27177  014FE2  50E3               	movf	plusw1,w,c
 27178  014FE4  E139               	bnz	l8595
 27179  014FE6  0EEC               	movlw	-20
 27180  014FE8  50E3               	movf	plusw1,w,c
 27181  014FEA  E136               	bnz	l8595
 27182  014FEC  0EED               	movlw	-19
 27183  014FEE  50E3               	movf	plusw1,w,c
 27184  014FF0  E133               	bnz	l8595
 27185  014FF2  0EEE               	movlw	-18
 27186  014FF4  50E3               	movf	plusw1,w,c
 27187  014FF6  A4D8               	btfss	status,2,c
 27188  014FF8  D02F               	goto	l8595
 27189                           
 27190                           ;stkvar	_b @ sp[(-13)+-4]
 27191  014FFA  0EEF               	movlw	-17
 27192  014FFC  6AE3               	clrf	plusw1,c
 27193  014FFE  0EF0               	movlw	-16
 27194  015000  6AE3               	clrf	plusw1,c
 27195  015002  0EF1               	movlw	-15
 27196  015004  6AE3               	clrf	plusw1,c
 27197  015006  0EF2               	movlw	-14
 27198  015008  6AE3               	clrf	plusw1,c
 27199                           
 27200                           ;stkvar	_b @ sp[(-13)+-4]
 27201  01500A  0EF1               	movlw	241
 27202  01500C  24E1               	addwf	fsr1l,w,c
 27203  01500E  6ED9               	movwf	fsr2l,c
 27204  015010  0EFF               	movlw	255
 27205  015012  20E2               	addwfc	fsr1h,w,c
 27206  015014  6EDA               	movwf	fsr2h,c
 27207  015016  0E80               	movlw	128
 27208  015018  12DE               	iorwf	postinc2,f,c
 27209  01501A  0E7F               	movlw	127
 27210  01501C  12DD               	iorwf	postdec2,f,c
 27211  01501E                     l8589:
 27212                           
 27213                           ;stkvar	_sign @ sp[(-13)+12]
 27214  01501E  0EFF               	movlw	-1
 27215  015020  006F FF8C  F00C    	movff	plusw1,btemp+11
 27216                           
 27217                           ;stkvar	_b @ sp[(-13)+-4]
 27218  015026  0EF2               	movlw	242
 27219  015028  24E1               	addwf	fsr1l,w,c
 27220  01502A  6ED9               	movwf	fsr2l,c
 27221  01502C  0EFF               	movlw	255
 27222  01502E  20E2               	addwfc	fsr1h,w,c
 27223  015030  6EDA               	movwf	fsr2h,c
 27224  015032  500C               	movf	(btemp+11)^0,w,c
 27225  015034  12DF               	iorwf	indf2,f,c
 27226                           
 27227                           ;stkvar	_b @ sp[(-13)+-4]
 27228  015036  0EEF               	movlw	-17
 27229  015038  006F FF8C  F001    	movff	plusw1,btemp
 27230  01503E  0EF0               	movlw	-16
 27231  015040  006F FF8C  F002    	movff	plusw1,btemp+1
 27232  015046  0EF1               	movlw	-15
 27233  015048  006F FF8C  F003    	movff	plusw1,btemp+2
 27234  01504E  0EF2               	movlw	-14
 27235  015050  006F FF8C  F004    	movff	plusw1,btemp+3
 27236  015056  D19F               	goto	l3100
 27237  015058                     l8595:
 27238                           
 27239                           ;stkvar	_bexp @ sp[(-13)+11]
 27240  015058  0EFE               	movlw	-2
 27241  01505A  50E3               	movf	plusw1,w,c
 27242  01505C  A4D8               	btfss	status,2,c
 27243  01505E  D009               	goto	l8603
 27244  015060  0E00               	movlw	0
 27245  015062  6E01               	movwf	btemp^0,c
 27246  015064  0E00               	movlw	0
 27247  015066  6E02               	movwf	(btemp+1)^0,c
 27248  015068  0E00               	movlw	0
 27249  01506A  6E03               	movwf	(btemp+2)^0,c
 27250  01506C  0E00               	movlw	0
 27251  01506E  6E04               	movwf	(btemp+3)^0,c
 27252  015070  D192               	goto	l3100
 27253  015072                     l8603:
 27254                           
 27255                           ;stkvar	_bexp @ sp[(-13)+11]
 27256  015072  0EFE               	movlw	-2
 27257  015074  50E3               	movf	plusw1,w,c
 27258  015076  6E0B               	movwf	(btemp+10)^0,c
 27259  015078  6A0C               	clrf	(btemp+11)^0,c
 27260                           
 27261                           ;stkvar	_aexp @ sp[(-13)+10]
 27262  01507A  0EFD               	movlw	-3
 27263  01507C  50E3               	movf	plusw1,w,c
 27264  01507E  5E0B               	subwf	(btemp+10)^0,f,c
 27265  015080  0E00               	movlw	0
 27266  015082  5A0C               	subwfb	(btemp+11)^0,f,c
 27267  015084  0E7F               	movlw	127
 27268  015086  260B               	addwf	(btemp+10)^0,f,c
 27269  015088  0E00               	movlw	0
 27270  01508A  220C               	addwfc	(btemp+11)^0,f,c
 27271                           
 27272                           ;stkvar	_new_exp @ sp[(-13)+8]
 27273  01508C  0EFB               	movlw	-5
 27274  01508E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27275  015094  0EFC               	movlw	-4
 27276  015096  0060  F033  FFE3   	movff	btemp+11,plusw1
 27277                           
 27278                           ;stkvar	_b @ sp[(-13)+-4]
 27279  01509C  0EEF               	movlw	-17
 27280  01509E  006F FF8C  F009    	movff	plusw1,btemp+8
 27281  0150A4  0EF0               	movlw	-16
 27282  0150A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 27283  0150AC  0EF1               	movlw	-15
 27284  0150AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27285  0150B4  0EF2               	movlw	-14
 27286  0150B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27287                           
 27288                           ;stkvar	_rem @ sp[(-13)+4]
 27289  0150BC  0EF7               	movlw	-9
 27290  0150BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27291  0150C4  0EF8               	movlw	-8
 27292  0150C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27293  0150CC  0EF9               	movlw	-7
 27294  0150CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27295  0150D4  0EFA               	movlw	-6
 27296  0150D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27297                           
 27298                           ;stkvar	_b @ sp[(-13)+-4]
 27299  0150DC  0EEF               	movlw	-17
 27300  0150DE  6AE3               	clrf	plusw1,c
 27301  0150E0  0EF0               	movlw	-16
 27302  0150E2  6AE3               	clrf	plusw1,c
 27303  0150E4  0EF1               	movlw	-15
 27304  0150E6  6AE3               	clrf	plusw1,c
 27305  0150E8  0EF2               	movlw	-14
 27306  0150EA  6AE3               	clrf	plusw1,c
 27307                           
 27308                           ;stkvar	_grs @ sp[(-13)+0]
 27309  0150EC  0EF3               	movlw	-13
 27310  0150EE  6AE3               	clrf	plusw1,c
 27311  0150F0  0EF4               	movlw	-12
 27312  0150F2  6AE3               	clrf	plusw1,c
 27313  0150F4  0EF5               	movlw	-11
 27314  0150F6  6AE3               	clrf	plusw1,c
 27315  0150F8  0EF6               	movlw	-10
 27316  0150FA  6AE3               	clrf	plusw1,c
 27317                           
 27318                           ;stkvar	_aexp @ sp[(-13)+10]
 27319  0150FC  0EFD               	movlw	-3
 27320  0150FE  6AE3               	clrf	plusw1,c
 27321  015100  D050               	goto	l8631
 27322  015102                     l8613:
 27323                           
 27324                           ;stkvar	_aexp @ sp[(-13)+10]
 27325  015102  0EFD               	movlw	-3
 27326  015104  50E3               	movf	plusw1,w,c
 27327  015106  B4D8               	btfsc	status,2,c
 27328  015108  D020               	goto	l8623
 27329                           
 27330                           ;stkvar	_rem @ sp[(-13)+4]
 27331  01510A  90D8               	bcf	status,0,c
 27332  01510C  0EF7               	movlw	-9
 27333  01510E  36E3               	rlcf	plusw1,f,c
 27334  015110  0EF8               	movlw	-8
 27335  015112  36E3               	rlcf	plusw1,f,c
 27336  015114  0EF9               	movlw	-7
 27337  015116  36E3               	rlcf	plusw1,f,c
 27338  015118  0EFA               	movlw	-6
 27339  01511A  36E3               	rlcf	plusw1,f,c
 27340                           
 27341                           ;stkvar	_b @ sp[(-13)+-4]
 27342  01511C  90D8               	bcf	status,0,c
 27343  01511E  0EEF               	movlw	-17
 27344  015120  36E3               	rlcf	plusw1,f,c
 27345  015122  0EF0               	movlw	-16
 27346  015124  36E3               	rlcf	plusw1,f,c
 27347  015126  0EF1               	movlw	-15
 27348  015128  36E3               	rlcf	plusw1,f,c
 27349  01512A  0EF2               	movlw	-14
 27350  01512C  36E3               	rlcf	plusw1,f,c
 27351                           
 27352                           ;stkvar	_grs @ sp[(-13)+0]
 27353  01512E  0EF6               	movlw	-10
 27354  015130  AEE3               	btfss	plusw1,7,c
 27355  015132  D002               	goto	l8621
 27356                           
 27357                           ;stkvar	_b @ sp[(-13)+-4]
 27358  015134  0EEF               	movlw	-17
 27359  015136  80E3               	bsf	plusw1,0,c
 27360  015138                     l8621:
 27361                           
 27362                           ;stkvar	_grs @ sp[(-13)+0]
 27363  015138  90D8               	bcf	status,0,c
 27364  01513A  0EF3               	movlw	-13
 27365  01513C  36E3               	rlcf	plusw1,f,c
 27366  01513E  0EF4               	movlw	-12
 27367  015140  36E3               	rlcf	plusw1,f,c
 27368  015142  0EF5               	movlw	-11
 27369  015144  36E3               	rlcf	plusw1,f,c
 27370  015146  0EF6               	movlw	-10
 27371  015148  36E3               	rlcf	plusw1,f,c
 27372  01514A                     l8623:
 27373                           
 27374                           ;stkvar	_a @ sp[(-13)+-8]
 27375                           ;stkvar	_rem @ sp[(-13)+4]
 27376  01514A  50E1               	movf	fsr1l,w,c
 27377  01514C  0FF7               	addlw	-9
 27378  01514E  6ED9               	movwf	fsr2l,c
 27379  015150  50E2               	movf	fsr1h,w,c
 27380  015152  6EDA               	movwf	fsr2h,c
 27381  015154  0EFF               	movlw	255
 27382  015156  22DA               	addwfc	fsr2h,f,c
 27383  015158  0EEB               	movlw	-21
 27384  01515A  50E3               	movf	plusw1,w,c
 27385  01515C  5CDE               	subwf	postinc2,w,c
 27386  01515E  0EEC               	movlw	-20
 27387  015160  50E3               	movf	plusw1,w,c
 27388  015162  58DE               	subwfb	postinc2,w,c
 27389  015164  0EED               	movlw	-19
 27390  015166  50E3               	movf	plusw1,w,c
 27391  015168  58DE               	subwfb	postinc2,w,c
 27392  01516A  0EEE               	movlw	-18
 27393  01516C  50E3               	movf	plusw1,w,c
 27394  01516E  58DE               	subwfb	postinc2,w,c
 27395  015170  A0D8               	btfss	status,0,c
 27396  015172  D015               	goto	l8629
 27397                           
 27398                           ;stkvar	_grs @ sp[(-13)+0]
 27399  015174  0EF6               	movlw	-10
 27400  015176  8CE3               	bsf	plusw1,6,c
 27401                           
 27402                           ;stkvar	_a @ sp[(-13)+-8]
 27403                           ;stkvar	_rem @ sp[(-13)+4]
 27404  015178  50E1               	movf	fsr1l,w,c
 27405  01517A  0FF7               	addlw	-9
 27406  01517C  6ED9               	movwf	fsr2l,c
 27407  01517E  50E2               	movf	fsr1h,w,c
 27408  015180  6EDA               	movwf	fsr2h,c
 27409  015182  0EFF               	movlw	255
 27410  015184  22DA               	addwfc	fsr2h,f,c
 27411  015186  0EEB               	movlw	-21
 27412  015188  50E3               	movf	plusw1,w,c
 27413  01518A  5EDE               	subwf	postinc2,f,c
 27414  01518C  0EEC               	movlw	-20
 27415  01518E  50E3               	movf	plusw1,w,c
 27416  015190  5ADE               	subwfb	postinc2,f,c
 27417  015192  0EED               	movlw	-19
 27418  015194  50E3               	movf	plusw1,w,c
 27419  015196  5ADE               	subwfb	postinc2,f,c
 27420  015198  0EEE               	movlw	-18
 27421  01519A  50E3               	movf	plusw1,w,c
 27422  01519C  5ADE               	subwfb	postinc2,f,c
 27423  01519E                     l8629:
 27424                           
 27425                           ;stkvar	_aexp @ sp[(-13)+10]
 27426  01519E  0EFD               	movlw	-3
 27427  0151A0  2AE3               	incf	plusw1,f,c
 27428  0151A2                     l8631:
 27429                           
 27430                           ;stkvar	_aexp @ sp[(-13)+10]
 27431  0151A2  0EFD               	movlw	-3
 27432  0151A4  006F FF8C  F001    	movff	plusw1,btemp
 27433  0151AA  0E19               	movlw	25
 27434  0151AC  6401               	cpfsgt	btemp^0,c
 27435  0151AE  D7A9               	goto	l8613
 27436                           
 27437                           ;stkvar	_rem @ sp[(-13)+4]
 27438  0151B0  0EF7               	movlw	-9
 27439  0151B2  50E3               	movf	plusw1,w,c
 27440  0151B4  E10A               	bnz	u6880
 27441  0151B6  0EF8               	movlw	-8
 27442  0151B8  50E3               	movf	plusw1,w,c
 27443  0151BA  E107               	bnz	u6880
 27444  0151BC  0EF9               	movlw	-7
 27445  0151BE  50E3               	movf	plusw1,w,c
 27446  0151C0  E104               	bnz	u6880
 27447  0151C2  0EFA               	movlw	-6
 27448  0151C4  50E3               	movf	plusw1,w,c
 27449  0151C6  B4D8               	btfsc	status,2,c
 27450  0151C8  D024               	goto	l8647
 27451  0151CA                     u6880:
 27452                           
 27453                           ;stkvar	_grs @ sp[(-13)+0]
 27454  0151CA  0EF3               	movlw	-13
 27455  0151CC  80E3               	bsf	plusw1,0,c
 27456  0151CE  D021               	goto	l8647
 27457  0151D0                     l8637:
 27458                           
 27459                           ;stkvar	_b @ sp[(-13)+-4]
 27460  0151D0  90D8               	bcf	status,0,c
 27461  0151D2  0EEF               	movlw	-17
 27462  0151D4  36E3               	rlcf	plusw1,f,c
 27463  0151D6  0EF0               	movlw	-16
 27464  0151D8  36E3               	rlcf	plusw1,f,c
 27465  0151DA  0EF1               	movlw	-15
 27466  0151DC  36E3               	rlcf	plusw1,f,c
 27467  0151DE  0EF2               	movlw	-14
 27468  0151E0  36E3               	rlcf	plusw1,f,c
 27469                           
 27470                           ;stkvar	_grs @ sp[(-13)+0]
 27471  0151E2  0EF6               	movlw	-10
 27472  0151E4  AEE3               	btfss	plusw1,7,c
 27473  0151E6  D002               	goto	l8643
 27474                           
 27475                           ;stkvar	_b @ sp[(-13)+-4]
 27476  0151E8  0EEF               	movlw	-17
 27477  0151EA  80E3               	bsf	plusw1,0,c
 27478  0151EC                     l8643:
 27479                           
 27480                           ;stkvar	_grs @ sp[(-13)+0]
 27481  0151EC  90D8               	bcf	status,0,c
 27482  0151EE  0EF3               	movlw	-13
 27483  0151F0  36E3               	rlcf	plusw1,f,c
 27484  0151F2  0EF4               	movlw	-12
 27485  0151F4  36E3               	rlcf	plusw1,f,c
 27486  0151F6  0EF5               	movlw	-11
 27487  0151F8  36E3               	rlcf	plusw1,f,c
 27488  0151FA  0EF6               	movlw	-10
 27489  0151FC  36E3               	rlcf	plusw1,f,c
 27490                           
 27491                           ;stkvar	_new_exp @ sp[(-13)+8]
 27492  0151FE  50E1               	movf	fsr1l,w,c
 27493  015200  0FFB               	addlw	-5
 27494  015202  6ED9               	movwf	fsr2l,c
 27495  015204  50E2               	movf	fsr1h,w,c
 27496  015206  6EDA               	movwf	fsr2h,c
 27497  015208  0EFF               	movlw	255
 27498  01520A  22DA               	addwfc	fsr2h,f,c
 27499  01520C  06DE               	decf	postinc2,f,c
 27500  01520E  0E00               	movlw	0
 27501  015210  5ADD               	subwfb	postdec2,f,c
 27502  015212                     l8647:
 27503                           
 27504                           ;stkvar	_b @ sp[(-13)+-4]
 27505  015212  0EF1               	movlw	-15
 27506  015214  AEE3               	btfss	plusw1,7,c
 27507  015216  D7DC               	goto	l8637
 27508                           
 27509                           ;stkvar	_aexp @ sp[(-13)+10]
 27510  015218  0EFD               	movlw	-3
 27511  01521A  6AE3               	clrf	plusw1,c
 27512                           
 27513                           ;stkvar	_grs @ sp[(-13)+0]
 27514  01521C  0EF6               	movlw	-10
 27515  01521E  AEE3               	btfss	plusw1,7,c
 27516  015220  D020               	goto	l8661
 27517                           
 27518                           ;stkvar	_grs @ sp[(-13)+0]
 27519  015222  50E1               	movf	fsr1l,w,c
 27520  015224  0FF3               	addlw	-13
 27521  015226  6ED9               	movwf	fsr2l,c
 27522  015228  50E2               	movf	fsr1h,w,c
 27523  01522A  6EDA               	movwf	fsr2h,c
 27524  01522C  0EFF               	movlw	255
 27525  01522E  22DA               	addwfc	fsr2h,f,c
 27526  015230  0EFF               	movlw	255
 27527  015232  14DE               	andwf	postinc2,w,c
 27528  015234  6E09               	movwf	(btemp+8)^0,c
 27529  015236  0EFF               	movlw	255
 27530  015238  14DE               	andwf	postinc2,w,c
 27531  01523A  6E0A               	movwf	(btemp+9)^0,c
 27532  01523C  0EFF               	movlw	255
 27533  01523E  14DE               	andwf	postinc2,w,c
 27534  015240  6E0B               	movwf	(btemp+10)^0,c
 27535  015242  0E7F               	movlw	127
 27536  015244  14DE               	andwf	postinc2,w,c
 27537  015246  6E0C               	movwf	(btemp+11)^0,c
 27538  015248  5009               	movf	(btemp+8)^0,w,c
 27539  01524A  100A               	iorwf	(btemp+9)^0,w,c
 27540  01524C  100B               	iorwf	(btemp+10)^0,w,c
 27541  01524E  100C               	iorwf	(btemp+11)^0,w,c
 27542  015250  B4D8               	btfsc	status,2,c
 27543  015252  D004               	goto	l8657
 27544  015254                     u6920:
 27545                           
 27546                           ;stkvar	_aexp @ sp[(-13)+10]
 27547  015254  0EFD               	movlw	-3
 27548  015256  6AE3               	clrf	plusw1,c
 27549  015258  2AE3               	incf	plusw1,f,c
 27550  01525A  D003               	goto	l8661
 27551  01525C                     l8657:
 27552                           
 27553                           ;stkvar	_b @ sp[(-13)+-4]
 27554  01525C  0EEF               	movlw	-17
 27555  01525E  B0E3               	btfsc	plusw1,0,c
 27556  015260  D7F9               	goto	u6920
 27557  015262                     l8661:
 27558                           
 27559                           ;stkvar	_aexp @ sp[(-13)+10]
 27560  015262  0EFD               	movlw	-3
 27561  015264  50E3               	movf	plusw1,w,c
 27562  015266  B4D8               	btfsc	status,2,c
 27563  015268  D036               	goto	l8671
 27564                           
 27565                           ;stkvar	_b @ sp[(-13)+-4]
 27566  01526A  50E1               	movf	fsr1l,w,c
 27567  01526C  0FEF               	addlw	-17
 27568  01526E  6ED9               	movwf	fsr2l,c
 27569  015270  50E2               	movf	fsr1h,w,c
 27570  015272  6EDA               	movwf	fsr2h,c
 27571  015274  0EFF               	movlw	255
 27572  015276  22DA               	addwfc	fsr2h,f,c
 27573  015278  2ADE               	incf	postinc2,f,c
 27574  01527A  0E00               	movlw	0
 27575  01527C  22DE               	addwfc	postinc2,f,c
 27576  01527E  22DE               	addwfc	postinc2,f,c
 27577  015280  22DE               	addwfc	postinc2,f,c
 27578                           
 27579                           ;stkvar	_b @ sp[(-13)+-4]
 27580  015282  0EF2               	movlw	-14
 27581  015284  A0E3               	btfss	plusw1,0,c
 27582  015286  D027               	goto	l8671
 27583  015288  0E01               	movlw	1
 27584  01528A  6E0C               	movwf	(btemp+11)^0,c
 27585                           
 27586                           ;stkvar	_b @ sp[(-13)+-4]
 27587  01528C  50E1               	movf	fsr1l,w,c
 27588  01528E  0FEF               	addlw	-17
 27589  015290  6ED9               	movwf	fsr2l,c
 27590  015292  50E2               	movf	fsr1h,w,c
 27591  015294  6EDA               	movwf	fsr2h,c
 27592  015296  0EFF               	movlw	255
 27593  015298  22DA               	addwfc	fsr2h,f,c
 27594  01529A  280C               	incf	(btemp+11)^0,w,c
 27595  01529C  52DE               	movf	postinc2,f,c
 27596  01529E  D008               	goto	u6960
 27597  0152A0                     u6965:
 27598  0152A0  52DE               	movf	postinc2,f,c
 27599  0152A2  90D8               	bcf	status,0,c
 27600  0152A4  BEDC               	btfsc	preinc2,7,c
 27601  0152A6  80D8               	bsf	status,0,c
 27602  0152A8  32DD               	rrcf	postdec2,f,c
 27603  0152AA  32DD               	rrcf	postdec2,f,c
 27604  0152AC  32DD               	rrcf	postdec2,f,c
 27605  0152AE  32DE               	rrcf	postinc2,f,c
 27606  0152B0                     u6960:
 27607  0152B0  2EE8               	decfsz	wreg,f,c
 27608  0152B2  D7F6               	goto	u6965
 27609                           
 27610                           ;stkvar	_new_exp @ sp[(-13)+8]
 27611  0152B4  0EFB               	movlw	-5
 27612  0152B6  50E3               	movf	plusw1,w,c
 27613  0152B8  0F01               	addlw	1
 27614  0152BA  6E01               	movwf	btemp^0,c
 27615  0152BC  0EFB               	movlw	-5
 27616  0152BE  0060  F007  FFE3   	movff	btemp,plusw1
 27617  0152C4  6A01               	clrf	btemp^0,c
 27618  0152C6  0EFC               	movlw	-4
 27619  0152C8  50E3               	movf	plusw1,w,c
 27620  0152CA  2001               	addwfc	btemp^0,w,c
 27621  0152CC  6E01               	movwf	btemp^0,c
 27622  0152CE  0EFC               	movlw	-4
 27623  0152D0  0060  F007  FFE3   	movff	btemp,plusw1
 27624  0152D6                     l8671:
 27625                           
 27626                           ;stkvar	_new_exp @ sp[(-13)+8]
 27627  0152D6  0EFC               	movlw	-4
 27628  0152D8  BEE3               	btfsc	plusw1,7,c
 27629  0152DA  D01B               	goto	l8677
 27630  0152DC  0EFC               	movlw	-4
 27631  0152DE  50E3               	movf	plusw1,w,c
 27632  0152E0  E104               	bnz	u6970
 27633  0152E2  0EFB               	movlw	-5
 27634  0152E4  28E3               	incf	plusw1,w,c
 27635  0152E6  A0D8               	btfss	status,0,c
 27636  0152E8  D014               	goto	l8677
 27637  0152EA                     u6970:
 27638  0152EA  0EFF               	movlw	255
 27639  0152EC  6E0B               	movwf	(btemp+10)^0,c
 27640  0152EE  0E00               	movlw	0
 27641  0152F0  6E0C               	movwf	(btemp+11)^0,c
 27642                           
 27643                           ;stkvar	_new_exp @ sp[(-13)+8]
 27644  0152F2  0EFB               	movlw	-5
 27645  0152F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27646  0152FA  0EFC               	movlw	-4
 27647  0152FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27648                           
 27649                           ;stkvar	_b @ sp[(-13)+-4]
 27650  015302  0EEF               	movlw	-17
 27651  015304  6AE3               	clrf	plusw1,c
 27652  015306  0EF0               	movlw	-16
 27653  015308  6AE3               	clrf	plusw1,c
 27654  01530A  0EF1               	movlw	-15
 27655  01530C  6AE3               	clrf	plusw1,c
 27656  01530E  0EF2               	movlw	-14
 27657  015310  6AE3               	clrf	plusw1,c
 27658  015312                     l8677:
 27659                           
 27660                           ;stkvar	_new_exp @ sp[(-13)+8]
 27661  015312  0EFC               	movlw	-4
 27662  015314  BEE3               	btfsc	plusw1,7,c
 27663  015316  D007               	goto	u6980
 27664  015318  0EFC               	movlw	-4
 27665  01531A  50E3               	movf	plusw1,w,c
 27666  01531C  E112               	bnz	l8683
 27667  01531E  0EFB               	movlw	-5
 27668  015320  04E3               	decf	plusw1,w,c
 27669  015322  B0D8               	btfsc	status,0,c
 27670  015324  D00E               	goto	l8683
 27671  015326                     u6980:
 27672                           
 27673                           ;stkvar	_new_exp @ sp[(-13)+8]
 27674  015326  0EFB               	movlw	-5
 27675  015328  6AE3               	clrf	plusw1,c
 27676  01532A  0EFC               	movlw	-4
 27677  01532C  6AE3               	clrf	plusw1,c
 27678                           
 27679                           ;stkvar	_b @ sp[(-13)+-4]
 27680  01532E  0EEF               	movlw	-17
 27681  015330  6AE3               	clrf	plusw1,c
 27682  015332  0EF0               	movlw	-16
 27683  015334  6AE3               	clrf	plusw1,c
 27684  015336  0EF1               	movlw	-15
 27685  015338  6AE3               	clrf	plusw1,c
 27686  01533A  0EF2               	movlw	-14
 27687  01533C  6AE3               	clrf	plusw1,c
 27688                           
 27689                           ;stkvar	_sign @ sp[(-13)+12]
 27690  01533E  0EFF               	movlw	-1
 27691  015340  6AE3               	clrf	plusw1,c
 27692  015342                     l8683:
 27693                           
 27694                           ;stkvar	_new_exp @ sp[(-13)+8]
 27695                           ;stkvar	_bexp @ sp[(-13)+11]
 27696  015342  0EFB               	movlw	-5
 27697  015344  006F FF8C  F001    	movff	plusw1,btemp
 27698  01534A  0EFE               	movlw	-2
 27699  01534C  0060  F007  FFE3   	movff	btemp,plusw1
 27700                           
 27701                           ;stkvar	_bexp @ sp[(-13)+11]
 27702  015352  0EFE               	movlw	-2
 27703  015354  A0E3               	btfss	plusw1,0,c
 27704  015356  D009               	goto	l8689
 27705                           
 27706                           ;stkvar	_b @ sp[(-13)+-4]
 27707  015358  0EF1               	movlw	241
 27708  01535A  24E1               	addwf	fsr1l,w,c
 27709  01535C  6ED9               	movwf	fsr2l,c
 27710  01535E  0EFF               	movlw	255
 27711  015360  20E2               	addwfc	fsr1h,w,c
 27712  015362  6EDA               	movwf	fsr2h,c
 27713  015364  0E00               	movlw	0
 27714  015366  8EDB               	bsf	plusw2,7,c
 27715  015368  D008               	goto	l8691
 27716  01536A                     l8689:
 27717                           
 27718                           ;stkvar	_b @ sp[(-13)+-4]
 27719  01536A  0EF1               	movlw	241
 27720  01536C  24E1               	addwf	fsr1l,w,c
 27721  01536E  6ED9               	movwf	fsr2l,c
 27722  015370  0EFF               	movlw	255
 27723  015372  20E2               	addwfc	fsr1h,w,c
 27724  015374  6EDA               	movwf	fsr2h,c
 27725  015376  0E7F               	movlw	127
 27726  015378  16DF               	andwf	indf2,f,c
 27727  01537A                     l8691:
 27728                           
 27729                           ;stkvar	_b @ sp[(-13)+-4]
 27730  01537A  0EF2               	movlw	242
 27731  01537C  24E1               	addwf	fsr1l,w,c
 27732  01537E  6ED9               	movwf	fsr2l,c
 27733  015380  0EFF               	movlw	255
 27734  015382  20E2               	addwfc	fsr1h,w,c
 27735  015384  6EDA               	movwf	fsr2h,c
 27736                           
 27737                           ;stkvar	_bexp @ sp[(-13)+11]
 27738  015386  0EFE               	movlw	-2
 27739  015388  006F FF8C  F00C    	movff	plusw1,btemp+11
 27740  01538E  90D8               	bcf	status,0,c
 27741  015390  300C               	rrcf	(btemp+11)^0,w,c
 27742  015392  6EDF               	movwf	indf2,c
 27743  015394  D644               	goto	l8589
 27744  015396                     l3100:
 27745                           
 27746                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27747  015396  0EEB               	movlw	235
 27748  015398  26E1               	addwf	fsr1l,f,c
 27749  01539A  0EFF               	movlw	255
 27750  01539C  22E2               	addwfc	fsr1h,f,c
 27751  01539E  0012               	return		;funcret
 27752  0153A0                     __end_of___fldiv:
 27753                           	opt callstack 0
 27754                           
 27755 ;; *************** function ___flge *****************
 27756 ;; Defined at:
 27757 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 27758 ;; Parameters:    Size  Location     Type
 27759 ;;  ff1             4  [STACK] unsigned char 
 27760 ;;  ff2             4  [STACK] unsigned char 
 27761 ;; Auto vars:     Size  Location     Type
 27762 ;;		None
 27763 ;; Return value:  Size  Location     Type
 27764 ;;		None               void
 27765 ;; Registers used:
 27766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27767 ;; Tracked objects:
 27768 ;;		On entry : 0/0
 27769 ;;		On exit  : 0/0
 27770 ;;		Unchanged: 0/0
 27771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27776 ;;Total ram usage:        0 bytes
 27777 ;; Hardware stack levels used:    1
 27778 ;; Hardware stack levels required when called:   15
 27779 ;; This function calls:
 27780 ;;		Nothing
 27781 ;; This function is called by:
 27782 ;;		_main
 27783 ;;		_convert_dac_raw
 27784 ;;		_calc_ror_data
 27785 ;;		_check_day_time
 27786 ;;		_calc_bsoc
 27787 ;;		_efgtoa
 27788 ;; This function uses a reentrant model
 27789 ;;
 27790                           
 27791                           	psect	text109
 27792  0195E0                     __ptext109:
 27793                           	opt callstack 0
 27794  0195E0                     ___flge:
 27795                           	opt callstack 0
 27796                           
 27797                           ;stkvar	_ff1 @ sp[(0)+-4]
 27798                           
 27799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27800                           ;incstack = 0
 27801 ;; hardware stack exceeded
 27802  0195E0  50E1               	movf	fsr1l,w,c
 27803  0195E2  0FFC               	addlw	-4
 27804  0195E4  6ED9               	movwf	fsr2l,c
 27805  0195E6  50E2               	movf	fsr1h,w,c
 27806  0195E8  6EDA               	movwf	fsr2h,c
 27807  0195EA  0EFF               	movlw	255
 27808  0195EC  22DA               	addwfc	fsr2h,f,c
 27809  0195EE  0E00               	movlw	0
 27810  0195F0  14DE               	andwf	postinc2,w,c
 27811  0195F2  6E09               	movwf	(btemp+8)^0,c
 27812  0195F4  0E00               	movlw	0
 27813  0195F6  14DE               	andwf	postinc2,w,c
 27814  0195F8  6E0A               	movwf	(btemp+9)^0,c
 27815  0195FA  0E80               	movlw	128
 27816  0195FC  14DE               	andwf	postinc2,w,c
 27817  0195FE  6E0B               	movwf	(btemp+10)^0,c
 27818  019600  0E7F               	movlw	127
 27819  019602  14DE               	andwf	postinc2,w,c
 27820  019604  6E0C               	movwf	(btemp+11)^0,c
 27821  019606  5009               	movf	(btemp+8)^0,w,c
 27822  019608  100A               	iorwf	(btemp+9)^0,w,c
 27823  01960A  100B               	iorwf	(btemp+10)^0,w,c
 27824  01960C  100C               	iorwf	(btemp+11)^0,w,c
 27825  01960E  A4D8               	btfss	status,2,c
 27826  019610  D008               	goto	l8965
 27827                           
 27828                           ;stkvar	_ff1 @ sp[(0)+-4]
 27829  019612  0EFC               	movlw	-4
 27830  019614  6AE3               	clrf	plusw1,c
 27831  019616  0EFD               	movlw	-3
 27832  019618  6AE3               	clrf	plusw1,c
 27833  01961A  0EFE               	movlw	-2
 27834  01961C  6AE3               	clrf	plusw1,c
 27835  01961E  0EFF               	movlw	-1
 27836  019620  6AE3               	clrf	plusw1,c
 27837  019622                     l8965:
 27838                           
 27839                           ;stkvar	_ff2 @ sp[(0)+-8]
 27840  019622  50E1               	movf	fsr1l,w,c
 27841  019624  0FF8               	addlw	-8
 27842  019626  6ED9               	movwf	fsr2l,c
 27843  019628  50E2               	movf	fsr1h,w,c
 27844  01962A  6EDA               	movwf	fsr2h,c
 27845  01962C  0EFF               	movlw	255
 27846  01962E  22DA               	addwfc	fsr2h,f,c
 27847  019630  0E00               	movlw	0
 27848  019632  14DE               	andwf	postinc2,w,c
 27849  019634  6E09               	movwf	(btemp+8)^0,c
 27850  019636  0E00               	movlw	0
 27851  019638  14DE               	andwf	postinc2,w,c
 27852  01963A  6E0A               	movwf	(btemp+9)^0,c
 27853  01963C  0E80               	movlw	128
 27854  01963E  14DE               	andwf	postinc2,w,c
 27855  019640  6E0B               	movwf	(btemp+10)^0,c
 27856  019642  0E7F               	movlw	127
 27857  019644  14DE               	andwf	postinc2,w,c
 27858  019646  6E0C               	movwf	(btemp+11)^0,c
 27859  019648  5009               	movf	(btemp+8)^0,w,c
 27860  01964A  100A               	iorwf	(btemp+9)^0,w,c
 27861  01964C  100B               	iorwf	(btemp+10)^0,w,c
 27862  01964E  100C               	iorwf	(btemp+11)^0,w,c
 27863  019650  A4D8               	btfss	status,2,c
 27864  019652  D008               	goto	l2781
 27865                           
 27866                           ;stkvar	_ff2 @ sp[(0)+-8]
 27867  019654  0EF8               	movlw	-8
 27868  019656  6AE3               	clrf	plusw1,c
 27869  019658  0EF9               	movlw	-7
 27870  01965A  6AE3               	clrf	plusw1,c
 27871  01965C  0EFA               	movlw	-6
 27872  01965E  6AE3               	clrf	plusw1,c
 27873  019660  0EFB               	movlw	-5
 27874  019662  6AE3               	clrf	plusw1,c
 27875  019664                     l2781:
 27876                           
 27877                           ;stkvar	_ff1 @ sp[(0)+-4]
 27878  019664  0EFF               	movlw	-1
 27879  019666  AEE3               	btfss	plusw1,7,c
 27880  019668  D024               	goto	l8971
 27881                           
 27882                           ;stkvar	_ff1 @ sp[(0)+-4]
 27883  01966A  0E00               	movlw	0
 27884  01966C  6E09               	movwf	(btemp+8)^0,c
 27885  01966E  0E00               	movlw	0
 27886  019670  6E0A               	movwf	(btemp+9)^0,c
 27887  019672  0E00               	movlw	0
 27888  019674  6E0B               	movwf	(btemp+10)^0,c
 27889  019676  0E80               	movlw	128
 27890  019678  6E0C               	movwf	(btemp+11)^0,c
 27891  01967A  0EFC               	movlw	-4
 27892  01967C  50E3               	movf	plusw1,w,c
 27893  01967E  5E09               	subwf	(btemp+8)^0,f,c
 27894  019680  0EFD               	movlw	-3
 27895  019682  50E3               	movf	plusw1,w,c
 27896  019684  5A0A               	subwfb	(btemp+9)^0,f,c
 27897  019686  0EFE               	movlw	-2
 27898  019688  50E3               	movf	plusw1,w,c
 27899  01968A  5A0B               	subwfb	(btemp+10)^0,f,c
 27900  01968C  0EFF               	movlw	-1
 27901  01968E  50E3               	movf	plusw1,w,c
 27902  019690  5A0C               	subwfb	(btemp+11)^0,f,c
 27903                           
 27904                           ;stkvar	_ff1 @ sp[(0)+-4]
 27905  019692  0EFC               	movlw	-4
 27906  019694  0060  F027  FFE3   	movff	btemp+8,plusw1
 27907  01969A  0EFD               	movlw	-3
 27908  01969C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27909  0196A2  0EFE               	movlw	-2
 27910  0196A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27911  0196AA  0EFF               	movlw	-1
 27912  0196AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27913  0196B2                     l8971:
 27914                           
 27915                           ;stkvar	_ff2 @ sp[(0)+-8]
 27916  0196B2  0EFB               	movlw	-5
 27917  0196B4  AEE3               	btfss	plusw1,7,c
 27918  0196B6  D024               	goto	l8975
 27919                           
 27920                           ;stkvar	_ff2 @ sp[(0)+-8]
 27921  0196B8  0E00               	movlw	0
 27922  0196BA  6E09               	movwf	(btemp+8)^0,c
 27923  0196BC  0E00               	movlw	0
 27924  0196BE  6E0A               	movwf	(btemp+9)^0,c
 27925  0196C0  0E00               	movlw	0
 27926  0196C2  6E0B               	movwf	(btemp+10)^0,c
 27927  0196C4  0E80               	movlw	128
 27928  0196C6  6E0C               	movwf	(btemp+11)^0,c
 27929  0196C8  0EF8               	movlw	-8
 27930  0196CA  50E3               	movf	plusw1,w,c
 27931  0196CC  5E09               	subwf	(btemp+8)^0,f,c
 27932  0196CE  0EF9               	movlw	-7
 27933  0196D0  50E3               	movf	plusw1,w,c
 27934  0196D2  5A0A               	subwfb	(btemp+9)^0,f,c
 27935  0196D4  0EFA               	movlw	-6
 27936  0196D6  50E3               	movf	plusw1,w,c
 27937  0196D8  5A0B               	subwfb	(btemp+10)^0,f,c
 27938  0196DA  0EFB               	movlw	-5
 27939  0196DC  50E3               	movf	plusw1,w,c
 27940  0196DE  5A0C               	subwfb	(btemp+11)^0,f,c
 27941                           
 27942                           ;stkvar	_ff2 @ sp[(0)+-8]
 27943  0196E0  0EF8               	movlw	-8
 27944  0196E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27945  0196E8  0EF9               	movlw	-7
 27946  0196EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27947  0196F0  0EFA               	movlw	-6
 27948  0196F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27949  0196F8  0EFB               	movlw	-5
 27950  0196FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27951  019700                     l8975:
 27952                           
 27953                           ;stkvar	_ff1 @ sp[(0)+-4]
 27954  019700  0EFF               	movlw	-1
 27955  019702  7EE3               	btg	plusw1,7,c
 27956                           
 27957                           ;stkvar	_ff2 @ sp[(0)+-8]
 27958  019704  0EFB               	movlw	-5
 27959  019706  7EE3               	btg	plusw1,7,c
 27960                           
 27961                           ;stkvar	_ff2 @ sp[(0)+-8]
 27962                           ;stkvar	_ff1 @ sp[(0)+-4]
 27963  019708  50E1               	movf	fsr1l,w,c
 27964  01970A  0FFC               	addlw	-4
 27965  01970C  6ED9               	movwf	fsr2l,c
 27966  01970E  50E2               	movf	fsr1h,w,c
 27967  019710  6EDA               	movwf	fsr2h,c
 27968  019712  0EFF               	movlw	255
 27969  019714  22DA               	addwfc	fsr2h,f,c
 27970  019716  0EF8               	movlw	-8
 27971  019718  50E3               	movf	plusw1,w,c
 27972  01971A  5CDE               	subwf	postinc2,w,c
 27973  01971C  0EF9               	movlw	-7
 27974  01971E  50E3               	movf	plusw1,w,c
 27975  019720  58DE               	subwfb	postinc2,w,c
 27976  019722  0EFA               	movlw	-6
 27977  019724  50E3               	movf	plusw1,w,c
 27978  019726  58DE               	subwfb	postinc2,w,c
 27979  019728  0EFB               	movlw	-5
 27980  01972A  50E3               	movf	plusw1,w,c
 27981  01972C  58DE               	subwfb	postinc2,w,c
 27982  01972E  B0D8               	btfsc	status,0,c
 27983  019730  D002               	goto	l8983
 27984  019732  9001               	bcf	btemp& (0+255),0,c
 27985  019734  D001               	goto	l2788
 27986  019736                     l8983:
 27987  019736  8001               	bsf	btemp& (0+255),0,c
 27988  019738                     l2788:
 27989                           
 27990                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 27991  019738  0EF8               	movlw	248
 27992  01973A  26E1               	addwf	fsr1l,f,c
 27993  01973C  0EFF               	movlw	255
 27994  01973E  22E2               	addwfc	fsr1h,f,c
 27995  019740  0012               	return		;funcret
 27996  019742                     __end_of___flge:
 27997                           	opt callstack 0
 27998                           
 27999 ;; *************** function _calc_model_data *****************
 28000 ;; Defined at:
 28001 ;;		line 67 in file "mbmc.c"
 28002 ;; Parameters:    Size  Location     Type
 28003 ;;		None
 28004 ;; Auto vars:     Size  Location     Type
 28005 ;;		None
 28006 ;; Return value:  Size  Location     Type
 28007 ;;                  1  [STACK] void 
 28008 ;; Registers used:
 28009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28010 ;; Tracked objects:
 28011 ;;		On entry : 0/1
 28012 ;;		On exit  : 3F/39
 28013 ;;		Unchanged: 0/0
 28014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28019 ;;Total ram usage:        0 bytes
 28020 ;; Hardware stack levels used:    1
 28021 ;; Hardware stack levels required when called:   18
 28022 ;; This function calls:
 28023 ;;		___fladd
 28024 ;;		___flmul
 28025 ;;		___flsub
 28026 ;;		_lp_filter
 28027 ;;		_start_bsoc
 28028 ;;		_stop_bsoc
 28029 ;; This function is called by:
 28030 ;;		_main
 28031 ;; This function uses a reentrant model
 28032 ;;
 28033                           
 28034                           	psect	text110
 28035  015CDC                     __ptext110:
 28036                           	opt callstack 0
 28037  015CDC                     _calc_model_data:
 28038                           	opt callstack 12
 28039                           
 28040                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 28041                           
 28042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28043                           ;incstack = 0
 28044  015CDC  ECC6  F0E5         	call	_stop_bsoc	;wreg free
 28045                           
 28046                           ; BSR set to: 57
 28047                           ;mbmc.c: 72:  if (!V.calib) {
 28048  015CE0  0101               	movlb	1	; () banked
 28049  015CE2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 28050  015CE4  A4D8               	btfss	status,2,c
 28051  015CE6  D219               	goto	l11593
 28052                           
 28053                           ; BSR set to: 1
 28054                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 28055  015CE8  EE21  F2FF         	lfsr	2,_C
 28056  015CEC  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 28057  015CF2  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 28058  015CF8  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 28059  015CFE  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 28060                           
 28061                           ; BSR set to: 1
 28062                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 28063  015D04  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 28064  015D0A  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 28065  015D10  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 28066  015D16  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 28067  015D1C  EE21  F343         	lfsr	2,_C+68	;volatile
 28068  015D20  006F FF7B FFE6     	movff	postinc2,postinc1
 28069  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 28070  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 28071  015D32  006F FF7B FFE6     	movff	postinc2,postinc1
 28072  015D38  ECC4  F0DF         	call	___flsub	;wreg free
 28073  015D3C  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 28074  015D42  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 28075  015D48  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 28076  015D4E  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 28077                           
 28078                           ;mbmc.c: 75:   bcror = C.c_bat;
 28079  015D54  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 28080  015D58  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 28081  015D5C  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 28082  015D60  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 28083                           
 28084                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 28085  015D64  EE21  F303         	lfsr	2,_C+4	;volatile
 28086  015D68  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 28087  015D6E  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 28088  015D74  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 28089  015D7A  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 28090                           
 28091                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 28092  015D80  EE21  F30F         	lfsr	2,_C+16	;volatile
 28093  015D84  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 28094  015D8A  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 28095  015D90  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 28096  015D96  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 28097                           
 28098                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 28099  015D9C  EE21  F333         	lfsr	2,_C+52	;volatile
 28100  015DA0  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 28101  015DA6  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 28102  015DAC  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 28103  015DB2  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 28104                           
 28105                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 28106  015DB8  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 28107  015DBE  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 28108  015DC4  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 28109  015DCA  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 28110  015DD0  EE21  F353         	lfsr	2,_C+84	;volatile
 28111  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 28112  015DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 28113  015DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 28114  015DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 28115  015DEC  ECC4  F0DF         	call	___flsub	;wreg free
 28116  015DF0  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 28117  015DF6  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 28118  015DFC  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 28119  015E02  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 28120                           
 28121                           ;mbmc.c: 80:   bvror = C.v_bat;
 28122  015E08  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 28123  015E0C  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 28124  015E10  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 28125  015E14  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 28126                           
 28127                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 28128  015E18  EE21  F313         	lfsr	2,_C+20	;volatile
 28129  015E1C  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 28130  015E22  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 28131  015E28  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 28132  015E2E  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 28133                           
 28134                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 28135  015E34  EE21  F307         	lfsr	2,_C+8	;volatile
 28136  015E38  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 28137  015E3E  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 28138  015E44  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 28139  015E4A  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 28140                           
 28141                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 28142  015E50  EE21  F32F         	lfsr	2,_C+48	;volatile
 28143  015E54  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 28144  015E5A  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 28145  015E60  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 28146  015E66  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 28147                           
 28148                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 28149  015E6C  0E01               	movlw	1
 28150  015E6E  6EE6               	movwf	postinc1,c
 28151  015E70  0E10               	movlw	16
 28152  015E72  6EE6               	movwf	postinc1,c
 28153  015E74  EE21  F2FF         	lfsr	2,_C
 28154  015E78  006F FF7B FFE6     	movff	postinc2,postinc1
 28155  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 28156  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 28157  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28158  015E90  EE21  F303         	lfsr	2,_C+4	;volatile
 28159  015E94  006F FF7B FFE6     	movff	postinc2,postinc1
 28160  015E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 28161  015EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 28162  015EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 28163  015EAC  ECC4  F0DF         	call	___flsub	;wreg free
 28164  015EB0  0060  F007  FFE6   	movff	btemp,postinc1
 28165  015EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28166  015EBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28167  015EC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28168  015EC8  EC3B  F0C6         	call	_lp_filter	;wreg free
 28169  015ECC  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 28170  015ED2  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 28171  015ED8  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 28172  015EDE  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 28173                           
 28174                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 28175  015EE4  0E01               	movlw	1
 28176  015EE6  6EE6               	movwf	postinc1,c
 28177  015EE8  0E11               	movlw	17
 28178  015EEA  6EE6               	movwf	postinc1,c
 28179  015EEC  EE21  F353         	lfsr	2,_C+84	;volatile
 28180  015EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 28181  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 28182  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 28183  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 28184  015F08  EE21  F33F         	lfsr	2,_C+64	;volatile
 28185  015F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 28186  015F12  006F FF7B FFE6     	movff	postinc2,postinc1
 28187  015F18  006F FF7B FFE6     	movff	postinc2,postinc1
 28188  015F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 28189  015F24  EC20  F09F         	call	___flmul	;wreg free
 28190  015F28  0060  F007  FFE6   	movff	btemp,postinc1
 28191  015F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28192  015F34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28193  015F3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28194  015F40  EC3B  F0C6         	call	_lp_filter	;wreg free
 28195  015F44  0060  F004  F773   	movff	btemp,_C+116	;volatile
 28196  015F4A  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 28197  015F50  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 28198  015F56  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 28199                           
 28200                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 28201  015F5C  0E01               	movlw	1
 28202  015F5E  6EE6               	movwf	postinc1,c
 28203  015F60  0E12               	movlw	18
 28204  015F62  6EE6               	movwf	postinc1,c
 28205  015F64  EE21  F34F         	lfsr	2,_C+80	;volatile
 28206  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 28207  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 28208  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 28209  015F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 28210  015F80  EE21  F347         	lfsr	2,_C+72	;volatile
 28211  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 28212  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28213  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 28214  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 28215  015F9C  EC20  F09F         	call	___flmul	;wreg free
 28216  015FA0  0060  F007  FFE6   	movff	btemp,postinc1
 28217  015FA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28218  015FAC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28219  015FB2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28220  015FB8  EC3B  F0C6         	call	_lp_filter	;wreg free
 28221  015FBC  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 28222  015FC2  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 28223  015FC8  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 28224  015FCE  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 28225                           
 28226                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 28227  015FD4  0E01               	movlw	1
 28228  015FD6  6EE6               	movwf	postinc1,c
 28229  015FD8  0E13               	movlw	19
 28230  015FDA  6EE6               	movwf	postinc1,c
 28231  015FDC  0E00               	movlw	0
 28232  015FDE  6EE6               	movwf	postinc1,c
 28233  015FE0  0E00               	movlw	0
 28234  015FE2  6EE6               	movwf	postinc1,c
 28235  015FE4  0E60               	movlw	96
 28236  015FE6  6EE6               	movwf	postinc1,c
 28237  015FE8  0EC1               	movlw	193
 28238  015FEA  6EE6               	movwf	postinc1,c
 28239  015FEC  EE21  F363         	lfsr	2,_C+100	;volatile
 28240  015FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 28241  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 28242  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 28243  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 28244  016008  EE21  F33F         	lfsr	2,_C+64	;volatile
 28245  01600C  006F FF7B FFE6     	movff	postinc2,postinc1
 28246  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 28247  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 28248  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 28249  016024  EC20  F09F         	call	___flmul	;wreg free
 28250  016028  0060  F007  FFE6   	movff	btemp,postinc1
 28251  01602E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28252  016034  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28253  01603A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28254  016040  EC35  F0A3         	call	___fladd	;wreg free
 28255  016044  0060  F007  FFE6   	movff	btemp,postinc1
 28256  01604A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28257  016050  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28258  016056  0060  F013  FFE6   	movff	btemp+3,postinc1
 28259  01605C  EC3B  F0C6         	call	_lp_filter	;wreg free
 28260  016060  0060  F004  F777   	movff	btemp,_C+120	;volatile
 28261  016066  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 28262  01606C  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 28263  016072  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 28264                           
 28265                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 28266  016078  0E01               	movlw	1
 28267  01607A  6EE6               	movwf	postinc1,c
 28268  01607C  0E14               	movlw	20
 28269  01607E  6EE6               	movwf	postinc1,c
 28270  016080  EE21  F353         	lfsr	2,_C+84	;volatile
 28271  016084  006F FF7B FFE6     	movff	postinc2,postinc1
 28272  01608A  006F FF7B FFE6     	movff	postinc2,postinc1
 28273  016090  006F FF7B FFE6     	movff	postinc2,postinc1
 28274  016096  006F FF7B FFE6     	movff	postinc2,postinc1
 28275  01609C  EE21  F343         	lfsr	2,_C+68	;volatile
 28276  0160A0  006F FF7B FFE6     	movff	postinc2,postinc1
 28277  0160A6  006F FF7B FFE6     	movff	postinc2,postinc1
 28278  0160AC  006F FF7B FFE6     	movff	postinc2,postinc1
 28279  0160B2  006F FF7B FFE6     	movff	postinc2,postinc1
 28280  0160B8  EC20  F09F         	call	___flmul	;wreg free
 28281  0160BC  0060  F007  FFE6   	movff	btemp,postinc1
 28282  0160C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28283  0160C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28284  0160CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28285  0160D4  EC3B  F0C6         	call	_lp_filter	;wreg free
 28286  0160D8  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 28287  0160DE  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 28288  0160E4  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 28289  0160EA  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 28290                           
 28291                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 28292  0160F0  EE21  F377         	lfsr	2,_C+120	;volatile
 28293  0160F4  0E03               	movlw	3
 28294  0160F6  AEDB               	btfss	plusw2,7,c
 28295  0160F8  D010               	goto	l11593
 28296                           
 28297                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 28298  0160FA  0E17               	movlw	23
 28299  0160FC  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 28300  016102  0EB7               	movlw	183
 28301  016104  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 28302  01610A  0ED1               	movlw	209
 28303  01610C  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 28304  016112  0E38               	movlw	56
 28305  016114  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 28306  01611A                     l11593:
 28307                           
 28308                           ;mbmc.c: 95:  start_bsoc();
 28309  01611A  EC55  F0E4         	call	_start_bsoc	;wreg free
 28310                           
 28311                           ; BSR set to: 57
 28312                           ;mbmc.c: 96:  C.update = 1;
 28313  01611E  0E01               	movlw	1
 28314  016120  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 28315                           
 28316                           ; BSR set to: 57
 28317                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28318  016126  0012               	return		;funcret
 28319  016128                     __end_of_calc_model_data:
 28320                           	opt callstack 0
 28321                           
 28322 ;; *************** function _stop_bsoc *****************
 28323 ;; Defined at:
 28324 ;;		line 130 in file "bsoc.c"
 28325 ;; Parameters:    Size  Location     Type
 28326 ;;		None
 28327 ;; Auto vars:     Size  Location     Type
 28328 ;;		None
 28329 ;; Return value:  Size  Location     Type
 28330 ;;                  1  [STACK] void 
 28331 ;; Registers used:
 28332 ;;		None
 28333 ;; Tracked objects:
 28334 ;;		On entry : 0/1
 28335 ;;		On exit  : 3F/39
 28336 ;;		Unchanged: 0/0
 28337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28342 ;;Total ram usage:        0 bytes
 28343 ;; Hardware stack levels used:    1
 28344 ;; Hardware stack levels required when called:   15
 28345 ;; This function calls:
 28346 ;;		Nothing
 28347 ;; This function is called by:
 28348 ;;		_calc_model_data
 28349 ;; This function uses a reentrant model
 28350 ;;
 28351                           
 28352                           	psect	text111
 28353  01CB8C                     __ptext111:
 28354                           	opt callstack 0
 28355  01CB8C                     _stop_bsoc:
 28356                           	opt callstack 14
 28357                           
 28358                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 28359                           
 28360                           ; BSR set to: 57
 28361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28362                           ;incstack = 0
 28363  01CB8C  0139               	movlb	57	; () banked
 28364  01CB8E  9D96               	bcf	150,6,b	;volatile
 28365                           
 28366                           ; BSR set to: 57
 28367                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 28368  01CB90  0012               	return		;funcret
 28369  01CB92                     __end_of_stop_bsoc:
 28370                           	opt callstack 0
 28371                           
 28372 ;; *************** function _start_bsoc *****************
 28373 ;; Defined at:
 28374 ;;		line 121 in file "bsoc.c"
 28375 ;; Parameters:    Size  Location     Type
 28376 ;;		None
 28377 ;; Auto vars:     Size  Location     Type
 28378 ;;		None
 28379 ;; Return value:  Size  Location     Type
 28380 ;;                  1  [STACK] void 
 28381 ;; Registers used:
 28382 ;;		wreg, status,2, status,0, btemp+11
 28383 ;; Tracked objects:
 28384 ;;		On entry : 0/1
 28385 ;;		On exit  : 3F/39
 28386 ;;		Unchanged: 0/0
 28387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28392 ;;Total ram usage:        0 bytes
 28393 ;; Hardware stack levels used:    1
 28394 ;; Hardware stack levels required when called:   15
 28395 ;; This function calls:
 28396 ;;		Nothing
 28397 ;; This function is called by:
 28398 ;;		_calc_model_data
 28399 ;; This function uses a reentrant model
 28400 ;;
 28401                           
 28402                           	psect	text112
 28403  01C8AA                     __ptext112:
 28404                           	opt callstack 0
 28405  01C8AA                     _start_bsoc:
 28406                           	opt callstack 14
 28407                           
 28408                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 28409                           
 28410                           ; BSR set to: 57
 28411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28412                           ;incstack = 0
 28413  01C8AA  0139               	movlb	57	; () banked
 28414  01C8AC  8D96               	bsf	150,6,b	;volatile
 28415                           
 28416                           ; BSR set to: 57
 28417  01C8AE  A4BE               	btfss	190,2,c	;volatile
 28418  01C8B0  D002               	goto	u10010
 28419  01C8B2  0E01               	movlw	1
 28420  01C8B4  D001               	goto	u10016
 28421  01C8B6                     u10010:
 28422  01C8B6  0E00               	movlw	0
 28423  01C8B8                     u10016:
 28424  01C8B8  0AFF               	xorlw	255
 28425  01C8BA  6E0C               	movwf	(btemp+11)^0,c
 28426  01C8BC  460C               	rlncf	(btemp+11)^0,f,c
 28427  01C8BE  460C               	rlncf	(btemp+11)^0,f,c
 28428  01C8C0  50BE               	movf	190,w,c	;volatile
 28429  01C8C2  180C               	xorwf	(btemp+11)^0,w,c
 28430  01C8C4  0BFB               	andlw	-5
 28431  01C8C6  180C               	xorwf	(btemp+11)^0,w,c
 28432  01C8C8  6EBE               	movwf	190,c	;volatile
 28433                           
 28434                           ; BSR set to: 57
 28435                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 28436  01C8CA  0012               	return		;funcret
 28437  01C8CC                     __end_of_start_bsoc:
 28438                           	opt callstack 0
 28439                           
 28440 ;; *************** function _lp_filter *****************
 28441 ;; Defined at:
 28442 ;;		line 29 in file "mbmc.c"
 28443 ;; Parameters:    Size  Location     Type
 28444 ;;  new             4  [STACK] const float 
 28445 ;;  bn              1  [STACK] const unsigned char 
 28446 ;;  slow            1  [STACK] const char 
 28447 ;; Auto vars:     Size  Location     Type
 28448 ;;  lp_speed        4  [STACK] float 
 28449 ;; Return value:  Size  Location     Type
 28450 ;;                  4  [STACK] float 
 28451 ;; Registers used:
 28452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28453 ;; Tracked objects:
 28454 ;;		On entry : 0/1
 28455 ;;		On exit  : 0/0
 28456 ;;		Unchanged: 0/0
 28457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28462 ;;Total ram usage:        0 bytes
 28463 ;; Hardware stack levels used:    1
 28464 ;; Hardware stack levels required when called:   17
 28465 ;; This function calls:
 28466 ;;		___fladd
 28467 ;;		___flmul
 28468 ;;		___flsub
 28469 ;; This function is called by:
 28470 ;;		_main
 28471 ;;		_convert_adc_data
 28472 ;;		_calc_model_data
 28473 ;; This function uses a reentrant model
 28474 ;;
 28475                           
 28476                           	psect	text113
 28477  018C76                     __ptext113:
 28478                           	opt callstack 0
 28479  018C76                     _lp_filter:
 28480                           	opt callstack 0
 28481                           
 28482                           ; BSR set to: 57
 28483                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28484  018C76  52E6               	movf	postinc1,f,c
 28485  018C78  52E6               	movf	postinc1,f,c
 28486  018C7A  52E6               	movf	postinc1,f,c
 28487  018C7C  52E6               	movf	postinc1,f,c
 28488                           
 28489                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 28490                           ;stkvar	_bn @ sp[(-4)+-5]
 28491                           
 28492                           ;incstack = 0
 28493  018C7E  0EF7               	movlw	-9
 28494  018C80  006F FF8C  F001    	movff	plusw1,btemp
 28495  018C86  0E14               	movlw	20
 28496  018C88  6401               	cpfsgt	btemp^0,c
 28497  018C8A  D011               	goto	l10799
 28498  018C8C                     u9840:
 28499                           
 28500                           ;mbmc.c: 35:   return new;
 28501                           ;stkvar	_new @ sp[(-4)+-4]
 28502  018C8C  0EF8               	movlw	-8
 28503  018C8E  006F FF8C  F001    	movff	plusw1,btemp
 28504  018C94  0EF9               	movlw	-7
 28505  018C96  006F FF8C  F002    	movff	plusw1,btemp+1
 28506  018C9C  0EFA               	movlw	-6
 28507  018C9E  006F FF8C  F003    	movff	plusw1,btemp+2
 28508  018CA4  0EFB               	movlw	-5
 28509  018CA6  006F FF8C  F004    	movff	plusw1,btemp+3
 28510  018CAC  D0BD               	goto	l1947
 28511  018CAE                     l10799:
 28512                           
 28513                           ;mbmc.c: 37:  if (slow == (-1)) {
 28514                           ;stkvar	_slow @ sp[(-4)+-6]
 28515  018CAE  0EF6               	movlw	-10
 28516  018CB0  28E3               	incf	plusw1,w,c
 28517  018CB2  A4D8               	btfss	status,2,c
 28518  018CB4  D012               	goto	l10807
 28519                           
 28520                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 28521                           ;stkvar	_bn @ sp[(-4)+-5]
 28522  018CB6  0EF7               	movlw	-9
 28523  018CB8  50E3               	movf	plusw1,w,c
 28524  018CBA  0D04               	mullw	4
 28525  018CBC  0E00               	movlw	low lp_filter@smooth
 28526  018CBE  24F3               	addwf	243,w,c
 28527  018CC0  6ED9               	movwf	fsr2l,c
 28528  018CC2  0E02               	movlw	high lp_filter@smooth
 28529  018CC4  20F4               	addwfc	prodh,w,c
 28530  018CC6  6EDA               	movwf	fsr2h,c
 28531  018CC8  0E00               	movlw	0
 28532  018CCA  6EDE               	movwf	postinc2,c
 28533  018CCC  0E00               	movlw	0
 28534  018CCE  6EDE               	movwf	postinc2,c
 28535  018CD0  0E00               	movlw	0
 28536  018CD2  6EDE               	movwf	postinc2,c
 28537  018CD4  0E00               	movlw	0
 28538  018CD6  6EDD               	movwf	postdec2,c
 28539  018CD8  D7D9               	goto	u9840
 28540  018CDA                     l10807:
 28541                           
 28542                           ;mbmc.c: 42:  if (slow) {
 28543                           ;stkvar	_slow @ sp[(-4)+-6]
 28544  018CDA  0EF6               	movlw	-10
 28545  018CDC  50E3               	movf	plusw1,w,c
 28546  018CDE  B4D8               	btfsc	status,2,c
 28547  018CE0  D006               	goto	l10811
 28548                           
 28549                           ;mbmc.c: 43:   lp_speed = 0.033;
 28550  018CE2  0E02               	movlw	2
 28551  018CE4  6E09               	movwf	(btemp+8)^0,c
 28552  018CE6  0E2B               	movlw	43
 28553  018CE8  6E0A               	movwf	(btemp+9)^0,c
 28554  018CEA  0E07               	movlw	7
 28555  018CEC  D005               	goto	L34
 28556  018CEE                     l10811:
 28557                           
 28558                           ;mbmc.c: 45:   lp_speed = 0.066;
 28559  018CEE  0E02               	movlw	2
 28560  018CF0  6E09               	movwf	(btemp+8)^0,c
 28561  018CF2  0E2B               	movlw	43
 28562  018CF4  6E0A               	movwf	(btemp+9)^0,c
 28563  018CF6  0E87               	movlw	135
 28564  018CF8                     L34:
 28565  018CF8  6E0B               	movwf	(btemp+10)^0,c
 28566  018CFA  0E3D               	movlw	61
 28567  018CFC  6E0C               	movwf	(btemp+11)^0,c
 28568                           
 28569                           ;stkvar	_lp_speed @ sp[(-4)+0]
 28570  018CFE  0EFC               	movlw	-4
 28571  018D00  0060  F027  FFE3   	movff	btemp+8,plusw1
 28572  018D06  0EFD               	movlw	-3
 28573  018D08  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28574  018D0E  0EFE               	movlw	-2
 28575  018D10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28576  018D16  0EFF               	movlw	-1
 28577  018D18  0060  F033  FFE3   	movff	btemp+11,plusw1
 28578                           
 28579                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 28580                           ;stkvar	_bn @ sp[(-4)+-5]
 28581  018D1E  0EF7               	movlw	-9
 28582  018D20  50E3               	movf	plusw1,w,c
 28583  018D22  0D04               	mullw	4
 28584  018D24  0E00               	movlw	low lp_filter@smooth
 28585  018D26  24F3               	addwf	243,w,c
 28586  018D28  6ED9               	movwf	fsr2l,c
 28587  018D2A  0E02               	movlw	high lp_filter@smooth
 28588  018D2C  20F4               	addwfc	prodh,w,c
 28589  018D2E  6EDA               	movwf	fsr2h,c
 28590  018D30  006F FF7B FFE6     	movff	postinc2,postinc1
 28591  018D36  006F FF7B FFE6     	movff	postinc2,postinc1
 28592  018D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 28593  018D42  006F FF7B FFE6     	movff	postinc2,postinc1
 28594                           
 28595                           ;stkvar	_lp_speed @ sp[(-8)+0]
 28596  018D48  0EF8               	movlw	-8
 28597  018D4A  006F FF8F FFE6     	movff	plusw1,postinc1
 28598  018D50  006F FF8F FFE6     	movff	plusw1,postinc1
 28599  018D56  006F FF8F FFE6     	movff	plusw1,postinc1
 28600  018D5C  006F FF8F FFE6     	movff	plusw1,postinc1
 28601                           
 28602                           ;stkvar	_bn @ sp[(-12)+-5]
 28603  018D62  0EEF               	movlw	-17
 28604  018D64  50E3               	movf	plusw1,w,c
 28605  018D66  0D04               	mullw	4
 28606  018D68  0E00               	movlw	low lp_filter@smooth
 28607  018D6A  24F3               	addwf	243,w,c
 28608  018D6C  6ED9               	movwf	fsr2l,c
 28609  018D6E  0E02               	movlw	high lp_filter@smooth
 28610  018D70  20F4               	addwfc	prodh,w,c
 28611  018D72  6EDA               	movwf	fsr2h,c
 28612  018D74  006F FF7B FFE6     	movff	postinc2,postinc1
 28613  018D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 28614  018D80  006F FF7B FFE6     	movff	postinc2,postinc1
 28615  018D86  006F FF7B FFE6     	movff	postinc2,postinc1
 28616                           
 28617                           ;stkvar	_new @ sp[(-16)+-4]
 28618  018D8C  0EEC               	movlw	-20
 28619  018D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 28620  018D94  006F FF8F FFE6     	movff	plusw1,postinc1
 28621  018D9A  006F FF8F FFE6     	movff	plusw1,postinc1
 28622  018DA0  006F FF8F FFE6     	movff	plusw1,postinc1
 28623  018DA6  ECC4  F0DF         	call	___flsub	;wreg free
 28624  018DAA  0060  F007  FFE6   	movff	btemp,postinc1
 28625  018DB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28626  018DB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28627  018DBC  0060  F013  FFE6   	movff	btemp+3,postinc1
 28628  018DC2  EC20  F09F         	call	___flmul	;wreg free
 28629  018DC6  0060  F007  FFE6   	movff	btemp,postinc1
 28630  018DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28631  018DD2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28632  018DD8  0060  F013  FFE6   	movff	btemp+3,postinc1
 28633  018DDE  EC35  F0A3         	call	___fladd	;wreg free
 28634                           
 28635                           ;stkvar	_bn @ sp[(-4)+-5]
 28636  018DE2  0EF7               	movlw	-9
 28637  018DE4  50E3               	movf	plusw1,w,c
 28638  018DE6  0D04               	mullw	4
 28639  018DE8  0E00               	movlw	low lp_filter@smooth
 28640  018DEA  24F3               	addwf	243,w,c
 28641  018DEC  6ED9               	movwf	fsr2l,c
 28642  018DEE  0E02               	movlw	high lp_filter@smooth
 28643  018DF0  20F4               	addwfc	prodh,w,c
 28644  018DF2  6EDA               	movwf	fsr2h,c
 28645  018DF4  0060  F007  FFDE   	movff	btemp,postinc2
 28646  018DFA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 28647  018E00  0060  F00F  FFDE   	movff	btemp+2,postinc2
 28648  018E06  0060  F013  FFDD   	movff	btemp+3,postdec2
 28649  018E0C  52DD               	movf	postdec2,f,c
 28650  018E0E  52DD               	movf	postdec2,f,c
 28651  018E10  006F FF78  F001    	movff	postinc2,btemp
 28652  018E16  006F FF78  F002    	movff	postinc2,btemp+1
 28653  018E1C  006F FF78  F003    	movff	postinc2,btemp+2
 28654  018E22  006F FF78  F004    	movff	postinc2,btemp+3
 28655  018E28                     l1947:
 28656                           
 28657                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 28658  018E28  0EF6               	movlw	246
 28659  018E2A  26E1               	addwf	fsr1l,f,c
 28660  018E2C  0EFF               	movlw	255
 28661  018E2E  22E2               	addwfc	fsr1h,f,c
 28662  018E30  0012               	return		;funcret
 28663  018E32                     __end_of_lp_filter:
 28664                           	opt callstack 0
 28665                           
 28666 ;; *************** function ___flsub *****************
 28667 ;; Defined at:
 28668 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28669 ;; Parameters:    Size  Location     Type
 28670 ;;  b               4  [STACK] float 
 28671 ;;  a               4  [STACK] float 
 28672 ;; Auto vars:     Size  Location     Type
 28673 ;;		None
 28674 ;; Return value:  Size  Location     Type
 28675 ;;                  4  [STACK] float 
 28676 ;; Registers used:
 28677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28678 ;; Tracked objects:
 28679 ;;		On entry : 0/0
 28680 ;;		On exit  : 0/0
 28681 ;;		Unchanged: 0/0
 28682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28687 ;;Total ram usage:        0 bytes
 28688 ;; Hardware stack levels used:    1
 28689 ;; Hardware stack levels required when called:   16
 28690 ;; This function calls:
 28691 ;;		___fladd
 28692 ;; This function is called by:
 28693 ;;		_conv_raw_result
 28694 ;;		_lp_filter
 28695 ;;		_calc_model_data
 28696 ;;		_calc_ror_data
 28697 ;;		_esr_check
 28698 ;;		_efgtoa
 28699 ;; This function uses a reentrant model
 28700 ;;
 28701                           
 28702                           	psect	text114
 28703  01BF88                     __ptext114:
 28704                           	opt callstack 0
 28705  01BF88                     ___flsub:
 28706                           	opt callstack 0
 28707                           
 28708                           ;stkvar	_a @ sp[(0)+-8]
 28709                           
 28710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28711                           ;incstack = 0
 28712 ;; hardware stack exceeded
 28713  01BF88  0EFB               	movlw	-5
 28714  01BF8A  7EE3               	btg	plusw1,7,c
 28715                           
 28716                           ;stkvar	_a @ sp[(0)+-8]
 28717  01BF8C  0EF8               	movlw	-8
 28718  01BF8E  006F FF8F FFE6     	movff	plusw1,postinc1
 28719  01BF94  006F FF8F FFE6     	movff	plusw1,postinc1
 28720  01BF9A  006F FF8F FFE6     	movff	plusw1,postinc1
 28721  01BFA0  006F FF8F FFE6     	movff	plusw1,postinc1
 28722                           
 28723                           ;stkvar	_b @ sp[(-4)+-4]
 28724  01BFA6  0EF8               	movlw	-8
 28725  01BFA8  006F FF8F FFE6     	movff	plusw1,postinc1
 28726  01BFAE  006F FF8F FFE6     	movff	plusw1,postinc1
 28727  01BFB4  006F FF8F FFE6     	movff	plusw1,postinc1
 28728  01BFBA  006F FF8F FFE6     	movff	plusw1,postinc1
 28729  01BFC0  EC35  F0A3         	call	___fladd	;wreg free
 28730                           
 28731                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28732  01BFC4  0EF8               	movlw	248
 28733  01BFC6  26E1               	addwf	fsr1l,f,c
 28734  01BFC8  0EFF               	movlw	255
 28735  01BFCA  22E2               	addwfc	fsr1h,f,c
 28736  01BFCC  0012               	return		;funcret
 28737  01BFCE                     __end_of___flsub:
 28738                           	opt callstack 0
 28739                           
 28740 ;; *************** function ___fladd *****************
 28741 ;; Defined at:
 28742 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28743 ;; Parameters:    Size  Location     Type
 28744 ;;  b               4  [STACK] float 
 28745 ;;  a               4  [STACK] float 
 28746 ;; Auto vars:     Size  Location     Type
 28747 ;;  grs             1  [STACK] unsigned char 
 28748 ;;  bexp            1  [STACK] unsigned char 
 28749 ;;  aexp            1  [STACK] unsigned char 
 28750 ;;  signs           1  [STACK] unsigned char 
 28751 ;; Return value:  Size  Location     Type
 28752 ;;                  4  [STACK] unsigned char 
 28753 ;; Registers used:
 28754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28755 ;; Tracked objects:
 28756 ;;		On entry : 0/0
 28757 ;;		On exit  : 0/0
 28758 ;;		Unchanged: 0/0
 28759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28764 ;;Total ram usage:        0 bytes
 28765 ;; Hardware stack levels used:    1
 28766 ;; Hardware stack levels required when called:   15
 28767 ;; This function calls:
 28768 ;;		Nothing
 28769 ;; This function is called by:
 28770 ;;		_main
 28771 ;;		_lp_filter
 28772 ;;		_calc_model_data
 28773 ;;		_efgtoa
 28774 ;;		___asfladd
 28775 ;;		___flsub
 28776 ;; This function uses a reentrant model
 28777 ;;
 28778                           
 28779                           	psect	text115
 28780  01466A                     __ptext115:
 28781                           	opt callstack 0
 28782  01466A                     ___fladd:
 28783                           	opt callstack 0
 28784                           
 28785                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28786  01466A  52E6               	movf	postinc1,f,c
 28787  01466C  52E6               	movf	postinc1,f,c
 28788  01466E  52E6               	movf	postinc1,f,c
 28789  014670  52E6               	movf	postinc1,f,c
 28790                           
 28791                           ;stkvar	_b @ sp[(-4)+-4]
 28792                           
 28793                           ;incstack = 0
 28794 ;; hardware stack exceeded
 28795  014672  0EFB               	movlw	251
 28796  014674  24E1               	addwf	fsr1l,w,c
 28797  014676  6ED9               	movwf	fsr2l,c
 28798  014678  0EFF               	movlw	255
 28799  01467A  20E2               	addwfc	fsr1h,w,c
 28800  01467C  6EDA               	movwf	fsr2h,c
 28801  01467E  50DF               	movf	indf2,w,c
 28802  014680  6E0C               	movwf	(btemp+11)^0,c
 28803  014682  0E80               	movlw	128
 28804  014684  160C               	andwf	(btemp+11)^0,f,c
 28805                           
 28806                           ;stkvar	_signs @ sp[(-4)+3]
 28807  014686  0EFF               	movlw	-1
 28808  014688  0060  F033  FFE3   	movff	btemp+11,plusw1
 28809                           
 28810                           ;stkvar	_b @ sp[(-4)+-4]
 28811  01468E  0EFB               	movlw	251
 28812  014690  24E1               	addwf	fsr1l,w,c
 28813  014692  6ED9               	movwf	fsr2l,c
 28814  014694  0EFF               	movlw	255
 28815  014696  20E2               	addwfc	fsr1h,w,c
 28816  014698  6EDA               	movwf	fsr2h,c
 28817  01469A  50DF               	movf	indf2,w,c
 28818  01469C  6E0C               	movwf	(btemp+11)^0,c
 28819  01469E  90D8               	bcf	status,0,c
 28820  0146A0  340C               	rlcf	(btemp+11)^0,w,c
 28821  0146A2  6E0B               	movwf	(btemp+10)^0,c
 28822                           
 28823                           ;stkvar	_bexp @ sp[(-4)+1]
 28824  0146A4  0EFD               	movlw	-3
 28825  0146A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28826                           
 28827                           ;stkvar	_b @ sp[(-4)+-4]
 28828  0146AC  0EFA               	movlw	250
 28829  0146AE  24E1               	addwf	fsr1l,w,c
 28830  0146B0  6ED9               	movwf	fsr2l,c
 28831  0146B2  0EFF               	movlw	255
 28832  0146B4  20E2               	addwfc	fsr1h,w,c
 28833  0146B6  6EDA               	movwf	fsr2h,c
 28834  0146B8  AEDF               	btfss	indf2,7,c
 28835  0146BA  D002               	goto	l8073
 28836                           
 28837                           ;stkvar	_bexp @ sp[(-4)+1]
 28838  0146BC  0EFD               	movlw	-3
 28839  0146BE  80E3               	bsf	plusw1,0,c
 28840  0146C0                     l8073:
 28841                           
 28842                           ;stkvar	_bexp @ sp[(-4)+1]
 28843  0146C0  0EFD               	movlw	-3
 28844  0146C2  50E3               	movf	plusw1,w,c
 28845  0146C4  B4D8               	btfsc	status,2,c
 28846  0146C6  D027               	goto	l8083
 28847                           
 28848                           ;stkvar	_bexp @ sp[(-4)+1]
 28849  0146C8  0EFD               	movlw	-3
 28850  0146CA  28E3               	incf	plusw1,w,c
 28851  0146CC  A4D8               	btfss	status,2,c
 28852  0146CE  D018               	goto	l8079
 28853  0146D0  0E00               	movlw	0
 28854  0146D2  6E09               	movwf	(btemp+8)^0,c
 28855  0146D4  0E00               	movlw	0
 28856  0146D6  6E0A               	movwf	(btemp+9)^0,c
 28857  0146D8  0E00               	movlw	0
 28858  0146DA  6E0B               	movwf	(btemp+10)^0,c
 28859  0146DC  0E00               	movlw	0
 28860  0146DE  6E0C               	movwf	(btemp+11)^0,c
 28861                           
 28862                           ;stkvar	_b @ sp[(-4)+-4]
 28863  0146E0  0EF8               	movlw	-8
 28864  0146E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28865  0146E8  0EF9               	movlw	-7
 28866  0146EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28867  0146F0  0EFA               	movlw	-6
 28868  0146F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28869  0146F8  0EFB               	movlw	-5
 28870  0146FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28871  014700                     l8079:
 28872                           
 28873                           ;stkvar	_b @ sp[(-4)+-4]
 28874  014700  0EFA               	movlw	-6
 28875  014702  8EE3               	bsf	plusw1,7,c
 28876                           
 28877                           ;stkvar	_b @ sp[(-4)+-4]
 28878  014704  0EFB               	movlw	251
 28879  014706  24E1               	addwf	fsr1l,w,c
 28880  014708  6ED9               	movwf	fsr2l,c
 28881  01470A  0EFF               	movlw	255
 28882  01470C  20E2               	addwfc	fsr1h,w,c
 28883  01470E  6EDA               	movwf	fsr2h,c
 28884  014710  0E00               	movlw	0
 28885  014712  6EDF               	movwf	indf2,c
 28886  014714  D018               	goto	l8085
 28887  014716                     l8083:
 28888  014716  0E00               	movlw	0
 28889  014718  6E09               	movwf	(btemp+8)^0,c
 28890  01471A  0E00               	movlw	0
 28891  01471C  6E0A               	movwf	(btemp+9)^0,c
 28892  01471E  0E00               	movlw	0
 28893  014720  6E0B               	movwf	(btemp+10)^0,c
 28894  014722  0E00               	movlw	0
 28895  014724  6E0C               	movwf	(btemp+11)^0,c
 28896                           
 28897                           ;stkvar	_b @ sp[(-4)+-4]
 28898  014726  0EF8               	movlw	-8
 28899  014728  0060  F027  FFE3   	movff	btemp+8,plusw1
 28900  01472E  0EF9               	movlw	-7
 28901  014730  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28902  014736  0EFA               	movlw	-6
 28903  014738  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28904  01473E  0EFB               	movlw	-5
 28905  014740  0060  F033  FFE3   	movff	btemp+11,plusw1
 28906  014746                     l8085:
 28907                           
 28908                           ;stkvar	_a @ sp[(-4)+-8]
 28909  014746  0EF7               	movlw	247
 28910  014748  24E1               	addwf	fsr1l,w,c
 28911  01474A  6ED9               	movwf	fsr2l,c
 28912  01474C  0EFF               	movlw	255
 28913  01474E  20E2               	addwfc	fsr1h,w,c
 28914  014750  6EDA               	movwf	fsr2h,c
 28915  014752  50DF               	movf	indf2,w,c
 28916  014754  6E0C               	movwf	(btemp+11)^0,c
 28917  014756  0E80               	movlw	128
 28918  014758  160C               	andwf	(btemp+11)^0,f,c
 28919                           
 28920                           ;stkvar	_aexp @ sp[(-4)+2]
 28921  01475A  0EFE               	movlw	-2
 28922  01475C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28923                           
 28924                           ;stkvar	_signs @ sp[(-4)+3]
 28925                           ;stkvar	_aexp @ sp[(-4)+2]
 28926  014762  50E1               	movf	fsr1l,w,c
 28927  014764  0FFE               	addlw	-2
 28928  014766  6ED9               	movwf	fsr2l,c
 28929  014768  50E2               	movf	fsr1h,w,c
 28930  01476A  6EDA               	movwf	fsr2h,c
 28931  01476C  0EFF               	movlw	255
 28932  01476E  22DA               	addwfc	fsr2h,f,c
 28933  014770  0EFF               	movlw	-1
 28934  014772  50E3               	movf	plusw1,w,c
 28935  014774  18DE               	xorwf	postinc2,w,c
 28936  014776  B4D8               	btfsc	status,2,c
 28937  014778  D002               	goto	l8091
 28938                           
 28939                           ;stkvar	_signs @ sp[(-4)+3]
 28940  01477A  0EFF               	movlw	-1
 28941  01477C  8CE3               	bsf	plusw1,6,c
 28942  01477E                     l8091:
 28943                           
 28944                           ;stkvar	_a @ sp[(-4)+-8]
 28945  01477E  0EF7               	movlw	247
 28946  014780  24E1               	addwf	fsr1l,w,c
 28947  014782  6ED9               	movwf	fsr2l,c
 28948  014784  0EFF               	movlw	255
 28949  014786  20E2               	addwfc	fsr1h,w,c
 28950  014788  6EDA               	movwf	fsr2h,c
 28951  01478A  50DF               	movf	indf2,w,c
 28952  01478C  6E0C               	movwf	(btemp+11)^0,c
 28953  01478E  90D8               	bcf	status,0,c
 28954  014790  340C               	rlcf	(btemp+11)^0,w,c
 28955  014792  6E0B               	movwf	(btemp+10)^0,c
 28956                           
 28957                           ;stkvar	_aexp @ sp[(-4)+2]
 28958  014794  0EFE               	movlw	-2
 28959  014796  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28960                           
 28961                           ;stkvar	_a @ sp[(-4)+-8]
 28962  01479C  0EF6               	movlw	246
 28963  01479E  24E1               	addwf	fsr1l,w,c
 28964  0147A0  6ED9               	movwf	fsr2l,c
 28965  0147A2  0EFF               	movlw	255
 28966  0147A4  20E2               	addwfc	fsr1h,w,c
 28967  0147A6  6EDA               	movwf	fsr2h,c
 28968  0147A8  AEDF               	btfss	indf2,7,c
 28969  0147AA  D002               	goto	l8097
 28970                           
 28971                           ;stkvar	_aexp @ sp[(-4)+2]
 28972  0147AC  0EFE               	movlw	-2
 28973  0147AE  80E3               	bsf	plusw1,0,c
 28974  0147B0                     l8097:
 28975                           
 28976                           ;stkvar	_aexp @ sp[(-4)+2]
 28977  0147B0  0EFE               	movlw	-2
 28978  0147B2  50E3               	movf	plusw1,w,c
 28979  0147B4  B4D8               	btfsc	status,2,c
 28980  0147B6  D027               	goto	l8107
 28981                           
 28982                           ;stkvar	_aexp @ sp[(-4)+2]
 28983  0147B8  0EFE               	movlw	-2
 28984  0147BA  28E3               	incf	plusw1,w,c
 28985  0147BC  A4D8               	btfss	status,2,c
 28986  0147BE  D018               	goto	l8103
 28987  0147C0  0E00               	movlw	0
 28988  0147C2  6E09               	movwf	(btemp+8)^0,c
 28989  0147C4  0E00               	movlw	0
 28990  0147C6  6E0A               	movwf	(btemp+9)^0,c
 28991  0147C8  0E00               	movlw	0
 28992  0147CA  6E0B               	movwf	(btemp+10)^0,c
 28993  0147CC  0E00               	movlw	0
 28994  0147CE  6E0C               	movwf	(btemp+11)^0,c
 28995                           
 28996                           ;stkvar	_a @ sp[(-4)+-8]
 28997  0147D0  0EF4               	movlw	-12
 28998  0147D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28999  0147D8  0EF5               	movlw	-11
 29000  0147DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29001  0147E0  0EF6               	movlw	-10
 29002  0147E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29003  0147E8  0EF7               	movlw	-9
 29004  0147EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29005  0147F0                     l8103:
 29006                           
 29007                           ;stkvar	_a @ sp[(-4)+-8]
 29008  0147F0  0EF6               	movlw	-10
 29009  0147F2  8EE3               	bsf	plusw1,7,c
 29010                           
 29011                           ;stkvar	_a @ sp[(-4)+-8]
 29012  0147F4  0EF7               	movlw	247
 29013  0147F6  24E1               	addwf	fsr1l,w,c
 29014  0147F8  6ED9               	movwf	fsr2l,c
 29015  0147FA  0EFF               	movlw	255
 29016  0147FC  20E2               	addwfc	fsr1h,w,c
 29017  0147FE  6EDA               	movwf	fsr2h,c
 29018  014800  0E00               	movlw	0
 29019  014802  6EDF               	movwf	indf2,c
 29020  014804  D018               	goto	l8109
 29021  014806                     l8107:
 29022  014806  0E00               	movlw	0
 29023  014808  6E09               	movwf	(btemp+8)^0,c
 29024  01480A  0E00               	movlw	0
 29025  01480C  6E0A               	movwf	(btemp+9)^0,c
 29026  01480E  0E00               	movlw	0
 29027  014810  6E0B               	movwf	(btemp+10)^0,c
 29028  014812  0E00               	movlw	0
 29029  014814  6E0C               	movwf	(btemp+11)^0,c
 29030                           
 29031                           ;stkvar	_a @ sp[(-4)+-8]
 29032  014816  0EF4               	movlw	-12
 29033  014818  0060  F027  FFE3   	movff	btemp+8,plusw1
 29034  01481E  0EF5               	movlw	-11
 29035  014820  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29036  014826  0EF6               	movlw	-10
 29037  014828  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29038  01482E  0EF7               	movlw	-9
 29039  014830  0060  F033  FFE3   	movff	btemp+11,plusw1
 29040  014836                     l8109:
 29041                           
 29042                           ;stkvar	_bexp @ sp[(-4)+1]
 29043                           ;stkvar	_aexp @ sp[(-4)+2]
 29044  014836  50E1               	movf	fsr1l,w,c
 29045  014838  0FFE               	addlw	-2
 29046  01483A  6ED9               	movwf	fsr2l,c
 29047  01483C  50E2               	movf	fsr1h,w,c
 29048  01483E  6EDA               	movwf	fsr2h,c
 29049  014840  0EFF               	movlw	255
 29050  014842  22DA               	addwfc	fsr2h,f,c
 29051  014844  0EFD               	movlw	-3
 29052  014846  50E3               	movf	plusw1,w,c
 29053  014848  5CDE               	subwf	postinc2,w,c
 29054  01484A  B0D8               	btfsc	status,0,c
 29055  01484C  D0A4               	goto	l8145
 29056                           
 29057                           ;stkvar	_signs @ sp[(-4)+3]
 29058  01484E  0EFF               	movlw	-1
 29059  014850  ACE3               	btfss	plusw1,6,c
 29060  014852  D002               	goto	l8115
 29061                           
 29062                           ;stkvar	_signs @ sp[(-4)+3]
 29063  014854  0EFF               	movlw	-1
 29064  014856  7EE3               	btg	plusw1,7,c
 29065  014858                     l8115:
 29066                           
 29067                           ;stkvar	_bexp @ sp[(-4)+1]
 29068                           ;stkvar	_grs @ sp[(-4)+0]
 29069  014858  0EFD               	movlw	-3
 29070  01485A  006F FF8C  F001    	movff	plusw1,btemp
 29071  014860  0EFC               	movlw	-4
 29072  014862  0060  F007  FFE3   	movff	btemp,plusw1
 29073                           
 29074                           ;stkvar	_aexp @ sp[(-4)+2]
 29075                           ;stkvar	_bexp @ sp[(-4)+1]
 29076  014868  0EFE               	movlw	-2
 29077  01486A  006F FF8C  F001    	movff	plusw1,btemp
 29078  014870  0EFD               	movlw	-3
 29079  014872  0060  F007  FFE3   	movff	btemp,plusw1
 29080                           
 29081                           ;stkvar	_grs @ sp[(-4)+0]
 29082                           ;stkvar	_aexp @ sp[(-4)+2]
 29083  014878  0EFC               	movlw	-4
 29084  01487A  006F FF8C  F001    	movff	plusw1,btemp
 29085  014880  0EFE               	movlw	-2
 29086  014882  0060  F007  FFE3   	movff	btemp,plusw1
 29087                           
 29088                           ;stkvar	_b @ sp[(-4)+-4]
 29089                           ;stkvar	_grs @ sp[(-4)+0]
 29090  014888  0EF8               	movlw	-8
 29091  01488A  006F FF8C  F001    	movff	plusw1,btemp
 29092  014890  0EFC               	movlw	-4
 29093  014892  0060  F007  FFE3   	movff	btemp,plusw1
 29094                           
 29095                           ;stkvar	_a @ sp[(-4)+-8]
 29096                           ;stkvar	_b @ sp[(-4)+-4]
 29097  014898  0EF4               	movlw	-12
 29098  01489A  006F FF8C  F001    	movff	plusw1,btemp
 29099  0148A0  0EF8               	movlw	-8
 29100  0148A2  0060  F007  FFE3   	movff	btemp,plusw1
 29101                           
 29102                           ;stkvar	_grs @ sp[(-4)+0]
 29103                           ;stkvar	_a @ sp[(-4)+-8]
 29104  0148A8  0EFC               	movlw	-4
 29105  0148AA  006F FF8C  F001    	movff	plusw1,btemp
 29106  0148B0  0EF4               	movlw	-12
 29107  0148B2  0060  F007  FFE3   	movff	btemp,plusw1
 29108                           
 29109                           ;stkvar	_b @ sp[(-4)+-4]
 29110  0148B8  0EF9               	movlw	249
 29111  0148BA  24E1               	addwf	fsr1l,w,c
 29112  0148BC  6ED9               	movwf	fsr2l,c
 29113  0148BE  0EFF               	movlw	255
 29114  0148C0  20E2               	addwfc	fsr1h,w,c
 29115  0148C2  6EDA               	movwf	fsr2h,c
 29116  0148C4  50DF               	movf	indf2,w,c
 29117  0148C6  6E0C               	movwf	(btemp+11)^0,c
 29118                           
 29119                           ;stkvar	_grs @ sp[(-4)+0]
 29120  0148C8  0EFC               	movlw	-4
 29121  0148CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29122                           
 29123                           ;stkvar	_a @ sp[(-4)+-8]
 29124  0148D0  0EF5               	movlw	245
 29125  0148D2  24E1               	addwf	fsr1l,w,c
 29126  0148D4  6ED9               	movwf	fsr2l,c
 29127  0148D6  0EFF               	movlw	255
 29128  0148D8  20E2               	addwfc	fsr1h,w,c
 29129  0148DA  6EDA               	movwf	fsr2h,c
 29130                           
 29131                           ;stkvar	_b @ sp[(-4)+-4]
 29132  0148DC  0EF9               	movlw	249
 29133  0148DE  24E1               	addwf	fsr1l,w,c
 29134  0148E0  6EE9               	movwf	fsr0l,c
 29135  0148E2  0EFF               	movlw	255
 29136  0148E4  20E2               	addwfc	fsr1h,w,c
 29137  0148E6  6EEA               	movwf	fsr0h,c
 29138  0148E8  006F FF7F FFEF     	movff	indf2,indf0
 29139                           
 29140                           ;stkvar	_grs @ sp[(-4)+0]
 29141                           ;stkvar	_a @ sp[(-4)+-8]
 29142  0148EE  0EF5               	movlw	245
 29143  0148F0  24E1               	addwf	fsr1l,w,c
 29144  0148F2  6ED9               	movwf	fsr2l,c
 29145  0148F4  0EFF               	movlw	255
 29146  0148F6  20E2               	addwfc	fsr1h,w,c
 29147  0148F8  6EDA               	movwf	fsr2h,c
 29148  0148FA  0EFC               	movlw	-4
 29149  0148FC  006F FF8F FFDF     	movff	plusw1,indf2
 29150                           
 29151                           ;stkvar	_b @ sp[(-4)+-4]
 29152  014902  0EFA               	movlw	250
 29153  014904  24E1               	addwf	fsr1l,w,c
 29154  014906  6ED9               	movwf	fsr2l,c
 29155  014908  0EFF               	movlw	255
 29156  01490A  20E2               	addwfc	fsr1h,w,c
 29157  01490C  6EDA               	movwf	fsr2h,c
 29158  01490E  50DF               	movf	indf2,w,c
 29159  014910  6E0C               	movwf	(btemp+11)^0,c
 29160                           
 29161                           ;stkvar	_grs @ sp[(-4)+0]
 29162  014912  0EFC               	movlw	-4
 29163  014914  0060  F033  FFE3   	movff	btemp+11,plusw1
 29164                           
 29165                           ;stkvar	_a @ sp[(-4)+-8]
 29166  01491A  0EF6               	movlw	246
 29167  01491C  24E1               	addwf	fsr1l,w,c
 29168  01491E  6ED9               	movwf	fsr2l,c
 29169  014920  0EFF               	movlw	255
 29170  014922  20E2               	addwfc	fsr1h,w,c
 29171  014924  6EDA               	movwf	fsr2h,c
 29172                           
 29173                           ;stkvar	_b @ sp[(-4)+-4]
 29174  014926  0EFA               	movlw	250
 29175  014928  24E1               	addwf	fsr1l,w,c
 29176  01492A  6EE9               	movwf	fsr0l,c
 29177  01492C  0EFF               	movlw	255
 29178  01492E  20E2               	addwfc	fsr1h,w,c
 29179  014930  6EEA               	movwf	fsr0h,c
 29180  014932  006F FF7F FFEF     	movff	indf2,indf0
 29181                           
 29182                           ;stkvar	_grs @ sp[(-4)+0]
 29183                           ;stkvar	_a @ sp[(-4)+-8]
 29184  014938  0EF6               	movlw	246
 29185  01493A  24E1               	addwf	fsr1l,w,c
 29186  01493C  6ED9               	movwf	fsr2l,c
 29187  01493E  0EFF               	movlw	255
 29188  014940  20E2               	addwfc	fsr1h,w,c
 29189  014942  6EDA               	movwf	fsr2h,c
 29190  014944  0EFC               	movlw	-4
 29191  014946  006F FF8F FFDF     	movff	plusw1,indf2
 29192                           
 29193                           ;stkvar	_b @ sp[(-4)+-4]
 29194  01494C  0EFB               	movlw	251
 29195  01494E  24E1               	addwf	fsr1l,w,c
 29196  014950  6ED9               	movwf	fsr2l,c
 29197  014952  0EFF               	movlw	255
 29198  014954  20E2               	addwfc	fsr1h,w,c
 29199  014956  6EDA               	movwf	fsr2h,c
 29200  014958  50DF               	movf	indf2,w,c
 29201  01495A  6E0C               	movwf	(btemp+11)^0,c
 29202                           
 29203                           ;stkvar	_grs @ sp[(-4)+0]
 29204  01495C  0EFC               	movlw	-4
 29205  01495E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29206                           
 29207                           ;stkvar	_a @ sp[(-4)+-8]
 29208  014964  0EF7               	movlw	247
 29209  014966  24E1               	addwf	fsr1l,w,c
 29210  014968  6ED9               	movwf	fsr2l,c
 29211  01496A  0EFF               	movlw	255
 29212  01496C  20E2               	addwfc	fsr1h,w,c
 29213  01496E  6EDA               	movwf	fsr2h,c
 29214                           
 29215                           ;stkvar	_b @ sp[(-4)+-4]
 29216  014970  0EFB               	movlw	251
 29217  014972  24E1               	addwf	fsr1l,w,c
 29218  014974  6EE9               	movwf	fsr0l,c
 29219  014976  0EFF               	movlw	255
 29220  014978  20E2               	addwfc	fsr1h,w,c
 29221  01497A  6EEA               	movwf	fsr0h,c
 29222  01497C  006F FF7F FFEF     	movff	indf2,indf0
 29223                           
 29224                           ;stkvar	_grs @ sp[(-4)+0]
 29225                           ;stkvar	_a @ sp[(-4)+-8]
 29226  014982  0EF7               	movlw	247
 29227  014984  24E1               	addwf	fsr1l,w,c
 29228  014986  6ED9               	movwf	fsr2l,c
 29229  014988  0EFF               	movlw	255
 29230  01498A  20E2               	addwfc	fsr1h,w,c
 29231  01498C  6EDA               	movwf	fsr2h,c
 29232  01498E  0EFC               	movlw	-4
 29233  014990  006F FF8F FFDF     	movff	plusw1,indf2
 29234  014996                     l8145:
 29235                           
 29236                           ;stkvar	_grs @ sp[(-4)+0]
 29237  014996  0EFC               	movlw	-4
 29238  014998  6AE3               	clrf	plusw1,c
 29239                           
 29240                           ;stkvar	_aexp @ sp[(-4)+2]
 29241  01499A  0EFE               	movlw	-2
 29242  01499C  50E3               	movf	plusw1,w,c
 29243  01499E  6E0B               	movwf	(btemp+10)^0,c
 29244  0149A0  6A0C               	clrf	(btemp+11)^0,c
 29245                           
 29246                           ;stkvar	_bexp @ sp[(-4)+1]
 29247  0149A2  0EFD               	movlw	-3
 29248  0149A4  50E3               	movf	plusw1,w,c
 29249  0149A6  5E0B               	subwf	(btemp+10)^0,f,c
 29250  0149A8  0E00               	movlw	0
 29251  0149AA  5A0C               	subwfb	(btemp+11)^0,f,c
 29252  0149AC  BE0C               	btfsc	(btemp+11)^0,7,c
 29253  0149AE  D062               	goto	l8169
 29254  0149B0  500C               	movf	(btemp+11)^0,w,c
 29255  0149B2  E104               	bnz	u5790
 29256  0149B4  0E1A               	movlw	26
 29257  0149B6  5C0B               	subwf	(btemp+10)^0,w,c
 29258  0149B8  A0D8               	btfss	status,0,c
 29259  0149BA  D05C               	goto	l8169
 29260  0149BC                     u5790:
 29261                           
 29262                           ;stkvar	_b @ sp[(-4)+-4]
 29263  0149BC  0EF8               	movlw	-8
 29264  0149BE  50E3               	movf	plusw1,w,c
 29265  0149C0  E10A               	bnz	u5801
 29266  0149C2  0EF9               	movlw	-7
 29267  0149C4  50E3               	movf	plusw1,w,c
 29268  0149C6  E107               	bnz	u5801
 29269  0149C8  0EFA               	movlw	-6
 29270  0149CA  50E3               	movf	plusw1,w,c
 29271  0149CC  E104               	bnz	u5801
 29272  0149CE  0EFB               	movlw	-5
 29273  0149D0  50E3               	movf	plusw1,w,c
 29274  0149D2  B4D8               	btfsc	status,2,c
 29275  0149D4  D003               	goto	u5800
 29276  0149D6                     u5801:
 29277  0149D6  6A0C               	clrf	(btemp+11)^0,c
 29278  0149D8  2A0C               	incf	(btemp+11)^0,f,c
 29279  0149DA  D001               	goto	u5818
 29280  0149DC                     u5800:
 29281  0149DC  6A0C               	clrf	(btemp+11)^0,c
 29282  0149DE                     u5818:
 29283                           
 29284                           ;stkvar	_grs @ sp[(-4)+0]
 29285  0149DE  0EFC               	movlw	-4
 29286  0149E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29287                           
 29288                           ;stkvar	_b @ sp[(-4)+-4]
 29289  0149E6  0EF8               	movlw	-8
 29290  0149E8  6AE3               	clrf	plusw1,c
 29291  0149EA  0EF9               	movlw	-7
 29292  0149EC  6AE3               	clrf	plusw1,c
 29293  0149EE  0EFA               	movlw	-6
 29294  0149F0  6AE3               	clrf	plusw1,c
 29295  0149F2  0EFB               	movlw	-5
 29296  0149F4  6AE3               	clrf	plusw1,c
 29297                           
 29298                           ;stkvar	_aexp @ sp[(-4)+2]
 29299                           ;stkvar	_bexp @ sp[(-4)+1]
 29300  0149F6  0EFE               	movlw	-2
 29301  0149F8  006F FF8C  F001    	movff	plusw1,btemp
 29302  0149FE  0EFD               	movlw	-3
 29303  014A00  0060  F007  FFE3   	movff	btemp,plusw1
 29304  014A06  D042               	goto	u5850
 29305  014A08                     l8155:
 29306                           
 29307                           ;stkvar	_grs @ sp[(-4)+0]
 29308  014A08  0EFC               	movlw	-4
 29309  014A0A  A0E3               	btfss	plusw1,0,c
 29310  014A0C  D00D               	goto	l8159
 29311                           
 29312                           ;stkvar	_grs @ sp[(-4)+0]
 29313  014A0E  0EFC               	movlw	-4
 29314  014A10  006F FF8C  F00C    	movff	plusw1,btemp+11
 29315  014A16  90D8               	bcf	status,0,c
 29316  014A18  320C               	rrcf	(btemp+11)^0,f,c
 29317  014A1A  0E01               	movlw	1
 29318  014A1C  120C               	iorwf	(btemp+11)^0,f,c
 29319                           
 29320                           ;stkvar	_grs @ sp[(-4)+0]
 29321  014A1E  0EFC               	movlw	-4
 29322  014A20  0060  F033  FFE3   	movff	btemp+11,plusw1
 29323  014A26  D009               	goto	l8161
 29324  014A28                     l8159:
 29325                           
 29326                           ;stkvar	_grs @ sp[(-4)+0]
 29327  014A28  50E1               	movf	fsr1l,w,c
 29328  014A2A  0FFC               	addlw	-4
 29329  014A2C  6ED9               	movwf	fsr2l,c
 29330  014A2E  50E2               	movf	fsr1h,w,c
 29331  014A30  6EDA               	movwf	fsr2h,c
 29332  014A32  0EFF               	movlw	255
 29333  014A34  22DA               	addwfc	fsr2h,f,c
 29334  014A36  90D8               	bcf	status,0,c
 29335  014A38  32DF               	rrcf	indf2,f,c
 29336  014A3A                     l8161:
 29337                           
 29338                           ;stkvar	_b @ sp[(-4)+-4]
 29339  014A3A  0EF8               	movlw	-8
 29340  014A3C  A0E3               	btfss	plusw1,0,c
 29341  014A3E  D002               	goto	l8165
 29342                           
 29343                           ;stkvar	_grs @ sp[(-4)+0]
 29344  014A40  0EFC               	movlw	-4
 29345  014A42  8EE3               	bsf	plusw1,7,c
 29346  014A44                     l8165:
 29347  014A44  0E01               	movlw	1
 29348  014A46  6E0C               	movwf	(btemp+11)^0,c
 29349                           
 29350                           ;stkvar	_b @ sp[(-4)+-4]
 29351  014A48  50E1               	movf	fsr1l,w,c
 29352  014A4A  0FF8               	addlw	-8
 29353  014A4C  6ED9               	movwf	fsr2l,c
 29354  014A4E  50E2               	movf	fsr1h,w,c
 29355  014A50  6EDA               	movwf	fsr2h,c
 29356  014A52  0EFF               	movlw	255
 29357  014A54  22DA               	addwfc	fsr2h,f,c
 29358  014A56  280C               	incf	(btemp+11)^0,w,c
 29359  014A58  52DE               	movf	postinc2,f,c
 29360  014A5A  D008               	goto	u5840
 29361  014A5C                     u5845:
 29362  014A5C  52DE               	movf	postinc2,f,c
 29363  014A5E  90D8               	bcf	status,0,c
 29364  014A60  BEDC               	btfsc	preinc2,7,c
 29365  014A62  80D8               	bsf	status,0,c
 29366  014A64  32DD               	rrcf	postdec2,f,c
 29367  014A66  32DD               	rrcf	postdec2,f,c
 29368  014A68  32DD               	rrcf	postdec2,f,c
 29369  014A6A  32DE               	rrcf	postinc2,f,c
 29370  014A6C                     u5840:
 29371  014A6C  2EE8               	decfsz	wreg,f,c
 29372  014A6E  D7F6               	goto	u5845
 29373                           
 29374                           ;stkvar	_bexp @ sp[(-4)+1]
 29375  014A70  0EFD               	movlw	-3
 29376  014A72  2AE3               	incf	plusw1,f,c
 29377  014A74                     l8169:
 29378                           
 29379                           ;stkvar	_aexp @ sp[(-4)+2]
 29380                           ;stkvar	_bexp @ sp[(-4)+1]
 29381  014A74  50E1               	movf	fsr1l,w,c
 29382  014A76  0FFD               	addlw	-3
 29383  014A78  6ED9               	movwf	fsr2l,c
 29384  014A7A  50E2               	movf	fsr1h,w,c
 29385  014A7C  6EDA               	movwf	fsr2h,c
 29386  014A7E  0EFF               	movlw	255
 29387  014A80  22DA               	addwfc	fsr2h,f,c
 29388  014A82  0EFE               	movlw	-2
 29389  014A84  50E3               	movf	plusw1,w,c
 29390  014A86  5CDE               	subwf	postinc2,w,c
 29391  014A88  A0D8               	btfss	status,0,c
 29392  014A8A  D7BE               	goto	l8155
 29393  014A8C                     u5850:
 29394                           
 29395                           ;stkvar	_signs @ sp[(-4)+3]
 29396  014A8C  0EFF               	movlw	-1
 29397  014A8E  BCE3               	btfsc	plusw1,6,c
 29398  014A90  D066               	goto	l8197
 29399                           
 29400                           ;stkvar	_bexp @ sp[(-4)+1]
 29401  014A92  0EFD               	movlw	-3
 29402  014A94  50E3               	movf	plusw1,w,c
 29403  014A96  B4D8               	btfsc	status,2,c
 29404  014A98  D0F2               	goto	u5950
 29405                           
 29406                           ;stkvar	_a @ sp[(-4)+-8]
 29407                           ;stkvar	_b @ sp[(-4)+-4]
 29408  014A9A  0EF8               	movlw	-8
 29409  014A9C  50E3               	movf	plusw1,w,c
 29410  014A9E  6E01               	movwf	btemp^0,c
 29411  014AA0  0EF4               	movlw	-12
 29412  014AA2  50E3               	movf	plusw1,w,c
 29413  014AA4  2601               	addwf	btemp^0,f,c
 29414  014AA6  0EF8               	movlw	-8
 29415  014AA8  0060  F007  FFE3   	movff	btemp,plusw1
 29416  014AAE  0EF9               	movlw	-7
 29417  014AB0  50E3               	movf	plusw1,w,c
 29418  014AB2  6E01               	movwf	btemp^0,c
 29419  014AB4  0EF5               	movlw	-11
 29420  014AB6  50E3               	movf	plusw1,w,c
 29421  014AB8  2201               	addwfc	btemp^0,f,c
 29422  014ABA  0EF9               	movlw	-7
 29423  014ABC  0060  F007  FFE3   	movff	btemp,plusw1
 29424  014AC2  0EFA               	movlw	-6
 29425  014AC4  50E3               	movf	plusw1,w,c
 29426  014AC6  6E01               	movwf	btemp^0,c
 29427  014AC8  0EF6               	movlw	-10
 29428  014ACA  50E3               	movf	plusw1,w,c
 29429  014ACC  2201               	addwfc	btemp^0,f,c
 29430  014ACE  0EFA               	movlw	-6
 29431  014AD0  0060  F007  FFE3   	movff	btemp,plusw1
 29432  014AD6  0EFB               	movlw	-5
 29433  014AD8  50E3               	movf	plusw1,w,c
 29434  014ADA  6E01               	movwf	btemp^0,c
 29435  014ADC  0EF7               	movlw	-9
 29436  014ADE  50E3               	movf	plusw1,w,c
 29437  014AE0  2201               	addwfc	btemp^0,f,c
 29438  014AE2  0EFB               	movlw	-5
 29439  014AE4  0060  F007  FFE3   	movff	btemp,plusw1
 29440                           
 29441                           ;stkvar	_b @ sp[(-4)+-4]
 29442  014AEA  0EFB               	movlw	-5
 29443  014AEC  A0E3               	btfss	plusw1,0,c
 29444  014AEE  D101               	goto	u5990
 29445                           
 29446                           ;stkvar	_grs @ sp[(-4)+0]
 29447  014AF0  0EFC               	movlw	-4
 29448  014AF2  A0E3               	btfss	plusw1,0,c
 29449  014AF4  D00D               	goto	l8187
 29450                           
 29451                           ;stkvar	_grs @ sp[(-4)+0]
 29452  014AF6  0EFC               	movlw	-4
 29453  014AF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29454  014AFE  90D8               	bcf	status,0,c
 29455  014B00  320C               	rrcf	(btemp+11)^0,f,c
 29456  014B02  0E01               	movlw	1
 29457  014B04  120C               	iorwf	(btemp+11)^0,f,c
 29458                           
 29459                           ;stkvar	_grs @ sp[(-4)+0]
 29460  014B06  0EFC               	movlw	-4
 29461  014B08  0060  F033  FFE3   	movff	btemp+11,plusw1
 29462  014B0E  D009               	goto	l8189
 29463  014B10                     l8187:
 29464                           
 29465                           ;stkvar	_grs @ sp[(-4)+0]
 29466  014B10  50E1               	movf	fsr1l,w,c
 29467  014B12  0FFC               	addlw	-4
 29468  014B14  6ED9               	movwf	fsr2l,c
 29469  014B16  50E2               	movf	fsr1h,w,c
 29470  014B18  6EDA               	movwf	fsr2h,c
 29471  014B1A  0EFF               	movlw	255
 29472  014B1C  22DA               	addwfc	fsr2h,f,c
 29473  014B1E  90D8               	bcf	status,0,c
 29474  014B20  32DF               	rrcf	indf2,f,c
 29475  014B22                     l8189:
 29476                           
 29477                           ;stkvar	_b @ sp[(-4)+-4]
 29478  014B22  0EF8               	movlw	-8
 29479  014B24  A0E3               	btfss	plusw1,0,c
 29480  014B26  D002               	goto	l8193
 29481                           
 29482                           ;stkvar	_grs @ sp[(-4)+0]
 29483  014B28  0EFC               	movlw	-4
 29484  014B2A  8EE3               	bsf	plusw1,7,c
 29485  014B2C                     l8193:
 29486  014B2C  0E01               	movlw	1
 29487  014B2E  6E0C               	movwf	(btemp+11)^0,c
 29488                           
 29489                           ;stkvar	_b @ sp[(-4)+-4]
 29490  014B30  50E1               	movf	fsr1l,w,c
 29491  014B32  0FF8               	addlw	-8
 29492  014B34  6ED9               	movwf	fsr2l,c
 29493  014B36  50E2               	movf	fsr1h,w,c
 29494  014B38  6EDA               	movwf	fsr2h,c
 29495  014B3A  0EFF               	movlw	255
 29496  014B3C  22DA               	addwfc	fsr2h,f,c
 29497  014B3E  280C               	incf	(btemp+11)^0,w,c
 29498  014B40  52DE               	movf	postinc2,f,c
 29499  014B42  D008               	goto	u5910
 29500  014B44                     u5915:
 29501  014B44  52DE               	movf	postinc2,f,c
 29502  014B46  90D8               	bcf	status,0,c
 29503  014B48  BEDC               	btfsc	preinc2,7,c
 29504  014B4A  80D8               	bsf	status,0,c
 29505  014B4C  32DD               	rrcf	postdec2,f,c
 29506  014B4E  32DD               	rrcf	postdec2,f,c
 29507  014B50  32DD               	rrcf	postdec2,f,c
 29508  014B52  32DE               	rrcf	postinc2,f,c
 29509  014B54                     u5910:
 29510  014B54  2EE8               	decfsz	wreg,f,c
 29511  014B56  D7F6               	goto	u5915
 29512                           
 29513                           ;stkvar	_bexp @ sp[(-4)+1]
 29514  014B58  0EFD               	movlw	-3
 29515  014B5A  2AE3               	incf	plusw1,f,c
 29516  014B5C  D0CA               	goto	u5990
 29517  014B5E                     l8197:
 29518                           
 29519                           ;stkvar	_a @ sp[(-4)+-8]
 29520                           ;stkvar	_b @ sp[(-4)+-4]
 29521  014B5E  50E1               	movf	fsr1l,w,c
 29522  014B60  0FF8               	addlw	-8
 29523  014B62  6ED9               	movwf	fsr2l,c
 29524  014B64  50E2               	movf	fsr1h,w,c
 29525  014B66  6EDA               	movwf	fsr2h,c
 29526  014B68  0EFF               	movlw	255
 29527  014B6A  22DA               	addwfc	fsr2h,f,c
 29528  014B6C  0EF4               	movlw	-12
 29529  014B6E  50E3               	movf	plusw1,w,c
 29530  014B70  5CDE               	subwf	postinc2,w,c
 29531  014B72  0EF5               	movlw	-11
 29532  014B74  50E3               	movf	plusw1,w,c
 29533  014B76  58DE               	subwfb	postinc2,w,c
 29534  014B78  0EF6               	movlw	-10
 29535  014B7A  50E3               	movf	plusw1,w,c
 29536  014B7C  58DE               	subwfb	postinc2,w,c
 29537  014B7E  50DE               	movf	postinc2,w,c
 29538  014B80  0A80               	xorlw	128
 29539  014B82  6E01               	movwf	btemp^0,c
 29540  014B84  0EF7               	movlw	-9
 29541  014B86  50E3               	movf	plusw1,w,c
 29542  014B88  0A80               	xorlw	128
 29543  014B8A  5801               	subwfb	btemp^0,w,c
 29544  014B8C  B0D8               	btfsc	status,0,c
 29545  014B8E  D053               	goto	l8209
 29546                           
 29547                           ;stkvar	_b @ sp[(-4)+-4]
 29548                           ;stkvar	_a @ sp[(-4)+-8]
 29549  014B90  0EF4               	movlw	-12
 29550  014B92  006F FF8C  F009    	movff	plusw1,btemp+8
 29551  014B98  0EF5               	movlw	-11
 29552  014B9A  006F FF8C  F00A    	movff	plusw1,btemp+9
 29553  014BA0  0EF6               	movlw	-10
 29554  014BA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 29555  014BA8  0EF7               	movlw	-9
 29556  014BAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29557  014BB0  0EF8               	movlw	-8
 29558  014BB2  50E3               	movf	plusw1,w,c
 29559  014BB4  5E09               	subwf	(btemp+8)^0,f,c
 29560  014BB6  0EF9               	movlw	-7
 29561  014BB8  50E3               	movf	plusw1,w,c
 29562  014BBA  5A0A               	subwfb	(btemp+9)^0,f,c
 29563  014BBC  0EFA               	movlw	-6
 29564  014BBE  50E3               	movf	plusw1,w,c
 29565  014BC0  5A0B               	subwfb	(btemp+10)^0,f,c
 29566  014BC2  0EFB               	movlw	-5
 29567  014BC4  50E3               	movf	plusw1,w,c
 29568  014BC6  5A0C               	subwfb	(btemp+11)^0,f,c
 29569  014BC8  0EFF               	movlw	255
 29570  014BCA  2409               	addwf	(btemp+8)^0,w,c
 29571  014BCC  6E05               	movwf	(btemp+4)^0,c
 29572  014BCE  0EFF               	movlw	255
 29573  014BD0  200A               	addwfc	(btemp+9)^0,w,c
 29574  014BD2  6E06               	movwf	(btemp+5)^0,c
 29575  014BD4  0EFF               	movlw	255
 29576  014BD6  200B               	addwfc	(btemp+10)^0,w,c
 29577  014BD8  6E07               	movwf	(btemp+6)^0,c
 29578  014BDA  0EFF               	movlw	255
 29579  014BDC  200C               	addwfc	(btemp+11)^0,w,c
 29580  014BDE  6E08               	movwf	(btemp+7)^0,c
 29581                           
 29582                           ;stkvar	_b @ sp[(-4)+-4]
 29583  014BE0  0EF8               	movlw	-8
 29584  014BE2  0060  F017  FFE3   	movff	btemp+4,plusw1
 29585  014BE8  0EF9               	movlw	-7
 29586  014BEA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29587  014BF0  0EFA               	movlw	-6
 29588  014BF2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29589  014BF8  0EFB               	movlw	-5
 29590  014BFA  0060  F023  FFE3   	movff	btemp+7,plusw1
 29591                           
 29592                           ;stkvar	_signs @ sp[(-4)+3]
 29593  014C00  0EFF               	movlw	-1
 29594  014C02  7EE3               	btg	plusw1,7,c
 29595                           
 29596                           ;stkvar	_grs @ sp[(-4)+0]
 29597  014C04  0EFC               	movlw	-4
 29598  014C06  50E3               	movf	plusw1,w,c
 29599  014C08  0800               	sublw	0
 29600  014C0A  6E0C               	movwf	(btemp+11)^0,c
 29601                           
 29602                           ;stkvar	_grs @ sp[(-4)+0]
 29603  014C0C  0EFC               	movlw	-4
 29604  014C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29605                           
 29606                           ;stkvar	_grs @ sp[(-4)+0]
 29607  014C14  0EFC               	movlw	-4
 29608  014C16  50E3               	movf	plusw1,w,c
 29609  014C18  A4D8               	btfss	status,2,c
 29610  014C1A  D020               	goto	l8211
 29611                           
 29612                           ;stkvar	_b @ sp[(-4)+-4]
 29613  014C1C  50E1               	movf	fsr1l,w,c
 29614  014C1E  0FF8               	addlw	-8
 29615  014C20  6ED9               	movwf	fsr2l,c
 29616  014C22  50E2               	movf	fsr1h,w,c
 29617  014C24  6EDA               	movwf	fsr2h,c
 29618  014C26  0EFF               	movlw	255
 29619  014C28  22DA               	addwfc	fsr2h,f,c
 29620  014C2A  2ADE               	incf	postinc2,f,c
 29621  014C2C  0E00               	movlw	0
 29622  014C2E  22DE               	addwfc	postinc2,f,c
 29623  014C30  22DE               	addwfc	postinc2,f,c
 29624  014C32  22DE               	addwfc	postinc2,f,c
 29625  014C34  D013               	goto	l8211
 29626  014C36                     l8209:
 29627                           
 29628                           ;stkvar	_a @ sp[(-4)+-8]
 29629                           ;stkvar	_b @ sp[(-4)+-4]
 29630  014C36  50E1               	movf	fsr1l,w,c
 29631  014C38  0FF8               	addlw	-8
 29632  014C3A  6ED9               	movwf	fsr2l,c
 29633  014C3C  50E2               	movf	fsr1h,w,c
 29634  014C3E  6EDA               	movwf	fsr2h,c
 29635  014C40  0EFF               	movlw	255
 29636  014C42  22DA               	addwfc	fsr2h,f,c
 29637  014C44  0EF4               	movlw	-12
 29638  014C46  50E3               	movf	plusw1,w,c
 29639  014C48  5EDE               	subwf	postinc2,f,c
 29640  014C4A  0EF5               	movlw	-11
 29641  014C4C  50E3               	movf	plusw1,w,c
 29642  014C4E  5ADE               	subwfb	postinc2,f,c
 29643  014C50  0EF6               	movlw	-10
 29644  014C52  50E3               	movf	plusw1,w,c
 29645  014C54  5ADE               	subwfb	postinc2,f,c
 29646  014C56  0EF7               	movlw	-9
 29647  014C58  50E3               	movf	plusw1,w,c
 29648  014C5A  5ADE               	subwfb	postinc2,f,c
 29649  014C5C                     l8211:
 29650                           
 29651                           ;stkvar	_b @ sp[(-4)+-4]
 29652  014C5C  0EF8               	movlw	-8
 29653  014C5E  50E3               	movf	plusw1,w,c
 29654  014C60  E145               	bnz	l8233
 29655  014C62  0EF9               	movlw	-7
 29656  014C64  50E3               	movf	plusw1,w,c
 29657  014C66  E142               	bnz	l8233
 29658  014C68  0EFA               	movlw	-6
 29659  014C6A  50E3               	movf	plusw1,w,c
 29660  014C6C  E13F               	bnz	l8233
 29661  014C6E  0EFB               	movlw	-5
 29662  014C70  50E3               	movf	plusw1,w,c
 29663  014C72  A4D8               	btfss	status,2,c
 29664  014C74  D03B               	goto	l8233
 29665                           
 29666                           ;stkvar	_grs @ sp[(-4)+0]
 29667  014C76  0EFC               	movlw	-4
 29668  014C78  50E3               	movf	plusw1,w,c
 29669  014C7A  A4D8               	btfss	status,2,c
 29670  014C7C  D037               	goto	l8233
 29671  014C7E                     u5950:
 29672  014C7E  0E00               	movlw	0
 29673  014C80  6E01               	movwf	btemp^0,c
 29674  014C82  0E00               	movlw	0
 29675  014C84  6E02               	movwf	(btemp+1)^0,c
 29676  014C86  0E00               	movlw	0
 29677  014C88  6E03               	movwf	(btemp+2)^0,c
 29678  014C8A  0E00               	movlw	0
 29679  014C8C  6E04               	movwf	(btemp+3)^0,c
 29680  014C8E  D0C6               	goto	l3055
 29681  014C90                     l8219:
 29682                           
 29683                           ;stkvar	_b @ sp[(-4)+-4]
 29684  014C90  90D8               	bcf	status,0,c
 29685  014C92  0EF8               	movlw	-8
 29686  014C94  36E3               	rlcf	plusw1,f,c
 29687  014C96  0EF9               	movlw	-7
 29688  014C98  36E3               	rlcf	plusw1,f,c
 29689  014C9A  0EFA               	movlw	-6
 29690  014C9C  36E3               	rlcf	plusw1,f,c
 29691  014C9E  0EFB               	movlw	-5
 29692  014CA0  36E3               	rlcf	plusw1,f,c
 29693                           
 29694                           ;stkvar	_grs @ sp[(-4)+0]
 29695  014CA2  0EFC               	movlw	-4
 29696  014CA4  AEE3               	btfss	plusw1,7,c
 29697  014CA6  D002               	goto	l3067
 29698                           
 29699                           ;stkvar	_b @ sp[(-4)+-4]
 29700  014CA8  0EF8               	movlw	-8
 29701  014CAA  80E3               	bsf	plusw1,0,c
 29702  014CAC                     l3067:
 29703                           
 29704                           ;stkvar	_grs @ sp[(-4)+0]
 29705  014CAC  0EFC               	movlw	-4
 29706  014CAE  A0E3               	btfss	plusw1,0,c
 29707  014CB0  D00E               	goto	l8227
 29708                           
 29709                           ;stkvar	_grs @ sp[(-4)+0]
 29710  014CB2  0EFC               	movlw	-4
 29711  014CB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29712  014CBA  90D8               	bcf	status,0,c
 29713  014CBC  340C               	rlcf	(btemp+11)^0,w,c
 29714  014CBE  6E0B               	movwf	(btemp+10)^0,c
 29715  014CC0  0E01               	movlw	1
 29716  014CC2  120B               	iorwf	(btemp+10)^0,f,c
 29717                           
 29718                           ;stkvar	_grs @ sp[(-4)+0]
 29719  014CC4  0EFC               	movlw	-4
 29720  014CC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29721  014CCC  D009               	goto	l8229
 29722  014CCE                     l8227:
 29723                           
 29724                           ;stkvar	_grs @ sp[(-4)+0]
 29725  014CCE  50E1               	movf	fsr1l,w,c
 29726  014CD0  0FFC               	addlw	-4
 29727  014CD2  6ED9               	movwf	fsr2l,c
 29728  014CD4  50E2               	movf	fsr1h,w,c
 29729  014CD6  6EDA               	movwf	fsr2h,c
 29730  014CD8  0EFF               	movlw	255
 29731  014CDA  22DA               	addwfc	fsr2h,f,c
 29732  014CDC  90D8               	bcf	status,0,c
 29733  014CDE  36DF               	rlcf	indf2,f,c
 29734  014CE0                     l8229:
 29735                           
 29736                           ;stkvar	_bexp @ sp[(-4)+1]
 29737  014CE0  0EFD               	movlw	-3
 29738  014CE2  50E3               	movf	plusw1,w,c
 29739  014CE4  B4D8               	btfsc	status,2,c
 29740  014CE6  D002               	goto	l8233
 29741                           
 29742                           ;stkvar	_bexp @ sp[(-4)+1]
 29743  014CE8  0EFD               	movlw	-3
 29744  014CEA  06E3               	decf	plusw1,f,c
 29745  014CEC                     l8233:
 29746                           
 29747                           ;stkvar	_b @ sp[(-4)+-4]
 29748  014CEC  0EFA               	movlw	-6
 29749  014CEE  AEE3               	btfss	plusw1,7,c
 29750  014CF0  D7CF               	goto	l8219
 29751  014CF2                     u5990:
 29752                           
 29753                           ;stkvar	_aexp @ sp[(-4)+2]
 29754  014CF2  0EFE               	movlw	-2
 29755  014CF4  6AE3               	clrf	plusw1,c
 29756                           
 29757                           ;stkvar	_grs @ sp[(-4)+0]
 29758  014CF6  0EFC               	movlw	-4
 29759  014CF8  AEE3               	btfss	plusw1,7,c
 29760  014CFA  D00F               	goto	l8247
 29761                           
 29762                           ;stkvar	_grs @ sp[(-4)+0]
 29763  014CFC  0EFC               	movlw	-4
 29764  014CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29765  014D04  0E7F               	movlw	127
 29766  014D06  160C               	andwf	(btemp+11)^0,f,c
 29767  014D08  B4D8               	btfsc	status,2,c
 29768  014D0A  D004               	goto	l8243
 29769  014D0C                     u6010:
 29770                           
 29771                           ;stkvar	_aexp @ sp[(-4)+2]
 29772  014D0C  0EFE               	movlw	-2
 29773  014D0E  6AE3               	clrf	plusw1,c
 29774  014D10  2AE3               	incf	plusw1,f,c
 29775  014D12  D003               	goto	l8247
 29776  014D14                     l8243:
 29777                           
 29778                           ;stkvar	_b @ sp[(-4)+-4]
 29779  014D14  0EF8               	movlw	-8
 29780  014D16  B0E3               	btfsc	plusw1,0,c
 29781  014D18  D7F9               	goto	u6010
 29782  014D1A                     l8247:
 29783                           
 29784                           ;stkvar	_aexp @ sp[(-4)+2]
 29785  014D1A  0EFE               	movlw	-2
 29786  014D1C  50E3               	movf	plusw1,w,c
 29787  014D1E  B4D8               	btfsc	status,2,c
 29788  014D20  D02B               	goto	l8259
 29789                           
 29790                           ;stkvar	_b @ sp[(-4)+-4]
 29791  014D22  50E1               	movf	fsr1l,w,c
 29792  014D24  0FF8               	addlw	-8
 29793  014D26  6ED9               	movwf	fsr2l,c
 29794  014D28  50E2               	movf	fsr1h,w,c
 29795  014D2A  6EDA               	movwf	fsr2h,c
 29796  014D2C  0EFF               	movlw	255
 29797  014D2E  22DA               	addwfc	fsr2h,f,c
 29798  014D30  2ADE               	incf	postinc2,f,c
 29799  014D32  0E00               	movlw	0
 29800  014D34  22DE               	addwfc	postinc2,f,c
 29801  014D36  22DE               	addwfc	postinc2,f,c
 29802  014D38  22DE               	addwfc	postinc2,f,c
 29803                           
 29804                           ;stkvar	_b @ sp[(-4)+-4]
 29805  014D3A  0EFB               	movlw	-5
 29806  014D3C  A0E3               	btfss	plusw1,0,c
 29807  014D3E  D01C               	goto	l8259
 29808  014D40  0E01               	movlw	1
 29809  014D42  6E0C               	movwf	(btemp+11)^0,c
 29810                           
 29811                           ;stkvar	_b @ sp[(-4)+-4]
 29812  014D44  50E1               	movf	fsr1l,w,c
 29813  014D46  0FF8               	addlw	-8
 29814  014D48  6ED9               	movwf	fsr2l,c
 29815  014D4A  50E2               	movf	fsr1h,w,c
 29816  014D4C  6EDA               	movwf	fsr2h,c
 29817  014D4E  0EFF               	movlw	255
 29818  014D50  22DA               	addwfc	fsr2h,f,c
 29819  014D52  280C               	incf	(btemp+11)^0,w,c
 29820  014D54  52DE               	movf	postinc2,f,c
 29821  014D56  D008               	goto	u6050
 29822  014D58                     u6055:
 29823  014D58  52DE               	movf	postinc2,f,c
 29824  014D5A  90D8               	bcf	status,0,c
 29825  014D5C  BEDC               	btfsc	preinc2,7,c
 29826  014D5E  80D8               	bsf	status,0,c
 29827  014D60  32DD               	rrcf	postdec2,f,c
 29828  014D62  32DD               	rrcf	postdec2,f,c
 29829  014D64  32DD               	rrcf	postdec2,f,c
 29830  014D66  32DE               	rrcf	postinc2,f,c
 29831  014D68                     u6050:
 29832  014D68  2EE8               	decfsz	wreg,f,c
 29833  014D6A  D7F6               	goto	u6055
 29834                           
 29835                           ;stkvar	_bexp @ sp[(-4)+1]
 29836  014D6C  0EFD               	movlw	-3
 29837  014D6E  28E3               	incf	plusw1,w,c
 29838  014D70  B4D8               	btfsc	status,2,c
 29839  014D72  D002               	goto	l8259
 29840                           
 29841                           ;stkvar	_bexp @ sp[(-4)+1]
 29842  014D74  0EFD               	movlw	-3
 29843  014D76  2AE3               	incf	plusw1,f,c
 29844  014D78                     l8259:
 29845                           
 29846                           ;stkvar	_bexp @ sp[(-4)+1]
 29847  014D78  0EFD               	movlw	-3
 29848  014D7A  28E3               	incf	plusw1,w,c
 29849  014D7C  B4D8               	btfsc	status,2,c
 29850  014D7E  D004               	goto	u6080
 29851                           
 29852                           ;stkvar	_bexp @ sp[(-4)+1]
 29853  014D80  0EFD               	movlw	-3
 29854  014D82  50E3               	movf	plusw1,w,c
 29855  014D84  A4D8               	btfss	status,2,c
 29856  014D86  D00E               	goto	l8269
 29857  014D88                     u6080:
 29858                           
 29859                           ;stkvar	_b @ sp[(-4)+-4]
 29860  014D88  0EF8               	movlw	-8
 29861  014D8A  6AE3               	clrf	plusw1,c
 29862  014D8C  0EF9               	movlw	-7
 29863  014D8E  6AE3               	clrf	plusw1,c
 29864  014D90  0EFA               	movlw	-6
 29865  014D92  6AE3               	clrf	plusw1,c
 29866  014D94  0EFB               	movlw	-5
 29867  014D96  6AE3               	clrf	plusw1,c
 29868                           
 29869                           ;stkvar	_bexp @ sp[(-4)+1]
 29870  014D98  0EFD               	movlw	-3
 29871  014D9A  50E3               	movf	plusw1,w,c
 29872  014D9C  A4D8               	btfss	status,2,c
 29873  014D9E  D002               	goto	l8269
 29874                           
 29875                           ;stkvar	_signs @ sp[(-4)+3]
 29876  014DA0  0EFF               	movlw	-1
 29877  014DA2  6AE3               	clrf	plusw1,c
 29878  014DA4                     l8269:
 29879                           
 29880                           ;stkvar	_bexp @ sp[(-4)+1]
 29881  014DA4  0EFD               	movlw	-3
 29882  014DA6  A0E3               	btfss	plusw1,0,c
 29883  014DA8  D009               	goto	l8273
 29884                           
 29885                           ;stkvar	_b @ sp[(-4)+-4]
 29886  014DAA  0EFA               	movlw	250
 29887  014DAC  24E1               	addwf	fsr1l,w,c
 29888  014DAE  6ED9               	movwf	fsr2l,c
 29889  014DB0  0EFF               	movlw	255
 29890  014DB2  20E2               	addwfc	fsr1h,w,c
 29891  014DB4  6EDA               	movwf	fsr2h,c
 29892  014DB6  0E00               	movlw	0
 29893  014DB8  8EDB               	bsf	plusw2,7,c
 29894  014DBA  D008               	goto	l8275
 29895  014DBC                     l8273:
 29896                           
 29897                           ;stkvar	_b @ sp[(-4)+-4]
 29898  014DBC  0EFA               	movlw	250
 29899  014DBE  24E1               	addwf	fsr1l,w,c
 29900  014DC0  6ED9               	movwf	fsr2l,c
 29901  014DC2  0EFF               	movlw	255
 29902  014DC4  20E2               	addwfc	fsr1h,w,c
 29903  014DC6  6EDA               	movwf	fsr2h,c
 29904  014DC8  0E7F               	movlw	127
 29905  014DCA  16DF               	andwf	indf2,f,c
 29906  014DCC                     l8275:
 29907                           
 29908                           ;stkvar	_b @ sp[(-4)+-4]
 29909  014DCC  0EFB               	movlw	251
 29910  014DCE  24E1               	addwf	fsr1l,w,c
 29911  014DD0  6ED9               	movwf	fsr2l,c
 29912  014DD2  0EFF               	movlw	255
 29913  014DD4  20E2               	addwfc	fsr1h,w,c
 29914  014DD6  6EDA               	movwf	fsr2h,c
 29915                           
 29916                           ;stkvar	_bexp @ sp[(-4)+1]
 29917  014DD8  0EFD               	movlw	-3
 29918  014DDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29919  014DE0  90D8               	bcf	status,0,c
 29920  014DE2  300C               	rrcf	(btemp+11)^0,w,c
 29921  014DE4  6EDF               	movwf	indf2,c
 29922                           
 29923                           ;stkvar	_signs @ sp[(-4)+3]
 29924  014DE6  0EFF               	movlw	-1
 29925  014DE8  AEE3               	btfss	plusw1,7,c
 29926  014DEA  D008               	goto	l8281
 29927                           
 29928                           ;stkvar	_b @ sp[(-4)+-4]
 29929  014DEC  0EFB               	movlw	251
 29930  014DEE  24E1               	addwf	fsr1l,w,c
 29931  014DF0  6ED9               	movwf	fsr2l,c
 29932  014DF2  0EFF               	movlw	255
 29933  014DF4  20E2               	addwfc	fsr1h,w,c
 29934  014DF6  6EDA               	movwf	fsr2h,c
 29935  014DF8  0E00               	movlw	0
 29936  014DFA  8EDB               	bsf	plusw2,7,c
 29937  014DFC                     l8281:
 29938                           
 29939                           ;stkvar	_b @ sp[(-4)+-4]
 29940  014DFC  0EF8               	movlw	-8
 29941  014DFE  006F FF8C  F001    	movff	plusw1,btemp
 29942  014E04  0EF9               	movlw	-7
 29943  014E06  006F FF8C  F002    	movff	plusw1,btemp+1
 29944  014E0C  0EFA               	movlw	-6
 29945  014E0E  006F FF8C  F003    	movff	plusw1,btemp+2
 29946  014E14  0EFB               	movlw	-5
 29947  014E16  006F FF8C  F004    	movff	plusw1,btemp+3
 29948  014E1C                     l3055:
 29949                           
 29950                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 29951  014E1C  0EF4               	movlw	244
 29952  014E1E  26E1               	addwf	fsr1l,f,c
 29953  014E20  0EFF               	movlw	255
 29954  014E22  22E2               	addwfc	fsr1h,f,c
 29955  014E24  0012               	return		;funcret
 29956  014E26                     __end_of___fladd:
 29957                           	opt callstack 0
 29958                           
 29959 ;; *************** function ___flmul *****************
 29960 ;; Defined at:
 29961 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 29962 ;; Parameters:    Size  Location     Type
 29963 ;;  b               4  [STACK] unsigned char 
 29964 ;;  a               4  [STACK] unsigned char 
 29965 ;; Auto vars:     Size  Location     Type
 29966 ;;  prod            4  [STACK] struct .
 29967 ;;  grs             4  [STACK] unsigned long 
 29968 ;;  temp            2  [STACK] struct .
 29969 ;;  bexp            1  [STACK] unsigned char 
 29970 ;;  aexp            1  [STACK] unsigned char 
 29971 ;;  sign            1  [STACK] unsigned char 
 29972 ;; Return value:  Size  Location     Type
 29973 ;;                  4  [STACK] unsigned char 
 29974 ;; Registers used:
 29975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29976 ;; Tracked objects:
 29977 ;;		On entry : 0/0
 29978 ;;		On exit  : 0/0
 29979 ;;		Unchanged: 0/0
 29980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29985 ;;Total ram usage:        0 bytes
 29986 ;; Hardware stack levels used:    1
 29987 ;; Hardware stack levels required when called:   15
 29988 ;; This function calls:
 29989 ;;		Nothing
 29990 ;; This function is called by:
 29991 ;;		_conv_raw_result
 29992 ;;		_lp_filter
 29993 ;;		_calc_model_data
 29994 ;;		_calc_bsoc
 29995 ;;		_init_bsoc
 29996 ;;		_efgtoa
 29997 ;; This function uses a reentrant model
 29998 ;;
 29999                           
 30000                           	psect	text116
 30001  013E40                     __ptext116:
 30002                           	opt callstack 0
 30003  013E40                     ___flmul:
 30004                           	opt callstack 0
 30005                           
 30006                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30007  013E40  0E0D               	movlw	13
 30008  013E42  26E1               	addwf	fsr1l,f,c
 30009  013E44  0E00               	movlw	0
 30010  013E46  22E2               	addwfc	fsr1h,f,c
 30011                           
 30012                           ;stkvar	_b @ sp[(-13)+-4]
 30013                           
 30014                           ;incstack = 0
 30015 ;; hardware stack exceeded
 30016  013E48  0EF2               	movlw	242
 30017  013E4A  24E1               	addwf	fsr1l,w,c
 30018  013E4C  6ED9               	movwf	fsr2l,c
 30019  013E4E  0EFF               	movlw	255
 30020  013E50  20E2               	addwfc	fsr1h,w,c
 30021  013E52  6EDA               	movwf	fsr2h,c
 30022  013E54  50DF               	movf	indf2,w,c
 30023  013E56  6E0C               	movwf	(btemp+11)^0,c
 30024  013E58  0E80               	movlw	128
 30025  013E5A  160C               	andwf	(btemp+11)^0,f,c
 30026                           
 30027                           ;stkvar	_sign @ sp[(-13)+12]
 30028  013E5C  0EFF               	movlw	-1
 30029  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30030                           
 30031                           ;stkvar	_b @ sp[(-13)+-4]
 30032  013E64  0EF2               	movlw	242
 30033  013E66  24E1               	addwf	fsr1l,w,c
 30034  013E68  6ED9               	movwf	fsr2l,c
 30035  013E6A  0EFF               	movlw	255
 30036  013E6C  20E2               	addwfc	fsr1h,w,c
 30037  013E6E  6EDA               	movwf	fsr2h,c
 30038  013E70  50DF               	movf	indf2,w,c
 30039  013E72  6E0C               	movwf	(btemp+11)^0,c
 30040  013E74  90D8               	bcf	status,0,c
 30041  013E76  340C               	rlcf	(btemp+11)^0,w,c
 30042  013E78  6E0B               	movwf	(btemp+10)^0,c
 30043                           
 30044                           ;stkvar	_bexp @ sp[(-13)+10]
 30045  013E7A  0EFD               	movlw	-3
 30046  013E7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30047                           
 30048                           ;stkvar	_b @ sp[(-13)+-4]
 30049  013E82  0EF1               	movlw	241
 30050  013E84  24E1               	addwf	fsr1l,w,c
 30051  013E86  6ED9               	movwf	fsr2l,c
 30052  013E88  0EFF               	movlw	255
 30053  013E8A  20E2               	addwfc	fsr1h,w,c
 30054  013E8C  6EDA               	movwf	fsr2h,c
 30055  013E8E  AEDF               	btfss	indf2,7,c
 30056  013E90  D002               	goto	l8707
 30057                           
 30058                           ;stkvar	_bexp @ sp[(-13)+10]
 30059  013E92  0EFD               	movlw	-3
 30060  013E94  80E3               	bsf	plusw1,0,c
 30061  013E96                     l8707:
 30062                           
 30063                           ;stkvar	_bexp @ sp[(-13)+10]
 30064  013E96  0EFD               	movlw	-3
 30065  013E98  50E3               	movf	plusw1,w,c
 30066  013E9A  B4D8               	btfsc	status,2,c
 30067  013E9C  D01F               	goto	l8715
 30068                           
 30069                           ;stkvar	_bexp @ sp[(-13)+10]
 30070  013E9E  0EFD               	movlw	-3
 30071  013EA0  28E3               	incf	plusw1,w,c
 30072  013EA2  A4D8               	btfss	status,2,c
 30073  013EA4  D018               	goto	l8713
 30074  013EA6  0E00               	movlw	0
 30075  013EA8  6E09               	movwf	(btemp+8)^0,c
 30076  013EAA  0E00               	movlw	0
 30077  013EAC  6E0A               	movwf	(btemp+9)^0,c
 30078  013EAE  0E00               	movlw	0
 30079  013EB0  6E0B               	movwf	(btemp+10)^0,c
 30080  013EB2  0E00               	movlw	0
 30081  013EB4  6E0C               	movwf	(btemp+11)^0,c
 30082                           
 30083                           ;stkvar	_b @ sp[(-13)+-4]
 30084  013EB6  0EEF               	movlw	-17
 30085  013EB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30086  013EBE  0EF0               	movlw	-16
 30087  013EC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30088  013EC6  0EF1               	movlw	-15
 30089  013EC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30090  013ECE  0EF2               	movlw	-14
 30091  013ED0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30092  013ED6                     l8713:
 30093                           
 30094                           ;stkvar	_b @ sp[(-13)+-4]
 30095  013ED6  0EF1               	movlw	-15
 30096  013ED8  8EE3               	bsf	plusw1,7,c
 30097  013EDA  D018               	goto	l8717
 30098  013EDC                     l8715:
 30099  013EDC  0E00               	movlw	0
 30100  013EDE  6E09               	movwf	(btemp+8)^0,c
 30101  013EE0  0E00               	movlw	0
 30102  013EE2  6E0A               	movwf	(btemp+9)^0,c
 30103  013EE4  0E00               	movlw	0
 30104  013EE6  6E0B               	movwf	(btemp+10)^0,c
 30105  013EE8  0E00               	movlw	0
 30106  013EEA  6E0C               	movwf	(btemp+11)^0,c
 30107                           
 30108                           ;stkvar	_b @ sp[(-13)+-4]
 30109  013EEC  0EEF               	movlw	-17
 30110  013EEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 30111  013EF4  0EF0               	movlw	-16
 30112  013EF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30113  013EFC  0EF1               	movlw	-15
 30114  013EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30115  013F04  0EF2               	movlw	-14
 30116  013F06  0060  F033  FFE3   	movff	btemp+11,plusw1
 30117  013F0C                     l8717:
 30118                           
 30119                           ;stkvar	_a @ sp[(-13)+-8]
 30120  013F0C  0EEE               	movlw	238
 30121  013F0E  24E1               	addwf	fsr1l,w,c
 30122  013F10  6ED9               	movwf	fsr2l,c
 30123  013F12  0EFF               	movlw	255
 30124  013F14  20E2               	addwfc	fsr1h,w,c
 30125  013F16  6EDA               	movwf	fsr2h,c
 30126  013F18  50DF               	movf	indf2,w,c
 30127  013F1A  6E0C               	movwf	(btemp+11)^0,c
 30128  013F1C  0E80               	movlw	128
 30129  013F1E  160C               	andwf	(btemp+11)^0,f,c
 30130                           
 30131                           ;stkvar	_sign @ sp[(-13)+12]
 30132  013F20  50E1               	movf	fsr1l,w,c
 30133  013F22  0FFF               	addlw	-1
 30134  013F24  6ED9               	movwf	fsr2l,c
 30135  013F26  50E2               	movf	fsr1h,w,c
 30136  013F28  6EDA               	movwf	fsr2h,c
 30137  013F2A  0EFF               	movlw	255
 30138  013F2C  22DA               	addwfc	fsr2h,f,c
 30139  013F2E  500C               	movf	(btemp+11)^0,w,c
 30140  013F30  1ADF               	xorwf	indf2,f,c
 30141                           
 30142                           ;stkvar	_a @ sp[(-13)+-8]
 30143  013F32  0EEE               	movlw	238
 30144  013F34  24E1               	addwf	fsr1l,w,c
 30145  013F36  6ED9               	movwf	fsr2l,c
 30146  013F38  0EFF               	movlw	255
 30147  013F3A  20E2               	addwfc	fsr1h,w,c
 30148  013F3C  6EDA               	movwf	fsr2h,c
 30149  013F3E  50DF               	movf	indf2,w,c
 30150  013F40  6E0C               	movwf	(btemp+11)^0,c
 30151  013F42  90D8               	bcf	status,0,c
 30152  013F44  340C               	rlcf	(btemp+11)^0,w,c
 30153  013F46  6E0B               	movwf	(btemp+10)^0,c
 30154                           
 30155                           ;stkvar	_aexp @ sp[(-13)+11]
 30156  013F48  0EFE               	movlw	-2
 30157  013F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30158                           
 30159                           ;stkvar	_a @ sp[(-13)+-8]
 30160  013F50  0EED               	movlw	237
 30161  013F52  24E1               	addwf	fsr1l,w,c
 30162  013F54  6ED9               	movwf	fsr2l,c
 30163  013F56  0EFF               	movlw	255
 30164  013F58  20E2               	addwfc	fsr1h,w,c
 30165  013F5A  6EDA               	movwf	fsr2h,c
 30166  013F5C  AEDF               	btfss	indf2,7,c
 30167  013F5E  D002               	goto	l8725
 30168                           
 30169                           ;stkvar	_aexp @ sp[(-13)+11]
 30170  013F60  0EFE               	movlw	-2
 30171  013F62  80E3               	bsf	plusw1,0,c
 30172  013F64                     l8725:
 30173                           
 30174                           ;stkvar	_aexp @ sp[(-13)+11]
 30175  013F64  0EFE               	movlw	-2
 30176  013F66  50E3               	movf	plusw1,w,c
 30177  013F68  B4D8               	btfsc	status,2,c
 30178  013F6A  D01F               	goto	l8733
 30179                           
 30180                           ;stkvar	_aexp @ sp[(-13)+11]
 30181  013F6C  0EFE               	movlw	-2
 30182  013F6E  28E3               	incf	plusw1,w,c
 30183  013F70  A4D8               	btfss	status,2,c
 30184  013F72  D018               	goto	l8731
 30185  013F74  0E00               	movlw	0
 30186  013F76  6E09               	movwf	(btemp+8)^0,c
 30187  013F78  0E00               	movlw	0
 30188  013F7A  6E0A               	movwf	(btemp+9)^0,c
 30189  013F7C  0E00               	movlw	0
 30190  013F7E  6E0B               	movwf	(btemp+10)^0,c
 30191  013F80  0E00               	movlw	0
 30192  013F82  6E0C               	movwf	(btemp+11)^0,c
 30193                           
 30194                           ;stkvar	_a @ sp[(-13)+-8]
 30195  013F84  0EEB               	movlw	-21
 30196  013F86  0060  F027  FFE3   	movff	btemp+8,plusw1
 30197  013F8C  0EEC               	movlw	-20
 30198  013F8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30199  013F94  0EED               	movlw	-19
 30200  013F96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30201  013F9C  0EEE               	movlw	-18
 30202  013F9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30203  013FA4                     l8731:
 30204                           
 30205                           ;stkvar	_a @ sp[(-13)+-8]
 30206  013FA4  0EED               	movlw	-19
 30207  013FA6  8EE3               	bsf	plusw1,7,c
 30208  013FA8  D018               	goto	l8735
 30209  013FAA                     l8733:
 30210  013FAA  0E00               	movlw	0
 30211  013FAC  6E09               	movwf	(btemp+8)^0,c
 30212  013FAE  0E00               	movlw	0
 30213  013FB0  6E0A               	movwf	(btemp+9)^0,c
 30214  013FB2  0E00               	movlw	0
 30215  013FB4  6E0B               	movwf	(btemp+10)^0,c
 30216  013FB6  0E00               	movlw	0
 30217  013FB8  6E0C               	movwf	(btemp+11)^0,c
 30218                           
 30219                           ;stkvar	_a @ sp[(-13)+-8]
 30220  013FBA  0EEB               	movlw	-21
 30221  013FBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 30222  013FC2  0EEC               	movlw	-20
 30223  013FC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30224  013FCA  0EED               	movlw	-19
 30225  013FCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30226  013FD2  0EEE               	movlw	-18
 30227  013FD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 30228  013FDA                     l8735:
 30229                           
 30230                           ;stkvar	_aexp @ sp[(-13)+11]
 30231  013FDA  0EFE               	movlw	-2
 30232  013FDC  50E3               	movf	plusw1,w,c
 30233  013FDE  B4D8               	btfsc	status,2,c
 30234  013FE0  D004               	goto	u7070
 30235                           
 30236                           ;stkvar	_bexp @ sp[(-13)+10]
 30237  013FE2  0EFD               	movlw	-3
 30238  013FE4  50E3               	movf	plusw1,w,c
 30239  013FE6  A4D8               	btfss	status,2,c
 30240  013FE8  D009               	goto	l8743
 30241  013FEA                     u7070:
 30242  013FEA  0E00               	movlw	0
 30243  013FEC  6E01               	movwf	btemp^0,c
 30244  013FEE  0E00               	movlw	0
 30245  013FF0  6E02               	movwf	(btemp+1)^0,c
 30246  013FF2  0E00               	movlw	0
 30247  013FF4  6E03               	movwf	(btemp+2)^0,c
 30248  013FF6  0E00               	movlw	0
 30249  013FF8  6E04               	movwf	(btemp+3)^0,c
 30250  013FFA  D332               	goto	l3136
 30251  013FFC                     l8743:
 30252                           
 30253                           ;stkvar	_b @ sp[(-13)+-4]
 30254  013FFC  0EEF               	movlw	-17
 30255  013FFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 30256                           
 30257                           ;stkvar	_a @ sp[(-13)+-8]
 30258  014004  0EED               	movlw	237
 30259  014006  24E1               	addwf	fsr1l,w,c
 30260  014008  6ED9               	movwf	fsr2l,c
 30261  01400A  0EFF               	movlw	255
 30262  01400C  20E2               	addwfc	fsr1h,w,c
 30263  01400E  6EDA               	movwf	fsr2h,c
 30264  014010  50DF               	movf	indf2,w,c
 30265  014012  020C               	mulwf	(btemp+11)^0,c
 30266                           
 30267                           ;stkvar	_temp @ sp[(-13)+8]
 30268  014014  0EFB               	movlw	-5
 30269  014016  006F FFCF FFE3     	movff	prodl,plusw1
 30270  01401C  0EFC               	movlw	-4
 30271  01401E  006F FFD3 FFE3     	movff	prodh,plusw1
 30272                           
 30273                           ;stkvar	_temp @ sp[(-13)+8]
 30274  014024  0EFB               	movlw	-5
 30275  014026  006F FF8C  F00C    	movff	plusw1,btemp+11
 30276  01402C  0060  F030  F005   	movff	btemp+11,btemp+4
 30277  014032  6A06               	clrf	(btemp+5)^0,c
 30278  014034  6A07               	clrf	(btemp+6)^0,c
 30279  014036  6A08               	clrf	(btemp+7)^0,c
 30280                           
 30281                           ;stkvar	_grs @ sp[(-13)+4]
 30282  014038  0EF7               	movlw	-9
 30283  01403A  0060  F017  FFE3   	movff	btemp+4,plusw1
 30284  014040  0EF8               	movlw	-8
 30285  014042  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30286  014048  0EF9               	movlw	-7
 30287  01404A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30288  014050  0EFA               	movlw	-6
 30289  014052  0060  F023  FFE3   	movff	btemp+7,plusw1
 30290                           
 30291                           ;stkvar	_temp @ sp[(-13)+8]
 30292  014058  0EFC               	movlw	252
 30293  01405A  24E1               	addwf	fsr1l,w,c
 30294  01405C  6ED9               	movwf	fsr2l,c
 30295  01405E  0EFF               	movlw	255
 30296  014060  20E2               	addwfc	fsr1h,w,c
 30297  014062  6EDA               	movwf	fsr2h,c
 30298  014064  50DF               	movf	indf2,w,c
 30299  014066  6E0C               	movwf	(btemp+11)^0,c
 30300  014068  0060  F030  F005   	movff	btemp+11,btemp+4
 30301  01406E  6A06               	clrf	(btemp+5)^0,c
 30302  014070  6A07               	clrf	(btemp+6)^0,c
 30303  014072  6A08               	clrf	(btemp+7)^0,c
 30304                           
 30305                           ;stkvar	_prod @ sp[(-13)+0]
 30306  014074  0EF3               	movlw	-13
 30307  014076  0060  F017  FFE3   	movff	btemp+4,plusw1
 30308  01407C  0EF4               	movlw	-12
 30309  01407E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30310  014084  0EF5               	movlw	-11
 30311  014086  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30312  01408C  0EF6               	movlw	-10
 30313  01408E  0060  F023  FFE3   	movff	btemp+7,plusw1
 30314                           
 30315                           ;stkvar	_b @ sp[(-13)+-4]
 30316  014094  0EF0               	movlw	240
 30317  014096  24E1               	addwf	fsr1l,w,c
 30318  014098  6ED9               	movwf	fsr2l,c
 30319  01409A  0EFF               	movlw	255
 30320  01409C  20E2               	addwfc	fsr1h,w,c
 30321  01409E  6EDA               	movwf	fsr2h,c
 30322  0140A0  50DF               	movf	indf2,w,c
 30323  0140A2  6E0C               	movwf	(btemp+11)^0,c
 30324                           
 30325                           ;stkvar	_a @ sp[(-13)+-8]
 30326  0140A4  0EEC               	movlw	236
 30327  0140A6  24E1               	addwf	fsr1l,w,c
 30328  0140A8  6ED9               	movwf	fsr2l,c
 30329  0140AA  0EFF               	movlw	255
 30330  0140AC  20E2               	addwfc	fsr1h,w,c
 30331  0140AE  6EDA               	movwf	fsr2h,c
 30332  0140B0  50DF               	movf	indf2,w,c
 30333  0140B2  020C               	mulwf	(btemp+11)^0,c
 30334                           
 30335                           ;stkvar	_temp @ sp[(-13)+8]
 30336  0140B4  0EFB               	movlw	-5
 30337  0140B6  006F FFCF FFE3     	movff	prodl,plusw1
 30338  0140BC  0EFC               	movlw	-4
 30339  0140BE  006F FFD3 FFE3     	movff	prodh,plusw1
 30340                           
 30341                           ;stkvar	_grs @ sp[(-13)+4]
 30342  0140C4  50E1               	movf	fsr1l,w,c
 30343  0140C6  0FF7               	addlw	-9
 30344  0140C8  6ED9               	movwf	fsr2l,c
 30345  0140CA  50E2               	movf	fsr1h,w,c
 30346  0140CC  6EDA               	movwf	fsr2h,c
 30347  0140CE  0EFF               	movlw	255
 30348  0140D0  22DA               	addwfc	fsr2h,f,c
 30349                           
 30350                           ;stkvar	_temp @ sp[(-13)+8]
 30351  0140D2  0EFB               	movlw	-5
 30352  0140D4  50E3               	movf	plusw1,w,c
 30353  0140D6  26DE               	addwf	postinc2,f,c
 30354  0140D8  0E00               	movlw	0
 30355  0140DA  22DE               	addwfc	postinc2,f,c
 30356  0140DC  22DE               	addwfc	postinc2,f,c
 30357  0140DE  22DE               	addwfc	postinc2,f,c
 30358                           
 30359                           ;stkvar	_prod @ sp[(-13)+0]
 30360  0140E0  50E1               	movf	fsr1l,w,c
 30361  0140E2  0FF3               	addlw	-13
 30362  0140E4  6ED9               	movwf	fsr2l,c
 30363  0140E6  50E2               	movf	fsr1h,w,c
 30364  0140E8  6EDA               	movwf	fsr2h,c
 30365  0140EA  0EFF               	movlw	255
 30366  0140EC  22DA               	addwfc	fsr2h,f,c
 30367                           
 30368                           ;stkvar	_temp @ sp[(-13)+8]
 30369  0140EE  0EFC               	movlw	252
 30370  0140F0  24E1               	addwf	fsr1l,w,c
 30371  0140F2  6EE9               	movwf	fsr0l,c
 30372  0140F4  0EFF               	movlw	255
 30373  0140F6  20E2               	addwfc	fsr1h,w,c
 30374  0140F8  6EEA               	movwf	fsr0h,c
 30375  0140FA  50EF               	movf	indf0,w,c
 30376  0140FC  26DE               	addwf	postinc2,f,c
 30377  0140FE  0E00               	movlw	0
 30378  014100  22DE               	addwfc	postinc2,f,c
 30379  014102  22DE               	addwfc	postinc2,f,c
 30380  014104  22DE               	addwfc	postinc2,f,c
 30381                           
 30382                           ;stkvar	_b @ sp[(-13)+-4]
 30383  014106  0EF1               	movlw	241
 30384  014108  24E1               	addwf	fsr1l,w,c
 30385  01410A  6ED9               	movwf	fsr2l,c
 30386  01410C  0EFF               	movlw	255
 30387  01410E  20E2               	addwfc	fsr1h,w,c
 30388  014110  6EDA               	movwf	fsr2h,c
 30389  014112  50DF               	movf	indf2,w,c
 30390  014114  6E0C               	movwf	(btemp+11)^0,c
 30391                           
 30392                           ;stkvar	_a @ sp[(-13)+-8]
 30393  014116  0EEB               	movlw	-21
 30394  014118  50E3               	movf	plusw1,w,c
 30395  01411A  020C               	mulwf	(btemp+11)^0,c
 30396                           
 30397                           ;stkvar	_temp @ sp[(-13)+8]
 30398  01411C  0EFB               	movlw	-5
 30399  01411E  006F FFCF FFE3     	movff	prodl,plusw1
 30400  014124  0EFC               	movlw	-4
 30401  014126  006F FFD3 FFE3     	movff	prodh,plusw1
 30402                           
 30403                           ;stkvar	_grs @ sp[(-13)+4]
 30404  01412C  50E1               	movf	fsr1l,w,c
 30405  01412E  0FF7               	addlw	-9
 30406  014130  6ED9               	movwf	fsr2l,c
 30407  014132  50E2               	movf	fsr1h,w,c
 30408  014134  6EDA               	movwf	fsr2h,c
 30409  014136  0EFF               	movlw	255
 30410  014138  22DA               	addwfc	fsr2h,f,c
 30411                           
 30412                           ;stkvar	_temp @ sp[(-13)+8]
 30413  01413A  0EFB               	movlw	-5
 30414  01413C  50E3               	movf	plusw1,w,c
 30415  01413E  26DE               	addwf	postinc2,f,c
 30416  014140  0E00               	movlw	0
 30417  014142  22DE               	addwfc	postinc2,f,c
 30418  014144  22DE               	addwfc	postinc2,f,c
 30419  014146  22DE               	addwfc	postinc2,f,c
 30420                           
 30421                           ;stkvar	_prod @ sp[(-13)+0]
 30422  014148  50E1               	movf	fsr1l,w,c
 30423  01414A  0FF3               	addlw	-13
 30424  01414C  6ED9               	movwf	fsr2l,c
 30425  01414E  50E2               	movf	fsr1h,w,c
 30426  014150  6EDA               	movwf	fsr2h,c
 30427  014152  0EFF               	movlw	255
 30428  014154  22DA               	addwfc	fsr2h,f,c
 30429                           
 30430                           ;stkvar	_temp @ sp[(-13)+8]
 30431  014156  0EFC               	movlw	252
 30432  014158  24E1               	addwf	fsr1l,w,c
 30433  01415A  6EE9               	movwf	fsr0l,c
 30434  01415C  0EFF               	movlw	255
 30435  01415E  20E2               	addwfc	fsr1h,w,c
 30436  014160  6EEA               	movwf	fsr0h,c
 30437  014162  50EF               	movf	indf0,w,c
 30438  014164  26DE               	addwf	postinc2,f,c
 30439  014166  0E00               	movlw	0
 30440  014168  22DE               	addwfc	postinc2,f,c
 30441  01416A  22DE               	addwfc	postinc2,f,c
 30442  01416C  22DE               	addwfc	postinc2,f,c
 30443                           
 30444                           ;stkvar	_grs @ sp[(-13)+4]
 30445  01416E  50E1               	movf	fsr1l,w,c
 30446  014170  0FF7               	addlw	-9
 30447  014172  6ED9               	movwf	fsr2l,c
 30448  014174  50E2               	movf	fsr1h,w,c
 30449  014176  6EDA               	movwf	fsr2h,c
 30450  014178  0EFF               	movlw	255
 30451  01417A  22DA               	addwfc	fsr2h,f,c
 30452  01417C  0E08               	movlw	8
 30453  01417E                     u7085:
 30454  01417E  90D8               	bcf	status,0,c
 30455  014180  36DE               	rlcf	postinc2,f,c
 30456  014182  36DE               	rlcf	postinc2,f,c
 30457  014184  36DE               	rlcf	postinc2,f,c
 30458  014186  36DD               	rlcf	postdec2,f,c
 30459  014188  52DD               	movf	postdec2,f,c
 30460  01418A  52DD               	movf	postdec2,f,c
 30461  01418C  2EE8               	decfsz	wreg,f,c
 30462  01418E  D7F7               	goto	u7085
 30463                           
 30464                           ;stkvar	_b @ sp[(-13)+-4]
 30465  014190  0EF0               	movlw	240
 30466  014192  24E1               	addwf	fsr1l,w,c
 30467  014194  6ED9               	movwf	fsr2l,c
 30468  014196  0EFF               	movlw	255
 30469  014198  20E2               	addwfc	fsr1h,w,c
 30470  01419A  6EDA               	movwf	fsr2h,c
 30471  01419C  50DF               	movf	indf2,w,c
 30472  01419E  6E0C               	movwf	(btemp+11)^0,c
 30473                           
 30474                           ;stkvar	_a @ sp[(-13)+-8]
 30475  0141A0  0EEB               	movlw	-21
 30476  0141A2  50E3               	movf	plusw1,w,c
 30477  0141A4  020C               	mulwf	(btemp+11)^0,c
 30478                           
 30479                           ;stkvar	_temp @ sp[(-13)+8]
 30480  0141A6  0EFB               	movlw	-5
 30481  0141A8  006F FFCF FFE3     	movff	prodl,plusw1
 30482  0141AE  0EFC               	movlw	-4
 30483  0141B0  006F FFD3 FFE3     	movff	prodh,plusw1
 30484                           
 30485                           ;stkvar	_temp @ sp[(-13)+8]
 30486  0141B6  0EFB               	movlw	-5
 30487  0141B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 30488  0141BE  0EFC               	movlw	-4
 30489  0141C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 30490                           
 30491                           ;stkvar	_grs @ sp[(-13)+4]
 30492  0141C6  50E1               	movf	fsr1l,w,c
 30493  0141C8  0FF7               	addlw	-9
 30494  0141CA  6ED9               	movwf	fsr2l,c
 30495  0141CC  50E2               	movf	fsr1h,w,c
 30496  0141CE  6EDA               	movwf	fsr2h,c
 30497  0141D0  0EFF               	movlw	255
 30498  0141D2  22DA               	addwfc	fsr2h,f,c
 30499  0141D4  500B               	movf	(btemp+10)^0,w,c
 30500  0141D6  26DE               	addwf	postinc2,f,c
 30501  0141D8  500C               	movf	(btemp+11)^0,w,c
 30502  0141DA  22DE               	addwfc	postinc2,f,c
 30503  0141DC  0E00               	movlw	0
 30504  0141DE  22DE               	addwfc	postinc2,f,c
 30505  0141E0  22DE               	addwfc	postinc2,f,c
 30506                           
 30507                           ;stkvar	_b @ sp[(-13)+-4]
 30508  0141E2  0EEF               	movlw	-17
 30509  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 30510                           
 30511                           ;stkvar	_a @ sp[(-13)+-8]
 30512  0141EA  0EEC               	movlw	236
 30513  0141EC  24E1               	addwf	fsr1l,w,c
 30514  0141EE  6ED9               	movwf	fsr2l,c
 30515  0141F0  0EFF               	movlw	255
 30516  0141F2  20E2               	addwfc	fsr1h,w,c
 30517  0141F4  6EDA               	movwf	fsr2h,c
 30518  0141F6  50DF               	movf	indf2,w,c
 30519  0141F8  020C               	mulwf	(btemp+11)^0,c
 30520                           
 30521                           ;stkvar	_temp @ sp[(-13)+8]
 30522  0141FA  0EFB               	movlw	-5
 30523  0141FC  006F FFCF FFE3     	movff	prodl,plusw1
 30524  014202  0EFC               	movlw	-4
 30525  014204  006F FFD3 FFE3     	movff	prodh,plusw1
 30526                           
 30527                           ;stkvar	_temp @ sp[(-13)+8]
 30528  01420A  0EFB               	movlw	-5
 30529  01420C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30530  014212  0EFC               	movlw	-4
 30531  014214  006F FF8C  F00C    	movff	plusw1,btemp+11
 30532                           
 30533                           ;stkvar	_grs @ sp[(-13)+4]
 30534  01421A  50E1               	movf	fsr1l,w,c
 30535  01421C  0FF7               	addlw	-9
 30536  01421E  6ED9               	movwf	fsr2l,c
 30537  014220  50E2               	movf	fsr1h,w,c
 30538  014222  6EDA               	movwf	fsr2h,c
 30539  014224  0EFF               	movlw	255
 30540  014226  22DA               	addwfc	fsr2h,f,c
 30541  014228  500B               	movf	(btemp+10)^0,w,c
 30542  01422A  26DE               	addwf	postinc2,f,c
 30543  01422C  500C               	movf	(btemp+11)^0,w,c
 30544  01422E  22DE               	addwfc	postinc2,f,c
 30545  014230  0E00               	movlw	0
 30546  014232  22DE               	addwfc	postinc2,f,c
 30547  014234  22DE               	addwfc	postinc2,f,c
 30548                           
 30549                           ;stkvar	_grs @ sp[(-13)+4]
 30550  014236  50E1               	movf	fsr1l,w,c
 30551  014238  0FF7               	addlw	-9
 30552  01423A  6ED9               	movwf	fsr2l,c
 30553  01423C  50E2               	movf	fsr1h,w,c
 30554  01423E  6EDA               	movwf	fsr2h,c
 30555  014240  0EFF               	movlw	255
 30556  014242  22DA               	addwfc	fsr2h,f,c
 30557  014244  0E08               	movlw	8
 30558  014246                     u7095:
 30559  014246  90D8               	bcf	status,0,c
 30560  014248  36DE               	rlcf	postinc2,f,c
 30561  01424A  36DE               	rlcf	postinc2,f,c
 30562  01424C  36DE               	rlcf	postinc2,f,c
 30563  01424E  36DD               	rlcf	postdec2,f,c
 30564  014250  52DD               	movf	postdec2,f,c
 30565  014252  52DD               	movf	postdec2,f,c
 30566  014254  2EE8               	decfsz	wreg,f,c
 30567  014256  D7F7               	goto	u7095
 30568                           
 30569                           ;stkvar	_b @ sp[(-13)+-4]
 30570  014258  0EEF               	movlw	-17
 30571  01425A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30572                           
 30573                           ;stkvar	_a @ sp[(-13)+-8]
 30574  014260  0EEB               	movlw	-21
 30575  014262  50E3               	movf	plusw1,w,c
 30576  014264  020C               	mulwf	(btemp+11)^0,c
 30577                           
 30578                           ;stkvar	_temp @ sp[(-13)+8]
 30579  014266  0EFB               	movlw	-5
 30580  014268  006F FFCF FFE3     	movff	prodl,plusw1
 30581  01426E  0EFC               	movlw	-4
 30582  014270  006F FFD3 FFE3     	movff	prodh,plusw1
 30583                           
 30584                           ;stkvar	_temp @ sp[(-13)+8]
 30585  014276  0EFB               	movlw	-5
 30586  014278  006F FF8C  F00B    	movff	plusw1,btemp+10
 30587  01427E  0EFC               	movlw	-4
 30588  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 30589                           
 30590                           ;stkvar	_grs @ sp[(-13)+4]
 30591  014286  50E1               	movf	fsr1l,w,c
 30592  014288  0FF7               	addlw	-9
 30593  01428A  6ED9               	movwf	fsr2l,c
 30594  01428C  50E2               	movf	fsr1h,w,c
 30595  01428E  6EDA               	movwf	fsr2h,c
 30596  014290  0EFF               	movlw	255
 30597  014292  22DA               	addwfc	fsr2h,f,c
 30598  014294  500B               	movf	(btemp+10)^0,w,c
 30599  014296  26DE               	addwf	postinc2,f,c
 30600  014298  500C               	movf	(btemp+11)^0,w,c
 30601  01429A  22DE               	addwfc	postinc2,f,c
 30602  01429C  0E00               	movlw	0
 30603  01429E  22DE               	addwfc	postinc2,f,c
 30604  0142A0  22DE               	addwfc	postinc2,f,c
 30605                           
 30606                           ;stkvar	_b @ sp[(-13)+-4]
 30607  0142A2  0EF0               	movlw	240
 30608  0142A4  24E1               	addwf	fsr1l,w,c
 30609  0142A6  6ED9               	movwf	fsr2l,c
 30610  0142A8  0EFF               	movlw	255
 30611  0142AA  20E2               	addwfc	fsr1h,w,c
 30612  0142AC  6EDA               	movwf	fsr2h,c
 30613  0142AE  50DF               	movf	indf2,w,c
 30614  0142B0  6E0C               	movwf	(btemp+11)^0,c
 30615                           
 30616                           ;stkvar	_a @ sp[(-13)+-8]
 30617  0142B2  0EED               	movlw	237
 30618  0142B4  24E1               	addwf	fsr1l,w,c
 30619  0142B6  6ED9               	movwf	fsr2l,c
 30620  0142B8  0EFF               	movlw	255
 30621  0142BA  20E2               	addwfc	fsr1h,w,c
 30622  0142BC  6EDA               	movwf	fsr2h,c
 30623  0142BE  50DF               	movf	indf2,w,c
 30624  0142C0  020C               	mulwf	(btemp+11)^0,c
 30625                           
 30626                           ;stkvar	_temp @ sp[(-13)+8]
 30627  0142C2  0EFB               	movlw	-5
 30628  0142C4  006F FFCF FFE3     	movff	prodl,plusw1
 30629  0142CA  0EFC               	movlw	-4
 30630  0142CC  006F FFD3 FFE3     	movff	prodh,plusw1
 30631                           
 30632                           ;stkvar	_temp @ sp[(-13)+8]
 30633  0142D2  0EFB               	movlw	-5
 30634  0142D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 30635  0142DA  0EFC               	movlw	-4
 30636  0142DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30637                           
 30638                           ;stkvar	_prod @ sp[(-13)+0]
 30639  0142E2  50E1               	movf	fsr1l,w,c
 30640  0142E4  0FF3               	addlw	-13
 30641  0142E6  6ED9               	movwf	fsr2l,c
 30642  0142E8  50E2               	movf	fsr1h,w,c
 30643  0142EA  6EDA               	movwf	fsr2h,c
 30644  0142EC  0EFF               	movlw	255
 30645  0142EE  22DA               	addwfc	fsr2h,f,c
 30646  0142F0  500B               	movf	(btemp+10)^0,w,c
 30647  0142F2  26DE               	addwf	postinc2,f,c
 30648  0142F4  500C               	movf	(btemp+11)^0,w,c
 30649  0142F6  22DE               	addwfc	postinc2,f,c
 30650  0142F8  0E00               	movlw	0
 30651  0142FA  22DE               	addwfc	postinc2,f,c
 30652  0142FC  22DE               	addwfc	postinc2,f,c
 30653                           
 30654                           ;stkvar	_b @ sp[(-13)+-4]
 30655  0142FE  0EF1               	movlw	241
 30656  014300  24E1               	addwf	fsr1l,w,c
 30657  014302  6ED9               	movwf	fsr2l,c
 30658  014304  0EFF               	movlw	255
 30659  014306  20E2               	addwfc	fsr1h,w,c
 30660  014308  6EDA               	movwf	fsr2h,c
 30661  01430A  50DF               	movf	indf2,w,c
 30662  01430C  6E0C               	movwf	(btemp+11)^0,c
 30663                           
 30664                           ;stkvar	_a @ sp[(-13)+-8]
 30665  01430E  0EEC               	movlw	236
 30666  014310  24E1               	addwf	fsr1l,w,c
 30667  014312  6ED9               	movwf	fsr2l,c
 30668  014314  0EFF               	movlw	255
 30669  014316  20E2               	addwfc	fsr1h,w,c
 30670  014318  6EDA               	movwf	fsr2h,c
 30671  01431A  50DF               	movf	indf2,w,c
 30672  01431C  020C               	mulwf	(btemp+11)^0,c
 30673                           
 30674                           ;stkvar	_temp @ sp[(-13)+8]
 30675  01431E  0EFB               	movlw	-5
 30676  014320  006F FFCF FFE3     	movff	prodl,plusw1
 30677  014326  0EFC               	movlw	-4
 30678  014328  006F FFD3 FFE3     	movff	prodh,plusw1
 30679                           
 30680                           ;stkvar	_temp @ sp[(-13)+8]
 30681  01432E  0EFB               	movlw	-5
 30682  014330  006F FF8C  F00B    	movff	plusw1,btemp+10
 30683  014336  0EFC               	movlw	-4
 30684  014338  006F FF8C  F00C    	movff	plusw1,btemp+11
 30685                           
 30686                           ;stkvar	_prod @ sp[(-13)+0]
 30687  01433E  50E1               	movf	fsr1l,w,c
 30688  014340  0FF3               	addlw	-13
 30689  014342  6ED9               	movwf	fsr2l,c
 30690  014344  50E2               	movf	fsr1h,w,c
 30691  014346  6EDA               	movwf	fsr2h,c
 30692  014348  0EFF               	movlw	255
 30693  01434A  22DA               	addwfc	fsr2h,f,c
 30694  01434C  500B               	movf	(btemp+10)^0,w,c
 30695  01434E  26DE               	addwf	postinc2,f,c
 30696  014350  500C               	movf	(btemp+11)^0,w,c
 30697  014352  22DE               	addwfc	postinc2,f,c
 30698  014354  0E00               	movlw	0
 30699  014356  22DE               	addwfc	postinc2,f,c
 30700  014358  22DE               	addwfc	postinc2,f,c
 30701                           
 30702                           ;stkvar	_b @ sp[(-13)+-4]
 30703  01435A  0EF1               	movlw	241
 30704  01435C  24E1               	addwf	fsr1l,w,c
 30705  01435E  6ED9               	movwf	fsr2l,c
 30706  014360  0EFF               	movlw	255
 30707  014362  20E2               	addwfc	fsr1h,w,c
 30708  014364  6EDA               	movwf	fsr2h,c
 30709  014366  50DF               	movf	indf2,w,c
 30710  014368  6E0C               	movwf	(btemp+11)^0,c
 30711                           
 30712                           ;stkvar	_a @ sp[(-13)+-8]
 30713  01436A  0EED               	movlw	237
 30714  01436C  24E1               	addwf	fsr1l,w,c
 30715  01436E  6ED9               	movwf	fsr2l,c
 30716  014370  0EFF               	movlw	255
 30717  014372  20E2               	addwfc	fsr1h,w,c
 30718  014374  6EDA               	movwf	fsr2h,c
 30719  014376  50DF               	movf	indf2,w,c
 30720  014378  020C               	mulwf	(btemp+11)^0,c
 30721                           
 30722                           ;stkvar	_temp @ sp[(-13)+8]
 30723  01437A  0EFB               	movlw	-5
 30724  01437C  006F FFCF FFE3     	movff	prodl,plusw1
 30725  014382  0EFC               	movlw	-4
 30726  014384  006F FFD3 FFE3     	movff	prodh,plusw1
 30727                           
 30728                           ;stkvar	_temp @ sp[(-13)+8]
 30729  01438A  0EFB               	movlw	-5
 30730  01438C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30731  014392  0EFC               	movlw	-4
 30732  014394  006F FF8C  F00C    	movff	plusw1,btemp+11
 30733  01439A  500B               	movf	(btemp+10)^0,w,c
 30734  01439C  6E05               	movwf	(btemp+4)^0,c
 30735  01439E  500C               	movf	(btemp+11)^0,w,c
 30736  0143A0  6E06               	movwf	(btemp+5)^0,c
 30737  0143A2  6A07               	clrf	(btemp+6)^0,c
 30738  0143A4  6A08               	clrf	(btemp+7)^0,c
 30739  0143A6  0060  F01C  F008   	movff	btemp+6,btemp+7
 30740  0143AC  0060  F018  F007   	movff	btemp+5,btemp+6
 30741  0143B2  0060  F014  F006   	movff	btemp+4,btemp+5
 30742  0143B8  6A05               	clrf	(btemp+4)^0,c
 30743                           
 30744                           ;stkvar	_prod @ sp[(-13)+0]
 30745  0143BA  50E1               	movf	fsr1l,w,c
 30746  0143BC  0FF3               	addlw	-13
 30747  0143BE  6ED9               	movwf	fsr2l,c
 30748  0143C0  50E2               	movf	fsr1h,w,c
 30749  0143C2  6EDA               	movwf	fsr2h,c
 30750  0143C4  0EFF               	movlw	255
 30751  0143C6  22DA               	addwfc	fsr2h,f,c
 30752  0143C8  5005               	movf	(btemp+4)^0,w,c
 30753  0143CA  26DE               	addwf	postinc2,f,c
 30754  0143CC  5006               	movf	(btemp+5)^0,w,c
 30755  0143CE  22DE               	addwfc	postinc2,f,c
 30756  0143D0  5007               	movf	(btemp+6)^0,w,c
 30757  0143D2  22DE               	addwfc	postinc2,f,c
 30758  0143D4  5008               	movf	(btemp+7)^0,w,c
 30759  0143D6  22DE               	addwfc	postinc2,f,c
 30760                           
 30761                           ;stkvar	_prod @ sp[(-13)+0]
 30762  0143D8  50E1               	movf	fsr1l,w,c
 30763  0143DA  0FF3               	addlw	-13
 30764  0143DC  6ED9               	movwf	fsr2l,c
 30765  0143DE  50E2               	movf	fsr1h,w,c
 30766  0143E0  6EDA               	movwf	fsr2h,c
 30767  0143E2  0EFF               	movlw	255
 30768  0143E4  22DA               	addwfc	fsr2h,f,c
 30769                           
 30770                           ;stkvar	_grs @ sp[(-13)+4]
 30771  0143E6  0EFA               	movlw	250
 30772  0143E8  24E1               	addwf	fsr1l,w,c
 30773  0143EA  6EE9               	movwf	fsr0l,c
 30774  0143EC  0EFF               	movlw	255
 30775  0143EE  20E2               	addwfc	fsr1h,w,c
 30776  0143F0  6EEA               	movwf	fsr0h,c
 30777  0143F2  50EF               	movf	indf0,w,c
 30778  0143F4  26DE               	addwf	postinc2,f,c
 30779  0143F6  0E00               	movlw	0
 30780  0143F8  22DE               	addwfc	postinc2,f,c
 30781  0143FA  22DE               	addwfc	postinc2,f,c
 30782  0143FC  22DE               	addwfc	postinc2,f,c
 30783                           
 30784                           ;stkvar	_grs @ sp[(-13)+4]
 30785  0143FE  50E1               	movf	fsr1l,w,c
 30786  014400  0FF7               	addlw	-9
 30787  014402  6ED9               	movwf	fsr2l,c
 30788  014404  50E2               	movf	fsr1h,w,c
 30789  014406  6EDA               	movwf	fsr2h,c
 30790  014408  0EFF               	movlw	255
 30791  01440A  22DA               	addwfc	fsr2h,f,c
 30792  01440C  0E08               	movlw	8
 30793  01440E                     u7105:
 30794  01440E  90D8               	bcf	status,0,c
 30795  014410  36DE               	rlcf	postinc2,f,c
 30796  014412  36DE               	rlcf	postinc2,f,c
 30797  014414  36DE               	rlcf	postinc2,f,c
 30798  014416  36DD               	rlcf	postdec2,f,c
 30799  014418  52DD               	movf	postdec2,f,c
 30800  01441A  52DD               	movf	postdec2,f,c
 30801  01441C  2EE8               	decfsz	wreg,f,c
 30802  01441E  D7F7               	goto	u7105
 30803  014420  0E82               	movlw	130
 30804  014422  6E0B               	movwf	(btemp+10)^0,c
 30805  014424  0EFF               	movlw	255
 30806  014426  6E0C               	movwf	(btemp+11)^0,c
 30807                           
 30808                           ;stkvar	_bexp @ sp[(-13)+10]
 30809  014428  0EFD               	movlw	-3
 30810  01442A  50E3               	movf	plusw1,w,c
 30811  01442C  6E09               	movwf	(btemp+8)^0,c
 30812  01442E  6A0A               	clrf	(btemp+9)^0,c
 30813                           
 30814                           ;stkvar	_aexp @ sp[(-13)+11]
 30815  014430  0EFE               	movlw	-2
 30816  014432  50E3               	movf	plusw1,w,c
 30817  014434  2609               	addwf	(btemp+8)^0,f,c
 30818  014436  0E00               	movlw	0
 30819  014438  220A               	addwfc	(btemp+9)^0,f,c
 30820  01443A  500B               	movf	(btemp+10)^0,w,c
 30821  01443C  2609               	addwf	(btemp+8)^0,f,c
 30822  01443E  500C               	movf	(btemp+11)^0,w,c
 30823  014440  220A               	addwfc	(btemp+9)^0,f,c
 30824                           
 30825                           ;stkvar	_temp @ sp[(-13)+8]
 30826  014442  0EFB               	movlw	-5
 30827  014444  0060  F027  FFE3   	movff	btemp+8,plusw1
 30828  01444A  0EFC               	movlw	-4
 30829  01444C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30830  014452  D021               	goto	l8805
 30831  014454                     l8795:
 30832                           
 30833                           ;stkvar	_prod @ sp[(-13)+0]
 30834  014454  90D8               	bcf	status,0,c
 30835  014456  0EF3               	movlw	-13
 30836  014458  36E3               	rlcf	plusw1,f,c
 30837  01445A  0EF4               	movlw	-12
 30838  01445C  36E3               	rlcf	plusw1,f,c
 30839  01445E  0EF5               	movlw	-11
 30840  014460  36E3               	rlcf	plusw1,f,c
 30841  014462  0EF6               	movlw	-10
 30842  014464  36E3               	rlcf	plusw1,f,c
 30843                           
 30844                           ;stkvar	_grs @ sp[(-13)+4]
 30845  014466  0EFA               	movlw	-6
 30846  014468  AEE3               	btfss	plusw1,7,c
 30847  01446A  D002               	goto	l8801
 30848                           
 30849                           ;stkvar	_prod @ sp[(-13)+0]
 30850  01446C  0EF3               	movlw	-13
 30851  01446E  80E3               	bsf	plusw1,0,c
 30852  014470                     l8801:
 30853                           
 30854                           ;stkvar	_grs @ sp[(-13)+4]
 30855  014470  90D8               	bcf	status,0,c
 30856  014472  0EF7               	movlw	-9
 30857  014474  36E3               	rlcf	plusw1,f,c
 30858  014476  0EF8               	movlw	-8
 30859  014478  36E3               	rlcf	plusw1,f,c
 30860  01447A  0EF9               	movlw	-7
 30861  01447C  36E3               	rlcf	plusw1,f,c
 30862  01447E  0EFA               	movlw	-6
 30863  014480  36E3               	rlcf	plusw1,f,c
 30864                           
 30865                           ;stkvar	_temp @ sp[(-13)+8]
 30866  014482  50E1               	movf	fsr1l,w,c
 30867  014484  0FFB               	addlw	-5
 30868  014486  6ED9               	movwf	fsr2l,c
 30869  014488  50E2               	movf	fsr1h,w,c
 30870  01448A  6EDA               	movwf	fsr2h,c
 30871  01448C  0EFF               	movlw	255
 30872  01448E  22DA               	addwfc	fsr2h,f,c
 30873  014490  06DE               	decf	postinc2,f,c
 30874  014492  0E00               	movlw	0
 30875  014494  5ADD               	subwfb	postdec2,f,c
 30876  014496                     l8805:
 30877                           
 30878                           ;stkvar	_prod @ sp[(-13)+0]
 30879  014496  0EF5               	movlw	-11
 30880  014498  AEE3               	btfss	plusw1,7,c
 30881  01449A  D7DC               	goto	l8795
 30882                           
 30883                           ;stkvar	_aexp @ sp[(-13)+11]
 30884  01449C  0EFE               	movlw	-2
 30885  01449E  6AE3               	clrf	plusw1,c
 30886                           
 30887                           ;stkvar	_grs @ sp[(-13)+4]
 30888  0144A0  0EFA               	movlw	-6
 30889  0144A2  AEE3               	btfss	plusw1,7,c
 30890  0144A4  D020               	goto	l8819
 30891                           
 30892                           ;stkvar	_grs @ sp[(-13)+4]
 30893  0144A6  50E1               	movf	fsr1l,w,c
 30894  0144A8  0FF7               	addlw	-9
 30895  0144AA  6ED9               	movwf	fsr2l,c
 30896  0144AC  50E2               	movf	fsr1h,w,c
 30897  0144AE  6EDA               	movwf	fsr2h,c
 30898  0144B0  0EFF               	movlw	255
 30899  0144B2  22DA               	addwfc	fsr2h,f,c
 30900  0144B4  0EFF               	movlw	255
 30901  0144B6  14DE               	andwf	postinc2,w,c
 30902  0144B8  6E09               	movwf	(btemp+8)^0,c
 30903  0144BA  0EFF               	movlw	255
 30904  0144BC  14DE               	andwf	postinc2,w,c
 30905  0144BE  6E0A               	movwf	(btemp+9)^0,c
 30906  0144C0  0EFF               	movlw	255
 30907  0144C2  14DE               	andwf	postinc2,w,c
 30908  0144C4  6E0B               	movwf	(btemp+10)^0,c
 30909  0144C6  0E7F               	movlw	127
 30910  0144C8  14DE               	andwf	postinc2,w,c
 30911  0144CA  6E0C               	movwf	(btemp+11)^0,c
 30912  0144CC  5009               	movf	(btemp+8)^0,w,c
 30913  0144CE  100A               	iorwf	(btemp+9)^0,w,c
 30914  0144D0  100B               	iorwf	(btemp+10)^0,w,c
 30915  0144D2  100C               	iorwf	(btemp+11)^0,w,c
 30916  0144D4  B4D8               	btfsc	status,2,c
 30917  0144D6  D004               	goto	l8815
 30918  0144D8                     u7140:
 30919                           
 30920                           ;stkvar	_aexp @ sp[(-13)+11]
 30921  0144D8  0EFE               	movlw	-2
 30922  0144DA  6AE3               	clrf	plusw1,c
 30923  0144DC  2AE3               	incf	plusw1,f,c
 30924  0144DE  D003               	goto	l8819
 30925  0144E0                     l8815:
 30926                           
 30927                           ;stkvar	_prod @ sp[(-13)+0]
 30928  0144E0  0EF3               	movlw	-13
 30929  0144E2  B0E3               	btfsc	plusw1,0,c
 30930  0144E4  D7F9               	goto	u7140
 30931  0144E6                     l8819:
 30932                           
 30933                           ;stkvar	_aexp @ sp[(-13)+11]
 30934  0144E6  0EFE               	movlw	-2
 30935  0144E8  50E3               	movf	plusw1,w,c
 30936  0144EA  B4D8               	btfsc	status,2,c
 30937  0144EC  D036               	goto	l8829
 30938                           
 30939                           ;stkvar	_prod @ sp[(-13)+0]
 30940  0144EE  50E1               	movf	fsr1l,w,c
 30941  0144F0  0FF3               	addlw	-13
 30942  0144F2  6ED9               	movwf	fsr2l,c
 30943  0144F4  50E2               	movf	fsr1h,w,c
 30944  0144F6  6EDA               	movwf	fsr2h,c
 30945  0144F8  0EFF               	movlw	255
 30946  0144FA  22DA               	addwfc	fsr2h,f,c
 30947  0144FC  2ADE               	incf	postinc2,f,c
 30948  0144FE  0E00               	movlw	0
 30949  014500  22DE               	addwfc	postinc2,f,c
 30950  014502  22DE               	addwfc	postinc2,f,c
 30951  014504  22DE               	addwfc	postinc2,f,c
 30952                           
 30953                           ;stkvar	_prod @ sp[(-13)+0]
 30954  014506  0EF6               	movlw	-10
 30955  014508  A0E3               	btfss	plusw1,0,c
 30956  01450A  D027               	goto	l8829
 30957  01450C  0E01               	movlw	1
 30958  01450E  6E0C               	movwf	(btemp+11)^0,c
 30959                           
 30960                           ;stkvar	_prod @ sp[(-13)+0]
 30961  014510  50E1               	movf	fsr1l,w,c
 30962  014512  0FF3               	addlw	-13
 30963  014514  6ED9               	movwf	fsr2l,c
 30964  014516  50E2               	movf	fsr1h,w,c
 30965  014518  6EDA               	movwf	fsr2h,c
 30966  01451A  0EFF               	movlw	255
 30967  01451C  22DA               	addwfc	fsr2h,f,c
 30968  01451E  280C               	incf	(btemp+11)^0,w,c
 30969  014520  52DE               	movf	postinc2,f,c
 30970  014522  D008               	goto	u7180
 30971  014524                     u7185:
 30972  014524  52DE               	movf	postinc2,f,c
 30973  014526  90D8               	bcf	status,0,c
 30974  014528  BEDC               	btfsc	preinc2,7,c
 30975  01452A  80D8               	bsf	status,0,c
 30976  01452C  32DD               	rrcf	postdec2,f,c
 30977  01452E  32DD               	rrcf	postdec2,f,c
 30978  014530  32DD               	rrcf	postdec2,f,c
 30979  014532  32DE               	rrcf	postinc2,f,c
 30980  014534                     u7180:
 30981  014534  2EE8               	decfsz	wreg,f,c
 30982  014536  D7F6               	goto	u7185
 30983                           
 30984                           ;stkvar	_temp @ sp[(-13)+8]
 30985  014538  0EFB               	movlw	-5
 30986  01453A  50E3               	movf	plusw1,w,c
 30987  01453C  0F01               	addlw	1
 30988  01453E  6E01               	movwf	btemp^0,c
 30989  014540  0EFB               	movlw	-5
 30990  014542  0060  F007  FFE3   	movff	btemp,plusw1
 30991  014548  6A01               	clrf	btemp^0,c
 30992  01454A  0EFC               	movlw	-4
 30993  01454C  50E3               	movf	plusw1,w,c
 30994  01454E  2001               	addwfc	btemp^0,w,c
 30995  014550  6E01               	movwf	btemp^0,c
 30996  014552  0EFC               	movlw	-4
 30997  014554  0060  F007  FFE3   	movff	btemp,plusw1
 30998  01455A                     l8829:
 30999                           
 31000                           ;stkvar	_temp @ sp[(-13)+8]
 31001  01455A  0EFC               	movlw	-4
 31002  01455C  BEE3               	btfsc	plusw1,7,c
 31003  01455E  D020               	goto	l8833
 31004  014560  0EFC               	movlw	-4
 31005  014562  50E3               	movf	plusw1,w,c
 31006  014564  E104               	bnz	u7190
 31007  014566  0EFB               	movlw	-5
 31008  014568  28E3               	incf	plusw1,w,c
 31009  01456A  A0D8               	btfss	status,0,c
 31010  01456C  D019               	goto	l8833
 31011  01456E                     u7190:
 31012  01456E  0E00               	movlw	0
 31013  014570  6E09               	movwf	(btemp+8)^0,c
 31014  014572  0E00               	movlw	0
 31015  014574  6E0A               	movwf	(btemp+9)^0,c
 31016  014576  0E80               	movlw	128
 31017  014578  6E0B               	movwf	(btemp+10)^0,c
 31018  01457A  0E7F               	movlw	127
 31019  01457C  6E0C               	movwf	(btemp+11)^0,c
 31020                           
 31021                           ;stkvar	_prod @ sp[(-13)+0]
 31022  01457E  0EF3               	movlw	-13
 31023  014580  0060  F027  FFE3   	movff	btemp+8,plusw1
 31024  014586  0EF4               	movlw	-12
 31025  014588  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31026  01458E  0EF5               	movlw	-11
 31027  014590  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31028  014596  0EF6               	movlw	-10
 31029  014598  0060  F033  FFE3   	movff	btemp+11,plusw1
 31030  01459E  D044               	goto	l8849
 31031  0145A0                     l8833:
 31032                           
 31033                           ;stkvar	_temp @ sp[(-13)+8]
 31034  0145A0  0EFC               	movlw	-4
 31035  0145A2  BEE3               	btfsc	plusw1,7,c
 31036  0145A4  D007               	goto	u7200
 31037  0145A6  0EFC               	movlw	-4
 31038  0145A8  50E3               	movf	plusw1,w,c
 31039  0145AA  E10F               	bnz	l8839
 31040  0145AC  0EFB               	movlw	-5
 31041  0145AE  04E3               	decf	plusw1,w,c
 31042  0145B0  B0D8               	btfsc	status,0,c
 31043  0145B2  D00B               	goto	l8839
 31044  0145B4                     u7200:
 31045                           
 31046                           ;stkvar	_prod @ sp[(-13)+0]
 31047  0145B4  0EF3               	movlw	-13
 31048  0145B6  6AE3               	clrf	plusw1,c
 31049  0145B8  0EF4               	movlw	-12
 31050  0145BA  6AE3               	clrf	plusw1,c
 31051  0145BC  0EF5               	movlw	-11
 31052  0145BE  6AE3               	clrf	plusw1,c
 31053  0145C0  0EF6               	movlw	-10
 31054  0145C2  6AE3               	clrf	plusw1,c
 31055                           
 31056                           ;stkvar	_sign @ sp[(-13)+12]
 31057  0145C4  0EFF               	movlw	-1
 31058  0145C6  6AE3               	clrf	plusw1,c
 31059  0145C8  D02F               	goto	l8849
 31060  0145CA                     l8839:
 31061                           
 31062                           ;stkvar	_temp @ sp[(-13)+8]
 31063                           ;stkvar	_bexp @ sp[(-13)+10]
 31064  0145CA  0EFB               	movlw	-5
 31065  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 31066  0145D2  0EFD               	movlw	-3
 31067  0145D4  0060  F007  FFE3   	movff	btemp,plusw1
 31068                           
 31069                           ;stkvar	_prod @ sp[(-13)+0]
 31070  0145DA  50E1               	movf	fsr1l,w,c
 31071  0145DC  0FF3               	addlw	-13
 31072  0145DE  6ED9               	movwf	fsr2l,c
 31073  0145E0  50E2               	movf	fsr1h,w,c
 31074  0145E2  6EDA               	movwf	fsr2h,c
 31075  0145E4  0EFF               	movlw	255
 31076  0145E6  22DA               	addwfc	fsr2h,f,c
 31077  0145E8  0EFF               	movlw	255
 31078  0145EA  16DE               	andwf	postinc2,f,c
 31079  0145EC  0EFF               	movlw	255
 31080  0145EE  16DE               	andwf	postinc2,f,c
 31081  0145F0  0E7F               	movlw	127
 31082  0145F2  16DE               	andwf	postinc2,f,c
 31083  0145F4  0E00               	movlw	0
 31084  0145F6  16DE               	andwf	postinc2,f,c
 31085                           
 31086                           ;stkvar	_bexp @ sp[(-13)+10]
 31087  0145F8  0EFD               	movlw	-3
 31088  0145FA  A0E3               	btfss	plusw1,0,c
 31089  0145FC  D008               	goto	l8847
 31090                           
 31091                           ;stkvar	_prod @ sp[(-13)+0]
 31092  0145FE  0EF5               	movlw	245
 31093  014600  24E1               	addwf	fsr1l,w,c
 31094  014602  6ED9               	movwf	fsr2l,c
 31095  014604  0EFF               	movlw	255
 31096  014606  20E2               	addwfc	fsr1h,w,c
 31097  014608  6EDA               	movwf	fsr2h,c
 31098  01460A  0E00               	movlw	0
 31099  01460C  8EDB               	bsf	plusw2,7,c
 31100  01460E                     l8847:
 31101                           
 31102                           ;stkvar	_prod @ sp[(-13)+0]
 31103  01460E  0EF6               	movlw	246
 31104  014610  24E1               	addwf	fsr1l,w,c
 31105  014612  6ED9               	movwf	fsr2l,c
 31106  014614  0EFF               	movlw	255
 31107  014616  20E2               	addwfc	fsr1h,w,c
 31108  014618  6EDA               	movwf	fsr2h,c
 31109                           
 31110                           ;stkvar	_bexp @ sp[(-13)+10]
 31111  01461A  0EFD               	movlw	-3
 31112  01461C  006F FF8C  F00C    	movff	plusw1,btemp+11
 31113  014622  90D8               	bcf	status,0,c
 31114  014624  300C               	rrcf	(btemp+11)^0,w,c
 31115  014626  6EDF               	movwf	indf2,c
 31116  014628                     l8849:
 31117                           
 31118                           ;stkvar	_sign @ sp[(-13)+12]
 31119  014628  0EFF               	movlw	-1
 31120  01462A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31121                           
 31122                           ;stkvar	_prod @ sp[(-13)+0]
 31123  014630  0EF6               	movlw	246
 31124  014632  24E1               	addwf	fsr1l,w,c
 31125  014634  6ED9               	movwf	fsr2l,c
 31126  014636  0EFF               	movlw	255
 31127  014638  20E2               	addwfc	fsr1h,w,c
 31128  01463A  6EDA               	movwf	fsr2h,c
 31129  01463C  500C               	movf	(btemp+11)^0,w,c
 31130  01463E  12DF               	iorwf	indf2,f,c
 31131                           
 31132                           ;stkvar	_prod @ sp[(-13)+0]
 31133  014640  0EF3               	movlw	-13
 31134  014642  006F FF8C  F001    	movff	plusw1,btemp
 31135  014648  0EF4               	movlw	-12
 31136  01464A  006F FF8C  F002    	movff	plusw1,btemp+1
 31137  014650  0EF5               	movlw	-11
 31138  014652  006F FF8C  F003    	movff	plusw1,btemp+2
 31139  014658  0EF6               	movlw	-10
 31140  01465A  006F FF8C  F004    	movff	plusw1,btemp+3
 31141  014660                     l3136:
 31142                           
 31143                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 31144  014660  0EEB               	movlw	235
 31145  014662  26E1               	addwf	fsr1l,f,c
 31146  014664  0EFF               	movlw	255
 31147  014666  22E2               	addwfc	fsr1h,f,c
 31148  014668  0012               	return		;funcret
 31149  01466A                     __end_of___flmul:
 31150                           	opt callstack 0
 31151                           
 31152 ;; *************** function _SYSTEM_Initialize *****************
 31153 ;; Defined at:
 31154 ;;		line 50 in file "mcc_generated_files/mcc.c"
 31155 ;; Parameters:    Size  Location     Type
 31156 ;;		None
 31157 ;; Auto vars:     Size  Location     Type
 31158 ;;		None
 31159 ;; Return value:  Size  Location     Type
 31160 ;;                  1  [STACK] void 
 31161 ;; Registers used:
 31162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 31163 ;; Tracked objects:
 31164 ;;		On entry : 0/0
 31165 ;;		On exit  : 3F/3C
 31166 ;;		Unchanged: 0/0
 31167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31172 ;;Total ram usage:        0 bytes
 31173 ;; Hardware stack levels used:    1
 31174 ;; Hardware stack levels required when called:   17
 31175 ;; This function calls:
 31176 ;;		_ADCC_Initialize
 31177 ;;		_CLKREF_Initialize
 31178 ;;		_DMA1_Initialize
 31179 ;;		_DMA2_Initialize
 31180 ;;		_EXT_INT_Initialize
 31181 ;;		_FVR_Initialize
 31182 ;;		_INTERRUPT_Initialize
 31183 ;;		_OSCILLATOR_Initialize
 31184 ;;		_PIN_MANAGER_Initialize
 31185 ;;		_PMD_Initialize
 31186 ;;		_PWM8_Initialize
 31187 ;;		_SPI1_Initialize
 31188 ;;		_TMR2_Initialize
 31189 ;;		_TMR3_Initialize
 31190 ;;		_TMR5_Initialize
 31191 ;;		_TMR6_Initialize
 31192 ;;		_UART1_Initialize
 31193 ;;		_UART2_Initialize
 31194 ;; This function is called by:
 31195 ;;		_main
 31196 ;; This function uses a reentrant model
 31197 ;;
 31198                           
 31199                           	psect	text117
 31200  01BDD8                     __ptext117:
 31201                           	opt callstack 0
 31202  01BDD8                     _SYSTEM_Initialize:
 31203                           	opt callstack 13
 31204                           
 31205                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 31206                           
 31207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31208                           ;incstack = 0
 31209  01BDD8  ECD0  F0DC         	call	_INTERRUPT_Initialize	;wreg free
 31210                           
 31211                           ; BSR set to: 57
 31212                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 31213  01BDDC  EC36  F0E5         	call	_PMD_Initialize	;wreg free
 31214                           
 31215                           ; BSR set to: 57
 31216                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 31217  01BDE0  ECBB  F0D9         	call	_PIN_MANAGER_Initialize	;wreg free
 31218                           
 31219                           ; BSR set to: 58
 31220                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 31221  01BDE4  EC2B  F0E5         	call	_OSCILLATOR_Initialize	;wreg free
 31222                           
 31223                           ; BSR set to: 57
 31224                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 31225  01BDE8  ECB9  F0E5         	call	_FVR_Initialize	;wreg free
 31226                           
 31227                           ; BSR set to: 62
 31228                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 31229  01BDEC  EC32  F0DC         	call	_ADCC_Initialize	;wreg free
 31230                           
 31231                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 31232  01BDF0  EC20  F0E5         	call	_PWM8_Initialize	;wreg free
 31233                           
 31234                           ; BSR set to: 63
 31235                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 31236  01BDF4  EC09  F0E5         	call	_TMR2_Initialize	;wreg free
 31237                           
 31238                           ; BSR set to: 57
 31239                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 31240  01BDF8  ECC2  F0E1         	call	_EXT_INT_Initialize	;wreg free
 31241                           
 31242                           ; BSR set to: 57
 31243                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 31244  01BDFC  EC96  F0E2         	call	_TMR6_Initialize	;wreg free
 31245                           
 31246                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 31247  01BE00  EC7D  F0DF         	call	_TMR3_Initialize	;wreg free
 31248                           
 31249                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 31250  01BE04  EC59  F0DF         	call	_TMR5_Initialize	;wreg free
 31251                           
 31252                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 31253  01BE08  EC35  F0DF         	call	_UART1_Initialize	;wreg free
 31254                           
 31255                           ; BSR set to: 57
 31256                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 31257  01BE0C  EC97  F0DD         	call	_UART2_Initialize	;wreg free
 31258                           
 31259                           ; BSR set to: 57
 31260                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 31261  01BE10  EC15  F0E5         	call	_SPI1_Initialize	;wreg free
 31262                           
 31263                           ; BSR set to: 61
 31264                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 31265  01BE14  EC21  F0DE         	call	_DMA2_Initialize	;wreg free
 31266                           
 31267                           ; BSR set to: 59
 31268                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 31269  01BE18  ECFD  F0DB         	call	_DMA1_Initialize	;wreg free
 31270                           
 31271                           ; BSR set to: 59
 31272                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 31273  01BE1C  EC8D  F0E5         	call	_CLKREF_Initialize	;wreg free
 31274                           
 31275                           ; BSR set to: 60
 31276                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31277  01BE20  0012               	return		;funcret
 31278  01BE22                     __end_of_SYSTEM_Initialize:
 31279                           	opt callstack 0
 31280                           
 31281 ;; *************** function _UART2_Initialize *****************
 31282 ;; Defined at:
 31283 ;;		line 78 in file "mcc_generated_files/uart2.c"
 31284 ;; Parameters:    Size  Location     Type
 31285 ;;		None
 31286 ;; Auto vars:     Size  Location     Type
 31287 ;;		None
 31288 ;; Return value:  Size  Location     Type
 31289 ;;                  1  [STACK] void 
 31290 ;; Registers used:
 31291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31292 ;; Tracked objects:
 31293 ;;		On entry : 3F/39
 31294 ;;		On exit  : 3F/39
 31295 ;;		Unchanged: 0/0
 31296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31301 ;;Total ram usage:        0 bytes
 31302 ;; Hardware stack levels used:    1
 31303 ;; Hardware stack levels required when called:   16
 31304 ;; This function calls:
 31305 ;;		_UART2_SetRxInterruptHandler
 31306 ;;		_UART2_SetTxInterruptHandler
 31307 ;; This function is called by:
 31308 ;;		_SYSTEM_Initialize
 31309 ;; This function uses a reentrant model
 31310 ;;
 31311                           
 31312                           	psect	text118
 31313  01BB2E                     __ptext118:
 31314                           	opt callstack 0
 31315  01BB2E                     _UART2_Initialize:
 31316                           	opt callstack 13
 31317                           
 31318                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 31319                           
 31320                           ; BSR set to: 60
 31321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31322                           ;incstack = 0
 31323  01BB2E  0139               	movlb	57	; () banked
 31324  01BB30  9596               	bcf	150,2,b	;volatile
 31325                           
 31326                           ; BSR set to: 57
 31327                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 31328  01BB32  0E0E               	movlw	low _UART2_Receive_ISR
 31329  01BB34  6EE6               	movwf	postinc1,c
 31330  01BB36  0EC9               	movlw	high _UART2_Receive_ISR
 31331  01BB38  6EE6               	movwf	postinc1,c
 31332  01BB3A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 31333  01BB3C  6EE6               	movwf	postinc1,c
 31334  01BB3E  ECE7  F0E2         	call	_UART2_SetRxInterruptHandler	;wreg free
 31335                           
 31336                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 31337  01BB42  0139               	movlb	57	; () banked
 31338  01BB44  9796               	bcf	150,3,b	;volatile
 31339                           
 31340                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 31341  01BB46  0E00               	movlw	low _UART2_Transmit_ISR
 31342  01BB48  6EE6               	movwf	postinc1,c
 31343  01BB4A  0EC5               	movlw	high _UART2_Transmit_ISR
 31344  01BB4C  6EE6               	movwf	postinc1,c
 31345  01BB4E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 31346  01BB50  6EE6               	movwf	postinc1,c
 31347  01BB52  ECD3  F0E2         	call	_UART2_SetTxInterruptHandler	;wreg free
 31348                           
 31349                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 31350  01BB56  013D               	movlb	61	; () banked
 31351  01BB58  6BD4               	clrf	212,b	;volatile
 31352                           
 31353                           ; BSR set to: 61
 31354                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 31355  01BB5A  6BD6               	clrf	214,b	;volatile
 31356                           
 31357                           ; BSR set to: 61
 31358                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 31359  01BB5C  6BD8               	clrf	216,b	;volatile
 31360                           
 31361                           ; BSR set to: 61
 31362                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 31363  01BB5E  0EB0               	movlw	176
 31364  01BB60  6FDA               	movwf	218,b	;volatile
 31365                           
 31366                           ; BSR set to: 61
 31367                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 31368  01BB62  0E80               	movlw	128
 31369  01BB64  6FDB               	movwf	219,b	;volatile
 31370                           
 31371                           ; BSR set to: 61
 31372                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 31373  01BB66  6BDC               	clrf	220,b	;volatile
 31374                           
 31375                           ; BSR set to: 61
 31376                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 31377  01BB68  0E82               	movlw	130
 31378  01BB6A  6FDD               	movwf	221,b	;volatile
 31379                           
 31380                           ; BSR set to: 61
 31381                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 31382  01BB6C  0E06               	movlw	6
 31383  01BB6E  6FDE               	movwf	222,b	;volatile
 31384                           
 31385                           ; BSR set to: 61
 31386                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 31387  01BB70  6BDF               	clrf	223,b	;volatile
 31388                           
 31389                           ; BSR set to: 61
 31390                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 31391  01BB72  6BE0               	clrf	224,b	;volatile
 31392                           
 31393                           ; BSR set to: 61
 31394                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 31395  01BB74  6BE1               	clrf	225,b	;volatile
 31396                           
 31397                           ; BSR set to: 61
 31398                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 31399  01BB76  6BE2               	clrf	226,b	;volatile
 31400                           
 31401                           ; BSR set to: 61
 31402                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 31403  01BB78  0100               	movlb	0	; () banked
 31404  01BB7A  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 31405                           
 31406                           ; BSR set to: 0
 31407                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 31408  01BB7C  6A46               	clrf	_uart2TxTail^0,c	;volatile
 31409                           
 31410                           ; BSR set to: 0
 31411                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 31412  01BB7E  0E40               	movlw	64
 31413  01BB80  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 31414                           
 31415                           ; BSR set to: 0
 31416                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 31417  01BB82  6A44               	clrf	_uart2RxHead^0,c	;volatile
 31418                           
 31419                           ; BSR set to: 0
 31420                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 31421  01BB84  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 31422                           
 31423                           ; BSR set to: 0
 31424                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 31425  01BB86  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 31426                           
 31427                           ; BSR set to: 0
 31428                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 31429  01BB88  0139               	movlb	57	; () banked
 31430  01BB8A  8596               	bsf	150,2,b	;volatile
 31431                           
 31432                           ; BSR set to: 57
 31433                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31434  01BB8C  0012               	return		;funcret
 31435  01BB8E                     __end_of_UART2_Initialize:
 31436                           	opt callstack 0
 31437                           
 31438 ;; *************** function _UART2_SetTxInterruptHandler *****************
 31439 ;; Defined at:
 31440 ;;		line 252 in file "mcc_generated_files/uart2.c"
 31441 ;; Parameters:    Size  Location     Type
 31442 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31443 ;;		 -> UART2_Transmit_ISR(1), 
 31444 ;; Auto vars:     Size  Location     Type
 31445 ;;		None
 31446 ;; Return value:  Size  Location     Type
 31447 ;;                  1  [STACK] void 
 31448 ;; Registers used:
 31449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31450 ;; Tracked objects:
 31451 ;;		On entry : 3F/39
 31452 ;;		On exit  : 0/0
 31453 ;;		Unchanged: 0/0
 31454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31459 ;;Total ram usage:        0 bytes
 31460 ;; Hardware stack levels used:    1
 31461 ;; Hardware stack levels required when called:   15
 31462 ;; This function calls:
 31463 ;;		Nothing
 31464 ;; This function is called by:
 31465 ;;		_UART2_Initialize
 31466 ;; This function uses a reentrant model
 31467 ;;
 31468                           
 31469                           	psect	text119
 31470  01C5A6                     __ptext119:
 31471                           	opt callstack 0
 31472  01C5A6                     _UART2_SetTxInterruptHandler:
 31473                           	opt callstack 13
 31474                           
 31475                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 31476                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31477                           
 31478                           ; BSR set to: 57
 31479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31480                           ;incstack = 0
 31481  01C5A6  50E1               	movf	fsr1l,w,c
 31482  01C5A8  0FFD               	addlw	-3
 31483  01C5AA  6ED9               	movwf	fsr2l,c
 31484  01C5AC  50E2               	movf	fsr1h,w,c
 31485  01C5AE  6EDA               	movwf	fsr2h,c
 31486  01C5B0  0EFF               	movlw	255
 31487  01C5B2  22DA               	addwfc	fsr2h,f,c
 31488  01C5B4  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 31489  01C5BA  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 31490  01C5C0  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 31491                           
 31492                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31493  01C5C6  52E5               	movf	postdec1,f,c
 31494  01C5C8  52E5               	movf	postdec1,f,c
 31495  01C5CA  52E5               	movf	postdec1,f,c
 31496  01C5CC  0012               	return		;funcret
 31497  01C5CE                     __end_of_UART2_SetTxInterruptHandler:
 31498                           	opt callstack 0
 31499                           
 31500 ;; *************** function _UART2_SetRxInterruptHandler *****************
 31501 ;; Defined at:
 31502 ;;		line 248 in file "mcc_generated_files/uart2.c"
 31503 ;; Parameters:    Size  Location     Type
 31504 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31505 ;;		 -> UART2_Receive_ISR(1), 
 31506 ;; Auto vars:     Size  Location     Type
 31507 ;;		None
 31508 ;; Return value:  Size  Location     Type
 31509 ;;                  1  [STACK] void 
 31510 ;; Registers used:
 31511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31512 ;; Tracked objects:
 31513 ;;		On entry : 3F/39
 31514 ;;		On exit  : 0/0
 31515 ;;		Unchanged: 0/0
 31516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31521 ;;Total ram usage:        0 bytes
 31522 ;; Hardware stack levels used:    1
 31523 ;; Hardware stack levels required when called:   15
 31524 ;; This function calls:
 31525 ;;		Nothing
 31526 ;; This function is called by:
 31527 ;;		_UART2_Initialize
 31528 ;; This function uses a reentrant model
 31529 ;;
 31530                           
 31531                           	psect	text120
 31532  01C5CE                     __ptext120:
 31533                           	opt callstack 0
 31534  01C5CE                     _UART2_SetRxInterruptHandler:
 31535                           	opt callstack 13
 31536                           
 31537                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 31538                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31539                           
 31540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31541                           ;incstack = 0
 31542  01C5CE  50E1               	movf	fsr1l,w,c
 31543  01C5D0  0FFD               	addlw	-3
 31544  01C5D2  6ED9               	movwf	fsr2l,c
 31545  01C5D4  50E2               	movf	fsr1h,w,c
 31546  01C5D6  6EDA               	movwf	fsr2h,c
 31547  01C5D8  0EFF               	movlw	255
 31548  01C5DA  22DA               	addwfc	fsr2h,f,c
 31549  01C5DC  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 31550  01C5E2  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 31551  01C5E8  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 31552                           
 31553                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31554  01C5EE  52E5               	movf	postdec1,f,c
 31555  01C5F0  52E5               	movf	postdec1,f,c
 31556  01C5F2  52E5               	movf	postdec1,f,c
 31557  01C5F4  0012               	return		;funcret
 31558  01C5F6                     __end_of_UART2_SetRxInterruptHandler:
 31559                           	opt callstack 0
 31560                           
 31561 ;; *************** function _UART1_Initialize *****************
 31562 ;; Defined at:
 31563 ;;		line 75 in file "mcc_generated_files/uart1.c"
 31564 ;; Parameters:    Size  Location     Type
 31565 ;;		None
 31566 ;; Auto vars:     Size  Location     Type
 31567 ;;		None
 31568 ;; Return value:  Size  Location     Type
 31569 ;;                  1  [STACK] void 
 31570 ;; Registers used:
 31571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31572 ;; Tracked objects:
 31573 ;;		On entry : 0/39
 31574 ;;		On exit  : 3F/39
 31575 ;;		Unchanged: 0/0
 31576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31581 ;;Total ram usage:        0 bytes
 31582 ;; Hardware stack levels used:    1
 31583 ;; Hardware stack levels required when called:   16
 31584 ;; This function calls:
 31585 ;;		_UART1_SetRxInterruptHandler
 31586 ;; This function is called by:
 31587 ;;		_SYSTEM_Initialize
 31588 ;; This function uses a reentrant model
 31589 ;;
 31590                           
 31591                           	psect	text121
 31592  01BE6A                     __ptext121:
 31593                           	opt callstack 0
 31594  01BE6A                     _UART1_Initialize:
 31595                           	opt callstack 13
 31596                           
 31597                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 31598                           
 31599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31600                           ;incstack = 0
 31601  01BE6A  0139               	movlb	57	; () banked
 31602  01BE6C  9793               	bcf	147,3,b	;volatile
 31603                           
 31604                           ; BSR set to: 57
 31605                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 31606  01BE6E  0ECC               	movlw	low _UART1_Receive_ISR
 31607  01BE70  6EE6               	movwf	postinc1,c
 31608  01BE72  0EC8               	movlw	high _UART1_Receive_ISR
 31609  01BE74  6EE6               	movwf	postinc1,c
 31610  01BE76  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 31611  01BE78  6EE6               	movwf	postinc1,c
 31612  01BE7A  ECFB  F0E2         	call	_UART1_SetRxInterruptHandler	;wreg free
 31613                           
 31614                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 31615  01BE7E  013D               	movlb	61	; () banked
 31616  01BE80  6BEC               	clrf	236,b	;volatile
 31617                           
 31618                           ; BSR set to: 61
 31619                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 31620  01BE82  6BED               	clrf	237,b	;volatile
 31621                           
 31622                           ; BSR set to: 61
 31623                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 31624  01BE84  6BEE               	clrf	238,b	;volatile
 31625                           
 31626                           ; BSR set to: 61
 31627                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 31628  01BE86  6BEF               	clrf	239,b	;volatile
 31629                           
 31630                           ; BSR set to: 61
 31631                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 31632  01BE88  6BF0               	clrf	240,b	;volatile
 31633                           
 31634                           ; BSR set to: 61
 31635                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 31636  01BE8A  6BF1               	clrf	241,b	;volatile
 31637                           
 31638                           ; BSR set to: 61
 31639                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 31640  01BE8C  0EB0               	movlw	176
 31641  01BE8E  6FF2               	movwf	242,b	;volatile
 31642                           
 31643                           ; BSR set to: 61
 31644                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 31645  01BE90  0E80               	movlw	128
 31646  01BE92  6FF3               	movwf	243,b	;volatile
 31647                           
 31648                           ; BSR set to: 61
 31649                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 31650  01BE94  6BF4               	clrf	244,b	;volatile
 31651                           
 31652                           ; BSR set to: 61
 31653                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 31654  01BE96  0E8A               	movlw	138
 31655  01BE98  6FF5               	movwf	245,b	;volatile
 31656                           
 31657                           ; BSR set to: 61
 31658                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 31659  01BE9A  6BF6               	clrf	246,b	;volatile
 31660                           
 31661                           ; BSR set to: 61
 31662                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 31663  01BE9C  6BF7               	clrf	247,b	;volatile
 31664                           
 31665                           ; BSR set to: 61
 31666                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 31667  01BE9E  6BF8               	clrf	248,b	;volatile
 31668                           
 31669                           ; BSR set to: 61
 31670                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 31671  01BEA0  6BF9               	clrf	249,b	;volatile
 31672                           
 31673                           ; BSR set to: 61
 31674                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 31675  01BEA2  6BFA               	clrf	250,b	;volatile
 31676                           
 31677                           ; BSR set to: 61
 31678                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 31679  01BEA4  6A47               	clrf	_uart1RxHead^0,c	;volatile
 31680                           
 31681                           ; BSR set to: 61
 31682                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 31683  01BEA6  0100               	movlb	0	; () banked
 31684  01BEA8  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 31685                           
 31686                           ; BSR set to: 0
 31687                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 31688  01BEAA  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 31689                           
 31690                           ; BSR set to: 0
 31691                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 31692  01BEAC  0139               	movlb	57	; () banked
 31693  01BEAE  8793               	bsf	147,3,b	;volatile
 31694                           
 31695                           ; BSR set to: 57
 31696                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31697  01BEB0  0012               	return		;funcret
 31698  01BEB2                     __end_of_UART1_Initialize:
 31699                           	opt callstack 0
 31700                           
 31701 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31702 ;; Defined at:
 31703 ;;		line 207 in file "mcc_generated_files/uart1.c"
 31704 ;; Parameters:    Size  Location     Type
 31705 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31706 ;;		 -> UART1_Receive_ISR(1), 
 31707 ;; Auto vars:     Size  Location     Type
 31708 ;;		None
 31709 ;; Return value:  Size  Location     Type
 31710 ;;                  1  [STACK] void 
 31711 ;; Registers used:
 31712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31713 ;; Tracked objects:
 31714 ;;		On entry : 3F/39
 31715 ;;		On exit  : 0/0
 31716 ;;		Unchanged: 0/0
 31717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31722 ;;Total ram usage:        0 bytes
 31723 ;; Hardware stack levels used:    1
 31724 ;; Hardware stack levels required when called:   15
 31725 ;; This function calls:
 31726 ;;		Nothing
 31727 ;; This function is called by:
 31728 ;;		_UART1_Initialize
 31729 ;; This function uses a reentrant model
 31730 ;;
 31731                           
 31732                           	psect	text122
 31733  01C5F6                     __ptext122:
 31734                           	opt callstack 0
 31735  01C5F6                     _UART1_SetRxInterruptHandler:
 31736                           	opt callstack 13
 31737                           
 31738                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 31739                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31740                           
 31741                           ; BSR set to: 57
 31742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31743                           ;incstack = 0
 31744  01C5F6  50E1               	movf	fsr1l,w,c
 31745  01C5F8  0FFD               	addlw	-3
 31746  01C5FA  6ED9               	movwf	fsr2l,c
 31747  01C5FC  50E2               	movf	fsr1h,w,c
 31748  01C5FE  6EDA               	movwf	fsr2h,c
 31749  01C600  0EFF               	movlw	255
 31750  01C602  22DA               	addwfc	fsr2h,f,c
 31751  01C604  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 31752  01C60A  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 31753  01C610  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 31754                           
 31755                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31756  01C616  52E5               	movf	postdec1,f,c
 31757  01C618  52E5               	movf	postdec1,f,c
 31758  01C61A  52E5               	movf	postdec1,f,c
 31759  01C61C  0012               	return		;funcret
 31760  01C61E                     __end_of_UART1_SetRxInterruptHandler:
 31761                           	opt callstack 0
 31762                           
 31763 ;; *************** function _TMR6_Initialize *****************
 31764 ;; Defined at:
 31765 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 31766 ;; Parameters:    Size  Location     Type
 31767 ;;		None
 31768 ;; Auto vars:     Size  Location     Type
 31769 ;;		None
 31770 ;; Return value:  Size  Location     Type
 31771 ;;                  1  [STACK] void 
 31772 ;; Registers used:
 31773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31774 ;; Tracked objects:
 31775 ;;		On entry : 3F/39
 31776 ;;		On exit  : 0/0
 31777 ;;		Unchanged: 0/0
 31778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31783 ;;Total ram usage:        0 bytes
 31784 ;; Hardware stack levels used:    1
 31785 ;; Hardware stack levels required when called:   16
 31786 ;; This function calls:
 31787 ;;		_TMR6_SetInterruptHandler
 31788 ;; This function is called by:
 31789 ;;		_SYSTEM_Initialize
 31790 ;; This function uses a reentrant model
 31791 ;;
 31792                           
 31793                           	psect	text123
 31794  01C52C                     __ptext123:
 31795                           	opt callstack 0
 31796  01C52C                     _TMR6_Initialize:
 31797                           	opt callstack 13
 31798                           
 31799                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 31800                           
 31801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31802                           ;incstack = 0
 31803  01C52C  0E01               	movlw	1
 31804  01C52E  6E96               	movwf	150,c	;volatile
 31805                           
 31806                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 31807  01C530  6A95               	clrf	149,c	;volatile
 31808                           
 31809                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 31810  01C532  6A97               	clrf	151,c	;volatile
 31811                           
 31812                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 31813  01C534  0E7C               	movlw	124
 31814  01C536  6E93               	movwf	147,c	;volatile
 31815                           
 31816                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 31817  01C538  6A92               	clrf	146,c	;volatile
 31818                           
 31819                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 31820  01C53A  0139               	movlb	57	; () banked
 31821  01C53C  91A9               	bcf	169,0,b	;volatile
 31822                           
 31823                           ; BSR set to: 57
 31824                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 31825  01C53E  8199               	bsf	153,0,b	;volatile
 31826                           
 31827                           ; BSR set to: 57
 31828                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 31829  01C540  0E40               	movlw	low _TMR6_DefaultInterruptHandler
 31830  01C542  6EE6               	movwf	postinc1,c
 31831  01C544  0EBD               	movlw	high _TMR6_DefaultInterruptHandler
 31832  01C546  6EE6               	movwf	postinc1,c
 31833  01C548  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 31834  01C54A  6EE6               	movwf	postinc1,c
 31835  01C54C  EC0F  F0E3         	call	_TMR6_SetInterruptHandler	;wreg free
 31836                           
 31837                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 31838  01C550  0EE0               	movlw	224
 31839  01C552  6E94               	movwf	148,c	;volatile
 31840                           
 31841                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31842  01C554  0012               	return		;funcret
 31843  01C556                     __end_of_TMR6_Initialize:
 31844                           	opt callstack 0
 31845                           
 31846 ;; *************** function _TMR6_SetInterruptHandler *****************
 31847 ;; Defined at:
 31848 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 31849 ;; Parameters:    Size  Location     Type
 31850 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31851 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 31852 ;; Auto vars:     Size  Location     Type
 31853 ;;		None
 31854 ;; Return value:  Size  Location     Type
 31855 ;;                  1  [STACK] void 
 31856 ;; Registers used:
 31857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31858 ;; Tracked objects:
 31859 ;;		On entry : 3F/39
 31860 ;;		On exit  : 0/0
 31861 ;;		Unchanged: 0/0
 31862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31867 ;;Total ram usage:        0 bytes
 31868 ;; Hardware stack levels used:    1
 31869 ;; Hardware stack levels required when called:   15
 31870 ;; This function calls:
 31871 ;;		Nothing
 31872 ;; This function is called by:
 31873 ;;		_TMR6_Initialize
 31874 ;; This function uses a reentrant model
 31875 ;;
 31876                           
 31877                           	psect	text124
 31878  01C61E                     __ptext124:
 31879                           	opt callstack 0
 31880  01C61E                     _TMR6_SetInterruptHandler:
 31881                           	opt callstack 13
 31882                           
 31883                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 31884                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31885                           
 31886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31887                           ;incstack = 0
 31888  01C61E  50E1               	movf	fsr1l,w,c
 31889  01C620  0FFD               	addlw	-3
 31890  01C622  6ED9               	movwf	fsr2l,c
 31891  01C624  50E2               	movf	fsr1h,w,c
 31892  01C626  6EDA               	movwf	fsr2h,c
 31893  01C628  0EFF               	movlw	255
 31894  01C62A  22DA               	addwfc	fsr2h,f,c
 31895  01C62C  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 31896  01C632  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 31897  01C638  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 31898                           
 31899                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31900  01C63E  52E5               	movf	postdec1,f,c
 31901  01C640  52E5               	movf	postdec1,f,c
 31902  01C642  52E5               	movf	postdec1,f,c
 31903  01C644  0012               	return		;funcret
 31904  01C646                     __end_of_TMR6_SetInterruptHandler:
 31905                           	opt callstack 0
 31906                           
 31907 ;; *************** function _TMR5_Initialize *****************
 31908 ;; Defined at:
 31909 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 31910 ;; Parameters:    Size  Location     Type
 31911 ;;		None
 31912 ;; Auto vars:     Size  Location     Type
 31913 ;;		None
 31914 ;; Return value:  Size  Location     Type
 31915 ;;                  1  [STACK] void 
 31916 ;; Registers used:
 31917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31918 ;; Tracked objects:
 31919 ;;		On entry : 0/39
 31920 ;;		On exit  : 0/0
 31921 ;;		Unchanged: 0/0
 31922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31927 ;;Total ram usage:        0 bytes
 31928 ;; Hardware stack levels used:    1
 31929 ;; Hardware stack levels required when called:   16
 31930 ;; This function calls:
 31931 ;;		_TMR5_SetInterruptHandler
 31932 ;; This function is called by:
 31933 ;;		_SYSTEM_Initialize
 31934 ;; This function uses a reentrant model
 31935 ;;
 31936                           
 31937                           	psect	text125
 31938  01BEB2                     __ptext125:
 31939                           	opt callstack 0
 31940  01BEB2                     _TMR5_Initialize:
 31941                           	opt callstack 13
 31942                           
 31943                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 31944                           
 31945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31946                           ;incstack = 0
 31947  01BEB2  6A9B               	clrf	155,c	;volatile
 31948                           
 31949                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 31950  01BEB4  6A9C               	clrf	156,c	;volatile
 31951                           
 31952                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 31953  01BEB6  0E01               	movlw	1
 31954  01BEB8  6E9D               	movwf	157,c	;volatile
 31955                           
 31956                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 31957  01BEBA  0E63               	movlw	99
 31958  01BEBC  6E99               	movwf	153,c	;volatile
 31959                           
 31960                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 31961  01BEBE  0EC0               	movlw	192
 31962  01BEC0  6E98               	movwf	152,c	;volatile
 31963                           
 31964                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 31965  01BEC2  5098               	movf	152,w,c	;volatile
 31966  01BEC4  006F FE64  F001    	movff	16281,btemp	;volatile
 31967  01BECA  6A02               	clrf	(btemp+1)^0,c
 31968  01BECC  0060  F004  F002   	movff	btemp,btemp+1
 31969  01BED2  6A01               	clrf	btemp^0,c
 31970  01BED4  1001               	iorwf	btemp^0,w,c
 31971  01BED6  0100               	movlb	0	; () banked
 31972  01BED8  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 31973  01BEDA  5002               	movf	(btemp+1)^0,w,c
 31974  01BEDC  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 31975                           
 31976                           ; BSR set to: 0
 31977                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 31978  01BEDE  0139               	movlb	57	; () banked
 31979  01BEE0  9DA8               	bcf	168,6,b	;volatile
 31980                           
 31981                           ; BSR set to: 57
 31982                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 31983  01BEE2  8D98               	bsf	152,6,b	;volatile
 31984                           
 31985                           ; BSR set to: 57
 31986                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 31987  01BEE4  0E44               	movlw	low _TMR5_DefaultInterruptHandler
 31988  01BEE6  6EE6               	movwf	postinc1,c
 31989  01BEE8  0EC2               	movlw	high _TMR5_DefaultInterruptHandler
 31990  01BEEA  6EE6               	movwf	postinc1,c
 31991  01BEEC  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 31992  01BEEE  6EE6               	movwf	postinc1,c
 31993  01BEF0  EC23  F0E3         	call	_TMR5_SetInterruptHandler	;wreg free
 31994                           
 31995                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 31996  01BEF4  0E31               	movlw	49
 31997  01BEF6  6E9A               	movwf	154,c	;volatile
 31998                           
 31999                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32000  01BEF8  0012               	return		;funcret
 32001  01BEFA                     __end_of_TMR5_Initialize:
 32002                           	opt callstack 0
 32003                           
 32004 ;; *************** function _TMR5_SetInterruptHandler *****************
 32005 ;; Defined at:
 32006 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 32007 ;; Parameters:    Size  Location     Type
 32008 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32009 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 32010 ;; Auto vars:     Size  Location     Type
 32011 ;;		None
 32012 ;; Return value:  Size  Location     Type
 32013 ;;                  1  [STACK] void 
 32014 ;; Registers used:
 32015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32016 ;; Tracked objects:
 32017 ;;		On entry : 3F/39
 32018 ;;		On exit  : 0/0
 32019 ;;		Unchanged: 0/0
 32020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32025 ;;Total ram usage:        0 bytes
 32026 ;; Hardware stack levels used:    1
 32027 ;; Hardware stack levels required when called:   15
 32028 ;; This function calls:
 32029 ;;		Nothing
 32030 ;; This function is called by:
 32031 ;;		_TMR5_Initialize
 32032 ;; This function uses a reentrant model
 32033 ;;
 32034                           
 32035                           	psect	text126
 32036  01C646                     __ptext126:
 32037                           	opt callstack 0
 32038  01C646                     _TMR5_SetInterruptHandler:
 32039                           	opt callstack 13
 32040                           
 32041                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 32042                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32043                           
 32044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32045                           ;incstack = 0
 32046  01C646  50E1               	movf	fsr1l,w,c
 32047  01C648  0FFD               	addlw	-3
 32048  01C64A  6ED9               	movwf	fsr2l,c
 32049  01C64C  50E2               	movf	fsr1h,w,c
 32050  01C64E  6EDA               	movwf	fsr2h,c
 32051  01C650  0EFF               	movlw	255
 32052  01C652  22DA               	addwfc	fsr2h,f,c
 32053  01C654  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 32054  01C65A  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 32055  01C660  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 32056                           
 32057                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32058  01C666  52E5               	movf	postdec1,f,c
 32059  01C668  52E5               	movf	postdec1,f,c
 32060  01C66A  52E5               	movf	postdec1,f,c
 32061  01C66C  0012               	return		;funcret
 32062  01C66E                     __end_of_TMR5_SetInterruptHandler:
 32063                           	opt callstack 0
 32064                           
 32065 ;; *************** function _TMR3_Initialize *****************
 32066 ;; Defined at:
 32067 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 32068 ;; Parameters:    Size  Location     Type
 32069 ;;		None
 32070 ;; Auto vars:     Size  Location     Type
 32071 ;;		None
 32072 ;; Return value:  Size  Location     Type
 32073 ;;                  1  [STACK] void 
 32074 ;; Registers used:
 32075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 32076 ;; Tracked objects:
 32077 ;;		On entry : 0/39
 32078 ;;		On exit  : 0/0
 32079 ;;		Unchanged: 0/0
 32080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32085 ;;Total ram usage:        0 bytes
 32086 ;; Hardware stack levels used:    1
 32087 ;; Hardware stack levels required when called:   16
 32088 ;; This function calls:
 32089 ;;		_TMR3_SetInterruptHandler
 32090 ;; This function is called by:
 32091 ;;		_SYSTEM_Initialize
 32092 ;; This function uses a reentrant model
 32093 ;;
 32094                           
 32095                           	psect	text127
 32096  01BEFA                     __ptext127:
 32097                           	opt callstack 0
 32098  01BEFA                     _TMR3_Initialize:
 32099                           	opt callstack 13
 32100                           
 32101                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 32102                           
 32103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32104                           ;incstack = 0
 32105  01BEFA  6AA7               	clrf	167,c	;volatile
 32106                           
 32107                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 32108  01BEFC  6AA8               	clrf	168,c	;volatile
 32109                           
 32110                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 32111  01BEFE  0E01               	movlw	1
 32112  01BF00  6EA9               	movwf	169,c	;volatile
 32113                           
 32114                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 32115  01BF02  0E3C               	movlw	60
 32116  01BF04  6EA5               	movwf	165,c	;volatile
 32117                           
 32118                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 32119  01BF06  0EB0               	movlw	176
 32120  01BF08  6EA4               	movwf	164,c	;volatile
 32121                           
 32122                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 32123  01BF0A  50A4               	movf	164,w,c	;volatile
 32124  01BF0C  006F FE94  F001    	movff	16293,btemp	;volatile
 32125  01BF12  6A02               	clrf	(btemp+1)^0,c
 32126  01BF14  0060  F004  F002   	movff	btemp,btemp+1
 32127  01BF1A  6A01               	clrf	btemp^0,c
 32128  01BF1C  1001               	iorwf	btemp^0,w,c
 32129  01BF1E  0100               	movlb	0	; () banked
 32130  01BF20  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 32131  01BF22  5002               	movf	(btemp+1)^0,w,c
 32132  01BF24  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 32133                           
 32134                           ; BSR set to: 0
 32135                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 32136  01BF26  0139               	movlb	57	; () banked
 32137  01BF28  9DA6               	bcf	166,6,b	;volatile
 32138                           
 32139                           ; BSR set to: 57
 32140                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 32141  01BF2A  8D96               	bsf	150,6,b	;volatile
 32142                           
 32143                           ; BSR set to: 57
 32144                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 32145  01BF2C  0E9C               	movlw	low _TMR3_DefaultInterruptHandler
 32146  01BF2E  6EE6               	movwf	postinc1,c
 32147  01BF30  0ECB               	movlw	high _TMR3_DefaultInterruptHandler
 32148  01BF32  6EE6               	movwf	postinc1,c
 32149  01BF34  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 32150  01BF36  6EE6               	movwf	postinc1,c
 32151  01BF38  EC37  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
 32152                           
 32153                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 32154  01BF3C  0E31               	movlw	49
 32155  01BF3E  6EA6               	movwf	166,c	;volatile
 32156                           
 32157                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32158  01BF40  0012               	return		;funcret
 32159  01BF42                     __end_of_TMR3_Initialize:
 32160                           	opt callstack 0
 32161                           
 32162 ;; *************** function _TMR3_SetInterruptHandler *****************
 32163 ;; Defined at:
 32164 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 32165 ;; Parameters:    Size  Location     Type
 32166 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32167 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 32168 ;; Auto vars:     Size  Location     Type
 32169 ;;		None
 32170 ;; Return value:  Size  Location     Type
 32171 ;;                  1  [STACK] void 
 32172 ;; Registers used:
 32173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32174 ;; Tracked objects:
 32175 ;;		On entry : 0/0
 32176 ;;		On exit  : 0/0
 32177 ;;		Unchanged: 0/0
 32178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32183 ;;Total ram usage:        0 bytes
 32184 ;; Hardware stack levels used:    1
 32185 ;; Hardware stack levels required when called:   15
 32186 ;; This function calls:
 32187 ;;		Nothing
 32188 ;; This function is called by:
 32189 ;;		_TMR3_Initialize
 32190 ;;		_init_bsoc
 32191 ;; This function uses a reentrant model
 32192 ;;
 32193                           
 32194                           	psect	text128
 32195  01C66E                     __ptext128:
 32196                           	opt callstack 0
 32197  01C66E                     _TMR3_SetInterruptHandler:
 32198                           	opt callstack 14
 32199                           
 32200                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 32201                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32202                           
 32203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32204                           ;incstack = 0
 32205  01C66E  50E1               	movf	fsr1l,w,c
 32206  01C670  0FFD               	addlw	-3
 32207  01C672  6ED9               	movwf	fsr2l,c
 32208  01C674  50E2               	movf	fsr1h,w,c
 32209  01C676  6EDA               	movwf	fsr2h,c
 32210  01C678  0EFF               	movlw	255
 32211  01C67A  22DA               	addwfc	fsr2h,f,c
 32212  01C67C  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 32213  01C682  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 32214  01C688  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 32215                           
 32216                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32217  01C68E  52E5               	movf	postdec1,f,c
 32218  01C690  52E5               	movf	postdec1,f,c
 32219  01C692  52E5               	movf	postdec1,f,c
 32220  01C694  0012               	return		;funcret
 32221  01C696                     __end_of_TMR3_SetInterruptHandler:
 32222                           	opt callstack 0
 32223                           
 32224 ;; *************** function _TMR2_Initialize *****************
 32225 ;; Defined at:
 32226 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 32227 ;; Parameters:    Size  Location     Type
 32228 ;;		None
 32229 ;; Auto vars:     Size  Location     Type
 32230 ;;		None
 32231 ;; Return value:  Size  Location     Type
 32232 ;;                  1  [STACK] void 
 32233 ;; Registers used:
 32234 ;;		wreg, status,2
 32235 ;; Tracked objects:
 32236 ;;		On entry : 3F/3F
 32237 ;;		On exit  : 3F/39
 32238 ;;		Unchanged: 0/0
 32239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32244 ;;Total ram usage:        0 bytes
 32245 ;; Hardware stack levels used:    1
 32246 ;; Hardware stack levels required when called:   15
 32247 ;; This function calls:
 32248 ;;		Nothing
 32249 ;; This function is called by:
 32250 ;;		_SYSTEM_Initialize
 32251 ;; This function uses a reentrant model
 32252 ;;
 32253                           
 32254                           	psect	text129
 32255  01CA12                     __ptext129:
 32256                           	opt callstack 0
 32257  01CA12                     _TMR2_Initialize:
 32258                           	opt callstack 14
 32259                           
 32260                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 32261                           
 32262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32263                           ;incstack = 0
 32264  01CA12  0E01               	movlw	1
 32265  01CA14  6EAE               	movwf	174,c	;volatile
 32266                           
 32267                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 32268  01CA16  6AAD               	clrf	173,c	;volatile
 32269                           
 32270                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 32271  01CA18  6AAF               	clrf	175,c	;volatile
 32272                           
 32273                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 32274  01CA1A  0E63               	movlw	99
 32275  01CA1C  6EAB               	movwf	171,c	;volatile
 32276                           
 32277                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 32278  01CA1E  6AAA               	clrf	170,c	;volatile
 32279                           
 32280                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 32281  01CA20  0139               	movlb	57	; () banked
 32282  01CA22  95A4               	bcf	164,2,b	;volatile
 32283                           
 32284                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 32285  01CA24  0EC0               	movlw	192
 32286  01CA26  6EAC               	movwf	172,c	;volatile
 32287                           
 32288                           ; BSR set to: 57
 32289                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32290  01CA28  0012               	return		;funcret
 32291  01CA2A                     __end_of_TMR2_Initialize:
 32292                           	opt callstack 0
 32293                           
 32294 ;; *************** function _SPI1_Initialize *****************
 32295 ;; Defined at:
 32296 ;;		line 64 in file "mcc_generated_files/spi1.c"
 32297 ;; Parameters:    Size  Location     Type
 32298 ;;		None
 32299 ;; Auto vars:     Size  Location     Type
 32300 ;;		None
 32301 ;; Return value:  Size  Location     Type
 32302 ;;                  1  [STACK] void 
 32303 ;; Registers used:
 32304 ;;		wreg, status,2
 32305 ;; Tracked objects:
 32306 ;;		On entry : 3F/39
 32307 ;;		On exit  : 3F/3D
 32308 ;;		Unchanged: 0/0
 32309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32314 ;;Total ram usage:        0 bytes
 32315 ;; Hardware stack levels used:    1
 32316 ;; Hardware stack levels required when called:   15
 32317 ;; This function calls:
 32318 ;;		Nothing
 32319 ;; This function is called by:
 32320 ;;		_SYSTEM_Initialize
 32321 ;; This function uses a reentrant model
 32322 ;;
 32323                           
 32324                           	psect	text130
 32325  01CA2A                     __ptext130:
 32326                           	opt callstack 0
 32327  01CA2A                     _SPI1_Initialize:
 32328                           	opt callstack 14
 32329                           
 32330                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 32331                           
 32332                           ; BSR set to: 57
 32333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32334                           ;incstack = 0
 32335  01CA2A  0E40               	movlw	64
 32336  01CA2C  013D               	movlb	61	; () banked
 32337  01CA2E  6F15               	movwf	21,b	;volatile
 32338                           
 32339                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 32340  01CA30  0E03               	movlw	3
 32341  01CA32  6F16               	movwf	22,b	;volatile
 32342                           
 32343                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 32344  01CA34  0E4F               	movlw	79
 32345  01CA36  6F19               	movwf	25,b	;volatile
 32346                           
 32347                           ; BSR set to: 61
 32348                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 32349  01CA38  6B1C               	clrf	28,b	;volatile
 32350                           
 32351                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 32352  01CA3A  0E83               	movlw	131
 32353  01CA3C  6F14               	movwf	20,b	;volatile
 32354                           
 32355                           ; BSR set to: 61
 32356                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32357  01CA3E  0012               	return		;funcret
 32358  01CA40                     __end_of_SPI1_Initialize:
 32359                           	opt callstack 0
 32360                           
 32361 ;; *************** function _PWM8_Initialize *****************
 32362 ;; Defined at:
 32363 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 32364 ;; Parameters:    Size  Location     Type
 32365 ;;		None
 32366 ;; Auto vars:     Size  Location     Type
 32367 ;;		None
 32368 ;; Return value:  Size  Location     Type
 32369 ;;                  1  [STACK] void 
 32370 ;; Registers used:
 32371 ;;		wreg, status,2
 32372 ;; Tracked objects:
 32373 ;;		On entry : 0/3E
 32374 ;;		On exit  : 3F/3F
 32375 ;;		Unchanged: 0/0
 32376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32381 ;;Total ram usage:        0 bytes
 32382 ;; Hardware stack levels used:    1
 32383 ;; Hardware stack levels required when called:   15
 32384 ;; This function calls:
 32385 ;;		Nothing
 32386 ;; This function is called by:
 32387 ;;		_SYSTEM_Initialize
 32388 ;; This function uses a reentrant model
 32389 ;;
 32390                           
 32391                           	psect	text131
 32392  01CA40                     __ptext131:
 32393                           	opt callstack 0
 32394  01CA40                     _PWM8_Initialize:
 32395                           	opt callstack 14
 32396                           
 32397                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 32398                           
 32399                           ; BSR set to: 61
 32400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32401                           ;incstack = 0
 32402  01CA40  0E80               	movlw	128
 32403  01CA42  6E62               	movwf	98,c	;volatile
 32404                           
 32405                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 32406  01CA44  6A61               	clrf	97,c	;volatile
 32407                           
 32408                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 32409  01CA46  0E40               	movlw	64
 32410  01CA48  6E60               	movwf	96,c	;volatile
 32411                           
 32412                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 32413  01CA4A  013F               	movlb	63	; () banked
 32414  01CA4C  515F               	movf	95,w,b	;volatile
 32415  01CA4E  0B3F               	andlw	-193
 32416  01CA50  0940               	iorlw	64
 32417  01CA52  6F5F               	movwf	95,b	;volatile
 32418                           
 32419                           ; BSR set to: 63
 32420                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32421  01CA54  0012               	return		;funcret
 32422  01CA56                     __end_of_PWM8_Initialize:
 32423                           	opt callstack 0
 32424                           
 32425 ;; *************** function _PMD_Initialize *****************
 32426 ;; Defined at:
 32427 ;;		line 90 in file "mcc_generated_files/mcc.c"
 32428 ;; Parameters:    Size  Location     Type
 32429 ;;		None
 32430 ;; Auto vars:     Size  Location     Type
 32431 ;;		None
 32432 ;; Return value:  Size  Location     Type
 32433 ;;                  1  [STACK] void 
 32434 ;; Registers used:
 32435 ;;		None
 32436 ;; Tracked objects:
 32437 ;;		On entry : 3F/39
 32438 ;;		On exit  : 3F/39
 32439 ;;		Unchanged: 0/0
 32440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32445 ;;Total ram usage:        0 bytes
 32446 ;; Hardware stack levels used:    1
 32447 ;; Hardware stack levels required when called:   15
 32448 ;; This function calls:
 32449 ;;		Nothing
 32450 ;; This function is called by:
 32451 ;;		_SYSTEM_Initialize
 32452 ;; This function uses a reentrant model
 32453 ;;
 32454                           
 32455                           	psect	text132
 32456  01CA6C                     __ptext132:
 32457                           	opt callstack 0
 32458  01CA6C                     _PMD_Initialize:
 32459                           	opt callstack 14
 32460                           
 32461                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 32462                           
 32463                           ; BSR set to: 63
 32464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32465                           ;incstack = 0
 32466  01CA6C  0139               	movlb	57	; () banked
 32467  01CA6E  6BC0               	clrf	192,b	;volatile
 32468                           
 32469                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 32470  01CA70  6BC1               	clrf	193,b	;volatile
 32471                           
 32472                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 32473  01CA72  6BC2               	clrf	194,b	;volatile
 32474                           
 32475                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 32476  01CA74  6BC3               	clrf	195,b	;volatile
 32477                           
 32478                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 32479  01CA76  6BC4               	clrf	196,b	;volatile
 32480                           
 32481                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 32482  01CA78  6BC5               	clrf	197,b	;volatile
 32483                           
 32484                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 32485  01CA7A  6BC6               	clrf	198,b	;volatile
 32486                           
 32487                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 32488  01CA7C  6BC7               	clrf	199,b	;volatile
 32489                           
 32490                           ; BSR set to: 57
 32491                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32492  01CA7E  0012               	return		;funcret
 32493  01CA80                     __end_of_PMD_Initialize:
 32494                           	opt callstack 0
 32495                           
 32496 ;; *************** function _PIN_MANAGER_Initialize *****************
 32497 ;; Defined at:
 32498 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 32499 ;; Parameters:    Size  Location     Type
 32500 ;;		None
 32501 ;; Auto vars:     Size  Location     Type
 32502 ;;		None
 32503 ;; Return value:  Size  Location     Type
 32504 ;;                  1  [STACK] void 
 32505 ;; Registers used:
 32506 ;;		wreg, status,2
 32507 ;; Tracked objects:
 32508 ;;		On entry : 3F/39
 32509 ;;		On exit  : 3F/3A
 32510 ;;		Unchanged: 0/0
 32511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32516 ;;Total ram usage:        0 bytes
 32517 ;; Hardware stack levels used:    1
 32518 ;; Hardware stack levels required when called:   15
 32519 ;; This function calls:
 32520 ;;		Nothing
 32521 ;; This function is called by:
 32522 ;;		_SYSTEM_Initialize
 32523 ;; This function uses a reentrant model
 32524 ;;
 32525                           
 32526                           	psect	text133
 32527  01B376                     __ptext133:
 32528                           	opt callstack 0
 32529  01B376                     _PIN_MANAGER_Initialize:
 32530                           	opt callstack 14
 32531                           
 32532                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 32533                           
 32534                           ; BSR set to: 57
 32535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32536                           ;incstack = 0
 32537  01B376  0E07               	movlw	7
 32538  01B378  6EBE               	movwf	190,c	;volatile
 32539                           
 32540                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 32541  01B37A  6ABD               	clrf	189,c	;volatile
 32542                           
 32543                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 32544  01B37C  6ABA               	clrf	186,c	;volatile
 32545                           
 32546                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 32547  01B37E  0E23               	movlw	35
 32548  01B380  6EBF               	movwf	191,c	;volatile
 32549                           
 32550                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 32551  01B382  6ABB               	clrf	187,c	;volatile
 32552                           
 32553                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 32554  01B384  0E07               	movlw	7
 32555  01B386  6EBC               	movwf	188,c	;volatile
 32556                           
 32557                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 32558  01B388  6AC6               	clrf	198,c	;volatile
 32559                           
 32560                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 32561  01B38A  0E0C               	movlw	12
 32562  01B38C  6EC7               	movwf	199,c	;volatile
 32563                           
 32564                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 32565  01B38E  68C2               	setf	194,c	;volatile
 32566                           
 32567                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 32568  01B390  0EBF               	movlw	191
 32569  01B392  6EC3               	movwf	195,c	;volatile
 32570                           
 32571                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 32572  01B394  0E90               	movlw	144
 32573  01B396  6EC4               	movwf	196,c	;volatile
 32574                           
 32575                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 32576  01B398  0E0C               	movlw	12
 32577  01B39A  6EC5               	movwf	197,c	;volatile
 32578                           
 32579                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 32580  01B39C  013A               	movlb	58	; () banked
 32581  01B39E  6B70               	clrf	112,b	;volatile
 32582                           
 32583                           ; BSR set to: 58
 32584                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 32585  01B3A0  6B60               	clrf	96,b	;volatile
 32586                           
 32587                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 32588  01B3A2  0E3C               	movlw	60
 32589  01B3A4  6F50               	movwf	80,b	;volatile
 32590                           
 32591                           ; BSR set to: 58
 32592                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 32593  01B3A6  6B80               	clrf	128,b	;volatile
 32594                           
 32595                           ; BSR set to: 58
 32596                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 32597  01B3A8  6B90               	clrf	144,b	;volatile
 32598                           
 32599                           ; BSR set to: 58
 32600                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 32601  01B3AA  6940               	setf	64,b	;volatile
 32602                           
 32603                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 32604  01B3AC  0E0C               	movlw	12
 32605  01B3AE  6F71               	movwf	113,b	;volatile
 32606                           
 32607                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 32608  01B3B0  0E0C               	movlw	12
 32609  01B3B2  6F91               	movwf	145,b	;volatile
 32610                           
 32611                           ; BSR set to: 58
 32612                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 32613  01B3B4  6B81               	clrf	129,b	;volatile
 32614                           
 32615                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 32616  01B3B6  0E83               	movlw	131
 32617  01B3B8  6F51               	movwf	81,b	;volatile
 32618                           
 32619                           ; BSR set to: 58
 32620                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 32621  01B3BA  6B41               	clrf	65,b	;volatile
 32622                           
 32623                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 32624  01B3BC  0E97               	movlw	151
 32625  01B3BE  6F61               	movwf	97,b	;volatile
 32626                           
 32627                           ; BSR set to: 58
 32628                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 32629  01B3C0  6B82               	clrf	130,b	;volatile
 32630                           
 32631                           ; BSR set to: 58
 32632                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 32633  01B3C2  6B92               	clrf	146,b	;volatile
 32634                           
 32635                           ; BSR set to: 58
 32636                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 32637  01B3C4  6B42               	clrf	66,b	;volatile
 32638                           
 32639                           ; BSR set to: 58
 32640                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 32641  01B3C6  6B52               	clrf	82,b	;volatile
 32642                           
 32643                           ; BSR set to: 58
 32644                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 32645  01B3C8  6B62               	clrf	98,b	;volatile
 32646                           
 32647                           ; BSR set to: 58
 32648                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 32649  01B3CA  6B72               	clrf	114,b	;volatile
 32650                           
 32651                           ; BSR set to: 58
 32652                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 32653  01B3CC  6943               	setf	67,b	;volatile
 32654                           
 32655                           ; BSR set to: 58
 32656                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 32657  01B3CE  6953               	setf	83,b	;volatile
 32658                           
 32659                           ; BSR set to: 58
 32660                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 32661  01B3D0  6963               	setf	99,b	;volatile
 32662                           
 32663                           ; BSR set to: 58
 32664                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 32665  01B3D2  6973               	setf	115,b	;volatile
 32666                           
 32667                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 32668  01B3D4  0E07               	movlw	7
 32669  01B3D6  6F83               	movwf	131,b	;volatile
 32670                           
 32671                           ; BSR set to: 58
 32672                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 32673  01B3D8  6993               	setf	147,b	;volatile
 32674                           
 32675                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 32676  01B3DA  0E0F               	movlw	15
 32677  01B3DC  6FE8               	movwf	232,b	;volatile
 32678                           
 32679                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 32680  01B3DE  0E13               	movlw	19
 32681  01B3E0  6FDE               	movwf	222,b	;volatile
 32682                           
 32683                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 32684  01B3E2  0E16               	movlw	22
 32685  01B3E4  6F0E               	movwf	14,b	;volatile
 32686                           
 32687                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 32688  01B3E6  0E1E               	movlw	30
 32689  01B3E8  6F13               	movwf	19,b	;volatile
 32690                           
 32691                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 32692  01B3EA  0E08               	movlw	8
 32693  01B3EC  6FC0               	movwf	192,b	;volatile
 32694                           
 32695                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 32696  01B3EE  0E10               	movlw	16
 32697  01B3F0  6F19               	movwf	25,b	;volatile
 32698                           
 32699                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 32700  01B3F2  0E09               	movlw	9
 32701  01B3F4  6FC1               	movwf	193,b	;volatile
 32702                           
 32703                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 32704  01B3F6  0E1F               	movlw	31
 32705  01B3F8  6F15               	movwf	21,b	;volatile
 32706                           
 32707                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 32708  01B3FA  0E13               	movlw	19
 32709  01B3FC  6F16               	movwf	22,b	;volatile
 32710                           
 32711                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 32712  01B3FE  0E17               	movlw	23
 32713  01B400  6FE5               	movwf	229,b	;volatile
 32714                           
 32715                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 32716  01B402  0E14               	movlw	20
 32717  01B404  6FDF               	movwf	223,b	;volatile
 32718                           
 32719                           ; BSR set to: 58
 32720                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 32721  01B406  0012               	return		;funcret
 32722  01B408                     __end_of_PIN_MANAGER_Initialize:
 32723                           	opt callstack 0
 32724                           
 32725 ;; *************** function _OSCILLATOR_Initialize *****************
 32726 ;; Defined at:
 32727 ;;		line 72 in file "mcc_generated_files/mcc.c"
 32728 ;; Parameters:    Size  Location     Type
 32729 ;;		None
 32730 ;; Auto vars:     Size  Location     Type
 32731 ;;		None
 32732 ;; Return value:  Size  Location     Type
 32733 ;;                  1  [STACK] void 
 32734 ;; Registers used:
 32735 ;;		wreg, status,2
 32736 ;; Tracked objects:
 32737 ;;		On entry : 3F/3A
 32738 ;;		On exit  : 3F/39
 32739 ;;		Unchanged: 0/0
 32740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32745 ;;Total ram usage:        0 bytes
 32746 ;; Hardware stack levels used:    1
 32747 ;; Hardware stack levels required when called:   15
 32748 ;; This function calls:
 32749 ;;		Nothing
 32750 ;; This function is called by:
 32751 ;;		_SYSTEM_Initialize
 32752 ;; This function uses a reentrant model
 32753 ;;
 32754                           
 32755                           	psect	text134
 32756  01CA56                     __ptext134:
 32757                           	opt callstack 0
 32758  01CA56                     _OSCILLATOR_Initialize:
 32759                           	opt callstack 14
 32760                           
 32761                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 32762                           
 32763                           ; BSR set to: 58
 32764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32765                           ;incstack = 0
 32766  01CA56  0E20               	movlw	32
 32767  01CA58  0139               	movlb	57	; () banked
 32768  01CA5A  6FD9               	movwf	217,b	;volatile
 32769                           
 32770                           ; BSR set to: 57
 32771                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 32772  01CA5C  6BDB               	clrf	219,b	;volatile
 32773                           
 32774                           ; BSR set to: 57
 32775                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 32776  01CA5E  6BDD               	clrf	221,b	;volatile
 32777                           
 32778                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 32779  01CA60  0E02               	movlw	2
 32780  01CA62  6FDF               	movwf	223,b	;volatile
 32781                           
 32782                           ; BSR set to: 57
 32783                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 32784  01CA64  6BDE               	clrf	222,b	;volatile
 32785  01CA66                     l169:
 32786                           
 32787                           ; BSR set to: 57
 32788                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 32789  01CA66  B1DC               	btfsc	220,0,b	;volatile
 32790  01CA68  0012               	return	
 32791  01CA6A  D7FD               	goto	l169
 32792  01CA6C                     __end_of_OSCILLATOR_Initialize:
 32793                           	opt callstack 0
 32794                           
 32795 ;; *************** function _INTERRUPT_Initialize *****************
 32796 ;; Defined at:
 32797 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 32798 ;; Parameters:    Size  Location     Type
 32799 ;;		None
 32800 ;; Auto vars:     Size  Location     Type
 32801 ;;  state           1  [STACK] _Bool 
 32802 ;; Return value:  Size  Location     Type
 32803 ;;                  1  [STACK] void 
 32804 ;; Registers used:
 32805 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 32806 ;; Tracked objects:
 32807 ;;		On entry : 0/0
 32808 ;;		On exit  : 3F/39
 32809 ;;		Unchanged: 0/0
 32810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32815 ;;Total ram usage:        0 bytes
 32816 ;; Hardware stack levels used:    1
 32817 ;; Hardware stack levels required when called:   15
 32818 ;; This function calls:
 32819 ;;		Nothing
 32820 ;; This function is called by:
 32821 ;;		_SYSTEM_Initialize
 32822 ;; This function uses a reentrant model
 32823 ;;
 32824                           
 32825                           	psect	text135
 32826  01B9A0                     __ptext135:
 32827                           	opt callstack 0
 32828  01B9A0                     _INTERRUPT_Initialize:
 32829                           	opt callstack 0
 32830                           
 32831                           ; BSR set to: 57
 32832                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32833  01B9A0  52E6               	movf	postinc1,f,c
 32834                           
 32835                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 32836                           
 32837                           ;incstack = 0
 32838  01B9A2  8AD2               	bsf	210,5,c	;volatile
 32839                           
 32840                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 32841  01B9A4  AED2               	btfss	16338,7,c	;volatile
 32842  01B9A6  D003               	goto	u9690
 32843  01B9A8  6A0C               	clrf	(btemp+11)^0,c
 32844  01B9AA  2A0C               	incf	(btemp+11)^0,f,c
 32845  01B9AC  D001               	goto	u9708
 32846  01B9AE                     u9690:
 32847  01B9AE  6A0C               	clrf	(btemp+11)^0,c
 32848  01B9B0                     u9708:
 32849                           
 32850                           ;stkvar	_state @ sp[(-1)+0]
 32851  01B9B0  0EFF               	movlw	-1
 32852  01B9B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 32853                           
 32854                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 32855  01B9B8  9ED2               	bcf	16338,7,c	;volatile
 32856                           
 32857                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 32858  01B9BA  0E55               	movlw	85
 32859  01B9BC  6ED4               	movwf	212,c	;volatile
 32860                           
 32861                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 32862  01B9BE  0EAA               	movlw	170
 32863  01B9C0  6ED4               	movwf	212,c	;volatile
 32864                           
 32865                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 32866  01B9C2  90D4               	bcf	212,0,c	;volatile
 32867                           
 32868                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 32869  01B9C4  0138               	movlb	56	; () banked
 32870  01B9C6  6B9F               	clrf	159,b	;volatile
 32871                           
 32872                           ; BSR set to: 56
 32873                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 32874  01B9C8  6B9E               	clrf	158,b	;volatile
 32875                           
 32876                           ; BSR set to: 56
 32877                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 32878  01B9CA  0E08               	movlw	8
 32879  01B9CC  6F9D               	movwf	157,b	;volatile
 32880                           
 32881                           ; BSR set to: 56
 32882                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 32883  01B9CE  0E55               	movlw	85
 32884  01B9D0  6ED4               	movwf	212,c	;volatile
 32885                           
 32886                           ; BSR set to: 56
 32887                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 32888  01B9D2  0EAA               	movlw	170
 32889  01B9D4  6ED4               	movwf	212,c	;volatile
 32890                           
 32891                           ; BSR set to: 56
 32892                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 32893  01B9D6  80D4               	bsf	212,0,c	;volatile
 32894                           
 32895                           ; BSR set to: 56
 32896                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 32897                           ;stkvar	_state @ sp[(-1)+0]
 32898  01B9D8  0EFF               	movlw	-1
 32899  01B9DA  B0E3               	btfsc	plusw1,0,c
 32900  01B9DC  D002               	bra	u9715
 32901  01B9DE  9ED2               	bcf	16338,7,c	;volatile
 32902  01B9E0  D001               	bra	u9716
 32903  01B9E2                     u9715:
 32904  01B9E2  8ED2               	bsf	16338,7,c	;volatile
 32905  01B9E4                     u9716:
 32906                           
 32907                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 32908  01B9E4  0139               	movlb	57	; () banked
 32909  01B9E6  8782               	bsf	130,3,b	;volatile
 32910                           
 32911                           ; BSR set to: 57
 32912                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 32913  01B9E8  8382               	bsf	130,1,b	;volatile
 32914                           
 32915                           ; BSR set to: 57
 32916                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 32917  01B9EA  8182               	bsf	130,0,b	;volatile
 32918                           
 32919                           ; BSR set to: 57
 32920                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 32921  01B9EC  8582               	bsf	130,2,b	;volatile
 32922                           
 32923                           ; BSR set to: 57
 32924                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 32925  01B9EE  8786               	bsf	134,3,b	;volatile
 32926                           
 32927                           ; BSR set to: 57
 32928                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 32929  01B9F0  8586               	bsf	134,2,b	;volatile
 32930                           
 32931                           ; BSR set to: 57
 32932                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 32933  01B9F2  8783               	bsf	131,3,b	;volatile
 32934                           
 32935                           ; BSR set to: 57
 32936                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 32937  01B9F4  8181               	bsf	129,0,b	;volatile
 32938                           
 32939                           ; BSR set to: 57
 32940                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 32941  01B9F6  9185               	bcf	133,0,b	;volatile
 32942                           
 32943                           ; BSR set to: 57
 32944                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 32945  01B9F8  8189               	bsf	137,0,b	;volatile
 32946                           
 32947                           ; BSR set to: 57
 32948                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 32949  01B9FA  9D88               	bcf	136,6,b	;volatile
 32950                           
 32951                           ; BSR set to: 57
 32952                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 32953  01B9FC  9D86               	bcf	134,6,b	;volatile
 32954                           
 32955                           ; BSR set to: 57
 32956                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 32957  01B9FE  8581               	bsf	129,2,b	;volatile
 32958                           
 32959                           ; BSR set to: 57
 32960                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 32961  01BA00  8781               	bsf	129,3,b	;volatile
 32962                           
 32963                           ; BSR set to: 57
 32964                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32965  01BA02  52E5               	movf	postdec1,f,c
 32966  01BA04  0012               	return		;funcret
 32967  01BA06                     __end_of_INTERRUPT_Initialize:
 32968                           	opt callstack 0
 32969                           
 32970 ;; *************** function _FVR_Initialize *****************
 32971 ;; Defined at:
 32972 ;;		line 58 in file "mcc_generated_files/fvr.c"
 32973 ;; Parameters:    Size  Location     Type
 32974 ;;		None
 32975 ;; Auto vars:     Size  Location     Type
 32976 ;;		None
 32977 ;; Return value:  Size  Location     Type
 32978 ;;                  1  [STACK] void 
 32979 ;; Registers used:
 32980 ;;		wreg, status,2
 32981 ;; Tracked objects:
 32982 ;;		On entry : 3F/39
 32983 ;;		On exit  : 3F/3E
 32984 ;;		Unchanged: 0/0
 32985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32990 ;;Total ram usage:        0 bytes
 32991 ;; Hardware stack levels used:    1
 32992 ;; Hardware stack levels required when called:   15
 32993 ;; This function calls:
 32994 ;;		Nothing
 32995 ;; This function is called by:
 32996 ;;		_SYSTEM_Initialize
 32997 ;; This function uses a reentrant model
 32998 ;;
 32999                           
 33000                           	psect	text136
 33001  01CB72                     __ptext136:
 33002                           	opt callstack 0
 33003  01CB72                     _FVR_Initialize:
 33004                           	opt callstack 14
 33005                           
 33006                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 33007                           
 33008                           ; BSR set to: 57
 33009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33010                           ;incstack = 0
 33011  01CB72  0EAF               	movlw	175
 33012  01CB74  013E               	movlb	62	; () banked
 33013  01CB76  6FC1               	movwf	193,b	;volatile
 33014                           
 33015                           ; BSR set to: 62
 33016                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33017  01CB78  0012               	return		;funcret
 33018  01CB7A                     __end_of_FVR_Initialize:
 33019                           	opt callstack 0
 33020                           
 33021 ;; *************** function _EXT_INT_Initialize *****************
 33022 ;; Defined at:
 33023 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 33024 ;; Parameters:    Size  Location     Type
 33025 ;;		None
 33026 ;; Auto vars:     Size  Location     Type
 33027 ;;		None
 33028 ;; Return value:  Size  Location     Type
 33029 ;;                  1  [STACK] void 
 33030 ;; Registers used:
 33031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33032 ;; Tracked objects:
 33033 ;;		On entry : 3F/39
 33034 ;;		On exit  : 3F/39
 33035 ;;		Unchanged: 0/0
 33036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33041 ;;Total ram usage:        0 bytes
 33042 ;; Hardware stack levels used:    1
 33043 ;; Hardware stack levels required when called:   16
 33044 ;; This function calls:
 33045 ;;		_INT0_SetInterruptHandler
 33046 ;;		_INT1_SetInterruptHandler
 33047 ;; This function is called by:
 33048 ;;		_SYSTEM_Initialize
 33049 ;; This function uses a reentrant model
 33050 ;;
 33051                           
 33052                           	psect	text137
 33053  01C384                     __ptext137:
 33054                           	opt callstack 0
 33055  01C384                     _EXT_INT_Initialize:
 33056                           	opt callstack 13
 33057                           
 33058                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 33059                           
 33060                           ; BSR set to: 62
 33061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33062                           ;incstack = 0
 33063  01C384  0139               	movlb	57	; () banked
 33064  01C386  91A1               	bcf	161,0,b	;volatile
 33065                           
 33066                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 33067  01C388  90D2               	bcf	210,0,c	;volatile
 33068                           
 33069                           ; BSR set to: 57
 33070                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 33071  01C38A  0E9E               	movlw	low _INT0_DefaultInterruptHandler
 33072  01C38C  6EE6               	movwf	postinc1,c
 33073  01C38E  0ECB               	movlw	high _INT0_DefaultInterruptHandler
 33074  01C390  6EE6               	movwf	postinc1,c
 33075  01C392  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 33076  01C394  6EE6               	movwf	postinc1,c
 33077  01C396  EC5F  F0E3         	call	_INT0_SetInterruptHandler	;wreg free
 33078                           
 33079                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 33080  01C39A  0139               	movlb	57	; () banked
 33081  01C39C  8191               	bsf	145,0,b	;volatile
 33082                           
 33083                           ; BSR set to: 57
 33084                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 33085  01C39E  91A5               	bcf	165,0,b	;volatile
 33086                           
 33087                           ; BSR set to: 57
 33088                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 33089  01C3A0  92D2               	bcf	210,1,c	;volatile
 33090                           
 33091                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 33092  01C3A2  0E9A               	movlw	low _INT1_DefaultInterruptHandler
 33093  01C3A4  6EE6               	movwf	postinc1,c
 33094  01C3A6  0ECB               	movlw	high _INT1_DefaultInterruptHandler
 33095  01C3A8  6EE6               	movwf	postinc1,c
 33096  01C3AA  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 33097  01C3AC  6EE6               	movwf	postinc1,c
 33098  01C3AE  EC4B  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
 33099                           
 33100                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 33101  01C3B2  0139               	movlb	57	; () banked
 33102  01C3B4  8195               	bsf	149,0,b	;volatile
 33103                           
 33104                           ; BSR set to: 57
 33105                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33106  01C3B6  0012               	return		;funcret
 33107  01C3B8                     __end_of_EXT_INT_Initialize:
 33108                           	opt callstack 0
 33109                           
 33110 ;; *************** function _INT1_SetInterruptHandler *****************
 33111 ;; Defined at:
 33112 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 33113 ;; Parameters:    Size  Location     Type
 33114 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33115 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 33116 ;; Auto vars:     Size  Location     Type
 33117 ;;		None
 33118 ;; Return value:  Size  Location     Type
 33119 ;;                  1  [STACK] void 
 33120 ;; Registers used:
 33121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33122 ;; Tracked objects:
 33123 ;;		On entry : 3F/39
 33124 ;;		On exit  : 0/0
 33125 ;;		Unchanged: 0/0
 33126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33131 ;;Total ram usage:        0 bytes
 33132 ;; Hardware stack levels used:    1
 33133 ;; Hardware stack levels required when called:   15
 33134 ;; This function calls:
 33135 ;;		Nothing
 33136 ;; This function is called by:
 33137 ;;		_EXT_INT_Initialize
 33138 ;;		_start_switch_handler
 33139 ;; This function uses a reentrant model
 33140 ;;
 33141                           
 33142                           	psect	text138
 33143  01C696                     __ptext138:
 33144                           	opt callstack 0
 33145  01C696                     _INT1_SetInterruptHandler:
 33146                           	opt callstack 14
 33147                           
 33148                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 33149                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33150                           
 33151                           ; BSR set to: 57
 33152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33153                           ;incstack = 0
 33154  01C696  50E1               	movf	fsr1l,w,c
 33155  01C698  0FFD               	addlw	-3
 33156  01C69A  6ED9               	movwf	fsr2l,c
 33157  01C69C  50E2               	movf	fsr1h,w,c
 33158  01C69E  6EDA               	movwf	fsr2h,c
 33159  01C6A0  0EFF               	movlw	255
 33160  01C6A2  22DA               	addwfc	fsr2h,f,c
 33161  01C6A4  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 33162  01C6AA  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 33163  01C6B0  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 33164                           
 33165                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33166  01C6B6  52E5               	movf	postdec1,f,c
 33167  01C6B8  52E5               	movf	postdec1,f,c
 33168  01C6BA  52E5               	movf	postdec1,f,c
 33169  01C6BC  0012               	return		;funcret
 33170  01C6BE                     __end_of_INT1_SetInterruptHandler:
 33171                           	opt callstack 0
 33172                           
 33173 ;; *************** function _INT0_SetInterruptHandler *****************
 33174 ;; Defined at:
 33175 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 33176 ;; Parameters:    Size  Location     Type
 33177 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33178 ;;		 -> INT0_DefaultInterruptHandler(1), 
 33179 ;; Auto vars:     Size  Location     Type
 33180 ;;		None
 33181 ;; Return value:  Size  Location     Type
 33182 ;;                  1  [STACK] void 
 33183 ;; Registers used:
 33184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33185 ;; Tracked objects:
 33186 ;;		On entry : 3F/39
 33187 ;;		On exit  : 0/0
 33188 ;;		Unchanged: 0/0
 33189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33194 ;;Total ram usage:        0 bytes
 33195 ;; Hardware stack levels used:    1
 33196 ;; Hardware stack levels required when called:   15
 33197 ;; This function calls:
 33198 ;;		Nothing
 33199 ;; This function is called by:
 33200 ;;		_EXT_INT_Initialize
 33201 ;; This function uses a reentrant model
 33202 ;;
 33203                           
 33204                           	psect	text139
 33205  01C6BE                     __ptext139:
 33206                           	opt callstack 0
 33207  01C6BE                     _INT0_SetInterruptHandler:
 33208                           	opt callstack 13
 33209                           
 33210                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 33211                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33212                           
 33213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33214                           ;incstack = 0
 33215  01C6BE  50E1               	movf	fsr1l,w,c
 33216  01C6C0  0FFD               	addlw	-3
 33217  01C6C2  6ED9               	movwf	fsr2l,c
 33218  01C6C4  50E2               	movf	fsr1h,w,c
 33219  01C6C6  6EDA               	movwf	fsr2h,c
 33220  01C6C8  0EFF               	movlw	255
 33221  01C6CA  22DA               	addwfc	fsr2h,f,c
 33222  01C6CC  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 33223  01C6D2  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 33224  01C6D8  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 33225                           
 33226                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33227  01C6DE  52E5               	movf	postdec1,f,c
 33228  01C6E0  52E5               	movf	postdec1,f,c
 33229  01C6E2  52E5               	movf	postdec1,f,c
 33230  01C6E4  0012               	return		;funcret
 33231  01C6E6                     __end_of_INT0_SetInterruptHandler:
 33232                           	opt callstack 0
 33233                           
 33234 ;; *************** function _DMA2_Initialize *****************
 33235 ;; Defined at:
 33236 ;;		line 61 in file "mcc_generated_files/dma2.c"
 33237 ;; Parameters:    Size  Location     Type
 33238 ;;		None
 33239 ;; Auto vars:     Size  Location     Type
 33240 ;;		None
 33241 ;; Return value:  Size  Location     Type
 33242 ;;                  1  [STACK] void 
 33243 ;; Registers used:
 33244 ;;		wreg, status,2
 33245 ;; Tracked objects:
 33246 ;;		On entry : 3F/3D
 33247 ;;		On exit  : 3F/3B
 33248 ;;		Unchanged: 0/0
 33249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33254 ;;Total ram usage:        0 bytes
 33255 ;; Hardware stack levels used:    1
 33256 ;; Hardware stack levels required when called:   15
 33257 ;; This function calls:
 33258 ;;		Nothing
 33259 ;; This function is called by:
 33260 ;;		_SYSTEM_Initialize
 33261 ;; This function uses a reentrant model
 33262 ;;
 33263                           
 33264                           	psect	text140
 33265  01BC42                     __ptext140:
 33266                           	opt callstack 0
 33267  01BC42                     _DMA2_Initialize:
 33268                           	opt callstack 14
 33269                           
 33270                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 33271                           
 33272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33273                           ;incstack = 0
 33274  01BC42  0E00               	movlw	0
 33275  01BC44  013B               	movlb	59	; () banked
 33276  01BC46  6FD9               	movwf	217,b	;volatile
 33277  01BC48  0E10               	movlw	16
 33278  01BC4A  6FDA               	movwf	218,b	;volatile
 33279  01BC4C  0E00               	movlw	0
 33280  01BC4E  6FDB               	movwf	219,b	;volatile
 33281                           
 33282                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 33283  01BC50  0E3F               	movlw	63
 33284  01BC52  6FD1               	movwf	209,b	;volatile
 33285  01BC54  0EBB               	movlw	187
 33286  01BC56  6FD0               	movwf	208,b	;volatile
 33287                           
 33288                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 33289  01BC58  0E03               	movlw	3
 33290  01BC5A  6FDD               	movwf	221,b	;volatile
 33291                           
 33292                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 33293  01BC5C  0E00               	movlw	0
 33294  01BC5E  6FD8               	movwf	216,b	;volatile
 33295  01BC60  0E01               	movlw	1
 33296  01BC62  6FD7               	movwf	215,b	;volatile
 33297                           
 33298                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 33299  01BC64  0E00               	movlw	0
 33300  01BC66  6FCF               	movwf	207,b	;volatile
 33301  01BC68  0E01               	movlw	1
 33302  01BC6A  6FCE               	movwf	206,b	;volatile
 33303                           
 33304                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 33305  01BC6C  0E1C               	movlw	28
 33306  01BC6E  6FDF               	movwf	223,b	;volatile
 33307                           
 33308                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 33309  01BC70  0E3D               	movlw	61
 33310  01BC72  6FDE               	movwf	222,b	;volatile
 33311                           
 33312                           ; BSR set to: 59
 33313                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 33314  01BC74  0139               	movlb	57	; () banked
 33315  01BC76  97A5               	bcf	165,3,b	;volatile
 33316                           
 33317                           ; BSR set to: 57
 33318                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 33319  01BC78  95A5               	bcf	165,2,b	;volatile
 33320                           
 33321                           ; BSR set to: 57
 33322                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 33323  01BC7A  9BA5               	bcf	165,5,b	;volatile
 33324                           
 33325                           ; BSR set to: 57
 33326                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 33327  01BC7C  99A5               	bcf	165,4,b	;volatile
 33328                           
 33329                           ; BSR set to: 57
 33330                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 33331  01BC7E  9795               	bcf	149,3,b	;volatile
 33332                           
 33333                           ; BSR set to: 57
 33334                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 33335  01BC80  9595               	bcf	149,2,b	;volatile
 33336                           
 33337                           ; BSR set to: 57
 33338                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 33339  01BC82  9B95               	bcf	149,5,b	;volatile
 33340                           
 33341                           ; BSR set to: 57
 33342                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 33343  01BC84  9995               	bcf	149,4,b	;volatile
 33344  01BC86  9ED2               	bcf	16338,7,c	;# 
 33345  01BC88  0139               	banksel	14831	;# 
 33346  01BC8A  0E55               	movlw	85	;# 
 33347  01BC8C  6FEF               	movwf	14831,b	;# 
 33348  01BC8E  0EAA               	movlw	170	;# 
 33349  01BC90  6FEF               	movwf	14831,b	;# 
 33350  01BC92  81EF               	bsf	14831,0,b	;# 
 33351  01BC94  8ED2               	bsf	16338,7,c	;# 
 33352                           
 33353                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 33354  01BC96  013B               	movlb	59	; () banked
 33355  01BC98  6BDC               	clrf	220,b	;volatile
 33356                           
 33357                           ; BSR set to: 59
 33358                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33359  01BC9A  0012               	return		;funcret
 33360  01BC9C                     __end_of_DMA2_Initialize:
 33361                           	opt callstack 0
 33362                           
 33363 ;; *************** function _DMA1_Initialize *****************
 33364 ;; Defined at:
 33365 ;;		line 86 in file "mcc_generated_files/dma1.c"
 33366 ;; Parameters:    Size  Location     Type
 33367 ;;		None
 33368 ;; Auto vars:     Size  Location     Type
 33369 ;;		None
 33370 ;; Return value:  Size  Location     Type
 33371 ;;                  1  [STACK] void 
 33372 ;; Registers used:
 33373 ;;		wreg, status,2
 33374 ;; Tracked objects:
 33375 ;;		On entry : 3F/3B
 33376 ;;		On exit  : 3F/3B
 33377 ;;		Unchanged: 0/0
 33378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33383 ;;Total ram usage:        0 bytes
 33384 ;; Hardware stack levels used:    1
 33385 ;; Hardware stack levels required when called:   15
 33386 ;; This function calls:
 33387 ;;		Nothing
 33388 ;; This function is called by:
 33389 ;;		_SYSTEM_Initialize
 33390 ;; This function uses a reentrant model
 33391 ;;
 33392                           
 33393                           	psect	text141
 33394  01B7FA                     __ptext141:
 33395                           	opt callstack 0
 33396  01B7FA                     _DMA1_Initialize:
 33397                           	opt callstack 14
 33398                           
 33399                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 33400                           
 33401                           ; BSR set to: 59
 33402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33403                           ;incstack = 0
 33404  01B7FA  0E00               	movlw	0
 33405  01B7FC  013B               	movlb	59	; () banked
 33406  01B7FE  6FF9               	movwf	249,b	;volatile
 33407  01B800  0E10               	movlw	16
 33408  01B802  6FFA               	movwf	250,b	;volatile
 33409  01B804  0E00               	movlw	0
 33410  01B806  6FFB               	movwf	251,b	;volatile
 33411                           
 33412                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 33413  01B808  0E3D               	movlw	61
 33414  01B80A  6FF1               	movwf	241,b	;volatile
 33415  01B80C  0E11               	movlw	17
 33416  01B80E  6FF0               	movwf	240,b	;volatile
 33417                           
 33418                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 33419  01B810  0E03               	movlw	3
 33420  01B812  6FFD               	movwf	253,b	;volatile
 33421                           
 33422                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 33423  01B814  0E00               	movlw	0
 33424  01B816  6FF8               	movwf	248,b	;volatile
 33425  01B818  0E01               	movlw	1
 33426  01B81A  6FF7               	movwf	247,b	;volatile
 33427                           
 33428                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 33429  01B81C  0E00               	movlw	0
 33430  01B81E  6FEF               	movwf	239,b	;volatile
 33431  01B820  0E01               	movlw	1
 33432  01B822  6FEE               	movwf	238,b	;volatile
 33433                           
 33434                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 33435  01B824  0E15               	movlw	21
 33436  01B826  6FFF               	movwf	255,b	;volatile
 33437                           
 33438                           ; BSR set to: 59
 33439                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 33440  01B828  6BFE               	clrf	254,b	;volatile
 33441                           
 33442                           ; BSR set to: 59
 33443                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 33444  01B82A  0139               	movlb	57	; () banked
 33445  01B82C  93A2               	bcf	162,1,b	;volatile
 33446                           
 33447                           ; BSR set to: 57
 33448                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 33449  01B82E  91A2               	bcf	162,0,b	;volatile
 33450                           
 33451                           ; BSR set to: 57
 33452                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 33453  01B830  97A2               	bcf	162,3,b	;volatile
 33454                           
 33455                           ; BSR set to: 57
 33456                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 33457  01B832  95A2               	bcf	162,2,b	;volatile
 33458                           
 33459                           ; BSR set to: 57
 33460                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 33461  01B834  8392               	bsf	146,1,b	;volatile
 33462                           
 33463                           ; BSR set to: 57
 33464                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 33465  01B836  8192               	bsf	146,0,b	;volatile
 33466                           
 33467                           ; BSR set to: 57
 33468                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 33469  01B838  8792               	bsf	146,3,b	;volatile
 33470                           
 33471                           ; BSR set to: 57
 33472                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 33473  01B83A  8592               	bsf	146,2,b	;volatile
 33474                           
 33475                           ; BSR set to: 57
 33476                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 33477  01B83C  6BF1               	clrf	241,b	;volatile
 33478                           
 33479                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 33480  01B83E  0E01               	movlw	1
 33481  01B840  6FF2               	movwf	242,b	;volatile
 33482                           
 33483                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 33484  01B842  0E04               	movlw	4
 33485  01B844  6FF3               	movwf	243,b	;volatile
 33486                           
 33487                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 33488  01B846  0E02               	movlw	2
 33489  01B848  6FF4               	movwf	244,b	;volatile
 33490                           
 33491                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 33492  01B84A  0E03               	movlw	3
 33493  01B84C  6FF7               	movwf	247,b	;volatile
 33494  01B84E  9ED2               	bcf	16338,7,c	;# 
 33495  01B850  0139               	banksel	14831	;# 
 33496  01B852  0E55               	movlw	85	;# 
 33497  01B854  6FEF               	movwf	14831,b	;# 
 33498  01B856  0EAA               	movlw	170	;# 
 33499  01B858  6FEF               	movwf	14831,b	;# 
 33500  01B85A  81EF               	bsf	14831,0,b	;# 
 33501  01B85C  8ED2               	bsf	16338,7,c	;# 
 33502                           
 33503                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 33504  01B85E  013B               	movlb	59	; () banked
 33505  01B860  6BFC               	clrf	252,b	;volatile
 33506                           
 33507                           ; BSR set to: 59
 33508                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33509  01B862  0012               	return		;funcret
 33510  01B864                     __end_of_DMA1_Initialize:
 33511                           	opt callstack 0
 33512                           
 33513 ;; *************** function _CLKREF_Initialize *****************
 33514 ;; Defined at:
 33515 ;;		line 58 in file "mcc_generated_files/clkref.c"
 33516 ;; Parameters:    Size  Location     Type
 33517 ;;		None
 33518 ;; Auto vars:     Size  Location     Type
 33519 ;;		None
 33520 ;; Return value:  Size  Location     Type
 33521 ;;                  1  [STACK] void 
 33522 ;; Registers used:
 33523 ;;		wreg, status,2
 33524 ;; Tracked objects:
 33525 ;;		On entry : 3F/3B
 33526 ;;		On exit  : 3F/3C
 33527 ;;		Unchanged: 0/0
 33528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33533 ;;Total ram usage:        0 bytes
 33534 ;; Hardware stack levels used:    1
 33535 ;; Hardware stack levels required when called:   15
 33536 ;; This function calls:
 33537 ;;		Nothing
 33538 ;; This function is called by:
 33539 ;;		_SYSTEM_Initialize
 33540 ;; This function uses a reentrant model
 33541 ;;
 33542                           
 33543                           	psect	text142
 33544  01CB1A                     __ptext142:
 33545                           	opt callstack 0
 33546  01CB1A                     _CLKREF_Initialize:
 33547                           	opt callstack 14
 33548                           
 33549                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 33550                           
 33551                           ; BSR set to: 59
 33552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33553                           ;incstack = 0
 33554  01CB1A  013C               	movlb	60	; () banked
 33555  01CB1C  6BE6               	clrf	230,b	;volatile
 33556                           
 33557                           ; BSR set to: 60
 33558                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 33559  01CB1E  0E94               	movlw	148
 33560  01CB20  6FE5               	movwf	229,b	;volatile
 33561                           
 33562                           ; BSR set to: 60
 33563                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33564  01CB22  0012               	return		;funcret
 33565  01CB24                     __end_of_CLKREF_Initialize:
 33566                           	opt callstack 0
 33567                           
 33568 ;; *************** function _ADCC_Initialize *****************
 33569 ;; Defined at:
 33570 ;;		line 65 in file "mcc_generated_files/adcc.c"
 33571 ;; Parameters:    Size  Location     Type
 33572 ;;		None
 33573 ;; Auto vars:     Size  Location     Type
 33574 ;;		None
 33575 ;; Return value:  Size  Location     Type
 33576 ;;                  1  [STACK] void 
 33577 ;; Registers used:
 33578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33579 ;; Tracked objects:
 33580 ;;		On entry : 3F/3E
 33581 ;;		On exit  : 0/0
 33582 ;;		Unchanged: 0/0
 33583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33588 ;;Total ram usage:        0 bytes
 33589 ;; Hardware stack levels used:    1
 33590 ;; Hardware stack levels required when called:   16
 33591 ;; This function calls:
 33592 ;;		_ADCC_SetADIInterruptHandler
 33593 ;;		_ADCC_SetADTIInterruptHandler
 33594 ;; This function is called by:
 33595 ;;		_SYSTEM_Initialize
 33596 ;; This function uses a reentrant model
 33597 ;;
 33598                           
 33599                           	psect	text143
 33600  01B864                     __ptext143:
 33601                           	opt callstack 0
 33602  01B864                     _ADCC_Initialize:
 33603                           	opt callstack 13
 33604                           
 33605                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 33606                           
 33607                           ; BSR set to: 60
 33608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33609                           ;incstack = 0
 33610  01B864  013E               	movlb	62	; () banked
 33611  01B866  6BDE               	clrf	222,b	;volatile
 33612                           
 33613                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 33614  01B868  6BDF               	clrf	223,b	;volatile
 33615                           
 33616                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 33617  01B86A  6BE0               	clrf	224,b	;volatile
 33618                           
 33619                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 33620  01B86C  6BE1               	clrf	225,b	;volatile
 33621                           
 33622                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 33623  01B86E  6BE4               	clrf	228,b	;volatile
 33624                           
 33625                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 33626  01B870  6BE5               	clrf	229,b	;volatile
 33627                           
 33628                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 33629  01B872  6BEA               	clrf	234,b	;volatile
 33630                           
 33631                           ; BSR set to: 62
 33632                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 33633  01B874  0E40               	movlw	64
 33634  01B876  6FEC               	movwf	236,b	;volatile
 33635                           
 33636                           ; BSR set to: 62
 33637                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 33638  01B878  6BF1               	clrf	241,b	;volatile
 33639                           
 33640                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 33641  01B87A  0E20               	movlw	32
 33642  01B87C  6FF3               	movwf	243,b	;volatile
 33643                           
 33644                           ; BSR set to: 62
 33645                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 33646  01B87E  6BF4               	clrf	244,b	;volatile
 33647                           
 33648                           ; BSR set to: 62
 33649                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 33650  01B880  6BF5               	clrf	245,b	;volatile
 33651                           
 33652                           ; BSR set to: 62
 33653                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 33654  01B882  6BF6               	clrf	246,b	;volatile
 33655                           
 33656                           ; BSR set to: 62
 33657                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 33658  01B884  6BF7               	clrf	247,b	;volatile
 33659                           
 33660                           ; BSR set to: 62
 33661                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 33662  01B886  6BF9               	clrf	249,b	;volatile
 33663                           
 33664                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 33665  01B888  0E5B               	movlw	91
 33666  01B88A  6FFA               	movwf	250,b	;volatile
 33667                           
 33668                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 33669  01B88C  0E27               	movlw	39
 33670  01B88E  6FFB               	movwf	251,b	;volatile
 33671                           
 33672                           ; BSR set to: 62
 33673                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 33674  01B890  6BFC               	clrf	252,b	;volatile
 33675                           
 33676                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 33677  01B892  0E02               	movlw	2
 33678  01B894  6FFD               	movwf	253,b	;volatile
 33679                           
 33680                           ; BSR set to: 62
 33681                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 33682  01B896  6BFE               	clrf	254,b	;volatile
 33683                           
 33684                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 33685  01B898  0E07               	movlw	7
 33686  01B89A  6FFF               	movwf	255,b	;volatile
 33687                           
 33688                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 33689  01B89C  0E84               	movlw	132
 33690  01B89E  6FF8               	movwf	248,b	;volatile
 33691                           
 33692                           ; BSR set to: 62
 33693                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 33694  01B8A0  0139               	movlb	57	; () banked
 33695  01B8A2  95A1               	bcf	161,2,b	;volatile
 33696                           
 33697                           ; BSR set to: 57
 33698                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 33699  01B8A4  8591               	bsf	145,2,b	;volatile
 33700                           
 33701                           ; BSR set to: 57
 33702                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 33703  01B8A6  0EA0               	movlw	low _ADCC_DefaultInterruptHandler
 33704  01B8A8  6EE6               	movwf	postinc1,c
 33705  01B8AA  0ECB               	movlw	high _ADCC_DefaultInterruptHandler
 33706  01B8AC  6EE6               	movwf	postinc1,c
 33707  01B8AE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33708  01B8B0  6EE6               	movwf	postinc1,c
 33709  01B8B2  EC87  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 33710                           
 33711                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 33712  01B8B6  0139               	movlb	57	; () banked
 33713  01B8B8  97A1               	bcf	161,3,b	;volatile
 33714                           
 33715                           ; BSR set to: 57
 33716                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 33717  01B8BA  8791               	bsf	145,3,b	;volatile
 33718                           
 33719                           ; BSR set to: 57
 33720                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 33721  01B8BC  0EA0               	movlw	low _ADCC_DefaultInterruptHandler
 33722  01B8BE  6EE6               	movwf	postinc1,c
 33723  01B8C0  0ECB               	movlw	high _ADCC_DefaultInterruptHandler
 33724  01B8C2  6EE6               	movwf	postinc1,c
 33725  01B8C4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33726  01B8C6  6EE6               	movwf	postinc1,c
 33727  01B8C8  EC73  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 33728                           
 33729                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33730  01B8CC  0012               	return		;funcret
 33731  01B8CE                     __end_of_ADCC_Initialize:
 33732                           	opt callstack 0
 33733                           
 33734 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 33735 ;; Defined at:
 33736 ;;		line 336 in file "mcc_generated_files/adcc.c"
 33737 ;; Parameters:    Size  Location     Type
 33738 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33739 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 33740 ;; Auto vars:     Size  Location     Type
 33741 ;;		None
 33742 ;; Return value:  Size  Location     Type
 33743 ;;                  1  [STACK] void 
 33744 ;; Registers used:
 33745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33746 ;; Tracked objects:
 33747 ;;		On entry : 0/0
 33748 ;;		On exit  : 0/0
 33749 ;;		Unchanged: 0/0
 33750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33755 ;;Total ram usage:        0 bytes
 33756 ;; Hardware stack levels used:    1
 33757 ;; Hardware stack levels required when called:   15
 33758 ;; This function calls:
 33759 ;;		Nothing
 33760 ;; This function is called by:
 33761 ;;		_ADCC_Initialize
 33762 ;;		_start_adc_scan
 33763 ;; This function uses a reentrant model
 33764 ;;
 33765                           
 33766                           	psect	text144
 33767  01C6E6                     __ptext144:
 33768                           	opt callstack 0
 33769  01C6E6                     _ADCC_SetADTIInterruptHandler:
 33770                           	opt callstack 14
 33771                           
 33772                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 33773                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33774                           
 33775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33776                           ;incstack = 0
 33777  01C6E6  50E1               	movf	fsr1l,w,c
 33778  01C6E8  0FFD               	addlw	-3
 33779  01C6EA  6ED9               	movwf	fsr2l,c
 33780  01C6EC  50E2               	movf	fsr1h,w,c
 33781  01C6EE  6EDA               	movwf	fsr2h,c
 33782  01C6F0  0EFF               	movlw	255
 33783  01C6F2  22DA               	addwfc	fsr2h,f,c
 33784  01C6F4  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 33785  01C6FA  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 33786  01C700  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 33787                           
 33788                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 33789  01C706  52E5               	movf	postdec1,f,c
 33790  01C708  52E5               	movf	postdec1,f,c
 33791  01C70A  52E5               	movf	postdec1,f,c
 33792  01C70C  0012               	return		;funcret
 33793  01C70E                     __end_of_ADCC_SetADTIInterruptHandler:
 33794                           	opt callstack 0
 33795                           
 33796 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 33797 ;; Defined at:
 33798 ;;		line 323 in file "mcc_generated_files/adcc.c"
 33799 ;; Parameters:    Size  Location     Type
 33800 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33801 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 33802 ;; Auto vars:     Size  Location     Type
 33803 ;;		None
 33804 ;; Return value:  Size  Location     Type
 33805 ;;                  1  [STACK] void 
 33806 ;; Registers used:
 33807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33808 ;; Tracked objects:
 33809 ;;		On entry : 6/0
 33810 ;;		On exit  : 0/0
 33811 ;;		Unchanged: 0/0
 33812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33817 ;;Total ram usage:        0 bytes
 33818 ;; Hardware stack levels used:    1
 33819 ;; Hardware stack levels required when called:   15
 33820 ;; This function calls:
 33821 ;;		Nothing
 33822 ;; This function is called by:
 33823 ;;		_ADCC_Initialize
 33824 ;;		_start_adc_scan
 33825 ;; This function uses a reentrant model
 33826 ;;
 33827                           
 33828                           	psect	text145
 33829  01C70E                     __ptext145:
 33830                           	opt callstack 0
 33831  01C70E                     _ADCC_SetADIInterruptHandler:
 33832                           	opt callstack 14
 33833                           
 33834                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 33835                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33836                           
 33837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33838                           ;incstack = 0
 33839  01C70E  50E1               	movf	fsr1l,w,c
 33840  01C710  0FFD               	addlw	-3
 33841  01C712  6ED9               	movwf	fsr2l,c
 33842  01C714  50E2               	movf	fsr1h,w,c
 33843  01C716  6EDA               	movwf	fsr2h,c
 33844  01C718  0EFF               	movlw	255
 33845  01C71A  22DA               	addwfc	fsr2h,f,c
 33846  01C71C  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 33847  01C722  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 33848  01C728  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 33849                           
 33850                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33851  01C72E  52E5               	movf	postdec1,f,c
 33852  01C730  52E5               	movf	postdec1,f,c
 33853  01C732  52E5               	movf	postdec1,f,c
 33854  01C734  0012               	return		;funcret
 33855  01C736                     __end_of_ADCC_SetADIInterruptHandler:
 33856                           	opt callstack 0
 33857                           
 33858 ;; *************** function _INT1_ISR *****************
 33859 ;; Defined at:
 33860 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 33861 ;; Parameters:    Size  Location     Type
 33862 ;;		None
 33863 ;; Auto vars:     Size  Location     Type
 33864 ;;		None
 33865 ;; Return value:  Size  Location     Type
 33866 ;;                  1    wreg      void 
 33867 ;; Registers used:
 33868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33869 ;; Tracked objects:
 33870 ;;		On entry : 0/0
 33871 ;;		On exit  : 0/0
 33872 ;;		Unchanged: 0/0
 33873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33878 ;;Total ram usage:        4 bytes
 33879 ;; Hardware stack levels used:    1
 33880 ;; Hardware stack levels required when called:    5
 33881 ;; This function calls:
 33882 ;;		_INT1_CallBack
 33883 ;; This function is called by:
 33884 ;;		Interrupt level 1
 33885 ;; This function uses a non-reentrant model
 33886 ;;
 33887                           
 33888                           	psect	text146
 33889  01C194                     __ptext146:
 33890                           	opt callstack 0
 33891  01C194                     _INT1_ISR:
 33892                           	opt callstack 11
 33893                           
 33894                           ;incstack = 0
 33895  01C194  006F FF60  F027    	movff	status,??_INT1_ISR
 33896  01C19A  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 33897  01C1A0  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 33898  01C1A6  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 33899  01C1AC  EE16  F0AF         	lfsr	1,___intlo_sp
 33900                           
 33901                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 33902  01C1B0  0139               	movlb	57	; () banked
 33903  01C1B2  91A5               	bcf	165,0,b	;volatile
 33904                           
 33905                           ; BSR set to: 57
 33906                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 33907  01C1B4  ECEA  F0E3         	call	_INT1_CallBack	;wreg free
 33908  01C1B8  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 33909  01C1BE  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 33910  01C1C4  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 33911  01C1CA  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 33912  01C1D0  0011               	retfie		f
 33913  01C1D2                     __end_of_INT1_ISR:
 33914                           	opt callstack 0
 33915                           
 33916 ;; *************** function _INT1_CallBack *****************
 33917 ;; Defined at:
 33918 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 33919 ;; Parameters:    Size  Location     Type
 33920 ;;		None
 33921 ;; Auto vars:     Size  Location     Type
 33922 ;;		None
 33923 ;; Return value:  Size  Location     Type
 33924 ;;                  1  [STACK] void 
 33925 ;; Registers used:
 33926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33927 ;; Tracked objects:
 33928 ;;		On entry : 3F/39
 33929 ;;		On exit  : 0/0
 33930 ;;		Unchanged: 0/0
 33931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33936 ;;Total ram usage:        0 bytes
 33937 ;; Hardware stack levels used:    1
 33938 ;; Hardware stack levels required when called:    4
 33939 ;; This function calls:
 33940 ;;		Absolute function
 33941 ;;		_INT1_DefaultInterruptHandler
 33942 ;;		_switch_handler
 33943 ;; This function is called by:
 33944 ;;		_INT1_ISR
 33945 ;; This function uses a reentrant model
 33946 ;;
 33947                           
 33948                           	psect	text147
 33949  01C7D4                     __ptext147:
 33950                           	opt callstack 0
 33951  01C7D4                     _INT1_CallBack:
 33952                           	opt callstack 11
 33953                           
 33954                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 33955                           
 33956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33957                           ;incstack = 0
 33958  01C7D4  0100               	movlb	0	; () banked
 33959  01C7D6  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33960  01C7D8  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33961  01C7DA  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33962  01C7DC  B4D8               	btfsc	status,2,c
 33963  01C7DE  0012               	return	
 33964                           
 33965                           ; BSR set to: 0
 33966                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 33967  01C7E0  D801               	call	u1038_28
 33968  01C7E2  0012               	return	
 33969  01C7E4                     u1038_28:
 33970  01C7E4  0005               	push	
 33971  01C7E6  6EFA               	movwf	pclath,c
 33972  01C7E8  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33973  01C7EA  6EFD               	movwf	tosl,c
 33974  01C7EC  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33975  01C7EE  6EFE               	movwf	tosh,c
 33976  01C7F0  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33977  01C7F2  6EFF               	movwf	tosu,c
 33978  01C7F4  50FA               	movf	pclath,w,c
 33979  01C7F6  0012               	return		;indir
 33980  01C7F8                     __end_of_INT1_CallBack:
 33981                           	opt callstack 0
 33982                           
 33983 ;; *************** function _INT1_DefaultInterruptHandler *****************
 33984 ;; Defined at:
 33985 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 33986 ;; Parameters:    Size  Location     Type
 33987 ;;		None
 33988 ;; Auto vars:     Size  Location     Type
 33989 ;;		None
 33990 ;; Return value:  Size  Location     Type
 33991 ;;                  1  [STACK] void 
 33992 ;; Registers used:
 33993 ;;		None
 33994 ;; Tracked objects:
 33995 ;;		On entry : 3F/0
 33996 ;;		On exit  : 0/0
 33997 ;;		Unchanged: 0/0
 33998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34003 ;;Total ram usage:        0 bytes
 34004 ;; Hardware stack levels used:    1
 34005 ;; Hardware stack levels required when called:    3
 34006 ;; This function calls:
 34007 ;;		Nothing
 34008 ;; This function is called by:
 34009 ;;		_EXT_INT_Initialize
 34010 ;;		_INT1_CallBack
 34011 ;; This function uses a reentrant model
 34012 ;;
 34013                           
 34014                           	psect	text148
 34015  01CB9A                     __ptext148:
 34016                           	opt callstack 0
 34017  01CB9A                     _INT1_DefaultInterruptHandler:
 34018                           	opt callstack 11
 34019                           
 34020                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34021                           
 34022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34023                           ;incstack = 0
 34024  01CB9A  0012               	return		;funcret
 34025  01CB9C                     __end_of_INT1_DefaultInterruptHandler:
 34026                           	opt callstack 0
 34027                           
 34028 ;; *************** function _switch_handler *****************
 34029 ;; Defined at:
 34030 ;;		line 58 in file "dio.c"
 34031 ;; Parameters:    Size  Location     Type
 34032 ;;		None
 34033 ;; Auto vars:     Size  Location     Type
 34034 ;;  i               1  [STACK] unsigned char 
 34035 ;;  sw_value        1  [STACK] unsigned char 
 34036 ;; Return value:  Size  Location     Type
 34037 ;;                  1  [STACK] void 
 34038 ;; Registers used:
 34039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 34040 ;; Tracked objects:
 34041 ;;		On entry : 3F/0
 34042 ;;		On exit  : 0/0
 34043 ;;		Unchanged: 0/0
 34044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34049 ;;Total ram usage:        0 bytes
 34050 ;; Hardware stack levels used:    1
 34051 ;; Hardware stack levels required when called:    3
 34052 ;; This function calls:
 34053 ;;		Nothing
 34054 ;; This function is called by:
 34055 ;;		_start_switch_handler
 34056 ;;		_INT1_CallBack
 34057 ;; This function uses a reentrant model
 34058 ;;
 34059                           
 34060                           	psect	text149
 34061  0199F4                     __ptext149:
 34062                           	opt callstack 0
 34063  0199F4                     _switch_handler:
 34064                           	opt callstack 0
 34065                           
 34066                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34067  0199F4  52E6               	movf	postinc1,f,c
 34068  0199F6  52E6               	movf	postinc1,f,c
 34069                           
 34070                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 34071                           ;stkvar	_i @ sp[(-2)+0]
 34072                           
 34073                           ;incstack = 0
 34074  0199F8  0EFE               	movlw	-2
 34075  0199FA  6AE3               	clrf	plusw1,c
 34076  0199FC  9ABF               	bcf	191,5,c	;volatile
 34077                           
 34078                           ;dio.c: 72:  __nop();
 34079  0199FE  F000               	nop	
 34080                           
 34081                           ;dio.c: 73:  __nop();
 34082  019A00  F000               	nop	
 34083                           
 34084                           ;dio.c: 74:  __nop();
 34085  019A02  F000               	nop	
 34086                           
 34087                           ;dio.c: 75:  __nop();
 34088  019A04  F000               	nop	
 34089                           
 34090                           ;dio.c: 76:  __nop();
 34091  019A06  F000               	nop	
 34092                           
 34093                           ;dio.c: 77:  __nop();
 34094  019A08  F000               	nop	
 34095  019A0A  D016               	goto	l11007
 34096  019A0C                     l10993:
 34097                           
 34098                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 34099  019A0C  A6CF               	btfss	207,3,c	;volatile
 34100  019A0E  D00E               	goto	u1004_20
 34101  019A10  D00A               	goto	u1004_21
 34102  019A12                     u1002_28:
 34103                           
 34104                           ;stkvar	_sw_value @ sp[(-2)+1]
 34105  019A12  0EFF               	movlw	-1
 34106  019A14  0060  F033  FFE3   	movff	btemp+11,plusw1
 34107                           
 34108                           ;dio.c: 83:    break;
 34109  019A1A  D027               	goto	l11009
 34110  019A1C                     l10995:
 34111                           
 34112                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 34113  019A1C  A4CF               	btfss	207,2,c	;volatile
 34114  019A1E  D006               	goto	u1004_20
 34115  019A20  D002               	goto	u1004_21
 34116  019A22                     l10997:
 34117                           
 34118                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 34119  019A22  A6CD               	btfss	205,3,c	;volatile
 34120  019A24  D003               	goto	u1004_20
 34121  019A26                     u1004_21:
 34122  019A26  6A0C               	clrf	(btemp+11)^0,c
 34123  019A28  2A0C               	incf	(btemp+11)^0,f,c
 34124  019A2A  D7F3               	goto	u1002_28
 34125  019A2C                     u1004_20:
 34126  019A2C  6A0C               	clrf	(btemp+11)^0,c
 34127  019A2E  D7F1               	goto	u1002_28
 34128  019A30                     l10999:
 34129                           
 34130                           ;dio.c: 91:    sw_value = 1;
 34131                           ;stkvar	_sw_value @ sp[(-2)+1]
 34132  019A30  0EFF               	movlw	-1
 34133  019A32  6AE3               	clrf	plusw1,c
 34134  019A34  2AE3               	incf	plusw1,f,c
 34135                           
 34136                           ;dio.c: 92:    break;
 34137  019A36  D019               	goto	l11009
 34138  019A38                     l11007:
 34139                           
 34140                           ;stkvar	_i @ sp[(-2)+0]
 34141  019A38  0EFE               	movlw	-2
 34142  019A3A  50E3               	movf	plusw1,w,c
 34143  019A3C  6E0B               	movwf	(btemp+10)^0,c
 34144  019A3E  6A0C               	clrf	(btemp+11)^0,c
 34145                           
 34146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34147                           ; Switch size 1, requested type "simple"
 34148                           ; Number of cases is 1, Range of values is 0 to 0
 34149                           ; switch strategies available:
 34150                           ; Name         Instructions Cycles
 34151                           ; simple_byte            4     3 (average)
 34152                           ;	Chosen strategy is simple_byte
 34153  019A40  500C               	movf	(btemp+11)^0,w,c
 34154  019A42  0A00               	xorlw	0	; case 0
 34155  019A44  A4D8               	btfss	status,2,c
 34156  019A46  D7F4               	goto	l10999
 34157                           
 34158                           ; Switch size 1, requested type "simple"
 34159                           ; Number of cases is 5, Range of values is 0 to 4
 34160                           ; switch strategies available:
 34161                           ; Name         Instructions Cycles
 34162                           ; simple_byte           16     9 (average)
 34163                           ;	Chosen strategy is simple_byte
 34164  019A48  500B               	movf	(btemp+10)^0,w,c
 34165  019A4A  0A00               	xorlw	0	; case 0
 34166  019A4C  B4D8               	btfsc	status,2,c
 34167  019A4E  D7F0               	goto	l10999
 34168  019A50  0A01               	xorlw	1	; case 1
 34169  019A52  B4D8               	btfsc	status,2,c
 34170  019A54  D7ED               	goto	l10999
 34171  019A56  0A03               	xorlw	3	; case 2
 34172  019A58  B4D8               	btfsc	status,2,c
 34173  019A5A  D7E0               	goto	l10995
 34174  019A5C  0A01               	xorlw	1	; case 3
 34175  019A5E  B4D8               	btfsc	status,2,c
 34176  019A60  D7D5               	goto	l10993
 34177  019A62  0A07               	xorlw	7	; case 4
 34178  019A64  B4D8               	btfsc	status,2,c
 34179  019A66  D7DD               	goto	l10997
 34180  019A68  D7E3               	goto	l10999
 34181  019A6A                     l11009:
 34182                           
 34183                           ;dio.c: 102:   if (sw_value) {
 34184                           ;stkvar	_sw_value @ sp[(-2)+1]
 34185  019A6A  0EFF               	movlw	-1
 34186  019A6C  50E3               	movf	plusw1,w,c
 34187  019A6E  B4D8               	btfsc	status,2,c
 34188  019A70  D018               	goto	l11015
 34189                           
 34190                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 34191                           ;stkvar	_i @ sp[(-2)+0]
 34192  019A72  0EFE               	movlw	-2
 34193  019A74  50E3               	movf	plusw1,w,c
 34194  019A76  0D05               	mullw	5
 34195  019A78  0E54               	movlw	low _S
 34196  019A7A  24F3               	addwf	243,w,c
 34197  019A7C  6ED9               	movwf	fsr2l,c
 34198  019A7E  0E02               	movlw	high _S
 34199  019A80  20F4               	addwfc	prodh,w,c
 34200  019A82  6EDA               	movwf	fsr2h,c
 34201  019A84  04DE               	decf	postinc2,w,c
 34202  019A86  A4D8               	btfss	status,2,c
 34203  019A88  D049               	goto	l11023
 34204                           
 34205                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 34206                           ;stkvar	_i @ sp[(-2)+0]
 34207  019A8A  0EFE               	movlw	-2
 34208  019A8C  50E3               	movf	plusw1,w,c
 34209  019A8E  0D05               	mullw	5
 34210  019A90  0E54               	movlw	low _S
 34211  019A92  24F3               	addwf	243,w,c
 34212  019A94  6ED9               	movwf	fsr2l,c
 34213  019A96  0E02               	movlw	high _S
 34214  019A98  20F4               	addwfc	prodh,w,c
 34215  019A9A  6EDA               	movwf	fsr2h,c
 34216  019A9C  0E00               	movlw	0
 34217  019A9E  6EDF               	movwf	indf2,c
 34218  019AA0  D03D               	goto	l11023
 34219  019AA2                     l11015:
 34220                           
 34221                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 34222                           ;stkvar	_i @ sp[(-2)+0]
 34223  019AA2  0EFE               	movlw	-2
 34224  019AA4  50E3               	movf	plusw1,w,c
 34225  019AA6  0D05               	mullw	5
 34226  019AA8  0E54               	movlw	low _S
 34227  019AAA  24F3               	addwf	243,w,c
 34228  019AAC  6ED9               	movwf	fsr2l,c
 34229  019AAE  0E02               	movlw	high _S
 34230  019AB0  20F4               	addwfc	prodh,w,c
 34231  019AB2  6EDA               	movwf	fsr2h,c
 34232  019AB4  50DF               	movf	indf2,w,c
 34233  019AB6  A4D8               	btfss	status,2,c
 34234  019AB8  D031               	goto	l11023
 34235                           
 34236                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 34237                           ;stkvar	_i @ sp[(-2)+0]
 34238  019ABA  0EFE               	movlw	-2
 34239  019ABC  50E3               	movf	plusw1,w,c
 34240  019ABE  0D05               	mullw	5
 34241  019AC0  0E54               	movlw	low _S
 34242  019AC2  24F3               	addwf	243,w,c
 34243  019AC4  6ED9               	movwf	fsr2l,c
 34244  019AC6  0E02               	movlw	high _S
 34245  019AC8  20F4               	addwfc	prodh,w,c
 34246  019ACA  6EDA               	movwf	fsr2h,c
 34247  019ACC  0E01               	movlw	1
 34248  019ACE  6EDF               	movwf	indf2,c
 34249                           
 34250                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 34251  019AD0  EE20  F1C3         	lfsr	2,_V+188	;volatile
 34252                           
 34253                           ;stkvar	_i @ sp[(-2)+0]
 34254  019AD4  0EFE               	movlw	-2
 34255  019AD6  50E3               	movf	plusw1,w,c
 34256  019AD8  0D05               	mullw	5
 34257  019ADA  0E55               	movlw	low (_S+1)
 34258  019ADC  24F3               	addwf	243,w,c
 34259  019ADE  6EE9               	movwf	fsr0l,c
 34260  019AE0  0E02               	movlw	high (_S+1)
 34261  019AE2  20F4               	addwfc	prodh,w,c
 34262  019AE4  6EEA               	movwf	fsr0h,c
 34263  019AE6  006F FF7B FFEE     	movff	postinc2,postinc0
 34264  019AEC  006F FF7B FFEE     	movff	postinc2,postinc0
 34265  019AF2  006F FF7B FFEE     	movff	postinc2,postinc0
 34266  019AF8  006F FF7B FFEE     	movff	postinc2,postinc0
 34267                           
 34268                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 34269                           ;stkvar	_i @ sp[(-2)+0]
 34270  019AFE  0EFE               	movlw	-2
 34271  019B00  006F FF8C  F00C    	movff	plusw1,btemp+11
 34272  019B06  0E01               	movlw	1
 34273  019B08  6E0B               	movwf	(btemp+10)^0,c
 34274  019B0A  2A0C               	incf	(btemp+11)^0,f,c
 34275  019B0C  D002               	goto	u1008_24
 34276  019B0E                     u1008_25:
 34277  019B0E  90D8               	bcf	status,0,c
 34278  019B10  360B               	rlcf	(btemp+10)^0,f,c
 34279  019B12                     u1008_24:
 34280  019B12  2E0C               	decfsz	(btemp+11)^0,f,c
 34281  019B14  D7FC               	goto	u1008_25
 34282  019B16  500B               	movf	(btemp+10)^0,w,c
 34283  019B18  0102               	movlb	2	; () banked
 34284  019B1A  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 34285  019B1C                     l11023:
 34286                           
 34287                           ;dio.c: 113:  } while (++i < 6);
 34288                           ;stkvar	_i @ sp[(-2)+0]
 34289  019B1C  0EFE               	movlw	-2
 34290  019B1E  2AE3               	incf	plusw1,f,c
 34291  019B20  0EFE               	movlw	-2
 34292  019B22  006F FF8C  F001    	movff	plusw1,btemp
 34293  019B28  0E05               	movlw	5
 34294  019B2A  6401               	cpfsgt	btemp^0,c
 34295  019B2C  D785               	goto	l11007
 34296                           
 34297                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 34298  019B2E  8ABF               	bsf	191,5,c	;volatile
 34299                           
 34300                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34301  019B30  52E5               	movf	postdec1,f,c
 34302  019B32  52E5               	movf	postdec1,f,c
 34303  019B34  0012               	return		;funcret
 34304  019B36                     __end_of_switch_handler:
 34305                           	opt callstack 0
 34306                           
 34307 ;; *************** function _TMR5_ISR *****************
 34308 ;; Defined at:
 34309 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 34310 ;; Parameters:    Size  Location     Type
 34311 ;;		None
 34312 ;; Auto vars:     Size  Location     Type
 34313 ;;		None
 34314 ;; Return value:  Size  Location     Type
 34315 ;;                  1    wreg      void 
 34316 ;; Registers used:
 34317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34318 ;; Tracked objects:
 34319 ;;		On entry : 0/0
 34320 ;;		On exit  : 3F/0
 34321 ;;		Unchanged: 0/0
 34322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34325 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34326 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34327 ;;Total ram usage:       15 bytes
 34328 ;; Hardware stack levels used:    1
 34329 ;; Hardware stack levels required when called:    9
 34330 ;; This function calls:
 34331 ;;		_TMR5_CallBack
 34332 ;;		_TMR5_WriteTimer
 34333 ;; This function is called by:
 34334 ;;		Interrupt level 1
 34335 ;; This function uses a non-reentrant model
 34336 ;;
 34337                           
 34338                           	psect	text150
 34339  01A740                     __ptext150:
 34340                           	opt callstack 0
 34341  01A740                     _TMR5_ISR:
 34342                           	opt callstack 7
 34343                           
 34344                           ;incstack = 0
 34345  01A740  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 34346  01A746  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 34347  01A74C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 34348  01A752  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 34349  01A758  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 34350  01A75E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 34351  01A764  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 34352  01A76A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 34353  01A770  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 34354  01A776  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 34355  01A77C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 34356  01A782  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 34357  01A788  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 34358  01A78E  EE16  F0AF         	lfsr	1,___intlo_sp
 34359                           
 34360                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 34361  01A792  0139               	movlb	57	; () banked
 34362  01A794  9DA8               	bcf	168,6,b	;volatile
 34363                           
 34364                           ; BSR set to: 57
 34365                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 34366  01A796  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 34367  01A79C  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 34368  01A7A2  EC8A  F0E0         	call	_TMR5_WriteTimer	;wreg free
 34369                           
 34370                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 34371  01A7A6  0101               	movlb	1	; () banked
 34372  01A7A8  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 34373  01A7AA  6E2B               	movwf	??_TMR5_ISR^0,c
 34374  01A7AC  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 34375  01A7AE  0E05               	movlw	5
 34376  01A7B0  262B               	addwf	??_TMR5_ISR^0,f,c
 34377  01A7B2  0E00               	movlw	0
 34378  01A7B4  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 34379  01A7B6  0100               	movlb	0	; () banked
 34380  01A7B8  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 34381  01A7BA  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34382  01A7BC  502B               	movf	??_TMR5_ISR^0,w,c
 34383  01A7BE  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 34384  01A7C0  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 34385  01A7C2  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34386  01A7C4  A0D8               	btfss	status,0,c
 34387  01A7C6  D005               	goto	i1l1019
 34388                           
 34389                           ; BSR set to: 0
 34390                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 34391  01A7C8  ECFC  F0E3         	call	_TMR5_CallBack	;wreg free
 34392                           
 34393                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 34394  01A7CC  0100               	movlb	0	; () banked
 34395  01A7CE  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 34396  01A7D0  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 34397  01A7D2                     i1l1019:
 34398                           
 34399                           ; BSR set to: 0
 34400  01A7D2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 34401  01A7D8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 34402  01A7DE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 34403  01A7E4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 34404  01A7EA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 34405  01A7F0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 34406  01A7F6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 34407  01A7FC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 34408  01A802  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 34409  01A808  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 34410  01A80E  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 34411  01A814  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 34412  01A81A  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 34413  01A820  0011               	retfie		f
 34414  01A822                     __end_of_TMR5_ISR:
 34415                           	opt callstack 0
 34416                           
 34417 ;; *************** function _TMR5_WriteTimer *****************
 34418 ;; Defined at:
 34419 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 34420 ;; Parameters:    Size  Location     Type
 34421 ;;  timerVal        2  [STACK] unsigned short 
 34422 ;; Auto vars:     Size  Location     Type
 34423 ;;		None
 34424 ;; Return value:  Size  Location     Type
 34425 ;;                  1  [STACK] void 
 34426 ;; Registers used:
 34427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34428 ;; Tracked objects:
 34429 ;;		On entry : 3F/39
 34430 ;;		On exit  : 0/0
 34431 ;;		Unchanged: 0/0
 34432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34437 ;;Total ram usage:        0 bytes
 34438 ;; Hardware stack levels used:    1
 34439 ;; Hardware stack levels required when called:    3
 34440 ;; This function calls:
 34441 ;;		Nothing
 34442 ;; This function is called by:
 34443 ;;		_TMR5_ISR
 34444 ;; This function uses a reentrant model
 34445 ;;
 34446                           
 34447                           	psect	text151
 34448  01C114                     __ptext151:
 34449                           	opt callstack 0
 34450  01C114                     _TMR5_WriteTimer:
 34451                           	opt callstack 12
 34452                           
 34453                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 34454                           
 34455                           ; BSR set to: 0
 34456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34457                           ;incstack = 0
 34458  01C114  A49A               	btfss	154,2,c	;volatile
 34459  01C116  D00F               	goto	l11233
 34460                           
 34461                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 34462  01C118  909A               	bcf	154,0,c	;volatile
 34463                           
 34464                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 34465                           ;stkvar	_timerVal @ sp[(0)+-2]
 34466  01C11A  0EFF               	movlw	255
 34467  01C11C  24E1               	addwf	fsr1l,w,c
 34468  01C11E  6ED9               	movwf	fsr2l,c
 34469  01C120  0EFF               	movlw	255
 34470  01C122  20E2               	addwfc	fsr1h,w,c
 34471  01C124  6EDA               	movwf	fsr2h,c
 34472  01C126  50DF               	movf	indf2,w,c
 34473  01C128  6E99               	movwf	153,c	;volatile
 34474                           
 34475                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 34476                           ;stkvar	_timerVal @ sp[(0)+-2]
 34477  01C12A  0EFE               	movlw	-2
 34478  01C12C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34479                           
 34480                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 34481  01C132  809A               	bsf	154,0,c	;volatile
 34482                           
 34483                           ;mcc_generated_files/tmr5.c: 144:  } else {
 34484  01C134  D00C               	goto	l1002
 34485  01C136                     l11233:
 34486                           
 34487                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 34488                           ;stkvar	_timerVal @ sp[(0)+-2]
 34489  01C136  0EFF               	movlw	255
 34490  01C138  24E1               	addwf	fsr1l,w,c
 34491  01C13A  6ED9               	movwf	fsr2l,c
 34492  01C13C  0EFF               	movlw	255
 34493  01C13E  20E2               	addwfc	fsr1h,w,c
 34494  01C140  6EDA               	movwf	fsr2h,c
 34495  01C142  50DF               	movf	indf2,w,c
 34496  01C144  6E99               	movwf	153,c	;volatile
 34497                           
 34498                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 34499                           ;stkvar	_timerVal @ sp[(0)+-2]
 34500  01C146  0EFE               	movlw	-2
 34501  01C148  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34502  01C14E                     l1002:
 34503                           
 34504                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34505  01C14E  52E5               	movf	postdec1,f,c
 34506  01C150  52E5               	movf	postdec1,f,c
 34507  01C152  0012               	return		;funcret
 34508  01C154                     __end_of_TMR5_WriteTimer:
 34509                           	opt callstack 0
 34510                           
 34511 ;; *************** function _TMR5_CallBack *****************
 34512 ;; Defined at:
 34513 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 34514 ;; Parameters:    Size  Location     Type
 34515 ;;		None
 34516 ;; Auto vars:     Size  Location     Type
 34517 ;;		None
 34518 ;; Return value:  Size  Location     Type
 34519 ;;                  1  [STACK] void 
 34520 ;; Registers used:
 34521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34522 ;; Tracked objects:
 34523 ;;		On entry : 3F/0
 34524 ;;		On exit  : 0/0
 34525 ;;		Unchanged: 0/0
 34526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34531 ;;Total ram usage:        0 bytes
 34532 ;; Hardware stack levels used:    1
 34533 ;; Hardware stack levels required when called:    8
 34534 ;; This function calls:
 34535 ;;		Absolute function
 34536 ;;		_TMR5_DefaultInterruptHandler
 34537 ;; This function is called by:
 34538 ;;		_TMR5_ISR
 34539 ;; This function uses a reentrant model
 34540 ;;
 34541                           
 34542                           	psect	text152
 34543  01C7F8                     __ptext152:
 34544                           	opt callstack 0
 34545  01C7F8                     _TMR5_CallBack:
 34546                           	opt callstack 7
 34547                           
 34548                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 34549                           
 34550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34551                           ;incstack = 0
 34552  01C7F8  0100               	movlb	0	; () banked
 34553  01C7FA  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34554  01C7FC  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34555  01C7FE  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34556  01C800  B4D8               	btfsc	status,2,c
 34557  01C802  0012               	return	
 34558                           
 34559                           ; BSR set to: 0
 34560                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 34561  01C804  D801               	call	u1047_28
 34562  01C806  0012               	return	
 34563  01C808                     u1047_28:
 34564  01C808  0005               	push	
 34565  01C80A  6EFA               	movwf	pclath,c
 34566  01C80C  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34567  01C80E  6EFD               	movwf	tosl,c
 34568  01C810  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34569  01C812  6EFE               	movwf	tosh,c
 34570  01C814  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34571  01C816  6EFF               	movwf	tosu,c
 34572  01C818  50FA               	movf	pclath,w,c
 34573  01C81A  0012               	return		;indir
 34574  01C81C                     __end_of_TMR5_CallBack:
 34575                           	opt callstack 0
 34576                           
 34577 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 34578 ;; Defined at:
 34579 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 34580 ;; Parameters:    Size  Location     Type
 34581 ;;		None
 34582 ;; Auto vars:     Size  Location     Type
 34583 ;;		None
 34584 ;; Return value:  Size  Location     Type
 34585 ;;                  1  [STACK] void 
 34586 ;; Registers used:
 34587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34588 ;; Tracked objects:
 34589 ;;		On entry : 3F/0
 34590 ;;		On exit  : 0/0
 34591 ;;		Unchanged: 0/0
 34592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34597 ;;Total ram usage:        0 bytes
 34598 ;; Hardware stack levels used:    1
 34599 ;; Hardware stack levels required when called:    7
 34600 ;; This function calls:
 34601 ;;		_check_day_time
 34602 ;; This function is called by:
 34603 ;;		_TMR5_Initialize
 34604 ;;		_TMR5_CallBack
 34605 ;; This function uses a reentrant model
 34606 ;;
 34607                           
 34608                           	psect	text153
 34609  01C244                     __ptext153:
 34610                           	opt callstack 0
 34611  01C244                     _TMR5_DefaultInterruptHandler:
 34612                           	opt callstack 7
 34613                           
 34614                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 34615                           
 34616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34617                           ;incstack = 0
 34618  01C244  A0BE               	btfss	190,0,c	;volatile
 34619  01C246  D002               	goto	u975_20
 34620  01C248  0E01               	movlw	1
 34621  01C24A  D001               	goto	u975_26
 34622  01C24C                     u975_20:
 34623  01C24C  0E00               	movlw	0
 34624  01C24E                     u975_26:
 34625  01C24E  0AFF               	xorlw	255
 34626  01C250  6E0C               	movwf	(btemp+11)^0,c
 34627  01C252  50BE               	movf	190,w,c	;volatile
 34628  01C254  180C               	xorwf	(btemp+11)^0,w,c
 34629  01C256  0BFE               	andlw	-2
 34630  01C258  180C               	xorwf	(btemp+11)^0,w,c
 34631  01C25A  6EBE               	movwf	190,c	;volatile
 34632                           
 34633                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 34634  01C25C  0E01               	movlw	1
 34635  01C25E  0101               	movlb	1	; () banked
 34636  01C260  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 34637  01C262  0E00               	movlw	0
 34638  01C264  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 34639  01C266  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 34640  01C268  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 34641                           
 34642                           ; BSR set to: 1
 34643                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 34644  01C26A  0E01               	movlw	1
 34645  01C26C  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 34646  01C26E  0E00               	movlw	0
 34647  01C270  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 34648  01C272  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 34649  01C274  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 34650                           
 34651                           ; BSR set to: 1
 34652                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 34653  01C276  EC19  F0C7         	call	_check_day_time	;wreg free
 34654                           
 34655                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34656  01C27A  0012               	return		;funcret
 34657  01C27C                     __end_of_TMR5_DefaultInterruptHandler:
 34658                           	opt callstack 0
 34659                           
 34660 ;; *************** function _check_day_time *****************
 34661 ;; Defined at:
 34662 ;;		line 165 in file "mbmc.c"
 34663 ;; Parameters:    Size  Location     Type
 34664 ;;		None
 34665 ;; Auto vars:     Size  Location     Type
 34666 ;;  light           4  [STACK] float 
 34667 ;; Return value:  Size  Location     Type
 34668 ;;                  1  [STACK] _Bool 
 34669 ;; Registers used:
 34670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34671 ;; Tracked objects:
 34672 ;;		On entry : 3F/1
 34673 ;;		On exit  : 0/0
 34674 ;;		Unchanged: 0/0
 34675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34680 ;;Total ram usage:        0 bytes
 34681 ;; Hardware stack levels used:    1
 34682 ;; Hardware stack levels required when called:    6
 34683 ;; This function calls:
 34684 ;;		___flge
 34685 ;;		_conv_raw_result
 34686 ;;		_get_ac_charger_relay
 34687 ;;		_set_ac_charger_relay
 34688 ;; This function is called by:
 34689 ;;		_TMR5_DefaultInterruptHandler
 34690 ;; This function uses a reentrant model
 34691 ;;
 34692                           
 34693                           	psect	text154
 34694  018E32                     __ptext154:
 34695                           	opt callstack 0
 34696  018E32                     _check_day_time:
 34697                           	opt callstack 0
 34698                           
 34699                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34700  018E32  52E6               	movf	postinc1,f,c
 34701  018E34  52E6               	movf	postinc1,f,c
 34702  018E36  52E6               	movf	postinc1,f,c
 34703  018E38  52E6               	movf	postinc1,f,c
 34704                           
 34705                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 34706                           
 34707                           ;incstack = 0
 34708  018E3A  0E00               	movlw	0
 34709  018E3C  6EE6               	movwf	postinc1,c
 34710  018E3E  0E0D               	movlw	13
 34711  018E40  6EE6               	movwf	postinc1,c
 34712  018E42  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 34713                           
 34714                           ;stkvar	_light @ sp[(-4)+0]
 34715  018E46  0EFC               	movlw	-4
 34716  018E48  0060  F007  FFE3   	movff	btemp,plusw1
 34717  018E4E  0EFD               	movlw	-3
 34718  018E50  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34719  018E56  0EFE               	movlw	-2
 34720  018E58  0060  F00F  FFE3   	movff	btemp+2,plusw1
 34721  018E5E  0EFF               	movlw	-1
 34722  018E60  0060  F013  FFE3   	movff	btemp+3,plusw1
 34723                           
 34724                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 34725  018E66  2A41               	incf	check_day_time@day_delay^0,f,c
 34726  018E68  0441               	decf	check_day_time@day_delay^0,w,c
 34727  018E6A  A4D8               	btfss	status,2,c
 34728  018E6C  D0A9               	goto	l2011
 34729  018E6E  0101               	movlb	1	; () banked
 34730  018E70  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 34731  018E72  B4D8               	btfsc	status,2,c
 34732  018E74  D0A5               	goto	l2011
 34733                           
 34734                           ; BSR set to: 1
 34735                           ;mbmc.c: 173:   if (C.soc > 3) {
 34736  018E76  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34737  018E7A  0E01               	movlw	1
 34738  018E7C  50DB               	movf	plusw2,w,c
 34739  018E7E  E104               	bnz	u952_20
 34740  018E80  0E04               	movlw	4
 34741  018E82  5CDE               	subwf	postinc2,w,c
 34742  018E84  A0D8               	btfss	status,0,c
 34743  018E86  D073               	goto	l10203
 34744  018E88                     u952_20:
 34745                           
 34746                           ; BSR set to: 1
 34747                           ;mbmc.c: 174:    if (!C.day) {
 34748  018E88  EE22  F021         	lfsr	2,_C+290	;volatile
 34749  018E8C  50DF               	movf	indf2,w,c
 34750  018E8E  A4D8               	btfss	status,2,c
 34751  018E90  D035               	goto	l10191
 34752                           
 34753                           ; BSR set to: 1
 34754                           ;mbmc.c: 175:     if (light > 22.0) {
 34755                           ;stkvar	_light @ sp[(-4)+0]
 34756  018E92  0EFC               	movlw	-4
 34757  018E94  006F FF8F FFE6     	movff	plusw1,postinc1
 34758  018E9A  006F FF8F FFE6     	movff	plusw1,postinc1
 34759  018EA0  006F FF8F FFE6     	movff	plusw1,postinc1
 34760  018EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 34761  018EAC  0E00               	movlw	0
 34762  018EAE  6EE6               	movwf	postinc1,c
 34763  018EB0  0E00               	movlw	0
 34764  018EB2  6EE6               	movwf	postinc1,c
 34765  018EB4  0EB0               	movlw	176
 34766  018EB6  6EE6               	movwf	postinc1,c
 34767  018EB8  0E41               	movlw	65
 34768  018EBA  6EE6               	movwf	postinc1,c
 34769  018EBC  ECF0  F0CA         	call	___flge	;wreg free
 34770  018EC0  B001               	btfsc	btemp& (0+255),0,c
 34771  018EC2  D07E               	goto	l2011
 34772                           
 34773                           ;mbmc.c: 176:      C.day = 1;
 34774  018EC4  0E01               	movlw	1
 34775  018EC6  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34776                           
 34777                           ;mbmc.c: 177:      C.day_start = V.ticks;
 34778  018ECC  EE20  F188         	lfsr	2,_V+129	;volatile
 34779  018ED0  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 34780  018ED6  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 34781  018EDC  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 34782  018EE2  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 34783                           
 34784                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 34785  018EE8  EC77  F0E5         	call	_get_ac_charger_relay	;wreg free
 34786  018EEC  5001               	movf	btemp^0,w,c
 34787  018EEE  B4D8               	btfsc	status,2,c
 34788  018EF0  D06B               	goto	l2007
 34789                           
 34790                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 34791  018EF2  0E00               	movlw	0
 34792  018EF4  6EE6               	movwf	postinc1,c
 34793  018EF6  EC61  F0E5         	call	_set_ac_charger_relay	;wreg free
 34794  018EFA  D066               	goto	l2007
 34795  018EFC                     l10191:
 34796                           
 34797                           ; BSR set to: 1
 34798                           ;mbmc.c: 184:     if (light < 12.0) {
 34799  018EFC  0E00               	movlw	0
 34800  018EFE  6EE6               	movwf	postinc1,c
 34801  018F00  0E00               	movlw	0
 34802  018F02  6EE6               	movwf	postinc1,c
 34803  018F04  0E40               	movlw	64
 34804  018F06  6EE6               	movwf	postinc1,c
 34805  018F08  0E41               	movlw	65
 34806  018F0A  6EE6               	movwf	postinc1,c
 34807                           
 34808                           ;stkvar	_light @ sp[(-8)+0]
 34809  018F0C  0EF8               	movlw	-8
 34810  018F0E  006F FF8F FFE6     	movff	plusw1,postinc1
 34811  018F14  006F FF8F FFE6     	movff	plusw1,postinc1
 34812  018F1A  006F FF8F FFE6     	movff	plusw1,postinc1
 34813  018F20  006F FF8F FFE6     	movff	plusw1,postinc1
 34814  018F26  ECF0  F0CA         	call	___flge	;wreg free
 34815  018F2A  B001               	btfsc	btemp& (0+255),0,c
 34816  018F2C  D049               	goto	l2011
 34817                           
 34818                           ;mbmc.c: 185:      C.day = 0;
 34819  018F2E  0E00               	movlw	0
 34820  018F30  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34821                           
 34822                           ;mbmc.c: 186:      C.day_end = V.ticks;
 34823  018F36  EE20  F188         	lfsr	2,_V+129	;volatile
 34824  018F3A  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 34825  018F40  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 34826  018F46  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 34827  018F4C  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 34828                           
 34829                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 34830  018F52  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34831  018F56  0E01               	movlw	1
 34832  018F58  50DB               	movf	plusw2,w,c
 34833  018F5A  E136               	bnz	l2007
 34834  018F5C  0E14               	movlw	20
 34835  018F5E  5CDE               	subwf	postinc2,w,c
 34836  018F60  B0D8               	btfsc	status,0,c
 34837  018F62  D032               	goto	l2007
 34838                           
 34839                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 34840  018F64  0E01               	movlw	1
 34841  018F66  6EE6               	movwf	postinc1,c
 34842  018F68  EC61  F0E5         	call	_set_ac_charger_relay	;wreg free
 34843  018F6C  D02D               	goto	l2007
 34844  018F6E                     l10203:
 34845                           
 34846                           ; BSR set to: 1
 34847                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 34848  018F6E  EE21  F377         	lfsr	2,_C+120	;volatile
 34849  018F72  006F FF7B FFE6     	movff	postinc2,postinc1
 34850  018F78  006F FF7B FFE6     	movff	postinc2,postinc1
 34851  018F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34852  018F84  006F FF7B FFE6     	movff	postinc2,postinc1
 34853  018F8A  EE21  F37B         	lfsr	2,_C+124	;volatile
 34854  018F8E  006F FF7B FFE6     	movff	postinc2,postinc1
 34855  018F94  006F FF7B FFE6     	movff	postinc2,postinc1
 34856  018F9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34857  018FA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34858  018FA6  ECF0  F0CA         	call	___flge	;wreg free
 34859  018FAA  B001               	btfsc	btemp& (0+255),0,c
 34860  018FAC  D009               	goto	l2011
 34861                           
 34862                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 34863  018FAE  EC77  F0E5         	call	_get_ac_charger_relay	;wreg free
 34864  018FB2  5001               	movf	btemp^0,w,c
 34865  018FB4  A4D8               	btfss	status,2,c
 34866  018FB6  D004               	goto	l2011
 34867                           
 34868                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 34869  018FB8  0E01               	movlw	1
 34870  018FBA  6EE6               	movwf	postinc1,c
 34871  018FBC  EC61  F0E5         	call	_set_ac_charger_relay	;wreg free
 34872  018FC0                     l2011:
 34873                           
 34874                           ;mbmc.c: 204:  if (day_delay >= 240)
 34875  018FC0  0EEF               	movlw	239
 34876  018FC2  6441               	cpfsgt	check_day_time@day_delay^0,c
 34877  018FC4  D001               	goto	l2007
 34878                           
 34879                           ;mbmc.c: 205:   day_delay = 0;
 34880  018FC6  6A41               	clrf	check_day_time@day_delay^0,c
 34881  018FC8                     l2007:
 34882                           
 34883                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34884  018FC8  52E5               	movf	postdec1,f,c
 34885  018FCA  52E5               	movf	postdec1,f,c
 34886  018FCC  52E5               	movf	postdec1,f,c
 34887  018FCE  52E5               	movf	postdec1,f,c
 34888  018FD0  0012               	return		;funcret
 34889  018FD2                     __end_of_check_day_time:
 34890                           	opt callstack 0
 34891                           
 34892 ;; *************** function _set_ac_charger_relay *****************
 34893 ;; Defined at:
 34894 ;;		line 135 in file "mbmc.c"
 34895 ;; Parameters:    Size  Location     Type
 34896 ;;  mode            1  [STACK] const _Bool 
 34897 ;; Auto vars:     Size  Location     Type
 34898 ;;		None
 34899 ;; Return value:  Size  Location     Type
 34900 ;;                  1  [STACK] void 
 34901 ;; Registers used:
 34902 ;;		wreg, fsr1l, fsr1h
 34903 ;; Tracked objects:
 34904 ;;		On entry : 0/1
 34905 ;;		On exit  : 0/0
 34906 ;;		Unchanged: 0/0
 34907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34912 ;;Total ram usage:        0 bytes
 34913 ;; Hardware stack levels used:    1
 34914 ;; Hardware stack levels required when called:    3
 34915 ;; This function calls:
 34916 ;;		Nothing
 34917 ;; This function is called by:
 34918 ;;		_check_day_time
 34919 ;; This function uses a reentrant model
 34920 ;;
 34921                           
 34922                           	psect	text155
 34923  01CAC2                     __ptext155:
 34924                           	opt callstack 0
 34925  01CAC2                     _set_ac_charger_relay:
 34926                           	opt callstack 9
 34927                           
 34928                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 34929                           ;stkvar	_mode @ sp[(0)+-1]
 34930                           
 34931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34932                           ;incstack = 0
 34933  01CAC2  0EFF               	movlw	-1
 34934  01CAC4  B0E3               	btfsc	plusw1,0,c
 34935  01CAC6  D002               	bra	u947_25
 34936  01CAC8  9CBD               	bcf	189,6,c	;volatile
 34937  01CACA  D001               	bra	u947_26
 34938  01CACC                     u947_25:
 34939  01CACC  8CBD               	bsf	189,6,c	;volatile
 34940  01CACE                     u947_26:
 34941                           
 34942                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 34943  01CACE  52E5               	movf	postdec1,f,c
 34944  01CAD0  0012               	return		;funcret
 34945  01CAD2                     __end_of_set_ac_charger_relay:
 34946                           	opt callstack 0
 34947                           
 34948 ;; *************** function _get_ac_charger_relay *****************
 34949 ;; Defined at:
 34950 ;;		line 140 in file "mbmc.c"
 34951 ;; Parameters:    Size  Location     Type
 34952 ;;		None
 34953 ;; Auto vars:     Size  Location     Type
 34954 ;;		None
 34955 ;; Return value:  Size  Location     Type
 34956 ;;                  1  [STACK] _Bool 
 34957 ;; Registers used:
 34958 ;;		btemp
 34959 ;; Tracked objects:
 34960 ;;		On entry : 0/1
 34961 ;;		On exit  : 0/0
 34962 ;;		Unchanged: 0/0
 34963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34968 ;;Total ram usage:        0 bytes
 34969 ;; Hardware stack levels used:    1
 34970 ;; Hardware stack levels required when called:    3
 34971 ;; This function calls:
 34972 ;;		Nothing
 34973 ;; This function is called by:
 34974 ;;		_check_day_time
 34975 ;;		_calc_bsoc
 34976 ;; This function uses a reentrant model
 34977 ;;
 34978                           
 34979                           	psect	text156
 34980  01CAEE                     __ptext156:
 34981                           	opt callstack 0
 34982  01CAEE                     _get_ac_charger_relay:
 34983                           	opt callstack 10
 34984                           
 34985                           ;mbmc.c: 142:  return LATDbits.LATD6;
 34986                           
 34987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34988                           ;incstack = 0
 34989  01CAEE  ACBD               	btfss	189,6,c	;volatile
 34990  01CAF0  D003               	goto	u968_20
 34991  01CAF2  6A01               	clrf	btemp^0,c
 34992  01CAF4  2A01               	incf	btemp^0,f,c
 34993  01CAF6  0012               	return	
 34994  01CAF8                     u968_20:
 34995  01CAF8  6A01               	clrf	btemp^0,c
 34996                           
 34997                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34998  01CAFA  0012               	return		;funcret
 34999  01CAFC                     __end_of_get_ac_charger_relay:
 35000                           	opt callstack 0
 35001                           
 35002 ;; *************** function _TMR3_ISR *****************
 35003 ;; Defined at:
 35004 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 35005 ;; Parameters:    Size  Location     Type
 35006 ;;		None
 35007 ;; Auto vars:     Size  Location     Type
 35008 ;;		None
 35009 ;; Return value:  Size  Location     Type
 35010 ;;                  1    wreg      void 
 35011 ;; Registers used:
 35012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35013 ;; Tracked objects:
 35014 ;;		On entry : 0/0
 35015 ;;		On exit  : 3F/0
 35016 ;;		Unchanged: 0/0
 35017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35020 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35021 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35022 ;;Total ram usage:       25 bytes
 35023 ;; Hardware stack levels used:    1
 35024 ;; Hardware stack levels required when called:   14
 35025 ;; This function calls:
 35026 ;;		_TMR3_CallBack
 35027 ;;		_TMR3_WriteTimer
 35028 ;; This function is called by:
 35029 ;;		Interrupt level 1
 35030 ;; This function uses a non-reentrant model
 35031 ;;
 35032                           
 35033                           	psect	text157
 35034  019744                     __ptext157:
 35035                           	opt callstack 0
 35036  019744                     _TMR3_ISR:
 35037                           	opt callstack 2
 35038                           
 35039                           ;incstack = 0
 35040  019744  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 35041  01974A  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 35042  019750  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 35043  019756  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 35044  01975C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 35045  019762  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 35046  019768  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 35047  01976E  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 35048  019774  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 35049  01977A  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 35050  019780  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 35051  019786  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 35052  01978C  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 35053  019792  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 35054  019798  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 35055  01979E  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 35056  0197A4  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 35057  0197AA  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 35058  0197B0  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 35059  0197B6  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 35060  0197BC  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 35061  0197C2  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 35062  0197C8  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 35063  0197CE  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 35064  0197D4  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 35065  0197DA  EE16  F0AF         	lfsr	1,___intlo_sp
 35066                           
 35067                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 35068  0197DE  0139               	movlb	57	; () banked
 35069  0197E0  9DA6               	bcf	166,6,b	;volatile
 35070                           
 35071                           ; BSR set to: 57
 35072                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 35073  0197E2  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 35074  0197E8  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 35075  0197EE  ECAA  F0E0         	call	_TMR3_WriteTimer	;wreg free
 35076                           
 35077                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 35078  0197F2  0100               	movlb	0	; () banked
 35079  0197F4  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 35080  0197F6  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 35081  0197F8  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 35082  0197FA  E104               	bnz	i1u1319_20
 35083  0197FC  0E28               	movlw	40
 35084  0197FE  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 35085  019800  A0D8               	btfss	status,0,c
 35086  019802  D005               	goto	i1l1207
 35087  019804                     i1u1319_20:
 35088                           
 35089                           ; BSR set to: 0
 35090                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 35091  019804  EC0E  F0E4         	call	_TMR3_CallBack	;wreg free
 35092                           
 35093                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 35094  019808  0100               	movlb	0	; () banked
 35095  01980A  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 35096  01980C  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 35097  01980E                     i1l1207:
 35098                           
 35099                           ; BSR set to: 0
 35100  01980E  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 35101  019814  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 35102  01981A  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 35103  019820  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 35104  019826  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 35105  01982C  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 35106  019832  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 35107  019838  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 35108  01983E  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 35109  019844  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 35110  01984A  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 35111  019850  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 35112  019856  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 35113  01985C  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 35114  019862  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 35115  019868  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 35116  01986E  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 35117  019874  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 35118  01987A  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 35119  019880  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 35120  019886  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 35121  01988C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 35122  019892  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 35123  019898  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 35124  01989E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 35125  0198A4  0011               	retfie		f
 35126  0198A6                     __end_of_TMR3_ISR:
 35127                           	opt callstack 0
 35128                           
 35129 ;; *************** function _TMR3_WriteTimer *****************
 35130 ;; Defined at:
 35131 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 35132 ;; Parameters:    Size  Location     Type
 35133 ;;  timerVal        2  [STACK] unsigned short 
 35134 ;; Auto vars:     Size  Location     Type
 35135 ;;		None
 35136 ;; Return value:  Size  Location     Type
 35137 ;;                  1  [STACK] void 
 35138 ;; Registers used:
 35139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 35140 ;; Tracked objects:
 35141 ;;		On entry : 3F/39
 35142 ;;		On exit  : 0/0
 35143 ;;		Unchanged: 0/0
 35144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35149 ;;Total ram usage:        0 bytes
 35150 ;; Hardware stack levels used:    1
 35151 ;; Hardware stack levels required when called:    3
 35152 ;; This function calls:
 35153 ;;		Nothing
 35154 ;; This function is called by:
 35155 ;;		_TMR3_ISR
 35156 ;; This function uses a reentrant model
 35157 ;;
 35158                           
 35159                           	psect	text158
 35160  01C154                     __ptext158:
 35161                           	opt callstack 0
 35162  01C154                     _TMR3_WriteTimer:
 35163                           	opt callstack 12
 35164                           
 35165                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 35166                           
 35167                           ; BSR set to: 0
 35168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35169                           ;incstack = 0
 35170  01C154  A4A6               	btfss	166,2,c	;volatile
 35171  01C156  D00F               	goto	l11251
 35172                           
 35173                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 35174  01C158  90A6               	bcf	166,0,c	;volatile
 35175                           
 35176                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 35177                           ;stkvar	_timerVal @ sp[(0)+-2]
 35178  01C15A  0EFF               	movlw	255
 35179  01C15C  24E1               	addwf	fsr1l,w,c
 35180  01C15E  6ED9               	movwf	fsr2l,c
 35181  01C160  0EFF               	movlw	255
 35182  01C162  20E2               	addwfc	fsr1h,w,c
 35183  01C164  6EDA               	movwf	fsr2h,c
 35184  01C166  50DF               	movf	indf2,w,c
 35185  01C168  6EA5               	movwf	165,c	;volatile
 35186                           
 35187                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 35188                           ;stkvar	_timerVal @ sp[(0)+-2]
 35189  01C16A  0EFE               	movlw	-2
 35190  01C16C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35191                           
 35192                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 35193  01C172  80A6               	bsf	166,0,c	;volatile
 35194                           
 35195                           ;mcc_generated_files/tmr3.c: 141:     }
 35196  01C174  D00C               	goto	l1190
 35197  01C176                     l11251:
 35198                           
 35199                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 35200                           ;stkvar	_timerVal @ sp[(0)+-2]
 35201  01C176  0EFF               	movlw	255
 35202  01C178  24E1               	addwf	fsr1l,w,c
 35203  01C17A  6ED9               	movwf	fsr2l,c
 35204  01C17C  0EFF               	movlw	255
 35205  01C17E  20E2               	addwfc	fsr1h,w,c
 35206  01C180  6EDA               	movwf	fsr2h,c
 35207  01C182  50DF               	movf	indf2,w,c
 35208  01C184  6EA5               	movwf	165,c	;volatile
 35209                           
 35210                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 35211                           ;stkvar	_timerVal @ sp[(0)+-2]
 35212  01C186  0EFE               	movlw	-2
 35213  01C188  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35214  01C18E                     l1190:
 35215                           
 35216                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 35217  01C18E  52E5               	movf	postdec1,f,c
 35218  01C190  52E5               	movf	postdec1,f,c
 35219  01C192  0012               	return		;funcret
 35220  01C194                     __end_of_TMR3_WriteTimer:
 35221                           	opt callstack 0
 35222                           
 35223 ;; *************** function _TMR3_CallBack *****************
 35224 ;; Defined at:
 35225 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 35226 ;; Parameters:    Size  Location     Type
 35227 ;;		None
 35228 ;; Auto vars:     Size  Location     Type
 35229 ;;		None
 35230 ;; Return value:  Size  Location     Type
 35231 ;;                  1  [STACK] void 
 35232 ;; Registers used:
 35233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35234 ;; Tracked objects:
 35235 ;;		On entry : 3F/0
 35236 ;;		On exit  : 0/0
 35237 ;;		Unchanged: 0/0
 35238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35243 ;;Total ram usage:        0 bytes
 35244 ;; Hardware stack levels used:    1
 35245 ;; Hardware stack levels required when called:   13
 35246 ;; This function calls:
 35247 ;;		Absolute function
 35248 ;;		_TMR3_DefaultInterruptHandler
 35249 ;;		_calc_bsoc
 35250 ;; This function is called by:
 35251 ;;		_TMR3_ISR
 35252 ;; This function uses a reentrant model
 35253 ;;
 35254                           
 35255                           	psect	text159
 35256  01C81C                     __ptext159:
 35257                           	opt callstack 0
 35258  01C81C                     _TMR3_CallBack:
 35259                           	opt callstack 2
 35260                           
 35261                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 35262                           
 35263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35264                           ;incstack = 0
 35265  01C81C  0100               	movlb	0	; () banked
 35266  01C81E  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35267  01C820  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35268  01C822  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35269  01C824  B4D8               	btfsc	status,2,c
 35270  01C826  0012               	return	
 35271                           
 35272                           ; BSR set to: 0
 35273                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 35274  01C828  D801               	call	u1302_28
 35275  01C82A  0012               	return	
 35276  01C82C                     u1302_28:
 35277  01C82C  0005               	push	
 35278  01C82E  6EFA               	movwf	pclath,c
 35279  01C830  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35280  01C832  6EFD               	movwf	tosl,c
 35281  01C834  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35282  01C836  6EFE               	movwf	tosh,c
 35283  01C838  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35284  01C83A  6EFF               	movwf	tosu,c
 35285  01C83C  50FA               	movf	pclath,w,c
 35286  01C83E  0012               	return		;indir
 35287  01C840                     __end_of_TMR3_CallBack:
 35288                           	opt callstack 0
 35289                           
 35290 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 35291 ;; Defined at:
 35292 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 35293 ;; Parameters:    Size  Location     Type
 35294 ;;		None
 35295 ;; Auto vars:     Size  Location     Type
 35296 ;;		None
 35297 ;; Return value:  Size  Location     Type
 35298 ;;                  1  [STACK] void 
 35299 ;; Registers used:
 35300 ;;		None
 35301 ;; Tracked objects:
 35302 ;;		On entry : 3F/0
 35303 ;;		On exit  : 0/0
 35304 ;;		Unchanged: 0/0
 35305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35310 ;;Total ram usage:        0 bytes
 35311 ;; Hardware stack levels used:    1
 35312 ;; Hardware stack levels required when called:    3
 35313 ;; This function calls:
 35314 ;;		Nothing
 35315 ;; This function is called by:
 35316 ;;		_TMR3_Initialize
 35317 ;;		_TMR3_CallBack
 35318 ;; This function uses a reentrant model
 35319 ;;
 35320                           
 35321                           	psect	text160
 35322  01CB9C                     __ptext160:
 35323                           	opt callstack 0
 35324  01CB9C                     _TMR3_DefaultInterruptHandler:
 35325                           	opt callstack 11
 35326                           
 35327                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35328                           
 35329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35330                           ;incstack = 0
 35331  01CB9C  0012               	return		;funcret
 35332  01CB9E                     __end_of_TMR3_DefaultInterruptHandler:
 35333                           	opt callstack 0
 35334                           
 35335 ;; *************** function _calc_bsoc *****************
 35336 ;; Defined at:
 35337 ;;		line 39 in file "bsoc.c"
 35338 ;; Parameters:    Size  Location     Type
 35339 ;;		None
 35340 ;; Auto vars:     Size  Location     Type
 35341 ;;  adj             4  [STACK] float 
 35342 ;;  log_ptr         2  [STACK] PTR unsigned char 
 35343 ;;		 -> port_data(512), 
 35344 ;; Return value:  Size  Location     Type
 35345 ;;                  1  [STACK] void 
 35346 ;; Registers used:
 35347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 35348 ;; Tracked objects:
 35349 ;;		On entry : 3F/0
 35350 ;;		On exit  : 5/1
 35351 ;;		Unchanged: 0/0
 35352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35357 ;;Total ram usage:        0 bytes
 35358 ;; Hardware stack levels used:    1
 35359 ;; Hardware stack levels required when called:   12
 35360 ;; This function calls:
 35361 ;;		_StartTimer
 35362 ;;		___asfladd
 35363 ;;		___fldiv
 35364 ;;		___flge
 35365 ;;		___flmul
 35366 ;;		___flneg
 35367 ;;		___fltol
 35368 ;;		_fabsf
 35369 ;;		_get_ac_charger_relay
 35370 ;;		_port_data_dma_ptr
 35371 ;;		_send_port_data_dma
 35372 ;;		_sprintf
 35373 ;;		_strlen
 35374 ;; This function is called by:
 35375 ;;		_init_bsoc
 35376 ;;		_TMR3_CallBack
 35377 ;; This function uses a reentrant model
 35378 ;;
 35379                           
 35380                           	psect	text161
 35381  0133D2                     __ptext161:
 35382                           	opt callstack 0
 35383  0133D2                     _calc_bsoc:
 35384                           	opt callstack 0
 35385                           
 35386                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35387  0133D2  0E06               	movlw	6
 35388  0133D4  26E1               	addwf	fsr1l,f,c
 35389  0133D6  0E00               	movlw	0
 35390  0133D8  22E2               	addwfc	fsr1h,f,c
 35391                           
 35392                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 35393                           
 35394                           ;incstack = 0
 35395  0133DA  0E00               	movlw	0
 35396  0133DC  6E09               	movwf	(btemp+8)^0,c
 35397  0133DE  0E00               	movlw	0
 35398  0133E0  6E0A               	movwf	(btemp+9)^0,c
 35399  0133E2  0E80               	movlw	128
 35400  0133E4  6E0B               	movwf	(btemp+10)^0,c
 35401  0133E6  0E3F               	movlw	63
 35402  0133E8  6E0C               	movwf	(btemp+11)^0,c
 35403                           
 35404                           ;stkvar	_adj @ sp[(-6)+0]
 35405  0133EA  0EFA               	movlw	-6
 35406  0133EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 35407  0133F2  0EFB               	movlw	-5
 35408  0133F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35409  0133FA  0EFC               	movlw	-4
 35410  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35411  013402  0EFD               	movlw	-3
 35412  013404  0060  F033  FFE3   	movff	btemp+11,plusw1
 35413  01340A  82BE               	bsf	190,1,c	;volatile
 35414                           
 35415                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 35416  01340C  0E00               	movlw	0
 35417  01340E  6EE6               	movwf	postinc1,c
 35418  013410  0E00               	movlw	0
 35419  013412  6EE6               	movwf	postinc1,c
 35420  013414  0E61               	movlw	97
 35421  013416  6EE6               	movwf	postinc1,c
 35422  013418  0E45               	movlw	69
 35423  01341A  6EE6               	movwf	postinc1,c
 35424  01341C  EE21  F343         	lfsr	2,_C+68	;volatile
 35425  013420  006F FF7B FFE6     	movff	postinc2,postinc1
 35426  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 35427  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 35428  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 35429  013438  EC13  F0A7         	call	___fldiv	;wreg free
 35430  01343C  0060  F007  FFE6   	movff	btemp,postinc1
 35431  013442  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35432  013448  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35433  01344E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35434  013454  0E8F               	movlw	low (_C+144)
 35435  013456  6EE6               	movwf	postinc1,c
 35436  013458  0E07               	movlw	high (_C+144)
 35437  01345A  6EE6               	movwf	postinc1,c
 35438  01345C  EC88  F0DB         	call	___asfladd	;wreg free
 35439                           
 35440                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 35441  013460  EE21  F38F         	lfsr	2,_C+144	;volatile
 35442  013464  006F FF7B FFE6     	movff	postinc2,postinc1
 35443  01346A  006F FF7B FFE6     	movff	postinc2,postinc1
 35444  013470  006F FF7B FFE6     	movff	postinc2,postinc1
 35445  013476  006F FF7B FFE6     	movff	postinc2,postinc1
 35446  01347C  EE21  F38B         	lfsr	2,_C+140	;volatile
 35447  013480  006F FF7B FFE6     	movff	postinc2,postinc1
 35448  013486  006F FF7B FFE6     	movff	postinc2,postinc1
 35449  01348C  006F FF7B FFE6     	movff	postinc2,postinc1
 35450  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 35451  013498  ECF0  F0CA         	call	___flge	;wreg free
 35452  01349C  B001               	btfsc	btemp& (0+255),0,c
 35453  01349E  D00E               	goto	l13425
 35454                           
 35455                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 35456  0134A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35457  0134A4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 35458  0134AA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 35459  0134B0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 35460  0134B6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 35461  0134BC                     l13425:
 35462                           
 35463                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 35464  0134BC  0ECD               	movlw	205
 35465  0134BE  6EE6               	movwf	postinc1,c
 35466  0134C0  0ECC               	movlw	204
 35467  0134C2  6EE6               	movwf	postinc1,c
 35468  0134C4  0ECC               	movlw	204
 35469  0134C6  6EE6               	movwf	postinc1,c
 35470  0134C8  0E3D               	movlw	61
 35471  0134CA  6EE6               	movwf	postinc1,c
 35472  0134CC  EE21  F38F         	lfsr	2,_C+144	;volatile
 35473  0134D0  006F FF7B FFE6     	movff	postinc2,postinc1
 35474  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35475  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35476  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35477  0134E8  ECF0  F0CA         	call	___flge	;wreg free
 35478  0134EC  B001               	btfsc	btemp& (0+255),0,c
 35479  0134EE  D010               	goto	l13429
 35480                           
 35481                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 35482  0134F0  0ECD               	movlw	205
 35483  0134F2  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 35484  0134F8  0ECC               	movlw	204
 35485  0134FA  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 35486  013500  0ECC               	movlw	204
 35487  013502  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 35488  013508  0E3D               	movlw	61
 35489  01350A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 35490  013510                     l13429:
 35491                           
 35492                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 35493  013510  EE21  F343         	lfsr	2,_C+68	;volatile
 35494  013514  006F FF7B FFE6     	movff	postinc2,postinc1
 35495  01351A  006F FF7B FFE6     	movff	postinc2,postinc1
 35496  013520  006F FF7B FFE6     	movff	postinc2,postinc1
 35497  013526  006F FF7B FFE6     	movff	postinc2,postinc1
 35498  01352C  0E0A               	movlw	10
 35499  01352E  6EE6               	movwf	postinc1,c
 35500  013530  0ED7               	movlw	215
 35501  013532  6EE6               	movwf	postinc1,c
 35502  013534  0E23               	movlw	35
 35503  013536  6EE6               	movwf	postinc1,c
 35504  013538  0E3C               	movlw	60
 35505  01353A  6EE6               	movwf	postinc1,c
 35506  01353C  ECF0  F0CA         	call	___flge	;wreg free
 35507  013540  B001               	btfsc	btemp& (0+255),0,c
 35508  013542  D01C               	goto	l13433
 35509                           
 35510                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 35511  013544  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 35512  01354A  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 35513  013550  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 35514  013556  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 35515                           
 35516                           ;stkvar	_adj @ sp[(-6)+0]
 35517  01355C  0EFA               	movlw	-6
 35518  01355E  0060  F027  FFE3   	movff	btemp+8,plusw1
 35519  013564  0EFB               	movlw	-5
 35520  013566  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35521  01356C  0EFC               	movlw	-4
 35522  01356E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35523  013574  0EFD               	movlw	-3
 35524  013576  0060  F033  FFE3   	movff	btemp+11,plusw1
 35525  01357C                     l13433:
 35526                           
 35527                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 35528  01357C  0E0A               	movlw	10
 35529  01357E  6EE6               	movwf	postinc1,c
 35530  013580  0ED7               	movlw	215
 35531  013582  6EE6               	movwf	postinc1,c
 35532  013584  0E23               	movlw	35
 35533  013586  6EE6               	movwf	postinc1,c
 35534  013588  0E3C               	movlw	60
 35535  01358A  6EE6               	movwf	postinc1,c
 35536  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 35537  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 35538  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 35539  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 35540  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 35541  0135A8  ECF0  F0CA         	call	___flge	;wreg free
 35542  0135AC  B001               	btfsc	btemp& (0+255),0,c
 35543  0135AE  D01C               	goto	l13437
 35544                           
 35545                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 35546  0135B0  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 35547  0135B6  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 35548  0135BC  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 35549  0135C2  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 35550                           
 35551                           ;stkvar	_adj @ sp[(-6)+0]
 35552  0135C8  0EFA               	movlw	-6
 35553  0135CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 35554  0135D0  0EFB               	movlw	-5
 35555  0135D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35556  0135D8  0EFC               	movlw	-4
 35557  0135DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35558  0135E0  0EFD               	movlw	-3
 35559  0135E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 35560  0135E8                     l13437:
 35561                           
 35562                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 35563  0135E8  0E00               	movlw	0
 35564  0135EA  6EE6               	movwf	postinc1,c
 35565  0135EC  0E00               	movlw	0
 35566  0135EE  6EE6               	movwf	postinc1,c
 35567  0135F0  0E61               	movlw	97
 35568  0135F2  6EE6               	movwf	postinc1,c
 35569  0135F4  0E45               	movlw	69
 35570  0135F6  6EE6               	movwf	postinc1,c
 35571                           
 35572                           ;stkvar	_adj @ sp[(-10)+0]
 35573  0135F8  0EF6               	movlw	-10
 35574  0135FA  006F FF8F FFE6     	movff	plusw1,postinc1
 35575  013600  006F FF8F FFE6     	movff	plusw1,postinc1
 35576  013606  006F FF8F FFE6     	movff	plusw1,postinc1
 35577  01360C  006F FF8F FFE6     	movff	plusw1,postinc1
 35578  013612  EE21  F343         	lfsr	2,_C+68	;volatile
 35579  013616  006F FF7B FFE6     	movff	postinc2,postinc1
 35580  01361C  006F FF7B FFE6     	movff	postinc2,postinc1
 35581  013622  006F FF7B FFE6     	movff	postinc2,postinc1
 35582  013628  006F FF7B FFE6     	movff	postinc2,postinc1
 35583  01362E  EC20  F09F         	call	___flmul	;wreg free
 35584  013632  0060  F007  FFE6   	movff	btemp,postinc1
 35585  013638  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35586  01363E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35587  013644  0060  F013  FFE6   	movff	btemp+3,postinc1
 35588  01364A  EC13  F0A7         	call	___fldiv	;wreg free
 35589  01364E  0060  F007  FFE6   	movff	btemp,postinc1
 35590  013654  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35591  01365A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35592  013660  0060  F013  FFE6   	movff	btemp+3,postinc1
 35593  013666  0E8F               	movlw	low (_C+144)
 35594  013668  6EE6               	movwf	postinc1,c
 35595  01366A  0E07               	movlw	high (_C+144)
 35596  01366C  6EE6               	movwf	postinc1,c
 35597  01366E  EC88  F0DB         	call	___asfladd	;wreg free
 35598                           
 35599                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 35600  013672  EE21  F38F         	lfsr	2,_C+144	;volatile
 35601  013676  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35602  01367C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35603  013682  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35604  013688  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35605                           
 35606                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 35607  01368E  EE21  F39B         	lfsr	2,_C+156	;volatile
 35608  013692  006F FF7B FFE6     	movff	postinc2,postinc1
 35609  013698  006F FF7B FFE6     	movff	postinc2,postinc1
 35610  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
 35611  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35612  0136AA  EE21  F38B         	lfsr	2,_C+140	;volatile
 35613  0136AE  006F FF7B FFE6     	movff	postinc2,postinc1
 35614  0136B4  006F FF7B FFE6     	movff	postinc2,postinc1
 35615  0136BA  006F FF7B FFE6     	movff	postinc2,postinc1
 35616  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35617  0136C6  ECF0  F0CA         	call	___flge	;wreg free
 35618  0136CA  B001               	btfsc	btemp& (0+255),0,c
 35619  0136CC  D00E               	goto	l13445
 35620                           
 35621                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 35622  0136CE  EE21  F38B         	lfsr	2,_C+140	;volatile
 35623  0136D2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35624  0136D8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35625  0136DE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35626  0136E4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35627  0136EA                     l13445:
 35628                           
 35629                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 35630  0136EA  0ECD               	movlw	205
 35631  0136EC  6EE6               	movwf	postinc1,c
 35632  0136EE  0ECC               	movlw	204
 35633  0136F0  6EE6               	movwf	postinc1,c
 35634  0136F2  0ECC               	movlw	204
 35635  0136F4  6EE6               	movwf	postinc1,c
 35636  0136F6  0E3D               	movlw	61
 35637  0136F8  6EE6               	movwf	postinc1,c
 35638  0136FA  EE21  F39B         	lfsr	2,_C+156	;volatile
 35639  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 35640  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 35641  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 35642  013710  006F FF7B FFE6     	movff	postinc2,postinc1
 35643  013716  ECF0  F0CA         	call	___flge	;wreg free
 35644  01371A  B001               	btfsc	btemp& (0+255),0,c
 35645  01371C  D010               	goto	l13449
 35646                           
 35647                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 35648  01371E  0ECD               	movlw	205
 35649  013720  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 35650  013726  0ECC               	movlw	204
 35651  013728  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 35652  01372E  0ECC               	movlw	204
 35653  013730  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 35654  013736  0E3D               	movlw	61
 35655  013738  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 35656  01373E                     l13449:
 35657                           
 35658                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 35659  01373E  0E00               	movlw	0
 35660  013740  6EE6               	movwf	postinc1,c
 35661  013742  0E00               	movlw	0
 35662  013744  6EE6               	movwf	postinc1,c
 35663  013746  0E61               	movlw	97
 35664  013748  6EE6               	movwf	postinc1,c
 35665  01374A  0E45               	movlw	69
 35666  01374C  6EE6               	movwf	postinc1,c
 35667  01374E  EE21  F347         	lfsr	2,_C+72	;volatile
 35668  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 35669  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 35670  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 35671  013764  006F FF7B FFE6     	movff	postinc2,postinc1
 35672  01376A  EC13  F0A7         	call	___fldiv	;wreg free
 35673  01376E  0060  F007  FFE6   	movff	btemp,postinc1
 35674  013774  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35675  01377A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35676  013780  0060  F013  FFE6   	movff	btemp+3,postinc1
 35677  013786  0E93               	movlw	low (_C+148)
 35678  013788  6EE6               	movwf	postinc1,c
 35679  01378A  0E07               	movlw	high (_C+148)
 35680  01378C  6EE6               	movwf	postinc1,c
 35681  01378E  EC88  F0DB         	call	___asfladd	;wreg free
 35682                           
 35683                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 35684  013792  0E00               	movlw	0
 35685  013794  6EE6               	movwf	postinc1,c
 35686  013796  0E00               	movlw	0
 35687  013798  6EE6               	movwf	postinc1,c
 35688  01379A  0E61               	movlw	97
 35689  01379C  6EE6               	movwf	postinc1,c
 35690  01379E  0E45               	movlw	69
 35691  0137A0  6EE6               	movwf	postinc1,c
 35692  0137A2  EE21  F37B         	lfsr	2,_C+124	;volatile
 35693  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 35694  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 35695  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 35696  0137B8  006F FF7B FFE6     	movff	postinc2,postinc1
 35697  0137BE  EC13  F0A7         	call	___fldiv	;wreg free
 35698  0137C2  0060  F007  FFE6   	movff	btemp,postinc1
 35699  0137C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35700  0137CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35701  0137D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 35702  0137DA  0EA7               	movlw	low (_C+168)
 35703  0137DC  6EE6               	movwf	postinc1,c
 35704  0137DE  0E07               	movlw	high (_C+168)
 35705  0137E0  6EE6               	movwf	postinc1,c
 35706  0137E2  EC88  F0DB         	call	___asfladd	;wreg free
 35707                           
 35708                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 35709  0137E6  0E00               	movlw	0
 35710  0137E8  6EE6               	movwf	postinc1,c
 35711  0137EA  0E00               	movlw	0
 35712  0137EC  6EE6               	movwf	postinc1,c
 35713  0137EE  0E61               	movlw	97
 35714  0137F0  6EE6               	movwf	postinc1,c
 35715  0137F2  0E45               	movlw	69
 35716  0137F4  6EE6               	movwf	postinc1,c
 35717  0137F6  EE21  F377         	lfsr	2,_C+120	;volatile
 35718  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 35719  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 35720  013806  006F FF7B FFE6     	movff	postinc2,postinc1
 35721  01380C  006F FF7B FFE6     	movff	postinc2,postinc1
 35722  013812  EC13  F0A7         	call	___fldiv	;wreg free
 35723  013816  0060  F007  FFE6   	movff	btemp,postinc1
 35724  01381C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35725  013822  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35726  013828  0060  F013  FFE6   	movff	btemp+3,postinc1
 35727  01382E  0EAB               	movlw	low (_C+172)
 35728  013830  6EE6               	movwf	postinc1,c
 35729  013832  0E07               	movlw	high (_C+172)
 35730  013834  6EE6               	movwf	postinc1,c
 35731  013836  EC88  F0DB         	call	___asfladd	;wreg free
 35732                           
 35733                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 35734  01383A  0E00               	movlw	0
 35735  01383C  6EE6               	movwf	postinc1,c
 35736  01383E  0E00               	movlw	0
 35737  013840  6EE6               	movwf	postinc1,c
 35738  013842  0E61               	movlw	97
 35739  013844  6EE6               	movwf	postinc1,c
 35740  013846  0E45               	movlw	69
 35741  013848  6EE6               	movwf	postinc1,c
 35742  01384A  EE21  F373         	lfsr	2,_C+116	;volatile
 35743  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 35744  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 35745  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 35746  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 35747  013866  EC13  F0A7         	call	___fldiv	;wreg free
 35748  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 35749  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35750  013876  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35751  01387C  0060  F013  FFE6   	movff	btemp+3,postinc1
 35752  013882  0EAF               	movlw	low (_C+176)
 35753  013884  6EE6               	movwf	postinc1,c
 35754  013886  0E07               	movlw	high (_C+176)
 35755  013888  6EE6               	movwf	postinc1,c
 35756  01388A  EC88  F0DB         	call	___asfladd	;wreg free
 35757                           
 35758                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 35759  01388E  EE21  F37F         	lfsr	2,_C+128	;volatile
 35760  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 35761  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 35762  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 35763  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35764  0138AA  0E00               	movlw	0
 35765  0138AC  6EE6               	movwf	postinc1,c
 35766  0138AE  0E00               	movlw	0
 35767  0138B0  6EE6               	movwf	postinc1,c
 35768  0138B2  0E00               	movlw	0
 35769  0138B4  6EE6               	movwf	postinc1,c
 35770  0138B6  0E00               	movlw	0
 35771  0138B8  6EE6               	movwf	postinc1,c
 35772  0138BA  ECF0  F0CA         	call	___flge	;wreg free
 35773  0138BE  B001               	btfsc	btemp& (0+255),0,c
 35774  0138C0  D02A               	goto	l13455
 35775                           
 35776                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 35777  0138C2  0E00               	movlw	0
 35778  0138C4  6EE6               	movwf	postinc1,c
 35779  0138C6  0E00               	movlw	0
 35780  0138C8  6EE6               	movwf	postinc1,c
 35781  0138CA  0E61               	movlw	97
 35782  0138CC  6EE6               	movwf	postinc1,c
 35783  0138CE  0E45               	movlw	69
 35784  0138D0  6EE6               	movwf	postinc1,c
 35785  0138D2  EE21  F37F         	lfsr	2,_C+128	;volatile
 35786  0138D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35787  0138DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35788  0138E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35789  0138E8  006F FF7B FFE6     	movff	postinc2,postinc1
 35790  0138EE  EC13  F0A7         	call	___fldiv	;wreg free
 35791  0138F2  0060  F007  FFE6   	movff	btemp,postinc1
 35792  0138F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35793  0138FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35794  013904  0060  F013  FFE6   	movff	btemp+3,postinc1
 35795  01390A  0E9F               	movlw	low (_C+160)
 35796  01390C  6EE6               	movwf	postinc1,c
 35797  01390E  0E07               	movlw	high (_C+160)
 35798  013910  6EE6               	movwf	postinc1,c
 35799  013912  EC88  F0DB         	call	___asfladd	;wreg free
 35800  013916                     l13455:
 35801                           
 35802                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 35803  013916  EE21  F37F         	lfsr	2,_C+128	;volatile
 35804  01391A  0E03               	movlw	3
 35805  01391C  AEDB               	btfss	plusw2,7,c
 35806  01391E  D038               	goto	l13459
 35807                           
 35808                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 35809  013920  0E00               	movlw	0
 35810  013922  6EE6               	movwf	postinc1,c
 35811  013924  0E00               	movlw	0
 35812  013926  6EE6               	movwf	postinc1,c
 35813  013928  0E61               	movlw	97
 35814  01392A  6EE6               	movwf	postinc1,c
 35815  01392C  0E45               	movlw	69
 35816  01392E  6EE6               	movwf	postinc1,c
 35817  013930  EE21  F37F         	lfsr	2,_C+128	;volatile
 35818  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 35819  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 35820  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 35821  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 35822  01394C  EC13  F0A7         	call	___fldiv	;wreg free
 35823  013950  0060  F007  FFE6   	movff	btemp,postinc1
 35824  013956  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35825  01395C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35826  013962  0060  F013  FFE6   	movff	btemp+3,postinc1
 35827  013968  EC2C  F0D7         	call	_fabsf	;wreg free
 35828  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 35829  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35830  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35831  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35832  013984  0EA3               	movlw	low (_C+164)
 35833  013986  6EE6               	movwf	postinc1,c
 35834  013988  0E07               	movlw	high (_C+164)
 35835  01398A  6EE6               	movwf	postinc1,c
 35836  01398C  EC88  F0DB         	call	___asfladd	;wreg free
 35837  013990                     l13459:
 35838                           
 35839                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 35840  013990  0E00               	movlw	0
 35841  013992  6EE6               	movwf	postinc1,c
 35842  013994  0E00               	movlw	0
 35843  013996  6EE6               	movwf	postinc1,c
 35844  013998  0EC8               	movlw	200
 35845  01399A  6EE6               	movwf	postinc1,c
 35846  01399C  0E42               	movlw	66
 35847  01399E  6EE6               	movwf	postinc1,c
 35848  0139A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35849  0139A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35850  0139AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35851  0139B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35852  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 35853  0139BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 35854  0139C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35855  0139C6  006F FF7B FFE6     	movff	postinc2,postinc1
 35856  0139CC  006F FF7B FFE6     	movff	postinc2,postinc1
 35857  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 35858  0139D8  EC13  F0A7         	call	___fldiv	;wreg free
 35859  0139DC  0060  F007  FFE6   	movff	btemp,postinc1
 35860  0139E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35861  0139E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35862  0139EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35863  0139F4  EC20  F09F         	call	___flmul	;wreg free
 35864  0139F8  0060  F007  FFE6   	movff	btemp,postinc1
 35865  0139FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35866  013A04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35867  013A0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 35868  013A10  EC37  F0CA         	call	___fltol	;wreg free
 35869  013A14  0060  F004  F00B   	movff	btemp,btemp+10
 35870  013A1A  0060  F008  F00C   	movff	btemp+1,btemp+11
 35871  013A20  0E01               	movlw	1
 35872  013A22  260B               	addwf	(btemp+10)^0,f,c
 35873  013A24  0E00               	movlw	0
 35874  013A26  220C               	addwfc	(btemp+11)^0,f,c
 35875  013A28  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 35876  013A2E  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 35877                           
 35878                           ;bsoc.c: 76:  if (C.soc > 100)
 35879  013A34  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35880  013A38  0E01               	movlw	1
 35881  013A3A  50DB               	movf	plusw2,w,c
 35882  013A3C  E104               	bnz	u1295_20
 35883  013A3E  0E65               	movlw	101
 35884  013A40  5CDE               	subwf	postinc2,w,c
 35885  013A42  A0D8               	btfss	status,0,c
 35886  013A44  D008               	goto	l13465
 35887  013A46                     u1295_20:
 35888                           
 35889                           ;bsoc.c: 77:   C.soc = 100;
 35890  013A46  0E64               	movlw	100
 35891  013A48  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 35892  013A4E  0E00               	movlw	0
 35893  013A50  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 35894  013A56                     l13465:
 35895                           
 35896                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 35897  013A56  EE21  F343         	lfsr	2,_C+68	;volatile
 35898  013A5A  0E03               	movlw	3
 35899  013A5C  AEDB               	btfss	plusw2,7,c
 35900  013A5E  D047               	goto	l2156
 35901                           
 35902                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 35903  013A60  EE21  F343         	lfsr	2,_C+68	;volatile
 35904  013A64  006F FF7B FFE6     	movff	postinc2,postinc1
 35905  013A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35906  013A70  006F FF7B FFE6     	movff	postinc2,postinc1
 35907  013A76  006F FF7B FFE6     	movff	postinc2,postinc1
 35908  013A7C  EE21  F39B         	lfsr	2,_C+156	;volatile
 35909  013A80  006F FF7B FFE6     	movff	postinc2,postinc1
 35910  013A86  006F FF7B FFE6     	movff	postinc2,postinc1
 35911  013A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35912  013A92  006F FF7B FFE6     	movff	postinc2,postinc1
 35913  013A98  EC13  F0A7         	call	___fldiv	;wreg free
 35914  013A9C  0060  F007  FFE6   	movff	btemp,postinc1
 35915  013AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35916  013AA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35917  013AAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35918  013AB4  EC11  F0DF         	call	___flneg	;wreg free
 35919  013AB8  0060  F007  FFE6   	movff	btemp,postinc1
 35920  013ABE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35921  013AC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35922  013ACA  0060  F013  FFE6   	movff	btemp+3,postinc1
 35923  013AD0  EC37  F0CA         	call	___fltol	;wreg free
 35924  013AD4  0060  F004  F00B   	movff	btemp,btemp+10
 35925  013ADA  0060  F008  F00C   	movff	btemp+1,btemp+11
 35926  013AE0  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 35927  013AE6  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 35928                           
 35929                           ;bsoc.c: 81:  } else {
 35930  013AEC  D008               	goto	l13469
 35931  013AEE                     l2156:
 35932                           
 35933                           ;bsoc.c: 82:   C.runtime = 99;
 35934  013AEE  0E63               	movlw	99
 35935  013AF0  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35936  013AF6  0E00               	movlw	0
 35937  013AF8  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35938  013AFE                     l13469:
 35939                           
 35940                           ;bsoc.c: 84:  if (C.runtime > 99)
 35941  013AFE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35942  013B02  0E01               	movlw	1
 35943  013B04  50DB               	movf	plusw2,w,c
 35944  013B06  E104               	bnz	u1297_20
 35945  013B08  0E64               	movlw	100
 35946  013B0A  5CDE               	subwf	postinc2,w,c
 35947  013B0C  A0D8               	btfss	status,0,c
 35948  013B0E  D008               	goto	l13473
 35949  013B10                     u1297_20:
 35950                           
 35951                           ;bsoc.c: 85:   C.runtime = 99;
 35952  013B10  0E63               	movlw	99
 35953  013B12  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35954  013B18  0E00               	movlw	0
 35955  013B1A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35956  013B20                     l13473:
 35957                           
 35958                           ;bsoc.c: 87:  V.lowint_count++;
 35959  013B20  0E01               	movlw	1
 35960  013B22  0101               	movlb	1	; () banked
 35961  013B24  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 35962  013B26  0E00               	movlw	0
 35963  013B28  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 35964  013B2A  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 35965  013B2C  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 35966                           
 35967                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 35968  013B2E  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 35969  013B30  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 35970  013B32  A4D8               	btfss	status,2,c
 35971  013B34  D177               	goto	l13485
 35972                           
 35973                           ; BSR set to: 1
 35974  013B36  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 35975  013B38  B4D8               	btfsc	status,2,c
 35976  013B3A  D174               	goto	l13485
 35977                           
 35978                           ; BSR set to: 1
 35979                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 35980  013B3C  EC92  F0E5         	call	_port_data_dma_ptr	;wreg free
 35981                           
 35982                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35983  013B40  0EFF               	movlw	-1
 35984  013B42  0060  F00B  FFE3   	movff	btemp+1,plusw1
 35985  013B48  0EFE               	movlw	-2
 35986  013B4A  0060  F007  FFE3   	movff	btemp,plusw1
 35987                           
 35988                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 35989  013B50  EE21  F3B9         	lfsr	2,_C+186	;volatile
 35990  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 35991  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 35992  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 35993  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 35994  013B6C  EE21  F3BD         	lfsr	2,_C+190	;volatile
 35995  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 35996  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 35997  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 35998  013B82  006F FF7B FFE6     	movff	postinc2,postinc1
 35999  013B88  EE21  F39B         	lfsr	2,_C+156	;volatile
 36000  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 36001  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 36002  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 36003  013B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 36004  013BA4  EE22  F026         	lfsr	2,_C+295	;volatile
 36005  013BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 36006  013BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 36007  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 36008  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 36009  013BC0  EE22  F022         	lfsr	2,_C+291	;volatile
 36010  013BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 36011  013BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 36012  013BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 36013  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 36014  013BDC  EE22  F021         	lfsr	2,_C+290	;volatile
 36015  013BE0  50DF               	movf	indf2,w,c
 36016  013BE2  6EE6               	movwf	postinc1,c
 36017  013BE4  0E00               	movlw	0
 36018  013BE6  6EE6               	movwf	postinc1,c
 36019  013BE8  EC77  F0E5         	call	_get_ac_charger_relay	;wreg free
 36020  013BEC  5001               	movf	btemp^0,w,c
 36021  013BEE  6EE6               	movwf	postinc1,c
 36022  013BF0  0E00               	movlw	0
 36023  013BF2  6EE6               	movwf	postinc1,c
 36024  013BF4  EE21  F367         	lfsr	2,_C+104	;volatile
 36025  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 36026  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 36027  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 36028  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 36029  013C10  EE21  F387         	lfsr	2,_C+136	;volatile
 36030  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 36031  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 36032  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 36033  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 36034  013C2C  EE21  F3B3         	lfsr	2,_C+180	;volatile
 36035  013C30  006F FF78  F00B    	movff	postinc2,btemp+10
 36036  013C36  006F FF74  F00C    	movff	postdec2,btemp+11
 36037  013C3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36038  013C42  0060  F033  FFE6   	movff	btemp+11,postinc1
 36039  013C48  EE21  F3B5         	lfsr	2,_C+182	;volatile
 36040  013C4C  006F FF78  F00B    	movff	postinc2,btemp+10
 36041  013C52  006F FF74  F00C    	movff	postdec2,btemp+11
 36042  013C58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36043  013C5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 36044  013C64  EE21  F393         	lfsr	2,_C+148	;volatile
 36045  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 36046  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 36047  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 36048  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 36049  013C80  EE21  F38F         	lfsr	2,_C+144	;volatile
 36050  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 36051  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 36052  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 36053  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 36054  013C9C  EE21  F377         	lfsr	2,_C+120	;volatile
 36055  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 36056  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 36057  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 36058  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 36059  013CB8  EE21  F373         	lfsr	2,_C+116	;volatile
 36060  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 36061  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 36062  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 36063  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 36064  013CD4  EE21  F37B         	lfsr	2,_C+124	;volatile
 36065  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 36066  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 36067  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 36068  013CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 36069  013CF0  EE21  F37F         	lfsr	2,_C+128	;volatile
 36070  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 36071  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 36072  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 36073  013D06  006F FF7B FFE6     	movff	postinc2,postinc1
 36074  013D0C  EE21  F347         	lfsr	2,_C+72	;volatile
 36075  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 36076  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 36077  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 36078  013D22  006F FF7B FFE6     	movff	postinc2,postinc1
 36079  013D28  EE21  F343         	lfsr	2,_C+68	;volatile
 36080  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 36081  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 36082  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 36083  013D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 36084  013D44  EE21  F363         	lfsr	2,_C+100	;volatile
 36085  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 36086  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 36087  013D54  006F FF7B FFE6     	movff	postinc2,postinc1
 36088  013D5A  006F FF7B FFE6     	movff	postinc2,postinc1
 36089  013D60  EE21  F34B         	lfsr	2,_C+76	;volatile
 36090  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 36091  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 36092  013D70  006F FF7B FFE6     	movff	postinc2,postinc1
 36093  013D76  006F FF7B FFE6     	movff	postinc2,postinc1
 36094  013D7C  EE21  F34F         	lfsr	2,_C+80	;volatile
 36095  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 36096  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 36097  013D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 36098  013D92  006F FF7B FFE6     	movff	postinc2,postinc1
 36099  013D98  EE21  F353         	lfsr	2,_C+84	;volatile
 36100  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 36101  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 36102  013DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 36103  013DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 36104  013DB4  0060  F623  FFE6   	movff	_V+129,postinc1
 36105  013DBA  0060  F627  FFE6   	movff	_V+130,postinc1
 36106  013DC0  0060  F62B  FFE6   	movff	_V+131,postinc1
 36107  013DC6  0060  F62F  FFE6   	movff	_V+132,postinc1
 36108  013DCC  0E32               	movlw	50
 36109  013DCE  6EE6               	movwf	postinc1,c
 36110  013DD0  0E00               	movlw	0
 36111  013DD2  6EE6               	movwf	postinc1,c
 36112  013DD4  0EF9               	movlw	low STR_78
 36113  013DD6  6EE6               	movwf	postinc1,c
 36114  013DD8  0EFA               	movlw	high STR_78
 36115  013DDA  6EE6               	movwf	postinc1,c
 36116                           
 36117                           ;stkvar	_log_ptr @ sp[(-98)+4]
 36118  013DDC  0EA2               	movlw	-94
 36119  013DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 36120  013DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 36121  013DEA  0E5E               	movlw	94
 36122  013DEC  6EE6               	movwf	postinc1,c
 36123  013DEE  EC2A  F0D2         	call	_sprintf	;wreg free
 36124                           
 36125                           ; BSR set to: 0
 36126                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 36127  013DF2  0E7D               	movlw	125
 36128  013DF4  6EE6               	movwf	postinc1,c
 36129  013DF6  0E00               	movlw	0
 36130  013DF8  6EE6               	movwf	postinc1,c
 36131  013DFA  0E0A               	movlw	10
 36132  013DFC  6EE6               	movwf	postinc1,c
 36133  013DFE  EC6A  F0E0         	call	_StartTimer	;wreg free
 36134                           
 36135                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 36136                           ;stkvar	_log_ptr @ sp[(-6)+4]
 36137  013E02  0EFE               	movlw	-2
 36138  013E04  006F FF8F FFE6     	movff	plusw1,postinc1
 36139  013E0A  006F FF8F FFE6     	movff	plusw1,postinc1
 36140  013E10  ECD5  F0D8         	call	_strlen	;wreg free
 36141  013E14  0060  F007  FFE6   	movff	btemp,postinc1
 36142  013E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36143  013E20  EC77  F0DE         	call	_send_port_data_dma	;wreg free
 36144  013E24                     l13485:
 36145                           
 36146                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 36147  013E24  0E09               	movlw	9
 36148  013E26  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 36149  013E28  D001               	goto	l2160
 36150                           
 36151                           ;bsoc.c: 102:   log_update_wait = 0;
 36152  013E2A  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 36153  013E2C                     l2160:
 36154                           
 36155                           ;bsoc.c: 104:  C.update = 0;
 36156  013E2C  0E00               	movlw	0
 36157  013E2E  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 36158                           
 36159                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 36160  013E34  92BE               	bcf	190,1,c	;volatile
 36161                           
 36162                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 36163  013E36  0EFA               	movlw	250
 36164  013E38  26E1               	addwf	fsr1l,f,c
 36165  013E3A  0EFF               	movlw	255
 36166  013E3C  22E2               	addwfc	fsr1h,f,c
 36167  013E3E  0012               	return		;funcret
 36168  013E40                     __end_of_calc_bsoc:
 36169                           	opt callstack 0
 36170                           
 36171 ;; *************** function _send_port_data_dma *****************
 36172 ;; Defined at:
 36173 ;;		line 398 in file "eadog.c"
 36174 ;; Parameters:    Size  Location     Type
 36175 ;;  dsize           2  [STACK] unsigned short 
 36176 ;; Auto vars:     Size  Location     Type
 36177 ;;		None
 36178 ;; Return value:  Size  Location     Type
 36179 ;;                  1  [STACK] void 
 36180 ;; Registers used:
 36181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36182 ;; Tracked objects:
 36183 ;;		On entry : 0/0
 36184 ;;		On exit  : 3F/3B
 36185 ;;		Unchanged: 0/0
 36186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36191 ;;Total ram usage:        0 bytes
 36192 ;; Hardware stack levels used:    1
 36193 ;; Hardware stack levels required when called:    3
 36194 ;; This function calls:
 36195 ;;		Nothing
 36196 ;; This function is called by:
 36197 ;;		_calc_bsoc
 36198 ;; This function uses a reentrant model
 36199 ;;
 36200                           
 36201                           	psect	text162
 36202  01BCEE                     __ptext162:
 36203                           	opt callstack 0
 36204  01BCEE                     _send_port_data_dma:
 36205                           	opt callstack 10
 36206                           
 36207                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 36208                           ;stkvar	_dsize @ sp[(0)+-2]
 36209                           
 36210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36211                           ;incstack = 0
 36212  01BCEE  0EFE               	movlw	-2
 36213  01BCF0  04E3               	decf	plusw1,w,c
 36214  01BCF2  0EFF               	movlw	-1
 36215  01BCF4  006F FF8C  F001    	movff	plusw1,btemp
 36216  01BCFA  0E02               	movlw	2
 36217  01BCFC  5A01               	subwfb	btemp^0,f,c
 36218  01BCFE  A0D8               	btfss	status,0,c
 36219  01BD00  D00C               	goto	l10313
 36220                           
 36221                           ;eadog.c: 401:   dsize = 512;
 36222  01BD02  0E00               	movlw	0
 36223  01BD04  6E0B               	movwf	(btemp+10)^0,c
 36224  01BD06  0E02               	movlw	2
 36225  01BD08  6E0C               	movwf	(btemp+11)^0,c
 36226                           
 36227                           ;stkvar	_dsize @ sp[(0)+-2]
 36228  01BD0A  0EFE               	movlw	-2
 36229  01BD0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36230  01BD12  0EFF               	movlw	-1
 36231  01BD14  0060  F033  FFE3   	movff	btemp+11,plusw1
 36232  01BD1A                     l10313:
 36233                           
 36234                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 36235  01BD1A  013B               	movlb	59	; () banked
 36236  01BD1C  9FDC               	bcf	220,7,b	;volatile
 36237                           
 36238                           ; BSR set to: 59
 36239                           ;eadog.c: 404:  DMA2SSZ = dsize;
 36240                           ;stkvar	_dsize @ sp[(0)+-2]
 36241  01BD1E  0EFE               	movlw	-2
 36242  01BD20  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 36243  01BD26  0EFF               	movlw	-1
 36244  01BD28  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 36245                           
 36246                           ; BSR set to: 59
 36247                           ;eadog.c: 405:  DMA2DSZ = 1;
 36248  01BD2E  0E00               	movlw	0
 36249  01BD30  6FCF               	movwf	207,b	;volatile
 36250  01BD32  0E01               	movlw	1
 36251  01BD34  6FCE               	movwf	206,b	;volatile
 36252                           
 36253                           ; BSR set to: 59
 36254                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 36255  01BD36  8FDC               	bsf	220,7,b	;volatile
 36256                           
 36257                           ; BSR set to: 59
 36258                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 36259  01BD38  8DDC               	bsf	220,6,b	;volatile
 36260                           
 36261                           ; BSR set to: 59
 36262                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36263  01BD3A  52E5               	movf	postdec1,f,c
 36264  01BD3C  52E5               	movf	postdec1,f,c
 36265  01BD3E  0012               	return		;funcret
 36266  01BD40                     __end_of_send_port_data_dma:
 36267                           	opt callstack 0
 36268                           
 36269 ;; *************** function _port_data_dma_ptr *****************
 36270 ;; Defined at:
 36271 ;;		line 413 in file "eadog.c"
 36272 ;; Parameters:    Size  Location     Type
 36273 ;;		None
 36274 ;; Auto vars:     Size  Location     Type
 36275 ;;		None
 36276 ;; Return value:  Size  Location     Type
 36277 ;;                  2  [STACK] PTR unsigned char 
 36278 ;; Registers used:
 36279 ;;		wreg, status,2, status,0, btemp, btemp+1
 36280 ;; Tracked objects:
 36281 ;;		On entry : 3F/1
 36282 ;;		On exit  : 0/0
 36283 ;;		Unchanged: 0/0
 36284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36289 ;;Total ram usage:        0 bytes
 36290 ;; Hardware stack levels used:    1
 36291 ;; Hardware stack levels required when called:    3
 36292 ;; This function calls:
 36293 ;;		Nothing
 36294 ;; This function is called by:
 36295 ;;		_calc_bsoc
 36296 ;; This function uses a reentrant model
 36297 ;;
 36298                           
 36299                           	psect	text163
 36300  01CB24                     __ptext163:
 36301                           	opt callstack 0
 36302  01CB24                     _port_data_dma_ptr:
 36303                           	opt callstack 10
 36304                           
 36305                           ;eadog.c: 415:  return port_data;
 36306                           
 36307                           ; BSR set to: 59
 36308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36309                           ;incstack = 0
 36310  01CB24  0EFF               	movlw	low _port_data
 36311  01CB26  6E01               	movwf	btemp^0,c
 36312  01CB28  0E04               	movlw	high _port_data
 36313  01CB2A  6E02               	movwf	(btemp+1)^0,c
 36314                           
 36315                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36316  01CB2C  0012               	return		;funcret
 36317  01CB2E                     __end_of_port_data_dma_ptr:
 36318                           	opt callstack 0
 36319                           
 36320 ;; *************** function ___asfladd *****************
 36321 ;; Defined at:
 36322 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 36323 ;; Parameters:    Size  Location     Type
 36324 ;;  f1p             2  [STACK] PTR 
 36325 ;;		 -> C(299), 
 36326 ;;  f2              4  [STACK] PTR 
 36327 ;; Auto vars:     Size  Location     Type
 36328 ;;		None
 36329 ;; Return value:  Size  Location     Type
 36330 ;;                  4  [STACK] PTR 
 36331 ;; Registers used:
 36332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 36333 ;; Tracked objects:
 36334 ;;		On entry : 0/0
 36335 ;;		On exit  : 0/0
 36336 ;;		Unchanged: 0/0
 36337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36342 ;;Total ram usage:        0 bytes
 36343 ;; Hardware stack levels used:    1
 36344 ;; Hardware stack levels required when called:    4
 36345 ;; This function calls:
 36346 ;;		___fladd
 36347 ;; This function is called by:
 36348 ;;		_calc_bsoc
 36349 ;; This function uses a reentrant model
 36350 ;;
 36351                           
 36352                           	psect	text164
 36353  01B710                     __ptext164:
 36354                           	opt callstack 0
 36355  01B710                     ___asfladd:
 36356                           	opt callstack 9
 36357                           
 36358                           ;	Return value of ___asfladd is never used
 36359                           ;stkvar	_f2 @ sp[(0)+-6]
 36360                           
 36361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36362                           ;incstack = 0
 36363  01B710  0EFA               	movlw	-6
 36364  01B712  006F FF8F FFE6     	movff	plusw1,postinc1
 36365  01B718  006F FF8F FFE6     	movff	plusw1,postinc1
 36366  01B71E  006F FF8F FFE6     	movff	plusw1,postinc1
 36367  01B724  006F FF8F FFE6     	movff	plusw1,postinc1
 36368                           
 36369                           ;stkvar	_f1p @ sp[(-4)+-2]
 36370  01B72A  0EFA               	movlw	-6
 36371  01B72C  006F FF8F FFD9     	movff	plusw1,fsr2l
 36372  01B732  0EFB               	movlw	-5
 36373  01B734  006F FF8F FFDA     	movff	plusw1,fsr2h
 36374  01B73A  006F FF7B FFE6     	movff	postinc2,postinc1
 36375  01B740  006F FF7B FFE6     	movff	postinc2,postinc1
 36376  01B746  006F FF7B FFE6     	movff	postinc2,postinc1
 36377  01B74C  006F FF7B FFE6     	movff	postinc2,postinc1
 36378  01B752  EC35  F0A3         	call	___fladd	;wreg free
 36379                           
 36380                           ;stkvar	_f1p @ sp[(0)+-2]
 36381  01B756  0EFE               	movlw	-2
 36382  01B758  006F FF8F FFD9     	movff	plusw1,fsr2l
 36383  01B75E  0EFF               	movlw	-1
 36384  01B760  006F FF8F FFDA     	movff	plusw1,fsr2h
 36385  01B766  0060  F007  FFDE   	movff	btemp,postinc2
 36386  01B76C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 36387  01B772  0060  F00F  FFDE   	movff	btemp+2,postinc2
 36388  01B778  0060  F013  FFDE   	movff	btemp+3,postinc2
 36389                           
 36390                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 36391  01B77E  0EFA               	movlw	250
 36392  01B780  26E1               	addwf	fsr1l,f,c
 36393  01B782  0EFF               	movlw	255
 36394  01B784  22E2               	addwfc	fsr1h,f,c
 36395  01B786  0012               	return		;funcret
 36396  01B788                     __end_of___asfladd:
 36397                           	opt callstack 0
 36398                           
 36399 ;; *************** function _INT0_ISR *****************
 36400 ;; Defined at:
 36401 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 36402 ;; Parameters:    Size  Location     Type
 36403 ;;		None
 36404 ;; Auto vars:     Size  Location     Type
 36405 ;;		None
 36406 ;; Return value:  Size  Location     Type
 36407 ;;                  1    wreg      void 
 36408 ;; Registers used:
 36409 ;;		wreg, status,2, status,0, pclath, tosl
 36410 ;; Tracked objects:
 36411 ;;		On entry : 0/0
 36412 ;;		On exit  : 0/0
 36413 ;;		Unchanged: 0/0
 36414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36419 ;;Total ram usage:        0 bytes
 36420 ;; Hardware stack levels used:    1
 36421 ;; Hardware stack levels required when called:    2
 36422 ;; This function calls:
 36423 ;;		_INT0_CallBack
 36424 ;; This function is called by:
 36425 ;;		Interrupt level 2
 36426 ;; This function uses a non-reentrant model
 36427 ;;
 36428                           
 36429                           	psect	text165
 36430  01CAFC                     __ptext165:
 36431                           	opt callstack 0
 36432  01CAFC                     _INT0_ISR:
 36433                           	opt callstack 2
 36434                           
 36435                           ;incstack = 0
 36436  01CAFC  EE14  F15E         	lfsr	1,___inthi_sp
 36437                           
 36438                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 36439  01CB00  0139               	movlb	57	; () banked
 36440  01CB02  91A1               	bcf	161,0,b	;volatile
 36441                           
 36442                           ; BSR set to: 57
 36443                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 36444  01CB04  EC20  F0E4         	call	_INT0_CallBack	;wreg free
 36445  01CB08  0011               	retfie		f
 36446  01CB0A                     __end_of_INT0_ISR:
 36447                           	opt callstack 0
 36448                           
 36449 ;; *************** function _INT0_CallBack *****************
 36450 ;; Defined at:
 36451 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 36452 ;; Parameters:    Size  Location     Type
 36453 ;;		None
 36454 ;; Auto vars:     Size  Location     Type
 36455 ;;		None
 36456 ;; Return value:  Size  Location     Type
 36457 ;;                  1  [STACK] void 
 36458 ;; Registers used:
 36459 ;;		wreg, status,2, status,0, pclath, tosl
 36460 ;; Tracked objects:
 36461 ;;		On entry : 3F/39
 36462 ;;		On exit  : 0/0
 36463 ;;		Unchanged: 0/0
 36464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36469 ;;Total ram usage:        0 bytes
 36470 ;; Hardware stack levels used:    1
 36471 ;; Hardware stack levels required when called:    1
 36472 ;; This function calls:
 36473 ;;		Absolute function
 36474 ;;		_INT0_DefaultInterruptHandler
 36475 ;; This function is called by:
 36476 ;;		_INT0_ISR
 36477 ;; This function uses a reentrant model
 36478 ;;
 36479                           
 36480                           	psect	text166
 36481  01C840                     __ptext166:
 36482                           	opt callstack 0
 36483  01C840                     _INT0_CallBack:
 36484                           	opt callstack 2
 36485                           
 36486                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 36487                           
 36488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36489                           ;incstack = 0
 36490  01C840  0100               	movlb	0	; () banked
 36491  01C842  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36492  01C844  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36493  01C846  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36494  01C848  B4D8               	btfsc	status,2,c
 36495  01C84A  0012               	return	
 36496                           
 36497                           ; BSR set to: 0
 36498                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 36499  01C84C  D801               	call	u1036_48
 36500  01C84E  0012               	return	
 36501  01C850                     u1036_48:
 36502  01C850  0005               	push	
 36503  01C852  6EFA               	movwf	pclath,c
 36504  01C854  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36505  01C856  6EFD               	movwf	tosl,c
 36506  01C858  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36507  01C85A  6EFE               	movwf	tosh,c
 36508  01C85C  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36509  01C85E  6EFF               	movwf	tosu,c
 36510  01C860  50FA               	movf	pclath,w,c
 36511  01C862  0012               	return		;indir
 36512  01C864                     __end_of_INT0_CallBack:
 36513                           	opt callstack 0
 36514                           
 36515 ;; *************** function _INT0_DefaultInterruptHandler *****************
 36516 ;; Defined at:
 36517 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 36518 ;; Parameters:    Size  Location     Type
 36519 ;;		None
 36520 ;; Auto vars:     Size  Location     Type
 36521 ;;		None
 36522 ;; Return value:  Size  Location     Type
 36523 ;;                  1  [STACK] void 
 36524 ;; Registers used:
 36525 ;;		None
 36526 ;; Tracked objects:
 36527 ;;		On entry : 3F/0
 36528 ;;		On exit  : 0/0
 36529 ;;		Unchanged: 0/0
 36530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36535 ;;Total ram usage:        0 bytes
 36536 ;; Hardware stack levels used:    1
 36537 ;; This function calls:
 36538 ;;		Nothing
 36539 ;; This function is called by:
 36540 ;;		_EXT_INT_Initialize
 36541 ;;		_INT0_CallBack
 36542 ;; This function uses a reentrant model
 36543 ;;
 36544                           
 36545                           	psect	text167
 36546  01CB9E                     __ptext167:
 36547                           	opt callstack 0
 36548  01CB9E                     _INT0_DefaultInterruptHandler:
 36549                           	opt callstack 2
 36550                           
 36551                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36552                           
 36553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36554                           ;incstack = 0
 36555  01CB9E  0012               	return		;funcret
 36556  01CBA0                     __end_of_INT0_DefaultInterruptHandler:
 36557                           	opt callstack 0
 36558                           
 36559 ;; *************** function _Default_ISR *****************
 36560 ;; Defined at:
 36561 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 36562 ;; Parameters:    Size  Location     Type
 36563 ;;		None
 36564 ;; Auto vars:     Size  Location     Type
 36565 ;;		None
 36566 ;; Return value:  Size  Location     Type
 36567 ;;                  1    wreg      void 
 36568 ;; Registers used:
 36569 ;;		None
 36570 ;; Tracked objects:
 36571 ;;		On entry : 0/0
 36572 ;;		On exit  : 0/0
 36573 ;;		Unchanged: 0/0
 36574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36579 ;;Total ram usage:        0 bytes
 36580 ;; Hardware stack levels used:    1
 36581 ;; This function calls:
 36582 ;;		Nothing
 36583 ;; This function is called by:
 36584 ;;		Interrupt level 2
 36585 ;; This function uses a non-reentrant model
 36586 ;;
 36587                           
 36588                           	psect	text168
 36589  01CB94                     __ptext168:
 36590                           	opt callstack 0
 36591  01CB94                     _Default_ISR:
 36592                           	opt callstack 4
 36593                           
 36594                           ;incstack = 0
 36595  01CB94  EE14  F15E         	lfsr	1,___inthi_sp
 36596  01CB98  0011               	retfie		f
 36597  01CB9A                     __end_of_Default_ISR:
 36598                           	opt callstack 0
 36599                           
 36600 ;; *************** function _ADCC_ISR *****************
 36601 ;; Defined at:
 36602 ;;		line 314 in file "mcc_generated_files/adcc.c"
 36603 ;; Parameters:    Size  Location     Type
 36604 ;;		None
 36605 ;; Auto vars:     Size  Location     Type
 36606 ;;		None
 36607 ;; Return value:  Size  Location     Type
 36608 ;;                  1    wreg      void 
 36609 ;; Registers used:
 36610 ;;		wreg, status,2, status,0, pclath, tosl
 36611 ;; Tracked objects:
 36612 ;;		On entry : 0/0
 36613 ;;		On exit  : 0/0
 36614 ;;		Unchanged: 0/0
 36615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36620 ;;Total ram usage:        0 bytes
 36621 ;; Hardware stack levels used:    1
 36622 ;; Hardware stack levels required when called:    1
 36623 ;; This function calls:
 36624 ;;		Absolute function
 36625 ;;		_ADCC_DefaultInterruptHandler
 36626 ;;		_adc_int_handler
 36627 ;; This function is called by:
 36628 ;;		Interrupt level 2
 36629 ;; This function uses a non-reentrant model
 36630 ;;
 36631                           
 36632                           	psect	text169
 36633  01C4D4                     __ptext169:
 36634                           	opt callstack 0
 36635  01C4D4                     _ADCC_ISR:
 36636                           	opt callstack 3
 36637                           
 36638                           ;incstack = 0
 36639  01C4D4  EE14  F15E         	lfsr	1,___inthi_sp
 36640                           
 36641                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 36642  01C4D8  0139               	movlb	57	; () banked
 36643  01C4DA  95A1               	bcf	161,2,b	;volatile
 36644                           
 36645                           ; BSR set to: 57
 36646                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 36647  01C4DC  0100               	movlb	0	; () banked
 36648  01C4DE  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36649  01C4E0  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36650  01C4E2  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36651  01C4E4  B4D8               	btfsc	status,2,c
 36652  01C4E6  0011               	retfie		f
 36653                           
 36654                           ; BSR set to: 0
 36655                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 36656  01C4E8  D801               	call	i2u1082_48
 36657  01C4EA  0011               	retfie		f
 36658  01C4EC                     i2u1082_48:
 36659  01C4EC  0005               	push	
 36660  01C4EE  6EFA               	movwf	pclath,c
 36661  01C4F0  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36662  01C4F2  6EFD               	movwf	tosl,c
 36663  01C4F4  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36664  01C4F6  6EFE               	movwf	tosh,c
 36665  01C4F8  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36666  01C4FA  6EFF               	movwf	tosu,c
 36667  01C4FC  50FA               	movf	pclath,w,c
 36668  01C4FE  0012               	return		;indir
 36669  01C500                     __end_of_ADCC_ISR:
 36670                           	opt callstack 0
 36671                           
 36672 ;; *************** function _adc_int_t_handler *****************
 36673 ;; Defined at:
 36674 ;;		line 171 in file "daq.c"
 36675 ;; Parameters:    Size  Location     Type
 36676 ;;		None
 36677 ;; Auto vars:     Size  Location     Type
 36678 ;;		None
 36679 ;; Return value:  Size  Location     Type
 36680 ;;                  1  [STACK] void 
 36681 ;; Registers used:
 36682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 36683 ;; Tracked objects:
 36684 ;;		On entry : 3F/0
 36685 ;;		On exit  : 1/0
 36686 ;;		Unchanged: 0/0
 36687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36692 ;;Total ram usage:        0 bytes
 36693 ;; Hardware stack levels used:    1
 36694 ;; Hardware stack levels required when called:    1
 36695 ;; This function calls:
 36696 ;;		_ADCC_DischargeSampleCapacitor
 36697 ;;		_ADCC_StartConversion
 36698 ;; This function is called by:
 36699 ;;		_start_adc_scan
 36700 ;;		_ADCC_ThresholdISR
 36701 ;; This function uses a reentrant model
 36702 ;;
 36703                           
 36704                           	psect	text170
 36705  01B618                     __ptext170:
 36706                           	opt callstack 0
 36707  01B618                     _adc_int_t_handler:
 36708                           	opt callstack 2
 36709                           
 36710                           ;daq.c: 176:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 36711                           
 36712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36713                           ;incstack = 0
 36714  01B618  013E               	movlb	62	; () banked
 36715  01B61A  51E6               	movf	230,w,b	;volatile
 36716  01B61C  006F FB9C  F001    	movff	16103,btemp	;volatile
 36717  01B622  6A02               	clrf	(btemp+1)^0,c
 36718  01B624  0060  F004  F002   	movff	btemp,btemp+1
 36719  01B62A  6A01               	clrf	btemp^0,c
 36720  01B62C  2601               	addwf	btemp^0,f,c
 36721  01B62E  0E00               	movlw	0
 36722  01B630  2202               	addwfc	(btemp+1)^0,f,c
 36723  01B632  0100               	movlb	0	; () banked
 36724  01B634  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36725  01B636  0D02               	mullw	2
 36726  01B638  50F3               	movf	243,w,c
 36727  01B63A  0FAF               	addlw	low _R
 36728  01B63C  6ED9               	movwf	fsr2l,c
 36729  01B63E  6ADA               	clrf	fsr2h,c
 36730  01B640  0060  F007  FFDE   	movff	btemp,postinc2
 36731  01B646  0060  F00B  FFDD   	movff	btemp+1,postdec2
 36732  01B64C                     l11715:
 36733                           
 36734                           ;daq.c: 178:   if (++R.scan_index > 0XD) {
 36735  01B64C  0100               	movlb	0	; () banked
 36736  01B64E  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 36737  01B650  0E0D               	movlw	13
 36738  01B652  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 36739  01B654  D003               	goto	l11721
 36740                           
 36741                           ; BSR set to: 0
 36742                           ;daq.c: 179:    R.done = 1;
 36743  01B656  0E01               	movlw	1
 36744  01B658  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 36745  01B65A  0012               	return	
 36746  01B65C                     l11721:
 36747                           
 36748                           ; BSR set to: 0
 36749                           ;daq.c: 185:  } while (!((R.scan_select >> R.scan_index) &0x1));
 36750  01B65C  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 36751  01B662  EE20  F0E2         	lfsr	2,_R+51	;volatile
 36752  01B666  006F FF78  F009    	movff	postinc2,btemp+8
 36753  01B66C  006F FF74  F00A    	movff	postdec2,btemp+9
 36754  01B672  2A0C               	incf	(btemp+11)^0,f,c
 36755  01B674  D003               	goto	u1079_44
 36756  01B676                     u1079_45:
 36757  01B676  90D8               	bcf	status,0,c
 36758  01B678  320A               	rrcf	(btemp+9)^0,f,c
 36759  01B67A  3209               	rrcf	(btemp+8)^0,f,c
 36760  01B67C                     u1079_44:
 36761  01B67C  2E0C               	decfsz	(btemp+11)^0,f,c
 36762  01B67E  D7FB               	goto	u1079_45
 36763  01B680  A009               	btfss	(btemp+8)^0,0,c
 36764  01B682  D7E4               	goto	l11715
 36765                           
 36766                           ;daq.c: 186:  ADCC_DischargeSampleCapacitor();
 36767  01B684  ECA9  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 36768                           
 36769                           ; BSR set to: 62
 36770                           ;daq.c: 187:  ADCC_StartConversion(R.scan_index & 0xf);
 36771  01B688  0100               	movlb	0	; () banked
 36772  01B68A  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36773  01B68C  0B0F               	andlw	15
 36774  01B68E  6EE6               	movwf	postinc1,c
 36775  01B690  EC40  F0E5         	call	_ADCC_StartConversion	;wreg free
 36776                           
 36777                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36778  01B694  0012               	return		;funcret
 36779  01B696                     __end_of_adc_int_t_handler:
 36780                           	opt callstack 0
 36781                           
 36782 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 36783 ;; Defined at:
 36784 ;;		line 339 in file "mcc_generated_files/adcc.c"
 36785 ;; Parameters:    Size  Location     Type
 36786 ;;		None
 36787 ;; Auto vars:     Size  Location     Type
 36788 ;;		None
 36789 ;; Return value:  Size  Location     Type
 36790 ;;                  1  [STACK] void 
 36791 ;; Registers used:
 36792 ;;		None
 36793 ;; Tracked objects:
 36794 ;;		On entry : 3F/0
 36795 ;;		On exit  : 0/0
 36796 ;;		Unchanged: 0/0
 36797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36802 ;;Total ram usage:        0 bytes
 36803 ;; Hardware stack levels used:    1
 36804 ;; This function calls:
 36805 ;;		Nothing
 36806 ;; This function is called by:
 36807 ;;		_ADCC_Initialize
 36808 ;;		_ADCC_ISR
 36809 ;;		_ADCC_ThresholdISR
 36810 ;; This function uses a reentrant model
 36811 ;;
 36812                           
 36813                           	psect	text171
 36814  01CBA0                     __ptext171:
 36815                           	opt callstack 0
 36816  01CBA0                     _ADCC_DefaultInterruptHandler:
 36817                           	opt callstack 3
 36818                           
 36819                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36820                           
 36821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36822                           ;incstack = 0
 36823  01CBA0  0012               	return		;funcret
 36824  01CBA2                     __end_of_ADCC_DefaultInterruptHandler:
 36825                           	opt callstack 0
 36826                           
 36827 ;; *************** function _adc_int_handler *****************
 36828 ;; Defined at:
 36829 ;;		line 161 in file "daq.c"
 36830 ;; Parameters:    Size  Location     Type
 36831 ;;		None
 36832 ;; Auto vars:     Size  Location     Type
 36833 ;;		None
 36834 ;; Return value:  Size  Location     Type
 36835 ;;                  1  [STACK] void 
 36836 ;; Registers used:
 36837 ;;		None
 36838 ;; Tracked objects:
 36839 ;;		On entry : 3F/0
 36840 ;;		On exit  : 0/0
 36841 ;;		Unchanged: 0/0
 36842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36847 ;;Total ram usage:        0 bytes
 36848 ;; Hardware stack levels used:    1
 36849 ;; This function calls:
 36850 ;;		Nothing
 36851 ;; This function is called by:
 36852 ;;		_start_adc_scan
 36853 ;;		_ADCC_ISR
 36854 ;; This function uses a reentrant model
 36855 ;;
 36856                           
 36857                           	psect	text172
 36858  01CBA2                     __ptext172:
 36859                           	opt callstack 0
 36860  01CBA2                     _adc_int_handler:
 36861                           	opt callstack 3
 36862                           
 36863                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36864                           
 36865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36866                           ;incstack = 0
 36867  01CBA2  0012               	return		;funcret
 36868  01CBA4                     __end_of_adc_int_handler:
 36869                           	opt callstack 0
 36870                           
 36871 ;; *************** function _ADCC_ThresholdISR *****************
 36872 ;; Defined at:
 36873 ;;		line 327 in file "mcc_generated_files/adcc.c"
 36874 ;; Parameters:    Size  Location     Type
 36875 ;;		None
 36876 ;; Auto vars:     Size  Location     Type
 36877 ;;		None
 36878 ;; Return value:  Size  Location     Type
 36879 ;;                  1    wreg      void 
 36880 ;; Registers used:
 36881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 36882 ;; Tracked objects:
 36883 ;;		On entry : 0/0
 36884 ;;		On exit  : 0/0
 36885 ;;		Unchanged: 0/0
 36886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36889 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36890 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36891 ;;Total ram usage:        5 bytes
 36892 ;; Hardware stack levels used:    1
 36893 ;; Hardware stack levels required when called:    2
 36894 ;; This function calls:
 36895 ;;		Absolute function
 36896 ;;		_ADCC_DefaultInterruptHandler
 36897 ;;		_adc_int_t_handler
 36898 ;; This function is called by:
 36899 ;;		Interrupt level 2
 36900 ;; This function uses a non-reentrant model
 36901 ;;
 36902                           
 36903                           	psect	text173
 36904  01B8D0                     __ptext173:
 36905                           	opt callstack 0
 36906  01B8D0                     _ADCC_ThresholdISR:
 36907                           	opt callstack 2
 36908                           
 36909                           ;incstack = 0
 36910  01B8D0  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 36911  01B8D6  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 36912  01B8DC  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 36913  01B8E2  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 36914  01B8E8  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 36915  01B8EE  EE14  F15E         	lfsr	1,___inthi_sp
 36916                           
 36917                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 36918  01B8F2  0139               	movlb	57	; () banked
 36919  01B8F4  97A1               	bcf	161,3,b	;volatile
 36920                           
 36921                           ; BSR set to: 57
 36922                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 36923  01B8F6  0100               	movlb	0	; () banked
 36924  01B8F8  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36925  01B8FA  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36926  01B8FC  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36927  01B8FE  B4D8               	btfsc	status,2,c
 36928  01B900  D00C               	goto	i2u1084_49
 36929                           
 36930                           ; BSR set to: 0
 36931                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 36932  01B902  D801               	call	i2u1084_48
 36933  01B904  D00A               	goto	i2u1084_49
 36934  01B906                     i2u1084_48:
 36935  01B906  0005               	push	
 36936  01B908  6EFA               	movwf	pclath,c
 36937  01B90A  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36938  01B90C  6EFD               	movwf	tosl,c
 36939  01B90E  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36940  01B910  6EFE               	movwf	tosh,c
 36941  01B912  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36942  01B914  6EFF               	movwf	tosu,c
 36943  01B916  50FA               	movf	pclath,w,c
 36944  01B918  0012               	return		;indir
 36945  01B91A                     i2u1084_49:
 36946  01B91A  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 36947  01B920  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 36948  01B926  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 36949  01B92C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 36950  01B932  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 36951  01B938  0011               	retfie		f
 36952  01B93A                     __end_of_ADCC_ThresholdISR:
 36953                           	opt callstack 0
 36954                           
 36955 ;; *************** function _UART1_rx_vect_isr *****************
 36956 ;; Defined at:
 36957 ;;		line 181 in file "mcc_generated_files/uart1.c"
 36958 ;; Parameters:    Size  Location     Type
 36959 ;;		None
 36960 ;; Auto vars:     Size  Location     Type
 36961 ;;		None
 36962 ;; Return value:  Size  Location     Type
 36963 ;;                  1    wreg      void 
 36964 ;; Registers used:
 36965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36966 ;; Tracked objects:
 36967 ;;		On entry : 0/0
 36968 ;;		On exit  : 0/0
 36969 ;;		Unchanged: 0/0
 36970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36975 ;;Total ram usage:        0 bytes
 36976 ;; Hardware stack levels used:    1
 36977 ;; Hardware stack levels required when called:    1
 36978 ;; This function calls:
 36979 ;;		Absolute function
 36980 ;;		_UART1_Receive_ISR
 36981 ;; This function is called by:
 36982 ;;		Interrupt level 2
 36983 ;; This function uses a non-reentrant model
 36984 ;;
 36985                           
 36986                           	psect	text174
 36987  01C738                     __ptext174:
 36988                           	opt callstack 0
 36989  01C738                     _UART1_rx_vect_isr:
 36990                           	opt callstack 3
 36991                           
 36992                           ;incstack = 0
 36993  01C738  EE14  F15E         	lfsr	1,___inthi_sp
 36994                           
 36995                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 36996  01C73C  0100               	movlb	0	; () banked
 36997  01C73E  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 36998  01C740  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 36999  01C742  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37000  01C744  B4D8               	btfsc	status,2,c
 37001  01C746  0011               	retfie		f
 37002                           
 37003                           ; BSR set to: 0
 37004                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 37005  01C748  D801               	call	i2u1086_48
 37006  01C74A  0011               	retfie		f
 37007  01C74C                     i2u1086_48:
 37008  01C74C  0005               	push	
 37009  01C74E  6EFA               	movwf	pclath,c
 37010  01C750  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 37011  01C752  6EFD               	movwf	tosl,c
 37012  01C754  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 37013  01C756  6EFE               	movwf	tosh,c
 37014  01C758  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37015  01C75A  6EFF               	movwf	tosu,c
 37016  01C75C  50FA               	movf	pclath,w,c
 37017  01C75E  0012               	return		;indir
 37018  01C760                     __end_of_UART1_rx_vect_isr:
 37019                           	opt callstack 0
 37020                           
 37021 ;; *************** function _UART1_Receive_ISR *****************
 37022 ;; Defined at:
 37023 ;;		line 192 in file "mcc_generated_files/uart1.c"
 37024 ;; Parameters:    Size  Location     Type
 37025 ;;		None
 37026 ;; Auto vars:     Size  Location     Type
 37027 ;;		None
 37028 ;; Return value:  Size  Location     Type
 37029 ;;                  1  [STACK] void 
 37030 ;; Registers used:
 37031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37032 ;; Tracked objects:
 37033 ;;		On entry : 3F/0
 37034 ;;		On exit  : 3F/0
 37035 ;;		Unchanged: 0/0
 37036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37041 ;;Total ram usage:        0 bytes
 37042 ;; Hardware stack levels used:    1
 37043 ;; This function calls:
 37044 ;;		Nothing
 37045 ;; This function is called by:
 37046 ;;		_UART1_Initialize
 37047 ;;		_UART1_rx_vect_isr
 37048 ;; This function uses a reentrant model
 37049 ;;
 37050                           
 37051                           	psect	text175
 37052  01C8CC                     __ptext175:
 37053                           	opt callstack 0
 37054  01C8CC                     _UART1_Receive_ISR:
 37055                           	opt callstack 3
 37056                           
 37057                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 37058                           
 37059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37060                           ;incstack = 0
 37061  01C8CC  0EDC               	movlw	low _uart1RxBuffer
 37062  01C8CE  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 37063  01C8D0  6ED9               	movwf	fsr2l,c
 37064  01C8D2  6ADA               	clrf	fsr2h,c
 37065  01C8D4  0E01               	movlw	high _uart1RxBuffer
 37066  01C8D6  22DA               	addwfc	fsr2h,f,c
 37067  01C8D8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 37068  01C8DE  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 37069                           
 37070                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 37071  01C8E0  0E07               	movlw	7
 37072  01C8E2  6447               	cpfsgt	_uart1RxHead^0,c
 37073  01C8E4  D001               	goto	l11195
 37074                           
 37075                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 37076  01C8E6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 37077  01C8E8                     l11195:
 37078                           
 37079                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 37080  01C8E8  0100               	movlb	0	; () banked
 37081  01C8EA  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 37082                           
 37083                           ; BSR set to: 0
 37084                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37085  01C8EC  0012               	return		;funcret
 37086  01C8EE                     __end_of_UART1_Receive_ISR:
 37087                           	opt callstack 0
 37088                           
 37089 ;; *************** function _UART2_tx_vect_isr *****************
 37090 ;; Defined at:
 37091 ;;		line 195 in file "mcc_generated_files/uart2.c"
 37092 ;; Parameters:    Size  Location     Type
 37093 ;;		None
 37094 ;; Auto vars:     Size  Location     Type
 37095 ;;		None
 37096 ;; Return value:  Size  Location     Type
 37097 ;;                  1    wreg      void 
 37098 ;; Registers used:
 37099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37100 ;; Tracked objects:
 37101 ;;		On entry : 0/0
 37102 ;;		On exit  : 0/0
 37103 ;;		Unchanged: 0/0
 37104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37109 ;;Total ram usage:        0 bytes
 37110 ;; Hardware stack levels used:    1
 37111 ;; Hardware stack levels required when called:    1
 37112 ;; This function calls:
 37113 ;;		Absolute function
 37114 ;;		_UART2_Transmit_ISR
 37115 ;; This function is called by:
 37116 ;;		Interrupt level 2
 37117 ;; This function uses a non-reentrant model
 37118 ;;
 37119                           
 37120                           	psect	text176
 37121  01C760                     __ptext176:
 37122                           	opt callstack 0
 37123  01C760                     _UART2_tx_vect_isr:
 37124                           	opt callstack 3
 37125                           
 37126                           ; BSR set to: 0
 37127                           ;incstack = 0
 37128  01C760  EE14  F15E         	lfsr	1,___inthi_sp
 37129                           
 37130                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 37131  01C764  0100               	movlb	0	; () banked
 37132  01C766  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 37133  01C768  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 37134  01C76A  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 37135  01C76C  B4D8               	btfsc	status,2,c
 37136  01C76E  0011               	retfie		f
 37137                           
 37138                           ; BSR set to: 0
 37139                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 37140  01C770  D801               	call	i2u1088_48
 37141  01C772  0011               	retfie		f
 37142  01C774                     i2u1088_48:
 37143  01C774  0005               	push	
 37144  01C776  6EFA               	movwf	pclath,c
 37145  01C778  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 37146  01C77A  6EFD               	movwf	tosl,c
 37147  01C77C  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 37148  01C77E  6EFE               	movwf	tosh,c
 37149  01C780  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 37150  01C782  6EFF               	movwf	tosu,c
 37151  01C784  50FA               	movf	pclath,w,c
 37152  01C786  0012               	return		;indir
 37153  01C788                     __end_of_UART2_tx_vect_isr:
 37154                           	opt callstack 0
 37155                           
 37156 ;; *************** function _UART2_Transmit_ISR *****************
 37157 ;; Defined at:
 37158 ;;		line 213 in file "mcc_generated_files/uart2.c"
 37159 ;; Parameters:    Size  Location     Type
 37160 ;;		None
 37161 ;; Auto vars:     Size  Location     Type
 37162 ;;		None
 37163 ;; Return value:  Size  Location     Type
 37164 ;;                  1  [STACK] void 
 37165 ;; Registers used:
 37166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37167 ;; Tracked objects:
 37168 ;;		On entry : 3F/0
 37169 ;;		On exit  : 3B/39
 37170 ;;		Unchanged: 0/0
 37171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37176 ;;Total ram usage:        0 bytes
 37177 ;; Hardware stack levels used:    1
 37178 ;; This function calls:
 37179 ;;		Nothing
 37180 ;; This function is called by:
 37181 ;;		_UART2_Initialize
 37182 ;;		_UART2_tx_vect_isr
 37183 ;; This function uses a reentrant model
 37184 ;;
 37185                           
 37186                           	psect	text177
 37187  01C500                     __ptext177:
 37188                           	opt callstack 0
 37189  01C500                     _UART2_Transmit_ISR:
 37190                           	opt callstack 3
 37191                           
 37192                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 37193                           
 37194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37195                           ;incstack = 0
 37196  01C500  0E40               	movlw	64
 37197  01C502  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 37198  01C504  D010               	goto	l673
 37199                           
 37200                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 37201  01C506  0E00               	movlw	low _uart2TxBuffer
 37202  01C508  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 37203  01C50A  6ED9               	movwf	fsr2l,c
 37204  01C50C  6ADA               	clrf	fsr2h,c
 37205  01C50E  0E03               	movlw	high _uart2TxBuffer
 37206  01C510  22DA               	addwfc	fsr2h,f,c
 37207  01C512  50DF               	movf	indf2,w,c
 37208  01C514  013D               	movlb	61	; () banked
 37209  01C516  6FD2               	movwf	210,b	;volatile
 37210                           
 37211                           ; BSR set to: 61
 37212  01C518  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 37213                           
 37214                           ; BSR set to: 61
 37215                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 37216  01C51A  0E3F               	movlw	63
 37217  01C51C  6446               	cpfsgt	_uart2TxTail^0,c
 37218  01C51E  D001               	goto	l11207
 37219                           
 37220                           ; BSR set to: 61
 37221                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 37222  01C520  6A46               	clrf	_uart2TxTail^0,c	;volatile
 37223  01C522                     l11207:
 37224                           
 37225                           ; BSR set to: 61
 37226                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 37227  01C522  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 37228                           
 37229                           ;mcc_generated_files/uart2.c: 224:     }
 37230  01C524  0012               	return	
 37231  01C526                     l673:
 37232                           
 37233                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 37234  01C526  0139               	movlb	57	; () banked
 37235  01C528  9796               	bcf	150,3,b	;volatile
 37236                           
 37237                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37238  01C52A  0012               	return		;funcret
 37239  01C52C                     __end_of_UART2_Transmit_ISR:
 37240                           	opt callstack 0
 37241                           
 37242 ;; *************** function _UART2_rx_vect_isr *****************
 37243 ;; Defined at:
 37244 ;;		line 203 in file "mcc_generated_files/uart2.c"
 37245 ;; Parameters:    Size  Location     Type
 37246 ;;		None
 37247 ;; Auto vars:     Size  Location     Type
 37248 ;;		None
 37249 ;; Return value:  Size  Location     Type
 37250 ;;                  1    wreg      void 
 37251 ;; Registers used:
 37252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37253 ;; Tracked objects:
 37254 ;;		On entry : 0/0
 37255 ;;		On exit  : 0/0
 37256 ;;		Unchanged: 0/0
 37257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37262 ;;Total ram usage:        0 bytes
 37263 ;; Hardware stack levels used:    1
 37264 ;; Hardware stack levels required when called:    1
 37265 ;; This function calls:
 37266 ;;		Absolute function
 37267 ;;		_UART2_Receive_ISR
 37268 ;; This function is called by:
 37269 ;;		Interrupt level 2
 37270 ;; This function uses a non-reentrant model
 37271 ;;
 37272                           
 37273                           	psect	text178
 37274  01C788                     __ptext178:
 37275                           	opt callstack 0
 37276  01C788                     _UART2_rx_vect_isr:
 37277                           	opt callstack 3
 37278                           
 37279                           ;incstack = 0
 37280  01C788  EE14  F15E         	lfsr	1,___inthi_sp
 37281                           
 37282                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 37283  01C78C  0100               	movlb	0	; () banked
 37284  01C78E  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37285  01C790  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37286  01C792  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37287  01C794  B4D8               	btfsc	status,2,c
 37288  01C796  0011               	retfie		f
 37289                           
 37290                           ; BSR set to: 0
 37291                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 37292  01C798  D801               	call	i2u1090_48
 37293  01C79A  0011               	retfie		f
 37294  01C79C                     i2u1090_48:
 37295  01C79C  0005               	push	
 37296  01C79E  6EFA               	movwf	pclath,c
 37297  01C7A0  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37298  01C7A2  6EFD               	movwf	tosl,c
 37299  01C7A4  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37300  01C7A6  6EFE               	movwf	tosh,c
 37301  01C7A8  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37302  01C7AA  6EFF               	movwf	tosu,c
 37303  01C7AC  50FA               	movf	pclath,w,c
 37304  01C7AE  0012               	return		;indir
 37305  01C7B0                     __end_of_UART2_rx_vect_isr:
 37306                           	opt callstack 0
 37307                           
 37308 ;; *************** function _UART2_Receive_ISR *****************
 37309 ;; Defined at:
 37310 ;;		line 233 in file "mcc_generated_files/uart2.c"
 37311 ;; Parameters:    Size  Location     Type
 37312 ;;		None
 37313 ;; Auto vars:     Size  Location     Type
 37314 ;;		None
 37315 ;; Return value:  Size  Location     Type
 37316 ;;                  1  [STACK] void 
 37317 ;; Registers used:
 37318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37319 ;; Tracked objects:
 37320 ;;		On entry : 3F/0
 37321 ;;		On exit  : 3F/0
 37322 ;;		Unchanged: 0/0
 37323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37328 ;;Total ram usage:        0 bytes
 37329 ;; Hardware stack levels used:    1
 37330 ;; This function calls:
 37331 ;;		Nothing
 37332 ;; This function is called by:
 37333 ;;		_UART2_Initialize
 37334 ;;		_UART2_rx_vect_isr
 37335 ;; This function uses a reentrant model
 37336 ;;
 37337                           
 37338                           	psect	text179
 37339  01C90E                     __ptext179:
 37340                           	opt callstack 0
 37341  01C90E                     _UART2_Receive_ISR:
 37342                           	opt callstack 3
 37343                           
 37344                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 37345                           
 37346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37347                           ;incstack = 0
 37348  01C90E  0E00               	movlw	low _uart2RxBuffer
 37349  01C910  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 37350  01C912  6ED9               	movwf	fsr2l,c
 37351  01C914  6ADA               	clrf	fsr2h,c
 37352  01C916  0E04               	movlw	high _uart2RxBuffer
 37353  01C918  22DA               	addwfc	fsr2h,f,c
 37354  01C91A  006F F743 FFDF     	movff	15824,indf2	;volatile
 37355  01C920  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 37356                           
 37357                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 37358  01C922  2844               	incf	_uart2RxHead^0,w,c
 37359  01C924  B4D8               	btfsc	status,2,c
 37360                           
 37361                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 37362  01C926  6A44               	clrf	_uart2RxHead^0,c	;volatile
 37363                           
 37364                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 37365  01C928  0100               	movlb	0	; () banked
 37366  01C92A  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 37367                           
 37368                           ; BSR set to: 0
 37369                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37370  01C92C  0012               	return		;funcret
 37371  01C92E                     __end_of_UART2_Receive_ISR:
 37372                           	opt callstack 0
 37373                           
 37374 ;; *************** function _TMR6_ISR *****************
 37375 ;; Defined at:
 37376 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 37377 ;; Parameters:    Size  Location     Type
 37378 ;;		None
 37379 ;; Auto vars:     Size  Location     Type
 37380 ;;		None
 37381 ;; Return value:  Size  Location     Type
 37382 ;;                  1    wreg      void 
 37383 ;; Registers used:
 37384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37385 ;; Tracked objects:
 37386 ;;		On entry : 0/0
 37387 ;;		On exit  : 0/0
 37388 ;;		Unchanged: 0/0
 37389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37394 ;;Total ram usage:        1 bytes
 37395 ;; Hardware stack levels used:    1
 37396 ;; Hardware stack levels required when called:    2
 37397 ;; This function calls:
 37398 ;;		_TMR6_CallBack
 37399 ;; This function is called by:
 37400 ;;		Interrupt level 2
 37401 ;; This function uses a non-reentrant model
 37402 ;;
 37403                           
 37404                           	psect	text180
 37405  01C9E0                     __ptext180:
 37406                           	opt callstack 0
 37407  01C9E0                     _TMR6_ISR:
 37408                           	opt callstack 2
 37409                           
 37410                           ; BSR set to: 0
 37411                           ;incstack = 0
 37412  01C9E0  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 37413  01C9E6  EE14  F15E         	lfsr	1,___inthi_sp
 37414                           
 37415                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 37416  01C9EA  0139               	movlb	57	; () banked
 37417  01C9EC  91A9               	bcf	169,0,b	;volatile
 37418                           
 37419                           ; BSR set to: 57
 37420                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 37421  01C9EE  EC32  F0E4         	call	_TMR6_CallBack	;wreg free
 37422  01C9F2  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 37423  01C9F8  0011               	retfie		f
 37424  01C9FA                     __end_of_TMR6_ISR:
 37425                           	opt callstack 0
 37426                           
 37427 ;; *************** function _TMR6_CallBack *****************
 37428 ;; Defined at:
 37429 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 37430 ;; Parameters:    Size  Location     Type
 37431 ;;		None
 37432 ;; Auto vars:     Size  Location     Type
 37433 ;;		None
 37434 ;; Return value:  Size  Location     Type
 37435 ;;                  1  [STACK] void 
 37436 ;; Registers used:
 37437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37438 ;; Tracked objects:
 37439 ;;		On entry : 3F/39
 37440 ;;		On exit  : 0/0
 37441 ;;		Unchanged: 0/0
 37442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37447 ;;Total ram usage:        0 bytes
 37448 ;; Hardware stack levels used:    1
 37449 ;; Hardware stack levels required when called:    1
 37450 ;; This function calls:
 37451 ;;		Absolute function
 37452 ;;		_TMR6_DefaultInterruptHandler
 37453 ;; This function is called by:
 37454 ;;		_TMR6_ISR
 37455 ;; This function uses a reentrant model
 37456 ;;
 37457                           
 37458                           	psect	text181
 37459  01C864                     __ptext181:
 37460                           	opt callstack 0
 37461  01C864                     _TMR6_CallBack:
 37462                           	opt callstack 2
 37463                           
 37464                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 37465                           
 37466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37467                           ;incstack = 0
 37468  01C864  0100               	movlb	0	; () banked
 37469  01C866  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37470  01C868  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37471  01C86A  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37472  01C86C  B4D8               	btfsc	status,2,c
 37473  01C86E  0012               	return	
 37474                           
 37475                           ; BSR set to: 0
 37476                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 37477  01C870  D801               	call	u1044_48
 37478  01C872  0012               	return	
 37479  01C874                     u1044_48:
 37480  01C874  0005               	push	
 37481  01C876  6EFA               	movwf	pclath,c
 37482  01C878  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37483  01C87A  6EFD               	movwf	tosl,c
 37484  01C87C  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37485  01C87E  6EFE               	movwf	tosh,c
 37486  01C880  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37487  01C882  6EFF               	movwf	tosu,c
 37488  01C884  50FA               	movf	pclath,w,c
 37489  01C886  0012               	return		;indir
 37490  01C888                     __end_of_TMR6_CallBack:
 37491                           	opt callstack 0
 37492                           
 37493 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 37494 ;; Defined at:
 37495 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 37496 ;; Parameters:    Size  Location     Type
 37497 ;;		None
 37498 ;; Auto vars:     Size  Location     Type
 37499 ;;  i               1  [STACK] unsigned char 
 37500 ;; Return value:  Size  Location     Type
 37501 ;;                  1  [STACK] void 
 37502 ;; Registers used:
 37503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37504 ;; Tracked objects:
 37505 ;;		On entry : 3F/0
 37506 ;;		On exit  : 0/0
 37507 ;;		Unchanged: 0/0
 37508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37513 ;;Total ram usage:        0 bytes
 37514 ;; Hardware stack levels used:    1
 37515 ;; This function calls:
 37516 ;;		Nothing
 37517 ;; This function is called by:
 37518 ;;		_TMR6_Initialize
 37519 ;;		_TMR6_CallBack
 37520 ;; This function uses a reentrant model
 37521 ;;
 37522                           
 37523                           	psect	text182
 37524  01BD40                     __ptext182:
 37525                           	opt callstack 0
 37526  01BD40                     _TMR6_DefaultInterruptHandler:
 37527                           	opt callstack 0
 37528                           
 37529                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37530  01BD40  52E6               	movf	postinc1,f,c
 37531                           
 37532                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 37533                           ;stkvar	_i @ sp[(-1)+0]
 37534                           
 37535                           ;incstack = 0
 37536  01BD42  0EFF               	movlw	-1
 37537  01BD44  6AE3               	clrf	plusw1,c
 37538  01BD46                     l10719:
 37539                           
 37540                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 37541                           ;stkvar	_i @ sp[(-1)+0]
 37542  01BD46  0EFF               	movlw	-1
 37543  01BD48  50E3               	movf	plusw1,w,c
 37544  01BD4A  0D02               	mullw	2
 37545  01BD4C  0E7D               	movlw	low _tickCount
 37546  01BD4E  24F3               	addwf	243,w,c
 37547  01BD50  6ED9               	movwf	fsr2l,c
 37548  01BD52  0E02               	movlw	high _tickCount
 37549  01BD54  20F4               	addwfc	prodh,w,c
 37550  01BD56  6EDA               	movwf	fsr2h,c
 37551  01BD58  50DE               	movf	postinc2,w,c
 37552  01BD5A  10DE               	iorwf	postinc2,w,c
 37553  01BD5C  B4D8               	btfsc	status,2,c
 37554  01BD5E  D00C               	goto	l10723
 37555                           
 37556                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 37557                           ;stkvar	_i @ sp[(-1)+0]
 37558  01BD60  0EFF               	movlw	-1
 37559  01BD62  50E3               	movf	plusw1,w,c
 37560  01BD64  0D02               	mullw	2
 37561  01BD66  0E7D               	movlw	low _tickCount
 37562  01BD68  24F3               	addwf	243,w,c
 37563  01BD6A  6ED9               	movwf	fsr2l,c
 37564  01BD6C  0E02               	movlw	high _tickCount
 37565  01BD6E  20F4               	addwfc	prodh,w,c
 37566  01BD70  6EDA               	movwf	fsr2h,c
 37567  01BD72  06DE               	decf	postinc2,f,c
 37568  01BD74  0E00               	movlw	0
 37569  01BD76  5ADD               	subwfb	postdec2,f,c
 37570  01BD78                     l10723:
 37571                           
 37572                           ;mcc_generated_files/tmr6.c: 207:  }
 37573                           ;stkvar	_i @ sp[(-1)+0]
 37574  01BD78  0EFF               	movlw	-1
 37575  01BD7A  2AE3               	incf	plusw1,f,c
 37576                           
 37577                           ;stkvar	_i @ sp[(-1)+0]
 37578  01BD7C  0EFF               	movlw	-1
 37579  01BD7E  006F FF8C  F001    	movff	plusw1,btemp
 37580  01BD84  0E0C               	movlw	12
 37581  01BD86  6401               	cpfsgt	btemp^0,c
 37582  01BD88  D7DE               	goto	l10719
 37583                           
 37584                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37585  01BD8A  52E5               	movf	postdec1,f,c
 37586  01BD8C  0012               	return		;funcret
 37587  01BD8E                     __end_of_TMR6_DefaultInterruptHandler:
 37588                           	opt callstack 0
 37589                           
 37590 ;; *************** function _DMA1_DMASCNT_ISR *****************
 37591 ;; Defined at:
 37592 ;;		line 126 in file "mcc_generated_files/dma1.c"
 37593 ;; Parameters:    Size  Location     Type
 37594 ;;		None
 37595 ;; Auto vars:     Size  Location     Type
 37596 ;;		None
 37597 ;; Return value:  Size  Location     Type
 37598 ;;                  1    wreg      void 
 37599 ;; Registers used:
 37600 ;;		None
 37601 ;; Tracked objects:
 37602 ;;		On entry : 0/0
 37603 ;;		On exit  : 3F/1
 37604 ;;		Unchanged: 0/0
 37605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37610 ;;Total ram usage:        0 bytes
 37611 ;; Hardware stack levels used:    1
 37612 ;; This function calls:
 37613 ;;		Nothing
 37614 ;; This function is called by:
 37615 ;;		Interrupt level 2
 37616 ;; This function uses a non-reentrant model
 37617 ;;
 37618                           
 37619                           	psect	text183
 37620  01CB0C                     __ptext183:
 37621                           	opt callstack 0
 37622  01CB0C                     _DMA1_DMASCNT_ISR:
 37623                           	opt callstack 4
 37624                           
 37625                           ;incstack = 0
 37626  01CB0C  EE14  F15E         	lfsr	1,___inthi_sp
 37627                           
 37628                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 37629  01CB10  0139               	movlb	57	; () banked
 37630  01CB12  91A2               	bcf	162,0,b	;volatile
 37631                           
 37632                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 37633  01CB14  0101               	movlb	1	; () banked
 37634  01CB16  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 37635                           
 37636                           ; BSR set to: 1
 37637  01CB18  0011               	retfie		f
 37638  01CB1A                     __end_of_DMA1_DMASCNT_ISR:
 37639                           	opt callstack 0
 37640                           
 37641 ;; *************** function _DMA1_DMADCNT_ISR *****************
 37642 ;; Defined at:
 37643 ;;		line 133 in file "mcc_generated_files/dma1.c"
 37644 ;; Parameters:    Size  Location     Type
 37645 ;;		None
 37646 ;; Auto vars:     Size  Location     Type
 37647 ;;		None
 37648 ;; Return value:  Size  Location     Type
 37649 ;;                  1    wreg      void 
 37650 ;; Registers used:
 37651 ;;		None
 37652 ;; Tracked objects:
 37653 ;;		On entry : 0/0
 37654 ;;		On exit  : 3F/39
 37655 ;;		Unchanged: 0/0
 37656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37661 ;;Total ram usage:        0 bytes
 37662 ;; Hardware stack levels used:    1
 37663 ;; This function calls:
 37664 ;;		Nothing
 37665 ;; This function is called by:
 37666 ;;		Interrupt level 2
 37667 ;; This function uses a non-reentrant model
 37668 ;;
 37669                           
 37670                           	psect	text184
 37671  01CB30                     __ptext184:
 37672                           	opt callstack 0
 37673  01CB30                     _DMA1_DMADCNT_ISR:
 37674                           	opt callstack 4
 37675                           
 37676                           ; BSR set to: 1
 37677                           ;incstack = 0
 37678  01CB30  EE14  F15E         	lfsr	1,___inthi_sp
 37679                           
 37680                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 37681  01CB34  0139               	movlb	57	; () banked
 37682  01CB36  93A2               	bcf	162,1,b	;volatile
 37683                           
 37684                           ; BSR set to: 57
 37685  01CB38  0011               	retfie		f
 37686  01CB3A                     __end_of_DMA1_DMADCNT_ISR:
 37687                           	opt callstack 0
 37688                           
 37689 ;; *************** function _DMA1_DMAA_ISR *****************
 37690 ;; Defined at:
 37691 ;;		line 143 in file "mcc_generated_files/dma1.c"
 37692 ;; Parameters:    Size  Location     Type
 37693 ;;		None
 37694 ;; Auto vars:     Size  Location     Type
 37695 ;;		None
 37696 ;; Return value:  Size  Location     Type
 37697 ;;                  1    wreg      void 
 37698 ;; Registers used:
 37699 ;;		None
 37700 ;; Tracked objects:
 37701 ;;		On entry : 0/0
 37702 ;;		On exit  : 3F/39
 37703 ;;		Unchanged: 0/0
 37704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37709 ;;Total ram usage:        0 bytes
 37710 ;; Hardware stack levels used:    1
 37711 ;; This function calls:
 37712 ;;		Nothing
 37713 ;; This function is called by:
 37714 ;;		Interrupt level 2
 37715 ;; This function uses a non-reentrant model
 37716 ;;
 37717                           
 37718                           	psect	text185
 37719  01CB3C                     __ptext185:
 37720                           	opt callstack 0
 37721  01CB3C                     _DMA1_DMAA_ISR:
 37722                           	opt callstack 4
 37723                           
 37724                           ; BSR set to: 57
 37725                           ;incstack = 0
 37726  01CB3C  EE14  F15E         	lfsr	1,___inthi_sp
 37727                           
 37728                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 37729  01CB40  0139               	movlb	57	; () banked
 37730  01CB42  97A2               	bcf	162,3,b	;volatile
 37731                           
 37732                           ; BSR set to: 57
 37733  01CB44  0011               	retfie		f
 37734  01CB46                     __end_of_DMA1_DMAA_ISR:
 37735                           	opt callstack 0
 37736                           
 37737 ;; *************** function _DMA1_DMAOR_ISR *****************
 37738 ;; Defined at:
 37739 ;;		line 154 in file "mcc_generated_files/dma1.c"
 37740 ;; Parameters:    Size  Location     Type
 37741 ;;		None
 37742 ;; Auto vars:     Size  Location     Type
 37743 ;;		None
 37744 ;; Return value:  Size  Location     Type
 37745 ;;                  1    wreg      void 
 37746 ;; Registers used:
 37747 ;;		None
 37748 ;; Tracked objects:
 37749 ;;		On entry : 0/0
 37750 ;;		On exit  : 3F/39
 37751 ;;		Unchanged: 0/0
 37752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37757 ;;Total ram usage:        0 bytes
 37758 ;; Hardware stack levels used:    1
 37759 ;; This function calls:
 37760 ;;		Nothing
 37761 ;; This function is called by:
 37762 ;;		Interrupt level 2
 37763 ;; This function uses a non-reentrant model
 37764 ;;
 37765                           
 37766                           	psect	text186
 37767  01CB48                     __ptext186:
 37768                           	opt callstack 0
 37769  01CB48                     _DMA1_DMAOR_ISR:
 37770                           	opt callstack 4
 37771                           
 37772                           ; BSR set to: 57
 37773                           ;incstack = 0
 37774  01CB48  EE14  F15E         	lfsr	1,___inthi_sp
 37775                           
 37776                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 37777  01CB4C  0139               	movlb	57	; () banked
 37778  01CB4E  95A2               	bcf	162,2,b	;volatile
 37779                           
 37780                           ; BSR set to: 57
 37781  01CB50  0011               	retfie		f
 37782  01CB52                     __end_of_DMA1_DMAOR_ISR:
 37783                           	opt callstack 0
 37784                           
 37785                           ;
 37786                           ; Interrupt Vector Table @ 0x8
 37787                           ;
 37788                           
 37789                           	psect	ivt0x8
 37790  000008                     __pivt0x8:
 37791                           	opt callstack 0
 37792  000008                     ivt0x8_base:
 37793                           	opt callstack 0
 37794                           
 37795                           ; Vector 0 : SWINT
 37796  000008  72E5               	dw	_Default_ISR shr (0+2)
 37797                           
 37798                           ; Vector 1 : HLVD
 37799  00000A  72E5               	dw	_Default_ISR shr (0+2)
 37800                           
 37801                           ; Vector 2 : OSF
 37802  00000C  72E5               	dw	_Default_ISR shr (0+2)
 37803                           
 37804                           ; Vector 3 : CSW
 37805  00000E  72E5               	dw	_Default_ISR shr (0+2)
 37806                           
 37807                           ; Vector 4 : NVM
 37808  000010  72E5               	dw	_Default_ISR shr (0+2)
 37809                           
 37810                           ; Vector 5 : SCAN
 37811  000012  72E5               	dw	_Default_ISR shr (0+2)
 37812                           
 37813                           ; Vector 6 : CRC
 37814  000014  72E5               	dw	_Default_ISR shr (0+2)
 37815                           
 37816                           ; Vector 7 : IOC
 37817  000016  72E5               	dw	_Default_ISR shr (0+2)
 37818                           
 37819                           ; Vector 8 : INT0
 37820  000018  72BF               	dw	_INT0_ISR shr (0+2)
 37821                           
 37822                           ; Vector 9 : ZCD
 37823  00001A  72E5               	dw	_Default_ISR shr (0+2)
 37824                           
 37825                           ; Vector 10 : AD
 37826  00001C  7135               	dw	_ADCC_ISR shr (0+2)
 37827                           
 37828                           ; Vector 11 : ADT
 37829  00001E  6E34               	dw	_ADCC_ThresholdISR shr (0+2)
 37830                           
 37831                           ; Vector 12 : CMP1
 37832  000020  72E5               	dw	_Default_ISR shr (0+2)
 37833                           
 37834                           ; Vector 13 : SMT1
 37835  000022  72E5               	dw	_Default_ISR shr (0+2)
 37836                           
 37837                           ; Vector 14 : SMT1PRA
 37838  000024  72E5               	dw	_Default_ISR shr (0+2)
 37839                           
 37840                           ; Vector 15 : SMT1PRW
 37841  000026  72E5               	dw	_Default_ISR shr (0+2)
 37842                           
 37843                           ; Vector 16 : DMA1SCNT
 37844  000028  72C3               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 37845                           
 37846                           ; Vector 17 : DMA1DCNT
 37847  00002A  72CC               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 37848                           
 37849                           ; Vector 18 : DMA1OR
 37850  00002C  72D2               	dw	_DMA1_DMAOR_ISR shr (0+2)
 37851                           
 37852                           ; Vector 19 : DMA1A
 37853  00002E  72CF               	dw	_DMA1_DMAA_ISR shr (0+2)
 37854                           
 37855                           ; Vector 20 : SPI1RX
 37856  000030  72E5               	dw	_Default_ISR shr (0+2)
 37857                           
 37858                           ; Vector 21 : SPI1TX
 37859  000032  72E5               	dw	_Default_ISR shr (0+2)
 37860                           
 37861                           ; Vector 22 : SPI1
 37862  000034  72E5               	dw	_Default_ISR shr (0+2)
 37863                           
 37864                           ; Vector 23 : I2C1RX
 37865  000036  72E5               	dw	_Default_ISR shr (0+2)
 37866                           
 37867                           ; Vector 24 : I2C1TX
 37868  000038  72E5               	dw	_Default_ISR shr (0+2)
 37869                           
 37870                           ; Vector 25 : I2C1
 37871  00003A  72E5               	dw	_Default_ISR shr (0+2)
 37872                           
 37873                           ; Vector 26 : I2C1E
 37874  00003C  72E5               	dw	_Default_ISR shr (0+2)
 37875                           
 37876                           ; Vector 27 : U1RX
 37877  00003E  71CE               	dw	_UART1_rx_vect_isr shr (0+2)
 37878                           
 37879                           ; Vector 28 : U1TX
 37880  000040  72E5               	dw	_Default_ISR shr (0+2)
 37881                           
 37882                           ; Vector 29 : U1E
 37883  000042  72E5               	dw	_Default_ISR shr (0+2)
 37884                           
 37885                           ; Vector 30 : U1
 37886  000044  72E5               	dw	_Default_ISR shr (0+2)
 37887                           
 37888                           ; Vector 31 : TMR0
 37889  000046  72E5               	dw	_Default_ISR shr (0+2)
 37890                           
 37891                           ; Vector 32 : TMR1
 37892  000048  72E5               	dw	_Default_ISR shr (0+2)
 37893                           
 37894                           ; Vector 33 : TMR1G
 37895  00004A  72E5               	dw	_Default_ISR shr (0+2)
 37896                           
 37897                           ; Vector 34 : TMR2
 37898  00004C  72E5               	dw	_Default_ISR shr (0+2)
 37899                           
 37900                           ; Vector 35 : CCP1
 37901  00004E  72E5               	dw	_Default_ISR shr (0+2)
 37902                           
 37903                           ; Vector 36 : Undefined
 37904  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 37905                           
 37906                           ; Vector 37 : NCO1
 37907  000052  72E5               	dw	_Default_ISR shr (0+2)
 37908                           
 37909                           ; Vector 38 : CWG1
 37910  000054  72E5               	dw	_Default_ISR shr (0+2)
 37911                           
 37912                           ; Vector 39 : CLC1
 37913  000056  72E5               	dw	_Default_ISR shr (0+2)
 37914                           
 37915                           ; Vector 40 : INT1
 37916  000058  7065               	dw	_INT1_ISR shr (0+2)
 37917                           
 37918                           ; Vector 41 : CMP2
 37919  00005A  72E5               	dw	_Default_ISR shr (0+2)
 37920                           
 37921                           ; Vector 42 : DMA2SCNT
 37922  00005C  72E5               	dw	_Default_ISR shr (0+2)
 37923                           
 37924                           ; Vector 43 : DMA2DCNT
 37925  00005E  72E5               	dw	_Default_ISR shr (0+2)
 37926                           
 37927                           ; Vector 44 : DMA2OR
 37928  000060  72E5               	dw	_Default_ISR shr (0+2)
 37929                           
 37930                           ; Vector 45 : DMA2A
 37931  000062  72E5               	dw	_Default_ISR shr (0+2)
 37932                           
 37933                           ; Vector 46 : I2C2RX
 37934  000064  72E5               	dw	_Default_ISR shr (0+2)
 37935                           
 37936                           ; Vector 47 : I2C2TX
 37937  000066  72E5               	dw	_Default_ISR shr (0+2)
 37938                           
 37939                           ; Vector 48 : I2C2
 37940  000068  72E5               	dw	_Default_ISR shr (0+2)
 37941                           
 37942                           ; Vector 49 : I2C2E
 37943  00006A  72E5               	dw	_Default_ISR shr (0+2)
 37944                           
 37945                           ; Vector 50 : U2RX
 37946  00006C  71E2               	dw	_UART2_rx_vect_isr shr (0+2)
 37947                           
 37948                           ; Vector 51 : U2TX
 37949  00006E  71D8               	dw	_UART2_tx_vect_isr shr (0+2)
 37950                           
 37951                           ; Vector 52 : U2E
 37952  000070  72E5               	dw	_Default_ISR shr (0+2)
 37953                           
 37954                           ; Vector 53 : U2
 37955  000072  72E5               	dw	_Default_ISR shr (0+2)
 37956                           
 37957                           ; Vector 54 : TMR3
 37958  000074  65D1               	dw	_TMR3_ISR shr (0+2)
 37959                           
 37960                           ; Vector 55 : TMR3G
 37961  000076  72E5               	dw	_Default_ISR shr (0+2)
 37962                           
 37963                           ; Vector 56 : TMR4
 37964  000078  72E5               	dw	_Default_ISR shr (0+2)
 37965                           
 37966                           ; Vector 57 : CCP2
 37967  00007A  72E5               	dw	_Default_ISR shr (0+2)
 37968                           
 37969                           ; Vector 58 : Undefined
 37970  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 37971                           
 37972                           ; Vector 59 : CWG2
 37973  00007E  72E5               	dw	_Default_ISR shr (0+2)
 37974                           
 37975                           ; Vector 60 : CLC2
 37976  000080  72E5               	dw	_Default_ISR shr (0+2)
 37977                           
 37978                           ; Vector 61 : INT2
 37979  000082  72E5               	dw	_Default_ISR shr (0+2)
 37980                           
 37981                           ; Vector 62 : Undefined
 37982  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 37983                           
 37984                           ; Vector 63 : Undefined
 37985  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 37986                           
 37987                           ; Vector 64 : Undefined
 37988  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 37989                           
 37990                           ; Vector 65 : Undefined
 37991  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 37992                           
 37993                           ; Vector 66 : Undefined
 37994  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 37995                           
 37996                           ; Vector 67 : Undefined
 37997  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 37998                           
 37999                           ; Vector 68 : Undefined
 38000  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 38001                           
 38002                           ; Vector 69 : Undefined
 38003  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 38004                           
 38005                           ; Vector 70 : TMR5
 38006  000094  69D0               	dw	_TMR5_ISR shr (0+2)
 38007                           
 38008                           ; Vector 71 : TMR5G
 38009  000096  72E5               	dw	_Default_ISR shr (0+2)
 38010                           
 38011                           ; Vector 72 : TMR6
 38012  000098  7278               	dw	_TMR6_ISR shr (0+2)
 38013                           
 38014                           ; Vector 73 : CCP3
 38015  00009A  72E5               	dw	_Default_ISR shr (0+2)
 38016                           
 38017                           ; Vector 74 : CWG3
 38018  00009C  72E5               	dw	_Default_ISR shr (0+2)
 38019                           
 38020                           ; Vector 75 : CLC3
 38021  00009E  72E5               	dw	_Default_ISR shr (0+2)
 38022                           
 38023                           ; Vector 76 : Undefined
 38024  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 38025                           
 38026                           ; Vector 77 : Undefined
 38027  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 38028                           
 38029                           ; Vector 78 : Undefined
 38030  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 38031                           
 38032                           ; Vector 79 : Undefined
 38033  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 38034                           
 38035                           ; Vector 80 : CCP4
 38036  0000A8  72E5               	dw	_Default_ISR shr (0+2)
 38037                           
 38038                           ; Vector 81 : CLC4
 38039  0000AA  72E5               	dw	_Default_ISR shr (0+2)
 38040  0000AC                     ivt0x8_undefint:
 38041                           	opt callstack 0
 38042  0000AC  00FF               	reset	
 38043                           
 38044                           	psect	text187
 38045  000000                     __ptext187:
 38046                           	opt callstack 0
 38047                           
 38048                           	psect	rparam
 38049  0000                     
 38050                           	psect	temp
 38051  000001                     btemp:
 38052                           	opt callstack 0
 38053  000001                     	ds	32
 38054  0000                     wtemp0	set	btemp
 38055  0000                     wtemp1	set	btemp+2
 38056  0000                     wtemp2	set	btemp+4
 38057  0000                     wtemp3	set	btemp+6
 38058  0000                     wtemp4	set	btemp+8
 38059  0000                     wtemp5	set	btemp+10
 38060  0000                     wtemp8	set	btemp+1
 38061  0000                     ttemp0	set	btemp
 38062  0000                     ttemp1	set	btemp+3
 38063  0000                     ttemp2	set	btemp+6
 38064  0000                     ttemp3	set	btemp+9
 38065  0000                     ttemp5	set	btemp+1
 38066  0000                     ttemp6	set	btemp+4
 38067  0000                     ttemp7	set	btemp+8
 38068  0000                     ltemp0	set	btemp
 38069  0000                     ltemp1	set	btemp+4
 38070  0000                     ltemp2	set	btemp+8
 38071  0000                     lltemp0	set	btemp
 38072  0000                     lltemp1	set	btemp+8
 38073  0000                     lltemp2	set	btemp+16
 38074  0000                     lltemp3	set	btemp+24
 38075                           tosu	equ	0x3FFF
 38076                           tosh	equ	0x3FFE
 38077                           tosl	equ	0x3FFD
 38078                           stkptr	equ	0x3FFC
 38079                           pclatu	equ	0x3FFB
 38080                           pclath	equ	0x3FFA
 38081                           pcl	equ	0x3FF9
 38082                           tblptru	equ	0x3FF8
 38083                           tblptrh	equ	0x3FF7
 38084                           tblptrl	equ	0x3FF6
 38085                           tablat	equ	0x3FF5
 38086                           prodh	equ	0x3FF4
 38087                           prodl	equ	0x3FF3
 38088                           indf0	equ	0x3FEF
 38089                           postinc0	equ	0x3FEE
 38090                           postdec0	equ	0x3FED
 38091                           preinc0	equ	0x3FEC
 38092                           plusw0	equ	0x3FEB
 38093                           fsr0h	equ	0x3FEA
 38094                           fsr0l	equ	0x3FE9
 38095                           wreg	equ	0x3FE8
 38096                           indf1	equ	0x3FE7
 38097                           postinc1	equ	0x3FE6
 38098                           postdec1	equ	0x3FE5
 38099                           preinc1	equ	0x3FE4
 38100                           plusw1	equ	0x3FE3
 38101                           fsr1h	equ	0x3FE2
 38102                           fsr1l	equ	0x3FE1
 38103                           bsr	equ	0x3FE0
 38104                           indf2	equ	0x3FDF
 38105                           postinc2	equ	0x3FDE
 38106                           postdec2	equ	0x3FDD
 38107                           preinc2	equ	0x3FDC
 38108                           plusw2	equ	0x3FDB
 38109                           fsr2h	equ	0x3FDA
 38110                           fsr2l	equ	0x3FD9
 38111                           status	equ	0x3FD8


Data Sizes:
    Strings     1285
    Constant    492
    Data        1073
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     254
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_115(CODE[1]), STR_77(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_112(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), 
		 -> STR_93(CODE[3]), STR_89(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_112(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), 
		 -> STR_93(CODE[3]), STR_89(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), 
		 -> STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), 
		 -> STR_66(CODE[15]), STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), 
		 -> STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), 
		 -> STR_66(CODE[15]), STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_60(CODE[9]), STR_59(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_60(CODE[9]), STR_59(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_84(CODE[4]), STR_83(CODE[4]), STR_80(CODE[4]), STR_79(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_84(CODE[4]), STR_83(CODE[4]), STR_80(CODE[4]), STR_79(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_58(CODE[3]), STR_57(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6495_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), 
		 -> STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), 
		 -> STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), 
		 -> STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), 
		 -> STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), 
		 -> STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), 
		 -> STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_59(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_59(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_60(CODE[9]), 
		 -> STR_59(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S4899tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_60(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_59(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  596808
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   1     1      0  125084
                             _WaitMs
                   _cal_current_zero
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     4      1     266
                        _check_range
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
       _get_raw_result
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46F      58        0.0%
DATA                 0      0     97C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb  7 03:23:01 2020

                     _SPI1_Exchange8bit C92E                __end_of_set_display_info C9A6  
                                     _C 06FF                                       _D 082A  
                                     _H 01C7                                       _P 01F2  
                                     _R 00AF                                       _S 0254  
                                     _T F9DD                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C66E            __end_of_start_switch_handler C90E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FAE5                  __end_of_FVR_Initialize CB7A  
                        _check_day_time 8E32                             __CFG_LVP$ON 000000  
                                   l169 CA66                                     l807 C93C  
                                   l673 C526                                     _GIE 01FE97  
                                   _abs BF42                                     _pad A230  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize CA12  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C840  
                     _update_adc_result C1D2                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C7D4  
                          __CFG_ZCD$OFF 000000                                    l1002 C14E  
                                  l2011 8FC0                                    l2007 8FC8  
                                  l2202 77E8                                    l3100 5396  
                                  l1190 C18E                                    l2160 3E2C  
                                  l1336 12A2                                    l1353 194E  
                                  l1363 19F2                                    l1355 1952  
                       _timer3ReloadVal 009E                                    l2156 3AEE  
                                  l1612 B054                                    l2420 6C00  
                                  l1700 8A6E                                    l2261 A28C  
                                  l2317 123A                                    l2077 9DA8  
                                  l1373 1BF6                                    l2086 885A  
                                  l1374 1E1E                                    l3055 4E1C  
                                  l3207 BF82                                    l1631 C2CA  
                                  l3136 4660                                    l1616 B36E  
                                  l2281 593A                                    l2361 0B1A  
                                  l2346 066A                                    l3067 4CAC  
                                  l3307 9FF6                                    l2435 616C  
                                  l1707 A450                                    l1379 23E6  
                                  l1484 BBF2                                    l3238 7F94  
                                  l1398 684C                                    l1831 5856  
                                  l3176 8C6C                                    l1912 AB62  
                                  l1690 C228                                    l3602 B50A  
                                  l1747 C9A2                                    l2485 33C8  
                  _ADCC_StartConversion CA80                                    l2815 95D6  
                                  l3199 915E                                    l2399 78D6  
                                  l1871 B70C                                    l1947 8E28  
                                  l1699 8912                                    l2781 9664  
                                  l3574 863A                                    l1887 AE46  
                                  l2777 AC26                                    l1994 A572  
                                  l2788 9738                                    l3589 B58E  
                                  l8103 47F0                                    l9001 94C0  
                                  l8211 4C5C                                    l8115 4858  
                                  l8107 4806                                    l8109 4836  
                                  l8045 B1D0                                    l8047 B1F2  
                                  l8233 4CEC                                    l8209 4C36  
                                  l8161 4A3A                                    l8145 4996  
                                  l8073 46C0                                    l9025 956E  
                                  l9017 9542                                    l9041 933C  
                                  l8243 4D14                                    l8227 4CCE  
                                  l8219 4C90                                    l8155 4A08  
                                  l8091 477E                                    l8083 4716  
                                  l9027 9584                                    l9019 955E  
                                  l8229 4CE0                                    l8165 4A44  
                                  l8085 4746                                    l8413 696E  
                                  l9053 940E                                    l8247 4D1A  
                                  l8159 4A28                                    l8079 4700  
                                  l8281 4DFC                                    l8273 4DBC  
                                  l8193 4B2C                                    l8169 4A74  
                                  l8097 47B0                                    l8433 6B24  
                                  l9073 9C1C                                    l9065 9B70  
                                  l8275 4DCC                                    l8259 4D78  
                                  l8187 4B10                                    l8603 5072  
                                  l8531 8376                                    l8523 82CA  
                                  l8515 8242                                    l8371 90FC  
                                  l8427 6A8C                                    l8269 4DA4  
                                  l8189 4B22                                    l8197 4B5E  
                                  l8621 5138                                    l8613 5102  
                                  l8357 BF72                                    l8381 9156  
                                  l8437 6B92                                    l8429 6ADC  
                                  l8623 514A                                    l8631 51A2  
                                  l8551 4E7C                                    l8471 7B0C  
                                  l8375 9100                                    l8455 B4FA  
                                  l8801 4470                                    l8713 3ED6  
                                  l8561 4ED2                                    l9089 BCDE  
                                  l8731 3FA4                                    l8715 3EDC  
                                  l8707 3E96                                    l8643 51EC  
                                  l8571 4F5A                                    l8563 4F02  
                                  l8483 7BA6                                    l8805 4496  
                                  l8733 3FAA                                    l8725 3F64  
                                  l8717 3F0C                                    l8661 5262  
                                  l8637 51D0                                    l8629 519E  
                                  l8581 4FB0                                    l8557 4EBC  
                                  l8477 7B60                                    l8815 44E0  
                                  l8743 3FFC                                    l8735 3FDA  
                                  l8671 52D6                                    l8647 5212  
                                  l8583 4FE0                                    l8495 7C78  
                                  l8903 99DA                                    l8399 B57E  
                                  l8833 45A0                                    l8657 525C  
                                  l8577 4F9A                                    l9705 7F84  
                                  l9721 84AC                                    l8819 44E6  
                                  l8691 537A                                    l8683 5342  
                                  l8595 5058                                    l8923 A162  
                                  l8915 A138                                    l9723 8518  
                                  l8829 455A                                    l8677 5312  
                                  l8589 501E                                    l8941 A216  
                                  l8933 A1E2                                    l8847 460E  
                                  l8839 45CA                                    l9671 7D66  
                                  l8919 A14A                                    l8849 4628  
                                  l8689 536A                                    l8881 9900  
                                  l8953 ABF0                                    l8795 4454  
                                  l8971 96B2                                    l9691 7E80  
                                  l8875 98E0                                    l8965 9622  
                                  l9685 7E06                                    l9669 7D44  
                                  l8869 98CA                                    l8957 AC24  
                                  l8949 ABAE                                    l8983 9736  
                                  l8975 9700                                    l9695 7EE8  
                                  l9687 7E1E                                    l9679 7DDA  
                                  l8895 99A6                                    l8991 BE40  
                                  STR_1 FEDF                                    STR_2 FEA0  
                                  l9689 7E42                                    STR_3 FFD1  
                                  STR_4 FE4C                                    STR_5 FDCE  
                                  STR_6 FDCE                                    STR_7 FDCE  
                                  STR_8 FE37                                    l9991 8B4C  
                                  STR_9 FBC9                                    l9993 8B6A  
                                  l9987 8B28                                    l9979 8ABC  
                                  l9989 8B36                                    l9999 8B98  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6010 4D0C  
                                  u6120 C40C                                    u6050 4D68  
                                  u6130 C40E                                    _T6PR 003F93  
                                  u6300 9150                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u6230 BF56  
                                  _PMD2 0039C2                                    u6055 4D58  
                                  _PMD3 0039C3                                    u7200 45B4  
                                  u6080 4D88                                    u6240 9080  
                                  _PMD4 0039C4                                    u7105 440E  
                                  _PMD5 0039C5                                    u6410 6A32  
                                  u6330 B53C                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u7140 44D8  
                                  u6340 B53E                                    u6245 9076  
                                  u7070 3FEA                                    u6510 C46C  
                                  u6430 6B0A                                    u6415 6A28  
                                  u5800 49DC                                    u6520 C46E  
                                  u7320 A18E                                    u6360 6906  
                                  u5801 49D6                                    u5650 B220  
                                  u6610 7CB0                                    u7250 992C  
                                  u6290 914E                                    u6370 6952  
                                  u6435 6B00                                    u7180 4534  
                                  u6540 7B06                                    u6700 82F6  
                                  u7340 A202                                    u6460 C006  
                                  u7085 417E                                    u6285 9130  
                                  u6365 68FC                                    u7190 456E  
                                  u5910 4B54                                    u6630 7D02  
                                  u7270 99C6                                    u6470 C008  
                                  u7095 4246                                    u5840 4A6C  
                                  u6560 7B5C                                    u6720 83AE  
                                  u7440 BE3C                                    u7520 958C  
                                  u5680 C43C                                    u6480 B4B8  
                                  u7185 4524                                    u5657 B212  
                                  u5850 4A8C                                    u5818 49DE  
                                  u7450 94A0                                    u5690 C43E  
                                  u7610 9B6A                                    u6490 B4BA  
                                  u5915 4B44                                    u6571 7B66  
                                  u6395 698C                                    u6580 7BA0  
                                  u6740 8400                                    u6660 823C  
                                  u7380 AC20                                    u7540 95B6  
                                  u7460 94B4                                    u6396 6992  
                                  u7620 9B9C                                    u5845 4A5C  
                                  u6397 69A0                                    u5950 4C7E  
                                  u5790 49BC                                    u6590 7BD2  
                                  u7470 94EE                                    u7455 9496  
                                  u7551 92FC                                    u6920 5254  
                                  u6680 8292                                    u7560 9336  
                                  u7640 9C54                                    u6690 82C4  
                                  u7570 9368                                    u7475 94E4  
                                  u7660 BCBA                                    u5990 4CF2  
                                  u9414 56C2                                    u9334 53BC  
                                  u7670 BCDA                                    u7590 9446  
                                  u9415 56BC                                    u9335 53B6  
                                  u6960 52B0                                    u6880 51CA  
                                  u9440 56EC                                    u8800 7F30  
                                  u6970 52EA                                    u9290 8BE0  
                                  u9434 56E4                                    u9354 53EC  
                                  u9435 56DE                                    u9355 53E6  
                                  u6980 5326                                    u8900 C88E  
                                  u6965 52A0                                    u9374 540E  
                                  u9375 5408                                    u9615 C042  
                                  u8840 8546                                    u9394 55F4  
                                  u8770 7DD6                                    _PLLR 01CEE0  
                                  u9715 B9E2                                    u9395 55EE  
                                  u9716 B9E4                                    u9708 B9B0  
                                  u9660 B5CC                                    u8790 7F2E  
                                  u8847 8538                                    u9840 8C8C  
                                  u8880 85E0                                    u9690 B9AE  
                                  u8890 860E                                    u8885 85DA  
                                  u9765 CAAC                                    u9870 AAEE  
                                  u9766 CAAE                                    u8887 85CC  
                                  u9775 CA9C                                    u9776 CA9E  
                                  u8897 8600                                    u9890 AB3A  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR C500                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0297                                    _cp_h FAF5  
                                  _cp_l FAF1                                    _atoi 7D2A  
                                  _ctoa B408                                    _main 1244  
                                  _dtoa 585C                                    _nanf BACC  
                                  _seed 01F6                                    _prec 003C  
                                  _nout 009A                                    _spin FA6D  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 77EC  
                                  btemp 0001                                    _utoa 6BBC  
                                  _xtoa 6128                  __end_of_check_adc_scan CB62  
                         ___fpclassifyf 8FD2                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00A2               __end_of_SPI1_Exchange8bit C94C  
             __size_of_clear_hid_pflags 0066                         _TMR3_Initialize BEFA  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr C738                            ___param_bank 000000  
                __end_of_check_day_time 8FD2                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR CB0A                        __end_of_INT1_ISR C1D2  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma B05C  
         __end_of_OSCILLATOR_Initialize CA6C                                   l10001 8BB6  
                                 l10011 8BEA                                   l10003 8BCC  
                                 l10021 8C4C                                   l10031 53A2  
                                 l10103 C59E                                   l10203 8F6E  
                                 l10051 55DA                                   l10037 53D2  
                                 l10221 C2D4                                   l11023 9B1C  
                                 l11015 9AA2                                   l11007 9A38  
                                 l10071 5788                                   l10063 56A8  
                                 l10047 54F8                                   l10313 BD1A  
                                 l11009 9A6A                                   l10059 560C  
                                 l11131 AC42                                   l10077 5824  
                                 l10085 5836                                   l10333 B5D0  
                                 l11207 C522                                   l10191 8EFC  
                                 l11135 ACBE                                   l11233 C136  
                                 l11251 C176                                   l13003 6232  
                                 l10275 C4B8                                   l11403 7530  
                                 l11413 7576                                   l11405 7540  
                                 l13103 268A                                   l11423 75AC  
                                 l11407 7546                                   l12401 9F0C  
                                 l13105 26C4                                   l11441 762E  
                                 l11433 75E0                                   l11417 7582  
                                 l10723 BD78                                   l11195 C8E8  
                                 l10811 8CEE                                   l13043 6498  
                                 l13019 6328                                   l13027 63AE  
                                 l13123 283E                                   l13107 26DA  
                                 l12413 B25C                                   l13141 29C2  
                                 l13133 28D6                                   l13301 AF32  
                                 l11429 75D4                                   l10719 BD46  
                                 l10807 8CDA                                   l11383 92C8  
                                 l12503 B426                                   l13303 AF74  
                                 l11471 77AE                                   l14023 2396  
                                 l14015 2360                                   l11721 B65C  
                                 l12417 B29A                                   l12505 B452  
                                 l12601 00F0                                   l13233 31BE  
                                 l13209 2F8C                                   l13145 2A16  
                                 l13081 2508                                   l12433 72C0  
                                 l11545 ACF0                                   l10825 AAF2  
                                 l11449 7654                                   l11473 77D8  
                                 l13401 9CDC                                   l14017 2378  
                                 l14009 234E                                   l11715 B64C  
                                 l13219 3042                                   l13083 2542  
                                 l13331 B080                                   l14027 23BC  
                                 l12541 5992                                   l12621 0216  
                                 l13253 3350                                   l13165 2C28  
                                 l13157 2B70                                   l13085 2558  
                                 l12453 7496                                   l12445 73E8  
                                 l13325 B060                                   l11549 AD2E  
                                 l10781 A644                                   l14037 2412  
                                 PRLOCK 0039EF                                   l12471 A296  
                                 l12551 5BA4                                   l12623 022C  
                                 l13247 32F6                                   l13263 3374  
                                 l12439 737E                                   l13327 B068  
                                 l10839 AB40                                   l10775 A592  
                                 l10919 C1F2                                   l13407 9D42  
                                 l10943 B6CA                                   l13433 357C  
                                 l13425 34BC                                   l11593 611A  
                                 l12465 A25C                                   l12537 5974  
                                 l12529 592A                                   l12713 06B8  
                                 l12609 0146                                   l13257 3354  
                                 l13169 2C5C                                   l13281 B15C  
                                 l13329 B072                                   l13337 B088  
                                 l13361 A368                                   l12475 A2D2  
                                 l12571 5C56                                   l12723 077A  
                                 l12619 01EA                                   l12627 0258  
                                 l13339 B0B4                                   l10955 B6E2  
                                 l10963 A062                                   l13445 36EA  
                                 l13437 35E8                                   l13429 3510  
                                 l10877 C23E                                   l12469 A284  
                                 l12485 A94A                                   l12733 0926  
                                 l12717 06F0                                   l12653 0396  
                                 l12637 02FC                                   l12645 032A  
                                 l13189 2DBC                                   l13455 3916  
                                 l10799 8CAE                                   l12479 A31C  
                                 l12575 5C92                                   l12807 0EA2  
                                 l12663 04D2                                   l12911 7948  
                                 l13199 2E6A                                   l13711 8A0A  
                                 l10967 A0C4                                   l13473 3B20  
                                 l13465 3A56                                   l13449 373E  
                                 l10993 9A0C                                   l12833 0FD6  
                                 l12681 058E                                   l12657 0406  
                                 l12921 7A02                                   l13617 6794  
                                 l13459 3990                                   l10995 9A1C  
                                 l12835 0FF0                                   l12819 0F3A  
                                 l12771 0C32                                   l12755 0B12  
                                 l12747 0A48                                   l12675 0554  
                                 l12659 0470                                   l12915 7978  
                                 l12907 790C                                   l13619 67A2  
                                 l13643 874C                                   l13627 8658  
                                 l13485 3E24                                   l13469 3AFE  
                                 l10997 9A22                                   l12845 1092  
                                 l12757 0B34                                   l12589 00AC  
                                 l12925 7A2E                                   l13581 65B8  
                                 l13653 8824                                   l13901 1956  
                                 l10999 9A30                                   l13671 B7F0  
                                 l12871 119A                                   l12855 10E2  
                                 l12783 0CBA                                   l12791 0D24  
                                 l12695 05F6                                   l12687 0594  
                                 l12679 057C                                   l12951 6C4C  
                                 l12943 6BF0                                   l13903 1984  
                                 l12697 0602                                   l12929 7A6A  
                                 l12961 6E42                                   l13593 662E  
                                 l13585 65CC                                   l13761 128C  
                                 l12891 7858                                   l13923 19DE  
                                 l13915 19B8                                   l13819 1472  
                                 l13933 1A02                                   l13765 12AA  
                                 l12799 0D90                                   l12983 615C  
                                 l13767 12BC                                   l13759 1284  
                                 l13697 88E2                                   l13961 20BA  
                                 l13945 1B02                                   l13865 16DA  
                                 l12995 61D2                                   l13971 223C  
                                 l12989 6196                                   l13957 205A  
                                 l13973 2268                                   l13877 17B4  
                                 l13895 1944                                   l13987 22BE  
                                 l13999 2310                         __end_of___aodiv 7D2A  
                          _Volts_to_SOC AC30                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4E26  
                                 _ADCLK 003EFF                         __end_of___aomod 8424  
                                 _ADPCH 003EF1                         __end_of___fldiv 53A0  
                                 _ADREF 003EFD                         __end_of___awdiv 99F4  
                       __end_of___flneg BE6A                                   STR_10 FC84  
                                 STR_11 FD60                                   STR_12 FE61  
                                 STR_21 FF82                                   STR_13 FE76  
                                 STR_14 FF33                                   STR_30 FD8C  
                                 STR_22 FD4A                                   STR_15 FF09  
                                 STR_23 FD34                                   STR_31 FC9A  
                                 STR_40 FDB8                                   STR_24 FD1E  
                                 STR_32 FCB0                                   STR_16 FC6E  
                                 STR_41 FDB8                                   STR_25 FD08  
                                 STR_33 FCC6                                   STR_17 FB95  
                         __CFG_WDTE$OFF 000000                                   STR_42 FDB8  
                                 STR_50 FE22                                   STR_26 FCF2  
                                 STR_34 FC12                                   STR_18 FBAF  
                                 STR_51 FEF4                                   STR_19 FF93  
                                 STR_43 FEF4                                   STR_27 FCDC  
                                 STR_35 FC57                                   STR_60 FFC8  
                                 STR_52 FE0D                                   STR_44 FDF8  
                                 STR_28 FDA2                                   STR_36 FB78  
                       __end_of___awmod A230                                   STR_61 FF5C  
                                 STR_53 FECA                                   STR_45 FE8B  
                                 STR_29 FD76                                   STR_37 FBFB  
                                 STR_62 FF5C                                   STR_54 FEF4  
                                 STR_70 FF6F                                   STR_46 FF48  
                                 STR_38 FC29                                   STR_55 FDE3  
                                 STR_47 FF48                                   STR_63 FFBE  
                                 STR_39 FC40                                   STR_64 FFBE  
                                 STR_80 FFDE                                   STR_48 FF1E  
                                 STR_56 FEB5                                   _ADRPT 003EEC  
                                 STR_57 FFFB                                   STR_65 FFA3  
                                 STR_49 FDE3                                   STR_66 FFA3  
                                 STR_58 FFF8                                   STR_67 FFA3  
                                 STR_91 FFEF                                   STR_83 FFDA  
                                 STR_59 FFB2                                   STR_84 FFE2  
                                 STR_68 FBE3                                   STR_77 FB77  
                                 STR_93 FFEF                                   STR_78 FAF9  
                                 STR_87 FFE9                                   STR_79 FFD6  
                                 STR_96 FFEC                         __end_of___flmul 466A  
                                 STR_89 FFE9                                   STR_98 FFEC  
                       __end_of___flsub BFCE                         __end_of___fltol 95E0  
                                 u10010 C8B6                                   u10016 C8B8  
                                 u11210 9F00                                   u12020 10B8  
                                 u11230 9F7C                                   u11400 588E  
                                 u12040 116E                                   u12120 796E  
                                 u12050 1170                                   u12130 79B4  
                       __end_of___lodiv 946E                                   u12211 6E84  
                                 u11500 5C12                                   u11420 58FE  
                                 u11340 A9C4                                   u12220 6E9A  
                                 u12300 627E                                   u12221 6E98  
                                 u11510 5C16                                   u12230 6EAE  
                                 u12310 6280                                   u11440 5910  
                                 u11600 0194                                   u12160 7A90  
                                 u12240 6EB2                                   u12400 6424  
                                 u12137 79A6                                   u11530 5C2C  
                                 u11610 0196                                   u12410 6428  
                                 u12330 62DE                                   u11290 750A  
                                 _U1P1H 003DED                                   u11347 A9B6  
                                 u11460 5960                                   u12180 6BD6  
                                 u12340 62E0                                   u12260 6142  
                                 _U1P2H 003DEF                                   u11470 5BB8  
                                 u11390 588C                                   u12510 2722  
                                 u13230 158C                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u11720 0562                                   u11640 02A6  
                                 u12360 63AA                                   u12600 2A9E  
                                 u12520 2724                                   u13400 22C6  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11481 5BE8                                   u11490 5BFE  
                                 u11650 02A8                                   u11570 00DA  
                                 u12370 63CA                                   u12290 622A  
                                 u12530 274A                                   u13170 8A5A  
                                 u13410 22D8                                   u13250 17E2  
                                 _U1P3L 003DF0                                   u11491 5BFC  
                                 u12700 3096                                   u12460 25A0  
                                 u13180 8A5C                                   u13260 190C  
                                 u12381 63FA                                   u12365 638C  
                                 u11750 05C6                                   u12390 6410  
                                 u12630 2D16                                   u12470 25A2  
                                 u13406 22C8                                   u13270 190E  
                                 _U2P1L 003DD4                                   u12391 640E  
                                 u12720 3246                                   u12640 2D18  
                                 u12480 25C8                                   u13416 22DA  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11690 050E                                   _U2P3L 003DD8  
                                 u11860 0A18                                   u12580 292A  
                                 u12740 B13C                                   u12820 9D1E  
                                 u11790 0648                                   u13390 22AE  
                                 _T5CLK 003F9D                                   u11960 0EE4  
                                 u12808 9CBA                         __end_of___lomod 9C76  
                                 u12850 9D84                                   u13396 22B0  
                                 _T2HLT 003FAD                                   u12838 9D20  
                                 u12790 9CB8                                   _T5CON 003F9A  
                                 u12868 9D86                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0085                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result C20C  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR CB94                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 64E2       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 98A6                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero AAA6                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A822                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR C9FA                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf AE58  
                                 _flags 003E                    __size_of_check_range 0080  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay CAFC  
                                 _fputc 9EDC              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha C012                                   _fputs B24C  
                       __end_of_isdigit C478                         __end_of_ivln2_h FAF1  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand C2E8  
                                 _width 003A                                   _putch C9C4  
          __end_of_set_ac_charger_relay CAD2                         __end_of_islower C418  
                       __end_of_isspace BCEE                _INT1_SetInterruptHandler C696  
                       __end_of_set_dac AE58                         __end_of_isupper C448  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler C61E             _UART1_SetRxInterruptHandler C5F6  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf A55E  
                       __end_of_tolower B598                         __end_of_strncmp 8644  
                       __end_of_toupper B514               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr C760                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize BEB2                   __end_of_ringBufS_init C57E  
                       __initialization A822                       _UART2_rx_vect_isr C788  
                          __end_of_cp_h FAF9                            __end_of_cp_l FAF5  
                          __end_of_atoi 7F9E                            __end_of_ctoa B490  
                          __end_of_main 2426                            __end_of_dtoa 5CDC  
                          __end_of_nanf BB2E                            __end_of_spin FAE5  
                          __end_of_stoa 7AAA                            __end_of_utoa 6EFC  
                          __end_of_xtoa 64E2                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize CA2A  
                 __end_of_send_lcd_data C7D4                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B7FA                _TMR5_SetInterruptHandler C646  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 007C                       _port_data_dma_ptr CB24  
                    esr_check@esr_state 00A4                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize C52C  
                       _PWM8_Initialize CA40                        _UART1_Initialize BE6A  
                     _UART2_tx_vect_isr C760                      _UART2_Transmit_ISR C500  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan BA06  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_101 FFF2                                  STR_110 FFE6  
                                STR_103 FFF2                                  STR_112 FFE6  
                                STR_106 FFF5                                  STR_108 FFF5  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue C012  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A7D2                                  _RB6PPS 003A0E  
                                i1l1207 980E                    _start_switch_handler C8EE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize BF42                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright CAE0  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u952_20 8E88                                  u947_25 CACC  
                                u947_26 CACE                    __size_of_hid_display 021C  
                                u975_20 C24C                                  u975_26 C24E  
                                u968_20 CAF8                        __end_of___xxtofl 8C76  
 __end_of_ADCC_DischargeSampleCapacitor CB5A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor CB52                __end_of_send_lcd_cmd_dma C96A  
                       _TMR3_WriteTimer C154                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr C7B0              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize CB1A                        _UART2_Initialize BB2E  
                                _WaitMs C2B2                         _conv_raw_result 53A0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 95E0                                  ___fleq AB6C  
                     _ADCC_ThresholdISR B8D0                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush B2E4                                  _efgtoa 0000  
                                _floorf 6850                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A8                       dac_spi_control@S2 00A7  
                     dac_spi_control@SB 00A5                       dac_spi_control@SC 00A6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 7228  
                  __size_of_help_button 0038                                  clear_0 A894  
                                clear_1 A8A8                                  clear_2 A8BA  
                                clear_3 A8C6                                  clear_4 A8D2  
                                clear_5 A8DE                                  clear_6 A8EA  
             __end_of_port_data_dma_ptr CB2E                                  _printf BA6A  
                    _eaDogM_WriteString B104                                  _strcpy A902  
                             ?_ADCC_ISR 0021                                  _strlen B1AA  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize B864                          _PMD_Initialize CA6C  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr C788  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan BA6A  
                          __mediumconst F90C                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay BC42                        __end_of_spinners A654  
                      __end_of_vfprintf AFB2                              _StartTimer C0D4  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize BEFA                       _SYSTEM_Initialize BDD8  
                            __accesstop 0060                 __end_of__initialization A8FC  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help CB72                    __end_of_display_info CB6A  
             __end_of_CLKREF_Initialize CB24                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer C114  
                 _set_temp_display_help CAB2                        _clear_hid_pflags B93A  
                 __end_of_TMR3_CallBack C840               __end_of_ADCC_ThresholdISR B93A  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush B376  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 C27C  
                          __pidataBANK1 A9D6             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf AF06                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc A000  
                         __end_of_fputs B2E4                    _get_ac_charger_relay CAEE  
                         __end_of_srand C31C                   __end_of_TMR5_CallBack C81C  
                         __end_of_putch C9DE                    _set_ac_charger_relay CAC2  
               __end_of_PWM8_Initialize CA56                 __end_of_TMR6_Initialize C556  
                     _adc_int_t_handler B618                  __end_of_PMD_Initialize CA80  
                            __end_of_bp FAED                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack C888             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR CB3C                   TMR3_ISR@CountCallBack 009C  
                        _clear_adc_scan CB7A                      __size_of_hid_input 0138  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0091  
             __end_of_SYSTEM_Initialize BE22                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer C194  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 8860  
               __end_of_conv_raw_result 585C                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0097                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone C5A6  
                      _DMA1_DMADCNT_ISR CB30                         _convert_dac_raw A000  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma C3B8                   __end_of_wait_lcd_done C8AA  
              __end_of_cal_current_zero AB6C        __end_of_TMR3_SetInterruptHandler C696  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C646  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B8CE  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B696  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B788  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C70E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C6E6                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C8CC                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan CB80  
                               u1002_28 9A12                                 u1004_20 9A2C  
                               u1004_21 9A26                                 u1008_24 9B12  
                               u1008_25 9B0E                                 u1044_48 C874  
                               u1036_48 C850                                 u1302_28 C82C  
                               u1038_28 C7E4                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR CB0C                                 u1047_28 C808  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1079_44 B67C  
                               u1079_45 B676                                 u1295_20 3A46  
                               u1297_20 3B10                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B696                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3E40  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch C4A6  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer C154  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one CAB2              __end_of_set_load_relay_two CAA2  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 9168                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C9FA                                 __Lparam 0000  
              __end_of_UART1_Initialize BEB2                       __end_of_hid_input 9DAE  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7AAA  
                               ___fladd 466A                                 ___aomod 81E4  
                               ___fldiv 4E26                                 ___awdiv 98A6  
                               ___flneg BE22                                 ___awmod A118  
                               ___flmul 3E40                                 ___flsub BF88  
                               ___fltol 946E                                 ___lodiv 92EE  
                               ___lomod 9B36               __end_of_UART1_Receive_ISR C8EE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A73E                                 __pcinit A822  
              __end_of_mode_lamp_bright CAEE                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand CAD2  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 BB8E                                 __ptext2 C8EE  
                               __ptext3 C2E8                                 __ptext4 C31C  
                               __ptext5 C350                                 __ptext6 A000  
                               __ptext7 ADA2                                 __ptext8 B696  
                               __ptext9 C3B8                       __end_of_esr_check 77EC  
                     _UART2_Receive_ISR C90E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize CA56  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 81E4                                 _isalpha BFCE  
                               _isdigit C448                                 us664999 7D14  
                               us760999 9458                                 _ivln2_h FAED  
                               us675999 8412                                 us765999 9C66  
                             _T3CONbits 003FA6                                 _mode_sw 00A9  
                     __end_of_lp_filter 8E32                                 _islower C3E8  
                               _isspace BC9C                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac ADA2  
              __end_of_UART2_Initialize BB8E                                 _isupper C418  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf A454  
                               _tolower B514                   __size_of_display_help 0008  
                               _utctime 01EE                 __end_of_convert_dac_raw A118  
                 __size_of_display_info 0008                                 _strncmp 8424  
                               _toupper B490                    end_of_initialization A8FC  
             __size_of_convert_adc_data 00B8                      _check_enter_button B788  
                     __end_of_set_dac_a C384                       __end_of_set_dac_b C350  
                             i1u1319_20 9804     __end_of_UART2_SetRxInterruptHandler C5F6  
           _UART2_SetRxInterruptHandler C5CE                               i2u1090_48 C79C  
                             i2u1082_48 C4EC                               i2u1084_48 B906  
                             i2u1084_49 B91A                 check_day_time@day_delay 0041  
                             i2u1086_48 C74C                               i2u1088_48 C774  
                     __end_of_set_vterm C988                       __end_of_vfpfcnvrt 33D2  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd CB8C  
             __end_of_UART2_Receive_ISR C92E                          wdtdelay@dcount 0078  
               __end_of_dac_spi_control B710             __size_of_current_sensor_cal 036E  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc CB92                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler C66E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler C61E                            _display_help CB6A  
                 _TMR5_InterruptHandler 007F                            _display_info CB62  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B9A0  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler C736  
           _ADCC_SetADIInterruptHandler C70E                              _update_lcd A344  
                       _calc_model_data 5CDC                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc BB8E  
                       _DMA1_Initialize B7FA                     __end_of_check_range B618  
                            _start_bsoc C8AA                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize CA2A                   __end_of_get_vterm_ptr C4A6  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs C2E8            __end_of_INTERRUPT_Initialize BA06  
                            _vterm_dump 9DAE                          __end_of___flge 9742  
                        __end_of___fleq AC30    __end_of_INT0_DefaultInterruptHandler CBA0  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler CB9E  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize BC42  
                         __pidataBIGRAM 6EFC                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6BBC             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 7514  
                        __end_of_printf BACC                __end_of_DMA1_DMADCNT_ISR CB3A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C864  
                        __end_of_strcpy A9D6                          __end_of_strlen B24C  
                   start_initialization A822    __end_of_TMR5_DefaultInterruptHandler C27C  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler C244  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs BF88  
                 __end_of_INT1_CallBack C7F8               __size_of_set_display_info 001E  
                           __end_of_pad A344                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd C0D4                          _switch_handler 99F4  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 9168  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR CB1A  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR CB48  
                   __end_of_hid_display 8860              __end_of_send_port_data_dma BD40  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone C57E  
                         _ringBufS_init C556                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize C3B8  
               __end_of_calc_model_data 6128                           _send_lcd_data C7B0  
                   __end_of_help_button C244         __end_of_eaDogM_WriteStringAtPos B104  
                   __end_of_BVSOC_TABLE F9DD                               ___asfladd B710  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B864                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A                             _check_range B598  
      __end_of_INT0_SetInterruptHandler C6E6                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9B36                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize CA40                _UART1_RxInterruptHandler 008B  
              _UART2_TxInterruptHandler 008E                               __end_of_T FA6D  
                      _convert_adc_data ACEA                               _calc_bsoc 33D2  
             __size_of_ringBufS_put_dma 00AA                            _init_display A654  
                __end_of_DMA1_DMAOR_ISR CB52                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0082                      calc_ror_data@bcror 0068  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize BC9C  
                    calc_ror_data@bvror 006C                  _PIN_MANAGER_Initialize B376  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set CB86  
                         __pmediumconst F90C                               __ptext100 CB6A  
                             __ptext101 B788                               __ptext110 5CDC  
                             __ptext102 9168                               __ptext111 CB8C  
                             __ptext103 AE58                               __ptext120 C5CE  
                             __ptext112 C8AA                               __ptext104 53A0  
                             __ptext121 BE6A                               __ptext113 8C76  
                             __ptext105 BACC                               __ptext130 CA2A  
                             __ptext122 C5F6                               __ptext114 BF88  
                             __ptext106 C9A6                               __ptext131 CA40  
                             __ptext123 C52C                               __ptext115 466A  
                             __ptext107 8A72                               __ptext140 BC42  
                             __ptext132 CA6C                               __ptext124 C61E  
                             __ptext116 3E40                               __ptext108 4E26  
                             __ptext141 B7FA                               __ptext133 B376  
                             __ptext125 BEB2                               __ptext117 BDD8  
                             __ptext109 95E0                               __ptext150 A740  
                             __ptext142 CB1A                               __ptext134 CA56  
                             __ptext126 C646                               __ptext118 BB2E  
                             __ptext151 C114                               __ptext143 B864  
                             __ptext135 B9A0                               __ptext127 BEFA  
                             __ptext119 C5A6                               __ptext160 CB9C  
                             __ptext152 C7F8                               __ptext144 C6E6  
                             __ptext136 CB72                               __ptext128 C66E  
                             __ptext161 33D2                               __ptext153 C244  
                             __ptext145 C70E                               __ptext137 C384  
                             __ptext129 CA12                               __ptext170 B618  
                             __ptext162 BCEE                               __ptext154 8E32  
                             __ptext146 C194                               __ptext138 C696  
                             __ptext171 CBA0                               __ptext163 CB24  
                             __ptext155 CAC2                               __ptext147 C7D4  
                             __ptext139 C6BE                               __ptext180 C9E0  
                             __ptext172 CBA2                               __ptext164 B710  
                             __ptext156 CAEE                               __ptext148 CB9A  
                             __ptext181 C864                               __ptext173 B8D0  
                             __ptext165 CAFC                               __ptext157 9744  
                             __ptext149 99F4                               __ptext182 BD40  
                             __ptext174 C738                               __ptext166 C840  
                             __ptext158 C154                               __ptext183 CB0C  
                             __ptext175 C8CC                               __ptext167 CB9E  
                             __ptext159 C81C                               __ptext184 CB30  
                             __ptext176 C760                               __ptext168 CB94  
                             __ptext185 CB3C                               __ptext177 C500  
                             __ptext169 C4D4                               __ptext186 CB48  
                             __ptext178 C788                               __ptext187 0000  
                             __ptext179 C90E                               _hid_input 9C76  
                    __end_of_StartTimer C114                      _set_load_relay_one CAA2  
                    _set_load_relay_two CA92                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR C4D4                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7514  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7F9E                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 8C76  
                           _hid_display 8644                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B9A0  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR CAFC  
                              _INT1_ISR C194                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a C350                               _set_dac_b C31C  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack C81C  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm C96A  
                   __size_of_update_lcd 0110                             _help_button C20C  
                              _TMR3_ISR 9744                             _BVSOC_TABLE F90D  
                              _TMR5_ISR A740                                _TMR6_ISR C9E0  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 2426                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack C7F8  
                            _ADCON0bits 003EF8                      __end_of_check_help 8A72  
                             _start_lcd CB86                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack C864  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc CB8C                        _set_display_info C988  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A836  
                             copy_data1 A85C                               copy_data2 A87E  
              _INT0_SetInterruptHandler C6BE                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler C5CE             _UART2_SetTxInterruptHandler C5A6  
                          _uart1RxCount 00AD                            _uart2RxCount 00AA  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 6850  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done C888  
                          _send_lcd_cmd C094                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler CBA2  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch C4D2                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR CB46                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 8A72                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand CAE0                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 A654                                __ptext11 C7B0  
                              __ptext20 7514                                __ptext12 C054  
                              __ptext21 C1D2                                __ptext13 C094  
                              __ptext30 64E2                                __ptext22 BA06  
                              __ptext14 C92E                                __ptext31 A55E  
                              __ptext23 CA80                                __ptext15 C556  
                              __ptext40 C478                                __ptext32 C4A6  
                              __ptext24 CB52                                __ptext16 7F9E  
                              __ptext41 C2B2                                __ptext33 AAA6  
                              __ptext25 CB7A                                __ptext17 AC30  
                              __ptext50 CB86                                __ptext42 A344  
                              __ptext34 B598                                __ptext26 CB5A  
                              __ptext18 8644                                __ptext51 B2E4  
                              __ptext43 B05C                                __ptext35 ACEA  
                              __ptext27 CA92                                __ptext19 9C76  
                              __ptext60 6BBC                                __ptext52 7228  
                              __ptext44 C94C                                __ptext36 B93A  
                              __ptext28 CAA2                                __ptext61 9B36  
                              __ptext53 BA6A                                __ptext45 C888  
                              __ptext37 8860                                __ptext29 CAD2  
                              __ptext70 8FD2                                __ptext62 92EE  
                              __ptext54 AF06                                __ptext46 BBE8  
                              __ptext38 9DAE                                __ptext71 946E  
                              __ptext63 8424                                __ptext55 2426  
                              __ptext47 BD8E                                __ptext39 A454  
                              __ptext80 B408                                __ptext72 BE22  
                              __ptext64 77EC                                __ptext56 6128  
                              __ptext48 B104                                __ptext81 A230  
                              __ptext73 AB6C                                __ptext65 0000  
                              __ptext57 B490                                __ptext49 CB80  
                              __ptext90 C96A                                __ptext82 B1AA  
                              __ptext74 A118                                __ptext66 B514  
                              __ptext58 C3E8                                __ptext91 CAB2  
                              __ptext83 B24C                                __ptext75 98A6  
                              __ptext67 C418                                __ptext59 BFCE  
                              __ptext92 C988                                __ptext84 9EDC  
                              __ptext76 585C                                __ptext68 A902  
                              __ptext93 C9FA                                __ptext85 C9C4  
                              __ptext77 BF42                                __ptext69 6850  
                              __ptext94 CAE0                                __ptext86 AFB2  
                              __ptext78 81E4                                __ptext95 C012  
                              __ptext87 7D2A                                __ptext79 7AAA  
                              __ptext96 C20C                                __ptext88 BC9C  
                              __ptext97 C57E                                __ptext89 C448  
                              __ptext98 C0D4                                __ptext99 CB62  
                      __size_of_isupper 0030                                us1207999 77FE  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1138999 5876                                us1219999 6C22  
                              us1228999 61A8                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma AFB2  
                  __end_of_Volts_to_SOC ACEA                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11E2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma C3E8  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion CA92  
                              _spi_link 01D0                                _wdtdelay BBE8  
            __end_of_UART2_Transmit_ISR C52C                                _spinners A55E  
                              _vfprintf AF06                __end_of_convert_adc_data ADA2  
            __end_of_PWM8_LoadDutyValue C054    __end_of_TMR3_DefaultInterruptHandler CB9E  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler CB9C  
  __end_of_INT1_DefaultInterruptHandler CB9C   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler CB9A                      _send_port_data_dma BCEE  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C9A6  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E4                             _uart2TxTail 0046  
             __size_of_cal_current_zero 00C6                            _wait_lcd_set CB80  
                    _EXT_INT_Initialize C384    __end_of_TMR6_DefaultInterruptHandler BD8E  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler BD40  
                     _send_lcd_data_dma BD8E    __end_of_ADCC_DefaultInterruptHandler CBA2  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler CBA0  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long C054          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help CAC2                   __end_of_calc_ror_data 92EE  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString B1AA  
                 __end_of_mode_lamp_dim CA12                 __end_of_adc_int_handler CBA4  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A454  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc BBE8  
                    __end_of_start_bsoc C8CC                          _FVR_Initialize CB72  
                __end_of_get_raw_result C9C4                        _send_lcd_cmd_dma C94C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00A0  
      __end_of_INT1_SetInterruptHandler C6BE               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma BDD8  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long C094  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR CB9A  
        __end_of_PIN_MANAGER_Initialize B408               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9EDC                 _eaDogM_WriteStringAtPos B05C  
                         _get_vterm_ptr C478                          _check_adc_scan CB5A  
             __size_of_UART2_Initialize 0060  
